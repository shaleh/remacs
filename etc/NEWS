GNU Emacs NEWS -- history of user-visible changes.

Copyright (C) 2014-2017 Free Software Foundation, Inc.
See the end of the file for license conditions.

Please send Emacs bug reports to bug-gnu-emacs@gnu.org.
If possible, use M-x report-emacs-bug.

This file is about changes in Emacs version 27.

See file HISTORY for a list of GNU Emacs versions and release dates.
See files NEWS.26, NEWS.25, NEWS.24, NEWS.23, NEWS.22, NEWS.21,
NEWS.20, NEWS.19, NEWS.18, and NEWS.1-17 for changes in older Emacs
versions.

You can narrow news to a specific version by calling 'view-emacs-news'
with a prefix argument or by typing C-u C-h C-n.

Temporary note:
+++ indicates that all necessary documentation updates are complete.
    (This means all relevant manuals in doc/ AND lisp doc-strings.)
--- means no change in the manuals is needed.
When you add a new item, use the appropriate mark if you are sure it applies,


* Installation Changes in Emacs 27.1


* Startup Changes in Emacs 27.1


* Changes in Emacs 26.1

** Security vulnerability related to Enriched Text mode is removed.

+++
*** Enriched Text mode does not evaluate Lisp in 'display' properties.
This feature allows saving 'display' properties as part of text.
Emacs 'display' properties support evaluation of arbitrary Lisp forms
as part of processing the property for display, so displaying Enriched
Text could be vulnerable to executing arbitrary malicious Lisp code
included in the text (e.g., sent as part of an email message).
Therefore, execution of arbitrary Lisp forms in 'display' properties
decoded by Enriched Text mode is now disabled by default.  Customize
the new option 'enriched-allow-eval-in-display-props' to a non-nil
value to allow Lisp evaluation in decoded 'display' properties.

This vulnerability was introduced in Emacs 21.1.  To work around that
in Emacs versions before 25.3, append the following to your ~/.emacs
init file:

  (eval-after-load "enriched"
    '(defun enriched-decode-display-prop (start end &optional param)
       (list start end)))

+++
** Functions in 'write-contents-functions' can fully short-circuit the
'save-buffer' process.  Previously, saving a buffer that was not
visiting a file would always prompt for a file name.  Now it only does
so if 'write-contents-functions' is nil (or all its functions return
nil).  A non-nil buffer-local value for this variable is sufficient
for 'save-some-buffers' to consider the buffer for saving.

---
** New variable 'executable-prefix-env' for inserting magic signatures.
This variable affects the format of the interpreter magic number
inserted by 'executable-set-magic'.  If non-nil, the magic number now
takes the form "#!/usr/bin/env interpreter", otherwise the value
determined by 'executable-prefix', which is by default
"#!/path/to/interpreter".  By default, 'executable-prefix-env' is nil,
so the default behavior is not changed.

+++
** The variable 'emacs-version' no longer includes the build number.
This is now stored separately in a new variable, 'emacs-build-number'.

+++
** Emacs now provides a limited form of concurrency with Lisp threads.
Concurrency in Emacs Lisp is "mostly cooperative", meaning that
Emacs will only switch execution between threads at well-defined
times: when Emacs waits for input, during blocking operations related
to threads (such as mutex locking), or when the current thread
explicitly yields.  Global variables are shared among all threads, but
a 'let' binding is thread-local.  Each thread also has its own current
buffer and its own match data.

See the chapter "Threads" in the ELisp manual for full documentation
of these facilities.

+++
** The new user variable 'electric-quote-chars' provides a list
of curved quotes for 'electric-quote-mode', allowing user to choose
the types of quotes to be used.

---
** The new user option 'electric-quote-context-sensitive' makes
'electric-quote-mode' context sensitive.  If it is non-nil, you can
type an ASCII apostrophe to insert an opening or closing quote,
depending on context.  Emacs will replace the apostrophe by an opening
quote character at the beginning of the buffer, the beginning of a
line, after a whitespace character, and after an opening parenthesis;
and it will replace the apostrophe by a closing quote character in all
other cases.

---
** The new variable 'electric-quote-inhibit-functions' controls when
to disable electric quoting based on context.  Major modes can add
functions to this list; Emacs will temporarily disable
'electric-quote-mode' whenever any of the functions returns non-nil.
This can be used by major modes that derive from 'text-mode' but allow
inline code segments, such as 'markdown-mode'.

+++
** The new user variable 'dired-omit-case-fold' allows the user to
customize the case-sensitivity of dired-omit-mode.  It defaults to
the same sensitivity as that of the filesystem for the corresponding
dired buffer.

+++
** Emacs now uses double buffering to reduce flicker when editing and
resizing graphical Emacs frames on the X Window System.  This support
requires the DOUBLE-BUFFER extension, which major X servers have
supported for many years.  If your system has this extension, but an
Emacs built with double buffering misbehaves on some displays you use,
you can disable the feature by adding

  '(inhibit-double-buffering . t)

to default-frame-alist.  Or inject this parameter into the selected
frame by evaluating this form:

  (modify-frame-parameters nil '((inhibit-double-buffering . t)))

---
The group 'wp', whose label was "text", is now deprecated.
Use the new group 'text', which inherits from 'wp', instead.

+++
** The new function 'call-shell-region' executes a command in an
inferior shell with the buffer region as input.

+++
** The new user option 'shell-command-dont-erase-buffer' controls
if the output buffer is erased between shell commands; if non-nil,
the output buffer is not erased; this variable also controls where
to set the point in the output buffer: beginning of the output,
end of the buffer or save the point.
When 'shell-command-dont-erase-buffer' is nil, the default value,
the behavior of 'shell-command', 'shell-command-on-region' and
'async-shell-command' is as usual.

+++
** The new user option 'async-shell-command-display-buffer' controls
whether the output buffer of an asynchronous command is shown
immediately, or only when there is output.

+++
** The new user option 'mouse-select-region-move-to-beginning'
controls the position of point when double-clicking mouse-1 on the end
of a parenthetical grouping or string-delimiter: the default value nil
keeps point at the end of the region, setting it to non-nil moves
point to the beginning of the region.

+++
** The new user option 'mouse-drag-and-drop-region' allows to drag the
entire region of text to another place or another buffer.

+++
** The new user option 'confirm-kill-processes' allows the user to
skip a confirmation prompt for killing subprocesses when exiting
Emacs.  When set to t (the default), Emacs will prompt for
confirmation before killing subprocesses on exit, which is the same
behavior as before.

---
** 'find-library-name' will now fall back on looking at 'load-history'
to try to locate libraries that have been loaded with an explicit path
outside 'load-path'.

+++
** Faces in 'minibuffer-prompt-properties' no longer overwrite properties
in the text in functions like 'read-from-minibuffer', but instead are
added to the end of the face list.  This allows users to say things
like '(read-from-minibuffer (propertize "Enter something: " 'face 'bold))'.

+++
** The new variable 'extended-command-suggest-shorter' has been added
to control whether to suggest shorter 'M-x' commands or not.

---
** icomplete now respects 'completion-ignored-extensions'.

+++
** Non-breaking hyphens are now displayed with the 'nobreak-hyphen'
face instead of the 'escape-glyph' face.

+++
** Approximations to quotes are now displayed with the new 'homoglyph'
face instead of the 'escape-glyph' face.

+++
** New face 'header-line-highlight'.
This face is the header-line analogue of 'mode-line-highlight'; it
should be the preferred mouse-face for mouse-sensitive elements in the
header line.

---
** 'C-x h' ('mark-whole-buffer') will now avoid marking the prompt
part of minibuffers.

---
** 'find-library' now takes a prefix argument to pop to a different
window.

---
** 'fill-paragraph' no longer marks the buffer as changed unless it
actually changed something.

---
** The locale language name 'ca' is now mapped to the language
environment 'Catalan', which has been added.

---
** 'align-regexp' has a separate history for its interactive argument.
'align-regexp' no longer shares its history with all other
history-less functions that use 'read-string'.

+++
** The networking code has been reworked so that it's more
asynchronous than it was (when specifying :nowait t in
'make-network-process').  How asynchronous it is varies based on the
capabilities of the system, but on a typical GNU/Linux system the DNS
resolution, the connection, and (for TLS streams) the TLS negotiation
are all done without blocking the main Emacs thread.  To get
asynchronous TLS, the TLS boot parameters have to be passed in (see
the manual for details).

Certain process oriented functions (like 'process-datagram-address')
will block until socket setup has been performed.  The recommended way
to deal with asynchronous sockets is to avoid interacting with them
until they have changed status to "run".  This is most easily done
from a process sentinel.

---
** 'make-network-process' and 'open-network-stream' sometimes allowed
:service to be an integer string (e.g., :service "993") and sometimes
required an integer (e.g., :service 993).  This difference has been
eliminated, and integer strings work everywhere.

---
** It is possible to disable attempted recovery on fatal signals.
Two new variables support disabling attempts to recover from stack
overflow and to avoid automatic auto-save when Emacs is delivered a
fatal signal.  'attempt-stack-overflow-recovery', if set to 'nil',
will disable attempts to recover from C stack overflows; Emacs will
then crash as with any other fatal signal.
'attempt-orderly-shutdown-on-fatal-signal', if set to 'nil', will
disable attempts to auto-save the session and shut down in an orderly
fashion when Emacs receives a fatal signal; instead, Emacs will
terminate immediately.  Both variables are non-'nil' by default.
These variables are for users who would like to avoid the small
probability of data corruption due to techniques Emacs uses to recover
in these situations.

+++
** File local and directory local variables are now initialized each
time the major mode is set, not just when the file is first visited.
These local variables will thus not vanish on setting a major mode.

+++
** A second dir-local file (.dir-locals-2.el) is now accepted.
See the variable 'dir-locals-file-2' for more information.

+++
** Connection-local variables can be used to specify local variables
with a value depending on the connected remote server.  For details,
see the node "Connection Local Variables" in the ELisp manual.

---
** International domain names (IDNA) are now encoded via the new
puny.el library, so that one can visit Web sites with non-ASCII URLs.

+++
** The new 'list-timers' command lists all active timers in a buffer,
where you can cancel them with the 'c' command.

+++
** 'switch-to-buffer-preserve-window-point' now defaults to t.

+++
** The new variable 'debugger-stack-frame-as-list' allows displaying
all call stack frames in a Lisp backtrace buffer as lists.  Both
debug.el and edebug.el have been updated to heed to this variable.

---
** Values in call stack frames are now displayed using 'cl-prin1'.
The old behaviour of using 'prin1' can be restored by customizing the
new option 'debugger-print-function'.

+++
** NUL bytes in text copied to the system clipboard are now replaced with "\0".

+++
** The new variable 'x-ctrl-keysym' has been added to the existing
roster of X keysyms.  It can be used in combination with another
variable of this kind to swap modifiers in Emacs.

---
** New input methods: 'cyrillic-tuvan', 'polish-prefix'.

---
** The 'dutch' input method no longer attempts to support Turkish too.
Also, it no longer converts 'IJ' and 'ij' to the compatibility
characters U+0132 LATIN CAPITAL LIGATURE IJ and U+0133 LATIN SMALL
LIGATURE IJ.

+++
** File name quoting by adding the prefix "/:" is now possible for the
local part of a remote file name.  Thus, if you have a directory named
"/~" on the remote host "foo", you can prevent it from being
substituted by a home directory by writing it as "/foo:/:/~/file".

+++
** The new variable 'maximum-scroll-margin' allows having effective
settings of 'scroll-margin' up to half the window size, instead of
always restricting the margin to a quarter of the window.

+++
** Emacs can scroll horizontally using mouse, touchpad, and trackbar.
You can enable this by customizing 'mwheel-tilt-scroll-p'.  If you
want to reverse the direction of the scroll, customize
'mwheel-flip-direction'.

+++
** Emacsclient has a new option -u/--suppress-output.
This option suppresses display of return values from the server
process.

+++
** Emacsclient has a new option -T/--tramp.
This helps with using a local Emacs session as the server for a remote
emacsclient.  With appropriate setup, one can now set the EDITOR
environment variable on a remote machine to emacsclient, and
use the local Emacs to edit remote files via Tramp.  See the node
"emacsclient Options" in the user manual for the details.

---
** New user option 'dig-program-options' and extended functionality
for DNS-querying functions 'nslookup-host', 'dns-lookup-host',
and 'run-dig'.  Each function now accepts an optional name server
argument interactively (with a prefix argument) and non-interactively.

+++
** 'describe-key-briefly' now ignores mouse movement events.

+++
** The new variable 'eval-expression-print-maximum-character' prevents
large integers from being displayed as characters by 'M-:' and similar
commands.

---
** Two new commands for finding the source code of Emacs Lisp
libraries: 'find-library-other-window' and 'find-library-other-frame'.

+++
** The new variable 'display-raw-bytes-as-hex' allows to change the
display of raw bytes from octal to hex.

+++
** You can now provide explicit field numbers in format specifiers.
For example, '(format "%2$s %1$s" "X" "Y")' produces "Y X".

+++
** Emacs now supports optional display of line numbers in the buffer.
This is similar to what linum-mode provides, but much faster and
doesn't usurp the display margin for the line numbers.  Customize the
buffer-local variable 'display-line-numbers' to activate this optional
display.  Alternatively, you can use the `display-line-numbers-mode'
minor mode or the global `global-display-line-numbers-mode'.  When
using these modes, customize `display-line-numbers-type' with the same
value as you would use with `display-line-numbers'.

Line numbers are not displayed at all in minibuffer windows and in
tooltips, as they are not useful there.

Lisp programs can disable line-number display for a particular screen
line by putting the 'display-line-numbers-disable' text property or
overlay property on the first character of that screen line.  This is
intended for add-on packages that need a finer control of the display.

Lisp programs that need to know how much screen estate is used up for
line-number display in a window can use the new function
'line-number-display-width'.

Linum mode and all similar packages are henceforth becoming obsolete.
Users and developers are encouraged to switch to this new feature
instead.

+++
** emacsclient now accepts command-line options in ALTERNATE_EDITOR
and --alternate-editor. For example, ALTERNATE_EDITOR="emacs -Q -nw".
Arguments may be quoted "like this", so that for example an absolute
path containing a space may be specified; quote escaping is not
supported.


* Editing Changes in Emacs 27.1


* Changes in Specialized Modes and Packages in Emacs 26.1

---
** New function `cl-generic-p'.

** Dired

+++
*** You can answer 'all' in 'dired-do-delete' to delete recursively all
remaining directories without more prompts.

+++
*** Dired supports wildcards in the directory part of the file names.

+++
*** You can now use '`?`' in 'dired-do-shell-command'.
It gets replaced by the current file name, like ' ? '.

+++
*** A new option 'dired-always-read-filesystem' default to nil.
If non-nil, buffers visiting files are reverted before search them;
for instance, in 'dired-mark-files-containing-regexp' a non-nil value
of this option means the file is revisited in a temporary buffer;
this temporary buffer is the actual buffer searched: the original buffer
visiting the file is not modified.

---
*** Users can now customize mouse clicks in Dired in a more flexible way.
The new command 'dired-mouse-find-file' can be bound to a mouse click
and used to visit files/directories in Dired in the selected window.
The new command 'dired-mouse-find-file-other-frame' similarly visits
files/directories in another frame.  You can write your own commands
that invoke 'dired-mouse-find-file' with non-default optional
arguments, to tailor the effects of mouse clicks on file names in
Dired buffers.

+++
*** In wdired, when editing files to contain slash characters,
the resulting directories are automatically created.  Whether to do
this is controlled by the 'wdired-create-parent-directories' variable.

+++
*** 'W' is now bound to 'browse-url-of-dired-file', and is useful for
viewing HTML files and the like.

---
*** New variable 'dired-clean-confirm-killing-deleted-buffers'
controls whether Dired asks to kill buffers visiting deleted files and
directories.  The default is t, so Dired asks for confirmation, to
keep previous behavior.

---
** html2text is now marked obsolete.

---
** smerge-refine-regions can refine regions in separate buffers

---
** Info menu and index completion uses substring completion by default.
This can be customized via the info-menu category in
completion-category-override.

+++
** The ancestor buffer is shown by default in 3-way merges.
A new option ediff-show-ancestor and a new toggle
ediff-toggle-show-ancestor.

---
** TeX: Add luatex and xetex as alternatives to pdftex

** Electric-Buffer-menu

+++
*** Key 'U' is bound to 'Buffer-menu-unmark-all' and key 'M-DEL' is
bound to 'Buffer-menu-unmark-all-buffers'.

** bs

---
*** Two new commands 'bs-unmark-all', bound to 'U', and
'bs-unmark-previous', bound to <backspace>.

** Buffer-menu

+++
*** Two new commands 'Buffer-menu-unmark-all', bound to 'U' and
'Buffer-menu-unmark-all-buffers', bound to 'M-DEL'.

---
** Checkdoc

*** 'checkdoc-arguments-in-order-flag' now defaults to nil.

** Gnus

---
*** The .newsrc file will now only be saved if the native select
method is an NNTP select method.

+++
*** A new command for sorting articles by readedness marks has been
added: 'C-c C-s C-m C-m'.

+++

*** In message-citation-line-format the %Z format is now the time zone name
instead of the numeric form.  The %z format continues to be the
numeric form.  The new behavior is compatible with format-time-string.

** Ibuffer

---
*** New command 'ibuffer-jump'.

---
*** New filter commands 'ibuffer-filter-by-basename',
'ibuffer-filter-by-file-extension', 'ibuffer-filter-by-directory',
'ibuffer-filter-by-starred-name', 'ibuffer-filter-by-modified'
and 'ibuffer-filter-by-visiting-file'; bound respectively
to '/b', '/.', '//', '/*', '/i' and '/v'.

---
*** Two new commands 'ibuffer-filter-chosen-by-completion'
and 'ibuffer-and-filter', the second bound to '/&'.

---
*** The commands 'ibuffer-pop-filter', 'ibuffer-pop-filter-group',
'ibuffer-or-filter' and 'ibuffer-filter-disable' have the alternative
bindings '/<up>', '/S-<up>', '/|' and '/DEL', respectively.

---
*** The data format specifying filters has been extended to allow
explicit logical 'and', and a more flexible form for logical 'not'.
See 'ibuffer-filtering-qualifiers' doc string for full details.

---
*** A new command 'ibuffer-copy-buffername-as-kill'; bound
to 'B'.

---
*** New command 'ibuffer-change-marks'; bound to '* c'.

---
*** A new command 'ibuffer-mark-by-locked' to mark
all locked buffers;  bound to '% L'.

---
*** A new option 'ibuffer-locked-char' to indicate
locked buffers; Ibuffer shows a new column displaying
'ibuffer-locked-char' for locked buffers.

---
*** A new command 'ibuffer-unmark-all-marks' to unmark
all buffers without asking confirmation;  bound to
'U'; 'ibuffer-do-replace-regexp' bound to 'r'.

---
*** A new command 'ibuffer-mark-by-content-regexp' to mark buffers
whose content matches a regexp; bound to '% g'.

---
*** Two new options 'ibuffer-never-search-content-name' and
'ibuffer-never-search-content-mode' used by
'ibuffer-mark-by-content-regexp'.

** Browse-URL

---
*** Support for opening links to man pages in Man or WoMan mode.

** Comint

---
*** New user option 'comint-move-point-for-matching-input' to control
where to place point after C-c M-r and C-c M-s.

** Compilation mode

---
*** Messages from CMake are now recognized.

+++
*** The number of errors, warnings, and informational messages is now
displayed in the mode line.  These are updated as compilation
proceeds.

** Grep

---
*** Grep commands will now use GNU grep's '--null' option if
available, which allows distinguishing the filename from contents if
they contain colons.  This can be controlled by the new custom option
'grep-use-null-filename-separator'.

---
*** The grep/rgrep/lgrep functions will now ask about saving files
before running.  This is controlled by the 'grep-save-buffers'
variable.

** Edebug

---
*** Edebug can be prevented from pausing 1 second after reaching a
breakpoint (e.g. with "f" and "o") by customizing the new option
'edebug-sit-on-break'.

+++
*** New customizable option 'edebug-max-depth'
This allows to enlarge the maximum recursion depth when instrumenting
code.

** Eshell

---
*** 'eshell-input-filter's value is now a named function
'eshell-input-filter-default', and has a new custom option
'eshell-input-filter-initial-space' to ignore adding commands prefixed
with blank space to eshell history.

** eww

+++
*** New 'M-RET' command for opening a link at point in a new eww buffer.

+++
*** A new 's' command for switching to another eww buffer via the minibuffer.

---
*** The 'o' command ('shr-save-contents') has moved to 'O' to avoid collision
with the 'o' command from 'image-map'.

+++
*** A new command 'C' ('eww-toggle-colors') can be used to toggle
whether to use the HTML-specified colors or not.  The user can also
customize the 'shr-use-colors' variable.

---
*** Images that are being loaded are now marked with gray
"placeholder" images of the size specified by the HTML.  They are then
replaced by the real images asynchronously, which will also now
respect width/height HTML specs (unless they specify widths/heights
bigger than the current window).

---
*** The 'w' command on links is now 'shr-maybe-probe-and-copy-url'.
'shr-copy-url' now only copies the url at point; users who wish to
avoid accidentally accessing remote links may rebind 'w' and 'u' in
'eww-link-keymap' to it.


** Ido

---
*** The commands 'find-alternate-file-other-window',
'dired-other-window', 'dired-other-frame', and
'display-buffer-other-window' are now remapped to Ido equivalents if
Ido mode is active.

** Images

+++
*** Images are automatically scaled before displaying based on the
'image-scaling-factor' variable (if Emacs supports scaling the images
in question).

+++
*** It's now possible to specify aspect-ratio preserving combinations
of :width/:max-height and :height/:max-width keywords.  In either
case, the "max" keywords win.  (Previously some combinations would,
depending on the aspect ratio of the image, just be ignored and in
other instances this would lead to the aspect ratio not being
preserved.)

+++
*** Images inserted with 'insert-image' and related functions get a
keymap put into the text properties (or overlays) that span the
image.  This keymap binds keystrokes for manipulating size and
rotation, as well as saving the image to a file.  These commands are
also available in 'image-mode'.

+++
*** A new library for creating and manipulating SVG images has been
added.  See the "SVG Images" section in the Lisp reference manual for
details.

+++
*** New setf-able function to access and set image parameters is
provided: 'image-property'.

---
*** New commands 'image-scroll-left' and 'image-scroll-right'
for 'image-mode' that complement 'image-scroll-up' and
'image-scroll-down': they have the same prefix arg behavior and stop
at image boundaries.

** Image-Dired

---
*** Now provides a minor mode 'image-dired-minor-mode' which replaces
the function 'image-dired-setup-dired-keybindings'.

---
*** Thumbnail generation is now asynchronous.
The number of concurrent processes is limited by the variable
'image-dired-thumb-job-limit'.

---
*** 'image-dired-thumbnail-storage' has a new option 'standard-large'
for generating 256x256 thumbnails according to the Thumbnail Managing
Standard.

---
*** Inherits movement keys from 'image-mode' for viewing full images.
This includes the usual char, line, and page movement commands.

---
*** All the -options types have been changed to argument lists
instead of shell command strings.  This change affects
'image-dired-cmd-create-thumbnail-options',
'image-dired-cmd-create-temp-image-options',
'image-dired-cmd-rotate-thumbnail-options',
'image-dired-cmd-rotate-original-options',
'image-dired-cmd-write-exif-data-options',
'image-dired-cmd-read-exif-data-options', and introduces
'image-dired-cmd-pngnq-options', 'image-dired-cmd-pngcrush-options',
'image-dired-cmd-create-standard-thumbnail-options'

---
*** Recognizes more tools by default, including pngnq-s9 and OptiPNG

---
*** 'find-file' and related commands now work on thumbnails and
displayed images, providing a default argument of the original file name
via an addition to 'file-name-at-point-functions'.

---
** The default 'Info-default-directory-list' no longer checks some obsolete
directory suffixes (gnu, gnu/lib, gnu/lib/emacs, emacs, lib, lib/emacs)
when searching for info directories.

+++
** The commands that add ChangeLog entries now prefer a VCS root directory
for the ChangeLog file, if none already exists.  Customize
'change-log-directory-files' to nil for the old behavior.

---
** Support for non-string values of 'time-stamp-format' has been removed.

** Message

---
*** 'message-use-idna' now defaults to t (because Emacs comes with
built-in IDNA support now).

---
*** When sending HTML messages with embedded images, and you have
exiftool installed, and you rotate images with EXIF data (i.e.,
JPEGs), the rotational information will be inserted into the outgoing
image in the message.  (The original image will not have its
orientation affected.)

---
*** The 'message-valid-fqdn-regexp' variable has been removed, since
there are now top-level domains added all the time.  Message will no
longer warn about sending emails to top-level domains it hasn't heard
about.

** Enhanced xterm support

*** New variable 'xterm-set-window-title' controls whether Emacs
sets the XTerm window title.  The default is to set the window title.


* New Modes and Packages in Emacs 27.1


* Incompatible Lisp Changes in Emacs 27.1


* Lisp Changes in Emacs 27.1


* Changes in Emacs 27.1 on Non-Free Operating Systems

---
** Mousewheel and trackpad scrolling on macOS 10.7+ now behaves more
like the macOS default.  The new variables
'ns-use-system-mwheel-acceleration', 'ns-touchpad-scroll-line-height'
and 'ns-touchpad-use-momentum' can be used to customise the behavior.


----------------------------------------------------------------------
This file is part of GNU Emacs.

GNU Emacs is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

GNU Emacs is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with GNU Emacs.  If not, see <https://www.gnu.org/licenses/>.


Local variables:
coding: utf-8
mode: outline
paragraph-separate: "[ 	]*$"
end:
