GNU Emacs NEWS -- history of user-visible changes.

Copyright (C) 2016-2019 Free Software Foundation, Inc.
See the end of the file for license conditions.

Please send Emacs bug reports to 'bug-gnu-emacs@gnu.org'.
If possible, use 'M-x report-emacs-bug'.

This file is about changes in Emacs version 26.

See file HISTORY for a list of GNU Emacs versions and release dates.
See files NEWS.25, NEWS.24, NEWS.23, NEWS.22, NEWS.21,
NEWS.20, NEWS.19, NEWS.18, and NEWS.1-17 for changes in older Emacs
versions.

You can narrow news to a specific version by calling 'view-emacs-news'
with a prefix argument or by typing 'C-u C-h C-n'.


* Installation Changes in Emacs 26.4


* Startup Changes in Emacs 26.4


* Changes in Emacs 26.4


* Editing Changes in Emacs 26.4


* Changes in Specialized Modes and Packages in Emacs 26.4


* New Modes and Packages in Emacs 26.4


* Incompatible Lisp Changes in Emacs 26.4


* Lisp Changes in Emacs 26.4


* Changes in Emacs 26.4 on Non-Free Operating Systems


* Changes in Emacs 26.3

** New option 'help-enable-completion-auto-load'.
This allows disabling the new feature introduced in Emacs 26.1 which
loads files during completion of 'C-h f' and 'C-h v' according to
'definition-prefixes'.

** Emacs now supports the new Japanese Era name.
The newly assigned codepoint U+32FF was added to the Unicode Character
Database compiled into Emacs.


* Installation Changes in Emacs 26.2

** Building Emacs with the '--with-xwidgets' option now requires WebKit2.
To build Emacs with xwidgets support, you will need to install the
webkit2gtk-4.0 package; version 2.12 or later is required.
(This change was actually made in Emacs 26.1, but was not called out
in its NEWS.)

** Installing Emacs now installs the emacs-module.h file.
The emacs-module.h file is now installed in the system-wide include
directory as part of the Emacs installation.  This allows to build
Emacs modules outside of the Emacs source tree.


* Changes in Emacs 26.2

** Emacs is now compliant with the latest version 11.0 of the Unicode Standard.

** New variable 'xft-ignore-color-fonts'.
Default t means don't try to load color fonts when using Xft, as they
often cause crashes.  Set it to nil if you really need those fonts.


* Changes in Specialized Modes and Packages in Emacs 26.2

** Dired

*** The 'Z' command on a directory name compresses all of its files.
It produces a compressed '.tar.gz' archive with all the files in the
directory and all of its subdirectories.  For symmetry, 'Z' on a
'.tar.gz' or a '.tgz' archive extracts all the archived files into the
current directory; thus, typing 'Z' on a '.tar.gz' archive created by
a previous 'Z' command will extract the archived files into a
directory whose name is the archive name sans the '.tar.gz' extension.
(This change was actually made in Emacs 25.1 but was only
partially called out in its NEWS; 'tgz' handling was added in 26.1.)

** Ibuffer

*** New toggle 'ibuffer-do-toggle-lock', bound to 'L'.

** Imenu

*** The value for 'imenu-auto-rescan-maxout' has been increased to 600000.

** Gnus

*** Mailutils movemail will now be used if found at runtime.
The default value of 'mail-source-movemail-program' is now "movemail".
This ensures that the movemail program from GNU Mailutils will be used
if found in 'exec-path', even if it was not found at build time.  To
use a different program, customize 'mail-source-movemail-program' to the
absolute file name of the desired executable.

** Shadowfile

*** shadowfile.el has been rewritten to support Tramp file names.

** Shell mode

*** Shell mode buffers now have 'scroll-conservatively' set to 101.
This is so as to better emulate the scrolling behavior of a text
terminal when new output is added to the screen buffer.  To get back
the previous behavior, reset 'scroll-conservatively' to zero (or any
other value you like) in a function and add it to 'shell-mode-hook'.
(This change was actually made in Emacs 26.1, but was not called out
in its NEWS.)

** VC

*** VC support for Mercurial was improved.
Emacs now avoids invoking 'hg' as much as possible, for faster operation.
(This and the following changes were actually made in Emacs 26.1, but
were not called out in its NEWS.)

**** New vc-hg options.
The new option 'vc-hg-parse-hg-data-structures' controls whether vc-hg
will try parsing the Mercurial data structures directly instead of
running 'hg'; it defaults to t (set to nil if you want the pre-26.1
behavior).
The new option 'vc-hg-symbolic-revision-styles' controls how versions
in a Mercurial repository are presented symbolically on the mode line.
The new option 'vc-hg-use-file-version-for-mode-line-version' controls
whether the version shown on the mode line is that of the visited file
or of the repository working copy.

**** Display of Mercurial revisions in the mode line has changed.
Previously, the mode line displayed the local number (1, 2, 3, ...) of
the revision.  Starting with Emacs 26.1, the default has changed, and
it now shows the global revision number, in the form of its changeset
hash value.  To get back the previous behavior, customize the new
option 'vc-hg-symbolic-revision-styles' to the value '("{rev}")'.


* Incompatible Lisp Changes in Emacs 26.2

** shadowfile config files have changed their syntax.
Existing files "~/.emacs.d/shadows" and "~/.emacs.d/shadow_todo" must
be removed prior using the changed 'shadow-*' commands.

** 'thread-alive-p' has been renamed to 'thread-live-p'.
The old name is an alias of the new name.  Future Emacs version will
obsolete it.

** 'while-no-input' does not return due to input from subprocesses.
Input that arrived from subprocesses while some code executed inside
the 'while-no-input' form injected an internal buffer-switch event
that counted as input and would cause 'while-no-input' to return,
perhaps prematurely.  These buffer-switch events are now by default
ignored by 'while-no-input'; if you need to get the old behavior,
remove 'buffer-switch' from the list of events in
'while-no-input-ignore-events'.


* Lisp Changes in Emacs 26.2

** The new function 'read-answer' accepts either long or short answers
depending on the new customizable variable 'read-answer-short'.

** New function 'assoc-delete-all'.
Like 'assq-delete-all', but uses 'equal' for comparison.

** The function 'thing-at-point' behaves as before Emacs 26.1.
The behavior of 'thing-at-point' when called with argument 'list' has
changed in Emacs 26.1, in that it didn't consider text inside comments
and strings as a potential list.  This change is now reverted, and
'thing-at-point' behaves like it did before Emacs 26.1.

** To cater to use cases where comments and strings are to be ignored
when looking for a list, the function 'list-at-point' now takes an
optional argument to do so.


* Changes in Emacs 26.2 on Non-Free Operating Systems

** macOS features can now be detected at run-time as well as at
build-time.  See nextstep/INSTALL for details.
(This change was actually made in Emacs 26.1, but was undocumented and
not called out in its NEWS.)


* Installation Changes in Emacs 26.1


* Startup Changes in Emacs 26.1


* Changes in Emacs 26.1


* Editing Changes in Emacs 26.1

** New variable 'x-wait-for-event-timeout'.
This controls how long Emacs will wait for updates to the graphical
state to take effect (making a frame visible, for example).


* Changes in Specialized Modes and Packages in Emacs 26.1

---
** New function `cl-generic-p'.

** Dired

+++
*** You can answer 'all' in 'dired-do-delete' to delete recursively all
remaining directories without more prompts.

+++
*** Dired supports wildcards in the directory part of the file names.

+++
*** You can now use '`?`' in 'dired-do-shell-command'.
It gets replaced by the current file name, like ' ? '.

+++
*** A new option 'dired-always-read-filesystem' default to nil.
If non-nil, buffers visiting files are reverted before search them;
for instance, in 'dired-mark-files-containing-regexp' a non-nil value
of this option means the file is revisited in a temporary buffer;
this temporary buffer is the actual buffer searched: the original buffer
visiting the file is not modified.

---
*** Users can now customize mouse clicks in Dired in a more flexible way.
The new command 'dired-mouse-find-file' can be bound to a mouse click
and used to visit files/directories in Dired in the selected window.
The new command 'dired-mouse-find-file-other-frame' similarly visits
files/directories in another frame.  You can write your own commands
that invoke 'dired-mouse-find-file' with non-default optional
arguments, to tailor the effects of mouse clicks on file names in
Dired buffers.

+++
*** In wdired, when editing files to contain slash characters,
the resulting directories are automatically created.  Whether to do
this is controlled by the 'wdired-create-parent-directories' variable.

+++
*** 'W' is now bound to 'browse-url-of-dired-file', and is useful for
viewing HTML files and the like.

---
*** New variable 'dired-clean-confirm-killing-deleted-buffers'
controls whether Dired asks to kill buffers visiting deleted files and
directories.  The default is t, so Dired asks for confirmation, to
keep previous behavior.

---
** html2text is now marked obsolete.

---
** smerge-refine-regions can refine regions in separate buffers

---
** Info menu and index completion uses substring completion by default.
This can be customized via the info-menu category in
completion-category-override.

+++
** The ancestor buffer is shown by default in 3-way merges.
A new option ediff-show-ancestor and a new toggle
ediff-toggle-show-ancestor.

---
** TeX: Add luatex and xetex as alternatives to pdftex

** Electric-Buffer-menu

+++
*** Key 'U' is bound to 'Buffer-menu-unmark-all' and key 'M-DEL' is
bound to 'Buffer-menu-unmark-all-buffers'.

** bs

---
*** Two new commands 'bs-unmark-all', bound to 'U', and
'bs-unmark-previous', bound to <backspace>.

** Buffer-menu

+++
*** Two new commands 'Buffer-menu-unmark-all', bound to 'U' and
'Buffer-menu-unmark-all-buffers', bound to 'M-DEL'.

---
** Checkdoc

*** 'checkdoc-arguments-in-order-flag' now defaults to nil.

** Gnus

---
*** The .newsrc file will now only be saved if the native select
method is an NNTP select method.

+++
*** A new command for sorting articles by readedness marks has been
added: 'C-c C-s C-m C-m'.

+++

*** In message-citation-line-format the %Z format is now the time zone name
instead of the numeric form.  The %z format continues to be the
numeric form.  The new behavior is compatible with format-time-string.

** Ibuffer

---
*** New command 'ibuffer-jump'.

---
*** New filter commands 'ibuffer-filter-by-basename',
'ibuffer-filter-by-file-extension', 'ibuffer-filter-by-directory',
'ibuffer-filter-by-starred-name', 'ibuffer-filter-by-modified'
and 'ibuffer-filter-by-visiting-file'; bound respectively
to '/b', '/.', '//', '/*', '/i' and '/v'.

---
*** Two new commands 'ibuffer-filter-chosen-by-completion'
and 'ibuffer-and-filter', the second bound to '/&'.

---
*** The commands 'ibuffer-pop-filter', 'ibuffer-pop-filter-group',
'ibuffer-or-filter' and 'ibuffer-filter-disable' have the alternative
bindings '/<up>', '/S-<up>', '/|' and '/DEL', respectively.

---
*** The data format specifying filters has been extended to allow
explicit logical 'and', and a more flexible form for logical 'not'.
See 'ibuffer-filtering-qualifiers' doc string for full details.

---
*** A new command 'ibuffer-copy-buffername-as-kill'; bound
to 'B'.

---
*** New command 'ibuffer-change-marks'; bound to '* c'.

---
*** A new command 'ibuffer-mark-by-locked' to mark
all locked buffers;  bound to '% L'.

---
*** A new option 'ibuffer-locked-char' to indicate
locked buffers; Ibuffer shows a new column displaying
'ibuffer-locked-char' for locked buffers.

---
*** A new command 'ibuffer-unmark-all-marks' to unmark
all buffers without asking confirmation;  bound to
'U'; 'ibuffer-do-replace-regexp' bound to 'r'.

---
*** A new command 'ibuffer-mark-by-content-regexp' to mark buffers
whose content matches a regexp; bound to '% g'.

---
*** Two new options 'ibuffer-never-search-content-name' and
'ibuffer-never-search-content-mode' used by
'ibuffer-mark-by-content-regexp'.

** Browse-URL

---
*** Support for opening links to man pages in Man or WoMan mode.

** Comint

---
*** New user option 'comint-move-point-for-matching-input' to control
where to place point after C-c M-r and C-c M-s.

** Compilation mode

---
*** Messages from CMake are now recognized.

+++
*** The number of errors, warnings, and informational messages is now
displayed in the mode line.  These are updated as compilation
proceeds.

** Grep

---
*** Grep commands will now use GNU grep's '--null' option if
available, which allows distinguishing the filename from contents if
they contain colons.  This can be controlled by the new custom option
'grep-use-null-filename-separator'.

---
*** The grep/rgrep/lgrep functions will now ask about saving files
before running.  This is controlled by the 'grep-save-buffers'
variable.

** Edebug

---
*** Edebug can be prevented from pausing 1 second after reaching a
breakpoint (e.g. with "f" and "o") by customizing the new option
'edebug-sit-on-break'.

+++
*** New customizable option 'edebug-max-depth'
This allows to enlarge the maximum recursion depth when instrumenting
code.

** Eshell

---
*** 'eshell-input-filter's value is now a named function
'eshell-input-filter-default', and has a new custom option
'eshell-input-filter-initial-space' to ignore adding commands prefixed
with blank space to eshell history.

** eww

+++
*** New 'M-RET' command for opening a link at point in a new eww buffer.

+++
*** A new 's' command for switching to another eww buffer via the minibuffer.

---
*** The 'o' command ('shr-save-contents') has moved to 'O' to avoid collision
with the 'o' command from 'image-map'.

+++
*** A new command 'C' ('eww-toggle-colors') can be used to toggle
whether to use the HTML-specified colors or not.  The user can also
customize the 'shr-use-colors' variable.

---
*** Images that are being loaded are now marked with gray
"placeholder" images of the size specified by the HTML.  They are then
replaced by the real images asynchronously, which will also now
respect width/height HTML specs (unless they specify widths/heights
bigger than the current window).

---
*** The 'w' command on links is now 'shr-maybe-probe-and-copy-url'.
'shr-copy-url' now only copies the url at point; users who wish to
avoid accidentally accessing remote links may rebind 'w' and 'u' in
'eww-link-keymap' to it.


** Ido

---
*** The commands 'find-alternate-file-other-window',
'dired-other-window', 'dired-other-frame', and
'display-buffer-other-window' are now remapped to Ido equivalents if
Ido mode is active.

** Images

+++
*** Images are automatically scaled before displaying based on the
'image-scaling-factor' variable (if Emacs supports scaling the images
in question).

+++
*** It's now possible to specify aspect-ratio preserving combinations
of :width/:max-height and :height/:max-width keywords.  In either
case, the "max" keywords win.  (Previously some combinations would,
depending on the aspect ratio of the image, just be ignored and in
other instances this would lead to the aspect ratio not being
preserved.)

+++
*** Images inserted with 'insert-image' and related functions get a
keymap put into the text properties (or overlays) that span the
image.  This keymap binds keystrokes for manipulating size and
rotation, as well as saving the image to a file.  These commands are
also available in 'image-mode'.

+++
*** A new library for creating and manipulating SVG images has been
added.  See the "SVG Images" section in the Lisp reference manual for
details.

+++
*** New setf-able function to access and set image parameters is
provided: 'image-property'.

---
*** New commands 'image-scroll-left' and 'image-scroll-right'
for 'image-mode' that complement 'image-scroll-up' and
'image-scroll-down': they have the same prefix arg behavior and stop
at image boundaries.

** Image-Dired

---
*** Now provides a minor mode 'image-dired-minor-mode' which replaces
the function 'image-dired-setup-dired-keybindings'.

---
*** Thumbnail generation is now asynchronous.
The number of concurrent processes is limited by the variable
'image-dired-thumb-job-limit'.

---
*** 'image-dired-thumbnail-storage' has a new option 'standard-large'
for generating 256x256 thumbnails according to the Thumbnail Managing
Standard.

---
*** Inherits movement keys from 'image-mode' for viewing full images.
This includes the usual char, line, and page movement commands.

---
*** All the -options types have been changed to argument lists
instead of shell command strings.  This change affects
'image-dired-cmd-create-thumbnail-options',
'image-dired-cmd-create-temp-image-options',
'image-dired-cmd-rotate-thumbnail-options',
'image-dired-cmd-rotate-original-options',
'image-dired-cmd-write-exif-data-options',
'image-dired-cmd-read-exif-data-options', and introduces
'image-dired-cmd-pngnq-options', 'image-dired-cmd-pngcrush-options',
'image-dired-cmd-create-standard-thumbnail-options'

---
*** Recognizes more tools by default, including pngnq-s9 and OptiPNG

---
*** 'find-file' and related commands now work on thumbnails and
displayed images, providing a default argument of the original file name
via an addition to 'file-name-at-point-functions'.

---
** The default 'Info-default-directory-list' no longer checks some obsolete
directory suffixes (gnu, gnu/lib, gnu/lib/emacs, emacs, lib, lib/emacs)
when searching for info directories.

+++
** The commands that add ChangeLog entries now prefer a VCS root directory
for the ChangeLog file, if none already exists.  Customize
'change-log-directory-files' to nil for the old behavior.

---
** Support for non-string values of 'time-stamp-format' has been removed.

** Message

---
*** 'message-use-idna' now defaults to t (because Emacs comes with
built-in IDNA support now).

---
*** When sending HTML messages with embedded images, and you have
exiftool installed, and you rotate images with EXIF data (i.e.,
JPEGs), the rotational information will be inserted into the outgoing
image in the message.  (The original image will not have its
orientation affected.)

---
*** The 'message-valid-fqdn-regexp' variable has been removed, since
there are now top-level domains added all the time.  Message will no
longer warn about sending emails to top-level domains it hasn't heard
about.

** Enhanced xterm support

*** New variable 'xterm-set-window-title' controls whether Emacs
sets the XTerm window title.  The default is to set the window title.


* New Modes and Packages in Emacs 26.1

** New package 'auth-source-pass' integrates 'auth-source' with the
password manager password-store (http://passwordstore.org).


* Incompatible Lisp Changes in Emacs 26.1

** 'format' now avoids allocating a new string in more cases.
'format' was previously documented to return a newly-allocated string,
but this documentation was not correct, as (eq x (format x)) returned
t when x was the empty string.  'format' is no longer documented to
return a newly-allocated string, and the implementation now takes
advantage of the doc change to avoid making copies of strings in
common cases like (format "foo") and (format "%s" "foo").

** The function 'eldoc-message' now accepts a single argument.
Programs that called it with multiple arguments before should pass
them through 'format' first.  Even that is discouraged: for ElDoc
support, you should set 'eldoc-documentation-function' instead of
calling 'eldoc-message' directly.

** Using '&rest' or '&optional' incorrectly is now an error.
For example giving '&optional' without a following variable, or
passing '&optional' multiple times:

    (defun foo (&optional &rest x))
    (defun bar (&optional &optional x))

Previously, Emacs would just ignore the extra keyword, or give
incorrect results in certain cases.

** The pinentry.el library has been removed.
That package (and the corresponding change in GnuPG and pinentry)
was intended to provide a way to input passphrase through Emacs with
GnuPG 2.0.  However, the change to support that was only implemented
in GnuPG >= 2.1 and didn't get backported to GnuPG 2.0.  And with
GnuPG 2.1 and later, pinentry.el is not needed at all.  So the
library was useless, and we removed it.  GnuPG 2.0 is no longer
supported by the upstream project.

To adapt to the change, you may need to set 'epa-pinentry-mode' to the
symbol 'loopback'.  Alternatively, leave 'epa-pinentry-mode' at its
default value of nil, and remove the 'allow-emacs-pinentry' setting
from your 'gpg-agent.conf' configuration file, usually found in the
'~/.gnupg' directory.

Note that previously, it was said that passphrase input through
minibuffer would be much less secure than other graphical pinentry
programs.  However, these days the difference is insignificant: the
'read-password' function sufficiently protects input from leakage to
message logs.  Emacs still doesn't use secure memory to protect
passphrases, but it was also removed from other pinentry programs as
the attack is unrealistic on modern computer systems which don't
utilize swap memory usually.

** The function 'display-buffer-in-major-side-window' no longer exists.
It has been renamed as internal function 'window--make-major-side-window',
however applications should instead call 'display-buffer-in-side-window'
(passing the SIDE and SLOT parameters as elements of ALIST).  This approach
is backwards-compatible with versions of Emacs in which the old function
exists.  See the node "Displaying Buffers in Side Windows" in the ELisp
manual for more details.

* Lisp Changes in Emacs 26.1

** New functions to set region from secondary selection and vice versa.
The new functions 'secondary-selection-to-region' and
'secondary-selection-from-region' let you set the beginning and the
end of the region from those of the secondary selection and vice
versa.

** New function 'lgstring-remove-glyph' can be used to modify a
gstring returned by the underlying layout engine (e.g. m17n-flt,
uniscribe).


* Changes in Emacs 26.1 on Non-Free Operating Systems

+++
** Intercepting hotkeys on Windows 7 and later now works better.
The new keyboard hooking code properly grabs system hotkeys such as
Win-* and Alt-TAB, in a way that Emacs can get at them before the
system.  This makes the 'w32-register-hot-key' functionality work
again on all versions of MS-Windows starting with Windows 7.  On
Windows NT and later you can now register any hotkey combination.  (On
Windows 9X, the previous limitations, spelled out in the Emacs manual,
still apply.)

---
** 'convert-standard-filename' no longer mirrors slashes on MS-Windows.
Previously, on MS-Windows this function converted slash characters in
file names into backslashes.  It no longer does that.  If your Lisp
program used 'convert-standard-filename' to prepare file names to be
passed to subprocesses (which is not the recommended usage of that
function), you will now have to mirror slashes in your application
code.  One possible way is this:

         (let ((start 0))
           (while (string-match "/" file-name start)
             (aset file-name (match-beginning 0) ?\\)
             (setq start (match-end 0))))

---
** GUI sessions on MS-Windows now treat SIGINT like Posix platforms do.
The effect of delivering a Ctrl-C (SIGINT) signal to a GUI Emacs on
MS-Windows is now the same as on Posix platforms -- Emacs saves the
session and exits.  In particular, this will happen if you start
emacs.exe from the Windows shell, then type Ctrl-C into that shell's
window.

---
** 'signal-process' supports SIGTRAP on Windows XP and later.
The 'kill' emulation on Windows now maps SIGTRAP to a call to the
'DebugBreakProcess' API.  This causes the receiving process to break
execution and return control to the debugger.  If no debugger is
attached to the receiving process, the call is typically ignored.
This is in contrast to the default action on POSIX Systems, where it
causes the receiving process to terminate with a core dump if no
debugger has been attached to it.

---
** 'set-mouse-position' and 'set-mouse-absolute-pixel-position' work
on macOS.

---
** Emacs can now be run as a GUI application from the command line on
macOS.

+++
** 'ns-appearance' and 'ns-transparent-titlebar' change the appearance
of frame decorations on macOS 10.9+.

---
** 'ns-use-thin-smoothing' enables thin font smoothing on macOS 10.8+.

---
** 'process-attributes' on Darwin systems now returns more information.

---
** Mousewheel and trackpad scrolling on macOS 10.7+ now behaves more
like the macOS default.  The new variables
'ns-use-system-mwheel-acceleration', 'ns-touchpad-scroll-line-height'
and 'ns-touchpad-use-momentum' can be used to customise the behavior.


----------------------------------------------------------------------
This file is part of GNU Emacs.

GNU Emacs is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

GNU Emacs is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with GNU Emacs.  If not, see <https://www.gnu.org/licenses/>.


Local variables:
coding: utf-8
mode: outline
paragraph-separate: "[ 	]*$"
end:
