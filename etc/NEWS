GNU Emacs NEWS -- history of user-visible changes.

Copyright (C) 2016-2019 Free Software Foundation, Inc.
See the end of the file for license conditions.

Please send Emacs bug reports to 'bug-gnu-emacs@gnu.org'.
If possible, use 'M-x report-emacs-bug'.

This file is about changes in Emacs version 27.

See file HISTORY for a list of GNU Emacs versions and release dates.
See files NEWS.26, NEWS.25, NEWS.24, NEWS.23, NEWS.22, NEWS.21,
NEWS.20, NEWS.19, NEWS.18, and NEWS.1-17 for changes in older Emacs
versions.

You can narrow news to a specific version by calling 'view-emacs-news'
with a prefix argument or by typing 'C-u C-h C-n'.


* Installation Changes in Emacs 26.4


* Startup Changes in Emacs 26.4


* Changes in Emacs 26.4


* Editing Changes in Emacs 26.4


* Changes in Specialized Modes and Packages in Emacs 26.4


* New Modes and Packages in Emacs 26.4


* Incompatible Lisp Changes in Emacs 26.4


* Lisp Changes in Emacs 26.4


* Changes in Emacs 26.4 on Non-Free Operating Systems


* Changes in Emacs 26.3

** New option 'help-enable-completion-auto-load'.
This allows disabling the new feature introduced in Emacs 26.1 which
loads files during completion of 'C-h f' and 'C-h v' according to
'definition-prefixes'.

** Emacs now supports the new Japanese Era name.
The newly assigned codepoint U+32FF was added to the Unicode Character
Database compiled into Emacs.


* Installation Changes in Emacs 26.2

** Building Emacs with the '--with-xwidgets' option now requires WebKit2.
To build Emacs with xwidgets support, you will need to install the
webkit2gtk-4.0 package; version 2.12 or later is required.
(This change was actually made in Emacs 26.1, but was not called out
in its NEWS.)

** Installing Emacs now installs the emacs-module.h file.
The emacs-module.h file is now installed in the system-wide include
directory as part of the Emacs installation.  This allows to build
Emacs modules outside of the Emacs source tree.


* Changes in Emacs 26.2

** Emacs is now compliant with the latest version 11.0 of the Unicode Standard.

** New variable 'xft-ignore-color-fonts'.
Default t means don't try to load color fonts when using Xft, as they
often cause crashes.  Set it to nil if you really need those fonts.


* Changes in Specialized Modes and Packages in Emacs 26.2

** Dired

*** The 'Z' command on a directory name compresses all of its files.
It produces a compressed '.tar.gz' archive with all the files in the
directory and all of its subdirectories.  For symmetry, 'Z' on a
'.tar.gz' or a '.tgz' archive extracts all the archived files into the
current directory; thus, typing 'Z' on a '.tar.gz' archive created by
a previous 'Z' command will extract the archived files into a
directory whose name is the archive name sans the '.tar.gz' extension.
(This change was actually made in Emacs 25.1 but was only
partially called out in its NEWS; 'tgz' handling was added in 26.1.)

** Ibuffer

*** New toggle 'ibuffer-do-toggle-lock', bound to 'L'.

** Imenu

*** The value for 'imenu-auto-rescan-maxout' has been increased to 600000.

** Gnus

*** Mailutils movemail will now be used if found at runtime.
The default value of 'mail-source-movemail-program' is now "movemail".
This ensures that the movemail program from GNU Mailutils will be used
if found in 'exec-path', even if it was not found at build time.  To
use a different program, customize 'mail-source-movemail-program' to the
absolute file name of the desired executable.

** Shadowfile

*** shadowfile.el has been rewritten to support Tramp file names.

** Shell mode

*** Shell mode buffers now have 'scroll-conservatively' set to 101.
This is so as to better emulate the scrolling behavior of a text
terminal when new output is added to the screen buffer.  To get back
the previous behavior, reset 'scroll-conservatively' to zero (or any
other value you like) in a function and add it to 'shell-mode-hook'.
(This change was actually made in Emacs 26.1, but was not called out
in its NEWS.)

** VC

*** VC support for Mercurial was improved.
Emacs now avoids invoking 'hg' as much as possible, for faster operation.
(This and the following changes were actually made in Emacs 26.1, but
were not called out in its NEWS.)

**** New vc-hg options.
The new option 'vc-hg-parse-hg-data-structures' controls whether vc-hg
will try parsing the Mercurial data structures directly instead of
running 'hg'; it defaults to t (set to nil if you want the pre-26.1
behavior).
The new option 'vc-hg-symbolic-revision-styles' controls how versions
in a Mercurial repository are presented symbolically on the mode line.
The new option 'vc-hg-use-file-version-for-mode-line-version' controls
whether the version shown on the mode line is that of the visited file
or of the repository working copy.

**** Display of Mercurial revisions in the mode line has changed.
Previously, the mode line displayed the local number (1, 2, 3, ...) of
the revision.  Starting with Emacs 26.1, the default has changed, and
it now shows the global revision number, in the form of its changeset
hash value.  To get back the previous behavior, customize the new
option 'vc-hg-symbolic-revision-styles' to the value '("{rev}")'.


* Incompatible Lisp Changes in Emacs 26.2

** shadowfile config files have changed their syntax.
Existing files "~/.emacs.d/shadows" and "~/.emacs.d/shadow_todo" must
be removed prior using the changed 'shadow-*' commands.

** 'thread-alive-p' has been renamed to 'thread-live-p'.
The old name is an alias of the new name.  Future Emacs version will
obsolete it.

** 'while-no-input' does not return due to input from subprocesses.
Input that arrived from subprocesses while some code executed inside
the 'while-no-input' form injected an internal buffer-switch event
that counted as input and would cause 'while-no-input' to return,
perhaps prematurely.  These buffer-switch events are now by default
ignored by 'while-no-input'; if you need to get the old behavior,
remove 'buffer-switch' from the list of events in
'while-no-input-ignore-events'.


* Lisp Changes in Emacs 26.2

** The new function 'read-answer' accepts either long or short answers
depending on the new customizable variable 'read-answer-short'.

** New function 'assoc-delete-all'.
Like 'assq-delete-all', but uses 'equal' for comparison.

** The function 'thing-at-point' behaves as before Emacs 26.1.
The behavior of 'thing-at-point' when called with argument 'list' has
changed in Emacs 26.1, in that it didn't consider text inside comments
and strings as a potential list.  This change is now reverted, and
'thing-at-point' behaves like it did before Emacs 26.1.

** To cater to use cases where comments and strings are to be ignored
when looking for a list, the function 'list-at-point' now takes an
optional argument to do so.


* Changes in Emacs 26.2 on Non-Free Operating Systems

** macOS features can now be detected at run-time as well as at
build-time.  See nextstep/INSTALL for details.
(This change was actually made in Emacs 26.1, but was undocumented and
not called out in its NEWS.)


* Installation Changes in Emacs 27.1


* Startup Changes in Emacs 27.1


* Changes in Emacs 27.1


* Editing Changes in Emacs 27.1

** New variable 'x-wait-for-event-timeout'.
This controls how long Emacs will wait for updates to the graphical
state to take effect (making a frame visible, for example).


* Changes in Specialized Modes and Packages in Emacs 27.1


* New Modes and Packages in Emacs 27.1

** New package 'auth-source-pass' integrates 'auth-source' with the
password manager password-store (http://passwordstore.org).


* Incompatible Lisp Changes in Emacs 27.1

** 'format' now avoids allocating a new string in more cases.
'format' was previously documented to return a newly-allocated string,
but this documentation was not correct, as (eq x (format x)) returned
t when x was the empty string.  'format' is no longer documented to
return a newly-allocated string, and the implementation now takes
advantage of the doc change to avoid making copies of strings in
common cases like (format "foo") and (format "%s" "foo").

** The function 'eldoc-message' now accepts a single argument.
Programs that called it with multiple arguments before should pass
them through 'format' first.  Even that is discouraged: for ElDoc
support, you should set 'eldoc-documentation-function' instead of
calling 'eldoc-message' directly.

** Using '&rest' or '&optional' incorrectly is now an error.
For example giving '&optional' without a following variable, or
passing '&optional' multiple times:

    (defun foo (&optional &rest x))
    (defun bar (&optional &optional x))

Previously, Emacs would just ignore the extra keyword, or give
incorrect results in certain cases.

** The pinentry.el library has been removed.
That package (and the corresponding change in GnuPG and pinentry)
was intended to provide a way to input passphrase through Emacs with
GnuPG 2.0.  However, the change to support that was only implemented
in GnuPG >= 2.1 and didn't get backported to GnuPG 2.0.  And with
GnuPG 2.1 and later, pinentry.el is not needed at all.  So the
library was useless, and we removed it.  GnuPG 2.0 is no longer
supported by the upstream project.

To adapt to the change, you may need to set 'epa-pinentry-mode' to the
symbol 'loopback'.  Alternatively, leave 'epa-pinentry-mode' at its
default value of nil, and remove the 'allow-emacs-pinentry' setting
from your 'gpg-agent.conf' configuration file, usually found in the
'~/.gnupg' directory.

Note that previously, it was said that passphrase input through
minibuffer would be much less secure than other graphical pinentry
programs.  However, these days the difference is insignificant: the
'read-password' function sufficiently protects input from leakage to
message logs.  Emacs still doesn't use secure memory to protect
passphrases, but it was also removed from other pinentry programs as
the attack is unrealistic on modern computer systems which don't
utilize swap memory usually.

** The function 'display-buffer-in-major-side-window' no longer exists.
It has been renamed as internal function 'window--make-major-side-window',
however applications should instead call 'display-buffer-in-side-window'
(passing the SIDE and SLOT parameters as elements of ALIST).  This approach
is backwards-compatible with versions of Emacs in which the old function
exists.  See the node "Displaying Buffers in Side Windows" in the ELisp
manual for more details.

* Lisp Changes in Emacs 27.1

** New functions to set region from secondary selection and vice versa.
The new functions 'secondary-selection-to-region' and
'secondary-selection-from-region' let you set the beginning and the
end of the region from those of the secondary selection and vice
versa.

** New function 'lgstring-remove-glyph' can be used to modify a
gstring returned by the underlying layout engine (e.g. m17n-flt,
uniscribe).


* Changes in Emacs 27.1 on Non-Free Operating Systems

** Mousewheel and trackpad scrolling on macOS 10.7+ now behaves more
like the macOS default.  The new variables 'ns-mwheel-line-height',
'ns-use-mwheel-acceleration' and 'ns-use-mwheel-momentum' can be used
to customize the behavior.


----------------------------------------------------------------------
This file is part of GNU Emacs.

GNU Emacs is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

GNU Emacs is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with GNU Emacs.  If not, see <https://www.gnu.org/licenses/>.


Local variables:
coding: utf-8
mode: outline
paragraph-separate: "[ 	]*$"
end:
