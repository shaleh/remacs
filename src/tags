!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	2	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
a	data.c	/^  (Lisp_Object a, Lisp_Object b)$/;"	v
a	data.c	/^  (Lisp_Object a, Lisp_Object b, Lisp_Object c)$/;"	v
a	data.c	/^  (Lisp_Object a, Lisp_Object b, Lisp_Object i)$/;"	v
a	editfns.c	/^  (Lisp_Object a, Lisp_Object b)$/;"	v
a	fileio.c	/^  (Lisp_Object a, Lisp_Object b)$/;"	v
a0	lisp.h	/^      Lisp_Object (*a0) (void);$/;"	m	union:Lisp_Subr::__anon22	access:public
a1	lisp.h	/^      Lisp_Object (*a1) (Lisp_Object);$/;"	m	union:Lisp_Subr::__anon22	access:public
a2	lisp.h	/^      Lisp_Object (*a2) (Lisp_Object, Lisp_Object);$/;"	m	union:Lisp_Subr::__anon22	access:public
a3	lisp.h	/^      Lisp_Object (*a3) (Lisp_Object, Lisp_Object, Lisp_Object);$/;"	m	union:Lisp_Subr::__anon22	access:public
a4	lisp.h	/^      Lisp_Object (*a4) (Lisp_Object, Lisp_Object, Lisp_Object, Lisp_Object);$/;"	m	union:Lisp_Subr::__anon22	access:public
a5	lisp.h	/^      Lisp_Object (*a5) (Lisp_Object, Lisp_Object, Lisp_Object, Lisp_Object, Lisp_Object);$/;"	m	union:Lisp_Subr::__anon22	access:public
a6	lisp.h	/^      Lisp_Object (*a6) (Lisp_Object, Lisp_Object, Lisp_Object, Lisp_Object, Lisp_Object, Lisp_Object);$/;"	m	union:Lisp_Subr::__anon22	access:public
a7	lisp.h	/^      Lisp_Object (*a7) (Lisp_Object, Lisp_Object, Lisp_Object, Lisp_Object, Lisp_Object, Lisp_Object, Lisp_Object);$/;"	m	union:Lisp_Subr::__anon22	access:public
a8	lisp.h	/^      Lisp_Object (*a8) (Lisp_Object, Lisp_Object, Lisp_Object, Lisp_Object, Lisp_Object, Lisp_Object, Lisp_Object, Lisp_Object);$/;"	m	union:Lisp_Subr::__anon22	access:public
aa	xsettings.c	/^  FcBool aa, hinting;$/;"	m	struct:xsettings	file:	access:public
Aadd	data.c	/^    Aadd,$/;"	e	enum:arithop	file:
abase	alloc.c	/^  struct ablocks *abase;$/;"	m	struct:ablock	typeref:struct:ablock::ablocks	file:	access:public
abbrev_mode_	buffer.h	/^  Lisp_Object abbrev_mode_;$/;"	m	struct:buffer	access:public
abbrev_table_	buffer.h	/^  Lisp_Object abbrev_table_;$/;"	m	struct:buffer	access:public
abbr_to_signal	process.c	/^abbr_to_signal (char const *name)$/;"	f	file:	signature:(char const *name)
ablock	alloc.c	/^struct ablock$/;"	s	file:
ablock::abase	alloc.c	/^  struct ablocks *abase;$/;"	m	struct:ablock	typeref:struct:ablock::ablocks	file:	access:public
ablock::padding	alloc.c	/^  char padding[BLOCK_PADDING];$/;"	m	struct:ablock	file:	access:public
ablock::x	alloc.c	/^  } x;$/;"	m	struct:ablock	typeref:union:ablock::__anon5	file:	access:public
ablock::__anon5::next_free	alloc.c	/^    struct ablock *next_free;$/;"	m	union:ablock::__anon5	typeref:struct:ablock::__anon5::ablock	file:	access:public
ablock::__anon5::payload	alloc.c	/^    char payload[BLOCK_BYTES];$/;"	m	union:ablock::__anon5	file:	access:public
ablocks	alloc.c	/^struct ablocks$/;"	s	file:
ablocks::blocks	alloc.c	/^  struct ablock blocks[ABLOCKS_SIZE];$/;"	m	struct:ablocks	typeref:struct:ablocks::ablock	file:	access:public
ABLOCKS_BASE	alloc.c	1233;"	d	file:
ABLOCKS_BASE	alloc.c	1235;"	d	file:
ABLOCKS_BUSY	alloc.c	1229;"	d	file:
ABLOCKS_BYTES	alloc.c	1221;"	d	file:
ABLOCKS_SIZE	alloc.c	1185;"	d	file:
ABLOCK_ABASE	alloc.c	1223;"	d	file:
abortfunc	gmalloc.c	/^static void (*abortfunc) (enum mcheck_status);$/;"	v	file:
AbsPosition	cm.h	116;"	d
AbsPositionCost	cm.h	138;"	d
abs_top_srcdir	Makefile	/^abs_top_srcdir=\/home\/sieut\/work\/remacs$/;"	m
accent_key_syms	keyboard.c	/^static Lisp_Object accent_key_syms;$/;"	v	file:
accept	w32.c	236;"	d	file:
accept4	process.c	/^accept4 (int sockfd, struct sockaddr *addr, socklen_t *addrlen, int flags)$/;"	f	file:	signature:(int sockfd, struct sockaddr *addr, socklen_t *addrlen, int flags)
accept4	process.c	185;"	d	file:
accept4	process.c	186;"	d	file:
accept_default	keymap.c	/^  (Lisp_Object key, Lisp_Object accept_default, Lisp_Object no_remap, Lisp_Object position)$/;"	v
access	w32.c	49;"	d	file:
accessible_keymaps_1	keymap.c	/^accessible_keymaps_1 (Lisp_Object key, Lisp_Object cmd, Lisp_Object args, void *data)$/;"	f	file:	signature:(Lisp_Object key, Lisp_Object cmd, Lisp_Object args, void *data)
accessible_keymaps_data	keymap.c	/^struct accessible_keymaps_data {$/;"	s	file:
accessible_keymaps_data::is_metized	keymap.c	/^  bool is_metized;$/;"	m	struct:accessible_keymaps_data	file:	access:public
accessible_keymaps_data::maps	keymap.c	/^  Lisp_Object maps, tail, thisseq;$/;"	m	struct:accessible_keymaps_data	file:	access:public
accessible_keymaps_data::tail	keymap.c	/^  Lisp_Object maps, tail, thisseq;$/;"	m	struct:accessible_keymaps_data	file:	access:public
accessible_keymaps_data::thisseq	keymap.c	/^  Lisp_Object maps, tail, thisseq;$/;"	m	struct:accessible_keymaps_data	file:	access:public
access_keymap	keymap.c	/^access_keymap (Lisp_Object map, Lisp_Object idx,$/;"	f	signature:(Lisp_Object map, Lisp_Object idx, bool t_ok, bool noinherit, bool autoload)
access_keymap	keymap.h	/^extern Lisp_Object access_keymap (Lisp_Object, Lisp_Object, bool, bool, bool);$/;"	p	signature:(Lisp_Object, Lisp_Object, bool, bool, bool)
access_keymap_1	keymap.c	/^access_keymap_1 (Lisp_Object map, Lisp_Object idx,$/;"	f	file:	signature:(Lisp_Object map, Lisp_Object idx, bool t_ok, bool noinherit, bool autoload)
access_keymap_keyremap	keyboard.c	/^access_keymap_keyremap (Lisp_Object map, Lisp_Object key, Lisp_Object prompt,$/;"	f	file:	signature:(Lisp_Object map, Lisp_Object key, Lisp_Object prompt, bool do_funcall)
accumulate_script_ranges	fontset.c	/^accumulate_script_ranges (Lisp_Object arg, Lisp_Object range, Lisp_Object val)$/;"	f	file:	signature:(Lisp_Object arg, Lisp_Object range, Lisp_Object val)
acl_errno_valid	w32.c	/^acl_errno_valid (int errnum)$/;"	f	signature:(int errnum)
acl_free	w32.c	/^acl_free (void *ptr)$/;"	f	signature:(void *ptr)
acl_from_text	w32.c	/^acl_from_text (const char *acl_str)$/;"	f	signature:(const char *acl_str)
acl_get_file	w32.c	/^acl_get_file (const char *fname, acl_type_t type)$/;"	f	signature:(const char *fname, acl_type_t type)
acl_set_file	w32.c	/^acl_set_file (const char *fname, acl_type_t type, acl_t acl)$/;"	f	signature:(const char *fname, acl_type_t type, acl_t acl)
acl_to_text	w32.c	/^acl_to_text (acl_t acl, ssize_t *size)$/;"	f	signature:(acl_t acl, ssize_t *size)
acl_valid	w32.c	/^acl_valid (acl_t acl)$/;"	f	signature:(acl_t acl)
acquire_global_lock	thread.c	/^acquire_global_lock (struct thread_state *self)$/;"	f	file:	signature:(struct thread_state *self)
action	sysdep.c	/^  struct sigaction action;$/;"	m	struct:save_signal	typeref:struct:save_signal::sigaction	file:	access:public
action_hook_id	xterm.c	/^static XtActionHookId action_hook_id;$/;"	v	file:
active_maps	keyboard.c	/^active_maps (Lisp_Object first_event)$/;"	f	file:	signature:(Lisp_Object first_event)
adaptive_read_buffering	process.h	/^    unsigned int adaptive_read_buffering : 2;$/;"	m	struct:Lisp_Process	access:public
ADDR	ccl.c	915;"	d	file:
ADDRESS	gmalloc.c	165;"	d	file:
address	process.c	/^  (Lisp_Object address, Lisp_Object omit_port)$/;"	v
address	unexmacosx.c	/^  vm_address_t address;$/;"	m	struct:region_t	file:	access:public
address	w32heap.c	/^  unsigned char *address;$/;"	m	struct:__anon139	file:	access:public
ADDRESS_SANITIZER	conf_post.h	88;"	d
ADDRESS_SANITIZER	conf_post.h	90;"	d
ADDRESS_SANITIZER_WORKAROUND	conf_post.h	250;"	d
ADDRESS_SANITIZER_WORKAROUND	conf_post.h	252;"	d
ADD_ANNOTATION_DATA	coding.c	1095;"	d	file:
ADD_CHARSET_DATA	coding.c	1111;"	d	file:
add_command_key	keyboard.c	/^add_command_key (Lisp_Object key)$/;"	f	file:	signature:(Lisp_Object key)
ADD_COMPOSITION_DATA	coding.c	1103;"	d	file:
add_env	callproc.c	/^add_env (char **env, char **new_env, char *string)$/;"	f	file:	signature:(char **env, char **new_env, char *string)
add_exe_suffix_if_necessary	unexcw.c	/^add_exe_suffix_if_necessary (const char *name, char *modified)$/;"	f	file:	signature:(const char *name, char *modified)
add_font_entity_to_list	w32font.c	/^add_font_entity_to_list (ENUMLOGFONTEX *logical_font,$/;"	f	file:	signature:(ENUMLOGFONTEX *logical_font, NEWTEXTMETRICEX *physical_font, DWORD font_type, LPARAM lParam)
add_font_entity_to_list	w32font.c	/^static int CALLBACK ALIGN_STACK add_font_entity_to_list (ENUMLOGFONTEX *,$/;"	p	file:	signature:(ENUMLOGFONTEX *, NEWTEXTMETRICEX *, DWORD, LPARAM)
add_font_name_to_list	w32font.c	/^add_font_name_to_list (ENUMLOGFONTEX *logical_font,$/;"	f	file:	signature:(ENUMLOGFONTEX *logical_font, NEWTEXTMETRICEX *physical_font, DWORD font_type, LPARAM list_object)
add_font_name_to_list	w32font.c	/^static int CALLBACK ALIGN_STACK add_font_name_to_list (ENUMLOGFONTEX *,$/;"	p	file:	signature:(ENUMLOGFONTEX *, NEWTEXTMETRICEX *, DWORD, LPARAM)
add_frame_display_history	dispnew.c	/^add_frame_display_history (struct frame *f, bool paused_p)$/;"	f	file:	signature:(struct frame *f, bool paused_p)
add_gpm_wait_descriptor	lisp.h	/^extern void add_gpm_wait_descriptor (int);$/;"	p	signature:(int)
add_gpm_wait_descriptor	process.c	/^add_gpm_wait_descriptor (int desc)$/;"	f	signature:(int desc)
ADD_IMAGE_TYPE	image.c	546;"	d	file:
add_keyboard_wait_descriptor	lisp.h	/^extern void add_keyboard_wait_descriptor (int);$/;"	p	signature:(int)
add_keyboard_wait_descriptor	process.c	/^add_keyboard_wait_descriptor (int desc)$/;"	f	signature:(int desc)
add_menu_item	w32menu.c	/^add_menu_item (HMENU menu, widget_value *wv, HMENU item)$/;"	f	file:	signature:(HMENU menu, widget_value *wv, HMENU item)
add_non_blocking_write_fd	process.c	/^add_non_blocking_write_fd (int fd)$/;"	f	file:	signature:(int fd)
add_non_keyboard_read_fd	process.c	/^add_non_keyboard_read_fd (int fd)$/;"	f	file:	signature:(int fd)
add_one_font_entity_to_list	w32font.c	/^add_one_font_entity_to_list (ENUMLOGFONTEX *logical_font,$/;"	f	file:	signature:(ENUMLOGFONTEX *logical_font, NEWTEXTMETRICEX *physical_font, DWORD font_type, LPARAM lParam)
add_one_font_entity_to_list	w32font.c	/^static int CALLBACK ALIGN_STACK add_one_font_entity_to_list (ENUMLOGFONTEX *,$/;"	p	file:	signature:(ENUMLOGFONTEX *, NEWTEXTMETRICEX *, DWORD, LPARAM)
add_opentype_font_name_to_list	w32uniscribe.c	/^add_opentype_font_name_to_list (ENUMLOGFONTEX *logical_font,$/;"	f	file:	signature:(ENUMLOGFONTEX *logical_font, NEWTEXTMETRICEX *physical_font, DWORD font_type, LPARAM list_object)
add_opentype_font_name_to_list	w32uniscribe.c	/^static int CALLBACK ALIGN_STACK add_opentype_font_name_to_list (ENUMLOGFONTEX *,$/;"	p	file:	signature:(ENUMLOGFONTEX *, NEWTEXTMETRICEX *, DWORD, LPARAM)
add_overlay_mod_hooklist	buffer.c	/^add_overlay_mod_hooklist (Lisp_Object functionlist, Lisp_Object overlay)$/;"	f	file:	signature:(Lisp_Object functionlist, Lisp_Object overlay)
add_process_read_fd	process.c	/^add_process_read_fd (int fd)$/;"	f	file:	signature:(int fd)
add_properties	textprop.c	/^add_properties (Lisp_Object plist, INTERVAL i, Lisp_Object object,$/;"	f	file:	signature:(Lisp_Object plist, INTERVAL i, Lisp_Object object, enum property_set_type set_type)
add_read_fd	process.c	/^add_read_fd (int fd, fd_callback func, void *data)$/;"	f	signature:(int fd, fd_callback func, void *data)
add_read_fd	process.h	/^extern void add_read_fd (int fd, fd_callback func, void *data);$/;"	p	signature:(int fd, fd_callback func, void *data)
add_row_entry	dispnew.c	/^add_row_entry (struct glyph_row *row)$/;"	f	file:	signature:(struct glyph_row *row)
ADD_SUBFEATURE	process.c	7983;"	d	file:
add_system_logical_colors_to_map	w32fns.c	/^add_system_logical_colors_to_map (Lisp_Object *system_colors)$/;"	f	file:	signature:(Lisp_Object *system_colors)
add_text_properties_1	textprop.c	/^add_text_properties_1 (Lisp_Object start, Lisp_Object end,$/;"	f	file:	signature:(Lisp_Object start, Lisp_Object end, Lisp_Object properties, Lisp_Object object, enum property_set_type set_type)
add_text_properties_from_list	intervals.h	/^void add_text_properties_from_list (Lisp_Object, Lisp_Object, Lisp_Object);$/;"	p	signature:(Lisp_Object, Lisp_Object, Lisp_Object)
add_text_properties_from_list	textprop.c	/^add_text_properties_from_list (Lisp_Object object, Lisp_Object list, Lisp_Object delta)$/;"	f	signature:(Lisp_Object object, Lisp_Object list, Lisp_Object delta)
add_timer_wait_descriptor	lisp.h	/^extern void add_timer_wait_descriptor (int);$/;"	p	signature:(int)
add_timer_wait_descriptor	process.c	/^add_timer_wait_descriptor (int fd)$/;"	f	signature:(int fd)
add_to_log	lisp.h	/^extern void add_to_log (char const *, ...);$/;"	p	signature:(char const *, ...)
add_to_log	xdisp.c	/^add_to_log (const char *format, ...)$/;"	f	signature:(const char *format, ...)
add_tray_notification	w32fns.c	/^add_tray_notification (struct frame *f, const char *icon, const char *tip,$/;"	f	file:	signature:(struct frame *f, const char *icon, const char *tip, enum NI_Severity severity, unsigned timeout, const char *title, const char *msg)
add_user_signal	keyboard.c	/^add_user_signal (int sig, const char *name)$/;"	f	signature:(int sig, const char *name)
add_user_signal	keyboard.h	/^extern void add_user_signal (int, const char *);$/;"	p	signature:(int, const char *)
add_volume_info	w32.c	/^add_volume_info (char * root_dir, volume_info_data * info)$/;"	f	file:	signature:(char * root_dir, volume_info_data * info)
add_watch	inotify.c	/^add_watch (int wd, Lisp_Object filename,$/;"	f	file:	signature:(int wd, Lisp_Object filename, uint32_t imask, Lisp_Object callback)
add_watch	w32notify.c	/^add_watch (const char *parent_dir, const char *file, BOOL subdirs, DWORD flags)$/;"	f	file:	signature:(const char *parent_dir, const char *file, BOOL subdirs, DWORD flags)
add_window_display_history	dispnew.c	/^add_window_display_history (struct window *w, const char *msg, bool paused_p)$/;"	f	file:	signature:(struct window *w, const char *msg, bool paused_p)
add_window_to_list	window.c	/^add_window_to_list (struct window *w, void *user_data)$/;"	f	file:	signature:(struct window *w, void *user_data)
add_write_fd	process.c	/^add_write_fd (int fd, fd_callback func, void *data)$/;"	f	signature:(int fd, fd_callback func, void *data)
add_write_fd	process.h	/^extern void add_write_fd (int fd, fd_callback func, void *data);$/;"	p	signature:(int fd, fd_callback func, void *data)
Adiv	data.c	/^    Adiv,$/;"	e	enum:arithop	file:
adjust_after_insert	insdel.c	/^adjust_after_insert (ptrdiff_t from, ptrdiff_t from_byte,$/;"	f	signature:(ptrdiff_t from, ptrdiff_t from_byte, ptrdiff_t to, ptrdiff_t to_byte, ptrdiff_t newlen)
adjust_after_insert	lisp.h	/^extern void adjust_after_insert (ptrdiff_t, ptrdiff_t, ptrdiff_t,$/;"	p	signature:(ptrdiff_t, ptrdiff_t, ptrdiff_t, ptrdiff_t, ptrdiff_t)
adjust_after_replace	insdel.c	/^adjust_after_replace (ptrdiff_t from, ptrdiff_t from_byte,$/;"	f	file:	signature:(ptrdiff_t from, ptrdiff_t from_byte, Lisp_Object prev_text, ptrdiff_t len, ptrdiff_t len_byte)
adjust_anchor	ftfont.c	/^adjust_anchor (FT_Face ft_face, OTF_Anchor *anchor,$/;"	f	file:	signature:(FT_Face ft_face, OTF_Anchor *anchor, unsigned code, int x_ppem, int y_ppem, int *x, int *y)
adjust_coding_eol_type	coding.c	/^adjust_coding_eol_type (struct coding_system *coding, int eol_seen)$/;"	f	file:	signature:(struct coding_system *coding, int eol_seen)
adjust_coding_eol_type	coding.c	/^static Lisp_Object adjust_coding_eol_type (struct coding_system *coding,$/;"	p	file:	signature:(struct coding_system *coding, int eol_seen)
adjust_decode_mode_spec_buffer	dispnew.c	/^adjust_decode_mode_spec_buffer (struct frame *f)$/;"	f	file:	signature:(struct frame *f)
adjust_decode_mode_spec_buffer	dispnew.c	/^static void adjust_decode_mode_spec_buffer (struct frame *);$/;"	p	file:	signature:(struct frame *)
adjust_for_invis_intang	intervals.c	/^adjust_for_invis_intang (ptrdiff_t pos, ptrdiff_t test_offs, ptrdiff_t adj,$/;"	f	file:	signature:(ptrdiff_t pos, ptrdiff_t test_offs, ptrdiff_t adj, bool test_intang)
adjust_frame_glyphs	dispextern.h	/^extern void adjust_frame_glyphs (struct frame *);$/;"	p	signature:(struct frame *)
adjust_frame_glyphs	dispnew.c	/^adjust_frame_glyphs (struct frame *f)$/;"	f	signature:(struct frame *f)
adjust_frame_glyphs_for_frame_redisplay	dispnew.c	/^adjust_frame_glyphs_for_frame_redisplay (struct frame *f)$/;"	f	file:	signature:(struct frame *f)
adjust_frame_glyphs_for_frame_redisplay	dispnew.c	/^static void adjust_frame_glyphs_for_frame_redisplay (struct frame *);$/;"	p	file:	signature:(struct frame *)
adjust_frame_glyphs_for_window_redisplay	dispnew.c	/^adjust_frame_glyphs_for_window_redisplay (struct frame *f)$/;"	f	file:	signature:(struct frame *f)
adjust_frame_glyphs_for_window_redisplay	dispnew.c	/^static void adjust_frame_glyphs_for_window_redisplay (struct frame *);$/;"	p	file:	signature:(struct frame *)
adjust_frame_size	frame.c	/^adjust_frame_size (struct frame *f, int new_width, int new_height, int inhibit,$/;"	f	signature:(struct frame *f, int new_width, int new_height, int inhibit, bool pretend, Lisp_Object parameter)
adjust_frame_size	frame.h	/^extern void adjust_frame_size (struct frame *, int, int, int, bool, Lisp_Object);$/;"	p	signature:(struct frame *, int, int, int, bool, Lisp_Object)
adjust_glyph_matrix	dispnew.c	/^adjust_glyph_matrix (struct window *w, struct glyph_matrix *matrix, int x, int y, struct dim dim)$/;"	f	file:	signature:(struct window *w, struct glyph_matrix *matrix, int x, int y, struct dim dim)
adjust_intervals_for_deletion	intervals.c	/^adjust_intervals_for_deletion (struct buffer *buffer,$/;"	f	file:	signature:(struct buffer *buffer, ptrdiff_t start, ptrdiff_t length)
adjust_intervals_for_insertion	intervals.c	/^adjust_intervals_for_insertion (INTERVAL tree,$/;"	f	file:	signature:(INTERVAL tree, ptrdiff_t position, ptrdiff_t length)
adjust_lnnoptrs	unexaix.c	/^adjust_lnnoptrs (int writedesc, int readdesc, const char *new_name)$/;"	f	file:	signature:(int writedesc, int readdesc, const char *new_name)
adjust_lnnoptrs	unexaix.c	/^static int adjust_lnnoptrs (int, int, const char *);$/;"	p	file:	signature:(int, int, const char *)
adjust_markers_bytepos	insdel.c	/^adjust_markers_bytepos (ptrdiff_t from, ptrdiff_t from_byte,$/;"	f	signature:(ptrdiff_t from, ptrdiff_t from_byte, ptrdiff_t to, ptrdiff_t to_byte, int to_z)
adjust_markers_bytepos	lisp.h	/^extern void adjust_markers_bytepos (ptrdiff_t, ptrdiff_t,$/;"	p	signature:(ptrdiff_t, ptrdiff_t, ptrdiff_t, ptrdiff_t, int)
adjust_markers_for_delete	insdel.c	/^adjust_markers_for_delete (ptrdiff_t from, ptrdiff_t from_byte,$/;"	f	signature:(ptrdiff_t from, ptrdiff_t from_byte, ptrdiff_t to, ptrdiff_t to_byte)
adjust_markers_for_delete	lisp.h	/^extern void adjust_markers_for_delete (ptrdiff_t, ptrdiff_t,$/;"	p	signature:(ptrdiff_t, ptrdiff_t, ptrdiff_t, ptrdiff_t)
adjust_markers_for_insert	insdel.c	/^adjust_markers_for_insert (ptrdiff_t from, ptrdiff_t from_byte,$/;"	f	file:	signature:(ptrdiff_t from, ptrdiff_t from_byte, ptrdiff_t to, ptrdiff_t to_byte, bool before_markers)
adjust_markers_for_replace	insdel.c	/^adjust_markers_for_replace (ptrdiff_t from, ptrdiff_t from_byte,$/;"	f	file:	signature:(ptrdiff_t from, ptrdiff_t from_byte, ptrdiff_t old_chars, ptrdiff_t old_bytes, ptrdiff_t new_chars, ptrdiff_t new_bytes)
ADJUST_OFFSET	unexw32.c	651;"	d	file:
adjust_overlays_for_delete	buffer.c	/^adjust_overlays_for_delete (ptrdiff_t pos, ptrdiff_t length)$/;"	f	signature:(ptrdiff_t pos, ptrdiff_t length)
adjust_overlays_for_delete	lisp.h	/^extern void adjust_overlays_for_delete (ptrdiff_t, ptrdiff_t);$/;"	p	signature:(ptrdiff_t, ptrdiff_t)
adjust_overlays_for_insert	buffer.c	/^adjust_overlays_for_insert (ptrdiff_t pos, ptrdiff_t length)$/;"	f	signature:(ptrdiff_t pos, ptrdiff_t length)
adjust_overlays_for_insert	lisp.h	/^extern void adjust_overlays_for_insert (ptrdiff_t, ptrdiff_t);$/;"	p	signature:(ptrdiff_t, ptrdiff_t)
adjust_point	insdel.c	/^adjust_point (ptrdiff_t nchars, ptrdiff_t nbytes)$/;"	f	file:	signature:(ptrdiff_t nchars, ptrdiff_t nbytes)
adjust_point_for_property	keyboard.c	/^adjust_point_for_property (ptrdiff_t last_pt, bool modified)$/;"	f	file:	signature:(ptrdiff_t last_pt, bool modified)
adjust_point_for_property	keyboard.c	/^static void adjust_point_for_property (ptrdiff_t, bool);$/;"	p	file:
adjust_suspend_auto_hscroll	insdel.c	/^adjust_suspend_auto_hscroll (ptrdiff_t from, ptrdiff_t to)$/;"	f	file:	signature:(ptrdiff_t from, ptrdiff_t to)
adjust_window_count	window.c	/^adjust_window_count (struct window *w, int arg)$/;"	f	file:	signature:(struct window *w, int arg)
adjust_window_ends	xdisp.c	/^adjust_window_ends (struct window *w, struct glyph_row *row, bool current)$/;"	f	file:	signature:(struct window *w, struct glyph_row *row, bool current)
ADVANCE	alloc.c	2925;"	d	file:
advance	font.h	/^  int advance;$/;"	m	struct:font_bitmap	access:public
advance	macfont.h	/^  CGFloat advance;$/;"	m	struct:mac_glyph_layout	access:public
advance_delta	macfont.h	/^  CGFloat advance_delta, baseline_delta;$/;"	m	struct:mac_glyph_layout	access:public
advance_to_char_boundary	buffer.c	/^advance_to_char_boundary (ptrdiff_t byte_pos)$/;"	f	file:	signature:(ptrdiff_t byte_pos)
after_deadkey	w32fns.c	/^static int after_deadkey = -1;$/;"	v	file:
after_make_frame	frame.h	/^  bool_bf after_make_frame : 1;$/;"	m	struct:frame	access:public
after_string_p	xdisp.c	/^  bool after_string_p;$/;"	m	struct:overlay_entry	file:	access:public
after_update_window_line_hook	dispextern.h	/^  void (*after_update_window_line_hook) (struct window *w,$/;"	m	struct:redisplay_interface	access:public
AF_LOCAL	process.c	52;"	d	file:
AINC	xdisp.c	13961;"	d	file:
alarm	w32proc.c	/^alarm (int seconds)$/;"	f	signature:(int seconds)
alarm_timer	atimer.c	/^static timer_t alarm_timer;$/;"	v	file:
alarm_timer_ok	atimer.c	/^static bool alarm_timer_ok;$/;"	v	file:
algorithm	fns.c	/^  (Lisp_Object algorithm, Lisp_Object object, Lisp_Object start, Lisp_Object end, Lisp_Object binary)$/;"	v
alias	charset.c	/^  (Lisp_Object alias, Lisp_Object charset)$/;"	v
alias	coding.c	/^  (Lisp_Object alias, Lisp_Object coding_system)$/;"	v
alias	lisp.h	/^    struct Lisp_Symbol *alias;$/;"	m	union:Lisp_Symbol::__anon18	typeref:struct:Lisp_Symbol::__anon18::Lisp_Symbol	access:public
align	fringe.c	/^  unsigned align : 2;$/;"	m	struct:fringe_bitmap	file:	access:public
align	gmalloc.c	/^align (size_t size)$/;"	f	file:	signature:(size_t size)
ALIGN	unexaix.c	77;"	d	file:
alignas	buffer.c	/^struct buffer alignas (GCALIGNMENT) buffer_defaults;$/;"	p	file:
alignas	buffer.c	/^struct buffer alignas (GCALIGNMENT) buffer_local_symbols;$/;"	p	file:
aligned	gmalloc.c	/^    void *aligned;		\/* The address that aligned_alloc returned.  *\/$/;"	m	struct:alignlist	file:	access:public
aligned_alloc	alloc.c	/^aligned_alloc (size_t alignment, size_t size)$/;"	f	file:	signature:(size_t alignment, size_t size)
aligned_alloc	alloc.c	1151;"	d	file:
aligned_alloc	conf_post.h	114;"	d
aligned_alloc	gmalloc.c	/^aligned_alloc (size_t alignment, size_t size)$/;"	f	signature:(size_t alignment, size_t size)
aligned_alloc	gmalloc.c	/^extern void *aligned_alloc (size_t alignment, size_t size);$/;"	p	file:	signature:(size_t alignment, size_t size)
aligned_alloc	gmalloc.c	/^extern void *aligned_alloc (size_t, size_t);$/;"	p	file:
aligned_alloc	gmalloc.c	1694;"	d	file:
aligned_alloc	gmalloc.c	68;"	d	file:
aligned_alloc	gmalloc.c	73;"	d	file:
Aligned_Cons	lisp.h	/^union Aligned_Cons$/;"	u
Aligned_Cons::d	lisp.h	/^  double d; intmax_t i; void *p;$/;"	m	union:Aligned_Cons	access:public
Aligned_Cons::i	lisp.h	/^  double d; intmax_t i; void *p;$/;"	m	union:Aligned_Cons	access:public
Aligned_Cons::p	lisp.h	/^  double d; intmax_t i; void *p;$/;"	m	union:Aligned_Cons	access:public
Aligned_Cons::s	lisp.h	/^  struct Lisp_Cons s;$/;"	m	union:Aligned_Cons	typeref:struct:Aligned_Cons::Lisp_Cons	access:public
aligned_Lisp_Misc	alloc.c	/^union aligned_Lisp_Misc$/;"	u	file:
aligned_Lisp_Misc::c	alloc.c	/^  unsigned char c[(sizeof (union Lisp_Misc) + GCALIGNMENT - 1)$/;"	m	union:aligned_Lisp_Misc	file:	access:public
aligned_Lisp_Misc::m	alloc.c	/^  union Lisp_Misc m;$/;"	m	union:aligned_Lisp_Misc	typeref:union:aligned_Lisp_Misc::Lisp_Misc	file:	access:public
aligned_Lisp_Symbol	alloc.c	/^union aligned_Lisp_Symbol$/;"	u	file:
aligned_Lisp_Symbol::c	alloc.c	/^  unsigned char c[(sizeof (struct Lisp_Symbol) + GCALIGNMENT - 1)$/;"	m	union:aligned_Lisp_Symbol	file:	access:public
aligned_Lisp_Symbol::s	alloc.c	/^  struct Lisp_Symbol s;$/;"	m	union:aligned_Lisp_Symbol	typeref:struct:aligned_Lisp_Symbol::Lisp_Symbol	file:	access:public
Aligned_String	lisp.h	/^union Aligned_String$/;"	u
Aligned_String::d	lisp.h	/^  double d; intmax_t i; void *p;$/;"	m	union:Aligned_String	access:public
Aligned_String::i	lisp.h	/^  double d; intmax_t i; void *p;$/;"	m	union:Aligned_String	access:public
Aligned_String::p	lisp.h	/^  double d; intmax_t i; void *p;$/;"	m	union:Aligned_String	access:public
Aligned_String::s	lisp.h	/^  struct Lisp_String s;$/;"	m	union:Aligned_String	typeref:struct:Aligned_String::Lisp_String	access:public
alignlist	gmalloc.c	/^struct alignlist$/;"	s	file:
alignlist::aligned	gmalloc.c	/^    void *aligned;		\/* The address that aligned_alloc returned.  *\/$/;"	m	struct:alignlist	file:	access:public
alignlist::exact	gmalloc.c	/^    void *exact;		\/* The address that malloc returned.  *\/$/;"	m	struct:alignlist	file:	access:public
alignlist::next	gmalloc.c	/^    struct alignlist *next;$/;"	m	struct:alignlist	typeref:struct:alignlist::alignlist	file:	access:public
ALIGN_BITMAP_BOTTOM	fringe.c	/^  ALIGN_BITMAP_BOTTOM$/;"	e	enum:fringe_bitmap_align	file:
ALIGN_BITMAP_CENTER	fringe.c	/^  ALIGN_BITMAP_CENTER = 0,$/;"	e	enum:fringe_bitmap_align	file:
ALIGN_BITMAP_TOP	fringe.c	/^  ALIGN_BITMAP_TOP,$/;"	e	enum:fringe_bitmap_align	file:
ALIGN_STACK	w32term.h	35;"	d
ALIGN_STACK	w32term.h	37;"	d
alive	process.h	/^    bool_bf alive : 1;$/;"	m	struct:Lisp_Process	access:public
all	thread.c	/^  int all;$/;"	m	struct:notify_args	file:	access:public
ALLOBJS	Makefile	/^ALLOBJS = $(FIRSTFILE_OBJ) $(VMLIMIT_OBJ) $(obj) $(otherobj)$/;"	m
allocated	regex.c	/^  int allocated;		\/* allocated size for work area in bytes.  *\/$/;"	m	struct:range_table_work_area	file:	access:public
allocated	regex.h	/^  size_t allocated;$/;"	m	struct:re_pattern_buffer	access:public
allocated	term.c	/^  ptrdiff_t allocated;$/;"	m	struct:tty_menu_struct	file:	access:public
allocated_mem_type	alloc.c	/^enum mem_type allocated_mem_type;$/;"	v	typeref:enum:mem_type
allocated_via_gmalloc	gmalloc.c	/^allocated_via_gmalloc (void *ptr)$/;"	f	file:	signature:(void *ptr)
allocate_buffer	alloc.c	/^allocate_buffer (void)$/;"	f	signature:(void)
allocate_buffer	lisp.h	/^extern struct buffer * allocate_buffer (void);$/;"	p	signature:(void)
allocate_frame	frame.c	/^allocate_frame (void)$/;"	f	file:	signature:(void)
allocate_hash_table	fns.c	/^allocate_hash_table (void)$/;"	f	file:	signature:(void)
ALLOCATE_HDC	xdisp.c	25302;"	d	file:
ALLOCATE_HDC	xdisp.c	25309;"	d	file:
allocate_kboard	keyboard.c	/^allocate_kboard (Lisp_Object type)$/;"	f	signature:(Lisp_Object type)
allocate_kboard	keyboard.h	/^extern KBOARD *allocate_kboard (Lisp_Object);$/;"	p	signature:(Lisp_Object)
allocate_matrices_for_frame_redisplay	dispnew.c	/^allocate_matrices_for_frame_redisplay (Lisp_Object window, int x, int y,$/;"	f	file:	signature:(Lisp_Object window, int x, int y, bool dim_only_p, int *window_change_flags)
allocate_matrices_for_window_redisplay	dispnew.c	/^allocate_matrices_for_window_redisplay (struct window *w)$/;"	f	file:	signature:(struct window *w)
allocate_misc	alloc.c	/^allocate_misc (enum Lisp_Misc_Type type)$/;"	f	file:	signature:(enum Lisp_Misc_Type type)
allocate_module_function	emacs-module.c	/^allocate_module_function (void)$/;"	f	file:	signature:(void)
allocate_process	process.c	/^allocate_process (void)$/;"	f	file:	signature:(void)
allocate_pseudovector	alloc.c	/^allocate_pseudovector (int memlen, int lisplen,$/;"	f	signature:(int memlen, int lisplen, int zerolen, enum pvec_type tag)
allocate_pseudovector	lisp.h	/^extern struct Lisp_Vector *allocate_pseudovector (int, int, int,$/;"	p	signature:(int, int, int, enum pvec_type)
ALLOCATE_PSEUDOVECTOR	lisp.h	3639;"	d
allocate_pty	process.c	/^allocate_pty (char pty_name[PTY_NAME_SIZE])$/;"	f	file:	signature:(char pty_name[PTY_NAME_SIZE])
allocate_record	alloc.c	/^allocate_record (EMACS_INT count)$/;"	f	file:	signature:(EMACS_INT count)
allocate_string	alloc.c	/^allocate_string (void)$/;"	f	file:	signature:(void)
allocate_string_data	alloc.c	/^allocate_string_data (struct Lisp_String *s,$/;"	f	signature:(struct Lisp_String *s, EMACS_INT nchars, EMACS_INT nbytes)
allocate_string_data	lisp.h	/^extern void allocate_string_data (struct Lisp_String *, EMACS_INT, EMACS_INT);$/;"	p	signature:(struct Lisp_String *, EMACS_INT, EMACS_INT)
allocate_terminal	terminal.c	/^allocate_terminal (void)$/;"	f	file:	signature:(void)
allocate_vector	alloc.c	/^allocate_vector (EMACS_INT len)$/;"	f	signature:(EMACS_INT len)
allocate_vector	lisp.h	/^extern struct Lisp_Vector *allocate_vector (EMACS_INT);$/;"	p	signature:(EMACS_INT)
allocate_vectorlike	alloc.c	/^allocate_vectorlike (ptrdiff_t len)$/;"	f	file:	signature:(ptrdiff_t len)
allocate_vector_block	alloc.c	/^allocate_vector_block (void)$/;"	f	file:	signature:(void)
allocate_vector_from_block	alloc.c	/^allocate_vector_from_block (size_t nbytes)$/;"	f	file:	signature:(size_t nbytes)
allocate_window	window.c	/^allocate_window (void)$/;"	f	file:	signature:(void)
allocate_xwidget	xwidget.c	/^allocate_xwidget (void)$/;"	f	file:	signature:(void)
allocate_xwidget_view	xwidget.c	/^allocate_xwidget_view (void)$/;"	f	file:	signature:(void)
ALLOCATE_ZEROED_PSEUDOVECTOR	lisp.h	3647;"	d
alloc_buffer_text	buffer.c	/^alloc_buffer_text (struct buffer *b, ptrdiff_t nbytes)$/;"	f	file:	signature:(struct buffer *b, ptrdiff_t nbytes)
alloc_buffer_text	buffer.c	/^static void alloc_buffer_text (struct buffer *, ptrdiff_t);$/;"	p	file:	signature:(struct buffer *, ptrdiff_t)
ALLOC_CONVERSION_WORK_AREA	coding.c	7260;"	d	file:
alloc_destination	coding.c	/^alloc_destination (struct coding_system *coding, ptrdiff_t nbytes,$/;"	f	file:	signature:(struct coding_system *coding, ptrdiff_t nbytes, unsigned char *dst)
alloc_unexec_post	alloc.c	/^alloc_unexec_post (void)$/;"	f	signature:(void)
alloc_unexec_post	lisp.h	/^extern void alloc_unexec_post (void);$/;"	p	signature:(void)
alloc_unexec_pre	alloc.c	/^alloc_unexec_pre (void)$/;"	f	signature:(void)
alloc_unexec_pre	lisp.h	/^extern void alloc_unexec_pre (void);$/;"	p	signature:(void)
ALLOC_XPM_COLORS	image.c	3258;"	d	file:
AllValues	nsgui.h	181;"	d
AllValues	w32gui.h	99;"	d
all_buffers	buffer.c	/^struct buffer *all_buffers;$/;"	v	typeref:struct:buffer
ALL_CFLAGS	Makefile	/^ALL_CFLAGS = $(EMACS_CFLAGS) $(WARN_CFLAGS) $(CFLAGS)$/;"	m
all_kboards	keyboard.c	/^static KBOARD *all_kboards;$/;"	v	file:
ALL_OBJC_CFLAGS	Makefile	/^ALL_OBJC_CFLAGS = $(EMACS_CFLAGS) \\$/;"	m
all_threads	thread.c	/^static struct thread_state *all_threads = &main_thread;$/;"	v	typeref:struct:thread_state	file:
Alogand	data.c	/^    Alogand,$/;"	e	enum:arithop	file:
Alogior	data.c	/^    Alogior,$/;"	e	enum:arithop	file:
Alogxor	data.c	/^    Alogxor$/;"	e	enum:arithop	file:
alpha	frame.h	/^  double alpha[2];$/;"	m	struct:frame	access:public
alphabeticp	character.c	/^alphabeticp (int c)$/;"	f	signature:(int c)
alphabeticp	character.h	/^extern bool alphabeticp (int);$/;"	p	signature:(int)
alphanumericp	character.c	/^alphanumericp (int c)$/;"	f	signature:(int c)
alphanumericp	character.h	/^extern bool alphanumericp (int);$/;"	p	signature:(int)
ALPHA_FROM_ULONG	nsterm.h	805;"	d
already_hscrolled_p	frame.h	/^  bool_bf already_hscrolled_p : 1;$/;"	m	struct:frame	access:public
alsa_choose_format	sound.c	/^alsa_choose_format (struct sound_device *sd, struct sound *s)$/;"	f	file:	signature:(struct sound_device *sd, struct sound *s)
alsa_close	sound.c	/^alsa_close (struct sound_device *sd)$/;"	f	file:	signature:(struct sound_device *sd)
alsa_configure	sound.c	/^alsa_configure (struct sound_device *sd)$/;"	f	file:	signature:(struct sound_device *sd)
alsa_init	sound.c	/^alsa_init (struct sound_device *sd)$/;"	f	file:	signature:(struct sound_device *sd)
alsa_open	sound.c	/^alsa_open (struct sound_device *sd)$/;"	f	file:	signature:(struct sound_device *sd)
alsa_params	sound.c	/^struct alsa_params$/;"	s	file:
alsa_params::handle	sound.c	/^  snd_pcm_t *handle;$/;"	m	struct:alsa_params	file:	access:public
alsa_params::hwparams	sound.c	/^  snd_pcm_hw_params_t *hwparams;$/;"	m	struct:alsa_params	file:	access:public
alsa_params::period_size	sound.c	/^  snd_pcm_uframes_t period_size;$/;"	m	struct:alsa_params	file:	access:public
alsa_params::swparams	sound.c	/^  snd_pcm_sw_params_t *swparams;$/;"	m	struct:alsa_params	file:	access:public
alsa_period_size	sound.c	/^alsa_period_size (struct sound_device *sd)$/;"	f	file:	signature:(struct sound_device *sd)
alsa_sound_perror	sound.c	/^alsa_sound_perror (const char *msg, int err)$/;"	f	file:	signature:(const char *msg, int err)
alsa_write	sound.c	/^alsa_write (struct sound_device *sd, const char *buffer, ptrdiff_t nbytes)$/;"	f	file:	signature:(struct sound_device *sd, const char *buffer, ptrdiff_t nbytes)
alt_hooked	w32fns.c	/^  char alt_hooked[256];  \/* hook Alt+[this key]? *\/$/;"	m	struct:__anon74	file:	access:public
alt_modifier	termhooks.h	/^  alt_modifier	=  CHAR_ALT,	\/* Under X, the XK_Alt_[LR] keysyms.  *\/$/;"	e	enum:__anon72
alt_mod_mask	xterm.h	/^  int alt_mod_mask, super_mod_mask, hyper_mod_mask;$/;"	m	struct:x_display_info	access:public
aMANY	lisp.h	/^      Lisp_Object (*aMANY) (ptrdiff_t, Lisp_Object *);$/;"	m	union:Lisp_Subr::__anon22	access:public
AMPERSAND_FULL_NAME	config.h	37;"	d
Amult	data.c	/^    Amult,$/;"	e	enum:arithop	file:
AM_DEFAULT_VERBOSITY	Makefile	/^AM_DEFAULT_VERBOSITY = 0$/;"	m
AM_LEFT_CHILD	intervals.h	77;"	d
AM_RIGHT_CHILD	intervals.h	81;"	d
AM_V_at	Makefile	/^AM_V_at = $(am__v_at_$(V))$/;"	m
AM_V_CC	Makefile	/^AM_V_CC = $(am__v_CC_$(V))$/;"	m
AM_V_CCLD	Makefile	/^AM_V_CCLD = $(am__v_CCLD_$(V))$/;"	m
AM_V_GEN	Makefile	/^AM_V_GEN = $(am__v_GEN_$(V))$/;"	m
AM_V_GLOBALS	Makefile	/^AM_V_GLOBALS = $(am__v_GLOBALS_$(V))$/;"	m
am__v_at_	Makefile	/^am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_at_0	Makefile	/^am__v_at_0 = @$/;"	m
am__v_at_1	Makefile	/^am__v_at_1 =$/;"	m
am__v_CCLD_	Makefile	/^am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_CCLD_0	Makefile	/^am__v_CCLD_0 = @echo "  CCLD    " $@;$/;"	m
am__v_CCLD_1	Makefile	/^am__v_CCLD_1 =$/;"	m
am__v_CC_	Makefile	/^am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_CC_0	Makefile	/^am__v_CC_0 = @echo "  CC      " $@;$/;"	m
am__v_CC_1	Makefile	/^am__v_CC_1 =$/;"	m
am__v_GEN_	Makefile	/^am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_GEN_0	Makefile	/^am__v_GEN_0 = @echo "  GEN     " $@;$/;"	m
am__v_GEN_1	Makefile	/^am__v_GEN_1 =$/;"	m
am__v_GLOBALS_	Makefile	/^am__v_GLOBALS_ = $(am__v_GLOBALS_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_GLOBALS_0	Makefile	/^am__v_GLOBALS_0 = @echo "  GEN     " globals.h;$/;"	m
am__v_GLOBALS_1	Makefile	/^am__v_GLOBALS_1 =$/;"	m
analyze_first	regex.c	/^analyze_first (const_re_char *p, const_re_char *pend, char *fastmap,$/;"	f	file:	signature:(const_re_char *p, const_re_char *pend, char *fastmap, const int multibyte)
analyze_first	regex.c	/^static int analyze_first (re_char *p, re_char *pend,$/;"	p	file:	signature:(re_char *p, re_char *pend, char *fastmap, const int multibyte)
ancestor	frame.c	/^     (Lisp_Object ancestor, Lisp_Object descendant)$/;"	v
anchor_point	font.h	/^  int (*anchor_point) (struct font *font, unsigned code, int index,$/;"	m	struct:font_driver	access:public
animation_cache	image.c	/^static struct animation_cache *animation_cache = NULL;$/;"	v	typeref:struct:animation_cache	file:
animation_cache	image.c	/^struct animation_cache$/;"	s	file:
animation_cache::index	image.c	/^  int index;$/;"	m	struct:animation_cache	file:	access:public
animation_cache::next	image.c	/^  struct animation_cache *next;$/;"	m	struct:animation_cache	typeref:struct:animation_cache::animation_cache	file:	access:public
animation_cache::signature	image.c	/^  char signature[FLEXIBLE_ARRAY_MEMBER];$/;"	m	struct:animation_cache	file:	access:public
animation_cache::update_time	image.c	/^  struct timespec update_time;$/;"	m	struct:animation_cache	typeref:struct:animation_cache::timespec	file:	access:public
animation_cache::wand	image.c	/^  MagickWand *wand;$/;"	m	struct:animation_cache	file:	access:public
annotated	coding.h	/^  bool_bf annotated : 1;$/;"	m	struct:coding_system	access:public
ANSICP	w32select.c	/^static UINT ANSICP, OEMCP;$/;"	v	file:
ansi_encode_filename	w32.c	/^ansi_encode_filename (Lisp_Object filename)$/;"	f	signature:(Lisp_Object filename)
ansi_encode_filename	w32.h	/^extern Lisp_Object ansi_encode_filename (Lisp_Object);$/;"	p	signature:(Lisp_Object)
anychar	regex.c	/^  anychar,$/;"	e	enum:__anon144	file:
ANY_AREA	dispextern.h	/^  ANY_AREA = -1,$/;"	e	enum:glyph_row_area
any_help_event_p	w32term.c	/^static int any_help_event_p;$/;"	v	file:
any_help_event_p	xterm.c	/^static bool any_help_event_p;$/;"	v	file:
append	fileio.c	/^  (Lisp_Object start, Lisp_Object end, Lisp_Object filename, Lisp_Object append,$/;"	v
append	macros.c	/^  (Lisp_Object append, Lisp_Object no_exec)$/;"	v
append	textprop.c	/^   Lisp_Object append, Lisp_Object object)$/;"	v
AppendMenuW_Proc	w32term.h	/^typedef BOOL (WINAPI * AppendMenuW_Proc) ($/;"	t
append_atimer_lists	atimer.c	/^append_atimer_lists (struct atimer *list_1, struct atimer *list_2)$/;"	f	file:	signature:(struct atimer *list_1, struct atimer *list_2)
append_atimer_lists	atimer.c	/^static struct atimer *append_atimer_lists (struct atimer *,$/;"	p	file:	signature:(struct atimer *, struct atimer *)
append_composite_glyph	term.c	/^append_composite_glyph (struct it *it)$/;"	f	file:	signature:(struct it *it)
append_composite_glyph	term.c	/^static void append_composite_glyph (struct it *);$/;"	p	file:	signature:(struct it *)
append_composite_glyph	xdisp.c	/^append_composite_glyph (struct it *it)$/;"	f	file:	signature:(struct it *it)
append_glyph	term.c	/^append_glyph (struct it *it)$/;"	f	file:	signature:(struct it *it)
append_glyph	term.c	/^static void append_glyph (struct it *);$/;"	p	file:	signature:(struct it *)
append_glyph	xdisp.c	/^append_glyph (struct it *it)$/;"	f	file:	signature:(struct it *it)
append_glyphless_glyph	term.c	/^append_glyphless_glyph (struct it *it, int face_id, const char *str)$/;"	f	file:	signature:(struct it *it, int face_id, const char *str)
append_glyphless_glyph	term.c	/^static void append_glyphless_glyph (struct it *, int, const char *);$/;"	p	file:	signature:(struct it *, int, const char *)
append_glyphless_glyph	xdisp.c	/^append_glyphless_glyph (struct it *it, int face_id, bool for_no_font, int len,$/;"	f	file:	signature:(struct it *it, int face_id, bool for_no_font, int len, short upper_xoff, short upper_yoff, short lower_xoff, short lower_yoff)
append_glyph_string	xdisp.c	/^append_glyph_string (struct glyph_string **head, struct glyph_string **tail,$/;"	f	file:	signature:(struct glyph_string **head, struct glyph_string **tail, struct glyph_string *s)
append_glyph_string_lists	xdisp.c	/^append_glyph_string_lists (struct glyph_string **head, struct glyph_string **tail,$/;"	f	file:	signature:(struct glyph_string **head, struct glyph_string **tail, struct glyph_string *h, struct glyph_string *t)
append_key	keymap.c	/^append_key (Lisp_Object key_sequence, Lisp_Object key)$/;"	f	file:	signature:(Lisp_Object key_sequence, Lisp_Object key)
append_space_for_newline	xdisp.c	/^append_space_for_newline (struct it *it, bool default_face_p)$/;"	f	file:	signature:(struct it *it, bool default_face_p)
append_stretch_glyph	xdisp.c	/^append_stretch_glyph (struct it *it, Lisp_Object object,$/;"	f	file:	signature:(struct it *it, Lisp_Object object, int width, int height, int ascent)
append_stretch_glyph	xdisp.c	/^static void append_stretch_glyph (struct it *, Lisp_Object,$/;"	p	file:	signature:(struct it *, Lisp_Object, int, int, int)
append_tool_bar_item	keyboard.c	/^append_tool_bar_item (void)$/;"	f	file:	signature:(void)
append_tool_bar_item	keyboard.c	/^static void append_tool_bar_item (void);$/;"	p	file:	signature:(void)
apply1	eval.c	/^apply1 (Lisp_Object fn, Lisp_Object arg)$/;"	f	signature:(Lisp_Object fn, Lisp_Object arg)
apply1	lisp.h	/^extern Lisp_Object apply1 (Lisp_Object, Lisp_Object);$/;"	p	signature:(Lisp_Object, Lisp_Object)
apply_lambda	eval.c	/^apply_lambda (Lisp_Object fun, Lisp_Object args, ptrdiff_t count)$/;"	f	file:	signature:(Lisp_Object fun, Lisp_Object args, ptrdiff_t count)
apply_lambda	eval.c	/^static Lisp_Object apply_lambda (Lisp_Object, Lisp_Object, ptrdiff_t);$/;"	p	file:
apply_modifiers	keyboard.c	/^apply_modifiers (int modifiers, Lisp_Object base)$/;"	f	file:	signature:(int modifiers, Lisp_Object base)
apply_modifiers	keyboard.c	/^static Lisp_Object apply_modifiers (int, Lisp_Object);$/;"	p	file:	signature:(int, Lisp_Object)
apply_modifiers_uncached	keyboard.c	/^apply_modifiers_uncached (int modifiers, char *base, int base_len, int base_len_byte)$/;"	f	file:	signature:(int modifiers, char *base, int base_len, int base_len_byte)
apply_systemfont_to_dialog	xmenu.c	/^apply_systemfont_to_dialog (Widget w)$/;"	f	file:	signature:(Widget w)
apply_systemfont_to_menu	xmenu.c	/^apply_systemfont_to_menu (struct frame *f, Widget w)$/;"	f	file:	signature:(struct frame *f, Widget w)
apply_window_adjustment	window.c	/^apply_window_adjustment (struct window *w)$/;"	f	file:	signature:(struct window *w)
apply_window_adjustment	window.c	/^static void apply_window_adjustment (struct window *);$/;"	p	file:	signature:(struct window *)
apply_xft_settings	xsettings.c	/^apply_xft_settings (struct x_display_info *dpyinfo,$/;"	f	file:	signature:(struct x_display_info *dpyinfo, struct xsettings *settings)
approximate_median	profiler.c	/^static EMACS_INT approximate_median (log_t *log,$/;"	f	file:	signature:(log_t *log, ptrdiff_t start, ptrdiff_t size)
APPS_PRESSED	w32term.h	779;"	d
apropos_accum	keymap.c	/^apropos_accum (Lisp_Object symbol, Lisp_Object string)$/;"	f	file:	signature:(Lisp_Object symbol, Lisp_Object string)
apropos_accumulate	keymap.c	/^static Lisp_Object apropos_accumulate;$/;"	v	file:
apropos_predicate	keymap.c	/^static Lisp_Object apropos_predicate;$/;"	v	file:
area	dispextern.h	/^    enum glyph_row_area area;$/;"	m	struct:it::iterator_stack_entry	typeref:enum:it::iterator_stack_entry::glyph_row_area	access:public
area	dispextern.h	/^  enum glyph_row_area area;$/;"	m	struct:glyph_string	typeref:enum:glyph_string::glyph_row_area	access:public
area	dispextern.h	/^  enum glyph_row_area area;$/;"	m	struct:it	typeref:enum:it::glyph_row_area	access:public
AREF	lisp.h	/^AREF (Lisp_Object array, ptrdiff_t idx)$/;"	f	signature:(Lisp_Object array, ptrdiff_t idx)
aref_addr	lisp.h	/^aref_addr (Lisp_Object array, ptrdiff_t idx)$/;"	f	signature:(Lisp_Object array, ptrdiff_t idx)
arg	charset.c	/^  (Lisp_Object function, Lisp_Object charset, Lisp_Object arg, Lisp_Object from_code, Lisp_Object to_code)$/;"	v
arg	lisp.h	/^      int arg;$/;"	m	struct:specbinding::__anon31	access:public
arg	lisp.h	/^      Lisp_Object arg;$/;"	m	struct:specbinding::__anon29	access:public
arg	lisp.h	/^      void *arg;$/;"	m	struct:specbinding::__anon30	access:public
arg	termhooks.h	/^  Lisp_Object arg;$/;"	m	struct:input_event	access:public
arg	window.c	/^  (register Lisp_Object arg, Lisp_Object set_minimum)$/;"	v
ARGB_TO_ULONG	nsterm.h	803;"	d
argmatch	emacs.c	/^argmatch (char **argv, int argc, const char *sstr, const char *lstr,$/;"	f	file:	signature:(char **argv, int argc, const char *sstr, const char *lstr, int minlen, char **valptr, int *skipptr)
argnum	fns.c	/^  ptrdiff_t argnum;		\/* refer to ARGS (arguments of `concat') *\/$/;"	m	struct:textprop_rec	file:	access:public
args	lisp.h	/^      Lisp_Object *args;$/;"	m	struct:specbinding::__anon34	access:public
args_out_of_range	data.c	/^args_out_of_range (Lisp_Object a1, Lisp_Object a2)$/;"	f	signature:(Lisp_Object a1, Lisp_Object a2)
args_out_of_range	lisp.h	/^extern _Noreturn void args_out_of_range (Lisp_Object, Lisp_Object);$/;"	p	signature:(Lisp_Object, Lisp_Object)
args_out_of_range_3	data.c	/^args_out_of_range_3 (Lisp_Object a1, Lisp_Object a2, Lisp_Object a3)$/;"	f	signature:(Lisp_Object a1, Lisp_Object a2, Lisp_Object a3)
args_out_of_range_3	lisp.h	/^extern _Noreturn void args_out_of_range_3 (Lisp_Object, Lisp_Object,$/;"	p	signature:(Lisp_Object, Lisp_Object, Lisp_Object)
arguments	xwidget.c	/^   Lisp_Object arguments, Lisp_Object buffer)$/;"	v
arg_listify	xrdb.c	596;"	d	file:
arithcompare	lisp.h	/^Lisp_Object arithcompare (Lisp_Object num1, Lisp_Object num2,$/;"	p	signature:(Lisp_Object num1, Lisp_Object num2, enum Arith_Comparison comparison)
arithop	data.c	/^enum arithop$/;"	g	file:
Arith_Comparison	lisp.h	/^enum Arith_Comparison {$/;"	g
ARITH_EQUAL	lisp.h	/^  ARITH_EQUAL,$/;"	e	enum:Arith_Comparison
ARITH_GRTR	lisp.h	/^  ARITH_GRTR,$/;"	e	enum:Arith_Comparison
ARITH_GRTR_OR_EQUAL	lisp.h	/^  ARITH_GRTR_OR_EQUAL$/;"	e	enum:Arith_Comparison
ARITH_LESS	lisp.h	/^  ARITH_LESS,$/;"	e	enum:Arith_Comparison
ARITH_LESS_OR_EQUAL	lisp.h	/^  ARITH_LESS_OR_EQUAL,$/;"	e	enum:Arith_Comparison
ARITH_NOTEQUAL	lisp.h	/^  ARITH_NOTEQUAL,$/;"	e	enum:Arith_Comparison
array	data.c	/^  (register Lisp_Object array, Lisp_Object idx)$/;"	v
array	data.c	/^  (register Lisp_Object array, Lisp_Object idx, Lisp_Object newelt)$/;"	v
array	fns.c	/^  (Lisp_Object array, Lisp_Object item)$/;"	v
ARRAYELTS	lisp.h	65;"	d
ARRAYP	lisp.h	/^ARRAYP (Lisp_Object x)$/;"	f	signature:(Lisp_Object x)
ARRAY_MARK_FLAG	lisp.h	823;"	d
arrived	xselect.c	/^  bool arrived;$/;"	m	struct:prop_location	file:	access:public
ASCENDING_ORDER	ccl.c	734;"	d	file:
ascent	composite.h	/^  short pixel_width, ascent, descent;$/;"	m	struct:composition	access:public
ascent	dispextern.h	/^      unsigned ascent  : 16;$/;"	m	struct:glyph::__anon110::__anon112	access:public
ascent	dispextern.h	/^  int ascent, descent, max_ascent, max_descent;$/;"	m	struct:it	access:public
ascent	dispextern.h	/^  int ascent, height;$/;"	m	struct:glyph_row	access:public
ascent	dispextern.h	/^  int ascent;$/;"	m	struct:image	access:public
ascent	dispextern.h	/^  short ascent, descent;$/;"	m	struct:glyph	access:public
ascent	font.h	/^  int ascent, descent;$/;"	m	struct:font	access:public
ascent	font.h	/^  short lbearing, rbearing, width, ascent, descent;$/;"	m	struct:font_metrics	access:public
ascent	nsgui.h	/^  int ascent;$/;"	m	struct:_XCharStruct	access:public
ascent	w32font.h	/^  short lbearing, rbearing, width, ascent, descent;$/;"	m	struct:w32_metric_cache	access:public
ascii	lisp.h	/^    Lisp_Object ascii;$/;"	m	struct:Lisp_Char_Table	access:public
ASCII_CHAR_P	lisp.h	1625;"	d
ASCII_CHAR_WIDTH	character.h	572;"	d
ascii_compatible_p	charset.h	/^  bool_bf ascii_compatible_p : 1;$/;"	m	struct:charset	access:public
ascii_face	dispextern.h	/^  struct face *ascii_face;$/;"	m	struct:face	typeref:struct:face::face	access:public
ASCII_KEYSTROKE_EVENT	termhooks.h	/^  ASCII_KEYSTROKE_EVENT,	\/* The ASCII code is in .code, perhaps$/;"	e	enum:event_kind
ascii_printable	xftfont.c	/^static FcChar8 ascii_printable[95];$/;"	v	file:
ASET	lisp.h	/^ASET (Lisp_Object array, ptrdiff_t idx, Lisp_Object val)$/;"	f	signature:(Lisp_Object array, ptrdiff_t idx, Lisp_Object val)
ash_lsh_impl	data.c	/^ash_lsh_impl (Lisp_Object value, Lisp_Object count, bool lsh)$/;"	f	file:	signature:(Lisp_Object value, Lisp_Object count, bool lsh)
ASIZE	lisp.h	/^ASIZE (Lisp_Object array)$/;"	f	signature:(Lisp_Object array)
asked_for_visible	w32term.h	/^  unsigned asked_for_visible : 1;$/;"	m	struct:w32_output	access:public
asked_for_visible	xterm.h	/^  bool_bf asked_for_visible : 1;$/;"	m	struct:x_output	access:public
aspect	inotify.c	/^     (Lisp_Object filename, Lisp_Object aspect, Lisp_Object callback)$/;"	v
aspect_to_inotifymask	inotify.c	/^aspect_to_inotifymask (Lisp_Object aspect)$/;"	f	file:	signature:(Lisp_Object aspect)
assert	regex.c	1140;"	d	file:
assert	regex.c	1141;"	d	file:
assign_row	dispnew.c	/^assign_row (struct glyph_row *to, struct glyph_row *from)$/;"	f	file:	signature:(struct glyph_row *to, struct glyph_row *from)
assoc_ignore_text_properties	buffer.c	/^assoc_ignore_text_properties (Lisp_Object key, Lisp_Object list)$/;"	f	file:	signature:(Lisp_Object key, Lisp_Object list)
assoc_no_quit	fns.c	/^assoc_no_quit (Lisp_Object key, Lisp_Object list)$/;"	f	signature:(Lisp_Object key, Lisp_Object list)
assoc_no_quit	lisp.h	/^extern Lisp_Object assoc_no_quit (Lisp_Object, Lisp_Object);$/;"	p	signature:(Lisp_Object, Lisp_Object)
assq_no_quit	fns.c	/^assq_no_quit (Lisp_Object key, Lisp_Object list)$/;"	f	signature:(Lisp_Object key, Lisp_Object list)
assq_no_quit	lisp.h	/^extern Lisp_Object assq_no_quit (Lisp_Object, Lisp_Object);$/;"	p	signature:(Lisp_Object, Lisp_Object)
ASSURE_DESTINATION	coding.c	900;"	d	file:
Asub	data.c	/^    Asub,$/;"	e	enum:arithop	file:
ASYNC_RETRY_NSEC	process.c	131;"	d	file:
at	filelock.c	/^  char *at, *dot, *colon;$/;"	m	struct:__anon52	file:	access:public
ateof	termcap.c	/^    bool ateof;$/;"	m	struct:termcap_buffer	file:	access:public
atimer	atimer.h	/^struct atimer$/;"	s
atimer::client_data	atimer.h	/^  void *client_data;$/;"	m	struct:atimer	access:public
atimer::expiration	atimer.h	/^  struct timespec expiration;$/;"	m	struct:atimer	typeref:struct:atimer::timespec	access:public
atimer::fn	atimer.h	/^  atimer_callback fn;$/;"	m	struct:atimer	access:public
atimer::interval	atimer.h	/^  struct timespec interval;$/;"	m	struct:atimer	typeref:struct:atimer::timespec	access:public
atimer::next	atimer.h	/^  struct atimer *next;$/;"	m	struct:atimer	typeref:struct:atimer::atimer	access:public
atimer::type	atimer.h	/^  enum atimer_type type;$/;"	m	struct:atimer	typeref:enum:atimer::atimer_type	access:public
atimers	atimer.c	/^static struct atimer *atimers;$/;"	v	typeref:struct:atimer	file:
ATIMER_ABSOLUTE	atimer.h	/^  ATIMER_ABSOLUTE,$/;"	e	enum:atimer_type
atimer_callback	atimer.h	/^typedef void (* atimer_callback) (struct atimer *timer);$/;"	t
ATIMER_CONTINUOUS	atimer.h	/^  ATIMER_CONTINUOUS$/;"	e	enum:atimer_type
ATIMER_RELATIVE	atimer.h	/^  ATIMER_RELATIVE,$/;"	e	enum:atimer_type
atimer_result	atimer.c	/^struct atimer_result$/;"	s	file:
atimer_result::expected	atimer.c	/^  struct timespec expected;$/;"	m	struct:atimer_result	typeref:struct:atimer_result::timespec	file:	access:public
atimer_result::intime	atimer.c	/^  int intime;$/;"	m	struct:atimer_result	file:	access:public
atimer_type	atimer.h	/^enum atimer_type$/;"	g
atom	xselect.c	/^  (Lisp_Object atom, Lisp_Object frame)$/;"	v
ATOM_REFS_INIT	xterm.c	12619;"	d	file:
attach_marker	marker.c	/^attach_marker (struct Lisp_Marker *m, struct buffer *b,$/;"	f	file:	signature:(struct Lisp_Marker *m, struct buffer *b, ptrdiff_t charpos, ptrdiff_t bytepos)
attempt_orderly_shutdown_on_fatal_signal	globals.h	899;"	d
attempt_stack_overflow_recovery	globals.h	901;"	d
attr	xfaces.c	/^  (Lisp_Object face, Lisp_Object attr, Lisp_Object value, Lisp_Object frame)$/;"	v
attribute	frame.c	/^  (Lisp_Object attribute, Lisp_Object class, Lisp_Object component,$/;"	v
attribute	xfaces.c	/^  (Lisp_Object attribute, Lisp_Object value)$/;"	v
attribute	xfaces.c	/^  (Lisp_Object attribute, Lisp_Object value1, Lisp_Object value2)$/;"	v
attributes	xfaces.c	/^  (Lisp_Object attributes, Lisp_Object display)$/;"	v
ATTRIBUTE_ALLOC_SIZE	conf_post.h	236;"	d
ATTRIBUTE_ALLOC_SIZE	conf_post.h	238;"	d
ATTRIBUTE_CONST	conf_post.h	212;"	d
ATTRIBUTE_FORMAT	conf_post.h	191;"	d
ATTRIBUTE_FORMAT	conf_post.h	193;"	d
ATTRIBUTE_FORMAT_PRINTF	conf_post.h	209;"	d
ATTRIBUTE_MALLOC	conf_post.h	230;"	d
ATTRIBUTE_MALLOC	conf_post.h	232;"	d
ATTRIBUTE_MALLOC_SIZE	conf_post.h	241;"	d
ATTRIBUTE_MAY_ALIAS	conf_post.h	216;"	d
ATTRIBUTE_MAY_ALIAS	conf_post.h	218;"	d
ATTRIBUTE_NO_SANITIZE_ADDRESS	conf_post.h	259;"	d
ATTRIBUTE_NO_SANITIZE_ADDRESS	conf_post.h	262;"	d
ATTRIBUTE_NO_SANITIZE_ADDRESS	conf_post.h	265;"	d
ATTRIBUTE_UNUSED	conf_post.h	213;"	d
at_begline_loc_p	regex.c	/^at_begline_loc_p (const_re_char *pattern, const_re_char *p, reg_syntax_t syntax)$/;"	f	file:	signature:(const_re_char *pattern, const_re_char *p, reg_syntax_t syntax)
at_begline_loc_p	regex.c	/^static boolean at_begline_loc_p (re_char *pattern, re_char *p,$/;"	p	file:	signature:(re_char *pattern, re_char *p, reg_syntax_t syntax)
at_dot	regex.c	/^  , at_dot,	\/* Succeeds if at point.  *\/$/;"	e	enum:__anon144	file:
at_endline_loc_p	regex.c	/^at_endline_loc_p (const_re_char *p, const_re_char *pend, reg_syntax_t syntax)$/;"	f	file:	signature:(const_re_char *p, const_re_char *pend, reg_syntax_t syntax)
at_endline_loc_p	regex.c	/^static boolean at_endline_loc_p (re_char *p, re_char *pend,$/;"	p	file:	signature:(re_char *p, re_char *pend, reg_syntax_t syntax)
AT_STRINGS_BEG	regex.c	4499;"	d	file:
AT_STRINGS_END	regex.c	4500;"	d	file:
aUNEVALLED	lisp.h	/^      Lisp_Object (*aUNEVALLED) (Lisp_Object args);$/;"	m	union:Lisp_Subr::__anon22	access:public
autocmp_chars	composite.c	/^autocmp_chars (Lisp_Object rule, ptrdiff_t charpos, ptrdiff_t bytepos,$/;"	f	file:	signature:(Lisp_Object rule, ptrdiff_t charpos, ptrdiff_t bytepos, ptrdiff_t limit, struct window *win, struct face *face, Lisp_Object string)
AUTOLOADP	lisp.h	/^AUTOLOADP (Lisp_Object x)$/;"	f	signature:(Lisp_Object x)
automatic	dispextern.h	/^      bool_bf automatic : 1;$/;"	m	struct:glyph::__anon110::__anon111	access:public
automatic_hscrolling	globals.h	787;"	d
AutoWrap	cm.h	123;"	d
AUTO_CONS	lisp.h	4588;"	d
AUTO_CONS_EXPR	lisp.h	4580;"	d
AUTO_DEPEND	Makefile	/^AUTO_DEPEND = yes$/;"	m
auto_fill_function_	buffer.h	/^  Lisp_Object auto_fill_function_;$/;"	m	struct:buffer	access:public
auto_fontset_alist	fontset.c	/^static Lisp_Object auto_fontset_alist;$/;"	v	file:
AUTO_FRAME_ARG	frame.h	1162;"	d
AUTO_LIST1	lisp.h	4589;"	d
AUTO_LIST2	lisp.h	4591;"	d
AUTO_LIST3	lisp.h	4595;"	d
AUTO_LIST4	lisp.h	4599;"	d
auto_lower	frame.h	/^  bool_bf auto_lower : 1;$/;"	m	struct:frame	access:public
auto_raise	fileio.c	/^  bool auto_raise;$/;"	m	struct:auto_save_unwind	file:	access:public
auto_raise	frame.h	/^  bool_bf auto_raise : 1;$/;"	m	struct:frame	access:public
auto_raise_tool_bar_buttons_p	globals.h	903;"	d
auto_save_1	fileio.c	/^auto_save_1 (void)$/;"	f	file:	signature:(void)
auto_save_error	fileio.c	/^auto_save_error (Lisp_Object error_val)$/;"	f	file:	signature:(Lisp_Object error_val)
auto_save_error_occurred	fileio.c	/^static bool auto_save_error_occurred;$/;"	v	file:
auto_save_failure_time	buffer.h	/^  time_t auto_save_failure_time;$/;"	m	struct:buffer	access:public
auto_save_file_format_	buffer.h	/^  Lisp_Object auto_save_file_format_;$/;"	m	struct:buffer	access:public
auto_save_file_name_	buffer.h	/^  Lisp_Object auto_save_file_name_;$/;"	m	struct:buffer	access:public
auto_save_interval	globals.h	815;"	d
auto_save_mode_bits	fileio.c	/^static mode_t auto_save_mode_bits;$/;"	v	file:
auto_save_modified	buffer.h	/^  EMACS_INT auto_save_modified;$/;"	m	struct:buffer	access:public
auto_save_unwind	fileio.c	/^struct auto_save_unwind$/;"	s	file:
auto_save_unwind::auto_raise	fileio.c	/^  bool auto_raise;$/;"	m	struct:auto_save_unwind	file:	access:public
auto_save_unwind::stream	fileio.c	/^  FILE *stream;$/;"	m	struct:auto_save_unwind	file:	access:public
auto_saving	fileio.c	/^static bool auto_saving;$/;"	v	file:
auto_saving_dir_umask	fileio.c	/^static mode_t auto_saving_dir_umask;$/;"	v	file:
AUTO_STRING	lisp.h	4612;"	d
AUTO_STRING_WITH_LEN	lisp.h	4621;"	d
auto_window_vscroll_p	globals.h	905;"	d
AU_COMPRESSED	sound.c	/^  AU_COMPRESSED = 23,$/;"	e	enum:au_encoding	file:
au_encoding	sound.c	/^enum au_encoding$/;"	g	file:
AU_ENCODING_16	sound.c	/^  AU_ENCODING_16,$/;"	e	enum:au_encoding	file:
AU_ENCODING_24	sound.c	/^  AU_ENCODING_24,$/;"	e	enum:au_encoding	file:
AU_ENCODING_32	sound.c	/^  AU_ENCODING_32,$/;"	e	enum:au_encoding	file:
AU_ENCODING_8	sound.c	/^  AU_ENCODING_8,$/;"	e	enum:au_encoding	file:
AU_ENCODING_ALAW_8	sound.c	/^  AU_ENCODING_ALAW_8 = 27$/;"	e	enum:au_encoding	file:
AU_ENCODING_IEEE32	sound.c	/^  AU_ENCODING_IEEE32,$/;"	e	enum:au_encoding	file:
AU_ENCODING_IEEE64	sound.c	/^  AU_ENCODING_IEEE64,$/;"	e	enum:au_encoding	file:
AU_ENCODING_ULAW_8	sound.c	/^  AU_ENCODING_ULAW_8 = 1,$/;"	e	enum:au_encoding	file:
au_header	sound.c	/^struct au_header$/;"	s	file:
au_header::channels	sound.c	/^  u_int32_t channels;$/;"	m	struct:au_header	file:	access:public
au_header::data_offset	sound.c	/^  u_int32_t data_offset;$/;"	m	struct:au_header	file:	access:public
au_header::data_size	sound.c	/^  u_int32_t data_size;$/;"	m	struct:au_header	file:	access:public
au_header::encoding	sound.c	/^  u_int32_t encoding;$/;"	m	struct:au_header	file:	access:public
au_header::magic_number	sound.c	/^  u_int32_t magic_number;$/;"	m	struct:au_header	file:	access:public
au_header::sample_rate	sound.c	/^  u_int32_t sample_rate;$/;"	m	struct:au_header	file:	access:public
au_init	sound.c	/^au_init (struct sound *s)$/;"	f	file:	signature:(struct sound *s)
au_init	sound.c	/^static bool au_init (struct sound *);$/;"	p	file:	signature:(struct sound *)
au_play	sound.c	/^au_play (struct sound *s, struct sound_device *sd)$/;"	f	file:	signature:(struct sound *s, struct sound_device *sd)
au_play	sound.c	/^static void au_play (struct sound *, struct sound_device *);$/;"	p	file:	signature:(struct sound *, struct sound_device *)
avail	nsterm.h	/^  ptrdiff_t avail;$/;"	m	struct:ns_color_table	access:public
avail	regex.c	/^  size_t avail;			\/* Offset of next open position.  *\/$/;"	m	struct:__anon147	file:	access:public
avail	regex.c	/^  size_t avail;	\/* Offset of next open position.  *\/$/;"	m	struct:__anon145	file:	access:public
availIndices	nsterm.h	/^  void *availIndices;$/;"	m	struct:ns_color_table	access:public
AVAIL_ALLOCA	lisp.h	4454;"	d
average_width	font.h	/^  int average_width;$/;"	m	struct:font	access:public
avoid_cursor_p	dispextern.h	/^    bool_bf avoid_cursor_p : 1;$/;"	m	struct:it::iterator_stack_entry	access:public
avoid_cursor_p	dispextern.h	/^  bool_bf avoid_cursor_p : 1;$/;"	m	struct:glyph	access:public
avoid_cursor_p	dispextern.h	/^  bool_bf avoid_cursor_p : 1;$/;"	m	struct:it	access:public
a_write	fileio.c	/^a_write (int desc, Lisp_Object string, ptrdiff_t pos,$/;"	f	file:	signature:(int desc, Lisp_Object string, ptrdiff_t pos, ptrdiff_t nchars, Lisp_Object *annot, struct coding_system *coding)
a_write	fileio.c	/^static bool a_write (int, Lisp_Object, ptrdiff_t, ptrdiff_t,$/;"	p	file:	signature:(int, Lisp_Object, ptrdiff_t, ptrdiff_t, Lisp_Object *, struct coding_system *)
b	data.c	/^  (Lisp_Object a, Lisp_Object b, Lisp_Object c)$/;"	v
b	data.c	/^  (Lisp_Object a, Lisp_Object b, Lisp_Object i)$/;"	v
b	image.c	/^  int r, g, b;$/;"	m	struct:ct_color	file:	access:public
backed_up_	buffer.h	/^  Lisp_Object backed_up_;$/;"	m	struct:buffer	access:public
background	dispextern.h	/^  unsigned long background;$/;"	m	struct:face	access:public
background	dispextern.h	/^  unsigned long background;$/;"	m	struct:image	access:public
background	nsgui.h	/^  unsigned long background;$/;"	m	struct:_XGCValues	access:public
background	w32gui.h	/^  COLORREF background;$/;"	m	struct:_XGCValues	access:public
background_color	nsterm.h	/^  NSColor *background_color;$/;"	m	struct:ns_output	access:public
background_defaulted_p	dispextern.h	/^  bool_bf background_defaulted_p : 1;$/;"	m	struct:face	access:public
background_filled_p	dispextern.h	/^  bool_bf background_filled_p : 1;$/;"	m	struct:glyph_string	access:public
background_pixel	frame.h	/^  unsigned long background_pixel;$/;"	m	struct:frame	access:public
background_transparent	dispextern.h	/^  bool_bf background_transparent : 1;$/;"	m	struct:image	access:public
background_transparent_valid	dispextern.h	/^  bool_bf background_valid : 1, background_transparent_valid : 1;$/;"	m	struct:image	access:public
background_valid	dispextern.h	/^  bool_bf background_valid : 1, background_transparent_valid : 1;$/;"	m	struct:image	access:public
background_width	dispextern.h	/^  int background_width;$/;"	m	struct:glyph_string	access:public
backlog	process.h	/^    int backlog;$/;"	m	struct:Lisp_Process	access:public
BackTab	cm.h	111;"	d
BackTabCost	cm.h	137;"	d
backtrace	alloc.c	/^  void *backtrace[128];$/;"	m	struct:suspicious_free_record	file:	access:public
backtrace_args	eval.c	/^backtrace_args (union specbinding *pdl)$/;"	f	signature:(union specbinding *pdl)
backtrace_debug_on_exit	eval.c	/^backtrace_debug_on_exit (union specbinding *pdl)$/;"	f	file:	signature:(union specbinding *pdl)
backtrace_eval_unrewind	eval.c	/^backtrace_eval_unrewind (int distance)$/;"	f	file:	signature:(int distance)
backtrace_frame_apply	eval.c	/^backtrace_frame_apply (Lisp_Object function, union specbinding *pdl)$/;"	f	file:	signature:(Lisp_Object function, union specbinding *pdl)
backtrace_function	eval.c	/^backtrace_function (union specbinding *pdl)$/;"	f	signature:(union specbinding *pdl)
BACKTRACE_LIMIT_MAX	sysdep.c	/^enum { BACKTRACE_LIMIT_MAX = 500 };$/;"	e	enum:__anon96	file:
BACKTRACE_LIMIT_MAX	w32fns.c	10881;"	d	file:
backtrace_nargs	eval.c	/^backtrace_nargs (union specbinding *pdl)$/;"	f	file:	signature:(union specbinding *pdl)
backtrace_next	eval.c	/^backtrace_next (union specbinding *pdl)$/;"	f	signature:(union specbinding *pdl)
backtrace_p	eval.c	/^backtrace_p (union specbinding *pdl)$/;"	f	signature:(union specbinding *pdl)
backtrace_top	eval.c	/^backtrace_top (void)$/;"	f	signature:(void)
backtrace_top_function	eval.c	/^Lisp_Object backtrace_top_function (void)$/;"	f	signature:(void)
backtrace_top_function	lisp.h	/^Lisp_Object backtrace_top_function (void);$/;"	p	signature:(void)
BACKWARD_CHAR	composite.c	1412;"	d	file:
backward_i	syntax.h	/^  INTERVAL backward_i;			\/* or backward movement.  The$/;"	m	struct:gl_state_s	access:public
back_comment	syntax.c	/^back_comment (ptrdiff_t from, ptrdiff_t from_byte, ptrdiff_t stop,$/;"	f	file:	signature:(ptrdiff_t from, ptrdiff_t from_byte, ptrdiff_t stop, bool comnested, int comstyle, ptrdiff_t *charpos_ptr, ptrdiff_t *bytepos_ptr)
back_to_previous_line_start	xdisp.c	/^back_to_previous_line_start (struct it *it)$/;"	f	file:	signature:(struct it *it)
back_to_previous_visible_line_start	xdisp.c	/^back_to_previous_visible_line_start (struct it *it)$/;"	f	file:	signature:(struct it *it)
balance_an_interval	intervals.c	/^balance_an_interval (INTERVAL i)$/;"	f	file:	signature:(INTERVAL i)
balance_intervals	intervals.c	/^balance_intervals (INTERVAL tree)$/;"	f	signature:(INTERVAL tree)
balance_intervals	intervals.h	/^extern INTERVAL balance_intervals (INTERVAL);$/;"	p	signature:(INTERVAL)
balance_intervals_internal	intervals.c	/^balance_intervals_internal (register INTERVAL tree)$/;"	f	file:	signature:(register INTERVAL tree)
balance_possible_root_interval	intervals.c	/^balance_possible_root_interval (INTERVAL interval)$/;"	f	file:	signature:(INTERVAL interval)
barf_or_query_if_file_exists	fileio.c	/^barf_or_query_if_file_exists (Lisp_Object absname, bool known_to_exist,$/;"	f	file:	signature:(Lisp_Object absname, bool known_to_exist, const char *querystring, bool interactive, bool quick)
BAR_CURSOR	dispextern.h	/^  BAR_CURSOR,$/;"	e	enum:text_cursor_kinds
bar_cursor	widgetprv.h	/^  Boolean	bar_cursor;		\/* 1 if bar, 0 if block *\/$/;"	m	struct:__anon98	access:public
base	lisp.h	/^    struct Lisp_Misc_Any base;$/;"	m	struct:Lisp_Finalizer	typeref:struct:Lisp_Finalizer::Lisp_Misc_Any	access:public
base64_decode_1	fns.c	/^ptrdiff_t base64_decode_1 (const char *, char *, ptrdiff_t, bool,$/;"	p	file:	signature:(const char *, char *, ptrdiff_t, bool, ptrdiff_t *)
base64_encode_1	fns.c	/^ptrdiff_t base64_encode_1 (const char *, char *, ptrdiff_t, bool, bool);$/;"	p	file:	signature:(const char *, char *, ptrdiff_t, bool, bool)
baseline_delta	macfont.h	/^  CGFloat advance_delta, baseline_delta;$/;"	m	struct:mac_glyph_layout	access:public
baseline_offset	font.h	/^  int baseline_offset;$/;"	m	struct:font	access:public
baseline_offset	nsterm.h	/^  int baseline_offset;$/;"	m	struct:ns_output	access:public
baseline_offset	w32term.h	/^  int baseline_offset;$/;"	m	struct:w32_output	access:public
baseline_offset	xterm.h	/^  int baseline_offset;$/;"	m	struct:x_output	access:public
base_buffer	buffer.c	/^  (Lisp_Object base_buffer, Lisp_Object name, Lisp_Object clone)$/;"	v
base_buffer	buffer.h	/^  struct buffer *base_buffer;$/;"	m	struct:buffer	typeref:struct:buffer::buffer	access:public
base_face_id	dispextern.h	/^  int base_face_id;$/;"	m	struct:it	access:public
BASE_FONTSET_P	fontset.c	252;"	d	file:
base_level_stop	dispextern.h	/^    ptrdiff_t base_level_stop;$/;"	m	struct:it::iterator_stack_entry	access:public
base_level_stop	dispextern.h	/^  ptrdiff_t base_level_stop;$/;"	m	struct:it	access:public
base_line_number	window.h	/^    ptrdiff_t base_line_number;$/;"	m	struct:window	access:public
base_line_pos	window.h	/^    ptrdiff_t base_line_pos;$/;"	m	struct:window	access:public
base_obj	Makefile	/^base_obj = dispnew.o frame.o scroll.o xdisp.o menu.o $(XMENU_OBJ) window.o \\$/;"	m
BASE_PURESIZE	puresize.h	50;"	d
base_url	xml.c	/^  (Lisp_Object start, Lisp_Object end, Lisp_Object base_url, Lisp_Object discard_comments)$/;"	v
base_variable	eval.c	/^  (Lisp_Object new_alias, Lisp_Object base_variable, Lisp_Object docstring)$/;"	v
BASIC_FACE_ID_SENTINEL	dispextern.h	/^  BASIC_FACE_ID_SENTINEL$/;"	e	enum:face_id
baud_convert	sysdep.c	/^static const int baud_convert[] =$/;"	v	file:
baud_rate	globals.h	817;"	d
BC	terminfo.c	/^char *UP, *BC, PC;$/;"	v
BC	tparam.c	/^char *BC;$/;"	v
bcall0	bytecode.c	/^bcall0 (Lisp_Object f)$/;"	f	file:	signature:(Lisp_Object f)
bcmp_translate	regex.c	/^bcmp_translate (const_re_char *s1, const_re_char *s2, register ssize_t len,$/;"	f	file:	signature:(const_re_char *s1, const_re_char *s2, register ssize_t len, RE_TRANSLATE_TYPE translate, const int target_multibyte)
bcmp_translate	regex.c	/^static int bcmp_translate (re_char *s1, re_char *s2,$/;"	p	file:	signature:(re_char *s1, re_char *s2, register ssize_t len, RE_TRANSLATE_TYPE translate, const int multibyte)
bc_limit	w32heap.c	/^static unsigned char *bc_limit;$/;"	v	file:
be2hl	sound.c	/^be2hl (u_int32_t value)$/;"	f	file:	signature:(u_int32_t value)
beg	buffer.c	/^  (Lisp_Object beg, Lisp_Object end)$/;"	v
beg	buffer.c	/^  (Lisp_Object beg, Lisp_Object end, Lisp_Object buffer,$/;"	v
beg	buffer.c	/^  (Lisp_Object overlay, Lisp_Object beg, Lisp_Object end, Lisp_Object buffer)$/;"	v
beg	buffer.c	/^  ptrdiff_t beg, end;$/;"	m	struct:sortvec	file:	access:public
beg	buffer.h	/^    unsigned char *beg;$/;"	m	struct:buffer_text	access:public
BEG	buffer.h	38;"	d
beg	casefiddle.c	/^  (Lisp_Object beg, Lisp_Object end)$/;"	v
beg	casefiddle.c	/^  (Lisp_Object beg, Lisp_Object end, Lisp_Object region_noncontiguous_p)$/;"	v
beg	charset.c	/^  (Lisp_Object beg, Lisp_Object end, Lisp_Object table)$/;"	v
beg	fileio.c	/^  (Lisp_Object filename, Lisp_Object visit, Lisp_Object beg, Lisp_Object end, Lisp_Object replace)$/;"	v
beg	fns.c	/^  (Lisp_Object beg, Lisp_Object end)$/;"	v
beg	fns.c	/^  (Lisp_Object beg, Lisp_Object end, Lisp_Object no_line_break)$/;"	v
beg	termcap.c	/^    char *beg;$/;"	m	struct:termcap_buffer	file:	access:public
begalt_offset	regex.c	/^  pattern_offset_t begalt_offset;$/;"	m	struct:__anon146	file:	access:public
begbuf	regex.c	/^  begbuf,$/;"	e	enum:__anon144	file:
begline	regex.c	/^  begline,$/;"	e	enum:__anon144	file:
begv	buffer.h	/^  ptrdiff_t begv;$/;"	m	struct:buffer	access:public
BEGV	buffer.h	42;"	d
begv	dispextern.h	/^  ptrdiff_t begv, zv;$/;"	m	struct:glyph_matrix	access:public
BEGV_ADDR	buffer.h	68;"	d
begv_byte	buffer.h	/^  ptrdiff_t begv_byte;$/;"	m	struct:buffer	access:public
BEGV_BYTE	buffer.h	43;"	d
begv_marker_	buffer.h	/^  Lisp_Object begv_marker_;$/;"	m	struct:buffer	access:public
BEG_ADDR	buffer.h	65;"	d
BEG_BYTE	buffer.h	39;"	d
beg_unchanged	buffer.h	/^    ptrdiff_t beg_unchanged;$/;"	m	struct:buffer_text	access:public
BEG_UNCHANGED	buffer.h	210;"	d
beg_unchanged	region-cache.c	/^  ptrdiff_t beg_unchanged, end_unchanged;$/;"	m	struct:region_cache	file:	access:public
being_printed	print.c	/^static Lisp_Object being_printed[PRINT_CIRCLE];$/;"	v	file:
bell_volume	widgetprv.h	/^  int		bell_volume;		\/* how loud is beep *\/$/;"	m	struct:__anon98	access:public
best_regend	regex.c	/^static re_char **best_regstart, **best_regend;$/;"	v	file:
best_regstart	regex.c	/^static re_char **best_regstart, **best_regend;$/;"	v	file:
best_xim_style	xfns.c	/^best_xim_style (XIMStyles *xim)$/;"	f	file:	signature:(XIMStyles *xim)
best_xim_style	xfns.c	/^static XIMStyle best_xim_style (XIMStyles *);$/;"	p	file:	signature:(XIMStyles *)
bias	unexaix.c	/^static off_t bias;			\/* Bias to add for growth *\/$/;"	v	file:
BIDI_AT_BASE_LEVEL	dispextern.h	1986;"	d
bidi_at_paragraph_end	bidi.c	/^bidi_at_paragraph_end (ptrdiff_t charpos, ptrdiff_t bytepos)$/;"	f	file:	signature:(ptrdiff_t charpos, ptrdiff_t bytepos)
bidi_brackets_table	bidi.c	/^static Lisp_Object bidi_type_table, bidi_mirror_table, bidi_brackets_table;$/;"	v	file:
BIDI_BRACKET_CLOSE	dispextern.h	/^  BIDI_BRACKET_CLOSE$/;"	e	enum:__anon115
BIDI_BRACKET_NONE	dispextern.h	/^  BIDI_BRACKET_NONE = 1,$/;"	e	enum:__anon115
BIDI_BRACKET_OPEN	dispextern.h	/^  BIDI_BRACKET_OPEN,$/;"	e	enum:__anon115
bidi_bracket_type_t	dispextern.h	/^} bidi_bracket_type_t;$/;"	t	typeref:enum:__anon115
bidi_cache	bidi.c	/^static struct bidi_it *bidi_cache;$/;"	v	typeref:struct:bidi_it	file:
BIDI_CACHE_CHUNK	bidi.c	547;"	d	file:
bidi_cache_ensure_space	bidi.c	/^bidi_cache_ensure_space (ptrdiff_t idx)$/;"	f	file:	signature:(ptrdiff_t idx)
bidi_cache_fetch_state	bidi.c	/^bidi_cache_fetch_state (ptrdiff_t idx, struct bidi_it *bidi_it)$/;"	f	file:	signature:(ptrdiff_t idx, struct bidi_it *bidi_it)
bidi_cache_find	bidi.c	/^bidi_cache_find (ptrdiff_t charpos, bool resolved_only, struct bidi_it *bidi_it)$/;"	f	file:	signature:(ptrdiff_t charpos, bool resolved_only, struct bidi_it *bidi_it)
bidi_cache_find_level_change	bidi.c	/^bidi_cache_find_level_change (int level, int dir, bool before)$/;"	f	file:	signature:(int level, int dir, bool before)
bidi_cache_idx	bidi.c	/^static ptrdiff_t bidi_cache_idx;	\/* next unused cache slot *\/$/;"	v	file:
bidi_cache_iterator_state	bidi.c	/^bidi_cache_iterator_state (struct bidi_it *bidi_it, bool resolved,$/;"	f	file:	signature:(struct bidi_it *bidi_it, bool resolved, bool update_only)
bidi_cache_last_idx	bidi.c	/^static ptrdiff_t bidi_cache_last_idx;	\/* slot of last cache hit *\/$/;"	v	file:
bidi_cache_max_elts	bidi.c	/^static ptrdiff_t bidi_cache_max_elts = BIDI_CACHE_MAX_ELTS_PER_SLOT;$/;"	v	file:
BIDI_CACHE_MAX_ELTS_PER_SLOT	bidi.c	/^verify (BIDI_CACHE_CHUNK < BIDI_CACHE_MAX_ELTS_PER_SLOT);$/;"	v
BIDI_CACHE_MAX_ELTS_PER_SLOT	bidi.c	567;"	d	file:
bidi_cache_reset	bidi.c	/^bidi_cache_reset (void)$/;"	f	file:	signature:(void)
bidi_cache_reset_to	bidi.c	/^bidi_cache_reset_to (int n)$/;"	f	file:	signature:(int n)
bidi_cache_search	bidi.c	/^bidi_cache_search (ptrdiff_t charpos, int level, int dir)$/;"	f	file:	signature:(ptrdiff_t charpos, int level, int dir)
bidi_cache_shrink	bidi.c	/^bidi_cache_shrink (void)$/;"	f	file:	signature:(void)
bidi_cache_size	bidi.c	/^static ptrdiff_t bidi_cache_size = 0;$/;"	v	file:
bidi_cache_sp	bidi.c	/^static int bidi_cache_sp;$/;"	v	file:
bidi_cache_start	bidi.c	/^static ptrdiff_t bidi_cache_start = 0;	\/* start of cache for this$/;"	v	file:
bidi_cache_start_stack	bidi.c	/^static ptrdiff_t bidi_cache_start_stack[IT_STACK_SIZE];$/;"	v	file:
bidi_cache_total_alloc	bidi.c	/^static ptrdiff_t bidi_cache_total_alloc;$/;"	v	file:
bidi_category_t	bidi.c	/^} bidi_category_t;$/;"	t	typeref:enum:__anon92	file:
bidi_char_at_pos	bidi.c	/^bidi_char_at_pos (ptrdiff_t bytepos, const unsigned char *s, bool unibyte)$/;"	f	file:	signature:(ptrdiff_t bytepos, const unsigned char *s, bool unibyte)
bidi_check_type	bidi.c	/^bidi_check_type (bidi_type_t type)$/;"	f	file:	signature:(bidi_type_t type)
bidi_copy_it	bidi.c	/^bidi_copy_it (struct bidi_it *to, struct bidi_it *from)$/;"	f	file:	signature:(struct bidi_it *to, struct bidi_it *from)
bidi_count_bytes	bidi.c	/^bidi_count_bytes (const unsigned char *s, ptrdiff_t beg,$/;"	f	file:	signature:(const unsigned char *s, ptrdiff_t beg, ptrdiff_t begbyte, ptrdiff_t end, bool unibyte)
bidi_dir_t	dispextern.h	/^typedef enum { NEUTRAL_DIR = 0, L2R, R2L } bidi_dir_t;$/;"	t	typeref:enum:__anon116
bidi_display_reordering_	buffer.h	/^  Lisp_Object bidi_display_reordering_;$/;"	m	struct:buffer	access:public
bidi_dump_cached_states	bidi.c	/^bidi_dump_cached_states (void)$/;"	f	signature:(void)
BIDI_EOB	bidi.c	253;"	d	file:
bidi_explicit_dir_char	bidi.c	/^bidi_explicit_dir_char (int ch)$/;"	f	file:	signature:(int ch)
bidi_fetch_char	bidi.c	/^bidi_fetch_char (ptrdiff_t charpos, ptrdiff_t bytepos, ptrdiff_t *disp_pos,$/;"	f	file:	signature:(ptrdiff_t charpos, ptrdiff_t bytepos, ptrdiff_t *disp_pos, int *disp_prop, struct bidi_string_data *string, struct window *w, bool frame_window_p, ptrdiff_t *ch_len, ptrdiff_t *nchars)
bidi_fetch_char_skip_isolates	bidi.c	/^bidi_fetch_char_skip_isolates (ptrdiff_t charpos, ptrdiff_t bytepos,$/;"	f	file:	signature:(ptrdiff_t charpos, ptrdiff_t bytepos, ptrdiff_t *disp_pos, int *disp_prop, struct bidi_string_data *string, struct window *w, bool frame_window_p, ptrdiff_t *ch_len, ptrdiff_t *nchars)
bidi_find_bracket_pairs	bidi.c	/^bidi_find_bracket_pairs (struct bidi_it *bidi_it)$/;"	f	file:	signature:(struct bidi_it *bidi_it)
bidi_find_first_overridden	bidi.c	/^bidi_find_first_overridden (struct bidi_it *bidi_it)$/;"	f	signature:(struct bidi_it *bidi_it)
bidi_find_first_overridden	dispextern.h	/^extern ptrdiff_t bidi_find_first_overridden (struct bidi_it *);$/;"	p	signature:(struct bidi_it *)
bidi_find_other_level_edge	bidi.c	/^bidi_find_other_level_edge (struct bidi_it *bidi_it, int level, bool end_flag)$/;"	f	file:	signature:(struct bidi_it *bidi_it, int level, bool end_flag)
bidi_find_paragraph_start	bidi.c	/^bidi_find_paragraph_start (ptrdiff_t pos, ptrdiff_t pos_byte)$/;"	f	file:	signature:(ptrdiff_t pos, ptrdiff_t pos_byte)
bidi_get_category	bidi.c	/^bidi_get_category (bidi_type_t type)$/;"	f	file:	signature:(bidi_type_t type)
bidi_get_type	bidi.c	/^bidi_get_type (int ch, bidi_dir_t override)$/;"	f	file:	signature:(int ch, bidi_dir_t override)
bidi_initialize	bidi.c	/^bidi_initialize (void)$/;"	f	file:	signature:(void)
bidi_initialized	bidi.c	/^static bool bidi_initialized = 0;$/;"	v	file:
bidi_init_it	bidi.c	/^bidi_init_it (ptrdiff_t charpos, ptrdiff_t bytepos, bool frame_window_p,$/;"	f	signature:(ptrdiff_t charpos, ptrdiff_t bytepos, bool frame_window_p, struct bidi_it *bidi_it)
bidi_init_it	dispextern.h	/^extern void bidi_init_it (ptrdiff_t, ptrdiff_t, bool, struct bidi_it *);$/;"	p	signature:(ptrdiff_t, ptrdiff_t, bool, struct bidi_it *)
bidi_isolate_fmt_char	bidi.c	/^bidi_isolate_fmt_char (bidi_type_t ch_type)$/;"	f	file:	signature:(bidi_type_t ch_type)
bidi_it	dispextern.h	/^  struct bidi_it bidi_it;$/;"	m	struct:it	typeref:struct:it::bidi_it	access:public
bidi_it	dispextern.h	/^struct bidi_it {$/;"	s
bidi_it::bracket_enclosed_type	dispextern.h	/^  bidi_type_t bracket_enclosed_type;	\/* type for bracket resolution *\/$/;"	m	struct:bidi_it	access:public
bidi_it::bracket_pairing_pos	dispextern.h	/^  ptrdiff_t bracket_pairing_pos;	\/* position of pairing bracket *\/$/;"	m	struct:bidi_it	access:public
bidi_it::bytepos	dispextern.h	/^  ptrdiff_t bytepos;		\/* iterator's position in buffer\/string *\/$/;"	m	struct:bidi_it	access:public
bidi_it::ch	dispextern.h	/^  int ch;			\/* character at that position, or u+FFFC$/;"	m	struct:bidi_it	access:public
bidi_it::charpos	dispextern.h	/^  ptrdiff_t charpos;$/;"	m	struct:bidi_it	access:public
bidi_it::ch_len	dispextern.h	/^  ptrdiff_t ch_len;		\/* its length in bytes *\/$/;"	m	struct:bidi_it	access:public
bidi_it::disp_pos	dispextern.h	/^  ptrdiff_t disp_pos;		\/* position of display string after ch *\/$/;"	m	struct:bidi_it	access:public
bidi_it::disp_prop	dispextern.h	/^  int disp_prop;		\/* if non-zero, there really is a$/;"	m	struct:bidi_it	access:public
bidi_it::first_elt	dispextern.h	/^  bool_bf first_elt : 1;	\/* if true, examine current char first *\/$/;"	m	struct:bidi_it	access:public
bidi_it::frame_window_p	dispextern.h	/^  bool_bf frame_window_p : 1;	\/* true if displaying on a GUI frame *\/$/;"	m	struct:bidi_it	access:public
bidi_it::invalid_isolates	dispextern.h	/^  ptrdiff_t invalid_isolates;	\/* how many PDIs to ignore *\/$/;"	m	struct:bidi_it	access:public
bidi_it::invalid_levels	dispextern.h	/^  ptrdiff_t invalid_levels;	\/* how many PDFs to ignore *\/$/;"	m	struct:bidi_it	access:public
bidi_it::isolate_level	dispextern.h	/^  signed char isolate_level;	\/* count of isolate initiators unmatched by PDI *\/$/;"	m	struct:bidi_it	access:public
bidi_it::last_strong	dispextern.h	/^  struct bidi_saved_info last_strong; \/* last-seen strong directional char *\/$/;"	m	struct:bidi_it	typeref:struct:bidi_it::bidi_saved_info	access:public
bidi_it::level_stack	dispextern.h	/^  struct bidi_stack level_stack[BIDI_MAXDEPTH+2+1]; \/* directional status stack *\/$/;"	m	struct:bidi_it	typeref:struct:bidi_it::bidi_stack	access:public
bidi_it::nchars	dispextern.h	/^  ptrdiff_t nchars;		\/* its "length", usually 1; it's > 1 for a run$/;"	m	struct:bidi_it	access:public
bidi_it::new_paragraph	dispextern.h	/^  bool_bf new_paragraph : 1;	\/* if true, we expect a new paragraph *\/$/;"	m	struct:bidi_it	access:public
bidi_it::next_en_pos	dispextern.h	/^  ptrdiff_t next_en_pos;	\/* pos. of next char for determining ET type *\/$/;"	m	struct:bidi_it	access:public
bidi_it::next_en_type	dispextern.h	/^  bidi_type_t next_en_type;	\/* type of char at next_en_pos *\/$/;"	m	struct:bidi_it	access:public
bidi_it::next_for_neutral	dispextern.h	/^  struct bidi_saved_info next_for_neutral; \/* surrounding characters for... *\/$/;"	m	struct:bidi_it	typeref:struct:bidi_it::bidi_saved_info	access:public
bidi_it::next_for_ws	dispextern.h	/^  struct bidi_saved_info next_for_ws; \/* character after sequence of ws *\/$/;"	m	struct:bidi_it	typeref:struct:bidi_it::bidi_saved_info	access:public
bidi_it::orig_type	dispextern.h	/^  bidi_type_t orig_type;	\/* original bidi type, as found in the buffer *\/$/;"	m	struct:bidi_it	access:public
bidi_it::paragraph_dir	dispextern.h	/^  bidi_dir_t paragraph_dir;	\/* current paragraph direction *\/$/;"	m	struct:bidi_it	access:public
bidi_it::prev	dispextern.h	/^  struct bidi_saved_info prev;	\/* info about previous character *\/$/;"	m	struct:bidi_it	typeref:struct:bidi_it::bidi_saved_info	access:public
bidi_it::prev_for_neutral	dispextern.h	/^  struct bidi_saved_info prev_for_neutral; \/* ...resolving neutrals *\/$/;"	m	struct:bidi_it	typeref:struct:bidi_it::bidi_saved_info	access:public
bidi_it::resolved_level	dispextern.h	/^  signed char resolved_level;	\/* final resolved level of this character *\/$/;"	m	struct:bidi_it	access:public
bidi_it::scan_dir	dispextern.h	/^  int scan_dir;			\/* direction of text scan, 1: forw, -1: back *\/$/;"	m	struct:bidi_it	access:public
bidi_it::separator_limit	dispextern.h	/^  ptrdiff_t separator_limit;	\/* where paragraph separator should end *\/$/;"	m	struct:bidi_it	access:public
bidi_it::sos	dispextern.h	/^  bidi_dir_t sos;		\/* direction of start-of-sequence in effect *\/$/;"	m	struct:bidi_it	access:public
bidi_it::stack_idx	dispextern.h	/^  int stack_idx;		\/* index of current data on the stack *\/$/;"	m	struct:bidi_it	access:public
bidi_it::string	dispextern.h	/^  struct bidi_string_data string;	\/* string to reorder *\/$/;"	m	struct:bidi_it	typeref:struct:bidi_it::bidi_string_data	access:public
bidi_it::type	dispextern.h	/^  bidi_type_t type;		\/* final bidi type of this character, after$/;"	m	struct:bidi_it	access:public
bidi_it::type_after_wn	dispextern.h	/^  bidi_type_t type_after_wn;	\/* bidi type after overrides and Wn *\/$/;"	m	struct:bidi_it	access:public
bidi_it::w	dispextern.h	/^  struct window *w;		\/* the window being displayed *\/$/;"	m	struct:bidi_it	typeref:struct:bidi_it::window	access:public
bidi_level_of_next_char	bidi.c	/^bidi_level_of_next_char (struct bidi_it *bidi_it)$/;"	f	file:	signature:(struct bidi_it *bidi_it)
bidi_line_init	bidi.c	/^bidi_line_init (struct bidi_it *bidi_it)$/;"	f	file:	signature:(struct bidi_it *bidi_it)
BIDI_MAXDEPTH	dispextern.h	1852;"	d
bidi_mirror_char	bidi.c	/^bidi_mirror_char (int c)$/;"	f	signature:(int c)
bidi_mirror_char	dispextern.h	/^extern int  bidi_mirror_char (int);$/;"	p	signature:(int)
bidi_mirror_table	bidi.c	/^static Lisp_Object bidi_type_table, bidi_mirror_table, bidi_brackets_table;$/;"	v	file:
bidi_move_to_visually_next	bidi.c	/^bidi_move_to_visually_next (struct bidi_it *bidi_it)$/;"	f	signature:(struct bidi_it *bidi_it)
bidi_move_to_visually_next	dispextern.h	/^extern void bidi_move_to_visually_next (struct bidi_it *);$/;"	p	signature:(struct bidi_it *)
bidi_p	dispextern.h	/^    bool_bf bidi_p : 1;$/;"	m	struct:it::iterator_stack_entry	access:public
bidi_p	dispextern.h	/^  bool_bf bidi_p : 1;$/;"	m	struct:it	access:public
bidi_paired_bracket_type	bidi.c	/^bidi_paired_bracket_type (int c)$/;"	f	file:	signature:(int c)
bidi_paragraph_cache	buffer.h	/^  struct region_cache *bidi_paragraph_cache;$/;"	m	struct:buffer	typeref:struct:buffer::region_cache	access:public
bidi_paragraph_cache_on_off	bidi.c	/^bidi_paragraph_cache_on_off (void)$/;"	f	file:	signature:(void)
bidi_paragraph_direction_	buffer.h	/^  Lisp_Object bidi_paragraph_direction_;$/;"	m	struct:buffer	access:public
bidi_paragraph_init	bidi.c	/^bidi_paragraph_init (bidi_dir_t dir, struct bidi_it *bidi_it, bool no_default_p)$/;"	f	signature:(bidi_dir_t dir, struct bidi_it *bidi_it, bool no_default_p)
bidi_paragraph_init	dispextern.h	/^extern void bidi_paragraph_init (bidi_dir_t, struct bidi_it *, bool);$/;"	p	signature:(bidi_dir_t, struct bidi_it *, bool)
bidi_peek_at_next_level	bidi.c	/^bidi_peek_at_next_level (struct bidi_it *bidi_it)$/;"	f	file:	signature:(struct bidi_it *bidi_it)
bidi_pop_embedding_level	bidi.c	/^bidi_pop_embedding_level (struct bidi_it *bidi_it)$/;"	f	file:	signature:(struct bidi_it *bidi_it)
bidi_pop_it	bidi.c	/^bidi_pop_it (struct bidi_it *bidi_it)$/;"	f	signature:(struct bidi_it *bidi_it)
bidi_pop_it	dispextern.h	/^extern void bidi_pop_it (struct bidi_it *);$/;"	p	signature:(struct bidi_it *)
bidi_push_embedding_level	bidi.c	/^bidi_push_embedding_level (struct bidi_it *bidi_it,$/;"	f	file:	signature:(struct bidi_it *bidi_it, int level, bidi_dir_t override, bool isolate_status)
bidi_push_it	bidi.c	/^bidi_push_it (struct bidi_it *bidi_it)$/;"	f	signature:(struct bidi_it *bidi_it)
bidi_push_it	dispextern.h	/^extern void bidi_push_it (struct bidi_it *);$/;"	p	signature:(struct bidi_it *)
bidi_record_type_for_neutral	bidi.c	/^bidi_record_type_for_neutral (struct bidi_saved_info *info, int level,$/;"	f	file:	signature:(struct bidi_saved_info *info, int level, bool nextp)
bidi_remember_char	bidi.c	/^bidi_remember_char (struct bidi_saved_info *saved_info,$/;"	f	file:	signature:(struct bidi_saved_info *saved_info, struct bidi_it *bidi_it, bool from_type)
bidi_resolve_brackets	bidi.c	/^bidi_resolve_brackets (struct bidi_it *bidi_it)$/;"	f	file:	signature:(struct bidi_it *bidi_it)
bidi_resolve_explicit	bidi.c	/^bidi_resolve_explicit (struct bidi_it *bidi_it)$/;"	f	file:	signature:(struct bidi_it *bidi_it)
bidi_resolve_neutral	bidi.c	/^bidi_resolve_neutral (struct bidi_it *bidi_it)$/;"	f	file:	signature:(struct bidi_it *bidi_it)
bidi_resolve_neutral_1	bidi.c	/^bidi_resolve_neutral_1 (bidi_type_t prev_type, bidi_type_t next_type, int lev)$/;"	f	file:	signature:(bidi_type_t prev_type, bidi_type_t next_type, int lev)
bidi_resolve_weak	bidi.c	/^bidi_resolve_weak (struct bidi_it *bidi_it)$/;"	f	file:	signature:(struct bidi_it *bidi_it)
bidi_saved_info	dispextern.h	/^struct bidi_saved_info {$/;"	s
bidi_saved_info::charpos	dispextern.h	/^  ptrdiff_t charpos;		\/* character's buffer position *\/$/;"	m	struct:bidi_saved_info	access:public
bidi_saved_info::orig_type	dispextern.h	/^  bidi_type_t orig_type;	\/* bidi type as we found it in the buffer *\/$/;"	m	struct:bidi_saved_info	access:public
bidi_saved_info::type	dispextern.h	/^  bidi_type_t type;		\/* character's resolved bidi type *\/$/;"	m	struct:bidi_saved_info	access:public
bidi_set_paragraph_end	bidi.c	/^bidi_set_paragraph_end (struct bidi_it *bidi_it)$/;"	f	file:	signature:(struct bidi_it *bidi_it)
bidi_set_sos_type	bidi.c	/^bidi_set_sos_type (struct bidi_it *bidi_it, int level_before, int level_after)$/;"	f	file:	signature:(struct bidi_it *bidi_it, int level_before, int level_after)
bidi_shelve_cache	bidi.c	/^bidi_shelve_cache (void)$/;"	f	signature:(void)
bidi_shelve_cache	dispextern.h	/^extern void *bidi_shelve_cache (void);$/;"	p	signature:(void)
bidi_shelve_header_size	bidi.c	/^    bidi_shelve_header_size$/;"	e	enum:__anon94	file:
bidi_stack	dispextern.h	/^struct bidi_stack {$/;"	s
bidi_stack::flags	dispextern.h	/^  unsigned char flags;		\/* sos, override, isolate_status *\/$/;"	m	struct:bidi_stack	access:public
bidi_stack::last_strong_type	dispextern.h	/^  unsigned last_strong_type : 3;$/;"	m	struct:bidi_stack	access:public
bidi_stack::level	dispextern.h	/^  unsigned char level;$/;"	m	struct:bidi_stack	access:public
bidi_stack::next_for_neutral_pos	dispextern.h	/^  ptrdiff_t next_for_neutral_pos;$/;"	m	struct:bidi_stack	access:public
bidi_stack::next_for_neutral_type	dispextern.h	/^  unsigned next_for_neutral_type : 3;$/;"	m	struct:bidi_stack	access:public
bidi_stack::prev_for_neutral_type	dispextern.h	/^  unsigned prev_for_neutral_type : 3;$/;"	m	struct:bidi_stack	access:public
bidi_string_data	dispextern.h	/^struct bidi_string_data {$/;"	s
bidi_string_data::bufpos	dispextern.h	/^  ptrdiff_t bufpos;		\/* buffer position of lstring, or 0 if N\/A *\/$/;"	m	struct:bidi_string_data	access:public
bidi_string_data::from_disp_str	dispextern.h	/^  bool_bf from_disp_str : 1;	\/* True means the string comes from a$/;"	m	struct:bidi_string_data	access:public
bidi_string_data::lstring	dispextern.h	/^  Lisp_Object lstring;		\/* Lisp string to reorder, or nil *\/$/;"	m	struct:bidi_string_data	access:public
bidi_string_data::s	dispextern.h	/^  const unsigned char *s;	\/* string data, or NULL if reordering buffer *\/$/;"	m	struct:bidi_string_data	access:public
bidi_string_data::schars	dispextern.h	/^  ptrdiff_t schars;		\/* the number of characters in the string,$/;"	m	struct:bidi_string_data	access:public
bidi_string_data::unibyte	dispextern.h	/^  bool_bf unibyte : 1;		\/* True means the string is unibyte *\/$/;"	m	struct:bidi_string_data	access:public
bidi_type	dispextern.h	/^  unsigned bidi_type : 3;$/;"	m	struct:glyph	access:public
bidi_type_of_next_char	bidi.c	/^bidi_type_of_next_char (struct bidi_it *bidi_it)$/;"	f	file:	signature:(struct bidi_it *bidi_it)
bidi_type_t	dispextern.h	/^} bidi_type_t;$/;"	t	typeref:enum:__anon114
bidi_type_table	bidi.c	/^static Lisp_Object bidi_type_table, bidi_mirror_table, bidi_brackets_table;$/;"	v	file:
bidi_unshelve_cache	bidi.c	/^bidi_unshelve_cache (void *databuf, bool just_free)$/;"	f	signature:(void *databuf, bool just_free)
bidi_unshelve_cache	dispextern.h	/^extern void bidi_unshelve_cache (void *, bool);$/;"	p	signature:(void *, bool)
BIG	cm.c	29;"	d	file:
bind	w32.c	223;"	d	file:
bind_polling_period	keyboard.c	/^bind_polling_period (int n)$/;"	f	signature:(int n)
bind_polling_period	keyboard.h	/^extern void bind_polling_period (int);$/;"	p	signature:(int)
bitch_at_user	dispextern.h	/^extern void bitch_at_user (void);$/;"	p	signature:(void)
bitch_at_user	dispnew.c	/^bitch_at_user (void)$/;"	f	signature:(void)
bitmap	fringe.c	/^  (Lisp_Object bitmap, Lisp_Object bits, Lisp_Object height, Lisp_Object width, Lisp_Object align)$/;"	v
bitmap	fringe.c	/^  (Lisp_Object bitmap, Lisp_Object face)$/;"	v
Bitmap	w32gui.h	/^typedef HBITMAP Bitmap;$/;"	t
bitmaps	nsterm.h	/^  struct ns_bitmap_record *bitmaps;$/;"	m	struct:ns_display_info	typeref:struct:ns_display_info::ns_bitmap_record	access:public
bitmaps	w32term.h	/^  struct w32_bitmap_record *bitmaps;$/;"	m	struct:w32_display_info	typeref:struct:w32_display_info::w32_bitmap_record	access:public
bitmaps	xterm.h	/^  struct x_bitmap_record *bitmaps;$/;"	m	struct:x_display_info	typeref:struct:x_display_info::x_bitmap_record	access:public
bitmaps_last	nsterm.h	/^  ptrdiff_t bitmaps_last;$/;"	m	struct:ns_display_info	access:public
bitmaps_last	w32term.h	/^  ptrdiff_t bitmaps_last;$/;"	m	struct:w32_display_info	access:public
bitmaps_last	xterm.h	/^  ptrdiff_t bitmaps_last;$/;"	m	struct:x_display_info	access:public
bitmaps_size	nsterm.h	/^  ptrdiff_t bitmaps_size;$/;"	m	struct:ns_display_info	access:public
bitmaps_size	w32term.h	/^  ptrdiff_t bitmaps_size;$/;"	m	struct:w32_display_info	access:public
bitmaps_size	xterm.h	/^  ptrdiff_t bitmaps_size;$/;"	m	struct:x_display_info	access:public
Bitmap_Record	image.c	/^typedef struct ns_bitmap_record Bitmap_Record;$/;"	t	typeref:struct:ns_bitmap_record	file:
Bitmap_Record	image.c	/^typedef struct w32_bitmap_record Bitmap_Record;$/;"	t	typeref:struct:w32_bitmap_record	file:
Bitmap_Record	image.c	/^typedef struct x_bitmap_record Bitmap_Record;$/;"	t	typeref:struct:x_bitmap_record	file:
bits	dispextern.h	/^  unsigned short *bits;$/;"	m	struct:draw_fringe_bitmap_params	access:public
bits	fringe.c	/^  (Lisp_Object bitmap, Lisp_Object bits, Lisp_Object height, Lisp_Object width, Lisp_Object align)$/;"	v
bits	fringe.c	/^  unsigned short *bits;$/;"	m	struct:fringe_bitmap	file:	access:public
bits	regex.c	/^  int bits;			\/* flag to record character classes *\/$/;"	m	struct:range_table_work_area	file:	access:public
bits	w32.h	/^  unsigned int bits[FD_SETSIZE \/ 32];$/;"	m	struct:__anon89	access:public
BITS_PER_BITS_WORD	lisp.h	/^enum { BITS_PER_BITS_WORD = SIZE_WIDTH };$/;"	e	enum:__anon16
bits_per_pixel	font.h	/^  int bits_per_pixel;$/;"	m	struct:font_bitmap	access:public
bits_word	lisp.h	/^typedef size_t bits_word;$/;"	t
BITS_WORD_MAX	lisp.h	118;"	d
bits_word_to_host_endian	data.c	/^bits_word_to_host_endian (bits_word val)$/;"	f	file:	signature:(bits_word val)
BIT_ALNUM	regex.c	1794;"	d	file:
BIT_ALPHA	regex.c	1793;"	d	file:
BIT_BLANK	regex.c	1797;"	d	file:
BIT_GRAPH	regex.c	1795;"	d	file:
bit_is_set	editfns.c	/^bit_is_set (const unsigned char *a, ptrdiff_t i)$/;"	f	file:	signature:(const unsigned char *a, ptrdiff_t i)
bit_is_set	editfns.c	/^static bool bit_is_set (const unsigned char *, OFFSET);$/;"	p	file:	signature:(const unsigned char *, OFFSET)
BIT_LOWER	regex.c	1788;"	d	file:
BIT_MULTIBYTE	regex.c	1792;"	d	file:
BIT_PRINT	regex.c	1796;"	d	file:
BIT_PUNCT	regex.c	1789;"	d	file:
BIT_SPACE	regex.c	1790;"	d	file:
BIT_UPPER	regex.c	1791;"	d	file:
BIT_WORD	regex.c	1787;"	d	file:
BLACK_PIX_DEFAULT	nsterm.h	1111;"	d
BLACK_PIX_DEFAULT	w32term.h	42;"	d
BLACK_PIX_DEFAULT	xterm.h	104;"	d
black_relief	w32term.h	/^  black_relief, white_relief;$/;"	m	struct:w32_output	typeref:struct:w32_output::relief	access:public
black_relief	xterm.h	/^  black_relief, white_relief;$/;"	m	struct:x_output	typeref:struct:x_output::relief	access:public
blankp	character.c	/^blankp (int c)$/;"	f	signature:(int c)
blankp	character.h	/^extern bool blankp (int);$/;"	p	signature:(int)
blank_row	dispextern.h	/^void blank_row (struct window *, struct glyph_row *, int);$/;"	p	signature:(struct window *, struct glyph_row *, int)
blank_row	dispnew.c	/^blank_row (struct window *w, struct glyph_row *row, int y)$/;"	f	signature:(struct window *w, struct glyph_row *row, int y)
blink_off_cursor	frame.h	/^  enum text_cursor_kinds blink_off_cursor;$/;"	m	struct:frame	typeref:enum:frame::text_cursor_kinds	access:public
blink_off_cursor_width	frame.h	/^  int blink_off_cursor_width;$/;"	m	struct:frame	access:public
BLOCK	gmalloc.c	164;"	d	file:
BLOCKIFY	gmalloc.c	111;"	d	file:
BLOCKLOG	gmalloc.c	109;"	d	file:
blocks	alloc.c	/^  struct ablock blocks[ABLOCKS_SIZE];$/;"	m	struct:ablocks	typeref:struct:ablocks::ablock	file:	access:public
blocks	w32heap.c	/^} blocks[MAX_BLOCKS];$/;"	v	typeref:struct:__anon139	file:
BLOCKSIZE	gmalloc.c	110;"	d	file:
blocks_number	w32heap.c	/^static DWORD          blocks_number = 0;$/;"	v	file:
BLOCK_ALIGN	alloc.c	1135;"	d	file:
block_atimers	atimer.c	/^block_atimers (sigset_t *oldset)$/;"	f	file:	signature:(sigset_t *oldset)
block_buffer_flips	xdisp.c	/^block_buffer_flips (void)$/;"	f	file:	signature:(void)
block_buffer_flips	xdisp.c	/^static void block_buffer_flips (void);$/;"	p	file:	signature:(void)
BLOCK_BYTES	alloc.c	1180;"	d	file:
block_child_signal	sysdep.c	/^block_child_signal (sigset_t *oldset)$/;"	f	signature:(sigset_t *oldset)
block_child_signal	syssignal.h	/^extern void block_child_signal (sigset_t *);$/;"	p	signature:(sigset_t *)
block_input	blockinput.h	/^block_input (void)$/;"	f	signature:(void)
block_interrupt_signal	sysdep.c	/^block_interrupt_signal (sigset_t *oldset)$/;"	f	signature:(sigset_t *oldset)
block_interrupt_signal	syssignal.h	/^extern void block_interrupt_signal (sigset_t *);$/;"	p	signature:(sigset_t *)
BLOCK_PADDING	alloc.c	1179;"	d	file:
block_tty_out_signal	sysdep.c	/^block_tty_out_signal (sigset_t *oldset)$/;"	f	signature:(sigset_t *oldset)
block_tty_out_signal	syssignal.h	/^extern void block_tty_out_signal (sigset_t *);$/;"	p	signature:(sigset_t *)
bloc_ptr	ralloc.c	/^} *bloc_ptr;$/;"	t	typeref:struct:bp	file:
BLOC_PTR_SIZE	ralloc.c	160;"	d	file:
bloc_start	ralloc.c	/^  void *bloc_start;$/;"	m	struct:heap	file:	access:public
blue	dispextern.h	/^  unsigned short red, green, blue;$/;"	m	struct:__anon104	access:public
blue	w32fns.c	/^  (Lisp_Object red, Lisp_Object green, Lisp_Object blue, Lisp_Object name)$/;"	v
BLUE16_FROM_ULONG	nsterm.h	814;"	d
blue_bits	xterm.h	/^  int red_bits, blue_bits, green_bits;$/;"	m	struct:x_display_info	access:public
BLUE_FROM_ULONG	nsterm.h	808;"	d
blue_offset	xterm.h	/^  int red_offset, blue_offset, green_offset;$/;"	m	struct:x_display_info	access:public
blv	lisp.h	/^    struct Lisp_Buffer_Local_Value *blv;$/;"	m	union:Lisp_Symbol::__anon18	typeref:struct:Lisp_Symbol::__anon18::Lisp_Buffer_Local_Value	access:public
blv_found	lisp.h	/^blv_found (struct Lisp_Buffer_Local_Value *blv)$/;"	f	signature:(struct Lisp_Buffer_Local_Value *blv)
blv_value	data.c	/^blv_value (struct Lisp_Buffer_Local_Value *blv)$/;"	f	file:	signature:(struct Lisp_Buffer_Local_Value *blv)
body	window.c	/^  (Lisp_Object window, Lisp_Object first, Lisp_Object last, Lisp_Object body, Lisp_Object inverse, Lisp_Object left)$/;"	v
bol	coding.h	/^  bool_bf bol : 1;$/;"	m	struct:iso_2022_spec	access:public
bold	nsterm.h	/^  char bold, ital;  \/* convenience flags *\/$/;"	m	struct:nsfont_info	access:public
bom	coding.h	/^  enum utf_bom_type bom;$/;"	m	struct:utf_16_spec	typeref:enum:utf_16_spec::utf_bom_type	access:public
boolean	image.c	6397;"	d	file:
boolean	regex.c	/^typedef char boolean;$/;"	t	file:
BOOLFWDP	data.c	/^BOOLFWDP (union Lisp_Fwd *a)$/;"	f	file:	signature:(union Lisp_Fwd *a)
boolvar	lisp.h	/^    bool *boolvar;$/;"	m	struct:Lisp_Boolfwd	access:public
bool_bf	conf_post.h	/^typedef bool bool_bf;$/;"	t
bool_bf	conf_post.h	/^typedef unsigned int bool_bf;$/;"	t
bool_header_size	lisp.h	/^    bool_header_size = offsetof (struct Lisp_Bool_Vector, data),$/;"	e	enum:__anon20
bool_vector_binop_driver	data.c	/^bool_vector_binop_driver (Lisp_Object a,$/;"	f	file:	signature:(Lisp_Object a, Lisp_Object b, Lisp_Object dest, enum bool_vector_op op)
bool_vector_bitref	lisp.h	/^bool_vector_bitref (Lisp_Object a, EMACS_INT i)$/;"	f	signature:(Lisp_Object a, EMACS_INT i)
BOOL_VECTOR_BITS_PER_CHAR	lisp.h	/^enum {  BOOL_VECTOR_BITS_PER_CHAR =$/;"	e	enum:__anon15
BOOL_VECTOR_BITS_PER_CHAR	lisp.h	110;"	d
bool_vector_bytes	lisp.h	/^bool_vector_bytes (EMACS_INT size)$/;"	f	signature:(EMACS_INT size)
bool_vector_data	lisp.h	/^bool_vector_data (Lisp_Object a)$/;"	f	signature:(Lisp_Object a)
bool_vector_exclusive_or	data.c	/^enum bool_vector_op { bool_vector_exclusive_or,$/;"	e	enum:bool_vector_op	file:
bool_vector_fill	alloc.c	/^bool_vector_fill (Lisp_Object a, Lisp_Object init)$/;"	f	signature:(Lisp_Object a, Lisp_Object init)
bool_vector_fill	lisp.h	/^extern Lisp_Object bool_vector_fill (Lisp_Object, Lisp_Object);$/;"	p	signature:(Lisp_Object, Lisp_Object)
bool_vector_intersection	data.c	/^                      bool_vector_intersection,$/;"	e	enum:bool_vector_op	file:
bool_vector_op	data.c	/^enum bool_vector_op { bool_vector_exclusive_or,$/;"	g	file:
BOOL_VECTOR_P	lisp.h	/^BOOL_VECTOR_P (Lisp_Object a)$/;"	f	signature:(Lisp_Object a)
bool_vector_ref	lisp.h	/^bool_vector_ref (Lisp_Object a, EMACS_INT i)$/;"	f	signature:(Lisp_Object a, EMACS_INT i)
bool_vector_set	lisp.h	/^bool_vector_set (Lisp_Object a, EMACS_INT i, bool b)$/;"	f	signature:(Lisp_Object a, EMACS_INT i, bool b)
bool_vector_set_difference	data.c	/^                      bool_vector_set_difference,$/;"	e	enum:bool_vector_op	file:
bool_vector_size	lisp.h	/^bool_vector_size (Lisp_Object a)$/;"	f	signature:(Lisp_Object a)
bool_vector_spare_mask	data.c	/^bool_vector_spare_mask (EMACS_INT nr_bits)$/;"	f	file:	signature:(EMACS_INT nr_bits)
bool_vector_subsetp	data.c	/^                      bool_vector_subsetp };$/;"	e	enum:bool_vector_op	file:
bool_vector_uchar_data	lisp.h	/^bool_vector_uchar_data (Lisp_Object a)$/;"	f	signature:(Lisp_Object a)
bool_vector_union	data.c	/^                      bool_vector_union,$/;"	e	enum:bool_vector_op	file:
bool_vector_words	lisp.h	/^bool_vector_words (EMACS_INT size)$/;"	f	signature:(EMACS_INT size)
bootstrap_exe	Makefile	/^bootstrap_exe = ..\/src\/bootstrap-emacs$(EXEEXT)$/;"	m
boot_error	gnutls.c	/^boot_error (struct Lisp_Process *p, const char *m, ...)$/;"	f	signature:(struct Lisp_Process *p, const char *m, ...)
boot_time	filelock.c	/^static time_t boot_time;$/;"	v	file:
BOOT_TIME_FILE	filelock.c	66;"	d	file:
boot_time_initialized	filelock.c	/^static bool boot_time_initialized;$/;"	v	file:
BORDER_FACE_ID	dispextern.h	/^  BORDER_FACE_ID,$/;"	e	enum:face_id
border_pixel	w32term.h	/^  COLORREF border_pixel;$/;"	m	struct:w32_output	access:public
border_pixel	xterm.h	/^  unsigned long border_pixel;$/;"	m	struct:x_output	access:public
border_tile	xterm.h	/^  Pixmap border_tile;$/;"	m	struct:x_output	access:public
border_width	frame.h	/^  int border_width;$/;"	m	struct:frame	access:public
BOTH_KIDS_P	intervals.h	94;"	d
bottom_divider_width	frame.h	/^  int right_divider_width, bottom_divider_width;$/;"	m	struct:frame	access:public
bottom_edge_cursor	nsterm.h	/^  Cursor bottom_edge_cursor;$/;"	m	struct:ns_output	access:public
bottom_edge_cursor	w32term.h	/^  Cursor bottom_edge_cursor;$/;"	m	struct:w32_output	access:public
bottom_edge_cursor	xterm.h	/^  Cursor bottom_edge_cursor;$/;"	m	struct:x_output	access:public
bottom_left_angle_bits	fringe.c	/^static unsigned short bottom_left_angle_bits[] = {$/;"	v	file:
bottom_left_corner_cursor	nsterm.h	/^  Cursor bottom_left_corner_cursor;$/;"	m	struct:ns_output	access:public
bottom_left_corner_cursor	w32term.h	/^  Cursor bottom_left_corner_cursor;$/;"	m	struct:w32_output	access:public
bottom_left_corner_cursor	xterm.h	/^  Cursor bottom_left_corner_cursor;$/;"	m	struct:x_output	access:public
bottom_right_angle_bits	fringe.c	/^static unsigned short bottom_right_angle_bits[] = {$/;"	v	file:
bottom_right_corner_cursor	nsterm.h	/^  Cursor bottom_right_corner_cursor;$/;"	m	struct:ns_output	access:public
bottom_right_corner_cursor	w32term.h	/^  Cursor bottom_right_corner_cursor;$/;"	m	struct:w32_output	access:public
bottom_right_corner_cursor	xterm.h	/^  Cursor bottom_right_corner_cursor;$/;"	m	struct:x_output	access:public
BOT_CORNER	dispextern.h	3012;"	d
bound	search.c	/^  (Lisp_Object regexp, Lisp_Object bound, Lisp_Object noerror, Lisp_Object count)$/;"	v
bound	search.c	/^  (Lisp_Object string, Lisp_Object bound, Lisp_Object noerror, Lisp_Object count)$/;"	v
boundaries	region-cache.c	/^  struct boundary *boundaries;$/;"	m	struct:region_cache	typeref:struct:region_cache::boundary	file:	access:public
boundary	region-cache.c	/^struct boundary {$/;"	s	file:
boundary::pos	region-cache.c	/^  ptrdiff_t pos;$/;"	m	struct:boundary	file:	access:public
boundary::value	region-cache.c	/^  int value;$/;"	m	struct:boundary	file:	access:public
BOUNDARY_POS	region-cache.c	98;"	d	file:
BOUNDARY_VALUE	region-cache.c	104;"	d	file:
bounded_number	alloc.c	/^bounded_number (EMACS_INT number)$/;"	f	file:	signature:(EMACS_INT number)
box	dispextern.h	/^  ENUM_BF (face_box_type) box : 2;$/;"	m	struct:face	access:public
box_color	dispextern.h	/^  unsigned long box_color;$/;"	m	struct:face	access:public
box_color_defaulted_p	dispextern.h	/^  bool_bf box_color_defaulted_p : 1;$/;"	m	struct:face	access:public
box_line_width	dispextern.h	/^  int box_line_width;$/;"	m	struct:face	access:public
boyer_moore	search.c	/^boyer_moore (EMACS_INT n, unsigned char *base_pat,$/;"	f	file:	signature:(EMACS_INT n, unsigned char *base_pat, ptrdiff_t len_byte, Lisp_Object trt, Lisp_Object inverse_trt, ptrdiff_t pos_byte, ptrdiff_t lim_byte, int char_base)
boyer_moore	search.c	/^static EMACS_INT boyer_moore (EMACS_INT, unsigned char *, ptrdiff_t,$/;"	p	file:	signature:(EMACS_INT, unsigned char *, ptrdiff_t, Lisp_Object, Lisp_Object, ptrdiff_t, ptrdiff_t, int)
bp	ralloc.c	/^typedef struct bp$/;"	s	file:
bp::data	ralloc.c	/^  void *data;$/;"	m	struct:bp	file:	access:public
bp::heap	ralloc.c	/^  struct heap *heap; 		\/* Heap this bloc is in.  *\/$/;"	m	struct:bp	typeref:struct:bp::heap	file:	access:public
bp::new_data	ralloc.c	/^  void *new_data;		\/* temporarily used for relocation *\/$/;"	m	struct:bp	file:	access:public
bp::next	ralloc.c	/^  struct bp *next;$/;"	m	struct:bp	typeref:struct:bp::bp	file:	access:public
bp::prev	ralloc.c	/^  struct bp *prev;$/;"	m	struct:bp	typeref:struct:bp::bp	file:	access:public
bp::size	ralloc.c	/^  size_t size;$/;"	m	struct:bp	file:	access:public
bp::variable	ralloc.c	/^  void **variable;$/;"	m	struct:bp	file:	access:public
bpa_stack_entry	bidi.c	/^typedef struct bpa_stack_entry {$/;"	s	file:
bpa_stack_entry	bidi.c	/^} bpa_stack_entry;$/;"	t	typeref:struct:bpa_stack_entry	file:
bpa_stack_entry::close_bracket_char	bidi.c	/^  int close_bracket_char;$/;"	m	struct:bpa_stack_entry	file:	access:public
bpa_stack_entry::flags	bidi.c	/^  unsigned flags : 2;$/;"	m	struct:bpa_stack_entry	file:	access:public
bpa_stack_entry::open_bracket_idx	bidi.c	/^  int open_bracket_idx;$/;"	m	struct:bpa_stack_entry	file:	access:public
bpa_stack_entry::open_bracket_pos	bidi.c	/^  ptrdiff_t open_bracket_pos;$/;"	m	struct:bpa_stack_entry	file:	access:public
bps	sound.c	/^  int bps;$/;"	m	struct:sound_device	file:	access:public
bracket_enclosed_type	dispextern.h	/^  bidi_type_t bracket_enclosed_type;	\/* type for bracket resolution *\/$/;"	m	struct:bidi_it	access:public
bracket_pairing_pos	dispextern.h	/^  ptrdiff_t bracket_pairing_pos;	\/* position of pairing bracket *\/$/;"	m	struct:bidi_it	access:public
break_value	ralloc.c	/^static void *break_value;$/;"	v	file:
brk_on_dump	unexhp9k800.c	/^static long brk_on_dump = 0;$/;"	v	file:
Bscan_buffer	bytecode.c	/^    Bscan_buffer = 0153, \/* No longer generated as of v18.  *\/$/;"	e	enum:byte_code_op	file:
bset_abbrev_mode	buffer.c	/^bset_abbrev_mode (struct buffer *b, Lisp_Object val)$/;"	f	file:	signature:(struct buffer *b, Lisp_Object val)
bset_abbrev_table	buffer.c	/^bset_abbrev_table (struct buffer *b, Lisp_Object val)$/;"	f	file:	signature:(struct buffer *b, Lisp_Object val)
bset_auto_fill_function	buffer.c	/^bset_auto_fill_function (struct buffer *b, Lisp_Object val)$/;"	f	file:	signature:(struct buffer *b, Lisp_Object val)
bset_auto_save_file_format	buffer.c	/^bset_auto_save_file_format (struct buffer *b, Lisp_Object val)$/;"	f	file:	signature:(struct buffer *b, Lisp_Object val)
bset_auto_save_file_name	buffer.c	/^bset_auto_save_file_name (struct buffer *b, Lisp_Object val)$/;"	f	file:	signature:(struct buffer *b, Lisp_Object val)
bset_backed_up	buffer.c	/^bset_backed_up (struct buffer *b, Lisp_Object val)$/;"	f	file:	signature:(struct buffer *b, Lisp_Object val)
bset_begv_marker	buffer.c	/^bset_begv_marker (struct buffer *b, Lisp_Object val)$/;"	f	file:	signature:(struct buffer *b, Lisp_Object val)
bset_bidi_display_reordering	buffer.c	/^bset_bidi_display_reordering (struct buffer *b, Lisp_Object val)$/;"	f	file:	signature:(struct buffer *b, Lisp_Object val)
bset_bidi_paragraph_direction	buffer.h	/^bset_bidi_paragraph_direction (struct buffer *b, Lisp_Object val)$/;"	f	signature:(struct buffer *b, Lisp_Object val)
bset_buffer_file_coding_system	buffer.c	/^bset_buffer_file_coding_system (struct buffer *b, Lisp_Object val)$/;"	f	file:	signature:(struct buffer *b, Lisp_Object val)
bset_cache_long_scans	buffer.h	/^bset_cache_long_scans (struct buffer *b, Lisp_Object val)$/;"	f	signature:(struct buffer *b, Lisp_Object val)
bset_case_canon_table	buffer.h	/^bset_case_canon_table (struct buffer *b, Lisp_Object val)$/;"	f	signature:(struct buffer *b, Lisp_Object val)
bset_case_eqv_table	buffer.h	/^bset_case_eqv_table (struct buffer *b, Lisp_Object val)$/;"	f	signature:(struct buffer *b, Lisp_Object val)
bset_case_fold_search	buffer.c	/^bset_case_fold_search (struct buffer *b, Lisp_Object val)$/;"	f	file:	signature:(struct buffer *b, Lisp_Object val)
bset_category_table	category.c	/^bset_category_table (struct buffer *b, Lisp_Object val)$/;"	f	file:	signature:(struct buffer *b, Lisp_Object val)
bset_ctl_arrow	buffer.c	/^bset_ctl_arrow (struct buffer *b, Lisp_Object val)$/;"	f	file:	signature:(struct buffer *b, Lisp_Object val)
bset_cursor_in_non_selected_windows	buffer.c	/^bset_cursor_in_non_selected_windows (struct buffer *b, Lisp_Object val)$/;"	f	file:	signature:(struct buffer *b, Lisp_Object val)
bset_cursor_type	buffer.c	/^bset_cursor_type (struct buffer *b, Lisp_Object val)$/;"	f	file:	signature:(struct buffer *b, Lisp_Object val)
bset_directory	buffer.h	/^bset_directory (struct buffer *b, Lisp_Object val)$/;"	f	signature:(struct buffer *b, Lisp_Object val)
bset_display_count	buffer.h	/^bset_display_count (struct buffer *b, Lisp_Object val)$/;"	f	signature:(struct buffer *b, Lisp_Object val)
bset_display_table	buffer.c	/^bset_display_table (struct buffer *b, Lisp_Object val)$/;"	f	file:	signature:(struct buffer *b, Lisp_Object val)
bset_display_time	buffer.h	/^bset_display_time (struct buffer *b, Lisp_Object val)$/;"	f	signature:(struct buffer *b, Lisp_Object val)
bset_downcase_table	buffer.h	/^bset_downcase_table (struct buffer *b, Lisp_Object val)$/;"	f	signature:(struct buffer *b, Lisp_Object val)
bset_enable_multibyte_characters	buffer.h	/^bset_enable_multibyte_characters (struct buffer *b, Lisp_Object val)$/;"	f	signature:(struct buffer *b, Lisp_Object val)
bset_extra_line_spacing	buffer.c	/^bset_extra_line_spacing (struct buffer *b, Lisp_Object val)$/;"	f	file:	signature:(struct buffer *b, Lisp_Object val)
bset_filename	buffer.h	/^bset_filename (struct buffer *b, Lisp_Object val)$/;"	f	signature:(struct buffer *b, Lisp_Object val)
bset_file_format	buffer.c	/^bset_file_format (struct buffer *b, Lisp_Object val)$/;"	f	file:	signature:(struct buffer *b, Lisp_Object val)
bset_file_truename	buffer.c	/^bset_file_truename (struct buffer *b, Lisp_Object val)$/;"	f	file:	signature:(struct buffer *b, Lisp_Object val)
bset_fringes_outside_margins	buffer.c	/^bset_fringes_outside_margins (struct buffer *b, Lisp_Object val)$/;"	f	file:	signature:(struct buffer *b, Lisp_Object val)
bset_fringe_cursor_alist	buffer.c	/^bset_fringe_cursor_alist (struct buffer *b, Lisp_Object val)$/;"	f	file:	signature:(struct buffer *b, Lisp_Object val)
bset_fringe_indicator_alist	buffer.c	/^bset_fringe_indicator_alist (struct buffer *b, Lisp_Object val)$/;"	f	file:	signature:(struct buffer *b, Lisp_Object val)
bset_header_line_format	buffer.c	/^bset_header_line_format (struct buffer *b, Lisp_Object val)$/;"	f	file:	signature:(struct buffer *b, Lisp_Object val)
bset_horizontal_scroll_bar_type	buffer.c	/^bset_horizontal_scroll_bar_type (struct buffer *b, Lisp_Object val)$/;"	f	file:	signature:(struct buffer *b, Lisp_Object val)
bset_indicate_buffer_boundaries	buffer.c	/^bset_indicate_buffer_boundaries (struct buffer *b, Lisp_Object val)$/;"	f	file:	signature:(struct buffer *b, Lisp_Object val)
bset_indicate_empty_lines	buffer.c	/^bset_indicate_empty_lines (struct buffer *b, Lisp_Object val)$/;"	f	file:	signature:(struct buffer *b, Lisp_Object val)
bset_invisibility_spec	buffer.c	/^bset_invisibility_spec (struct buffer *b, Lisp_Object val)$/;"	f	file:	signature:(struct buffer *b, Lisp_Object val)
bset_keymap	buffer.h	/^bset_keymap (struct buffer *b, Lisp_Object val)$/;"	f	signature:(struct buffer *b, Lisp_Object val)
bset_last_selected_window	buffer.h	/^bset_last_selected_window (struct buffer *b, Lisp_Object val)$/;"	f	signature:(struct buffer *b, Lisp_Object val)
bset_left_fringe_width	buffer.c	/^bset_left_fringe_width (struct buffer *b, Lisp_Object val)$/;"	f	file:	signature:(struct buffer *b, Lisp_Object val)
bset_local_var_alist	buffer.h	/^bset_local_var_alist (struct buffer *b, Lisp_Object val)$/;"	f	signature:(struct buffer *b, Lisp_Object val)
bset_major_mode	buffer.c	/^bset_major_mode (struct buffer *b, Lisp_Object val)$/;"	f	file:	signature:(struct buffer *b, Lisp_Object val)
bset_mark	buffer.c	/^bset_mark (struct buffer *b, Lisp_Object val)$/;"	f	file:	signature:(struct buffer *b, Lisp_Object val)
Bset_mark	bytecode.c	/^    Bset_mark = 0163, \/* this loser is no longer generated as of v18 *\/$/;"	e	enum:byte_code_op	file:
bset_mark_active	buffer.h	/^bset_mark_active (struct buffer *b, Lisp_Object val)$/;"	f	signature:(struct buffer *b, Lisp_Object val)
bset_minor_modes	buffer.c	/^bset_minor_modes (struct buffer *b, Lisp_Object val)$/;"	f	file:	signature:(struct buffer *b, Lisp_Object val)
bset_mode_line_format	buffer.c	/^bset_mode_line_format (struct buffer *b, Lisp_Object val)$/;"	f	file:	signature:(struct buffer *b, Lisp_Object val)
bset_mode_name	buffer.c	/^bset_mode_name (struct buffer *b, Lisp_Object val)$/;"	f	file:	signature:(struct buffer *b, Lisp_Object val)
bset_name	buffer.c	/^bset_name (struct buffer *b, Lisp_Object val)$/;"	f	file:	signature:(struct buffer *b, Lisp_Object val)
bset_overwrite_mode	buffer.c	/^bset_overwrite_mode (struct buffer *b, Lisp_Object val)$/;"	f	file:	signature:(struct buffer *b, Lisp_Object val)
bset_point_before_scroll	buffer.h	/^bset_point_before_scroll (struct buffer *b, Lisp_Object val)$/;"	f	signature:(struct buffer *b, Lisp_Object val)
bset_pt_marker	buffer.c	/^bset_pt_marker (struct buffer *b, Lisp_Object val)$/;"	f	file:	signature:(struct buffer *b, Lisp_Object val)
bset_read_only	buffer.h	/^bset_read_only (struct buffer *b, Lisp_Object val)$/;"	f	signature:(struct buffer *b, Lisp_Object val)
bset_redisplay	window.h	/^extern void bset_redisplay (struct buffer *b);$/;"	p	signature:(struct buffer *b)
bset_redisplay	xdisp.c	/^bset_redisplay (struct buffer *b)$/;"	f	signature:(struct buffer *b)
bset_right_fringe_width	buffer.c	/^bset_right_fringe_width (struct buffer *b, Lisp_Object val)$/;"	f	file:	signature:(struct buffer *b, Lisp_Object val)
bset_save_length	buffer.c	/^bset_save_length (struct buffer *b, Lisp_Object val)$/;"	f	file:	signature:(struct buffer *b, Lisp_Object val)
bset_scroll_bar_height	buffer.c	/^bset_scroll_bar_height (struct buffer *b, Lisp_Object val)$/;"	f	file:	signature:(struct buffer *b, Lisp_Object val)
bset_scroll_bar_width	buffer.c	/^bset_scroll_bar_width (struct buffer *b, Lisp_Object val)$/;"	f	file:	signature:(struct buffer *b, Lisp_Object val)
bset_scroll_down_aggressively	buffer.c	/^bset_scroll_down_aggressively (struct buffer *b, Lisp_Object val)$/;"	f	file:	signature:(struct buffer *b, Lisp_Object val)
bset_scroll_up_aggressively	buffer.c	/^bset_scroll_up_aggressively (struct buffer *b, Lisp_Object val)$/;"	f	file:	signature:(struct buffer *b, Lisp_Object val)
bset_selective_display	buffer.c	/^bset_selective_display (struct buffer *b, Lisp_Object val)$/;"	f	file:	signature:(struct buffer *b, Lisp_Object val)
bset_selective_display_ellipses	buffer.c	/^bset_selective_display_ellipses (struct buffer *b, Lisp_Object val)$/;"	f	file:	signature:(struct buffer *b, Lisp_Object val)
bset_syntax_table	syntax.c	/^bset_syntax_table (struct buffer *b, Lisp_Object val)$/;"	f	file:	signature:(struct buffer *b, Lisp_Object val)
bset_truncate_lines	buffer.h	/^bset_truncate_lines (struct buffer *b, Lisp_Object val)$/;"	f	signature:(struct buffer *b, Lisp_Object val)
bset_undo_list	buffer.h	/^bset_undo_list (struct buffer *b, Lisp_Object val)$/;"	f	signature:(struct buffer *b, Lisp_Object val)
bset_upcase_table	buffer.h	/^bset_upcase_table (struct buffer *b, Lisp_Object val)$/;"	f	signature:(struct buffer *b, Lisp_Object val)
bset_update_mode_line	window.h	/^extern void bset_update_mode_line (struct buffer *b);$/;"	p	signature:(struct buffer *b)
bset_update_mode_line	xdisp.c	/^bset_update_mode_line (struct buffer *b)$/;"	f	signature:(struct buffer *b)
bset_vertical_scroll_bar_type	buffer.c	/^bset_vertical_scroll_bar_type (struct buffer *b, Lisp_Object val)$/;"	f	file:	signature:(struct buffer *b, Lisp_Object val)
bset_width_table	buffer.h	/^bset_width_table (struct buffer *b, Lisp_Object val)$/;"	f	signature:(struct buffer *b, Lisp_Object val)
bset_word_wrap	buffer.c	/^bset_word_wrap (struct buffer *b, Lisp_Object val)$/;"	f	file:	signature:(struct buffer *b, Lisp_Object val)
bset_zv_marker	buffer.c	/^bset_zv_marker (struct buffer *b, Lisp_Object val)$/;"	f	file:	signature:(struct buffer *b, Lisp_Object val)
bss_sbrk	sheap.c	/^bss_sbrk (ptrdiff_t request_size)$/;"	f	signature:(ptrdiff_t request_size)
bss_sbrk	sheap.h	/^extern void *bss_sbrk (ptrdiff_t);$/;"	p	signature:(ptrdiff_t)
bss_sbrk_buffer	sheap.c	/^char bss_sbrk_buffer[STATIC_HEAP_SIZE];$/;"	v
bss_sbrk_did_unexec	sheap.c	/^bool bss_sbrk_did_unexec;$/;"	v
bss_section	unexw32.c	/^PIMAGE_SECTION_HEADER bss_section;$/;"	v
bss_section_static	unexw32.c	/^PIMAGE_SECTION_HEADER bss_section_static;$/;"	v
bss_size	unexw32.c	/^DWORD_PTR  bss_size = 0;$/;"	v
bss_size_static	unexw32.c	/^DWORD_PTR  bss_size_static = 0;$/;"	v
bss_start	unexw32.c	/^PCHAR  bss_start = 0;$/;"	v
bss_start_static	unexw32.c	/^PCHAR  bss_start_static = 0;$/;"	v
bt	lisp.h	/^    } bt;$/;"	m	union:specbinding	typeref:struct:specbinding::__anon34	access:public
btowc	regex.c	100;"	d	file:
btowc	regex.h	621;"	d
bucket	dispnew.c	/^  ptrdiff_t bucket;$/;"	m	struct:row_entry	file:	access:public
buckets	dispextern.h	/^  struct face **buckets;$/;"	m	struct:face_cache	typeref:struct:face_cache::face	access:public
buckets	dispextern.h	/^  struct image **buckets;$/;"	m	struct:image_cache	typeref:struct:image_cache::image	access:public
buf	buffer.c	/^  struct sortstr *buf;	\/* An array that expands as needed; never freed.  *\/$/;"	m	struct:sortstrlist	typeref:struct:sortstrlist::sortstr	file:	access:public
buf	lread.c	/^  unsigned char buf[MAX_MULTIBYTE_LENGTH - 1];$/;"	m	struct:infile	file:	access:public
buf	search.c	/^  struct re_pattern_buffer buf;$/;"	m	struct:regexp_cache	typeref:struct:regexp_cache::re_pattern_buffer	file:	access:public
buf	w32notify.c	/^  BYTE *buf;		\/* buffer for ReadDirectoryChangesW *\/$/;"	m	struct:notification	file:	access:public
buffer	buffer.c	/^  (Lisp_Object beg, Lisp_Object end, Lisp_Object buffer,$/;"	v
buffer	buffer.c	/^  (Lisp_Object buffer, Lisp_Object visible_ok, Lisp_Object frame)$/;"	v
buffer	buffer.h	/^struct buffer$/;"	s
buffer	dispextern.h	/^  struct buffer *buffer;$/;"	m	struct:glyph_matrix	typeref:struct:glyph_matrix::buffer	access:public
buffer	editfns.c	/^  (Lisp_Object buffer, Lisp_Object start, Lisp_Object end)$/;"	v
buffer	font.h	/^  unsigned char *buffer;$/;"	m	struct:font_bitmap	access:public
buffer	image.c	/^  JOCTET *buffer;$/;"	m	struct:jpeg_stdio_mgr	file:	access:public
buffer	keymap.c	/^  (Lisp_Object buffer, Lisp_Object prefix, Lisp_Object menus)$/;"	v
buffer	lisp.h	/^  struct buffer *buffer;$/;"	m	struct:Lisp_Marker	typeref:struct:Lisp_Marker::buffer	access:public
buffer	lread.c	/^  (Lisp_Object buffer, Lisp_Object printflag, Lisp_Object filename, Lisp_Object unibyte, Lisp_Object do_allow_print)$/;"	v
buffer	process.h	/^    Lisp_Object buffer;$/;"	m	struct:Lisp_Process	access:public
buffer	regex.h	/^  unsigned char *buffer;$/;"	m	struct:re_pattern_buffer	access:public
buffer	window.c	/^  Lisp_Object window, buffer, start, pointm, old_pointm;$/;"	m	struct:saved_window	file:	access:public
buffer	xwidget.h	/^  Lisp_Object buffer;$/;"	m	struct:xwidget	access:public
buffer1	editfns.c	/^  (Lisp_Object buffer1, Lisp_Object start1, Lisp_Object end1, Lisp_Object buffer2, Lisp_Object start2, Lisp_Object end2)$/;"	v
buffer2	editfns.c	/^  (Lisp_Object buffer1, Lisp_Object start1, Lisp_Object end1, Lisp_Object buffer2, Lisp_Object start2, Lisp_Object end2)$/;"	v
buffer::abbrev_mode_	buffer.h	/^  Lisp_Object abbrev_mode_;$/;"	m	struct:buffer	access:public
buffer::abbrev_table_	buffer.h	/^  Lisp_Object abbrev_table_;$/;"	m	struct:buffer	access:public
buffer::auto_fill_function_	buffer.h	/^  Lisp_Object auto_fill_function_;$/;"	m	struct:buffer	access:public
buffer::auto_save_failure_time	buffer.h	/^  time_t auto_save_failure_time;$/;"	m	struct:buffer	access:public
buffer::auto_save_file_format_	buffer.h	/^  Lisp_Object auto_save_file_format_;$/;"	m	struct:buffer	access:public
buffer::auto_save_file_name_	buffer.h	/^  Lisp_Object auto_save_file_name_;$/;"	m	struct:buffer	access:public
buffer::auto_save_modified	buffer.h	/^  EMACS_INT auto_save_modified;$/;"	m	struct:buffer	access:public
buffer::backed_up_	buffer.h	/^  Lisp_Object backed_up_;$/;"	m	struct:buffer	access:public
buffer::base_buffer	buffer.h	/^  struct buffer *base_buffer;$/;"	m	struct:buffer	typeref:struct:buffer::buffer	access:public
buffer::begv	buffer.h	/^  ptrdiff_t begv;$/;"	m	struct:buffer	access:public
buffer::begv_byte	buffer.h	/^  ptrdiff_t begv_byte;$/;"	m	struct:buffer	access:public
buffer::begv_marker_	buffer.h	/^  Lisp_Object begv_marker_;$/;"	m	struct:buffer	access:public
buffer::bidi_display_reordering_	buffer.h	/^  Lisp_Object bidi_display_reordering_;$/;"	m	struct:buffer	access:public
buffer::bidi_paragraph_cache	buffer.h	/^  struct region_cache *bidi_paragraph_cache;$/;"	m	struct:buffer	typeref:struct:buffer::region_cache	access:public
buffer::bidi_paragraph_direction_	buffer.h	/^  Lisp_Object bidi_paragraph_direction_;$/;"	m	struct:buffer	access:public
buffer::buffer_file_coding_system_	buffer.h	/^  Lisp_Object buffer_file_coding_system_;$/;"	m	struct:buffer	access:public
buffer::cache_long_scans_	buffer.h	/^  Lisp_Object cache_long_scans_;$/;"	m	struct:buffer	access:public
buffer::case_canon_table_	buffer.h	/^  Lisp_Object case_canon_table_;$/;"	m	struct:buffer	access:public
buffer::case_eqv_table_	buffer.h	/^  Lisp_Object case_eqv_table_;$/;"	m	struct:buffer	access:public
buffer::case_fold_search_	buffer.h	/^  Lisp_Object case_fold_search_;$/;"	m	struct:buffer	access:public
buffer::category_table_	buffer.h	/^  Lisp_Object category_table_;$/;"	m	struct:buffer	access:public
buffer::clip_changed	buffer.h	/^  bool_bf clip_changed : 1;$/;"	m	struct:buffer	access:public
buffer::ctl_arrow_	buffer.h	/^  Lisp_Object ctl_arrow_;$/;"	m	struct:buffer	access:public
buffer::cursor_in_non_selected_windows_	buffer.h	/^  Lisp_Object cursor_in_non_selected_windows_;$/;"	m	struct:buffer	access:public
buffer::cursor_type_	buffer.h	/^  Lisp_Object cursor_type_;$/;"	m	struct:buffer	access:public
buffer::directory_	buffer.h	/^  Lisp_Object directory_;$/;"	m	struct:buffer	access:public
buffer::display_count_	buffer.h	/^  Lisp_Object display_count_;$/;"	m	struct:buffer	access:public
buffer::display_error_modiff	buffer.h	/^  EMACS_INT display_error_modiff;$/;"	m	struct:buffer	access:public
buffer::display_table_	buffer.h	/^  Lisp_Object display_table_;$/;"	m	struct:buffer	access:public
buffer::display_time_	buffer.h	/^  Lisp_Object display_time_;$/;"	m	struct:buffer	access:public
buffer::downcase_table_	buffer.h	/^  Lisp_Object downcase_table_;$/;"	m	struct:buffer	access:public
buffer::enable_multibyte_characters_	buffer.h	/^  Lisp_Object enable_multibyte_characters_;$/;"	m	struct:buffer	access:public
buffer::extra_line_spacing_	buffer.h	/^  Lisp_Object extra_line_spacing_;$/;"	m	struct:buffer	access:public
buffer::filename_	buffer.h	/^  Lisp_Object filename_;$/;"	m	struct:buffer	access:public
buffer::file_format_	buffer.h	/^  Lisp_Object file_format_;$/;"	m	struct:buffer	access:public
buffer::file_truename_	buffer.h	/^  Lisp_Object file_truename_;$/;"	m	struct:buffer	access:public
buffer::fill_column_	buffer.h	/^  Lisp_Object fill_column_;$/;"	m	struct:buffer	access:public
buffer::fringes_outside_margins_	buffer.h	/^  Lisp_Object fringes_outside_margins_;$/;"	m	struct:buffer	access:public
buffer::fringe_cursor_alist_	buffer.h	/^  Lisp_Object fringe_cursor_alist_;$/;"	m	struct:buffer	access:public
buffer::fringe_indicator_alist_	buffer.h	/^  Lisp_Object fringe_indicator_alist_;$/;"	m	struct:buffer	access:public
buffer::header	buffer.h	/^  struct vectorlike_header header;$/;"	m	struct:buffer	typeref:struct:buffer::vectorlike_header	access:public
buffer::header_line_format_	buffer.h	/^  Lisp_Object header_line_format_;$/;"	m	struct:buffer	access:public
buffer::horizontal_scroll_bar_type_	buffer.h	/^  Lisp_Object horizontal_scroll_bar_type_;$/;"	m	struct:buffer	access:public
buffer::indicate_buffer_boundaries_	buffer.h	/^  Lisp_Object indicate_buffer_boundaries_;$/;"	m	struct:buffer	access:public
buffer::indicate_empty_lines_	buffer.h	/^  Lisp_Object indicate_empty_lines_;$/;"	m	struct:buffer	access:public
buffer::indirections	buffer.h	/^  int indirections;$/;"	m	struct:buffer	access:public
buffer::invisibility_spec_	buffer.h	/^  Lisp_Object invisibility_spec_;$/;"	m	struct:buffer	access:public
buffer::keymap_	buffer.h	/^  Lisp_Object keymap_;$/;"	m	struct:buffer	access:public
buffer::last_selected_window_	buffer.h	/^  Lisp_Object last_selected_window_;$/;"	m	struct:buffer	access:public
buffer::last_window_start	buffer.h	/^  ptrdiff_t last_window_start;$/;"	m	struct:buffer	access:public
buffer::left_fringe_width_	buffer.h	/^  Lisp_Object left_fringe_width_;$/;"	m	struct:buffer	access:public
buffer::left_margin_	buffer.h	/^  Lisp_Object left_margin_;$/;"	m	struct:buffer	access:public
buffer::left_margin_cols_	buffer.h	/^  Lisp_Object left_margin_cols_;$/;"	m	struct:buffer	access:public
buffer::local_flags	buffer.h	/^  char local_flags[MAX_PER_BUFFER_VARS];$/;"	m	struct:buffer	access:public
buffer::local_var_alist_	buffer.h	/^  Lisp_Object local_var_alist_;$/;"	m	struct:buffer	access:public
buffer::major_mode_	buffer.h	/^  Lisp_Object major_mode_;$/;"	m	struct:buffer	access:public
buffer::mark_	buffer.h	/^  Lisp_Object mark_;$/;"	m	struct:buffer	access:public
buffer::mark_active_	buffer.h	/^  Lisp_Object mark_active_;$/;"	m	struct:buffer	access:public
buffer::minor_modes_	buffer.h	/^  Lisp_Object minor_modes_;$/;"	m	struct:buffer	access:public
buffer::mode_line_format_	buffer.h	/^  Lisp_Object mode_line_format_;$/;"	m	struct:buffer	access:public
buffer::mode_name_	buffer.h	/^  Lisp_Object mode_name_;$/;"	m	struct:buffer	access:public
buffer::modtime	buffer.h	/^  struct timespec modtime;$/;"	m	struct:buffer	typeref:struct:buffer::timespec	access:public
buffer::modtime_size	buffer.h	/^  off_t modtime_size;$/;"	m	struct:buffer	access:public
buffer::name_	buffer.h	/^  Lisp_Object name_;$/;"	m	struct:buffer	access:public
buffer::newline_cache	buffer.h	/^  struct region_cache *newline_cache;$/;"	m	struct:buffer	typeref:struct:buffer::region_cache	access:public
buffer::next	buffer.h	/^  struct buffer *next;$/;"	m	struct:buffer	typeref:struct:buffer::buffer	access:public
buffer::overlays_after	buffer.h	/^  struct Lisp_Overlay *overlays_after;$/;"	m	struct:buffer	typeref:struct:buffer::Lisp_Overlay	access:public
buffer::overlays_before	buffer.h	/^  struct Lisp_Overlay *overlays_before;$/;"	m	struct:buffer	typeref:struct:buffer::Lisp_Overlay	access:public
buffer::overlay_center	buffer.h	/^  ptrdiff_t overlay_center;$/;"	m	struct:buffer	access:public
buffer::overwrite_mode_	buffer.h	/^  Lisp_Object overwrite_mode_;$/;"	m	struct:buffer	access:public
buffer::own_text	buffer.h	/^  struct buffer_text own_text;$/;"	m	struct:buffer	typeref:struct:buffer::buffer_text	access:public
buffer::point_before_scroll_	buffer.h	/^  Lisp_Object point_before_scroll_;$/;"	m	struct:buffer	access:public
buffer::prevent_redisplay_optimizations_p	buffer.h	/^  bool_bf prevent_redisplay_optimizations_p : 1;$/;"	m	struct:buffer	access:public
buffer::pt	buffer.h	/^  ptrdiff_t pt;$/;"	m	struct:buffer	access:public
buffer::pt_byte	buffer.h	/^  ptrdiff_t pt_byte;$/;"	m	struct:buffer	access:public
buffer::pt_marker_	buffer.h	/^  Lisp_Object pt_marker_;$/;"	m	struct:buffer	access:public
buffer::read_only_	buffer.h	/^  Lisp_Object read_only_;$/;"	m	struct:buffer	access:public
buffer::right_fringe_width_	buffer.h	/^  Lisp_Object right_fringe_width_;$/;"	m	struct:buffer	access:public
buffer::right_margin_cols_	buffer.h	/^  Lisp_Object right_margin_cols_;$/;"	m	struct:buffer	access:public
buffer::save_length_	buffer.h	/^  Lisp_Object save_length_;$/;"	m	struct:buffer	access:public
buffer::scroll_bar_height_	buffer.h	/^  Lisp_Object scroll_bar_height_;$/;"	m	struct:buffer	access:public
buffer::scroll_bar_width_	buffer.h	/^  Lisp_Object scroll_bar_width_;$/;"	m	struct:buffer	access:public
buffer::scroll_down_aggressively_	buffer.h	/^  Lisp_Object scroll_down_aggressively_;$/;"	m	struct:buffer	access:public
buffer::scroll_up_aggressively_	buffer.h	/^  Lisp_Object scroll_up_aggressively_;$/;"	m	struct:buffer	access:public
buffer::selective_display_	buffer.h	/^  Lisp_Object selective_display_;$/;"	m	struct:buffer	access:public
buffer::selective_display_ellipses_	buffer.h	/^  Lisp_Object selective_display_ellipses_;$/;"	m	struct:buffer	access:public
buffer::syntax_table_	buffer.h	/^  Lisp_Object syntax_table_;$/;"	m	struct:buffer	access:public
buffer::tab_width_	buffer.h	/^  Lisp_Object tab_width_;$/;"	m	struct:buffer	access:public
buffer::text	buffer.h	/^  struct buffer_text *text;$/;"	m	struct:buffer	typeref:struct:buffer::buffer_text	access:public
buffer::truncate_lines_	buffer.h	/^  Lisp_Object truncate_lines_;$/;"	m	struct:buffer	access:public
buffer::undo_list_	buffer.h	/^  Lisp_Object undo_list_;$/;"	m	struct:buffer	access:public
buffer::upcase_table_	buffer.h	/^  Lisp_Object upcase_table_;$/;"	m	struct:buffer	access:public
buffer::vertical_scroll_bar_type_	buffer.h	/^  Lisp_Object vertical_scroll_bar_type_;$/;"	m	struct:buffer	access:public
buffer::width_run_cache	buffer.h	/^  struct region_cache *width_run_cache;$/;"	m	struct:buffer	typeref:struct:buffer::region_cache	access:public
buffer::width_table_	buffer.h	/^  Lisp_Object width_table_;$/;"	m	struct:buffer	access:public
buffer::window_count	buffer.h	/^  int window_count;$/;"	m	struct:buffer	access:public
buffer::word_wrap_	buffer.h	/^  Lisp_Object word_wrap_;$/;"	m	struct:buffer	access:public
buffer::zv	buffer.h	/^  ptrdiff_t zv;$/;"	m	struct:buffer	access:public
buffer::zv_byte	buffer.h	/^  ptrdiff_t zv_byte;$/;"	m	struct:buffer	access:public
buffer::zv_marker_	buffer.h	/^  Lisp_Object zv_marker_;$/;"	m	struct:buffer	access:public
buffered_input_event	keyboard.h	/^union buffered_input_event$/;"	u
buffered_input_event::EVENT_KIND_WIDTH	keyboard.h	/^  ENUM_BF (event_kind) kind : EVENT_KIND_WIDTH;$/;"	m	union:buffered_input_event	access:public
buffered_input_event::ie	keyboard.h	/^  struct input_event ie;$/;"	m	union:buffered_input_event	typeref:struct:buffered_input_event::input_event	access:public
buffered_input_event::sie	keyboard.h	/^  struct selection_input_event sie;$/;"	m	union:buffered_input_event	typeref:struct:buffered_input_event::selection_input_event	access:public
BUFFERP	buffer.h	/^BUFFERP (Lisp_Object a)$/;"	f	signature:(Lisp_Object a)
buffer_balance_intervals	intervals.c	/^buffer_balance_intervals (struct buffer *b)$/;"	f	file:	signature:(struct buffer *b)
buffer_before_last_command_or_undo	keyboard.c	/^struct buffer *buffer_before_last_command_or_undo;$/;"	v	typeref:struct:buffer
buffer_beg	region-cache.c	/^  ptrdiff_t buffer_beg, buffer_end;$/;"	m	struct:region_cache	file:	access:public
BUFFER_CEILING_OF	buffer.h	105;"	d
buffer_chars_equal	editfns.c	/^buffer_chars_equal (struct context *ctx,$/;"	f	file:	signature:(struct context *ctx, ptrdiff_t pos_a, ptrdiff_t pos_b)
buffer_chars_equal	editfns.c	/^static bool buffer_chars_equal (struct context *, OFFSET, OFFSET);$/;"	p	file:	signature:(struct context *, OFFSET, OFFSET)
BUFFER_CHECK_INDIRECTION	buffer.h	1048;"	d
buffer_display_table	disptab.h	/^extern struct Lisp_Char_Table *buffer_display_table (void);$/;"	p	signature:(void)
buffer_display_table	indent.c	/^buffer_display_table (void)$/;"	f	signature:(void)
buffer_end	region-cache.c	/^  ptrdiff_t buffer_beg, buffer_end;$/;"	m	struct:region_cache	file:	access:public
buffer_file_coding_system_	buffer.h	/^  Lisp_Object buffer_file_coding_system_;$/;"	m	struct:buffer	access:public
buffer_flipping_blocked_p	dispextern.h	/^extern bool buffer_flipping_blocked_p (void);$/;"	p	signature:(void)
buffer_flipping_blocked_p	xdisp.c	/^buffer_flipping_blocked_p (void)$/;"	f	signature:(void)
buffer_flipping_unblocked_hook	termhooks.h	/^  void (*buffer_flipping_unblocked_hook) (struct frame *);$/;"	m	struct:terminal	access:public
buffer_flip_blocked_depth	xdisp.c	/^static int buffer_flip_blocked_depth;$/;"	v	file:
BUFFER_FLOOR_OF	buffer.h	107;"	d
buffer_has_overlays	buffer.h	/^buffer_has_overlays (void)$/;"	f	signature:(void)
BUFFER_HIDDEN_P	buffer.h	1044;"	d
buffer_intervals	buffer.h	/^buffer_intervals (struct buffer *b)$/;"	f	signature:(struct buffer *b)
buffer_lisp_local_variables	buffer.c	/^buffer_lisp_local_variables (struct buffer *buf, bool clone)$/;"	f	file:	signature:(struct buffer *buf, bool clone)
buffer_lisp_local_variables	buffer.c	/^static Lisp_Object buffer_lisp_local_variables (struct buffer *, bool);$/;"	p	file:	signature:(struct buffer *, bool)
BUFFER_LISP_SIZE	buffer.h	1020;"	d
buffer_list	frame.h	/^  Lisp_Object buffer_list;$/;"	m	struct:frame	access:public
BUFFER_LIVE_P	buffer.h	1039;"	d
buffer_local_flags	buffer.c	/^struct buffer buffer_local_flags;$/;"	v	typeref:struct:buffer
buffer_local_value	buffer.c	/^buffer_local_value (Lisp_Object variable, Lisp_Object buffer)$/;"	f	signature:(Lisp_Object variable, Lisp_Object buffer)
buffer_local_value	buffer.h	/^extern Lisp_Object buffer_local_value (Lisp_Object, Lisp_Object);$/;"	p	signature:(Lisp_Object, Lisp_Object)
buffer_memory_full	alloc.c	/^buffer_memory_full (ptrdiff_t nbytes)$/;"	f	signature:(ptrdiff_t nbytes)
buffer_memory_full	lisp.h	/^extern _Noreturn void buffer_memory_full (ptrdiff_t);$/;"	p	signature:(ptrdiff_t)
BUFFER_OBJFWDP	lisp.h	/^BUFFER_OBJFWDP (union Lisp_Fwd *a)$/;"	f	signature:(union Lisp_Fwd *a)
buffer_or_name	window.c	/^     (Lisp_Object buffer_or_name, Lisp_Object all_frames)$/;"	v
buffer_or_name	window.c	/^  (register Lisp_Object window, Lisp_Object buffer_or_name, Lisp_Object keep_margins)$/;"	v
buffer_overflow	insdel.c	/^buffer_overflow (void)$/;"	f	signature:(void)
buffer_overflow	lisp.h	/^extern _Noreturn void buffer_overflow (void);$/;"	p	signature:(void)
buffer_permanent_local_flags	buffer.c	/^static char buffer_permanent_local_flags[MAX_PER_BUFFER_VARS];$/;"	v	file:
buffer_posn_from_coords	dispextern.h	/^extern Lisp_Object buffer_posn_from_coords (struct window *,$/;"	p	signature:(struct window *, int *, int *, struct display_pos *, Lisp_Object *, int *, int *, int *, int *)
buffer_posn_from_coords	dispnew.c	/^buffer_posn_from_coords (struct window *w, int *x, int *y, struct display_pos *pos, Lisp_Object *object, int *dx, int *dy, int *width, int *height)$/;"	f	signature:(struct window *w, int *x, int *y, struct display_pos *pos, Lisp_Object *object, int *dx, int *dy, int *width, int *height)
BUFFER_POS_REACHED_P	xdisp.c	8653;"	d	file:
BUFFER_POS_REACHED_P	xdisp.c	9189;"	d	file:
buffer_predicate	frame.h	/^  Lisp_Object buffer_predicate;$/;"	m	struct:frame	access:public
BUFFER_PVEC_INIT	buffer.h	1034;"	d
BUFFER_REST_SIZE	buffer.h	1026;"	d
BUFFER_SWITCH_EVENT	termhooks.h	/^  BUFFER_SWITCH_EVENT,		\/* A process filter has switched buffers.  *\/$/;"	e	enum:event_kind
buffer_text	buffer.h	/^struct buffer_text$/;"	s
buffer_text::beg	buffer.h	/^    unsigned char *beg;$/;"	m	struct:buffer_text	access:public
buffer_text::beg_unchanged	buffer.h	/^    ptrdiff_t beg_unchanged;$/;"	m	struct:buffer_text	access:public
buffer_text::chars_modiff	buffer.h	/^    EMACS_INT chars_modiff;	\/* This is modified with character change$/;"	m	struct:buffer_text	access:public
buffer_text::compact	buffer.h	/^    EMACS_INT compact;		\/* Set to modiff each time when compact_buffer$/;"	m	struct:buffer_text	access:public
buffer_text::end_unchanged	buffer.h	/^    ptrdiff_t end_unchanged;$/;"	m	struct:buffer_text	access:public
buffer_text::gap_size	buffer.h	/^    ptrdiff_t gap_size;		\/* Size of buffer's gap.  *\/$/;"	m	struct:buffer_text	access:public
buffer_text::gpt	buffer.h	/^    ptrdiff_t gpt;		\/* Char pos of gap in buffer.  *\/$/;"	m	struct:buffer_text	access:public
buffer_text::gpt_byte	buffer.h	/^    ptrdiff_t gpt_byte;		\/* Byte pos of gap in buffer.  *\/$/;"	m	struct:buffer_text	access:public
buffer_text::inhibit_shrinking	buffer.h	/^    bool_bf inhibit_shrinking : 1;$/;"	m	struct:buffer_text	access:public
buffer_text::intervals	buffer.h	/^    INTERVAL intervals;$/;"	m	struct:buffer_text	access:public
buffer_text::markers	buffer.h	/^    struct Lisp_Marker *markers;$/;"	m	struct:buffer_text	typeref:struct:buffer_text::Lisp_Marker	access:public
buffer_text::modiff	buffer.h	/^    EMACS_INT modiff;		\/* This counts buffer-modification events$/;"	m	struct:buffer_text	access:public
buffer_text::overlay_modiff	buffer.h	/^    EMACS_INT overlay_modiff;	\/* Counts modifications to overlays.  *\/$/;"	m	struct:buffer_text	access:public
buffer_text::overlay_unchanged_modified	buffer.h	/^    EMACS_INT overlay_unchanged_modified;$/;"	m	struct:buffer_text	access:public
buffer_text::redisplay	buffer.h	/^    bool_bf redisplay : 1;$/;"	m	struct:buffer_text	access:public
buffer_text::save_modiff	buffer.h	/^    EMACS_INT save_modiff;	\/* Previous value of modiff, as of last$/;"	m	struct:buffer_text	access:public
buffer_text::unchanged_modified	buffer.h	/^    EMACS_INT unchanged_modified;$/;"	m	struct:buffer_text	access:public
buffer_text::z	buffer.h	/^    ptrdiff_t z;		\/* Char pos of end of buffer.  *\/$/;"	m	struct:buffer_text	access:public
buffer_text::z_byte	buffer.h	/^    ptrdiff_t z_byte;		\/* Byte pos of end of buffer.  *\/$/;"	m	struct:buffer_text	access:public
buffer_window_count	buffer.h	/^buffer_window_count (struct buffer *b)$/;"	f	signature:(struct buffer *b)
bufpos	dispextern.h	/^  ptrdiff_t bufpos;		\/* buffer position of lstring, or 0 if N\/A *\/$/;"	m	struct:bidi_string_data	access:public
bufpos	indent.h	/^    ptrdiff_t bufpos;$/;"	m	struct:position	access:public
bufsize	termcap.c	/^int bufsize = 128;$/;"	v
BUFSIZE	termcap.c	36;"	d	file:
BUFSIZE	termcap.c	40;"	d	file:
BUF_AUTOSAVE_MODIFF	buffer.h	190;"	d
BUF_BEG	buffer.h	114;"	d
BUF_BEGV	buffer.h	121;"	d
BUF_BEGV_BYTE	buffer.h	126;"	d
BUF_BEG_ADDR	buffer.h	162;"	d
BUF_BEG_BYTE	buffer.h	115;"	d
BUF_BEG_UNCHANGED	buffer.h	203;"	d
buf_bytepos_to_charpos	lisp.h	/^extern ptrdiff_t buf_bytepos_to_charpos (struct buffer *, ptrdiff_t);$/;"	p	signature:(struct buffer *, ptrdiff_t)
buf_bytepos_to_charpos	marker.c	/^buf_bytepos_to_charpos (struct buffer *b, ptrdiff_t bytepos)$/;"	f	signature:(struct buffer *b, ptrdiff_t bytepos)
BUF_BYTES_MAX	buffer.h	317;"	d
BUF_BYTE_ADDRESS	buffer.h	388;"	d
buf_charpos_to_bytepos	lisp.h	/^extern ptrdiff_t buf_charpos_to_bytepos (struct buffer *, ptrdiff_t);$/;"	p	signature:(struct buffer *, ptrdiff_t)
buf_charpos_to_bytepos	marker.c	/^buf_charpos_to_bytepos (struct buffer *b, ptrdiff_t charpos)$/;"	f	signature:(struct buffer *b, ptrdiff_t charpos)
BUF_CHARS_MODIFF	buffer.h	180;"	d
BUF_CHAR_ADDRESS	buffer.h	395;"	d
BUF_COMPACT	buffer.h	193;"	d
BUF_COMPUTE_UNCHANGED	buffer.h	217;"	d
BUF_DEC_POS	character.h	542;"	d
BUF_END_UNCHANGED	buffer.h	204;"	d
BUF_FETCH_BYTE	buffer.h	426;"	d
BUF_FETCH_CHAR	buffer.h	410;"	d
BUF_FETCH_CHAR_AS_MULTIBYTE	buffer.h	419;"	d
BUF_FETCH_MULTIBYTE_CHAR	buffer.h	/^BUF_FETCH_MULTIBYTE_CHAR (struct buffer *buf, ptrdiff_t pos)$/;"	f	signature:(struct buffer *buf, ptrdiff_t pos)
BUF_GAP_END_ADDR	buffer.h	171;"	d
BUF_GAP_SIZE	buffer.h	174;"	d
BUF_GPT	buffer.h	154;"	d
BUF_GPT_ADDR	buffer.h	165;"	d
BUF_GPT_BYTE	buffer.h	155;"	d
BUF_INC_POS	character.h	532;"	d
buf_magnification	ccl.h	/^  int buf_magnification;	\/* Output buffer magnification.  How$/;"	m	struct:ccl_program	access:public
BUF_MARKERS	buffer.h	196;"	d
BUF_MODIFF	buffer.h	177;"	d
buf_next	w32.c	/^buf_next (int from)$/;"	f	file:	signature:(int from)
BUF_OVERLAY_MODIFF	buffer.h	186;"	d
BUF_OVERLAY_UNCHANGED_MODIFIED	buffer.h	201;"	d
buf_prev	w32.c	/^buf_prev (int from)$/;"	f	file:	signature:(int from)
BUF_PT	buffer.h	132;"	d
BUF_PTR_BYTE_POS	buffer.h	402;"	d
BUF_PT_BYTE	buffer.h	137;"	d
BUF_PUSH	regex.c	1613;"	d	file:
BUF_PUSH_2	regex.c	1621;"	d	file:
BUF_SAVE_MODIFF	buffer.h	183;"	d
BUF_TEMP_SET_PT	buffer.h	247;"	d
BUF_UNCHANGED_MODIFIED	buffer.h	198;"	d
BUF_Z	buffer.h	158;"	d
BUF_ZV	buffer.h	143;"	d
BUF_ZV_BYTE	buffer.h	148;"	d
BUF_Z_ADDR	buffer.h	168;"	d
BUF_Z_BYTE	buffer.h	159;"	d
build_annotations	fileio.c	/^build_annotations (Lisp_Object start, Lisp_Object end)$/;"	f	file:	signature:(Lisp_Object start, Lisp_Object end)
build_annotations	fileio.c	/^static Lisp_Object build_annotations (Lisp_Object, Lisp_Object);$/;"	p	file:
build_annotations_unwind	fileio.c	/^build_annotations_unwind (Lisp_Object arg)$/;"	f	file:	signature:(Lisp_Object arg)
BUILD_CHAR_GLYPH_STRINGS	xdisp.c	26148;"	d	file:
BUILD_COMPOSITE_GLYPH_STRING	xdisp.c	26175;"	d	file:
build_desired_tool_bar_string	xdisp.c	/^build_desired_tool_bar_string (struct frame *f)$/;"	f	file:	signature:(struct frame *f)
build_details	emacs.c	/^bool build_details;$/;"	v
BUILD_DETAILS	Makefile	/^BUILD_DETAILS = $/;"	m
build_frame_matrix	dispnew.c	/^build_frame_matrix (struct frame *f)$/;"	f	file:	signature:(struct frame *f)
build_frame_matrix_from_leaf_window	dispnew.c	/^build_frame_matrix_from_leaf_window (struct glyph_matrix *frame_matrix, struct window *w)$/;"	f	file:	signature:(struct glyph_matrix *frame_matrix, struct window *w)
build_frame_matrix_from_leaf_window	dispnew.c	/^static void build_frame_matrix_from_leaf_window (struct glyph_matrix *,$/;"	p	file:	signature:(struct glyph_matrix *, struct window *)
build_frame_matrix_from_window_tree	dispnew.c	/^build_frame_matrix_from_window_tree (struct glyph_matrix *matrix, struct window *w)$/;"	f	file:	signature:(struct glyph_matrix *matrix, struct window *w)
build_frame_matrix_from_window_tree	dispnew.c	/^static void build_frame_matrix_from_window_tree (struct glyph_matrix *,$/;"	p	file:	signature:(struct glyph_matrix *, struct window *)
BUILD_GLYPHLESS_GLYPH_STRING	xdisp.c	26232;"	d	file:
BUILD_GLYPH_STRINGS	xdisp.c	26317;"	d	file:
BUILD_GLYPH_STRINGS_1	xdisp.c	26259;"	d	file:
BUILD_GLYPH_STRINGS_2	xdisp.c	26298;"	d	file:
BUILD_GLYPH_STRINGS_XW	xdisp.c	26292;"	d	file:
BUILD_GSTRING_GLYPH_STRING	xdisp.c	26210;"	d	file:
BUILD_IMAGE_GLYPH_STRING	xdisp.c	26110;"	d	file:
build_load_history	lread.c	/^build_load_history (Lisp_Object filename, bool entire)$/;"	f	file:	signature:(Lisp_Object filename, bool entire)
build_marker	alloc.c	/^build_marker (struct buffer *buf, ptrdiff_t charpos, ptrdiff_t bytepos)$/;"	f	signature:(struct buffer *buf, ptrdiff_t charpos, ptrdiff_t bytepos)
build_marker	lisp.h	/^extern Lisp_Object build_marker (struct buffer *, ptrdiff_t, ptrdiff_t);$/;"	p	signature:(struct buffer *, ptrdiff_t, ptrdiff_t)
build_overlay	alloc.c	/^build_overlay (Lisp_Object start, Lisp_Object end, Lisp_Object plist)$/;"	f	signature:(Lisp_Object start, Lisp_Object end, Lisp_Object plist)
build_overlay	lisp.h	/^extern Lisp_Object build_overlay (Lisp_Object, Lisp_Object, Lisp_Object);$/;"	p	signature:(Lisp_Object, Lisp_Object, Lisp_Object)
build_pure_c_string	lisp.h	/^build_pure_c_string (const char *str)$/;"	f	signature:(const char *str)
build_region_list	unexmacosx.c	/^build_region_list (void)$/;"	f	file:	signature:(void)
BUILD_STRETCH_GLYPH_STRING	xdisp.c	26090;"	d	file:
build_string	lisp.h	/^build_string (const char *str)$/;"	f	signature:(const char *str)
build_style_table	font.c	/^build_style_table (const struct table_entry *entry, int nelement)$/;"	f	file:	signature:(const struct table_entry *entry, int nelement)
BUILD_STYLE_TABLE	font.c	5154;"	d	file:
build_unibyte_string	lisp.h	/^build_unibyte_string (const char *str)$/;"	f	signature:(const char *str)
BUILD_XWIDGET_GLYPH_STRING	xdisp.c	26123;"	d	file:
BUILD_XWIDGET_GLYPH_STRING	xdisp.c	26126;"	d	file:
builtin_lisp_symbol	lisp.h	/^builtin_lisp_symbol (int index)$/;"	f	signature:(int index)
buried_buffer_list	frame.h	/^  Lisp_Object buried_buffer_list;$/;"	m	struct:frame	access:public
bus	dbusbind.c	/^  (Lisp_Object bus, Lisp_Object private)$/;"	v
busy	gmalloc.c	/^      } busy;$/;"	m	union:__anon60	typeref:struct:__anon60::__anon61	file:	access:public
button_down_location	keyboard.c	/^static Lisp_Object button_down_location;$/;"	v	file:
button_down_time	keyboard.c	/^static Time button_down_time;$/;"	v	file:
button_names	w32menu.c	/^static char * button_names [] = {$/;"	v	file:
button_names	xmenu.c	/^static const char * button_names [] = {$/;"	v	file:
button_state	w32fns.c	/^static int button_state = 0;$/;"	v	file:
BVAR	buffer.h	501;"	d
bx	dispextern.h	/^  int bx, nx, by, ny;$/;"	m	struct:draw_fringe_bitmap_params	access:public
by	dispextern.h	/^  int bx, nx, by, ny;$/;"	m	struct:draw_fringe_bitmap_params	access:public
byte	editfns.c	/^  (Lisp_Object byte, Lisp_Object count, Lisp_Object inherit)$/;"	v
byte	unexelf.c	/^typedef unsigned char byte;$/;"	t	file:
BYTE8_STRING	character.h	197;"	d
BYTE8_TO_CHAR	character.h	92;"	d
bytecode_dest	lisp.h	/^  int bytecode_dest;$/;"	m	struct:handler	access:public
bytecode_top	lisp.h	/^  Lisp_Object *bytecode_top;$/;"	m	struct:handler	access:public
bytepos	dispextern.h	/^  ptrdiff_t bytepos;		\/* iterator's position in buffer\/string *\/$/;"	m	struct:bidi_it	access:public
bytepos	dispextern.h	/^  ptrdiff_t bytepos;$/;"	m	struct:text_pos	access:public
BYTEPOS	dispextern.h	187;"	d
bytepos	indent.h	/^    ptrdiff_t bytepos;$/;"	m	struct:position	access:public
bytepos	lisp.h	/^  ptrdiff_t bytepos;$/;"	m	struct:Lisp_Marker	access:public
bytes	buffer.c	/^  ptrdiff_t bytes;	\/* Total length of the strings in buf.  *\/$/;"	m	struct:sortstrlist	file:	access:public
bytes	image.c	/^  unsigned char *bytes;		\/* The data       *\/$/;"	m	struct:png_memory_storage	file:	access:public
bytes	image.c	/^  unsigned char *bytes;$/;"	m	struct:__anon84	file:	access:public
bytes	image.c	/^  unsigned char *bytes;$/;"	m	struct:__anon85	file:	access:public
bytestr	bytecode.c	/^  (Lisp_Object bytestr, Lisp_Object vector, Lisp_Object maxdepth)$/;"	v
BYTES_BY_CHAR_HEAD	character.h	242;"	d
BYTES_BY_CHAR_HEAD	regex.c	267;"	d	file:
bytes_free	gmalloc.c	/^    size_t bytes_free;	\/* Byte total of chunks in the free list. *\/$/;"	m	struct:mstats	file:	access:public
BYTES_PER_BITMAP_ROW	fringe.c	435;"	d	file:
bytes_per_second	sound.c	/^  u_int32_t bytes_per_second;$/;"	m	struct:wav_header	file:	access:public
bytes_total	gmalloc.c	/^    size_t bytes_total;	\/* Total size of the heap. *\/$/;"	m	struct:mstats	file:	access:public
bytes_used	gmalloc.c	/^    size_t bytes_used;	\/* Byte total of user-allocated chunks. *\/$/;"	m	struct:mstats	file:	access:public
BYTEWIDTH	regex.c	512;"	d	file:
byte_char_debug_check	marker.c	/^byte_char_debug_check (struct buffer *b, ptrdiff_t charpos, ptrdiff_t bytepos)$/;"	f	file:	signature:(struct buffer *b, ptrdiff_t charpos, ptrdiff_t bytepos)
byte_char_debug_check	marker.c	68;"	d	file:
BYTE_CODES	bytecode.c	/^    BYTE_CODES$/;"	e	enum:byte_code_op	file:
BYTE_CODES	bytecode.c	81;"	d	file:
byte_code_op	bytecode.c	/^enum byte_code_op$/;"	g	file:
BYTE_CODE_SAFE	bytecode.c	39;"	d	file:
BYTE_CODE_THREADED	bytecode.c	51;"	d	file:
byte_metering_on	globals.h	907;"	d
BYTE_POS_ADDR	buffer.h	332;"	d
BYTE_TO_CHAR	buffer.h	349;"	d
b_property	syntax.h	/^  ptrdiff_t b_property;			\/* First index where c_s_t is valid.  *\/$/;"	m	struct:gl_state_s	access:public
c	alloc.c	/^  char c;$/;"	m	union:__anon12	file:	access:public
c	alloc.c	/^  unsigned char c[(sizeof (struct Lisp_Symbol) + GCALIGNMENT - 1)$/;"	m	union:aligned_Lisp_Symbol	file:	access:public
c	alloc.c	/^  unsigned char c[(sizeof (union Lisp_Misc) + GCALIGNMENT - 1)$/;"	m	union:aligned_Lisp_Misc	file:	access:public
c	charset.c	/^    int c;$/;"	m	struct:charset_map_entries::__anon80	file:	access:public
c	dispextern.h	/^  int c, len;$/;"	m	struct:it	access:public
c	syntax.c	/^  (Lisp_Object c, Lisp_Object newentry, Lisp_Object syntax_table)$/;"	v
c	unexmacosx.c	/^    char c[8];$/;"	m	union:unexec_malloc_header::__anon77	file:	access:public
c1	editfns.c	/^  (register Lisp_Object c1, Lisp_Object c2)$/;"	v
cache	w32uniscribe.c	/^  SCRIPT_CACHE cache;$/;"	m	struct:uniscribe_font_info	file:	access:public
cached_buffer	marker.c	/^static struct buffer *cached_buffer;$/;"	v	typeref:struct:buffer	file:
cached_bytepos	marker.c	/^static ptrdiff_t cached_bytepos;$/;"	v	file:
cached_charpos	marker.c	/^static ptrdiff_t cached_charpos;$/;"	v	file:
CACHED_FONTSET_NAME	fontset.c	1096;"	d	file:
CACHED_FONTSET_REGEX	fontset.c	1097;"	d	file:
cached_font_ok	font.h	/^  bool (*cached_font_ok) (struct frame *f,$/;"	m	struct:font_driver	access:public
cached_metrics	w32font.h	/^  struct w32_metric_cache **cached_metrics;$/;"	m	struct:w32font_info	typeref:struct:w32font_info::w32_metric_cache	access:public
cached_modiff	marker.c	/^static EMACS_INT cached_modiff;$/;"	v	file:
cached_system_name	editfns.c	/^static Lisp_Object cached_system_name;$/;"	v	file:
CACHE_BLOCKSIZE	w32font.h	64;"	d
cache_face	xfaces.c	/^cache_face (struct face_cache *c, struct face *face, unsigned int hash)$/;"	f	file:	signature:(struct face_cache *c, struct face *face, unsigned int hash)
cache_image	image.c	/^cache_image (struct frame *f, struct image *img)$/;"	f	file:	signature:(struct frame *f, struct image *img)
cache_image	image.c	/^static void cache_image (struct frame *f, struct image *img);$/;"	p	file:	signature:(struct frame *f, struct image *img)
CACHE_IMAGE_TYPE	image.c	540;"	d	file:
CACHE_IMAGE_TYPE	image.c	543;"	d	file:
cache_len	region-cache.c	/^  ptrdiff_t cache_len;$/;"	m	struct:region_cache	file:	access:public
cache_long_scans_	buffer.h	/^  Lisp_Object cache_long_scans_;$/;"	m	struct:buffer	access:public
cache_system_info	w32common.h	/^extern void cache_system_info (void);$/;"	p	signature:(void)
cache_system_info	w32fns.c	/^cache_system_info (void)$/;"	f	signature:(void)
CAIRO_CFLAGS	Makefile	/^CAIRO_CFLAGS= $/;"	m
CAIRO_LIBS	Makefile	/^CAIRO_LIBS= $/;"	m
calccost	cm.c	/^calccost (struct tty_display_info *tty,$/;"	f	file:	signature:(struct tty_display_info *tty, int srcy, int srcx, int dsty, int dstx, int doit)
calculate_checksum	unexhp9k800.c	/^calculate_checksum (struct header *hdr)$/;"	f	file:	signature:(struct header *hdr)
calculate_costs	dispextern.h	/^extern void calculate_costs (struct frame *);$/;"	p	signature:(struct frame *)
calculate_costs	term.c	/^calculate_costs (struct frame *frame)$/;"	f	signature:(struct frame *frame)
calculate_direct_scrolling	scroll.c	/^calculate_direct_scrolling (struct frame *frame,$/;"	f	file:	signature:(struct frame *frame, struct matrix_elt *matrix, int window_size, int lines_below, int *draw_cost, int *old_draw_cost, unsigned *old_hash, unsigned *new_hash, int free_at_end)
calculate_glyph_code_table	terminal.c	/^calculate_glyph_code_table (struct terminal *t)$/;"	f	file:	signature:(struct terminal *t)
calculate_ins_del_char_costs	term.c	/^calculate_ins_del_char_costs (struct frame *f)$/;"	f	file:	signature:(struct frame *f)
calculate_scrolling	scroll.c	/^calculate_scrolling (struct frame *frame,$/;"	f	file:	signature:(struct frame *frame, struct matrix_elt *matrix, int window_size, int lines_below, int *draw_cost, unsigned *old_hash, unsigned *new_hash, int free_at_end)
calc_line_height_property	xdisp.c	/^calc_line_height_property (struct it *it, Lisp_Object val, struct font *font,$/;"	f	file:	signature:(struct it *it, Lisp_Object val, struct font *font, int boff, bool override)
calc_line_height_property	xdisp.c	/^static Lisp_Object calc_line_height_property (struct it *, Lisp_Object,$/;"	p	file:	signature:(struct it *, Lisp_Object, struct font *, int, bool)
calc_pixel_width_or_height	xdisp.c	/^calc_pixel_width_or_height (double *res, struct it *it, Lisp_Object prop,$/;"	f	file:	signature:(double *res, struct it *it, Lisp_Object prop, struct font *font, bool width_p, int *align_to)
call0	eval.c	/^call0 (Lisp_Object fn)$/;"	f	signature:(Lisp_Object fn)
call0	lisp.h	/^extern Lisp_Object call0 (Lisp_Object);$/;"	p	signature:(Lisp_Object)
call1	eval.c	/^call1 (Lisp_Object fn, Lisp_Object arg1)$/;"	f	signature:(Lisp_Object fn, Lisp_Object arg1)
call1	lisp.h	/^extern Lisp_Object call1 (Lisp_Object, Lisp_Object);$/;"	p	signature:(Lisp_Object, Lisp_Object)
call2	eval.c	/^call2 (Lisp_Object fn, Lisp_Object arg1, Lisp_Object arg2)$/;"	f	signature:(Lisp_Object fn, Lisp_Object arg1, Lisp_Object arg2)
call2	lisp.h	/^extern Lisp_Object call2 (Lisp_Object, Lisp_Object, Lisp_Object);$/;"	p	signature:(Lisp_Object, Lisp_Object, Lisp_Object)
call3	eval.c	/^call3 (Lisp_Object fn, Lisp_Object arg1, Lisp_Object arg2, Lisp_Object arg3)$/;"	f	signature:(Lisp_Object fn, Lisp_Object arg1, Lisp_Object arg2, Lisp_Object arg3)
call3	lisp.h	/^extern Lisp_Object call3 (Lisp_Object, Lisp_Object, Lisp_Object, Lisp_Object);$/;"	p	signature:(Lisp_Object, Lisp_Object, Lisp_Object, Lisp_Object)
call4	eval.c	/^call4 (Lisp_Object fn, Lisp_Object arg1, Lisp_Object arg2, Lisp_Object arg3,$/;"	f	signature:(Lisp_Object fn, Lisp_Object arg1, Lisp_Object arg2, Lisp_Object arg3, Lisp_Object arg4)
call4	lisp.h	/^extern Lisp_Object call4 (Lisp_Object, Lisp_Object, Lisp_Object, Lisp_Object, Lisp_Object);$/;"	p	signature:(Lisp_Object, Lisp_Object, Lisp_Object, Lisp_Object, Lisp_Object)
call5	eval.c	/^call5 (Lisp_Object fn, Lisp_Object arg1, Lisp_Object arg2, Lisp_Object arg3,$/;"	f	signature:(Lisp_Object fn, Lisp_Object arg1, Lisp_Object arg2, Lisp_Object arg3, Lisp_Object arg4, Lisp_Object arg5)
call5	lisp.h	/^extern Lisp_Object call5 (Lisp_Object, Lisp_Object, Lisp_Object, Lisp_Object, Lisp_Object, Lisp_Object);$/;"	p	signature:(Lisp_Object, Lisp_Object, Lisp_Object, Lisp_Object, Lisp_Object, Lisp_Object)
call6	eval.c	/^call6 (Lisp_Object fn, Lisp_Object arg1, Lisp_Object arg2, Lisp_Object arg3,$/;"	f	signature:(Lisp_Object fn, Lisp_Object arg1, Lisp_Object arg2, Lisp_Object arg3, Lisp_Object arg4, Lisp_Object arg5, Lisp_Object arg6)
call6	lisp.h	/^extern Lisp_Object call6 (Lisp_Object, Lisp_Object, Lisp_Object, Lisp_Object, Lisp_Object, Lisp_Object, Lisp_Object);$/;"	p	signature:(Lisp_Object, Lisp_Object, Lisp_Object, Lisp_Object, Lisp_Object, Lisp_Object, Lisp_Object)
call7	eval.c	/^call7 (Lisp_Object fn, Lisp_Object arg1, Lisp_Object arg2, Lisp_Object arg3,$/;"	f	signature:(Lisp_Object fn, Lisp_Object arg1, Lisp_Object arg2, Lisp_Object arg3, Lisp_Object arg4, Lisp_Object arg5, Lisp_Object arg6, Lisp_Object arg7)
call7	lisp.h	/^extern Lisp_Object call7 (Lisp_Object, Lisp_Object, Lisp_Object, Lisp_Object, Lisp_Object, Lisp_Object, Lisp_Object, Lisp_Object);$/;"	p	signature:(Lisp_Object, Lisp_Object, Lisp_Object, Lisp_Object, Lisp_Object, Lisp_Object, Lisp_Object, Lisp_Object)
caller_thread	w32proc.c	/^  HANDLE caller_thread;$/;"	m	struct:itimer_data	file:	access:public
callint_argfuns	callint.c	/^static const char *callint_argfuns[]$/;"	v	file:
callint_message	callint.c	/^static Lisp_Object callint_message;$/;"	v	file:
CALLMANY	lisp.h	2911;"	d
CALLN	lisp.h	2917;"	d
calloc	conf_post.h	115;"	d
calloc	gmalloc.c	/^calloc (size_t nmemb, size_t size)$/;"	f	signature:(size_t nmemb, size_t size)
calloc	gmalloc.c	/^extern void *calloc (size_t nmemb, size_t size);$/;"	p	file:	signature:(size_t nmemb, size_t size)
calloc	gmalloc.c	1693;"	d	file:
calloc	gmalloc.c	67;"	d	file:
calloc	gmalloc.c	72;"	d	file:
CALLPROC_FDS	callproc.c	/^    CALLPROC_FDS$/;"	e	enum:__anon42	file:
CALLPROC_PIPEREAD	callproc.c	/^    CALLPROC_PIPEREAD,$/;"	e	enum:__anon42	file:
CALLPROC_STDERR	callproc.c	/^    CALLPROC_STDOUT, CALLPROC_STDERR,$/;"	e	enum:__anon42	file:
CALLPROC_STDOUT	callproc.c	/^    CALLPROC_STDOUT, CALLPROC_STDERR,$/;"	e	enum:__anon42	file:
call_data	gtkutil.h	/^  gpointer	call_data;$/;"	m	struct:xg_menu_item_cb_data_	access:public
call_debugger	eval.c	/^call_debugger (Lisp_Object arg)$/;"	f	signature:(Lisp_Object arg)
call_debugger	lisp.h	/^extern Lisp_Object call_debugger (Lisp_Object arg);$/;"	p	signature:(Lisp_Object arg)
call_mod_hooks	textprop.c	/^call_mod_hooks (Lisp_Object list, Lisp_Object start, Lisp_Object end)$/;"	f	file:	signature:(Lisp_Object list, Lisp_Object start, Lisp_Object end)
call_overlay_mod_hooks	buffer.c	/^call_overlay_mod_hooks (Lisp_Object list, Lisp_Object overlay, bool after,$/;"	f	file:	signature:(Lisp_Object list, Lisp_Object overlay, bool after, Lisp_Object arg1, Lisp_Object arg2, Lisp_Object arg3)
call_overlay_mod_hooks	buffer.c	/^static void call_overlay_mod_hooks (Lisp_Object list, Lisp_Object overlay,$/;"	p	file:	signature:(Lisp_Object list, Lisp_Object overlay, bool after, Lisp_Object arg1, Lisp_Object arg2, Lisp_Object arg3)
call_process	callproc.c	/^call_process (ptrdiff_t nargs, Lisp_Object *args, int filefd,$/;"	f	file:	signature:(ptrdiff_t nargs, Lisp_Object *args, int filefd, ptrdiff_t tempfile_index)
call_process	callproc.c	/^static Lisp_Object call_process (ptrdiff_t, Lisp_Object *, int, ptrdiff_t);$/;"	p	file:	signature:(ptrdiff_t, Lisp_Object *, int, ptrdiff_t)
call_process_cleanup	callproc.c	/^call_process_cleanup (Lisp_Object buffer)$/;"	f	file:	signature:(Lisp_Object buffer)
call_process_kill	callproc.c	/^call_process_kill (void *ptr)$/;"	f	file:	signature:(void *ptr)
cancel_all_deferred_msgs	w32fns.c	/^cancel_all_deferred_msgs (void)$/;"	f	file:	signature:(void)
cancel_atimer	atimer.c	/^cancel_atimer (struct atimer *timer)$/;"	f	signature:(struct atimer *timer)
cancel_atimer	atimer.h	/^void cancel_atimer (struct atimer *);$/;"	p	signature:(struct atimer *)
cancel_echoing	keyboard.c	/^cancel_echoing (void)$/;"	f	signature:(void)
cancel_echoing	lisp.h	/^extern void cancel_echoing (void);$/;"	p	signature:(void)
cancel_hourglass	dispextern.h	/^extern void cancel_hourglass (void);$/;"	p	signature:(void)
cancel_hourglass	xdisp.c	/^cancel_hourglass (void)$/;"	f	signature:(void)
cancel_mouse_face	dispextern.h	/^extern void cancel_mouse_face (struct frame *);$/;"	p	signature:(struct frame *)
cancel_mouse_face	xdisp.c	/^cancel_mouse_face (struct frame *f)$/;"	f	signature:(struct frame *f)
candidate_buffer	buffer.c	/^candidate_buffer (Lisp_Object b, Lisp_Object buffer)$/;"	f	file:	signature:(Lisp_Object b, Lisp_Object buffer)
candidate_frame	frame.c	/^candidate_frame (Lisp_Object candidate, Lisp_Object frame, Lisp_Object minibuf)$/;"	f	file:	signature:(Lisp_Object candidate, Lisp_Object frame, Lisp_Object minibuf)
candidate_window_p	window.c	/^candidate_window_p (Lisp_Object window, Lisp_Object owindow,$/;"	f	file:	signature:(Lisp_Object window, Lisp_Object owindow, Lisp_Object minibuf, Lisp_Object all_frames)
CANNOT_DUMP	Makefile	/^CANNOT_DUMP=no$/;"	m
cannot_suspend	globals.h	909;"	d
CANONICAL_EQU	bidi.c	2504;"	d	file:
can_be_null	regex.h	/^  unsigned can_be_null : 1;$/;"	m	struct:re_pattern_buffer	access:public
can_return_switch_frame	keyboard.c	/^  (Lisp_Object prompt, Lisp_Object continue_echo, Lisp_Object dont_downcase_last, Lisp_Object can_return_switch_frame, Lisp_Object cmd_loop)$/;"	v
can_x_set_window_size	frame.h	/^  bool_bf can_x_set_window_size : 1;$/;"	m	struct:frame	access:public
cap	term.c	/^  const char *cap, *name;$/;"	m	struct:fkey_table	file:	access:public
CaptureStackBackTrace_proc	w32fns.c	/^typedef USHORT (WINAPI * CaptureStackBackTrace_proc) (ULONG, ULONG, PVOID *,$/;"	t	file:
car	alloc.c	/^  (Lisp_Object car, Lisp_Object cdr)$/;"	v
car	lisp.h	/^    Lisp_Object car;$/;"	m	struct:Lisp_Cons	access:public
CAR	lisp.h	/^CAR (Lisp_Object c)$/;"	f	signature:(Lisp_Object c)
car	xrdb.c	597;"	d	file:
careadlinkat	w32.c	/^careadlinkat (int fd, char const *filename,$/;"	f	signature:(int fd, char const *filename, char *buffer, size_t buffer_size, struct allocator const *alloc, ssize_t (*preadlinkat) (int, char const *, char *, size_t))
CARGO_BUILD	Makefile	/^CARGO_BUILD=cargo build$/;"	m
CARGO_BUILD_DIR	Makefile	/^CARGO_BUILD_DIR=debug$/;"	m
CARGO_BUILD_DIR	Makefile	/^CARGO_BUILD_DIR=release$/;"	m
CARGO_CLEAN	Makefile	/^CARGO_CLEAN=cargo clean$/;"	m
CARGO_FLAGS	Makefile	/^CARGO_FLAGS = $/;"	m
CARGO_FLAGS	Makefile	/^CARGO_FLAGS=$/;"	m
cargo_manifest	Makefile	/^cargo_manifest=$(rust_srcdir)\/Cargo.toml$/;"	m
CARGO_TEST	Makefile	/^CARGO_TEST=cargo test$/;"	m
carryover	coding.h	/^  int carryover[4 		\/* annotation header *\/$/;"	m	struct:composition_status	access:public
carryover	coding.h	/^  unsigned char carryover[64];$/;"	m	struct:coding_system	access:public
carryover_bytes	coding.h	/^  int carryover_bytes;$/;"	m	struct:coding_system	access:public
CAR_SAFE	lisp.h	/^CAR_SAFE (Lisp_Object c)$/;"	f	signature:(Lisp_Object c)
CASE	bytecode.c	423;"	d	file:
CASE_ABORT	bytecode.c	439;"	d	file:
case_action	casefiddle.c	/^enum case_action {CASE_UP, CASE_DOWN, CASE_CAPITALIZE, CASE_CAPITALIZE_UP};$/;"	g	file:
case_canon_table_	buffer.h	/^  Lisp_Object case_canon_table_;$/;"	m	struct:buffer	access:public
CASE_CAPITALIZE	casefiddle.c	/^enum case_action {CASE_UP, CASE_DOWN, CASE_CAPITALIZE, CASE_CAPITALIZE_UP};$/;"	e	enum:case_action	file:
CASE_CAPITALIZE_UP	casefiddle.c	/^enum case_action {CASE_UP, CASE_DOWN, CASE_CAPITALIZE, CASE_CAPITALIZE_UP};$/;"	e	enum:case_action	file:
case_character	casefiddle.c	/^case_character (struct casing_str_buf *buf, struct casing_context *ctx,$/;"	f	file:	signature:(struct casing_str_buf *buf, struct casing_context *ctx, int ch, const unsigned char *next)
case_character_impl	casefiddle.c	/^case_character_impl (struct casing_str_buf *buf,$/;"	f	file:	signature:(struct casing_str_buf *buf, struct casing_context *ctx, int ch)
CASE_DEFAULT	bytecode.c	437;"	d	file:
CASE_DOWN	casefiddle.c	/^enum case_action {CASE_UP, CASE_DOWN, CASE_CAPITALIZE, CASE_CAPITALIZE_UP};$/;"	e	enum:case_action	file:
case_eqv_table_	buffer.h	/^  Lisp_Object case_eqv_table_;$/;"	m	struct:buffer	access:public
case_fold_search_	buffer.h	/^  Lisp_Object case_fold_search_;$/;"	m	struct:buffer	access:public
case_Lisp_Int	lisp.h	394;"	d
case_sensitive	font.h	/^  bool case_sensitive;$/;"	m	struct:font_driver	access:public
case_single_character	casefiddle.c	/^case_single_character (struct casing_context *ctx, int ch)$/;"	f	file:	signature:(struct casing_context *ctx, int ch)
CASE_UP	casefiddle.c	/^enum case_action {CASE_UP, CASE_DOWN, CASE_CAPITALIZE, CASE_CAPITALIZE_UP};$/;"	e	enum:case_action	file:
casify_object	casefiddle.c	/^casify_object (enum case_action flag, Lisp_Object obj)$/;"	f	file:	signature:(enum case_action flag, Lisp_Object obj)
casify_region	casefiddle.c	/^casify_region (enum case_action flag, Lisp_Object b, Lisp_Object e)$/;"	f	file:	signature:(enum case_action flag, Lisp_Object b, Lisp_Object e)
casify_word	casefiddle.c	/^casify_word (enum case_action flag, Lisp_Object arg)$/;"	f	file:	signature:(enum case_action flag, Lisp_Object arg)
casing_context	casefiddle.c	/^struct casing_context$/;"	s	file:
casing_context::flag	casefiddle.c	/^  enum case_action flag;$/;"	m	struct:casing_context	typeref:enum:casing_context::case_action	file:	access:public
casing_context::inbuffer	casefiddle.c	/^  bool inbuffer;$/;"	m	struct:casing_context	file:	access:public
casing_context::inword	casefiddle.c	/^  bool inword;$/;"	m	struct:casing_context	file:	access:public
casing_context::specialcase_char_tables	casefiddle.c	/^  Lisp_Object specialcase_char_tables[3];$/;"	m	struct:casing_context	file:	access:public
casing_context::titlecase_char_table	casefiddle.c	/^  Lisp_Object titlecase_char_table;$/;"	m	struct:casing_context	file:	access:public
casing_str_buf	casefiddle.c	/^struct casing_str_buf$/;"	s	file:
casing_str_buf::data	casefiddle.c	/^  unsigned char data[max (6, MAX_MULTIBYTE_LENGTH)];$/;"	m	struct:casing_str_buf	file:	access:public
casing_str_buf::len_bytes	casefiddle.c	/^  unsigned char len_bytes;$/;"	m	struct:casing_str_buf	file:	access:public
casing_str_buf::len_chars	casefiddle.c	/^  unsigned char len_chars;$/;"	m	struct:casing_str_buf	file:	access:public
CATCHER	lisp.h	/^enum handlertype { CATCHER, CONDITION_CASE, CATCHER_ALL };$/;"	e	enum:handlertype
CATCHER_ALL	lisp.h	/^enum handlertype { CATCHER, CONDITION_CASE, CATCHER_ALL };$/;"	e	enum:handlertype
catchlist	thread.h	69;"	d
catch_child_signal	process.c	/^catch_child_signal (void)$/;"	f	signature:(void)
catch_child_signal	process.h	/^extern void catch_child_signal (void);$/;"	p	signature:(void)
category	category.c	/^  (Lisp_Object category, Lisp_Object docstring, Lisp_Object table)$/;"	v
category	category.c	/^  (Lisp_Object category, Lisp_Object table)$/;"	v
category	category.c	/^  (Lisp_Object character, Lisp_Object category, Lisp_Object table, Lisp_Object reset)$/;"	v
CATEGORYP	category.h	62;"	d
categoryspec	regex.c	/^  categoryspec,$/;"	e	enum:__anon144	file:
CATEGORY_DOCSTRING	category.h	100;"	d
CATEGORY_MASK_ANY	coding.c	534;"	d	file:
CATEGORY_MASK_BIG5	coding.c	527;"	d	file:
CATEGORY_MASK_CCL	coding.c	528;"	d	file:
CATEGORY_MASK_CHARSET	coding.c	525;"	d	file:
CATEGORY_MASK_EMACS_MULE	coding.c	529;"	d	file:
CATEGORY_MASK_ISO	coding.c	571;"	d	file:
CATEGORY_MASK_ISO_7	coding.c	511;"	d	file:
CATEGORY_MASK_ISO_7BIT	coding.c	556;"	d	file:
CATEGORY_MASK_ISO_7_ELSE	coding.c	515;"	d	file:
CATEGORY_MASK_ISO_7_TIGHT	coding.c	512;"	d	file:
CATEGORY_MASK_ISO_8BIT	coding.c	559;"	d	file:
CATEGORY_MASK_ISO_8_1	coding.c	513;"	d	file:
CATEGORY_MASK_ISO_8_2	coding.c	514;"	d	file:
CATEGORY_MASK_ISO_8_ELSE	coding.c	516;"	d	file:
CATEGORY_MASK_ISO_ELSE	coding.c	562;"	d	file:
CATEGORY_MASK_ISO_ESCAPE	coding.c	565;"	d	file:
CATEGORY_MASK_RAW_TEXT	coding.c	530;"	d	file:
CATEGORY_MASK_SJIS	coding.c	526;"	d	file:
CATEGORY_MASK_UTF_16	coding.c	576;"	d	file:
CATEGORY_MASK_UTF_16_AUTO	coding.c	520;"	d	file:
CATEGORY_MASK_UTF_16_BE	coding.c	521;"	d	file:
CATEGORY_MASK_UTF_16_BE_NOSIG	coding.c	523;"	d	file:
CATEGORY_MASK_UTF_16_LE	coding.c	522;"	d	file:
CATEGORY_MASK_UTF_16_LE_NOSIG	coding.c	524;"	d	file:
CATEGORY_MASK_UTF_8	coding.c	583;"	d	file:
CATEGORY_MASK_UTF_8_AUTO	coding.c	517;"	d	file:
CATEGORY_MASK_UTF_8_NOSIG	coding.c	518;"	d	file:
CATEGORY_MASK_UTF_8_SIG	coding.c	519;"	d	file:
CATEGORY_MEMBER	category.h	/^CATEGORY_MEMBER (EMACS_INT category, Lisp_Object category_set)$/;"	f	signature:(EMACS_INT category, Lisp_Object category_set)
CATEGORY_SET	category.h	77;"	d
CATEGORY_SET_P	category.h	67;"	d
category_table_	buffer.h	/^  Lisp_Object category_table_;$/;"	m	struct:buffer	access:public
category_table_version	category.c	/^static int category_table_version;$/;"	v	file:
CATEGORY_TABLE_VERSION	category.h	109;"	d
cb	w32.c	/^  DWORD  cb;$/;"	m	struct:_PROCESS_MEMORY_COUNTERS_EX	file:	access:public
cbAuxOffset	unexelf.c	/^	long cbAuxOffset;$/;"	m	struct:__anon123	file:	access:public
cbDnOffset	unexelf.c	/^	long cbDnOffset;$/;"	m	struct:__anon123	file:	access:public
cbExtOffset	unexelf.c	/^	long cbExtOffset;$/;"	m	struct:__anon123	file:	access:public
cbFdOffset	unexelf.c	/^	long cbFdOffset;$/;"	m	struct:__anon123	file:	access:public
cbHDRR	unexelf.c	113;"	d	file:
cbLine	unexelf.c	/^	long cbLine;$/;"	m	struct:__anon123	file:	access:public
cbLineOffset	unexelf.c	/^	long cbLineOffset;$/;"	m	struct:__anon123	file:	access:public
cbOptOffset	unexelf.c	/^	long cbOptOffset;$/;"	m	struct:__anon123	file:	access:public
cbPdOffset	unexelf.c	/^	long cbPdOffset;$/;"	m	struct:__anon123	file:	access:public
cbRfdOffset	unexelf.c	/^	long cbRfdOffset;$/;"	m	struct:__anon123	file:	access:public
cbSize	w32fns.c	/^    DWORD   cbSize;$/;"	m	struct:MONITOR_INFO	file:	access:public
cbSize	w32fns.c	/^    DWORD   cbSize;$/;"	m	struct:MONITOR_INFO_EX	file:	access:public
cbSize	w32fns.c	/^  DWORD cbSize;$/;"	m	struct:MY_NOTIFYICONDATAW	file:	access:public
cbSize	w32fns.c	/^  DWORD cbSize;$/;"	m	struct:__anon73	file:	access:public
cbSize	w32term.h	/^  DWORD cbSize;$/;"	m	struct:tagTRACKMOUSEEVENT	access:public
cbSsExtOffset	unexelf.c	/^	long cbSsExtOffset;$/;"	m	struct:__anon123	file:	access:public
cbSsOffset	unexelf.c	/^	long cbSsOffset;$/;"	m	struct:__anon123	file:	access:public
cbSymOffset	unexelf.c	/^	long cbSymOffset;$/;"	m	struct:__anon123	file:	access:public
cbThis	w32term.c	/^  DWORD cbThis;$/;"	m	struct:tagGLYPHSET	file:	access:public
CC	Makefile	/^CC = gcc$/;"	m
CCHDEVICENAME	w32fns.c	142;"	d	file:
ccl	ccl.h	/^  struct ccl_program ccl;$/;"	m	struct:ccl_spec	typeref:struct:ccl_spec::ccl_program	access:public
ccl	coding.h	/^      struct ccl_spec *ccl;	\/* Defined in ccl.h.  *\/$/;"	m	union:coding_system::__anon152	typeref:struct:coding_system::__anon152::ccl_spec	access:public
CCL_AND	ccl.c	666;"	d	file:
ccl_backtrace_idx	ccl.c	/^int ccl_backtrace_idx;$/;"	v
ccl_backtrace_table	ccl.c	/^int ccl_backtrace_table[CCL_DEBUG_BACKTRACE_LEN];$/;"	v
CCL_Branch	ccl.c	218;"	d	file:
CCL_Call	ccl.c	283;"	d	file:
CCL_CALL_FOR_MAP_INSTRUCTION	ccl.c	611;"	d	file:
CCL_CODE_MAX	ccl.c	85;"	d	file:
CCL_CODE_MIN	ccl.c	86;"	d	file:
CCL_DEBUG_BACKTRACE_LEN	ccl.c	836;"	d	file:
ccl_debug_hook	ccl.c	/^ccl_debug_hook (int ic)$/;"	f	signature:(int ic)
CCL_DECODE_CHAR	ccl.c	805;"	d	file:
CCL_DECODE_SJIS	ccl.c	681;"	d	file:
CCL_DIV	ccl.c	664;"	d	file:
CCL_DIVMOD	ccl.c	673;"	d	file:
ccl_driver	ccl.c	/^ccl_driver (struct ccl_program *ccl, int *source, int *destination, int src_size, int dst_size, Lisp_Object charset_list)$/;"	f	signature:(struct ccl_program *ccl, int *source, int *destination, int src_size, int dst_size, Lisp_Object charset_list)
ccl_driver	ccl.h	/^extern void ccl_driver (struct ccl_program *, int *, int *, int, int,$/;"	p	signature:(struct ccl_program *, int *, int *, int, int, Lisp_Object)
CCL_ENCODE_CHAR	ccl.c	813;"	d	file:
CCL_ENCODE_SJIS	ccl.c	683;"	d	file:
CCL_End	ccl.c	321;"	d	file:
CCL_EQ	ccl.c	676;"	d	file:
CCL_EXECUTE_BUF_SIZE	ccl.c	2042;"	d	file:
CCL_ExprSelfConst	ccl.c	330;"	d	file:
CCL_ExprSelfReg	ccl.c	337;"	d	file:
CCL_Extension	ccl.c	414;"	d	file:
CCL_GE	ccl.c	678;"	d	file:
ccl_get_compiled_code	ccl.c	/^ccl_get_compiled_code (Lisp_Object ccl_prog, ptrdiff_t *idx)$/;"	f	file:	signature:(Lisp_Object ccl_prog, ptrdiff_t *idx)
CCL_GT	ccl.c	675;"	d	file:
CCL_HEADER_BUF_MAG	ccl.c	62;"	d	file:
CCL_HEADER_EOF	ccl.c	63;"	d	file:
CCL_HEADER_MAIN	ccl.c	64;"	d	file:
CCL_INVALID_CMD	ccl.c	711;"	d	file:
CCL_INVALID_CMD	ccl.c	721;"	d	file:
CCL_IterateMultipleMap	ccl.c	474;"	d	file:
CCL_Jump	ccl.c	125;"	d	file:
CCL_JumpCond	ccl.c	133;"	d	file:
CCL_JumpCondExprConst	ccl.c	360;"	d	file:
CCL_JumpCondExprReg	ccl.c	373;"	d	file:
CCL_LE	ccl.c	677;"	d	file:
CCL_LookupCharConstTbl	ccl.c	654;"	d	file:
CCL_LookupIntConstTbl	ccl.c	648;"	d	file:
CCL_LS	ccl.c	674;"	d	file:
CCL_LSH	ccl.c	669;"	d	file:
CCL_LSH8	ccl.c	671;"	d	file:
CCL_MapMultiple	ccl.c	565;"	d	file:
CCL_MapSingle	ccl.c	637;"	d	file:
CCL_MINUS	ccl.c	662;"	d	file:
CCL_MOD	ccl.c	665;"	d	file:
CCL_MUL	ccl.c	663;"	d	file:
CCL_NE	ccl.c	679;"	d	file:
CCL_OR	ccl.c	667;"	d	file:
CCL_PLUS	ccl.c	661;"	d	file:
ccl_prog	ccl.c	/^    Lisp_Object *ccl_prog;	\/* Pointer to an array of CCL code.  *\/$/;"	m	struct:ccl_prog_stack	file:	access:public
ccl_prog	ccl.c	/^  (Lisp_Object ccl_prog, Lisp_Object reg)$/;"	v
ccl_prog	ccl.c	/^  (Lisp_Object ccl_prog, Lisp_Object status, Lisp_Object str, Lisp_Object contin, Lisp_Object unibyte_p)$/;"	v
ccl_program	ccl.h	/^struct ccl_program {$/;"	s
ccl_program::buf_magnification	ccl.h	/^  int buf_magnification;	\/* Output buffer magnification.  How$/;"	m	struct:ccl_program	access:public
ccl_program::consumed	ccl.h	/^  int consumed;$/;"	m	struct:ccl_program	access:public
ccl_program::eof_ic	ccl.h	/^  int eof_ic;			\/* Instruction Counter for end-of-file$/;"	m	struct:ccl_program	access:public
ccl_program::ic	ccl.h	/^  int ic;			\/* Instruction Counter (index for PROG).  *\/$/;"	m	struct:ccl_program	access:public
ccl_program::idx	ccl.h	/^  ptrdiff_t idx;		\/* Index number of the CCL program.$/;"	m	struct:ccl_program	access:public
ccl_program::last_block	ccl.h	/^  bool_bf last_block : 1;	\/* Set to true while processing the last$/;"	m	struct:ccl_program	access:public
ccl_program::produced	ccl.h	/^  int produced;$/;"	m	struct:ccl_program	access:public
ccl_program::prog	ccl.h	/^  Lisp_Object *prog;		\/* Pointer into the compiled code.  *\/$/;"	m	struct:ccl_program	access:public
ccl_program::quit_silently	ccl.h	/^  bool_bf quit_silently : 1;	\/* If true, don't append "CCL:$/;"	m	struct:ccl_program	access:public
ccl_program::reg	ccl.h	/^  int reg[8];			\/* CCL registers, reg[7] is used for$/;"	m	struct:ccl_program	access:public
ccl_program::size	ccl.h	/^  int size;			\/* Size of the compiled code.  *\/$/;"	m	struct:ccl_program	access:public
ccl_program::stack_idx	ccl.h	/^  int stack_idx;		\/* How deep the call of CCL_Call is nested.  *\/$/;"	m	struct:ccl_program	access:public
ccl_program::status	ccl.h	/^  int status;			\/* Exit status of the CCL program.  *\/$/;"	m	struct:ccl_program	access:public
ccl_prog_stack	ccl.c	/^struct ccl_prog_stack$/;"	s	file:
ccl_prog_stack::ccl_prog	ccl.c	/^    Lisp_Object *ccl_prog;	\/* Pointer to an array of CCL code.  *\/$/;"	m	struct:ccl_prog_stack	file:	access:public
ccl_prog_stack::eof_ic	ccl.c	/^    int eof_ic;			\/* Instruction Counter to jump on EOF.  *\/$/;"	m	struct:ccl_prog_stack	file:	access:public
ccl_prog_stack::ic	ccl.c	/^    int ic;			\/* Instruction Counter.  *\/$/;"	m	struct:ccl_prog_stack	file:	access:public
ccl_prog_stack_struct	ccl.c	/^static struct ccl_prog_stack ccl_prog_stack_struct[256];$/;"	v	typeref:struct:ccl_prog_stack	file:
CCL_ReadBranch	ccl.c	250;"	d	file:
CCL_ReadJump	ccl.c	211;"	d	file:
CCL_ReadJumpCondExprConst	ccl.c	386;"	d	file:
CCL_ReadJumpCondExprReg	ccl.c	400;"	d	file:
CCL_ReadMultibyteChar2	ccl.c	432;"	d	file:
CCL_ReadRegister	ccl.c	230;"	d	file:
CCL_READ_CHAR	ccl.c	785;"	d	file:
CCL_RSH	ccl.c	670;"	d	file:
CCL_RSH8	ccl.c	672;"	d	file:
CCL_SetArray	ccl.c	114;"	d	file:
CCL_SetConst	ccl.c	106;"	d	file:
CCL_SetExprConst	ccl.c	346;"	d	file:
CCL_SetExprReg	ccl.c	354;"	d	file:
CCL_SetRegister	ccl.c	94;"	d	file:
CCL_SetShortConst	ccl.c	100;"	d	file:
ccl_spec	ccl.h	/^struct ccl_spec {$/;"	s
ccl_spec::ccl	ccl.h	/^  struct ccl_program ccl;$/;"	m	struct:ccl_spec	typeref:struct:ccl_spec::ccl_program	access:public
CCL_STAT_INVALID_CMD	ccl.h	33;"	d
CCL_STAT_QUIT	ccl.h	35;"	d
CCL_STAT_SUCCESS	ccl.h	30;"	d
CCL_STAT_SUSPEND_BY_DST	ccl.h	32;"	d
CCL_STAT_SUSPEND_BY_SRC	ccl.h	31;"	d
CCL_SUCCESS	ccl.c	687;"	d	file:
CCL_SUSPEND	ccl.c	698;"	d	file:
CCL_TranslateCharacter	ccl.c	448;"	d	file:
CCL_TranslateCharacterConstTbl	ccl.c	457;"	d	file:
CCL_WriteArray	ccl.c	310;"	d	file:
CCL_WriteArrayReadJump	ccl.c	194;"	d	file:
CCL_WriteConstJump	ccl.c	160;"	d	file:
CCL_WriteConstReadJump	ccl.c	168;"	d	file:
CCL_WriteConstString	ccl.c	295;"	d	file:
CCL_WriteExprConst	ccl.c	239;"	d	file:
CCL_WriteExprRegister	ccl.c	277;"	d	file:
CCL_WriteMultibyteChar2	ccl.c	439;"	d	file:
CCL_WriteRegister	ccl.c	264;"	d	file:
CCL_WriteRegisterJump	ccl.c	141;"	d	file:
CCL_WriteRegisterReadJump	ccl.c	148;"	d	file:
CCL_WriteStringJump	ccl.c	181;"	d	file:
CCL_WRITE_CHAR	ccl.c	753;"	d	file:
CCL_WRITE_STRING	ccl.c	765;"	d	file:
CCL_XOR	ccl.c	668;"	d	file:
cc_abs	cm.h	/^    int cc_abs;$/;"	m	struct:cm	access:public
cc_abs	cm.h	/^    struct parmcap cc_abs;	\/* absolute (cm) *\/$/;"	m	struct:cm	typeref:struct:cm::parmcap	access:public
cc_backtab	cm.h	/^    int cc_backtab;$/;"	m	struct:cm	access:public
cc_cr	cm.h	/^    int cc_cr;$/;"	m	struct:cm	access:public
cc_down	cm.h	/^    int cc_down;		\/* etc. *\/$/;"	m	struct:cm	access:public
cc_habs	cm.h	/^    int cc_habs;$/;"	m	struct:cm	access:public
cc_habs	cm.h	/^    struct parmcap cc_habs;	\/* horizontal absolute (ch) *\/$/;"	m	struct:cm	typeref:struct:cm::parmcap	access:public
cc_home	cm.h	/^    int cc_home;$/;"	m	struct:cm	access:public
cc_left	cm.h	/^    int cc_left;$/;"	m	struct:cm	access:public
cc_ll	cm.h	/^    int cc_ll;$/;"	m	struct:cm	access:public
cc_multidown	cm.h	/^    struct parmcap cc_multidown; \/* multiple down (DO) *\/$/;"	m	struct:cm	typeref:struct:cm::parmcap	access:public
cc_multileft	cm.h	/^    struct parmcap cc_multileft; \/* multiple left (LE) *\/$/;"	m	struct:cm	typeref:struct:cm::parmcap	access:public
cc_multiright	cm.h	/^    struct parmcap cc_multiright; \/* multiple right (RI) *\/$/;"	m	struct:cm	typeref:struct:cm::parmcap	access:public
cc_multiup	cm.h	/^    struct parmcap cc_multiup;	\/* multiple up (UP) *\/$/;"	m	struct:cm	typeref:struct:cm::parmcap	access:public
cc_right	cm.h	/^    int cc_right;$/;"	m	struct:cm	access:public
cc_tab	cm.h	/^    int cc_tab;$/;"	m	struct:cm	access:public
cc_up	cm.h	/^    int cc_up;			\/* cost for up *\/$/;"	m	struct:cm	access:public
cc_vabs	cm.h	/^    int cc_vabs;$/;"	m	struct:cm	access:public
cc_vabs	cm.h	/^    struct parmcap cc_vabs;	\/* vertical absolute (cv) *\/$/;"	m	struct:cm	typeref:struct:cm::parmcap	access:public
CDISABLE	systty.h	50;"	d
CDISABLE	systty.h	53;"	d
CDISABLE	systty.h	54;"	d
CDISABLE	systty.h	56;"	d
cdr	lisp.h	/^      Lisp_Object cdr;$/;"	m	union:Lisp_Cons::__anon19	access:public
CDR	lisp.h	/^CDR (Lisp_Object c)$/;"	f	signature:(Lisp_Object c)
cdr	xrdb.c	598;"	d	file:
CDR_SAFE	lisp.h	/^CDR_SAFE (Lisp_Object c)$/;"	f	signature:(Lisp_Object c)
CEIL	ftfont.c	1531;"	d	file:
CENTERED_IMAGE_ASCENT	dispextern.h	3020;"	d
CenterGravity	nsgui.h	169;"	d
CenterGravity	w32gui.h	87;"	d
ceol_initialized	w32console.c	/^static BOOL  ceol_initialized = FALSE;$/;"	v	file:
CERTIFICATE_NOT_MATCHING	gnutls.c	/^    CERTIFICATE_NOT_MATCHING = 2$/;"	e	enum:extra_peer_verification	file:
cfg_clipboard_type	w32select.c	/^static UINT cfg_clipboard_type;$/;"	v	file:
cfg_codepage	w32select.c	/^static UINT cfg_codepage;$/;"	v	file:
cfg_coding_system	w32select.c	/^static Lisp_Object cfg_coding_system;$/;"	v	file:
cfg_lcid	w32select.c	/^static LCID cfg_lcid;$/;"	v	file:
CFLAGS	Makefile	/^CFLAGS = -g3 -O2$/;"	m
CFLAGS_SOUND	Makefile	/^CFLAGS_SOUND= $/;"	m
cfmakeraw	sysdep.c	/^cfmakeraw (struct termios *termios_p)$/;"	f	file:	signature:(struct termios *termios_p)
cfsetspeed	sysdep.c	/^cfsetspeed (struct termios *termios_p, speed_t vitesse)$/;"	f	file:	signature:(struct termios *termios_p, speed_t vitesse)
CGFloat	nsgui.h	/^typedef double CGFloat;$/;"	t
CGFloat	nsgui.h	/^typedef float CGFloat;$/;"	t
cgfont	nsterm.h	/^  CGFontRef cgfont;$/;"	m	struct:nsfont_info	access:public
cgfont	nsterm.h	/^  void *cgfont;$/;"	m	struct:nsfont_info	access:public
cGlyphs	w32term.c	/^  USHORT cGlyphs;$/;"	m	struct:tagWCRANGE	file:	access:public
cGlyphsSupported	w32term.c	/^  DWORD cGlyphsSupported;$/;"	m	struct:tagGLYPHSET	file:	access:public
ch	charset.c	/^  (Lisp_Object ch, Lisp_Object charset)$/;"	v
ch	charset.c	/^  (Lisp_Object ch, Lisp_Object restriction)$/;"	v
ch	chartab.c	/^  (Lisp_Object char_table, Lisp_Object ch, Lisp_Object value)$/;"	v
ch	dispextern.h	/^      unsigned ch : 25;$/;"	m	struct:glyph::__anon110::__anon113	access:public
ch	dispextern.h	/^    unsigned ch;$/;"	m	union:glyph::__anon110	access:public
ch	dispextern.h	/^  int ch;			\/* character at that position, or u+FFFC$/;"	m	struct:bidi_it	access:public
ch	dispextern.h	/^  int ch;$/;"	m	struct:composition_it	access:public
ch	dispextern.h	/^  int ch;$/;"	m	struct:__anon105	access:public
ch	fontset.c	/^  (Lisp_Object name, Lisp_Object ch, Lisp_Object all)$/;"	v
chain	lisp.h	/^      struct Lisp_Cons *chain;$/;"	m	union:Lisp_Cons::__anon19	typeref:struct:Lisp_Cons::__anon19::Lisp_Cons	access:public
chain	lisp.h	/^      struct Lisp_Float *chain;$/;"	m	union:Lisp_Float::__anon27	typeref:struct:Lisp_Float::__anon27::Lisp_Float	access:public
chain	lisp.h	/^    union Lisp_Misc *chain;$/;"	m	struct:Lisp_Free	typeref:union:Lisp_Free::Lisp_Misc	access:public
CHANGED_LEAF_MATRIX	dispnew.c	1578;"	d	file:
change_frame_size	dispextern.h	/^void change_frame_size (struct frame *, int, int, bool, bool, bool, bool);$/;"	p	signature:(struct frame *, int, int, bool, bool, bool, bool)
change_frame_size	dispnew.c	/^change_frame_size (struct frame *f, int new_width, int new_height,$/;"	f	signature:(struct frame *f, int new_width, int new_height, bool pretend, bool delay, bool safe, bool pixelwise)
change_frame_size_1	dispnew.c	/^change_frame_size_1 (struct frame *f, int new_width, int new_height,$/;"	f	file:	signature:(struct frame *f, int new_width, int new_height, bool pretend, bool delay, bool safe, bool pixelwise)
ChannelMask	process.h	227;"	d
channels	sound.c	/^  int channels;$/;"	m	struct:sound_device	file:	access:public
channels	sound.c	/^  u_int16_t channels;$/;"	m	struct:wav_header	file:	access:public
channels	sound.c	/^  u_int32_t channels;$/;"	m	struct:au_header	file:	access:public
chan_process	process.c	/^static Lisp_Object chan_process[FD_SETSIZE];$/;"	v	file:
char2b	dispextern.h	/^  XChar2b *char2b;$/;"	m	struct:glyph_string	access:public
character	category.c	/^  (Lisp_Object character, Lisp_Object category, Lisp_Object table, Lisp_Object reset)$/;"	v
character	editfns.c	/^  (Lisp_Object character, Lisp_Object count, Lisp_Object inherit)$/;"	v
character	print.c	/^  (Lisp_Object character, Lisp_Object printcharfun)$/;"	v
CHARACTERBITS	lisp.h	/^    CHARACTERBITS = 22$/;"	e	enum:char_bits
CHARACTERP	character.h	125;"	d
character_name_to_code	lread.c	/^character_name_to_code (char const *name, ptrdiff_t name_len)$/;"	f	file:	signature:(char const *name, ptrdiff_t name_len)
CHARACTER_WIDTH	character.h	594;"	d
character_width	indent.c	/^character_width (int c, struct Lisp_Char_Table *dp)$/;"	f	file:	signature:(int c, struct Lisp_Char_Table *dp)
charbuf	coding.h	/^  int *charbuf;$/;"	m	struct:coding_system	access:public
charbuf_size	coding.h	/^  int charbuf_size, charbuf_used;$/;"	m	struct:coding_system	access:public
charbuf_used	coding.h	/^  int charbuf_size, charbuf_used;$/;"	m	struct:coding_system	access:public
charpos	dispextern.h	/^  ptrdiff_t charpos;		\/* character's buffer position *\/$/;"	m	struct:bidi_saved_info	access:public
charpos	dispextern.h	/^  ptrdiff_t charpos;$/;"	m	struct:bidi_it	access:public
charpos	dispextern.h	/^  ptrdiff_t charpos;$/;"	m	struct:composition_it	access:public
charpos	dispextern.h	/^  ptrdiff_t charpos;$/;"	m	struct:glyph	access:public
charpos	dispextern.h	/^  ptrdiff_t charpos;$/;"	m	struct:text_pos	access:public
CHARPOS	dispextern.h	188;"	d
charpos	lisp.h	/^  ptrdiff_t charpos;$/;"	m	struct:Lisp_Marker	access:public
chars	charset.c	/^  (Lisp_Object dimension, Lisp_Object chars, Lisp_Object final_char)$/;"	v
chars	charset.c	/^  (Lisp_Object dimension, Lisp_Object chars, Lisp_Object final_char, Lisp_Object charset)$/;"	v
charscript	Makefile	/^charscript = ${lispintdir}\/charscript.el$/;"	m
charset	charset.c	/^  (Lisp_Object charset, Lisp_Object code1, Lisp_Object code2, Lisp_Object code3, Lisp_Object code4)$/;"	v
charset	charset.c	/^  (Lisp_Object charset, Lisp_Object code_point)$/;"	v
charset	charset.c	/^  (Lisp_Object charset, Lisp_Object plist)$/;"	v
charset	charset.c	/^  (Lisp_Object charset, Lisp_Object unify_map, Lisp_Object deunify)$/;"	v
charset	charset.c	/^  (Lisp_Object function, Lisp_Object charset, Lisp_Object arg, Lisp_Object from_code, Lisp_Object to_code)$/;"	v
charset	charset.c	/^  Lisp_Object charset;$/;"	m	struct:charset_sort_data	file:	access:public
charset	charset.h	/^struct charset$/;"	s
charset	regex.c	/^  charset,$/;"	e	enum:__anon144	file:
charset::ascii_compatible_p	charset.h	/^  bool_bf ascii_compatible_p : 1;$/;"	m	struct:charset	access:public
charset::char_index_offset	charset.h	/^  unsigned char_index_offset;$/;"	m	struct:charset	access:public
charset::code_linear_p	charset.h	/^  bool_bf code_linear_p : 1;$/;"	m	struct:charset	access:public
charset::code_offset	charset.h	/^  int code_offset;$/;"	m	struct:charset	access:public
charset::code_space	charset.h	/^  int code_space[15];$/;"	m	struct:charset	access:public
charset::code_space_mask	charset.h	/^  unsigned char *code_space_mask;$/;"	m	struct:charset	access:public
charset::compact_codes_p	charset.h	/^  bool_bf compact_codes_p : 1;$/;"	m	struct:charset	access:public
charset::dimension	charset.h	/^  int dimension;$/;"	m	struct:charset	access:public
charset::emacs_mule_id	charset.h	/^  int emacs_mule_id;$/;"	m	struct:charset	access:public
charset::fast_map	charset.h	/^  unsigned char fast_map[190];$/;"	m	struct:charset	access:public
charset::hash_index	charset.h	/^  ptrdiff_t hash_index;$/;"	m	struct:charset	access:public
charset::id	charset.h	/^  int id;$/;"	m	struct:charset	access:public
charset::invalid_code	charset.h	/^  unsigned invalid_code;$/;"	m	struct:charset	access:public
charset::iso_chars_96	charset.h	/^  bool_bf iso_chars_96 : 1;$/;"	m	struct:charset	access:public
charset::iso_final	charset.h	/^  int iso_final;$/;"	m	struct:charset	access:public
charset::iso_revision	charset.h	/^  int iso_revision;$/;"	m	struct:charset	access:public
charset::max_char	charset.h	/^  int min_char, max_char;$/;"	m	struct:charset	access:public
charset::max_code	charset.h	/^  unsigned min_code, max_code;$/;"	m	struct:charset	access:public
charset::method	charset.h	/^  enum charset_method method;$/;"	m	struct:charset	typeref:enum:charset::charset_method	access:public
charset::min_char	charset.h	/^  int min_char, max_char;$/;"	m	struct:charset	access:public
charset::min_code	charset.h	/^  unsigned min_code, max_code;$/;"	m	struct:charset	access:public
charset::supplementary_p	charset.h	/^  bool_bf supplementary_p : 1;$/;"	m	struct:charset	access:public
charset::unified_p	charset.h	/^  bool_bf unified_p : 1;$/;"	m	struct:charset	access:public
CHARSETP	charset.h	340;"	d
charsets	Makefile	/^charsets = ${top_srcdir}\/admin\/charsets\/charsets.stamp$/;"	m
charset_arg_ascii_compatible_p	charset.h	/^    charset_arg_ascii_compatible_p,$/;"	e	enum:define_charset_arg_index
charset_arg_code_offset	charset.h	/^    charset_arg_code_offset,$/;"	e	enum:define_charset_arg_index
charset_arg_code_space	charset.h	/^    charset_arg_code_space,$/;"	e	enum:define_charset_arg_index
charset_arg_dimension	charset.h	/^    charset_arg_dimension,$/;"	e	enum:define_charset_arg_index
charset_arg_emacs_mule_id	charset.h	/^    charset_arg_emacs_mule_id,$/;"	e	enum:define_charset_arg_index
charset_arg_invalid_code	charset.h	/^    charset_arg_invalid_code,$/;"	e	enum:define_charset_arg_index
charset_arg_iso_final	charset.h	/^    charset_arg_iso_final,$/;"	e	enum:define_charset_arg_index
charset_arg_iso_revision	charset.h	/^    charset_arg_iso_revision,$/;"	e	enum:define_charset_arg_index
charset_arg_map	charset.h	/^    charset_arg_map,$/;"	e	enum:define_charset_arg_index
charset_arg_max	charset.h	/^    charset_arg_max$/;"	e	enum:define_charset_arg_index
charset_arg_max_code	charset.h	/^    charset_arg_max_code,$/;"	e	enum:define_charset_arg_index
charset_arg_min_code	charset.h	/^    charset_arg_min_code,$/;"	e	enum:define_charset_arg_index
charset_arg_name	charset.h	/^    charset_arg_name,$/;"	e	enum:define_charset_arg_index
charset_arg_plist	charset.h	/^    charset_arg_plist,$/;"	e	enum:define_charset_arg_index
charset_arg_subset	charset.h	/^    charset_arg_subset,$/;"	e	enum:define_charset_arg_index
charset_arg_superset	charset.h	/^    charset_arg_superset,$/;"	e	enum:define_charset_arg_index
charset_arg_supplementary_p	charset.h	/^    charset_arg_supplementary_p,$/;"	e	enum:define_charset_arg_index
charset_arg_unify_map	charset.h	/^    charset_arg_unify_map,$/;"	e	enum:define_charset_arg_index
charset_ascii	charset.c	/^int charset_ascii;$/;"	v
CHARSET_ASCII_COMPATIBLE_P	charset.h	303;"	d
charset_attributes	charset.h	/^extern Lisp_Object charset_attributes (int);$/;"	p	signature:(int)
CHARSET_ATTRIBUTES	charset.h	290;"	d
CHARSET_ATTR_DECODER	charset.h	274;"	d
CHARSET_ATTR_DEUNIFIER	charset.h	279;"	d
CHARSET_ATTR_ENCODER	charset.h	275;"	d
CHARSET_ATTR_ID	charset.h	270;"	d
charset_attr_index	charset.h	/^enum charset_attr_index$/;"	g
CHARSET_ATTR_MAP	charset.h	273;"	d
charset_attr_max	charset.h	/^    charset_attr_max$/;"	e	enum:charset_attr_index
CHARSET_ATTR_NAME	charset.h	271;"	d
CHARSET_ATTR_PLIST	charset.h	272;"	d
CHARSET_ATTR_SUBSET	charset.h	276;"	d
CHARSET_ATTR_SUPERSET	charset.h	277;"	d
CHARSET_ATTR_UNIFY_MAP	charset.h	278;"	d
CHARSET_BITMAP_SIZE	regex.c	756;"	d	file:
CHARSET_CODE_LINEAR_P	charset.h	297;"	d
CHARSET_CODE_OFFSET	charset.h	311;"	d
CHARSET_CODE_SPACE	charset.h	296;"	d
CHARSET_COMPACT_CODES_P	charset.h	304;"	d
charset_compare	charset.c	/^charset_compare (const void *d1, const void *d2)$/;"	f	file:	signature:(const void *d1, const void *d2)
charset_decoder	charset.h	/^    charset_decoder,$/;"	e	enum:charset_attr_index
CHARSET_DECODER	charset.h	318;"	d
charset_deunifier	charset.h	/^    charset_deunifier,$/;"	e	enum:charset_attr_index
CHARSET_DEUNIFIER	charset.h	328;"	d
CHARSET_DIMENSION	charset.h	295;"	d
charset_eight_bit	charset.c	/^int charset_eight_bit;$/;"	v
charset_emacs	charset.c	/^static int charset_emacs;$/;"	v	file:
CHARSET_EMACS_MULE_ID	charset.h	302;"	d
charset_encoder	charset.h	/^    charset_encoder,$/;"	e	enum:charset_attr_index
CHARSET_ENCODER	charset.h	320;"	d
CHARSET_FAST_MAP_REF	charset.h	481;"	d
CHARSET_FAST_MAP_SET	charset.h	486;"	d
CHARSET_FROM_ID	charset.h	252;"	d
CHARSET_HASH_INDEX	charset.h	294;"	d
charset_id	charset.h	/^    charset_id,$/;"	e	enum:charset_attr_index
CHARSET_ID	charset.h	293;"	d
CHARSET_INVALID_CODE	charset.h	308;"	d
charset_iso_8859_1	charset.c	/^static int charset_iso_8859_1;$/;"	v	file:
CHARSET_ISO_CHARS_96	charset.h	298;"	d
CHARSET_ISO_FINAL	charset.h	299;"	d
CHARSET_ISO_PLANE	charset.h	300;"	d
CHARSET_ISO_REVISION	charset.h	301;"	d
charset_jisx0201_roman	charset.c	/^int charset_jisx0201_roman;$/;"	v
charset_jisx0208	charset.c	/^int charset_jisx0208;$/;"	v
charset_jisx0208_1978	charset.c	/^int charset_jisx0208_1978;$/;"	v
charset_ksc5601	charset.c	/^int charset_ksc5601;$/;"	v
charset_list	termhooks.h	/^  Lisp_Object charset_list;$/;"	m	struct:terminal	access:public
charset_map	charset.h	/^    charset_map,$/;"	e	enum:charset_attr_index
CHARSET_MAP	charset.h	316;"	d
charset_map_entries	charset.c	/^struct charset_map_entries$/;"	s	file:
charset_map_entries::entry	charset.c	/^  } entry[0x10000];$/;"	m	struct:charset_map_entries	typeref:struct:charset_map_entries::__anon80	file:	access:public
charset_map_entries::next	charset.c	/^  struct charset_map_entries *next;$/;"	m	struct:charset_map_entries	typeref:struct:charset_map_entries::charset_map_entries	file:	access:public
charset_map_entries::__anon80::c	charset.c	/^    int c;$/;"	m	struct:charset_map_entries::__anon80	file:	access:public
charset_map_entries::__anon80::from	charset.c	/^    unsigned from, to;$/;"	m	struct:charset_map_entries::__anon80	file:	access:public
charset_map_entries::__anon80::to	charset.c	/^    unsigned from, to;$/;"	m	struct:charset_map_entries::__anon80	file:	access:public
charset_map_loaded	charset.c	/^bool charset_map_loaded;$/;"	v
CHARSET_MAX_CHAR	charset.h	310;"	d
CHARSET_MAX_CODE	charset.h	307;"	d
charset_method	charset.h	/^enum charset_method$/;"	g
CHARSET_METHOD	charset.h	305;"	d
CHARSET_METHOD_MAP	charset.h	/^    CHARSET_METHOD_MAP,$/;"	e	enum:charset_method
CHARSET_METHOD_OFFSET	charset.h	/^    CHARSET_METHOD_OFFSET,$/;"	e	enum:charset_method
CHARSET_METHOD_SUBSET	charset.h	/^    CHARSET_METHOD_SUBSET,$/;"	e	enum:charset_method
CHARSET_METHOD_SUPERSET	charset.h	/^    CHARSET_METHOD_SUPERSET$/;"	e	enum:charset_method
CHARSET_MIN_CHAR	charset.h	309;"	d
CHARSET_MIN_CODE	charset.h	306;"	d
charset_name	charset.h	/^    charset_name,$/;"	e	enum:charset_attr_index
CHARSET_NAME	charset.h	314;"	d
charset_not	regex.c	/^  charset_not,$/;"	e	enum:__anon144	file:
charset_ordered_list_tick	charset.c	/^EMACS_UINT charset_ordered_list_tick;$/;"	v
charset_plist	charset.h	/^    charset_plist,$/;"	e	enum:charset_attr_index
CHARSET_RANGE_TABLE	regex.c	765;"	d	file:
CHARSET_RANGE_TABLE_BITS	regex.c	769;"	d	file:
CHARSET_RANGE_TABLE_END	regex.c	778;"	d	file:
CHARSET_RANGE_TABLE_EXISTS_P	regex.c	759;"	d	file:
charset_sort_data	charset.c	/^struct charset_sort_data$/;"	s	file:
charset_sort_data::charset	charset.c	/^  Lisp_Object charset;$/;"	m	struct:charset_sort_data	file:	access:public
charset_sort_data::id	charset.c	/^  int id;$/;"	m	struct:charset_sort_data	file:	access:public
charset_sort_data::priority	charset.c	/^  ptrdiff_t priority;$/;"	m	struct:charset_sort_data	file:	access:public
charset_subset	charset.h	/^    charset_subset,$/;"	e	enum:charset_attr_index
CHARSET_SUBSET	charset.h	322;"	d
charset_superset	charset.h	/^    charset_superset,$/;"	e	enum:charset_attr_index
CHARSET_SUPERSET	charset.h	324;"	d
CHARSET_SYMBOL_ATTRIBUTES	charset.h	267;"	d
CHARSET_SYMBOL_HASH_INDEX	charset.h	286;"	d
CHARSET_SYMBOL_ID	charset.h	281;"	d
charset_table	charset.c	/^struct charset *charset_table;$/;"	v	typeref:struct:charset
charset_table_init	charset.c	/^static struct charset charset_table_init[180];$/;"	v	typeref:struct:charset	file:
charset_table_size	charset.c	/^static ptrdiff_t charset_table_size;$/;"	v	file:
charset_table_used	charset.c	/^static int charset_table_used;$/;"	v	file:
charset_unibyte	charset.c	/^int charset_unibyte;$/;"	v
charset_unibyte	regex.h	/^  int charset_unibyte;$/;"	m	struct:re_pattern_buffer	access:public
charset_unicode	charset.c	/^int charset_unicode;$/;"	v
CHARSET_UNIFIED_P	charset.h	312;"	d
charset_unify_map	charset.h	/^    charset_unify_map,$/;"	e	enum:charset_attr_index
CHARSET_UNIFY_MAP	charset.h	326;"	d
charset_work	charset.c	/^Lisp_Object charset_work;$/;"	v
chars_at_source	coding.h	/^  bool_bf chars_at_source : 1;$/;"	m	struct:coding_system	access:public
chars_in_text	character.c	/^chars_in_text (const unsigned char *ptr, ptrdiff_t nbytes)$/;"	f	signature:(const unsigned char *ptr, ptrdiff_t nbytes)
chars_in_text	lisp.h	/^extern ptrdiff_t chars_in_text (const unsigned char *, ptrdiff_t);$/;"	p	signature:(const unsigned char *, ptrdiff_t)
chars_modiff	buffer.h	/^    EMACS_INT chars_modiff;	\/* This is modified with character change$/;"	m	struct:buffer_text	access:public
CHARS_MODIFF	buffer.h	92;"	d
chartab_bits	chartab.c	/^static const int chartab_bits[4] =$/;"	v	file:
chartab_chars	chartab.c	/^static const int chartab_chars[4] =$/;"	v	file:
CHARTAB_IDX	chartab.c	52;"	d	file:
chartab_size	chartab.c	/^const int chartab_size[4] =$/;"	v
CHARTAB_SIZE_BITS	alloc.c	/^  enum CHARTAB_SIZE_BITS CHARTAB_SIZE_BITS;$/;"	m	union:__anon13	typeref:enum:__anon13::CHARTAB_SIZE_BITS	file:	access:public
CHARTAB_SIZE_BITS	lisp.h	/^enum CHARTAB_SIZE_BITS$/;"	g
CHARTAB_SIZE_BITS_0	lisp.h	/^    CHARTAB_SIZE_BITS_0 = 6,$/;"	e	enum:CHARTAB_SIZE_BITS
CHARTAB_SIZE_BITS_1	lisp.h	/^    CHARTAB_SIZE_BITS_1 = 4,$/;"	e	enum:CHARTAB_SIZE_BITS
CHARTAB_SIZE_BITS_2	lisp.h	/^    CHARTAB_SIZE_BITS_2 = 5,$/;"	e	enum:CHARTAB_SIZE_BITS
CHARTAB_SIZE_BITS_3	lisp.h	/^    CHARTAB_SIZE_BITS_3 = 7$/;"	e	enum:CHARTAB_SIZE_BITS
CHAR_ALT	lisp.h	/^    CHAR_ALT = 0x0400000,$/;"	e	enum:char_bits
char_attr_normal	w32console.c	/^static WORD	char_attr_normal;$/;"	v	file:
char_avail	w32.h	/^  HANDLE              char_avail;$/;"	m	struct:_child_process	access:public
CHAR_BIT	lisp.h	/^    ENUM_BF (specbind_tag) kind : CHAR_BIT;$/;"	m	union:specbinding	access:public
char_bits	alloc.c	/^  enum char_bits char_bits;$/;"	m	union:__anon13	typeref:enum:__anon13::char_bits	file:	access:public
char_bits	lisp.h	/^enum char_bits$/;"	g
CHAR_BYTE8_HEAD_P	character.h	107;"	d
CHAR_BYTE8_P	character.h	89;"	d
CHAR_BYTE8_P	regex.c	280;"	d	file:
CHAR_BYTES	character.h	155;"	d
char_category_set	category.c	/^char_category_set (int c)$/;"	f	signature:(int c)
char_category_set	lisp.h	/^extern Lisp_Object char_category_set (int);$/;"	p	signature:(int)
char_charset	charset.c	/^char_charset (int c, Lisp_Object charset_list, unsigned int *code_return)$/;"	f	signature:(int c, Lisp_Object charset_list, unsigned int *code_return)
char_charset	charset.h	/^extern struct charset *char_charset (int, Lisp_Object, unsigned *);$/;"	p	signature:(int, Lisp_Object, unsigned *)
CHAR_CHARSET	charset.h	382;"	d
CHAR_CHARSET_P	charset.h	497;"	d
CHAR_CHARSET_SET	charset.h	392;"	d
char_composable_p	composite.c	/^char_composable_p (int c)$/;"	f	file:	signature:(int c)
CHAR_COMPOSED_P	xdisp.c	6830;"	d	file:
char_consumed	w32.h	/^  HANDLE              char_consumed;$/;"	m	struct:_child_process	access:public
CHAR_CTL	lisp.h	/^    CHAR_CTL = 0x4000000,$/;"	e	enum:char_bits
char_encodable_p	coding.c	/^char_encodable_p (int c, Lisp_Object attrs)$/;"	f	file:	signature:(int c, Lisp_Object attrs)
CHAR_GLYPH	dispextern.h	/^  CHAR_GLYPH,$/;"	e	enum:glyph_type
CHAR_GLYPH_PADDING_P	dispextern.h	622;"	d
CHAR_GLYPH_SPACE_P	dispextern.h	544;"	d
CHAR_HAS_CATEGORY	category.h	/^CHAR_HAS_CATEGORY (int ch, int category)$/;"	f	signature:(int ch, int category)
CHAR_HEAD_P	character.h	237;"	d
char_hexdigit	character.h	/^char_hexdigit (int c)$/;"	f	signature:(int c)
CHAR_HYPER	lisp.h	/^    CHAR_HYPER = 0x1000000,$/;"	e	enum:char_bits
char_index_offset	charset.h	/^  unsigned char_index_offset;$/;"	m	struct:charset	access:public
char_ins_del_cost	dispnew.c	4769;"	d	file:
char_ins_del_cost	term.c	1090;"	d	file:
char_ins_del_ok	termchar.h	/^  bool_bf char_ins_del_ok : 1;$/;"	m	struct:tty_display_info	access:public
char_ins_del_vector	term.c	/^int *char_ins_del_vector;$/;"	v
CHAR_LEADING_CODE	character.h	165;"	d
CHAR_LEADING_CODE	regex.c	281;"	d	file:
CHAR_META	lisp.h	/^    CHAR_META = 0x8000000,$/;"	e	enum:char_bits
CHAR_MODIFIER_MASK	lisp.h	/^    CHAR_MODIFIER_MASK =$/;"	e	enum:char_bits
CHAR_POS_ADDR	buffer.h	337;"	d
CHAR_PRINTABLE_P	character.h	150;"	d
char_quoted	syntax.c	/^char_quoted (ptrdiff_t charpos, ptrdiff_t bytepos)$/;"	f	file:	signature:(ptrdiff_t charpos, ptrdiff_t bytepos)
CHAR_SET_SIZE	regex.c	392;"	d	file:
CHAR_SHIFT	lisp.h	/^    CHAR_SHIFT = 0x2000000,$/;"	e	enum:char_bits
char_string	character.h	/^extern int char_string (unsigned, unsigned char *);$/;"	p	signature:(unsigned, unsigned char *)
CHAR_STRING	character.h	178;"	d
CHAR_STRING	regex.c	271;"	d	file:
CHAR_STRING_ADVANCE	character.h	207;"	d
CHAR_STRING_ADVANCE_NO_UNIFY	coding.c	917;"	d	file:
CHAR_SUPER	lisp.h	/^    CHAR_SUPER = 0x0800000,$/;"	e	enum:char_bits
char_surrogate_p	character.h	/^char_surrogate_p (int c)$/;"	f	signature:(int c)
char_table	chartab.c	/^  (Lisp_Object char_table, Lisp_Object ch)$/;"	v
char_table	chartab.c	/^  (Lisp_Object char_table, Lisp_Object ch, Lisp_Object value)$/;"	v
char_table	chartab.c	/^  (Lisp_Object char_table, Lisp_Object n)$/;"	v
char_table	chartab.c	/^  (Lisp_Object char_table, Lisp_Object n, Lisp_Object value)$/;"	v
char_table	chartab.c	/^  (Lisp_Object char_table, Lisp_Object parent)$/;"	v
char_table	chartab.c	/^  (Lisp_Object char_table, Lisp_Object range)$/;"	v
char_table	chartab.c	/^  (Lisp_Object char_table, Lisp_Object range, Lisp_Object value)$/;"	v
char_table	chartab.c	/^  (Lisp_Object char_table, Lisp_Object test)$/;"	v
char_table_ascii	chartab.c	/^char_table_ascii (Lisp_Object table)$/;"	f	file:	signature:(Lisp_Object table)
CHAR_TABLE_EXTRA_SLOTS	lisp.h	/^CHAR_TABLE_EXTRA_SLOTS (struct Lisp_Char_Table *ct)$/;"	f	signature:(struct Lisp_Char_Table *ct)
CHAR_TABLE_P	lisp.h	/^CHAR_TABLE_P (Lisp_Object a)$/;"	f	signature:(Lisp_Object a)
char_table_ref	chartab.c	/^char_table_ref (Lisp_Object table, int c)$/;"	f	signature:(Lisp_Object table, int c)
CHAR_TABLE_REF	lisp.h	/^CHAR_TABLE_REF (Lisp_Object ct, int idx)$/;"	f	signature:(Lisp_Object ct, int idx)
char_table_ref	lisp.h	/^extern Lisp_Object char_table_ref (Lisp_Object, int);$/;"	p	signature:(Lisp_Object, int)
char_table_ref_and_range	chartab.c	/^char_table_ref_and_range (Lisp_Object table, int c, int *from, int *to)$/;"	f	signature:(Lisp_Object table, int c, int *from, int *to)
char_table_ref_and_range	lisp.h	/^extern Lisp_Object char_table_ref_and_range (Lisp_Object, int,$/;"	p	signature:(Lisp_Object, int, int *, int *)
CHAR_TABLE_REF_ASCII	lisp.h	/^CHAR_TABLE_REF_ASCII (Lisp_Object ct, ptrdiff_t idx)$/;"	f	signature:(Lisp_Object ct, ptrdiff_t idx)
char_table_set	chartab.c	/^char_table_set (Lisp_Object table, int c, Lisp_Object val)$/;"	f	signature:(Lisp_Object table, int c, Lisp_Object val)
CHAR_TABLE_SET	lisp.h	/^CHAR_TABLE_SET (Lisp_Object ct, int idx, Lisp_Object val)$/;"	f	signature:(Lisp_Object ct, int idx, Lisp_Object val)
char_table_set	lisp.h	/^extern void char_table_set (Lisp_Object, int, Lisp_Object);$/;"	p	signature:(Lisp_Object, int, Lisp_Object)
char_table_set_range	chartab.c	/^char_table_set_range (Lisp_Object table, int from, int to, Lisp_Object val)$/;"	f	signature:(Lisp_Object table, int from, int to, Lisp_Object val)
char_table_set_range	lisp.h	/^extern void char_table_set_range (Lisp_Object, int, int, Lisp_Object);$/;"	p	signature:(Lisp_Object, int, int, Lisp_Object)
char_table_specials	alloc.c	/^  enum char_table_specials char_table_specials;$/;"	m	union:__anon13	typeref:enum:__anon13::char_table_specials	file:	access:public
char_table_specials	lisp.h	/^enum char_table_specials$/;"	g
CHAR_TABLE_STANDARD_SLOTS	lisp.h	/^    CHAR_TABLE_STANDARD_SLOTS = PSEUDOVECSIZE (struct Lisp_Char_Table, extras),$/;"	e	enum:char_table_specials
char_table_translate	character.h	/^char_table_translate (Lisp_Object obj, int ch)$/;"	f	signature:(Lisp_Object obj, int ch)
CHAR_TO_BYTE	buffer.h	344;"	d
CHAR_TO_BYTE8	character.h	98;"	d
CHAR_TO_BYTE_SAFE	character.h	102;"	d
char_to_display	dispextern.h	/^  int char_to_display;$/;"	m	struct:it	access:public
char_to_pixel_size	widget.c	/^char_to_pixel_size (EmacsFrame ew, int char_width, int char_height, Dimension *pixel_width, Dimension *pixel_height)$/;"	f	file:	signature:(EmacsFrame ew, int char_width, int char_height, Dimension *pixel_width, Dimension *pixel_height)
CHAR_VALID_P	character.h	128;"	d
CHAR_VARIATION_SELECTOR_P	character.h	602;"	d
char_width	character.c	/^char_width (int c, struct Lisp_Char_Table *dp)$/;"	f	file:	signature:(int c, struct Lisp_Char_Table *dp)
chase_symlinks	w32.c	/^chase_symlinks (const char *file)$/;"	f	file:	signature:(const char *file)
chase_symlinks	w32.c	/^static char * chase_symlinks (const char *);$/;"	p	file:	signature:(const char *)
chdir	w32.c	50;"	d	file:
CHDIR_OPT	xsmfns.c	82;"	d	file:
chdir_to_default_directory	cygw32.c	/^chdir_to_default_directory (void)$/;"	f	file:	signature:(void)
check	font.h	/^  int (*check) (struct frame *f, struct font *font);$/;"	m	struct:font_driver	access:public
checked	coding.h	/^  int checked;$/;"	m	struct:coding_detection_info	access:public
checkhdr	gmalloc.c	/^checkhdr (const struct hdr *hdr)$/;"	f	file:	signature:(const struct hdr *hdr)
CHECK_ALL	composite.h	191;"	d
CHECK_ALLOCATED	alloc.c	6339;"	d	file:
CHECK_ALLOCATED	alloc.c	6645;"	d	file:
CHECK_ALLOCATED_AND_LIVE	alloc.c	6355;"	d	file:
CHECK_ALLOCATED_AND_LIVE	alloc.c	6646;"	d	file:
CHECK_ALLOCATED_AND_LIVE_SYMBOL	alloc.c	6362;"	d	file:
CHECK_ALL_WINDOWS	window.c	/^  CHECK_ALL_WINDOWS                 \/* Arg is ignored *\/$/;"	e	enum:window_loop	file:
check_all_windows	window.c	/^check_all_windows (void)$/;"	f	signature:(void)
CHECK_ARRAY	lisp.h	/^CHECK_ARRAY (Lisp_Object x, Lisp_Object predicate)$/;"	f	signature:(Lisp_Object x, Lisp_Object predicate)
check_ascii	coding.c	/^check_ascii (struct coding_system *coding)$/;"	f	file:	signature:(struct coding_system *coding)
CHECK_BOOL_VECTOR	lisp.h	/^CHECK_BOOL_VECTOR (Lisp_Object x)$/;"	f	signature:(Lisp_Object x)
CHECK_BORDER	composite.h	190;"	d
CHECK_BOUNDS	scroll.c	267;"	d	file:
CHECK_BUFFER	buffer.h	/^CHECK_BUFFER (Lisp_Object x)$/;"	f	signature:(Lisp_Object x)
check_case_table	casetab.c	/^check_case_table (Lisp_Object obj)$/;"	f	file:	signature:(Lisp_Object obj)
CHECK_CATEGORY	category.h	64;"	d
CHECK_CATEGORY_SET	category.h	73;"	d
check_category_table	category.c	/^check_category_table (Lisp_Object table)$/;"	f	file:	signature:(Lisp_Object table)
check_category_table	category.c	/^static Lisp_Object check_category_table (Lisp_Object table);$/;"	p	file:	signature:(Lisp_Object table)
CHECK_CCL_PROGRAM	ccl.h	82;"	d
CHECK_CHARACTER	character.h	131;"	d
CHECK_CHARACTER_CAR	character.h	134;"	d
CHECK_CHARACTER_CDR	character.h	140;"	d
CHECK_CHARSET	charset.h	343;"	d
CHECK_CHARSET_GET_ATTR	charset.h	365;"	d
CHECK_CHARSET_GET_CHARSET	charset.h	372;"	d
CHECK_CHARSET_GET_ID	charset.h	352;"	d
CHECK_CHAR_TABLE	chartab.c	/^CHECK_CHAR_TABLE (Lisp_Object x)$/;"	f	file:	signature:(Lisp_Object x)
CHECK_CODING_SYSTEM	coding.h	207;"	d
CHECK_CODING_SYSTEM_GET_ID	coding.h	234;"	d
CHECK_CODING_SYSTEM_GET_SPEC	coding.h	218;"	d
CHECK_CONDVAR	thread.h	/^CHECK_CONDVAR (Lisp_Object x)$/;"	f	signature:(Lisp_Object x)
CHECK_CONS	lisp.h	/^CHECK_CONS (Lisp_Object x)$/;"	f	signature:(Lisp_Object x)
check_cons_list	alloc.c	/^check_cons_list (void)$/;"	f	signature:(void)
check_cons_list	lisp.h	/^extern void check_cons_list (void);$/;"	p	signature:(void)
check_cons_list	lisp.h	/^INLINE void (check_cons_list) (void) { lisp_h_check_cons_list (); }$/;"	f	signature:(void)
check_cons_list	lisp.h	372;"	d
check_current_matrix_flags	dispnew.c	/^check_current_matrix_flags (struct window *w)$/;"	f	file:	signature:(struct window *w)
check_display_width	indent.c	/^check_display_width (ptrdiff_t pos, ptrdiff_t col, ptrdiff_t *endpos)$/;"	f	file:	signature:(ptrdiff_t pos, ptrdiff_t col, ptrdiff_t *endpos)
check_errno	w32.c	/^check_errno (void)$/;"	f	file:	signature:(void)
check_executable	fileio.c	/^check_executable (char *filename)$/;"	f	file:	signature:(char *filename)
check_existing	fileio.c	/^check_existing (const char *filename)$/;"	f	file:	signature:(const char *filename)
check_face_name	w32font.c	/^check_face_name (LOGFONT *font, char *full_name)$/;"	f	file:	signature:(LOGFONT *font, char *full_name)
CHECK_FONT	font.h	/^CHECK_FONT (Lisp_Object x)$/;"	f	signature:(Lisp_Object x)
check_fontset_name	fontset.c	/^check_fontset_name (Lisp_Object name, Lisp_Object *frame)$/;"	f	file:	signature:(Lisp_Object name, Lisp_Object *frame)
CHECK_FONT_ENTITY	font.h	/^CHECK_FONT_ENTITY (Lisp_Object x)$/;"	f	signature:(Lisp_Object x)
CHECK_FONT_GET_OBJECT	font.h	/^CHECK_FONT_GET_OBJECT (Lisp_Object x)$/;"	f	signature:(Lisp_Object x)
CHECK_FONT_OBJECT	font.h	/^CHECK_FONT_OBJECT (Lisp_Object x)$/;"	f	signature:(Lisp_Object x)
CHECK_FONT_SPEC	font.h	/^CHECK_FONT_SPEC (Lisp_Object x)$/;"	f	signature:(Lisp_Object x)
check_for_dns	process.c	/^check_for_dns (Lisp_Object proc)$/;"	f	file:	signature:(Lisp_Object proc)
CHECK_FRAME	frame.h	1120;"	d
check_glyph_memory	dispextern.h	/^void check_glyph_memory (void);$/;"	p	signature:(void)
check_glyph_memory	dispnew.c	/^check_glyph_memory (void)$/;"	f	signature:(void)
check_hash_table	fns.c	/^check_hash_table (Lisp_Object obj)$/;"	f	file:	signature:(Lisp_Object obj)
CHECK_HASH_TABLE	fns.c	/^CHECK_HASH_TABLE (Lisp_Object x)$/;"	f	file:	signature:(Lisp_Object x)
CHECK_HEAD	composite.h	187;"	d
check_image_size	image.c	/^check_image_size (struct frame *f, int width, int height)$/;"	f	file:	signature:(struct frame *f, int width, int height)
CHECK_IMPURE	puresize.h	/^CHECK_IMPURE (Lisp_Object obj, void *ptr)$/;"	f	signature:(Lisp_Object obj, void *ptr)
CHECK_IMPURE	puresize.h	110;"	d
CHECK_INFINITE_LOOP	regex.c	1437;"	d	file:
CHECK_INSIDE	composite.h	189;"	d
check_iso_charset_parameter	charset.c	/^check_iso_charset_parameter (Lisp_Object dimension, Lisp_Object chars,$/;"	f	file:	signature:(Lisp_Object dimension, Lisp_Object chars, Lisp_Object final_char)
CHECK_IT	xdisp.c	/^CHECK_IT (struct it *it)$/;"	f	file:	signature:(struct it *it)
check_lface	xfaces.c	/^check_lface (Lisp_Object lface)$/;"	f	file:	signature:(Lisp_Object lface)
check_lface	xfaces.c	1725;"	d	file:
check_lface_attrs	xfaces.c	/^check_lface_attrs (Lisp_Object attrs[LFACE_VECTOR_SIZE])$/;"	f	file:	signature:(Lisp_Object attrs[LFACE_VECTOR_SIZE])
check_lface_attrs	xfaces.c	1724;"	d	file:
CHECK_LISP_OBJECT_TYPE	config.h	64;"	d
CHECK_LIST	lisp.h	/^CHECK_LIST (Lisp_Object x)$/;"	f	signature:(Lisp_Object x)
CHECK_LIST_END	lisp.h	/^CHECK_LIST_END (Lisp_Object x, Lisp_Object y)$/;"	f	signature:(Lisp_Object x, Lisp_Object y)
CHECK_LIVE	alloc.c	6348;"	d	file:
CHECK_LIVE	alloc.c	6644;"	d	file:
CHECK_LIVE_FRAME	frame.h	1123;"	d
CHECK_LIVE_WINDOW	window.h	1086;"	d
check_lseek	unexhp9k800.c	/^check_lseek (int fd, off_t offset, int whence)$/;"	f	file:	signature:(int fd, off_t offset, int whence)
check_mark	callint.c	/^check_mark (bool for_region)$/;"	f	file:	signature:(bool for_region)
CHECK_MARKER	marker.c	/^CHECK_MARKER (Lisp_Object x)$/;"	f	file:	signature:(Lisp_Object x)
check_markers	insdel.c	/^check_markers (void)$/;"	f	file:	signature:(void)
check_markers	insdel.c	81;"	d	file:
CHECK_MATRIX	dispextern.h	757;"	d
CHECK_MATRIX	dispextern.h	759;"	d
check_matrix_pointers	dispnew.c	/^check_matrix_pointers (struct glyph_matrix *window_matrix,$/;"	f	file:	signature:(struct glyph_matrix *window_matrix, struct glyph_matrix *frame_matrix)
check_matrix_pointers	dispnew.c	/^static void check_matrix_pointers (struct glyph_matrix *,$/;"	p	file:	signature:(struct glyph_matrix *, struct glyph_matrix *)
check_matrix_pointer_lossage	dispextern.h	/^void check_matrix_pointer_lossage (struct glyph_matrix *);$/;"	p	signature:(struct glyph_matrix *)
check_matrix_pointer_lossage	dispnew.c	/^check_matrix_pointer_lossage (struct glyph_matrix *matrix)$/;"	f	signature:(struct glyph_matrix *matrix)
check_memory_full	gnutls.c	/^check_memory_full (int err)$/;"	f	file:	signature:(int err)
check_memory_limits	vm-limit.c	/^check_memory_limits (void)$/;"	f	file:	signature:(void)
check_message_stack	lisp.h	/^extern void check_message_stack (void);$/;"	p	signature:(void)
check_message_stack	xdisp.c	/^check_message_stack (void)$/;"	f	signature:(void)
check_minibuf_window	frame.c	/^check_minibuf_window (Lisp_Object frame, int select)$/;"	f	file:	signature:(Lisp_Object frame, int select)
CHECK_MUTEX	thread.h	/^CHECK_MUTEX (Lisp_Object x)$/;"	f	signature:(Lisp_Object x)
CHECK_NATNUM	lisp.h	/^CHECK_NATNUM (Lisp_Object x)$/;"	f	signature:(Lisp_Object x)
CHECK_NATNUM_CAR	coding.c	/^CHECK_NATNUM_CAR (Lisp_Object x)$/;"	f	file:	signature:(Lisp_Object x)
CHECK_NATNUM_CDR	coding.c	/^CHECK_NATNUM_CDR (Lisp_Object x)$/;"	f	file:	signature:(Lisp_Object x)
CHECK_NUMBER	lisp.h	/^(CHECK_NUMBER) (Lisp_Object x)$/;"	f	signature:(Lisp_Object x)
CHECK_NUMBER	lisp.h	351;"	d
CHECK_NUMBER_CAR	lisp.h	/^CHECK_NUMBER_CAR (Lisp_Object x)$/;"	f	signature:(Lisp_Object x)
CHECK_NUMBER_CDR	lisp.h	/^CHECK_NUMBER_CDR (Lisp_Object x)$/;"	f	signature:(Lisp_Object x)
CHECK_NUMBER_COERCE_MARKER	lisp.h	2809;"	d
CHECK_NUMBER_OR_FLOAT	lisp.h	/^CHECK_NUMBER_OR_FLOAT (Lisp_Object x)$/;"	f	signature:(Lisp_Object x)
CHECK_NUMBER_OR_FLOAT_COERCE_MARKER	lisp.h	2829;"	d
check_obarray	lisp.h	/^extern Lisp_Object check_obarray (Lisp_Object);$/;"	p	signature:(Lisp_Object)
check_obarray	lread.c	/^check_obarray (Lisp_Object obarray)$/;"	f	signature:(Lisp_Object obarray)
CHECK_OVERLAY	buffer.c	/^CHECK_OVERLAY (Lisp_Object x)$/;"	f	file:	signature:(Lisp_Object x)
check_point_in_composition	xdisp.c	/^check_point_in_composition (struct buffer *prev_buf, ptrdiff_t prev_pt,$/;"	f	file:	signature:(struct buffer *prev_buf, ptrdiff_t prev_pt, struct buffer *buf, ptrdiff_t pt)
CHECK_PROCESS	process.h	/^CHECK_PROCESS (Lisp_Object x)$/;"	f	signature:(Lisp_Object x)
check_pure_size	alloc.c	/^check_pure_size (void)$/;"	f	signature:(void)
check_pure_size	lisp.h	/^extern void check_pure_size (void);$/;"	p	signature:(void)
CHECK_RANGED_INTEGER	lisp.h	2790;"	d
CHECK_RECORD	lisp.h	/^CHECK_RECORD (Lisp_Object x)$/;"	f	signature:(Lisp_Object x)
check_sblock	alloc.c	/^check_sblock (struct sblock *b)$/;"	f	file:	signature:(struct sblock *b)
CHECK_SCNHDR	unexaix.c	225;"	d	file:
CHECK_STRING	lisp.h	/^CHECK_STRING (Lisp_Object x)$/;"	f	signature:(Lisp_Object x)
check_string_bytes	alloc.c	/^check_string_bytes (bool all_p)$/;"	f	file:	signature:(bool all_p)
check_string_bytes	alloc.c	1875;"	d	file:
check_string_bytes_count	alloc.c	/^static int check_string_bytes_count;$/;"	v	file:
CHECK_STRING_CAR	lisp.h	/^CHECK_STRING_CAR (Lisp_Object x)$/;"	f	signature:(Lisp_Object x)
check_string_free_list	alloc.c	/^check_string_free_list (void)$/;"	f	file:	signature:(void)
check_string_free_list	alloc.c	1899;"	d	file:
CHECK_STRING_OR_BUFFER	textprop.c	/^CHECK_STRING_OR_BUFFER (Lisp_Object x)$/;"	f	file:	signature:(Lisp_Object x)
CHECK_SUBR	data.c	/^CHECK_SUBR (Lisp_Object x)$/;"	f	file:	signature:(Lisp_Object x)
CHECK_SYMBOL	lisp.h	/^(CHECK_SYMBOL) (Lisp_Object x)$/;"	f	signature:(Lisp_Object x)
CHECK_SYMBOL	lisp.h	352;"	d
check_syntax_table	syntax.c	/^check_syntax_table (Lisp_Object obj)$/;"	f	file:	signature:(Lisp_Object obj)
CHECK_TAIL	composite.h	188;"	d
CHECK_THREAD	thread.h	/^CHECK_THREAD (Lisp_Object x)$/;"	f	signature:(Lisp_Object x)
check_time_validity	editfns.c	/^check_time_validity (int validity)$/;"	f	file:	signature:(int validity)
check_tm_member	editfns.c	/^check_tm_member (Lisp_Object obj, int offset)$/;"	f	file:	signature:(Lisp_Object obj, int offset)
check_translation	editfns.c	/^check_translation (ptrdiff_t pos, ptrdiff_t pos_byte, ptrdiff_t end,$/;"	f	file:	signature:(ptrdiff_t pos, ptrdiff_t pos_byte, ptrdiff_t end, Lisp_Object val)
check_translation	editfns.c	/^static Lisp_Object check_translation (ptrdiff_t, ptrdiff_t, ptrdiff_t,$/;"	p	file:
CHECK_TYPE	lisp.h	/^(CHECK_TYPE) (int ok, Lisp_Object predicate, Lisp_Object x)$/;"	f	signature:(int ok, Lisp_Object predicate, Lisp_Object x)
CHECK_TYPE	lisp.h	353;"	d
CHECK_TYPE_RANGED_INTEGER	lisp.h	2801;"	d
CHECK_USER_PTR	emacs-module.c	/^CHECK_USER_PTR (Lisp_Object obj)$/;"	f	file:	signature:(Lisp_Object obj)
check_utf_8	coding.c	/^check_utf_8 (struct coding_system *coding)$/;"	f	file:	signature:(struct coding_system *coding)
CHECK_VALID_WINDOW	window.h	1078;"	d
CHECK_VECTOR	lisp.h	/^CHECK_VECTOR (Lisp_Object x)$/;"	f	signature:(Lisp_Object x)
CHECK_VECTOR_OR_CHAR_TABLE	keymap.c	/^CHECK_VECTOR_OR_CHAR_TABLE (Lisp_Object x)$/;"	f	file:	signature:(Lisp_Object x)
CHECK_VECTOR_OR_STRING	lisp.h	/^CHECK_VECTOR_OR_STRING (Lisp_Object x)$/;"	f	signature:(Lisp_Object x)
check_vec_index	emacs-module.c	/^check_vec_index (Lisp_Object lvec, ptrdiff_t i)$/;"	f	file:	signature:(Lisp_Object lvec, ptrdiff_t i)
check_w32_winkey_state	w32fns.c	/^check_w32_winkey_state (int vkey)$/;"	f	signature:(int vkey)
check_w32_winkey_state	w32term.h	/^extern int check_w32_winkey_state (int);$/;"	p	signature:(int)
CHECK_WINDOW	window.h	/^CHECK_WINDOW (Lisp_Object x)$/;"	f	signature:(Lisp_Object x)
check_windows_init_file	w32.c	/^check_windows_init_file (void)$/;"	f	signature:(void)
check_windows_init_file	w32.h	/^extern void check_windows_init_file (void);$/;"	p	signature:(void)
CHECK_WINDOW_CONFIGURATION	window.c	/^CHECK_WINDOW_CONFIGURATION (Lisp_Object x)$/;"	f	file:	signature:(Lisp_Object x)
check_window_containing	window.c	/^check_window_containing (struct window *w, void *user_data)$/;"	f	file:	signature:(struct window *w, void *user_data)
check_window_data	window.c	/^struct check_window_data$/;"	s	file:
check_window_data::part	window.c	/^  enum window_part *part;$/;"	m	struct:check_window_data	typeref:enum:check_window_data::window_part	file:	access:public
check_window_data::window	window.c	/^  Lisp_Object *window;$/;"	m	struct:check_window_data	file:	access:public
check_window_data::x	window.c	/^  int x, y;$/;"	m	struct:check_window_data	file:	access:public
check_window_data::y	window.c	/^  int x, y;$/;"	m	struct:check_window_data	file:	access:public
CHECK_WINDOW_END	xdisp.c	/^CHECK_WINDOW_END (struct window *w)$/;"	f	file:	signature:(struct window *w)
check_window_matrix_pointers	dispnew.c	/^check_window_matrix_pointers (struct window *w)$/;"	f	file:	signature:(struct window *w)
check_window_system	frame.c	/^check_window_system (struct frame *f)$/;"	f	signature:(struct frame *f)
check_window_system	frame.h	/^extern WINDOW_SYSTEM_RETURN void check_window_system (struct frame *);$/;"	p	signature:(struct frame *)
check_writable	fileio.c	/^check_writable (const char *filename, int amode)$/;"	f	file:	signature:(const char *filename, int amode)
CHECK_XWIDGET	xwidget.h	96;"	d
CHECK_XWIDGET_VIEW	xwidget.h	104;"	d
check_x_display_info	dispextern.h	/^extern Display_Info *check_x_display_info (Lisp_Object);$/;"	p	signature:(Lisp_Object)
check_x_display_info	w32fns.c	/^check_x_display_info (Lisp_Object object)$/;"	f	signature:(Lisp_Object object)
check_x_display_info	xfns.c	/^check_x_display_info (Lisp_Object object)$/;"	f	signature:(Lisp_Object object)
childp	process.h	/^    Lisp_Object childp;$/;"	m	struct:Lisp_Process	access:public
children	emacsgtkfixed.c	/^  GList *children;$/;"	m	struct:GtkFixedPrivateL	file:	access:public
CHILD_ACTIVE	w32.h	113;"	d
child_process	w32.h	/^} child_process;$/;"	t	typeref:struct:_child_process
child_procs	w32proc.c	/^child_process child_procs[ MAX_CHILDREN ];$/;"	v
child_proc_count	w32proc.c	/^int child_proc_count = 0;$/;"	v
child_setup	callproc.c	/^child_setup (int in, int out, int err, char **new_argv, bool set_pgrp,$/;"	f	signature:(int in, int out, int err, char **new_argv, bool set_pgrp, Lisp_Object current_dir)
child_setup	lisp.h	/^extern CHILD_SETUP_TYPE child_setup (int, int, int, char **, bool, Lisp_Object);$/;"	p	signature:(int, int, int, char **, bool, Lisp_Object)
child_setup_tty	lisp.h	/^extern void child_setup_tty (int);$/;"	p	signature:(int)
child_setup_tty	sysdep.c	/^child_setup_tty (int out)$/;"	f	signature:(int out)
CHILD_SETUP_TYPE	lisp.h	4173;"	d
CHILD_SETUP_TYPE	lisp.h	4175;"	d
child_status_changed	sysdep.c	/^child_status_changed (pid_t child, int *status, int options)$/;"	f	signature:(pid_t child, int *status, int options)
child_status_changed	syswait.h	/^extern pid_t child_status_changed (pid_t, int *, int);$/;"	p	signature:(pid_t, int *, int)
chmod	w32.c	51;"	d	file:
choose_face_font	dispextern.h	/^char *choose_face_font (struct frame *, Lisp_Object *, Lisp_Object,$/;"	p	signature:(struct frame *, Lisp_Object *, Lisp_Object, int *)
choose_format	sound.c	/^  void (* choose_format) (struct sound_device *sd,$/;"	m	struct:sound_device	file:	access:public
choose_minibuf_frame	minibuf.c	/^choose_minibuf_frame (void)$/;"	f	file:	signature:(void)
choose_write_coding_system	fileio.c	/^choose_write_coding_system (Lisp_Object start, Lisp_Object end, Lisp_Object filename,$/;"	f	file:	signature:(Lisp_Object start, Lisp_Object end, Lisp_Object filename, Lisp_Object append, Lisp_Object visit, Lisp_Object lockname, struct coding_system *coding)
chr	w32.h	/^  char                chr;$/;"	m	struct:_child_process	access:public
chunks_free	gmalloc.c	/^    size_t chunks_free;	\/* Chunks in the free list. *\/$/;"	m	struct:mstats	file:	access:public
chunks_used	gmalloc.c	/^    size_t chunks_used;	\/* Chunks allocated by the user. *\/$/;"	m	struct:mstats	file:	access:public
chunk_data	sound.c	/^  u_int32_t chunk_data;$/;"	m	struct:wav_header	file:	access:public
chunk_format	sound.c	/^  u_int32_t chunk_format;$/;"	m	struct:wav_header	file:	access:public
chunk_length	sound.c	/^  u_int32_t chunk_length;$/;"	m	struct:wav_header	file:	access:public
chunk_type	sound.c	/^  u_int32_t chunk_type;$/;"	m	struct:wav_header	file:	access:public
ch_len	dispextern.h	/^  ptrdiff_t ch_len;		\/* its length in bytes *\/$/;"	m	struct:bidi_it	access:public
cinfo	image.c	/^  struct jpeg_decompress_struct cinfo;$/;"	m	struct:my_jpeg_error_mgr	typeref:struct:my_jpeg_error_mgr::jpeg_decompress_struct	file:	access:public
circular_list	data.c	/^circular_list (Lisp_Object list)$/;"	f	signature:(Lisp_Object list)
circular_list	lisp.h	/^extern _Noreturn void circular_list (Lisp_Object);$/;"	p	signature:(Lisp_Object)
class	frame.c	/^  (Lisp_Object attribute, Lisp_Object class, Lisp_Object component,$/;"	v
class	w32fns.c	/^  (Lisp_Object class, Lisp_Object name)$/;"	v
class	xfaces.c	/^  (Lisp_Object resource, Lisp_Object class, Lisp_Object frame)$/;"	v
class	xfns.c	/^  int class;$/;"	m	struct:visual_class	file:	access:public
cleanup_vector	alloc.c	/^cleanup_vector (struct Lisp_Vector *vector)$/;"	f	file:	signature:(struct Lisp_Vector *vector)
cleanup_widget_value_tree	xmenu.c	/^cleanup_widget_value_tree (void *arg)$/;"	f	file:	signature:(void *arg)
clean_local_selection_data	xselect.c	/^clean_local_selection_data (Lisp_Object obj)$/;"	f	file:	signature:(Lisp_Object obj)
clean_up_dialog	xfns.c	/^clean_up_dialog (void)$/;"	f	file:	signature:(void)
clean_up_file_dialog	xfns.c	/^clean_up_file_dialog (void *arg)$/;"	f	file:	signature:(void *arg)
clearerr_unlocked	sysstdio.h	38;"	d
CLEARTYPE_NATURAL_QUALITY	w32font.c	43;"	d	file:
CLEARTYPE_QUALITY	w32font.c	40;"	d	file:
clear_charpos_cache	lisp.h	/^extern void clear_charpos_cache (struct buffer *);$/;"	p	signature:(struct buffer *)
clear_charpos_cache	marker.c	/^clear_charpos_cache (struct buffer *b)$/;"	f	signature:(struct buffer *b)
clear_current_matrices	dispextern.h	/^void clear_current_matrices (struct frame *f);$/;"	p	signature:(struct frame *f)
clear_current_matrices	dispnew.c	/^clear_current_matrices (register struct frame *f)$/;"	f	signature:(register struct frame *f)
clear_desired_matrices	dispextern.h	/^void clear_desired_matrices (struct frame *);$/;"	p	signature:(struct frame *)
clear_desired_matrices	dispnew.c	/^clear_desired_matrices (register struct frame *f)$/;"	f	signature:(register struct frame *f)
clear_end_of_line	dispextern.h	/^  void (*clear_end_of_line) (struct window *w, struct glyph_row *row,$/;"	m	struct:redisplay_interface	access:public
clear_end_of_line	dispextern.h	/^extern void clear_end_of_line (struct frame *, int);$/;"	p	signature:(struct frame *, int)
clear_end_of_line	terminal.c	/^clear_end_of_line (struct frame *f, int first_unused_hpos)$/;"	f	signature:(struct frame *f, int first_unused_hpos)
clear_end_of_line_hook	termhooks.h	/^  void (*clear_end_of_line_hook) (struct frame *, int);$/;"	m	struct:terminal	access:public
clear_event	keyboard.c	/^clear_event (union buffered_input_event *event)$/;"	f	file:	signature:(union buffered_input_event *event)
clear_face_cache	dispextern.h	/^void clear_face_cache (bool);$/;"	p	signature:(bool)
clear_face_cache	xfaces.c	/^clear_face_cache (bool clear_fonts_p)$/;"	f	signature:(bool clear_fonts_p)
clear_face_cache_count	xdisp.c	/^static int clear_face_cache_count;$/;"	v	file:
CLEAR_FACE_CACHE_COUNT	xdisp.c	741;"	d	file:
clear_face_gcs	xfaces.c	/^clear_face_gcs (struct face_cache *c)$/;"	f	file:	signature:(struct face_cache *c)
clear_face_gcs	xfaces.c	/^static void clear_face_gcs (struct face_cache *);$/;"	p	file:	signature:(struct face_cache *)
clear_font_cache	font.c	/^clear_font_cache (struct frame *f)$/;"	f	signature:(struct frame *f)
clear_font_cache	font.h	/^extern void clear_font_cache (struct frame *);$/;"	p	signature:(struct frame *)
clear_font_table_count	xfaces.c	/^static int clear_font_table_count;$/;"	v	file:
CLEAR_FONT_TABLE_COUNT	xfaces.c	303;"	d	file:
CLEAR_FONT_TABLE_NFONTS	xfaces.c	304;"	d	file:
clear_frame	dispextern.h	/^extern void clear_frame (struct frame *);$/;"	p	signature:(struct frame *)
clear_frame	terminal.c	/^clear_frame (struct frame *f)$/;"	f	signature:(struct frame *f)
clear_frame_area	dispextern.h	/^  void (*clear_frame_area) (struct frame *f, int x, int y,$/;"	m	struct:redisplay_interface	access:public
clear_frame_hook	termhooks.h	/^  void (*clear_frame_hook) (struct frame *);$/;"	m	struct:terminal	access:public
clear_garbaged_frames	xdisp.c	/^clear_garbaged_frames (void)$/;"	f	file:	signature:(void)
clear_glyph_matrix	dispextern.h	/^void clear_glyph_matrix (struct glyph_matrix *);$/;"	p	signature:(struct glyph_matrix *)
clear_glyph_matrix	dispnew.c	/^clear_glyph_matrix (struct glyph_matrix *matrix)$/;"	f	signature:(struct glyph_matrix *matrix)
clear_glyph_matrix_rows	dispextern.h	/^void clear_glyph_matrix_rows (struct glyph_matrix *, int, int);$/;"	p	signature:(struct glyph_matrix *, int, int)
clear_glyph_matrix_rows	dispnew.c	/^clear_glyph_matrix_rows (struct glyph_matrix *matrix, int start, int end)$/;"	f	signature:(struct glyph_matrix *matrix, int start, int end)
clear_glyph_row	dispextern.h	/^void clear_glyph_row (struct glyph_row *);$/;"	p	signature:(struct glyph_row *)
clear_glyph_row	dispnew.c	/^clear_glyph_row (struct glyph_row *row)$/;"	f	signature:(struct glyph_row *row)
clear_image_cache	image.c	/^clear_image_cache (struct frame *f, Lisp_Object filter)$/;"	f	file:	signature:(struct frame *f, Lisp_Object filter)
clear_image_caches	dispextern.h	/^void clear_image_caches (Lisp_Object);$/;"	p	signature:(Lisp_Object)
clear_image_caches	image.c	/^clear_image_caches (Lisp_Object filter)$/;"	f	signature:(Lisp_Object filter)
clear_image_cache_count	xdisp.c	/^static int clear_image_cache_count;$/;"	v	file:
CLEAR_IMAGE_CACHE_COUNT	xdisp.c	747;"	d	file:
CLEAR_IMAGE_COLORS	image.c	1301;"	d	file:
CLEAR_IMAGE_MASK	image.c	1300;"	d	file:
CLEAR_IMAGE_PIXMAP	image.c	1299;"	d	file:
clear_input_pending	keyboard.c	/^clear_input_pending (void)$/;"	f	signature:(void)
clear_input_pending	keyboard.h	/^extern void clear_input_pending (void);$/;"	p	signature:(void)
clear_message	lisp.h	/^extern void clear_message (bool, bool);$/;"	p	signature:(bool, bool)
clear_message	xdisp.c	/^clear_message (bool current_p, bool last_displayed_p)$/;"	f	signature:(bool current_p, bool last_displayed_p)
clear_mouse_face	dispextern.h	/^extern bool clear_mouse_face (Mouse_HLInfo *);$/;"	p	signature:(Mouse_HLInfo *)
clear_mouse_face	xdisp.c	/^clear_mouse_face (Mouse_HLInfo *hlinfo)$/;"	f	signature:(Mouse_HLInfo *hlinfo)
CLEAR_RANGE_TABLE_WORK_USED	regex.c	1779;"	d	file:
clear_regexp_cache	lisp.h	/^extern void clear_regexp_cache (void);$/;"	p	signature:(void)
clear_regexp_cache	search.c	/^clear_regexp_cache (void)$/;"	f	signature:(void)
clear_string_char_byte_cache	fns.c	/^clear_string_char_byte_cache (void)$/;"	f	signature:(void)
clear_string_char_byte_cache	lisp.h	/^extern void clear_string_char_byte_cache (void);$/;"	p	signature:(void)
clear_to_end	dispextern.h	/^extern void clear_to_end (struct frame *);$/;"	p	signature:(struct frame *)
clear_to_end	terminal.c	/^clear_to_end (struct frame *f)$/;"	f	signature:(struct frame *f)
clear_to_end_hook	termhooks.h	/^  void (*clear_to_end_hook) (struct frame *);$/;"	m	struct:terminal	access:public
clear_tty_hooks	term.c	/^clear_tty_hooks (struct terminal *terminal)$/;"	f	file:	signature:(struct terminal *terminal)
clear_tty_hooks	term.c	/^static void clear_tty_hooks (struct terminal *terminal);$/;"	p	file:	signature:(struct terminal *terminal)
clear_unwind_protect	eval.c	/^clear_unwind_protect (ptrdiff_t count)$/;"	f	signature:(ptrdiff_t count)
clear_unwind_protect	lisp.h	/^extern void clear_unwind_protect (ptrdiff_t);$/;"	p	signature:(ptrdiff_t)
clear_waiting_for_input	keyboard.c	/^clear_waiting_for_input (void)$/;"	f	signature:(void)
clear_waiting_for_input	keyboard.h	/^extern void clear_waiting_for_input (void);$/;"	p	signature:(void)
clear_waiting_thread_info	process.c	/^clear_waiting_thread_info (void)$/;"	f	file:	signature:(void)
clear_window_matrices	dispnew.c	/^clear_window_matrices (struct window *w, bool desired_p)$/;"	f	file:	signature:(struct window *w, bool desired_p)
clear_window_matrices	dispnew.c	/^static void clear_window_matrices (struct window *, bool);$/;"	p	file:	signature:(struct window *, bool)
clear_window_mouse_face	dispextern.h	/^  void (*clear_window_mouse_face) (struct window *w);$/;"	m	struct:redisplay_interface	access:public
click_modifier	termhooks.h	/^  click_modifier=   8,		\/* See drag_modifier.  *\/$/;"	e	enum:__anon72
click_position	keymap.c	/^click_position (Lisp_Object position)$/;"	f	file:	signature:(Lisp_Object position)
client_data	atimer.h	/^  void *client_data;$/;"	m	struct:atimer	access:public
client_id	xsmfns.c	/^static char *client_id;$/;"	v	file:
client_leader_window	xterm.h	/^  Window client_leader_window;$/;"	m	struct:x_display_info	access:public
clip	dispextern.h	/^  NativeRectangle clip[2];$/;"	m	struct:glyph_string	access:public
clip	dispextern.h	/^  XRectangle *clip;$/;"	m	struct:glyph_row	access:public
ClipboardSequence_Proc	w32term.h	/^typedef DWORD (WINAPI * ClipboardSequence_Proc) (void);$/;"	t
clipboard_owner	w32select.c	/^static HWND clipboard_owner;$/;"	v	file:
clip_bottom	xwidget.h	/^  int clip_bottom;$/;"	m	struct:xwidget_view	access:public
clip_changed	buffer.h	/^  bool_bf clip_changed : 1;$/;"	m	struct:buffer	access:public
clip_head	dispextern.h	/^  struct glyph_string *clip_head, *clip_tail;$/;"	m	struct:glyph_string	typeref:struct:glyph_string::glyph_string	access:public
clip_left	xwidget.h	/^  int clip_left;$/;"	m	struct:xwidget_view	access:public
clip_rects	xterm.h	/^  XRectangle clip_rects[MAX_CLIP_RECTS];$/;"	m	struct:x_gc_ext_data	access:public
clip_right	xwidget.h	/^  int clip_right;$/;"	m	struct:xwidget_view	access:public
clip_tail	dispextern.h	/^  struct glyph_string *clip_head, *clip_tail;$/;"	m	struct:glyph_string	typeref:struct:glyph_string::	access:public
CLIP_TEXT_POS_FROM_MARKER	dispextern.h	229;"	d
clip_top	xwidget.h	/^  int clip_top;$/;"	m	struct:xwidget_view	access:public
clip_to_bounds	lisp.h	/^clip_to_bounds (ptrdiff_t lower, EMACS_INT num, ptrdiff_t upper)$/;"	f	signature:(ptrdiff_t lower, EMACS_INT num, ptrdiff_t upper)
clobbered_eassert	eval.c	1075;"	d	file:
clocks_min	w32proc.c	/^static ULONGLONG clocks_min;$/;"	v	file:
clone_file	fileio.c	/^clone_file (int dest, int source)$/;"	f	file:	signature:(int dest, int source)
clone_per_buffer_values	buffer.c	/^clone_per_buffer_values (struct buffer *from, struct buffer *to)$/;"	f	file:	signature:(struct buffer *from, struct buffer *to)
close	font.h	/^  void (*close) (struct font *font);$/;"	m	struct:font_driver	access:public
close	sound.c	/^  void (* close) (struct sound_device *sd);$/;"	m	struct:sound_device	file:	access:public
close	w32.c	62;"	d	file:
close_bracket_char	bidi.c	/^  int close_bracket_char;$/;"	m	struct:bpa_stack_entry	file:	access:public
close_file_data	unexw32.c	/^close_file_data (file_data *p_file)$/;"	f	signature:(file_data *p_file)
close_file_data	w32heap.h	/^void close_file_data (file_data *p_file);$/;"	p	signature:(file_data *p_file)
close_file_unwind	fileio.c	/^close_file_unwind (int fd)$/;"	f	signature:(int fd)
close_file_unwind	lisp.h	/^extern void close_file_unwind (int);$/;"	p	signature:(int)
close_gpm	term.c	/^close_gpm (int fd)$/;"	f	signature:(int fd)
close_gpm	termhooks.h	/^extern void close_gpm (int gpm_fd);$/;"	p	signature:(int gpm_fd)
close_infile_unwind	lread.c	/^close_infile_unwind (void *arg)$/;"	f	file:	signature:(void *arg)
close_on_exec	process.c	/^close_on_exec (int fd)$/;"	f	file:	signature:(int fd)
close_output_streams	emacs.c	/^close_output_streams (void)$/;"	f	file:	signature:(void)
close_process_fd	process.c	/^close_process_fd (int *fd_addr)$/;"	f	file:	signature:(int *fd_addr)
close_unc_volume	w32.c	/^close_unc_volume (HANDLE henum)$/;"	f	file:	signature:(HANDLE henum)
close_unc_volume	w32.c	/^static void   close_unc_volume (HANDLE);$/;"	p	file:
CLSIZE	getpagesize.h	35;"	d
cl_data	gtkutil.h	/^  xg_menu_cb_data *cl_data;$/;"	m	struct:xg_menu_item_cb_data_	access:public
cm	cm.h	/^struct cm$/;"	s
cm::cc_abs	cm.h	/^    int cc_abs;$/;"	m	struct:cm	access:public
cm::cc_abs	cm.h	/^    struct parmcap cc_abs;	\/* absolute (cm) *\/$/;"	m	struct:cm	typeref:struct:cm::parmcap	access:public
cm::cc_backtab	cm.h	/^    int cc_backtab;$/;"	m	struct:cm	access:public
cm::cc_cr	cm.h	/^    int cc_cr;$/;"	m	struct:cm	access:public
cm::cc_down	cm.h	/^    int cc_down;		\/* etc. *\/$/;"	m	struct:cm	access:public
cm::cc_habs	cm.h	/^    int cc_habs;$/;"	m	struct:cm	access:public
cm::cc_habs	cm.h	/^    struct parmcap cc_habs;	\/* horizontal absolute (ch) *\/$/;"	m	struct:cm	typeref:struct:cm::parmcap	access:public
cm::cc_home	cm.h	/^    int cc_home;$/;"	m	struct:cm	access:public
cm::cc_left	cm.h	/^    int cc_left;$/;"	m	struct:cm	access:public
cm::cc_ll	cm.h	/^    int cc_ll;$/;"	m	struct:cm	access:public
cm::cc_multidown	cm.h	/^    struct parmcap cc_multidown; \/* multiple down (DO) *\/$/;"	m	struct:cm	typeref:struct:cm::parmcap	access:public
cm::cc_multileft	cm.h	/^    struct parmcap cc_multileft; \/* multiple left (LE) *\/$/;"	m	struct:cm	typeref:struct:cm::parmcap	access:public
cm::cc_multiright	cm.h	/^    struct parmcap cc_multiright; \/* multiple right (RI) *\/$/;"	m	struct:cm	typeref:struct:cm::parmcap	access:public
cm::cc_multiup	cm.h	/^    struct parmcap cc_multiup;	\/* multiple up (UP) *\/$/;"	m	struct:cm	typeref:struct:cm::parmcap	access:public
cm::cc_right	cm.h	/^    int cc_right;$/;"	m	struct:cm	access:public
cm::cc_tab	cm.h	/^    int cc_tab;$/;"	m	struct:cm	access:public
cm::cc_up	cm.h	/^    int cc_up;			\/* cost for up *\/$/;"	m	struct:cm	access:public
cm::cc_vabs	cm.h	/^    int cc_vabs;$/;"	m	struct:cm	access:public
cm::cc_vabs	cm.h	/^    struct parmcap cc_vabs;	\/* vertical absolute (cv) *\/$/;"	m	struct:cm	typeref:struct:cm::parmcap	access:public
cm::cm_abs	cm.h	/^    char *cm_abs;		\/* absolute (cm) *\/$/;"	m	struct:cm	access:public
cm::cm_autolf	cm.h	/^    bool_bf cm_autolf : 1;	\/* \\r performs a \\r\\n (rn) *\/$/;"	m	struct:cm	access:public
cm::cm_autowrap	cm.h	/^    bool_bf cm_autowrap : 1;	\/* autowrap flag (am) *\/$/;"	m	struct:cm	access:public
cm::cm_backtab	cm.h	/^    const char *cm_backtab;	\/* backtab (bt) *\/$/;"	m	struct:cm	access:public
cm::cm_cols	cm.h	/^    int cm_cols;		\/* number of cols on screen (co) *\/$/;"	m	struct:cm	access:public
cm::cm_cr	cm.h	/^    const char *cm_cr;		\/* carriage return (cr) *\/$/;"	m	struct:cm	access:public
cm::cm_curX	cm.h	/^    int cm_curX;			\/* Current column *\/$/;"	m	struct:cm	access:public
cm::cm_curY	cm.h	/^    int cm_curY;			\/* Current row *\/$/;"	m	struct:cm	access:public
cm::cm_down	cm.h	/^    const char *cm_down;	\/* down (do) *\/$/;"	m	struct:cm	access:public
cm::cm_ds	cm.h	/^    const char *cm_ds;		\/* "don't send" string (ds) *\/$/;"	m	struct:cm	access:public
cm::cm_habs	cm.h	/^    const char *cm_habs;	\/* horizontal absolute (ch) *\/$/;"	m	struct:cm	access:public
cm::cm_home	cm.h	/^    const char *cm_home;	\/* home (ho) *\/$/;"	m	struct:cm	access:public
cm::cm_left	cm.h	/^    const char *cm_left;	\/* left (le) *\/$/;"	m	struct:cm	access:public
cm::cm_ll	cm.h	/^    const char *cm_ll;		\/* last line (ll) *\/$/;"	m	struct:cm	access:public
cm::cm_losewrap	cm.h	/^    bool_bf cm_losewrap : 1;	\/* if reach right margin, forget cursor$/;"	m	struct:cm	access:public
cm::cm_magicwrap	cm.h	/^    bool_bf cm_magicwrap : 1;	\/* VT-100: cursor stays in last col but$/;"	m	struct:cm	access:public
cm::cm_multidown	cm.h	/^    const char *cm_multidown;	\/* multiple down (DO) *\/$/;"	m	struct:cm	access:public
cm::cm_multileft	cm.h	/^    const char *cm_multileft;	\/* multiple left (LE) *\/$/;"	m	struct:cm	access:public
cm::cm_multiright	cm.h	/^    const char *cm_multiright;	\/* multiple right (RI) *\/$/;"	m	struct:cm	access:public
cm::cm_multiup	cm.h	/^    const char *cm_multiup;	\/* multiple up (UP) *\/$/;"	m	struct:cm	access:public
cm::cm_right	cm.h	/^    const char *cm_right;	\/* right (nd) *\/$/;"	m	struct:cm	access:public
cm::cm_rows	cm.h	/^    int cm_rows;		\/* number of rows on screen (li) *\/$/;"	m	struct:cm	access:public
cm::cm_tab	cm.h	/^    const char *cm_tab;		\/* tab (ta) *\/$/;"	m	struct:cm	access:public
cm::cm_tabwidth	cm.h	/^    int cm_tabwidth;		\/* tab width (it) *\/$/;"	m	struct:cm	access:public
cm::cm_up	cm.h	/^    const char *cm_up;		\/* up (up) *\/$/;"	m	struct:cm	access:public
cm::cm_usetabs	cm.h	/^    bool_bf cm_usetabs : 1;	\/* if set, use tabs *\/$/;"	m	struct:cm	access:public
cm::cm_vabs	cm.h	/^    const char *cm_vabs;	\/* vertical absolute (cv) *\/$/;"	m	struct:cm	access:public
cmap	xterm.h	/^  Colormap cmap;$/;"	m	struct:x_display_info	access:public
cmat	cm.h	147;"	d
cmcheckmagic	cm.c	/^cmcheckmagic (struct tty_display_info *tty)$/;"	f	signature:(struct tty_display_info *tty)
cmcheckmagic	cm.h	/^extern void cmcheckmagic (struct tty_display_info *);$/;"	p	signature:(struct tty_display_info *)
cmcheckmagic	w32console.c	/^cmcheckmagic (struct tty_display_info *tty)$/;"	f	signature:(struct tty_display_info *tty)
cmcheckmagic	w32console.c	/^void cmcheckmagic (struct tty_display_info *);$/;"	p	file:	signature:(struct tty_display_info *)
CMCOST	cm.c	143;"	d	file:
CMCOST	cm.c	167;"	d	file:
cmcostinit	cm.c	/^cmcostinit (struct tty_display_info *tty)$/;"	f	signature:(struct tty_display_info *tty)
cmcostinit	cm.h	/^extern void cmcostinit (struct tty_display_info *);$/;"	p	signature:(struct tty_display_info *)
cmcostinit	w32console.c	/^cmcostinit (struct tty_display_info *tty)$/;"	f	signature:(struct tty_display_info *tty)
cmcostinit	w32console.c	/^void cmcostinit (struct tty_display_info *);$/;"	p	file:	signature:(struct tty_display_info *)
cmd_error	keyboard.c	/^cmd_error (Lisp_Object data)$/;"	f	file:	signature:(Lisp_Object data)
cmd_error_internal	keyboard.c	/^cmd_error_internal (Lisp_Object data, const char *context)$/;"	f	signature:(Lisp_Object data, const char *context)
cmd_error_internal	lisp.h	/^extern void cmd_error_internal (Lisp_Object, const char *);$/;"	p	signature:(Lisp_Object, const char *)
cmgoto	cm.c	/^cmgoto (struct tty_display_info *tty, int row, int col)$/;"	f	signature:(struct tty_display_info *tty, int row, int col)
cmgoto	cm.h	/^extern void cmgoto (struct tty_display_info *, int, int);$/;"	p	signature:(struct tty_display_info *, int, int)
cmgoto	w32console.c	/^cmgoto (struct tty_display_info *tty, int row, int col)$/;"	f	signature:(struct tty_display_info *tty, int row, int col)
cmgoto	w32console.c	/^void cmgoto (struct tty_display_info *, int, int);$/;"	p	file:	signature:(struct tty_display_info *, int, int)
cmm_maps	keymap.c	/^static Lisp_Object *cmm_modes = NULL, *cmm_maps = NULL;$/;"	v	file:
cmm_modes	keymap.c	/^static Lisp_Object *cmm_modes = NULL, *cmm_maps = NULL;$/;"	v	file:
cmm_size	keymap.c	/^static ptrdiff_t cmm_size = 0;$/;"	v	file:
cmp	dispextern.h	/^    struct { int from, to; } cmp;$/;"	m	union:glyph::__anon107	typeref:struct:glyph::__anon107::__anon108	access:public
cmp	dispextern.h	/^    } cmp;$/;"	m	union:glyph::__anon110	typeref:struct:glyph::__anon110::__anon111	access:public
cmp	dispextern.h	/^  struct composition *cmp;$/;"	m	struct:glyph_string	typeref:struct:glyph_string::composition	access:public
cmpfn	lisp.h	/^  bool (*cmpfn) (struct hash_table_test *t, Lisp_Object, Lisp_Object);$/;"	m	struct:hash_table_test	access:public
cmpfn_eql	fns.c	/^cmpfn_eql (struct hash_table_test *ht,$/;"	f	file:	signature:(struct hash_table_test *ht, Lisp_Object key1, Lisp_Object key2)
cmpfn_equal	fns.c	/^cmpfn_equal (struct hash_table_test *ht,$/;"	f	file:	signature:(struct hash_table_test *ht, Lisp_Object key1, Lisp_Object key2)
cmpfn_profiler	profiler.c	/^cmpfn_profiler (struct hash_table_test *t,$/;"	f	file:	signature:(struct hash_table_test *t, Lisp_Object bt1, Lisp_Object bt2)
cmpfn_user_defined	fns.c	/^cmpfn_user_defined (struct hash_table_test *ht,$/;"	f	file:	signature:(struct hash_table_test *ht, Lisp_Object key1, Lisp_Object key2)
cmplus	cm.h	148;"	d
cmputc	cm.c	/^cmputc (int c)$/;"	f	signature:(int c)
cmputc	cm.h	/^extern int cmputc (int);$/;"	p	signature:(int)
cmputc	w32console.c	/^cmputc (int c)$/;"	f	signature:(int c)
cmputc	w32console.c	/^int cmputc (int);$/;"	p	file:	signature:(int)
cmp_for_strings	buffer.c	/^cmp_for_strings (const void *as1, const void *as2)$/;"	f	file:	signature:(const void *as1, const void *as2)
cmp_from	dispextern.h	/^  int cmp_from, cmp_to;$/;"	m	struct:glyph_string	access:public
cmp_id	dispextern.h	/^  ptrdiff_t cmp_id;$/;"	m	struct:glyph_string	access:public
cmp_it	dispextern.h	/^    struct composition_it cmp_it;$/;"	m	struct:it::iterator_stack_entry	typeref:struct:it::iterator_stack_entry::composition_it	access:public
cmp_it	dispextern.h	/^  struct composition_it cmp_it;$/;"	m	struct:it	typeref:struct:it::composition_it	access:public
cmp_status	coding.h	/^  struct composition_status cmp_status;$/;"	m	struct:emacs_mule_spec	typeref:struct:emacs_mule_spec::composition_status	access:public
cmp_status	coding.h	/^  struct composition_status cmp_status;$/;"	m	struct:iso_2022_spec	typeref:struct:iso_2022_spec::composition_status	access:public
cmp_to	dispextern.h	/^  int cmp_from, cmp_to;$/;"	m	struct:glyph_string	access:public
cm_abs	cm.h	/^    char *cm_abs;		\/* absolute (cm) *\/$/;"	m	struct:cm	access:public
cm_autolf	cm.h	/^    bool_bf cm_autolf : 1;	\/* \\r performs a \\r\\n (rn) *\/$/;"	m	struct:cm	access:public
cm_autowrap	cm.h	/^    bool_bf cm_autowrap : 1;	\/* autowrap flag (am) *\/$/;"	m	struct:cm	access:public
cm_backtab	cm.h	/^    const char *cm_backtab;	\/* backtab (bt) *\/$/;"	m	struct:cm	access:public
cm_cols	cm.h	/^    int cm_cols;		\/* number of cols on screen (co) *\/$/;"	m	struct:cm	access:public
cm_cr	cm.h	/^    const char *cm_cr;		\/* carriage return (cr) *\/$/;"	m	struct:cm	access:public
cm_curX	cm.h	/^    int cm_curX;			\/* Current column *\/$/;"	m	struct:cm	access:public
cm_curY	cm.h	/^    int cm_curY;			\/* Current row *\/$/;"	m	struct:cm	access:public
cm_down	cm.h	/^    const char *cm_down;	\/* down (do) *\/$/;"	m	struct:cm	access:public
cm_ds	cm.h	/^    const char *cm_ds;		\/* "don't send" string (ds) *\/$/;"	m	struct:cm	access:public
cm_habs	cm.h	/^    const char *cm_habs;	\/* horizontal absolute (ch) *\/$/;"	m	struct:cm	access:public
cm_home	cm.h	/^    const char *cm_home;	\/* home (ho) *\/$/;"	m	struct:cm	access:public
cm_left	cm.h	/^    const char *cm_left;	\/* left (le) *\/$/;"	m	struct:cm	access:public
cm_ll	cm.h	/^    const char *cm_ll;		\/* last line (ll) *\/$/;"	m	struct:cm	access:public
cm_losewrap	cm.h	/^    bool_bf cm_losewrap : 1;	\/* if reach right margin, forget cursor$/;"	m	struct:cm	access:public
cm_magicwrap	cm.h	/^    bool_bf cm_magicwrap : 1;	\/* VT-100: cursor stays in last col but$/;"	m	struct:cm	access:public
cm_multidown	cm.h	/^    const char *cm_multidown;	\/* multiple down (DO) *\/$/;"	m	struct:cm	access:public
cm_multileft	cm.h	/^    const char *cm_multileft;	\/* multiple left (LE) *\/$/;"	m	struct:cm	access:public
cm_multiright	cm.h	/^    const char *cm_multiright;	\/* multiple right (RI) *\/$/;"	m	struct:cm	access:public
cm_multiup	cm.h	/^    const char *cm_multiup;	\/* multiple up (UP) *\/$/;"	m	struct:cm	access:public
CM_OBJ	Makefile	/^CM_OBJ=cm.o$/;"	m
cm_right	cm.h	/^    const char *cm_right;	\/* right (nd) *\/$/;"	m	struct:cm	access:public
cm_rows	cm.h	/^    int cm_rows;		\/* number of rows on screen (li) *\/$/;"	m	struct:cm	access:public
cm_tab	cm.h	/^    const char *cm_tab;		\/* tab (ta) *\/$/;"	m	struct:cm	access:public
cm_tabwidth	cm.h	/^    int cm_tabwidth;		\/* tab width (it) *\/$/;"	m	struct:cm	access:public
cm_up	cm.h	/^    const char *cm_up;		\/* up (up) *\/$/;"	m	struct:cm	access:public
cm_usetabs	cm.h	/^    bool_bf cm_usetabs : 1;	\/* if set, use tabs *\/$/;"	m	struct:cm	access:public
cm_vabs	cm.h	/^    const char *cm_vabs;	\/* vertical absolute (cv) *\/$/;"	m	struct:cm	access:public
code	sysdep.c	/^  int code;$/;"	m	struct:save_signal	file:	access:public
code	termhooks.h	/^  unsigned code;$/;"	m	struct:input_event	access:public
code1	charset.c	/^  (Lisp_Object charset, Lisp_Object code1, Lisp_Object code2, Lisp_Object code3, Lisp_Object code4)$/;"	v
code2	charset.c	/^  (Lisp_Object charset, Lisp_Object code1, Lisp_Object code2, Lisp_Object code3, Lisp_Object code4)$/;"	v
code3	charset.c	/^  (Lisp_Object charset, Lisp_Object code1, Lisp_Object code2, Lisp_Object code3, Lisp_Object code4)$/;"	v
codepage_for_filenames	w32.c	/^codepage_for_filenames (CPINFO *cp_info)$/;"	f	signature:(CPINFO *cp_info)
codepage_for_filenames	w32.h	/^extern int  codepage_for_filenames (CPINFO *);$/;"	p	signature:(CPINFO *)
codepage_for_locale	w32term.c	/^codepage_for_locale (LCID locale)$/;"	f	file:	signature:(LCID locale)
code_conversion_restore	coding.c	/^code_conversion_restore (Lisp_Object arg)$/;"	f	file:	signature:(Lisp_Object arg)
code_conversion_save	coding.c	/^code_conversion_save (bool with_work_buf, bool multibyte)$/;"	f	signature:(bool with_work_buf, bool multibyte)
code_conversion_save	coding.h	/^extern Lisp_Object code_conversion_save (bool, bool);$/;"	p	signature:(bool, bool)
code_convert_region	coding.c	/^code_convert_region (Lisp_Object start, Lisp_Object end,$/;"	f	file:	signature:(Lisp_Object start, Lisp_Object end, Lisp_Object coding_system, Lisp_Object dst_object, bool encodep, bool norecord)
code_convert_string	coding.c	/^code_convert_string (Lisp_Object string, Lisp_Object coding_system,$/;"	f	signature:(Lisp_Object string, Lisp_Object coding_system, Lisp_Object dst_object, bool encodep, bool nocopy, bool norecord)
code_convert_string	coding.h	/^extern Lisp_Object code_convert_string (Lisp_Object, Lisp_Object,$/;"	p	signature:(Lisp_Object, Lisp_Object, Lisp_Object, bool, bool, bool)
code_convert_string_norecord	coding.c	/^code_convert_string_norecord (Lisp_Object string, Lisp_Object coding_system,$/;"	f	signature:(Lisp_Object string, Lisp_Object coding_system, bool encodep)
code_convert_string_norecord	coding.h	/^extern Lisp_Object code_convert_string_norecord (Lisp_Object, Lisp_Object,$/;"	p	signature:(Lisp_Object, Lisp_Object, bool)
code_linear_p	charset.h	/^  bool_bf code_linear_p : 1;$/;"	m	struct:charset	access:public
code_offset	charset.h	/^  int code_offset;$/;"	m	struct:charset	access:public
CODE_POINT_TO_INDEX	charset.c	107;"	d	file:
code_space	charset.h	/^  int code_space[15];$/;"	m	struct:charset	access:public
code_space_mask	charset.h	/^  unsigned char *code_space_mask;$/;"	m	struct:charset	access:public
coding_alloc_by_making_gap	coding.c	/^coding_alloc_by_making_gap (struct coding_system *coding,$/;"	f	file:	signature:(struct coding_system *coding, ptrdiff_t gap_head_used, ptrdiff_t bytes)
coding_alloc_by_realloc	coding.c	/^coding_alloc_by_realloc (struct coding_system *coding, ptrdiff_t bytes)$/;"	f	file:	signature:(struct coding_system *coding, ptrdiff_t bytes)
CODING_ANNOTATE_CHARSET_MASK	coding.h	504;"	d
CODING_ANNOTATE_COMPOSITION_MASK	coding.h	502;"	d
CODING_ANNOTATE_DIRECTION_MASK	coding.h	503;"	d
CODING_ANNOTATION_MASK	coding.h	501;"	d
coding_arg_ascii_compatible_p	coding.h	/^    coding_arg_ascii_compatible_p,$/;"	e	enum:define_coding_system_arg_index
coding_arg_ccl_decoder	coding.h	/^    coding_arg_ccl_decoder = coding_arg_max,$/;"	e	enum:define_coding_ccl_arg_index
coding_arg_ccl_encoder	coding.h	/^    coding_arg_ccl_encoder,$/;"	e	enum:define_coding_ccl_arg_index
coding_arg_ccl_max	coding.h	/^    coding_arg_ccl_max$/;"	e	enum:define_coding_ccl_arg_index
coding_arg_ccl_valids	coding.h	/^    coding_arg_ccl_valids,$/;"	e	enum:define_coding_ccl_arg_index
coding_arg_charset_list	coding.h	/^    coding_arg_charset_list,$/;"	e	enum:define_coding_system_arg_index
coding_arg_coding_type	coding.h	/^    coding_arg_coding_type,$/;"	e	enum:define_coding_system_arg_index
coding_arg_decode_translation_table	coding.h	/^    coding_arg_decode_translation_table,$/;"	e	enum:define_coding_system_arg_index
coding_arg_default_char	coding.h	/^    coding_arg_default_char,$/;"	e	enum:define_coding_system_arg_index
coding_arg_encode_translation_table	coding.h	/^    coding_arg_encode_translation_table,$/;"	e	enum:define_coding_system_arg_index
coding_arg_eol_type	coding.h	/^    coding_arg_eol_type,$/;"	e	enum:define_coding_system_arg_index
coding_arg_for_unibyte	coding.h	/^    coding_arg_for_unibyte,$/;"	e	enum:define_coding_system_arg_index
coding_arg_iso2022_flags	coding.h	/^    coding_arg_iso2022_flags,$/;"	e	enum:define_coding_iso2022_arg_index
coding_arg_iso2022_initial	coding.h	/^    coding_arg_iso2022_initial = coding_arg_max,$/;"	e	enum:define_coding_iso2022_arg_index
coding_arg_iso2022_max	coding.h	/^    coding_arg_iso2022_max$/;"	e	enum:define_coding_iso2022_arg_index
coding_arg_iso2022_reg_usage	coding.h	/^    coding_arg_iso2022_reg_usage,$/;"	e	enum:define_coding_iso2022_arg_index
coding_arg_iso2022_request	coding.h	/^    coding_arg_iso2022_request,$/;"	e	enum:define_coding_iso2022_arg_index
coding_arg_max	coding.h	/^    coding_arg_max$/;"	e	enum:define_coding_system_arg_index
coding_arg_mnemonic	coding.h	/^    coding_arg_mnemonic,$/;"	e	enum:define_coding_system_arg_index
coding_arg_name	coding.h	/^    coding_arg_name,$/;"	e	enum:define_coding_system_arg_index
coding_arg_plist	coding.h	/^    coding_arg_plist,$/;"	e	enum:define_coding_system_arg_index
coding_arg_post_read_conversion	coding.h	/^    coding_arg_post_read_conversion,$/;"	e	enum:define_coding_system_arg_index
coding_arg_pre_write_conversion	coding.h	/^    coding_arg_pre_write_conversion,$/;"	e	enum:define_coding_system_arg_index
coding_arg_undecided_inhibit_iso_escape_detection	coding.h	/^    coding_arg_undecided_inhibit_iso_escape_detection,$/;"	e	enum:define_coding_undecided_arg_index
coding_arg_undecided_inhibit_null_byte_detection	coding.h	/^    coding_arg_undecided_inhibit_null_byte_detection = coding_arg_max,$/;"	e	enum:define_coding_undecided_arg_index
coding_arg_undecided_max	coding.h	/^    coding_arg_undecided_max$/;"	e	enum:define_coding_undecided_arg_index
coding_arg_undecided_prefer_utf_8	coding.h	/^    coding_arg_undecided_prefer_utf_8,$/;"	e	enum:define_coding_undecided_arg_index
coding_arg_utf16_bom	coding.h	/^    coding_arg_utf16_bom = coding_arg_max,$/;"	e	enum:define_coding_utf16_arg_index
coding_arg_utf16_endian	coding.h	/^    coding_arg_utf16_endian,$/;"	e	enum:define_coding_utf16_arg_index
coding_arg_utf16_max	coding.h	/^    coding_arg_utf16_max$/;"	e	enum:define_coding_utf16_arg_index
coding_arg_utf8_bom	coding.h	/^    coding_arg_utf8_bom = coding_arg_max,$/;"	e	enum:define_coding_utf8_arg_index
coding_arg_utf8_max	coding.h	/^    coding_arg_utf8_max$/;"	e	enum:define_coding_utf8_arg_index
coding_attr_ascii_compat	coding.h	/^    coding_attr_ascii_compat,$/;"	e	enum:coding_attr_index
CODING_ATTR_ASCII_COMPAT	coding.h	153;"	d
coding_attr_base_name	coding.h	/^    coding_attr_base_name,$/;"	e	enum:coding_attr_index
CODING_ATTR_BASE_NAME	coding.h	148;"	d
coding_attr_category	coding.h	/^    coding_attr_category,$/;"	e	enum:coding_attr_index
CODING_ATTR_CATEGORY	coding.h	162;"	d
coding_attr_ccl_decoder	coding.h	/^    coding_attr_ccl_decoder,$/;"	e	enum:coding_attr_index
coding_attr_ccl_encoder	coding.h	/^    coding_attr_ccl_encoder,$/;"	e	enum:coding_attr_index
coding_attr_ccl_valids	coding.h	/^    coding_attr_ccl_valids,$/;"	e	enum:coding_attr_index
coding_attr_charset_list	coding.h	/^    coding_attr_charset_list,$/;"	e	enum:coding_attr_index
CODING_ATTR_CHARSET_LIST	coding.h	150;"	d
coding_attr_charset_valids	coding.h	/^    coding_attr_charset_valids,$/;"	e	enum:coding_attr_index
coding_attr_decode_tbl	coding.h	/^    coding_attr_decode_tbl,$/;"	e	enum:coding_attr_index
CODING_ATTR_DECODE_TBL	coding.h	154;"	d
coding_attr_default_char	coding.h	/^    coding_attr_default_char,$/;"	e	enum:coding_attr_index
CODING_ATTR_DEFAULT_CHAR	coding.h	159;"	d
coding_attr_docstring	coding.h	/^    coding_attr_docstring,$/;"	e	enum:coding_attr_index
CODING_ATTR_DOCSTRING	coding.h	152;"	d
coding_attr_emacs_mule_full	coding.h	/^    coding_attr_emacs_mule_full,$/;"	e	enum:coding_attr_index
coding_attr_encode_tbl	coding.h	/^    coding_attr_encode_tbl,$/;"	e	enum:coding_attr_index
CODING_ATTR_ENCODE_TBL	coding.h	155;"	d
coding_attr_for_unibyte	coding.h	/^    coding_attr_for_unibyte,$/;"	e	enum:coding_attr_index
CODING_ATTR_FOR_UNIBYTE	coding.h	160;"	d
coding_attr_index	coding.h	/^enum coding_attr_index$/;"	g
coding_attr_iso_flags	coding.h	/^    coding_attr_iso_flags,$/;"	e	enum:coding_attr_index
coding_attr_iso_initial	coding.h	/^    coding_attr_iso_initial,$/;"	e	enum:coding_attr_index
coding_attr_iso_request	coding.h	/^    coding_attr_iso_request,$/;"	e	enum:coding_attr_index
coding_attr_iso_usage	coding.h	/^    coding_attr_iso_usage,$/;"	e	enum:coding_attr_index
coding_attr_last_index	coding.h	/^    coding_attr_last_index$/;"	e	enum:coding_attr_index
coding_attr_mnemonic	coding.h	/^    coding_attr_mnemonic,$/;"	e	enum:coding_attr_index
CODING_ATTR_MNEMONIC	coding.h	151;"	d
coding_attr_plist	coding.h	/^    coding_attr_plist,$/;"	e	enum:coding_attr_index
CODING_ATTR_PLIST	coding.h	161;"	d
coding_attr_post_read	coding.h	/^    coding_attr_post_read,$/;"	e	enum:coding_attr_index
CODING_ATTR_POST_READ	coding.h	157;"	d
coding_attr_pre_write	coding.h	/^    coding_attr_pre_write,$/;"	e	enum:coding_attr_index
CODING_ATTR_PRE_WRITE	coding.h	158;"	d
coding_attr_safe_charsets	coding.h	/^    coding_attr_safe_charsets,$/;"	e	enum:coding_attr_index
CODING_ATTR_SAFE_CHARSETS	coding.h	163;"	d
coding_attr_trans_tbl	coding.h	/^    coding_attr_trans_tbl,$/;"	e	enum:coding_attr_index
CODING_ATTR_TRANS_TBL	coding.h	156;"	d
coding_attr_type	coding.h	/^    coding_attr_type,$/;"	e	enum:coding_attr_index
CODING_ATTR_TYPE	coding.h	149;"	d
coding_attr_undecided_inhibit_iso_escape_detection	coding.h	/^    coding_attr_undecided_inhibit_iso_escape_detection,$/;"	e	enum:coding_attr_index
coding_attr_undecided_inhibit_null_byte_detection	coding.h	/^    coding_attr_undecided_inhibit_null_byte_detection,$/;"	e	enum:coding_attr_index
coding_attr_undecided_prefer_utf_8	coding.h	/^    coding_attr_undecided_prefer_utf_8,$/;"	e	enum:coding_attr_index
coding_attr_utf_16_endian	coding.h	/^    coding_attr_utf_16_endian,$/;"	e	enum:coding_attr_index
coding_attr_utf_bom	coding.h	/^    coding_attr_utf_bom,$/;"	e	enum:coding_attr_index
coding_categories	coding.c	/^static struct coding_system coding_categories[coding_category_max];$/;"	v	typeref:struct:coding_system	file:
coding_category	coding.c	/^enum coding_category$/;"	g	file:
coding_category_big5	coding.c	/^    coding_category_big5,$/;"	e	enum:coding_category	file:
coding_category_ccl	coding.c	/^    coding_category_ccl,$/;"	e	enum:coding_category	file:
coding_category_charset	coding.c	/^    coding_category_charset,$/;"	e	enum:coding_category	file:
coding_category_emacs_mule	coding.c	/^    coding_category_emacs_mule,$/;"	e	enum:coding_category	file:
coding_category_iso_7	coding.c	/^    coding_category_iso_7,$/;"	e	enum:coding_category	file:
coding_category_iso_7_else	coding.c	/^    coding_category_iso_7_else,$/;"	e	enum:coding_category	file:
coding_category_iso_7_tight	coding.c	/^    coding_category_iso_7_tight,$/;"	e	enum:coding_category	file:
coding_category_iso_8_1	coding.c	/^    coding_category_iso_8_1,$/;"	e	enum:coding_category	file:
coding_category_iso_8_2	coding.c	/^    coding_category_iso_8_2,$/;"	e	enum:coding_category	file:
coding_category_iso_8_else	coding.c	/^    coding_category_iso_8_else,$/;"	e	enum:coding_category	file:
coding_category_max	coding.c	/^    coding_category_max$/;"	e	enum:coding_category	file:
coding_category_raw_text	coding.c	/^    coding_category_raw_text,$/;"	e	enum:coding_category	file:
coding_category_sjis	coding.c	/^    coding_category_sjis,$/;"	e	enum:coding_category	file:
coding_category_undecided	coding.c	/^    coding_category_undecided,$/;"	e	enum:coding_category	file:
coding_category_utf_16_auto	coding.c	/^    coding_category_utf_16_auto,$/;"	e	enum:coding_category	file:
coding_category_utf_16_be	coding.c	/^    coding_category_utf_16_be,$/;"	e	enum:coding_category	file:
coding_category_utf_16_be_nosig	coding.c	/^    coding_category_utf_16_be_nosig,$/;"	e	enum:coding_category	file:
coding_category_utf_16_le	coding.c	/^    coding_category_utf_16_le,$/;"	e	enum:coding_category	file:
coding_category_utf_16_le_nosig	coding.c	/^    coding_category_utf_16_le_nosig,$/;"	e	enum:coding_category	file:
coding_category_utf_8_auto	coding.c	/^    coding_category_utf_8_auto,$/;"	e	enum:coding_category	file:
coding_category_utf_8_nosig	coding.c	/^    coding_category_utf_8_nosig,$/;"	e	enum:coding_category	file:
coding_category_utf_8_sig	coding.c	/^    coding_category_utf_8_sig,$/;"	e	enum:coding_category	file:
CODING_CCL_DECODER	coding.c	474;"	d	file:
CODING_CCL_ENCODER	coding.c	476;"	d	file:
CODING_CCL_VALIDS	coding.c	478;"	d	file:
coding_change_destination	coding.c	/^coding_change_destination (struct coding_system *coding)$/;"	f	file:	signature:(struct coding_system *coding)
coding_change_source	coding.c	/^coding_change_source (struct coding_system *coding)$/;"	f	file:	signature:(struct coding_system *coding)
coding_charset_list	coding.c	/^coding_charset_list (struct coding_system *coding)$/;"	f	signature:(struct coding_system *coding)
coding_charset_list	coding.h	/^extern Lisp_Object coding_charset_list (struct coding_system *);$/;"	p	signature:(struct coding_system *)
CODING_CHAR_CHARSET	coding.c	866;"	d	file:
CODING_CHAR_CHARSET_P	coding.c	880;"	d	file:
CODING_DECODE_CHAR	coding.c	837;"	d	file:
coding_detection_info	coding.h	/^struct coding_detection_info$/;"	s
coding_detection_info::checked	coding.h	/^  int checked;$/;"	m	struct:coding_detection_info	access:public
coding_detection_info::found	coding.h	/^  int found;$/;"	m	struct:coding_detection_info	access:public
coding_detection_info::rejected	coding.h	/^  int rejected;$/;"	m	struct:coding_detection_info	access:public
CODING_ENCODE_CHAR	coding.c	852;"	d	file:
CODING_FOR_UNIBYTE	coding.h	519;"	d
CODING_FOR_UNIBYTE_MASK	coding.h	505;"	d
coding_from_cp	w32select.c	/^coding_from_cp (UINT codepage)$/;"	f	file:	signature:(UINT codepage)
coding_from_cp	w32select.c	/^static Lisp_Object coding_from_cp (UINT codepage);$/;"	p	file:	signature:(UINT codepage)
CODING_GET_INFO	coding.c	616;"	d	file:
CODING_ID_ALIASES	coding.h	177;"	d
CODING_ID_ATTRS	coding.h	172;"	d
CODING_ID_EOL_TYPE	coding.h	182;"	d
CODING_ID_NAME	coding.h	167;"	d
coding_inherit_eol_type	coding.c	/^coding_inherit_eol_type (Lisp_Object coding_system, Lisp_Object parent)$/;"	f	signature:(Lisp_Object coding_system, Lisp_Object parent)
coding_inherit_eol_type	coding.h	/^extern Lisp_Object coding_inherit_eol_type (Lisp_Object, Lisp_Object);$/;"	p	signature:(Lisp_Object, Lisp_Object)
CODING_INHIBIT_CHARACTER_SUBSTITUTION	coding.c	456;"	d	file:
CODING_ISO_BOL	coding.c	348;"	d	file:
CODING_ISO_CMP_STATUS	coding.c	353;"	d	file:
CODING_ISO_DESIGNATION	coding.c	342;"	d	file:
CODING_ISO_EMBEDDED_UTF_8	coding.c	357;"	d	file:
CODING_ISO_EXTSEGMENT_LEN	coding.c	355;"	d	file:
CODING_ISO_FLAGS	coding.c	340;"	d	file:
CODING_ISO_FLAG_COMPOSITION	coding.c	442;"	d	file:
CODING_ISO_FLAG_DESIGNATE_AT_BOL	coding.c	433;"	d	file:
CODING_ISO_FLAG_DESIGNATION	coding.c	419;"	d	file:
CODING_ISO_FLAG_DIRECTION	coding.c	425;"	d	file:
CODING_ISO_FLAG_FULL_SUPPORT	coding.c	452;"	d	file:
CODING_ISO_FLAG_INIT_AT_BOL	coding.c	429;"	d	file:
CODING_ISO_FLAG_LATIN_EXTRA	coding.c	440;"	d	file:
CODING_ISO_FLAG_LEVEL_4	coding.c	450;"	d	file:
CODING_ISO_FLAG_LOCKING_SHIFT	coding.c	412;"	d	file:
CODING_ISO_FLAG_LONG_FORM	coding.c	398;"	d	file:
CODING_ISO_FLAG_RESET_AT_CNTL	coding.c	406;"	d	file:
CODING_ISO_FLAG_RESET_AT_EOL	coding.c	402;"	d	file:
CODING_ISO_FLAG_REVISION	coding.c	422;"	d	file:
CODING_ISO_FLAG_SAFE	coding.c	436;"	d	file:
CODING_ISO_FLAG_SEVEN_BITS	coding.c	409;"	d	file:
CODING_ISO_FLAG_SINGLE_SHIFT	coding.c	416;"	d	file:
CODING_ISO_FLAG_USE_OLDJIS	coding.c	448;"	d	file:
CODING_ISO_FLAG_USE_ROMAN	coding.c	446;"	d	file:
CODING_ISO_INITIAL	coding.c	326;"	d	file:
CODING_ISO_INVOCATION	coding.c	344;"	d	file:
CODING_ISO_INVOKED_CHARSET	coding.c	350;"	d	file:
CODING_ISO_REQUEST	coding.c	332;"	d	file:
CODING_ISO_SINGLE_SHIFTING	coding.c	346;"	d	file:
CODING_MAY_REQUIRE_DECODING	coding.h	552;"	d
CODING_MODE_DIRECTION	coding.h	274;"	d
CODING_MODE_FIXED_DESTINATION	coding.h	276;"	d
CODING_MODE_LAST_BLOCK	coding.h	266;"	d
CODING_MODE_SAFE_ENCODING	coding.h	280;"	d
CODING_MODE_SELECTIVE_DISPLAY	coding.h	270;"	d
coding_priorities	coding.c	/^static enum coding_category coding_priorities[coding_category_max];$/;"	v	typeref:enum:coding_category	file:
CODING_REQUIRE_ANNOTATION	coding.h	514;"	d
CODING_REQUIRE_DECODING	coding.h	529;"	d
CODING_REQUIRE_DECODING_MASK	coding.h	507;"	d
CODING_REQUIRE_DETECTION	coding.h	547;"	d
CODING_REQUIRE_DETECTION_MASK	coding.h	509;"	d
CODING_REQUIRE_ENCODING	coding.h	539;"	d
CODING_REQUIRE_ENCODING_MASK	coding.h	508;"	d
CODING_REQUIRE_FLUSHING	coding.h	524;"	d
CODING_REQUIRE_FLUSHING_MASK	coding.h	506;"	d
CODING_RESET_AT_BOL_MASK	coding.h	510;"	d
coding_restore_undo_list	coding.c	/^coding_restore_undo_list (Lisp_Object arg)$/;"	f	file:	signature:(Lisp_Object arg)
coding_result_code	coding.h	/^enum coding_result_code$/;"	g
CODING_RESULT_INSUFFICIENT_DST	coding.h	/^    CODING_RESULT_INSUFFICIENT_DST,$/;"	e	enum:coding_result_code
CODING_RESULT_INSUFFICIENT_SRC	coding.h	/^    CODING_RESULT_INSUFFICIENT_SRC,$/;"	e	enum:coding_result_code
CODING_RESULT_INTERRUPT	coding.h	/^    CODING_RESULT_INTERRUPT$/;"	e	enum:coding_result_code
CODING_RESULT_INVALID_SRC	coding.h	/^    CODING_RESULT_INVALID_SRC,$/;"	e	enum:coding_result_code
CODING_RESULT_SUCCESS	coding.h	/^    CODING_RESULT_SUCCESS,$/;"	e	enum:coding_result_code
coding_set_destination	coding.c	/^coding_set_destination (struct coding_system *coding)$/;"	f	file:	signature:(struct coding_system *coding)
coding_set_source	coding.c	/^coding_set_source (struct coding_system *coding)$/;"	f	file:	signature:(struct coding_system *coding)
CODING_SPEC_CCL_PROGRAM	ccl.h	73;"	d
coding_system	coding.c	/^  (Lisp_Object coding_system, Lisp_Object prop, Lisp_Object val)$/;"	v
coding_system	coding.c	/^  (Lisp_Object coding_system, Lisp_Object terminal)$/;"	v
coding_system	coding.c	/^  (Lisp_Object start, Lisp_Object end, Lisp_Object coding_system, Lisp_Object destination)$/;"	v
coding_system	coding.c	/^  (Lisp_Object start, Lisp_Object end, Lisp_Object coding_system,$/;"	v
coding_system	coding.c	/^  (Lisp_Object string, Lisp_Object coding_system, Lisp_Object nocopy, Lisp_Object buffer)$/;"	v
coding_system	coding.h	/^struct coding_system$/;"	s
coding_system	fns.c	/^  (Lisp_Object object, Lisp_Object start, Lisp_Object end, Lisp_Object coding_system, Lisp_Object noerror)$/;"	v
coding_system::annotated	coding.h	/^  bool_bf annotated : 1;$/;"	m	struct:coding_system	access:public
coding_system::carryover	coding.h	/^  unsigned char carryover[64];$/;"	m	struct:coding_system	access:public
coding_system::carryover_bytes	coding.h	/^  int carryover_bytes;$/;"	m	struct:coding_system	access:public
coding_system::charbuf	coding.h	/^  int *charbuf;$/;"	m	struct:coding_system	access:public
coding_system::charbuf_size	coding.h	/^  int charbuf_size, charbuf_used;$/;"	m	struct:coding_system	access:public
coding_system::charbuf_used	coding.h	/^  int charbuf_size, charbuf_used;$/;"	m	struct:coding_system	access:public
coding_system::chars_at_source	coding.h	/^  bool_bf chars_at_source : 1;$/;"	m	struct:coding_system	access:public
coding_system::common_flags	coding.h	/^  unsigned common_flags : 14;$/;"	m	struct:coding_system	access:public
coding_system::consumed	coding.h	/^  ptrdiff_t produced, produced_char, consumed, consumed_char;$/;"	m	struct:coding_system	access:public
coding_system::consumed_char	coding.h	/^  ptrdiff_t produced, produced_char, consumed, consumed_char;$/;"	m	struct:coding_system	access:public
coding_system::decoder	coding.h	/^  void (*decoder) (struct coding_system *);$/;"	m	struct:coding_system	access:public
coding_system::default_char	coding.h	/^  int default_char;$/;"	m	struct:coding_system	access:public
coding_system::destination	coding.h	/^  unsigned char *destination;$/;"	m	struct:coding_system	access:public
coding_system::detected_utf8_bytes	coding.h	/^  ptrdiff_t detected_utf8_bytes, detected_utf8_chars;$/;"	m	struct:coding_system	access:public
coding_system::detected_utf8_chars	coding.h	/^  ptrdiff_t detected_utf8_bytes, detected_utf8_chars;$/;"	m	struct:coding_system	access:public
coding_system::detector	coding.h	/^  bool (*detector) (struct coding_system *, struct coding_detection_info *);$/;"	m	struct:coding_system	access:public
coding_system::dst_bytes	coding.h	/^  ptrdiff_t dst_pos, dst_pos_byte, dst_bytes;$/;"	m	struct:coding_system	access:public
coding_system::dst_multibyte	coding.h	/^  bool_bf dst_multibyte : 1;$/;"	m	struct:coding_system	access:public
coding_system::dst_object	coding.h	/^  Lisp_Object dst_object;$/;"	m	struct:coding_system	access:public
coding_system::dst_pos	coding.h	/^  ptrdiff_t dst_pos, dst_pos_byte, dst_bytes;$/;"	m	struct:coding_system	access:public
coding_system::dst_pos_byte	coding.h	/^  ptrdiff_t dst_pos, dst_pos_byte, dst_bytes;$/;"	m	struct:coding_system	access:public
coding_system::encoder	coding.h	/^  bool (*encoder) (struct coding_system *);$/;"	m	struct:coding_system	access:public
coding_system::eol_seen	coding.h	/^  unsigned eol_seen : 3;$/;"	m	struct:coding_system	access:public
coding_system::head_ascii	coding.h	/^  ptrdiff_t head_ascii;$/;"	m	struct:coding_system	access:public
coding_system::id	coding.h	/^  ptrdiff_t id;$/;"	m	struct:coding_system	access:public
coding_system::max_charset_id	coding.h	/^  int max_charset_id;$/;"	m	struct:coding_system	access:public
coding_system::mode	coding.h	/^  unsigned mode : 5;$/;"	m	struct:coding_system	access:public
coding_system::produced	coding.h	/^  ptrdiff_t produced, produced_char, consumed, consumed_char;$/;"	m	struct:coding_system	access:public
coding_system::produced_char	coding.h	/^  ptrdiff_t produced, produced_char, consumed, consumed_char;$/;"	m	struct:coding_system	access:public
coding_system::raw_destination	coding.h	/^  bool_bf raw_destination : 1;$/;"	m	struct:coding_system	access:public
coding_system::result	coding.h	/^  ENUM_BF (coding_result_code) result : 3;$/;"	m	struct:coding_system	access:public
coding_system::safe_charsets	coding.h	/^  unsigned char *safe_charsets;$/;"	m	struct:coding_system	access:public
coding_system::source	coding.h	/^  const unsigned char *source;$/;"	m	struct:coding_system	access:public
coding_system::spec	coding.h	/^    } spec;$/;"	m	struct:coding_system	typeref:union:coding_system::__anon152	access:public
coding_system::src_bytes	coding.h	/^  ptrdiff_t src_pos, src_pos_byte, src_chars, src_bytes;$/;"	m	struct:coding_system	access:public
coding_system::src_chars	coding.h	/^  ptrdiff_t src_pos, src_pos_byte, src_chars, src_bytes;$/;"	m	struct:coding_system	access:public
coding_system::src_multibyte	coding.h	/^  bool_bf src_multibyte : 1;$/;"	m	struct:coding_system	access:public
coding_system::src_object	coding.h	/^  Lisp_Object src_object;$/;"	m	struct:coding_system	access:public
coding_system::src_pos	coding.h	/^  ptrdiff_t src_pos, src_pos_byte, src_chars, src_bytes;$/;"	m	struct:coding_system	access:public
coding_system::src_pos_byte	coding.h	/^  ptrdiff_t src_pos, src_pos_byte, src_chars, src_bytes;$/;"	m	struct:coding_system	access:public
coding_system::__anon152::ccl	coding.h	/^      struct ccl_spec *ccl;	\/* Defined in ccl.h.  *\/$/;"	m	union:coding_system::__anon152	typeref:struct:coding_system::__anon152::ccl_spec	access:public
coding_system::__anon152::emacs_mule	coding.h	/^      struct emacs_mule_spec emacs_mule;$/;"	m	union:coding_system::__anon152	typeref:struct:coding_system::__anon152::emacs_mule_spec	access:public
coding_system::__anon152::iso_2022	coding.h	/^      struct iso_2022_spec iso_2022;$/;"	m	union:coding_system::__anon152	typeref:struct:coding_system::__anon152::iso_2022_spec	access:public
coding_system::__anon152::undecided	coding.h	/^      struct undecided_spec undecided;$/;"	m	union:coding_system::__anon152	typeref:struct:coding_system::__anon152::undecided_spec	access:public
coding_system::__anon152::utf_16	coding.h	/^      struct utf_16_spec utf_16;$/;"	m	union:coding_system::__anon152	typeref:struct:coding_system::__anon152::utf_16_spec	access:public
coding_system::__anon152::utf_8_bom	coding.h	/^      enum utf_bom_type utf_8_bom;$/;"	m	union:coding_system::__anon152	typeref:enum:coding_system::__anon152::utf_bom_type	access:public
coding_system_charset_list	coding.c	/^coding_system_charset_list (Lisp_Object coding_system)$/;"	f	signature:(Lisp_Object coding_system)
coding_system_charset_list	coding.h	/^extern Lisp_Object coding_system_charset_list (Lisp_Object);$/;"	p	signature:(Lisp_Object)
CODING_SYSTEM_ID	coding.h	194;"	d
CODING_SYSTEM_P	coding.h	200;"	d
coding_system_require_warning	globals.h	911;"	d
CODING_SYSTEM_SPEC	coding.h	188;"	d
CODING_UTF_16_BOM	coding.c	463;"	d	file:
CODING_UTF_16_ENDIAN	coding.c	466;"	d	file:
CODING_UTF_16_SURROGATE	coding.c	469;"	d	file:
CODING_UTF_8_BOM	coding.c	459;"	d	file:
COERCE_MARKER	xdisp.c	709;"	d	file:
collection	minibuf.c	/^  (Lisp_Object prompt, Lisp_Object collection, Lisp_Object predicate, Lisp_Object require_match, Lisp_Object initial_input, Lisp_Object hist, Lisp_Object def, Lisp_Object inherit_input_method)$/;"	v
collection	minibuf.c	/^  (Lisp_Object string, Lisp_Object collection, Lisp_Object predicate)$/;"	v
collection	minibuf.c	/^  (Lisp_Object string, Lisp_Object collection, Lisp_Object predicate, Lisp_Object hide_spaces)$/;"	v
colon	filelock.c	/^  char *at, *dot, *colon;$/;"	m	struct:__anon52	file:	access:public
color	alloc.c	/^  enum {MEM_BLACK, MEM_RED} color;$/;"	m	struct:mem_node	typeref:enum:mem_node::__anon3	file:	access:public
color	image.c	/^  XColor color;$/;"	m	struct:xpm_cached_color	file:	access:public
COLOR	image.c	4831;"	d	file:
COLOR	image.c	4883;"	d	file:
Color	nsgui.h	/^typedef NSColor * Color;$/;"	t
Color	nsgui.h	/^typedef void * Color;$/;"	t
color	w32fns.c	/^  (Lisp_Object color, Lisp_Object frame)$/;"	v
Color	w32gui.h	/^typedef COLORREF Color;$/;"	t
color	xfaces.c	/^  (Lisp_Object color, Lisp_Object frame)$/;"	v
color	xfaces.c	/^  (Lisp_Object color, Lisp_Object frame, Lisp_Object background_p)$/;"	v
color	xfns.c	/^  (Lisp_Object color, Lisp_Object frame)$/;"	v
color1	xfaces.c	/^  (Lisp_Object color1, Lisp_Object color2, Lisp_Object frame)$/;"	v
color2	xfaces.c	/^  (Lisp_Object color1, Lisp_Object color2, Lisp_Object frame)$/;"	v
colormap_t	w32fns.c	/^typedef struct colormap_t$/;"	s	file:
colormap_t	w32fns.c	/^} colormap_t;$/;"	t	typeref:struct:colormap_t	file:
colormap_t::colorref	w32fns.c	/^  COLORREF colorref;$/;"	m	struct:colormap_t	file:	access:public
colormap_t::name	w32fns.c	/^  const char *name;$/;"	m	struct:colormap_t	file:	access:public
colorref	w32fns.c	/^  COLORREF colorref;$/;"	m	struct:colormap_t	file:	access:public
colors	dispextern.h	/^  unsigned long *colors;$/;"	m	struct:image	access:public
colors	ftxfont.c	/^  XColor colors[2];$/;"	m	struct:ftxfont_frame_data	file:	access:public
colors	nsterm.h	/^  NSColor **colors;$/;"	m	struct:ns_color_table	access:public
colors_copied_bitwise_p	dispextern.h	/^  bool_bf colors_copied_bitwise_p : 1;$/;"	m	struct:face	access:public
colors_in_color_table	image.c	/^colors_in_color_table (int *n)$/;"	f	file:	signature:(int *n)
colors_in_color_table	image.c	/^static unsigned long *colors_in_color_table (int *n);$/;"	p	file:	signature:(int *n)
color_cells	xterm.h	/^  XColor *color_cells;$/;"	m	struct:x_display_info	access:public
color_count	xfaces.c	/^int color_count[256];$/;"	v
color_distance	xfaces.c	/^color_distance (XColor *x, XColor *y)$/;"	f	file:	signature:(XColor *x, XColor *y)
color_distance	xfaces.c	/^static int color_distance (XColor *x, XColor *y);$/;"	p	file:	signature:(XColor *x, XColor *y)
COLOR_INTENSITY	image.c	4669;"	d	file:
color_list	w32term.h	/^  struct w32_palette_entry * color_list;$/;"	m	struct:w32_display_info	typeref:struct:w32_display_info::w32_palette_entry	access:public
color_names	xterm.h	/^  struct color_name_cache_entry *color_names;$/;"	m	struct:x_display_info	typeref:struct:x_display_info::color_name_cache_entry	access:public
color_name_cache_entry	xterm.h	/^struct color_name_cache_entry$/;"	s
color_name_cache_entry::name	xterm.h	/^  char *name;$/;"	m	struct:color_name_cache_entry	access:public
color_name_cache_entry::next	xterm.h	/^  struct color_name_cache_entry *next;$/;"	m	struct:color_name_cache_entry	typeref:struct:color_name_cache_entry::color_name_cache_entry	access:public
color_name_cache_entry::rgb	xterm.h	/^  XColor rgb;$/;"	m	struct:color_name_cache_entry	access:public
color_p	nsterm.h	/^  int color_p;$/;"	m	struct:ns_display_info	access:public
color_table	nsterm.h	/^  struct ns_color_table *color_table;$/;"	m	struct:ns_display_info	typeref:struct:ns_display_info::ns_color_table	access:public
COLOR_TABLE_SUPPORT	image.c	109;"	d	file:
ColPosition	cm.h	117;"	d
ColPositionCost	cm.h	139;"	d
column	indent.c	/^  (Lisp_Object column, Lisp_Object force)$/;"	v
column	indent.c	/^  (Lisp_Object column, Lisp_Object minimum)$/;"	v
column_number_displayed	window.h	/^    ptrdiff_t column_number_displayed;$/;"	m	struct:window	access:public
column_widget	xterm.h	/^  Widget column_widget;$/;"	m	struct:x_output	access:public
column_width	frame.h	/^  int column_width;$/;"	m	struct:frame	access:public
combination_limit	window.c	/^  Lisp_Object combination_limit, window_parameters;$/;"	m	struct:saved_window	file:	access:public
combination_limit	window.h	/^    Lisp_Object combination_limit;$/;"	m	struct:window	access:public
combine_after_change_buffer	insdel.c	/^static Lisp_Object combine_after_change_buffer;$/;"	v	file:
combine_after_change_list	insdel.c	/^static Lisp_Object combine_after_change_list;$/;"	v	file:
COMBINING_AFTER	editfns.c	3334;"	d	file:
COMBINING_BEFORE	editfns.c	3333;"	d	file:
COMBINING_BOTH	editfns.c	3335;"	d	file:
combining_capability	font.h	/^  Lisp_Object (*combining_capability) (struct font *font);$/;"	m	struct:font_driver	access:public
COMBINING_NO	editfns.c	3332;"	d	file:
command	keymap.c	/^  (Lisp_Object command, Lisp_Object mapvar, Lisp_Object name)$/;"	v
command	keymap.c	/^  (Lisp_Object command, Lisp_Object position, Lisp_Object keymaps)$/;"	v
command	process.h	/^    Lisp_Object command;$/;"	m	struct:Lisp_Process	access:public
command	w32fns.c	/^  (Lisp_Object command, Lisp_Object frame)$/;"	v
command_loop	keyboard.c	/^command_loop (void)$/;"	f	signature:(void)
command_loop	keyboard.c	/^static Lisp_Object command_loop (void);$/;"	p	file:	signature:(void)
command_loop_1	keyboard.c	/^command_loop_1 (void)$/;"	f	signature:(void)
command_loop_1	lisp.h	/^extern Lisp_Object command_loop_1 (void);$/;"	p	signature:(void)
command_loop_2	keyboard.c	/^command_loop_2 (Lisp_Object ignore)$/;"	f	file:	signature:(Lisp_Object ignore)
command_loop_2	keyboard.c	/^static Lisp_Object command_loop_2 (Lisp_Object);$/;"	p	file:
command_loop_level	keyboard.c	/^EMACS_INT command_loop_level;$/;"	v
command_remapping_vector	keymap.c	/^static Lisp_Object command_remapping_vector;$/;"	v	file:
CommitRoutine	w32heap.c	/^  PRTL_HEAP_COMMIT_ROUTINE CommitRoutine;$/;"	m	struct:_RTL_HEAP_PARAMETERS	file:	access:public
committed	w32heap.c	/^static DWORD_PTR committed = 0;$/;"	v	file:
common_flags	coding.h	/^  unsigned common_flags : 14;$/;"	m	struct:coding_system	access:public
COMMON_MULTIPLE	alloc.c	623;"	d	file:
compact	buffer.h	/^    EMACS_INT compact;		\/* Set to modiff each time when compact_buffer$/;"	m	struct:buffer_text	access:public
compact_buffer	buffer.c	/^compact_buffer (struct buffer *buffer)$/;"	f	signature:(struct buffer *buffer)
compact_buffer	buffer.h	/^extern void compact_buffer (struct buffer *);$/;"	p	signature:(struct buffer *)
compact_codes_p	charset.h	/^  bool_bf compact_codes_p : 1;$/;"	m	struct:charset	access:public
compact_font_caches	alloc.c	/^compact_font_caches (void)$/;"	f	file:	signature:(void)
compact_font_caches	alloc.c	5741;"	d	file:
compact_font_cache_entry	alloc.c	/^compact_font_cache_entry (Lisp_Object entry)$/;"	f	file:	signature:(Lisp_Object entry)
compact_small_strings	alloc.c	/^compact_small_strings (void)$/;"	f	file:	signature:(void)
compact_small_strings	alloc.c	/^static void compact_small_strings (void);$/;"	p	file:	signature:(void)
compact_undo_list	alloc.c	/^compact_undo_list (Lisp_Object list)$/;"	f	file:	signature:(Lisp_Object list)
CompareStringW_Proc	w32proc.c	/^typedef int (WINAPI *CompareStringW_Proc)$/;"	t	file:
compare_contin	termcap.c	/^compare_contin (char *str1, char *str2)$/;"	f	file:	signature:(char *str1, char *str2)
compare_contin	termcap.c	/^static bool compare_contin (char *, char *);$/;"	p	file:	signature:(char *, char *)
compare_env	w32proc.c	/^compare_env (const void *strp1, const void *strp2)$/;"	f	file:	signature:(const void *strp1, const void *strp2)
compare_fonts_by_sort_order	xfaces.c	/^compare_fonts_by_sort_order (const void *v1, const void *v2)$/;"	f	file:	signature:(const void *v1, const void *v2)
compare_font_names	xfont.c	/^compare_font_names (const void *name1, const void *name2)$/;"	f	file:	signature:(const void *name1, const void *name2)
compare_overlays	buffer.c	/^compare_overlays (const void *v1, const void *v2)$/;"	f	file:	signature:(const void *v1, const void *v2)
compare_overlay_entries	xdisp.c	/^compare_overlay_entries (const void *e1, const void *e2)$/;"	f	file:	signature:(const void *e1, const void *e2)
compare_string_intervals	intervals.c	/^compare_string_intervals (Lisp_Object s1, Lisp_Object s2)$/;"	f	signature:(Lisp_Object s1, Lisp_Object s2)
compare_string_intervals	intervals.h	/^extern bool compare_string_intervals (Lisp_Object, Lisp_Object);$/;"	p	signature:(Lisp_Object, Lisp_Object)
compare_window_configurations	window.c	/^compare_window_configurations (Lisp_Object configuration1,$/;"	f	signature:(Lisp_Object configuration1, Lisp_Object configuration2, bool ignore_positions)
compare_window_configurations	window.h	/^extern bool compare_window_configurations (Lisp_Object, Lisp_Object, bool);$/;"	p	signature:(Lisp_Object, Lisp_Object, bool)
COMPILEDP	lisp.h	/^COMPILEDP (Lisp_Object a)$/;"	f	signature:(Lisp_Object a)
COMPILED_ARGLIST	lisp.h	/^    COMPILED_ARGLIST = 0,$/;"	e	enum:Lisp_Compiled
COMPILED_BYTECODE	lisp.h	/^    COMPILED_BYTECODE = 1,$/;"	e	enum:Lisp_Compiled
COMPILED_CONSTANTS	lisp.h	/^    COMPILED_CONSTANTS = 2,$/;"	e	enum:Lisp_Compiled
COMPILED_DOC_STRING	lisp.h	/^    COMPILED_DOC_STRING = 4,$/;"	e	enum:Lisp_Compiled
COMPILED_INTERACTIVE	lisp.h	/^    COMPILED_INTERACTIVE = 5$/;"	e	enum:Lisp_Compiled
COMPILED_STACK_DEPTH	lisp.h	/^    COMPILED_STACK_DEPTH = 3,$/;"	e	enum:Lisp_Compiled
compile_pattern	lisp.h	/^extern struct re_pattern_buffer *compile_pattern (Lisp_Object,$/;"	p	signature:(Lisp_Object, struct re_registers *, Lisp_Object, bool, bool)
compile_pattern	search.c	/^compile_pattern (Lisp_Object pattern, struct re_registers *regp,$/;"	f	signature:(Lisp_Object pattern, struct re_registers *regp, Lisp_Object translate, bool posix, bool multibyte)
compile_pattern_1	search.c	/^compile_pattern_1 (struct regexp_cache *cp, Lisp_Object pattern,$/;"	f	file:	signature:(struct regexp_cache *cp, Lisp_Object pattern, Lisp_Object translate, bool posix)
compile_stack_elt_t	regex.c	/^} compile_stack_elt_t;$/;"	t	typeref:struct:__anon146	file:
COMPILE_STACK_EMPTY	regex.c	1721;"	d	file:
COMPILE_STACK_FULL	regex.c	1722;"	d	file:
COMPILE_STACK_TOP	regex.c	1725;"	d	file:
compile_stack_type	regex.c	/^} compile_stack_type;$/;"	t	typeref:struct:__anon147	file:
complement_process_encoding_system	coding.c	/^complement_process_encoding_system (Lisp_Object coding_system)$/;"	f	signature:(Lisp_Object coding_system)
complement_process_encoding_system	coding.h	/^extern Lisp_Object complement_process_encoding_system (Lisp_Object);$/;"	p	signature:(Lisp_Object)
completed	lread.c	/^  Lisp_Object completed;$/;"	m	struct:subst	file:	access:public
completed	w32term.h	/^  int                   completed;$/;"	m	struct:deferred_msg	access:public
complete_deferred_msg	w32fns.c	/^complete_deferred_msg (HWND hwnd, UINT msg, LRESULT result)$/;"	f	signature:(HWND hwnd, UINT msg, LRESULT result)
complete_deferred_msg	w32term.h	/^extern void complete_deferred_msg (HWND hwnd, UINT msg, LRESULT result);$/;"	p	signature:(HWND hwnd, UINT msg, LRESULT result)
complete_filename_p	lread.c	/^complete_filename_p (Lisp_Object pathname)$/;"	f	file:	signature:(Lisp_Object pathname)
completion_ignore_case	globals.h	913;"	d
component	frame.c	/^  (Lisp_Object attribute, Lisp_Object class, Lisp_Object component,$/;"	v
components	composite.c	/^   Lisp_Object components, Lisp_Object modification_func)$/;"	v
components	composite.c	/^  (Lisp_Object start, Lisp_Object end, Lisp_Object components, Lisp_Object modification_func)$/;"	v
compose_text	composite.c	/^compose_text (ptrdiff_t start, ptrdiff_t end, Lisp_Object components,$/;"	f	signature:(ptrdiff_t start, ptrdiff_t end, Lisp_Object components, Lisp_Object modification_func, Lisp_Object string)
compose_text	composite.h	/^extern void compose_text (ptrdiff_t, ptrdiff_t, Lisp_Object, Lisp_Object,$/;"	p	signature:(ptrdiff_t, ptrdiff_t, Lisp_Object, Lisp_Object, Lisp_Object)
COMPOSING_CHAR	coding.h	/^    COMPOSING_CHAR,$/;"	e	enum:composition_state
COMPOSING_COMPONENT_CHAR	coding.h	/^    COMPOSING_COMPONENT_CHAR,$/;"	e	enum:composition_state
COMPOSING_COMPONENT_RULE	coding.h	/^    COMPOSING_COMPONENT_RULE$/;"	e	enum:composition_state
COMPOSING_NO	coding.h	/^    COMPOSING_NO,$/;"	e	enum:composition_state
COMPOSING_RULE	coding.h	/^    COMPOSING_RULE,$/;"	e	enum:composition_state
COMPOSITE_GLYPH	dispextern.h	/^  COMPOSITE_GLYPH,$/;"	e	enum:glyph_type
composition	composite.h	/^struct composition {$/;"	s
composition::ascent	composite.h	/^  short pixel_width, ascent, descent;$/;"	m	struct:composition	access:public
composition::descent	composite.h	/^  short pixel_width, ascent, descent;$/;"	m	struct:composition	access:public
composition::font	composite.h	/^  void *font;$/;"	m	struct:composition	access:public
composition::glyph_len	composite.h	/^  int glyph_len;$/;"	m	struct:composition	access:public
composition::hash_index	composite.h	/^  ptrdiff_t hash_index;$/;"	m	struct:composition	access:public
composition::lbearing	composite.h	/^  short lbearing, rbearing;$/;"	m	struct:composition	access:public
composition::method	composite.h	/^  enum composition_method method;$/;"	m	struct:composition	typeref:enum:composition::composition_method	access:public
composition::offsets	composite.h	/^  short *offsets;$/;"	m	struct:composition	access:public
composition::pixel_width	composite.h	/^  short pixel_width, ascent, descent;$/;"	m	struct:composition	access:public
composition::rbearing	composite.h	/^  short lbearing, rbearing;$/;"	m	struct:composition	access:public
composition::width	composite.h	/^  int width;$/;"	m	struct:composition	access:public
composition_adjust_point	composite.c	/^composition_adjust_point (ptrdiff_t last_pt, ptrdiff_t new_pt)$/;"	f	signature:(ptrdiff_t last_pt, ptrdiff_t new_pt)
composition_adjust_point	composite.h	/^extern ptrdiff_t composition_adjust_point (ptrdiff_t, ptrdiff_t);$/;"	p	signature:(ptrdiff_t, ptrdiff_t)
COMPOSITION_COMPONENTS	composite.h	75;"	d
composition_compute_stop_pos	composite.c	/^composition_compute_stop_pos (struct composition_it *cmp_it, ptrdiff_t charpos, ptrdiff_t bytepos, ptrdiff_t endpos, Lisp_Object string)$/;"	f	signature:(struct composition_it *cmp_it, ptrdiff_t charpos, ptrdiff_t bytepos, ptrdiff_t endpos, Lisp_Object string)
composition_compute_stop_pos	composite.h	/^extern void composition_compute_stop_pos (struct composition_it *,$/;"	p	signature:(struct composition_it *, ptrdiff_t, ptrdiff_t, ptrdiff_t, Lisp_Object)
COMPOSITION_DECODE_REFS	composite.h	109;"	d
COMPOSITION_DECODE_RULE	composite.h	120;"	d
COMPOSITION_ENCODE_RULE	composite.h	134;"	d
COMPOSITION_ENCODE_RULE_VALID	composite.h	129;"	d
COMPOSITION_GLYPH	composite.h	88;"	d
composition_gstring_from_id	composite.c	/^composition_gstring_from_id (ptrdiff_t id)$/;"	f	signature:(ptrdiff_t id)
composition_gstring_from_id	composite.h	/^extern Lisp_Object composition_gstring_from_id (ptrdiff_t);$/;"	p	signature:(ptrdiff_t)
composition_gstring_p	composite.c	/^composition_gstring_p (Lisp_Object gstring)$/;"	f	signature:(Lisp_Object gstring)
composition_gstring_p	composite.h	/^extern bool composition_gstring_p (Lisp_Object);$/;"	p	signature:(Lisp_Object)
composition_gstring_put_cache	composite.c	/^composition_gstring_put_cache (Lisp_Object gstring, ptrdiff_t len)$/;"	f	signature:(Lisp_Object gstring, ptrdiff_t len)
composition_gstring_put_cache	composite.h	/^extern Lisp_Object composition_gstring_put_cache (Lisp_Object, ptrdiff_t);$/;"	p	signature:(Lisp_Object, ptrdiff_t)
composition_gstring_width	composite.c	/^composition_gstring_width (Lisp_Object gstring, ptrdiff_t from, ptrdiff_t to,$/;"	f	signature:(Lisp_Object gstring, ptrdiff_t from, ptrdiff_t to, struct font_metrics *metrics)
composition_gstring_width	composite.h	/^extern int composition_gstring_width (Lisp_Object, ptrdiff_t, ptrdiff_t,$/;"	p	signature:(Lisp_Object, ptrdiff_t, ptrdiff_t, struct font_metrics *)
composition_hash_table	composite.c	/^Lisp_Object composition_hash_table;$/;"	v
COMPOSITION_ID	composite.h	66;"	d
composition_it	dispextern.h	/^struct composition_it$/;"	s
composition_it::ch	dispextern.h	/^  int ch;$/;"	m	struct:composition_it	access:public
composition_it::charpos	dispextern.h	/^  ptrdiff_t charpos;$/;"	m	struct:composition_it	access:public
composition_it::from	dispextern.h	/^  int from, to;$/;"	m	struct:composition_it	access:public
composition_it::id	dispextern.h	/^  ptrdiff_t id;$/;"	m	struct:composition_it	access:public
composition_it::lookback	dispextern.h	/^  ptrdiff_t lookback;$/;"	m	struct:composition_it	access:public
composition_it::nbytes	dispextern.h	/^  int nchars, nbytes;$/;"	m	struct:composition_it	access:public
composition_it::nchars	dispextern.h	/^  int nchars, nbytes;$/;"	m	struct:composition_it	access:public
composition_it::nglyphs	dispextern.h	/^  int nglyphs;$/;"	m	struct:composition_it	access:public
composition_it::reversed_p	dispextern.h	/^  bool reversed_p;$/;"	m	struct:composition_it	access:public
composition_it::rule_idx	dispextern.h	/^  EMACS_INT rule_idx;$/;"	m	struct:composition_it	access:public
composition_it::stop_pos	dispextern.h	/^  ptrdiff_t stop_pos;$/;"	m	struct:composition_it	access:public
composition_it::to	dispextern.h	/^  int from, to;$/;"	m	struct:composition_it	access:public
composition_it::width	dispextern.h	/^  int width;$/;"	m	struct:composition_it	access:public
COMPOSITION_LENGTH	composite.h	69;"	d
composition_method	composite.h	/^composition_method (Lisp_Object prop)$/;"	f	signature:(Lisp_Object prop)
composition_method	composite.h	/^enum composition_method {$/;"	g
COMPOSITION_MODIFICATION_FUNC	composite.h	81;"	d
COMPOSITION_NO	composite.h	/^  COMPOSITION_NO$/;"	e	enum:composition_method
COMPOSITION_PROP_IDX	dispextern.h	/^  COMPOSITION_PROP_IDX,$/;"	e	enum:prop_idx
composition_registered_p	composite.h	/^composition_registered_p (Lisp_Object prop)$/;"	f	signature:(Lisp_Object prop)
COMPOSITION_RELATIVE	composite.h	/^  COMPOSITION_RELATIVE,$/;"	e	enum:composition_method
composition_reseat_it	composite.c	/^composition_reseat_it (struct composition_it *cmp_it, ptrdiff_t charpos,$/;"	f	signature:(struct composition_it *cmp_it, ptrdiff_t charpos, ptrdiff_t bytepos, ptrdiff_t endpos, struct window *w, struct face *face, Lisp_Object string)
composition_reseat_it	composite.h	/^extern bool composition_reseat_it (struct composition_it *, ptrdiff_t,$/;"	p	signature:(struct composition_it *, ptrdiff_t, ptrdiff_t, ptrdiff_t, struct window *, struct face *, Lisp_Object)
COMPOSITION_RULE	composite.h	98;"	d
composition_state	coding.h	/^enum composition_state$/;"	g
composition_status	coding.h	/^struct composition_status$/;"	s
composition_status::carryover	coding.h	/^  int carryover[4 		\/* annotation header *\/$/;"	m	struct:composition_status	access:public
composition_status::length	coding.h	/^  int length;		  \/* number of elements produced in charbuf *\/$/;"	m	struct:composition_status	access:public
composition_status::method	coding.h	/^  enum composition_method method;$/;"	m	struct:composition_status	typeref:enum:composition_status::composition_method	access:public
composition_status::nchars	coding.h	/^  int nchars;		  \/* number of characters composed *\/$/;"	m	struct:composition_status	access:public
composition_status::ncomps	coding.h	/^  int ncomps;		  \/* number of composition components *\/$/;"	m	struct:composition_status	access:public
composition_status::old_form	coding.h	/^  bool old_form;	  \/* true if pre-21 form *\/$/;"	m	struct:composition_status	access:public
composition_status::state	coding.h	/^  enum composition_state state;$/;"	m	struct:composition_status	typeref:enum:composition_status::composition_state	access:public
composition_table	composite.c	/^struct composition **composition_table;$/;"	v	typeref:struct:composition
composition_table_size	composite.c	/^static ptrdiff_t composition_table_size;$/;"	v	file:
composition_update_it	composite.c	/^composition_update_it (struct composition_it *cmp_it, ptrdiff_t charpos, ptrdiff_t bytepos, Lisp_Object string)$/;"	f	signature:(struct composition_it *cmp_it, ptrdiff_t charpos, ptrdiff_t bytepos, Lisp_Object string)
composition_update_it	composite.h	/^extern int composition_update_it (struct composition_it *,$/;"	p	signature:(struct composition_it *, ptrdiff_t, ptrdiff_t, Lisp_Object)
composition_valid_p	composite.h	/^composition_valid_p (ptrdiff_t start, ptrdiff_t end, Lisp_Object prop)$/;"	f	signature:(ptrdiff_t start, ptrdiff_t end, Lisp_Object prop)
COMPOSITION_WITH_ALTCHARS	composite.h	/^  COMPOSITION_WITH_ALTCHARS,$/;"	e	enum:composition_method
COMPOSITION_WITH_RULE	composite.h	/^  COMPOSITION_WITH_RULE,$/;"	e	enum:composition_method
COMPOSITION_WITH_RULE_ALTCHARS	composite.h	/^  COMPOSITION_WITH_RULE_ALTCHARS,$/;"	e	enum:composition_method
compute_char_face	dispextern.h	/^int compute_char_face (struct frame *, int, Lisp_Object);$/;"	p	signature:(struct frame *, int, Lisp_Object)
compute_char_face	xfaces.c	/^compute_char_face (struct frame *f, int ch, Lisp_Object prop)$/;"	f	signature:(struct frame *f, int ch, Lisp_Object prop)
compute_display_string_end	dispextern.h	/^extern ptrdiff_t compute_display_string_end (ptrdiff_t,$/;"	p	signature:(ptrdiff_t, struct bidi_string_data *)
compute_display_string_end	xdisp.c	/^compute_display_string_end (ptrdiff_t charpos, struct bidi_string_data *string)$/;"	f	signature:(ptrdiff_t charpos, struct bidi_string_data *string)
compute_display_string_pos	dispextern.h	/^extern ptrdiff_t compute_display_string_pos (struct text_pos *,$/;"	p	signature:(struct text_pos *, struct bidi_string_data *, struct window *, bool, int *)
compute_display_string_pos	xdisp.c	/^compute_display_string_pos (struct text_pos *position,$/;"	f	signature:(struct text_pos *position, struct bidi_string_data *string, struct window *w, bool frame_window_p, int *disp_prop)
compute_glyph_string_overhangs	dispextern.h	/^  void (*compute_glyph_string_overhangs) (struct glyph_string *s);$/;"	m	struct:redisplay_interface	access:public
compute_image_size	image.c	/^compute_image_size (size_t width, size_t height,$/;"	f	file:	signature:(size_t width, size_t height, Lisp_Object spec, int *d_width, int *d_height)
compute_input_wait_mask	process.c	/^compute_input_wait_mask (fd_set *mask)$/;"	f	file:	signature:(fd_set *mask)
compute_line_metrics	xdisp.c	/^compute_line_metrics (struct it *it)$/;"	f	file:	signature:(struct it *it)
compute_line_metrics	xdisp.c	/^static void compute_line_metrics (struct it *);$/;"	p	file:	signature:(struct it *)
compute_metrics	w32font.c	/^compute_metrics (HDC dc, struct w32font_info *w32_font, unsigned int code,$/;"	f	file:	signature:(HDC dc, struct w32font_info *w32_font, unsigned int code, struct w32_metric_cache *metrics)
compute_metrics	w32font.c	/^static void compute_metrics (HDC, struct w32font_info *, unsigned int,$/;"	p	file:	signature:(HDC, struct w32font_info *, unsigned int, struct w32_metric_cache *)
compute_motion	indent.c	/^compute_motion (ptrdiff_t from, ptrdiff_t frombyte, EMACS_INT fromvpos,$/;"	f	signature:(ptrdiff_t from, ptrdiff_t frombyte, EMACS_INT fromvpos, EMACS_INT fromhpos, bool did_motion, ptrdiff_t to, EMACS_INT tovpos, EMACS_INT tohpos, EMACS_INT width, ptrdiff_t hscroll, int tab_offset, struct window *win)
compute_motion	indent.h	/^struct position *compute_motion (ptrdiff_t from, ptrdiff_t frombyte,$/;"	p	signature:(ptrdiff_t from, ptrdiff_t frombyte, EMACS_INT fromvpos, EMACS_INT fromhpos, bool did_motion, ptrdiff_t to, EMACS_INT tovpos, EMACS_INT tohpos, EMACS_INT width, ptrdiff_t hscroll, int tab_offset, struct window *)
compute_non_keyboard_wait_mask	process.c	/^compute_non_keyboard_wait_mask (fd_set *mask)$/;"	f	file:	signature:(fd_set *mask)
compute_non_process_wait_mask	process.c	/^compute_non_process_wait_mask (fd_set *mask)$/;"	f	file:	signature:(fd_set *mask)
compute_overhangs_and_x	xdisp.c	/^compute_overhangs_and_x (struct glyph_string *s, int x, bool backward_p)$/;"	f	file:	signature:(struct glyph_string *s, int x, bool backward_p)
compute_stop_pos	xdisp.c	/^compute_stop_pos (struct it *it)$/;"	f	file:	signature:(struct it *it)
compute_stop_pos	xdisp.c	/^static void compute_stop_pos (struct it *);$/;"	p	file:	signature:(struct it *)
compute_stop_pos_backwards	xdisp.c	/^compute_stop_pos_backwards (struct it *it)$/;"	f	file:	signature:(struct it *it)
compute_string_pos	xdisp.c	/^compute_string_pos (struct text_pos *newpos, struct text_pos pos, Lisp_Object string)$/;"	f	file:	signature:(struct text_pos *newpos, struct text_pos pos, Lisp_Object string)
compute_tip_xy	w32fns.c	/^compute_tip_xy (struct frame *f,$/;"	f	file:	signature:(struct frame *f, Lisp_Object parms, Lisp_Object dx, Lisp_Object dy, int width, int height, int *root_x, int *root_y)
compute_tip_xy	w32fns.c	/^static void compute_tip_xy (struct frame *, Lisp_Object, Lisp_Object,$/;"	p	file:	signature:(struct frame *, Lisp_Object, Lisp_Object, Lisp_Object, int, int, int *, int *)
compute_tip_xy	xfns.c	/^compute_tip_xy (struct frame *f, Lisp_Object parms, Lisp_Object dx, Lisp_Object dy, int width, int height, int *root_x, int *root_y)$/;"	f	file:	signature:(struct frame *f, Lisp_Object parms, Lisp_Object dx, Lisp_Object dy, int width, int height, int *root_x, int *root_y)
compute_tip_xy	xfns.c	/^static void compute_tip_xy (struct frame *, Lisp_Object, Lisp_Object,$/;"	p	file:	signature:(struct frame *, Lisp_Object, Lisp_Object, Lisp_Object, int, int, int *, int *)
compute_window_start_on_continuation_line	xdisp.c	/^compute_window_start_on_continuation_line (struct window *w)$/;"	f	file:	signature:(struct window *w)
compute_write_mask	process.c	/^compute_write_mask (fd_set *mask)$/;"	f	file:	signature:(fd_set *mask)
comp_range	macfont.h	/^  CFRange comp_range;$/;"	m	struct:mac_glyph_layout	access:public
comstr_start	syntax.c	/^    ptrdiff_t comstr_start;  \/* Position of last comment\/string starter.  *\/$/;"	m	struct:lisp_parse_state	file:	access:public
comstyle	syntax.c	/^    int comstyle;  \/* comment style a=0, or b=1, or ST_COMMENT_STYLE.  *\/$/;"	m	struct:lisp_parse_state	file:	access:public
concat	fns.c	/^concat (ptrdiff_t nargs, Lisp_Object *args,$/;"	f	file:	signature:(ptrdiff_t nargs, Lisp_Object *args, enum Lisp_Type target_type, bool last_special)
concat	fns.c	/^static Lisp_Object concat (ptrdiff_t nargs, Lisp_Object *args,$/;"	p	file:	signature:(ptrdiff_t nargs, Lisp_Object *args, enum Lisp_Type target_type, bool last_special)
concat2	fns.c	/^concat2 (Lisp_Object s1, Lisp_Object s2)$/;"	f	signature:(Lisp_Object s1, Lisp_Object s2)
concat2	lisp.h	/^extern Lisp_Object concat2 (Lisp_Object, Lisp_Object);$/;"	p	signature:(Lisp_Object, Lisp_Object)
concat3	fns.c	/^concat3 (Lisp_Object s1, Lisp_Object s2, Lisp_Object s3)$/;"	f	signature:(Lisp_Object s1, Lisp_Object s2, Lisp_Object s3)
concat3	lisp.h	/^extern Lisp_Object concat3 (Lisp_Object, Lisp_Object, Lisp_Object);$/;"	p	signature:(Lisp_Object, Lisp_Object, Lisp_Object)
cond	thread.c	/^  (Lisp_Object cond, Lisp_Object all)$/;"	v
cond	thread.h	/^  sys_cond_t cond;$/;"	m	struct:Lisp_CondVar	access:public
condemned_scroll_bars	frame.h	/^  Lisp_Object condemned_scroll_bars;$/;"	m	struct:frame	access:public
condemn_scroll_bars_hook	termhooks.h	/^  void (*condemn_scroll_bars_hook) (struct frame *frame);$/;"	m	struct:terminal	access:public
condition	thread.h	/^  sys_cond_t condition;$/;"	m	struct:__anon103	access:public
CONDITIONAL_REASSIGN	term.c	1423;"	d	file:
CONDITIONAL_REASSIGN	term.c	1441;"	d	file:
CONDITION_CASE	lisp.h	/^enum handlertype { CATCHER, CONDITION_CASE, CATCHER_ALL };$/;"	e	enum:handlertype
condition_notify_callback	thread.c	/^condition_notify_callback (void *arg)$/;"	f	file:	signature:(void *arg)
condition_wait_callback	thread.c	/^condition_wait_callback (void *arg)$/;"	f	file:	signature:(void *arg)
CONDVARP	thread.h	/^CONDVARP (Lisp_Object a)$/;"	f	signature:(Lisp_Object a)
CONDV_BROADCAST	systhread.h	/^enum { CONDV_SIGNAL = 0, CONDV_BROADCAST = 1, CONDV_MAX = 2 };$/;"	e	enum:__anon44
CONDV_MAX	systhread.h	/^enum { CONDV_SIGNAL = 0, CONDV_BROADCAST = 1, CONDV_MAX = 2 };$/;"	e	enum:__anon44
CONDV_SIGNAL	systhread.h	/^enum { CONDV_SIGNAL = 0, CONDV_BROADCAST = 1, CONDV_MAX = 2 };$/;"	e	enum:__anon44
configure	sound.c	/^  void (* configure) (struct sound_device *device);$/;"	m	struct:sound_device	file:	access:public
CONFIG_CHANGED_EVENT	termhooks.h	/^  , CONFIG_CHANGED_EVENT$/;"	e	enum:event_kind
config_h	Makefile	/^config_h = config.h $(srcdir)\/conf_post.h$/;"	m
config_scroll_bar_cols	frame.h	/^  int config_scroll_bar_cols;$/;"	m	struct:frame	access:public
config_scroll_bar_height	frame.h	/^  int config_scroll_bar_height;$/;"	m	struct:frame	access:public
config_scroll_bar_lines	frame.h	/^  int config_scroll_bar_lines;$/;"	m	struct:frame	access:public
config_scroll_bar_width	frame.h	/^  int config_scroll_bar_width;$/;"	m	struct:frame	access:public
connect	w32.c	224;"	d	file:
connecting_status	process.c	/^connecting_status (Lisp_Object status)$/;"	f	file:	signature:(Lisp_Object status)
connection	xterm.h	/^  int connection;$/;"	m	struct:x_display_info	access:public
connect_counter	process.c	/^static EMACS_INT connect_counter = 0;$/;"	v	file:
connect_network_socket	process.c	/^connect_network_socket (Lisp_Object proc, Lisp_Object addrinfos,$/;"	f	file:	signature:(Lisp_Object proc, Lisp_Object addrinfos, Lisp_Object use_external_socket_p)
conses	alloc.c	/^  struct Lisp_Cons conses[CONS_BLOCK_SIZE];$/;"	m	struct:cons_block	typeref:struct:cons_block::Lisp_Cons	file:	access:public
CONSIDER	marker.c	243;"	d	file:
CONSIDER	marker.c	248;"	d	file:
CONSIDER	marker.c	390;"	d	file:
CONSIDER	marker.c	90;"	d	file:
consing_since_gc	alloc.c	/^EMACS_INT consing_since_gc;$/;"	v
console	w32fns.c	/^  HWND console;   \/* console window handle *\/$/;"	m	struct:__anon74	file:	access:public
console_cursor_info	w32console.c	/^static CONSOLE_CURSOR_INFO console_cursor_info;$/;"	v	file:
CONSP	lisp.h	/^(CONSP) (Lisp_Object x)$/;"	f	signature:(Lisp_Object x)
CONSP	lisp.h	354;"	d
constrain_row_ascent_descent_p	dispextern.h	/^  bool_bf constrain_row_ascent_descent_p : 1;$/;"	m	struct:it	access:public
construct_console_modifiers	w32fns.c	/^construct_console_modifiers (void)$/;"	f	file:	signature:(void)
construct_drag_n_drop	w32term.c	/^construct_drag_n_drop (struct input_event *result, W32Msg *msg, struct frame *f)$/;"	f	file:	signature:(struct input_event *result, W32Msg *msg, struct frame *f)
construct_mouse_click	w32term.c	/^construct_mouse_click (struct input_event *result, W32Msg *msg, struct frame *f)$/;"	f	file:	signature:(struct input_event *result, W32Msg *msg, struct frame *f)
construct_mouse_click	xterm.c	/^construct_mouse_click (struct input_event *result,$/;"	f	file:	signature:(struct input_event *result, const XButtonEvent *event, struct frame *f)
construct_mouse_wheel	w32term.c	/^construct_mouse_wheel (struct input_event *result, W32Msg *msg, struct frame *f)$/;"	f	file:	signature:(struct input_event *result, W32Msg *msg, struct frame *f)
constype	lisp.h	/^enum constype {CONSTYPE_HEAP, CONSTYPE_PURE};$/;"	g
CONSTYPE_HEAP	lisp.h	/^enum constype {CONSTYPE_HEAP, CONSTYPE_PURE};$/;"	e	enum:constype
CONSTYPE_PURE	lisp.h	/^enum constype {CONSTYPE_HEAP, CONSTYPE_PURE};$/;"	e	enum:constype
const_re_char	regex.c	/^typedef const re_char const_re_char;$/;"	t	file:
const_re_char	regex.c	/^typedef re_char const_re_char;$/;"	t	file:
consumed	ccl.h	/^  int consumed;$/;"	m	struct:ccl_program	access:public
consumed	coding.h	/^  ptrdiff_t produced, produced_char, consumed, consumed_char;$/;"	m	struct:coding_system	access:public
consumed_char	coding.h	/^  ptrdiff_t produced, produced_char, consumed, consumed_char;$/;"	m	struct:coding_system	access:public
consume_chars	coding.c	/^consume_chars (struct coding_system *coding, Lisp_Object translation_table,$/;"	f	file:	signature:(struct coding_system *coding, Lisp_Object translation_table, int max_lookup)
cons_block	alloc.c	/^static struct cons_block *cons_block;$/;"	v	typeref:struct:cons_block	file:
cons_block	alloc.c	/^struct cons_block$/;"	s	file:
CONS_BLOCK	alloc.c	2688;"	d	file:
cons_block::conses	alloc.c	/^  struct Lisp_Cons conses[CONS_BLOCK_SIZE];$/;"	m	struct:cons_block	typeref:struct:cons_block::Lisp_Cons	file:	access:public
cons_block::gcmarkbits	alloc.c	/^  bits_word gcmarkbits[1 + CONS_BLOCK_SIZE \/ BITS_PER_BITS_WORD];$/;"	m	struct:cons_block	file:	access:public
cons_block::next	alloc.c	/^  struct cons_block *next;$/;"	m	struct:cons_block	typeref:struct:cons_block::cons_block	file:	access:public
cons_block_index	alloc.c	/^static int cons_block_index = CONS_BLOCK_SIZE;$/;"	v	file:
CONS_BLOCK_SIZE	alloc.c	2682;"	d	file:
cons_cells_consed	globals.h	819;"	d
cons_free_list	alloc.c	/^static struct Lisp_Cons *cons_free_list;$/;"	v	typeref:struct:Lisp_Cons	file:
CONS_INDEX	alloc.c	2691;"	d	file:
CONS_MARK	alloc.c	2705;"	d	file:
CONS_MARKED_P	alloc.c	2702;"	d	file:
CONS_TO_INTEGER	lisp.h	3302;"	d
cons_to_signed	data.c	/^cons_to_signed (Lisp_Object c, intmax_t min, intmax_t max)$/;"	f	signature:(Lisp_Object c, intmax_t min, intmax_t max)
cons_to_signed	lisp.h	/^extern intmax_t cons_to_signed (Lisp_Object, intmax_t, intmax_t);$/;"	p	signature:(Lisp_Object, intmax_t, intmax_t)
cons_to_unsigned	data.c	/^cons_to_unsigned (Lisp_Object c, uintmax_t max)$/;"	f	signature:(Lisp_Object c, uintmax_t max)
cons_to_unsigned	lisp.h	/^extern uintmax_t cons_to_unsigned (Lisp_Object, uintmax_t);$/;"	p	signature:(Lisp_Object, uintmax_t)
cons_to_x_long	xselect.c	/^cons_to_x_long (Lisp_Object obj)$/;"	f	file:	signature:(Lisp_Object obj)
CONS_UNMARK	alloc.c	2708;"	d	file:
container	emacsgtkfixed.h	/^  GtkFixed container;$/;"	m	struct:_EmacsFixed	access:public
contains_overlapping_glyphs_p	dispextern.h	/^  bool_bf contains_overlapping_glyphs_p : 1;$/;"	m	struct:glyph_row	access:public
contents	lisp.h	/^    Lisp_Object contents[(1 << CHARTAB_SIZE_BITS_0)];$/;"	m	struct:Lisp_Char_Table	access:public
contents	lisp.h	/^    Lisp_Object contents[FLEXIBLE_ARRAY_MEMBER];$/;"	m	struct:Lisp_Sub_Char_Table	access:public
contents	lisp.h	/^    Lisp_Object contents[FLEXIBLE_ARRAY_MEMBER];$/;"	m	struct:Lisp_Vector	access:public
contents	menu.c	/^  (Lisp_Object position, Lisp_Object contents, Lisp_Object header)$/;"	v
contents	window.h	/^    Lisp_Object contents;$/;"	m	struct:window	access:public
context	keyboard.c	/^  (Lisp_Object data, Lisp_Object context, Lisp_Object signal)$/;"	v
contin	ccl.c	/^  (Lisp_Object ccl_prog, Lisp_Object status, Lisp_Object str, Lisp_Object contin, Lisp_Object unibyte_p)$/;"	v
contin	indent.h	/^    int contin;$/;"	m	struct:position	access:public
continuation_lines_width	dispextern.h	/^  int continuation_lines_width;$/;"	m	struct:glyph_row	access:public
continuation_lines_width	dispextern.h	/^  int continuation_lines_width;$/;"	m	struct:it	access:public
continuation_pixel_width	dispextern.h	/^  short truncation_pixel_width, continuation_pixel_width;$/;"	m	struct:it	access:public
continued_p	dispextern.h	/^  bool_bf continued_p : 1;$/;"	m	struct:glyph_row	access:public
continue_echo	keyboard.c	/^  (Lisp_Object prompt, Lisp_Object continue_echo, Lisp_Object dont_downcase_last, Lisp_Object can_return_switch_frame, Lisp_Object cmd_loop)$/;"	v
control_x_map	keymap.c	/^Lisp_Object control_x_map;	\/* The keymap used for globally bound$/;"	v
conversion_fail_tag	xselect.c	/^static Atom conversion_fail_tag;$/;"	v	file:
converted_selections	xselect.c	/^static struct selection_data *converted_selections;$/;"	v	typeref:struct:selection_data	file:
ConvertSecurityDescriptorToStringSecurityDescriptor_Proc	w32.c	/^typedef BOOL (WINAPI *ConvertSecurityDescriptorToStringSecurityDescriptor_Proc) ($/;"	t	file:
ConvertStringSecurityDescriptorToSecurityDescriptor_Proc	w32.c	/^typedef BOOL (WINAPI *ConvertStringSecurityDescriptorToSecurityDescriptor_Proc) ($/;"	t	file:
convert_from_time_t	w32.c	/^convert_from_time_t (time_t time, FILETIME * pft)$/;"	f	file:	signature:(time_t time, FILETIME * pft)
CONVERT_FROM_XRECT	nsgui.h	148;"	d
CONVERT_FROM_XRECT	w32gui.h	128;"	d
convert_mono_to_color_image	image.c	/^convert_mono_to_color_image (struct frame *f, struct image *img,$/;"	f	file:	signature:(struct frame *f, struct image *img, COLORREF foreground, COLORREF background)
convert_sddl_to_sd	w32.c	/^convert_sddl_to_sd (LPCTSTR StringSecurityDescriptor,$/;"	f	file:	signature:(LPCTSTR StringSecurityDescriptor, DWORD StringSDRevision, PSECURITY_DESCRIPTOR *SecurityDescriptor, PULONG SecurityDescriptorSize)
convert_sd_to_sddl	w32.c	/^convert_sd_to_sddl (PSECURITY_DESCRIPTOR SecurityDescriptor,$/;"	f	file:	signature:(PSECURITY_DESCRIPTOR SecurityDescriptor, DWORD RequestedStringSDRevision, SECURITY_INFORMATION SecurityInformation, LPTSTR *StringSecurityDescriptor, PULONG StringSecurityDescriptorLen)
convert_time	w32.c	/^convert_time (FILETIME ft)$/;"	f	file:	signature:(FILETIME ft)
convert_to_handle_as_ascii	w32select.c	/^convert_to_handle_as_ascii (void)$/;"	f	file:	signature:(void)
convert_to_handle_as_ascii	w32select.c	/^static HGLOBAL convert_to_handle_as_ascii (void);$/;"	p	file:	signature:(void)
convert_to_handle_as_coded	w32select.c	/^convert_to_handle_as_coded (Lisp_Object coding_system)$/;"	f	file:	signature:(Lisp_Object coding_system)
convert_to_handle_as_coded	w32select.c	/^static HGLOBAL convert_to_handle_as_coded (Lisp_Object coding_system);$/;"	p	file:	signature:(Lisp_Object coding_system)
CONVERT_TO_XRECT	nsgui.h	142;"	d
CONVERT_TO_XRECT	w32gui.h	122;"	d
conv_addrinfo_to_lisp	process.c	/^conv_addrinfo_to_lisp (struct addrinfo *res)$/;"	f	file:	signature:(struct addrinfo *res)
conv_filename_from_w32_unicode	cygw32.c	/^conv_filename_from_w32_unicode (const wchar_t* in, int absolute_p)$/;"	f	file:	signature:(const wchar_t* in, int absolute_p)
conv_filename_to_w32_unicode	cygw32.c	/^conv_filename_to_w32_unicode (Lisp_Object in, int absolute_p)$/;"	f	file:	signature:(Lisp_Object in, int absolute_p)
conv_lisp_to_sockaddr	process.c	/^conv_lisp_to_sockaddr (int family, Lisp_Object address, struct sockaddr *sa, int len)$/;"	f	file:	signature:(int family, Lisp_Object address, struct sockaddr *sa, int len)
conv_sockaddr_to_lisp	process.c	/^conv_sockaddr_to_lisp (struct sockaddr *sa, ptrdiff_t len)$/;"	f	signature:(struct sockaddr *sa, ptrdiff_t len)
conv_sockaddr_to_lisp	process.h	/^extern Lisp_Object conv_sockaddr_to_lisp (struct sockaddr *, ptrdiff_t);$/;"	p	signature:(struct sockaddr *, ptrdiff_t)
coordinates	window.c	/^  (register Lisp_Object coordinates, Lisp_Object window)$/;"	v
coordinates_in_window	window.c	/^coordinates_in_window (register struct window *w, int x, int y)$/;"	f	file:	signature:(register struct window *w, int x, int y)
coords_in_mouse_face_p	xdisp.c	/^coords_in_mouse_face_p (struct window *w, int hpos, int vpos)$/;"	f	file:	signature:(struct window *w, int hpos, int vpos)
coords_in_mouse_face_p	xdisp.c	/^static bool coords_in_mouse_face_p (struct window *, int, int);$/;"	p	file:	signature:(struct window *, int, int)
COPYRIGHT	config.h	67;"	d
CopySid_Proc	w32.c	/^typedef BOOL (WINAPI * CopySid_Proc) ($/;"	t	file:
copy_category_entry	category.c	/^copy_category_entry (Lisp_Object table, Lisp_Object c, Lisp_Object val)$/;"	f	file:	signature:(Lisp_Object table, Lisp_Object c, Lisp_Object val)
copy_category_table	category.c	/^copy_category_table (Lisp_Object table)$/;"	f	file:	signature:(Lisp_Object table)
copy_char_table	chartab.c	/^copy_char_table (Lisp_Object table)$/;"	f	signature:(Lisp_Object table)
copy_char_table	lisp.h	/^extern Lisp_Object copy_char_table (Lisp_Object);$/;"	p	signature:(Lisp_Object)
COPY_CHUNK	unexw32.c	490;"	d	file:
copy_data_segment	unexmacosx.c	/^copy_data_segment (struct load_command *lc)$/;"	f	file:	signature:(struct load_command *lc)
copy_dyld_info	unexmacosx.c	/^copy_dyld_info (struct load_command *lc, long delta)$/;"	f	file:	signature:(struct load_command *lc, long delta)
copy_dysymtab	unexmacosx.c	/^copy_dysymtab (struct load_command *lc, long delta)$/;"	f	file:	signature:(struct load_command *lc, long delta)
copy_executable_and_dump_data	unexw32.c	/^copy_executable_and_dump_data (file_data *p_infile,$/;"	f	signature:(file_data *p_infile, file_data *p_outfile)
copy_executable_and_dump_data	unexw32.c	/^void copy_executable_and_dump_data (file_data *, file_data *);$/;"	p	file:	signature:(file_data *, file_data *)
copy_file	unexhp9k800.c	/^copy_file (int old, int new, int size)$/;"	f	file:	signature:(int old, int new, int size)
copy_font_spec	font.c	/^copy_font_spec (Lisp_Object font)$/;"	f	signature:(Lisp_Object font)
copy_font_spec	font.h	/^extern Lisp_Object copy_font_spec (Lisp_Object);$/;"	p	signature:(Lisp_Object)
copy_hash_table	fns.c	/^copy_hash_table (struct Lisp_Hash_Table *h1)$/;"	f	file:	signature:(struct Lisp_Hash_Table *h1)
copy_intervals	intervals.c	/^copy_intervals (INTERVAL tree, ptrdiff_t start, ptrdiff_t length)$/;"	f	signature:(INTERVAL tree, ptrdiff_t start, ptrdiff_t length)
copy_intervals	intervals.h	/^extern INTERVAL copy_intervals (INTERVAL, ptrdiff_t, ptrdiff_t);$/;"	p	signature:(INTERVAL, ptrdiff_t, ptrdiff_t)
copy_intervals_to_string	intervals.c	/^copy_intervals_to_string (Lisp_Object string, struct buffer *buffer,$/;"	f	signature:(Lisp_Object string, struct buffer *buffer, ptrdiff_t position, ptrdiff_t length)
copy_intervals_to_string	intervals.h	/^extern void copy_intervals_to_string (Lisp_Object, struct buffer *,$/;"	p	signature:(Lisp_Object, struct buffer *, ptrdiff_t, ptrdiff_t)
COPY_INTERVAL_CACHE	intervals.h	180;"	d
copy_interval_parent	intervals.c	/^copy_interval_parent (INTERVAL d, INTERVAL s)$/;"	f	file:	signature:(INTERVAL d, INTERVAL s)
copy_keymap_1	keymap.c	/^copy_keymap_1 (Lisp_Object chartable, Lisp_Object idx, Lisp_Object elt)$/;"	f	file:	signature:(Lisp_Object chartable, Lisp_Object idx, Lisp_Object elt)
copy_keymap_item	keymap.c	/^copy_keymap_item (Lisp_Object elt)$/;"	f	file:	signature:(Lisp_Object elt)
copy_linkedit_data	unexmacosx.c	/^copy_linkedit_data (struct load_command *lc, long delta)$/;"	f	file:	signature:(struct load_command *lc, long delta)
copy_other	unexmacosx.c	/^copy_other (struct load_command *lc)$/;"	f	file:	signature:(struct load_command *lc)
copy_overlays	buffer.c	/^copy_overlays (struct buffer *b, struct Lisp_Overlay *list)$/;"	f	file:	signature:(struct buffer *b, struct Lisp_Overlay *list)
copy_overlays	buffer.c	/^static struct Lisp_Overlay * copy_overlays (struct buffer *, struct Lisp_Overlay *);$/;"	p	file:	signature:(struct buffer *, struct Lisp_Overlay *)
COPY_PROC_CHUNK	unexw32.c	505;"	d	file:
copy_properties	intervals.c	/^copy_properties (register INTERVAL source, register INTERVAL target)$/;"	f	signature:(register INTERVAL source, register INTERVAL target)
copy_properties	intervals.h	/^extern void copy_properties (INTERVAL, INTERVAL);$/;"	p	signature:(INTERVAL, INTERVAL)
copy_rest	unexhp9k800.c	/^copy_rest (int old, int new)$/;"	f	file:	signature:(int old, int new)
copy_row_except_pointers	dispnew.c	/^copy_row_except_pointers (struct glyph_row *to, struct glyph_row *from)$/;"	f	file:	signature:(struct glyph_row *to, struct glyph_row *from)
copy_segment	unexmacosx.c	/^copy_segment (struct load_command *lc)$/;"	f	file:	signature:(struct load_command *lc)
copy_sid	w32.c	/^copy_sid (DWORD destlen, PSID dest, PSID src)$/;"	f	file:	signature:(DWORD destlen, PSID dest, PSID src)
copy_sub_char_table	chartab.c	/^copy_sub_char_table (Lisp_Object table)$/;"	f	file:	signature:(Lisp_Object table)
copy_sym	unexaix.c	/^copy_sym (int new, int a_out, const char *a_name, const char *new_name)$/;"	f	file:	signature:(int new, int a_out, const char *a_name, const char *new_name)
copy_sym	unexaix.c	/^static int copy_sym (int, int, const char *, const char *);$/;"	p	file:	signature:(int, int, const char *, const char *)
copy_symtab	unexmacosx.c	/^copy_symtab (struct load_command *lc, long delta)$/;"	f	file:	signature:(struct load_command *lc, long delta)
copy_text	insdel.c	/^copy_text (const unsigned char *from_addr, unsigned char *to_addr,$/;"	f	signature:(const unsigned char *from_addr, unsigned char *to_addr, ptrdiff_t nbytes, bool from_multibyte, bool to_multibyte)
copy_text	lisp.h	/^extern ptrdiff_t copy_text (const unsigned char *, unsigned char *,$/;"	p	signature:(const unsigned char *, unsigned char *, ptrdiff_t, bool, bool)
copy_text_and_data	unexaix.c	/^copy_text_and_data (int new)$/;"	f	file:	signature:(int new)
copy_text_and_data	unexaix.c	/^static int copy_text_and_data (int);$/;"	p	file:	signature:(int)
copy_text_properties	intervals.h	/^extern Lisp_Object copy_text_properties (Lisp_Object, Lisp_Object,$/;"	p	signature:(Lisp_Object, Lisp_Object, Lisp_Object, Lisp_Object, Lisp_Object, Lisp_Object)
copy_text_properties	textprop.c	/^copy_text_properties (Lisp_Object start, Lisp_Object end, Lisp_Object src,$/;"	f	signature:(Lisp_Object start, Lisp_Object end, Lisp_Object src, Lisp_Object pos, Lisp_Object dest, Lisp_Object prop)
copy_twolevelhints	unexmacosx.c	/^copy_twolevelhints (struct load_command *lc, long delta)$/;"	f	file:	signature:(struct load_command *lc, long delta)
core	widgetprv.h	/^    CorePart		core;$/;"	m	struct:_EmacsFrameRec	access:public
core_class	widgetprv.h	/^    CoreClassPart		core_class;$/;"	m	struct:_EmacsFrameClassRec	access:public
corners	dispextern.h	/^  int corners[4];$/;"	m	struct:image	access:public
corners	xterm.c	/^enum corners$/;"	g	file:
CORNER_BOTTOM_LEFT	xterm.c	/^    CORNER_BOTTOM_LEFT,		\/* pi\/2 -> pi *\/$/;"	e	enum:corners	file:
CORNER_BOTTOM_RIGHT	xterm.c	/^    CORNER_BOTTOM_RIGHT,	\/* 0 -> pi\/2 *\/$/;"	e	enum:corners	file:
CORNER_LAST	xterm.c	/^    CORNER_LAST$/;"	e	enum:corners	file:
CORNER_TOP_LEFT	xterm.c	/^    CORNER_TOP_LEFT,		\/* pi -> 3pi\/2 *\/$/;"	e	enum:corners	file:
CORNER_TOP_RIGHT	xterm.c	/^    CORNER_TOP_RIGHT,		\/* 3pi\/2 -> 2pi *\/$/;"	e	enum:corners	file:
cost	cm.c	/^int cost;		\/* sums up costs *\/$/;"	v
COST	cm.c	142;"	d	file:
COST	cm.c	168;"	d	file:
cost	w32console.c	/^int cost = 0;$/;"	v
costs_set	termchar.h	/^  bool_bf costs_set : 1;	\/* True if costs have been calculated. *\/$/;"	m	struct:tty_display_info	access:public
cost_calculation_baud_rate	frame.h	/^  int cost_calculation_baud_rate;$/;"	m	struct:frame	access:public
count	coding.c	/^   Lisp_Object count, Lisp_Object string)$/;"	v
count	editfns.c	/^  (Lisp_Object byte, Lisp_Object count, Lisp_Object inherit)$/;"	v
count	editfns.c	/^  (Lisp_Object character, Lisp_Object count, Lisp_Object inherit)$/;"	v
count	image.c	/^  int count;$/;"	m	struct:image_keyword	file:	access:public
count	lisp.h	/^  ptrdiff_t count;$/;"	m	struct:Lisp_Hash_Table	access:public
count	macros.c	/^  (Lisp_Object macro, Lisp_Object count, Lisp_Object loopfunc)$/;"	v
count	syntax.c	/^  (Lisp_Object from, Lisp_Object count, Lisp_Object depth)$/;"	v
count	term.c	/^  int count;$/;"	m	struct:tty_menu_struct	file:	access:public
count	thread.h	/^  unsigned int count;$/;"	m	struct:__anon103	access:public
count_blanks	dispnew.c	/^count_blanks (struct glyph *r, int len)$/;"	f	file:	signature:(struct glyph *r, int len)
count_bytes	insdel.c	/^count_bytes (ptrdiff_t pos, ptrdiff_t bytepos, ptrdiff_t endpos)$/;"	f	file:	signature:(ptrdiff_t pos, ptrdiff_t bytepos, ptrdiff_t endpos)
count_combining_after	insdel.c	/^count_combining_after (const unsigned char *string,$/;"	f	signature:(const unsigned char *string, ptrdiff_t length, ptrdiff_t pos, ptrdiff_t pos_byte)
count_combining_after	lisp.h	/^extern int count_combining_after (const unsigned char *,$/;"	p	signature:(const unsigned char *, ptrdiff_t, ptrdiff_t, ptrdiff_t)
count_combining_before	insdel.c	/^count_combining_before (const unsigned char *string, ptrdiff_t length,$/;"	f	signature:(const unsigned char *string, ptrdiff_t length, ptrdiff_t pos, ptrdiff_t pos_byte)
count_combining_before	lisp.h	/^extern int count_combining_before (const unsigned char *,$/;"	p	signature:(const unsigned char *, ptrdiff_t, ptrdiff_t, ptrdiff_t)
count_markers	marker.c	/^count_markers (struct buffer *buf)$/;"	f	signature:(struct buffer *buf)
count_match	dispnew.c	/^count_match (struct glyph *str1, struct glyph *end1, struct glyph *str2, struct glyph *end2)$/;"	f	file:	signature:(struct glyph *str1, struct glyph *end1, struct glyph *str2, struct glyph *end2)
count_size_as_multibyte	character.h	/^extern ptrdiff_t count_size_as_multibyte (const unsigned char *, ptrdiff_t);$/;"	p	signature:(const unsigned char *, ptrdiff_t)
count_windows	window.c	/^count_windows (struct window *window)$/;"	f	file:	signature:(struct window *window)
count_windows	window.c	/^static ptrdiff_t count_windows (struct window *);$/;"	p	file:	signature:(struct window *)
cp	w32.h	/^  child_process *  cp;$/;"	m	struct:__anon91	access:public
CPPFLAGS	Makefile	/^CPPFLAGS =   $/;"	m
cpu_gc_count	profiler.c	/^static EMACS_INT cpu_gc_count;$/;"	v	file:
cpu_log	profiler.c	/^static Lisp_Object cpu_log;$/;"	v	file:
CP_DEFAULT	w32term.h	45;"	d
cp_from_locale	w32select.c	/^cp_from_locale (LCID lcid, UINT format)$/;"	f	file:	signature:(LCID lcid, UINT format)
cp_from_locale	w32select.c	/^static UINT cp_from_locale (LCID lcid, UINT format);$/;"	p	file:	signature:(LCID lcid, UINT format)
CR	cm.h	113;"	d
CR	indent.c	36;"	d	file:
cRanges	w32term.c	/^  DWORD cRanges;$/;"	m	struct:tagGLYPHSET	file:	access:public
CRCost	cm.h	134;"	d
creat	w32.c	52;"	d	file:
CreateSymbolicLinkA_Proc	w32.c	/^typedef BOOLEAN (WINAPI *CreateSymbolicLinkA_Proc) ($/;"	t	file:
CreateSymbolicLinkW_Proc	w32.c	/^typedef BOOLEAN (WINAPI *CreateSymbolicLinkW_Proc) ($/;"	t	file:
CreateToolhelp32Snapshot_Proc	w32.c	/^typedef HANDLE (WINAPI * CreateToolhelp32Snapshot_Proc) ($/;"	t	file:
create_and_show_dialog	xmenu.c	/^create_and_show_dialog (struct frame *f, widget_value *first_wv)$/;"	f	file:	signature:(struct frame *f, widget_value *first_wv)
create_and_show_popup_menu	xmenu.c	/^create_and_show_popup_menu (struct frame *f, widget_value *first_wv,$/;"	f	file:	signature:(struct frame *f, widget_value *first_wv, int x, int y, bool for_click)
create_cairo_image_surface	image.c	/^create_cairo_image_surface (struct image *img,$/;"	f	file:	signature:(struct image *img, unsigned char *data, int width, int height)
create_child	w32proc.c	/^create_child (char *exe, char *cmdline, char *env, int is_gui_app,$/;"	f	file:	signature:(char *exe, char *cmdline, char *env, int is_gui_app, pid_t * pPid, child_process *cp)
create_client_leader_window	xsmfns.c	/^create_client_leader_window (struct x_display_info *dpyinfo, char *client_ID)$/;"	f	file:	signature:(struct x_display_info *dpyinfo, char *client_ID)
create_dialog	gtkutil.c	/^create_dialog (widget_value *wv,$/;"	f	file:	signature:(widget_value *wv, GCallback select_cb, GCallback deactivate_cb)
create_frame_xic	xfns.c	/^create_frame_xic (struct frame *f)$/;"	f	signature:(struct frame *f)
create_frame_xic	xterm.h	/^extern void create_frame_xic (struct frame *);$/;"	p	signature:(struct frame *)
create_lockfiles	globals.h	915;"	d
create_lock_file	filelock.c	/^create_lock_file (char *lfname, char *lock_info_str, bool force)$/;"	f	file:	signature:(char *lfname, char *lock_info_str, bool force)
create_menus	gtkutil.c	/^create_menus (widget_value *data,$/;"	f	file:	signature:(widget_value *data, struct frame *f, GCallback select_cb, GCallback deactivate_cb, GCallback highlight_cb, bool pop_up_p, bool menu_bar_p, GtkWidget *topmenu, xg_menu_cb_data *cl_data, const char *name)
create_owner	w32select.c	/^create_owner (void)$/;"	f	file:	signature:(void)
create_owner	w32select.c	/^static HWND create_owner (void);$/;"	p	file:	signature:(void)
Create_Pixmap_From_Bitmap_Data	image.c	/^Create_Pixmap_From_Bitmap_Data (struct frame *f, struct image *img, char *data,$/;"	f	file:	signature:(struct frame *f, struct image *img, char *data, RGB_PIXEL_COLOR fg, RGB_PIXEL_COLOR bg, bool non_default_colors)
create_process	process.c	/^create_process (Lisp_Object process, char **new_argv, Lisp_Object current_dir)$/;"	f	file:	signature:(Lisp_Object process, char **new_argv, Lisp_Object current_dir)
create_process	process.c	/^static void create_process (Lisp_Object, char **, Lisp_Object);$/;"	p	file:	signature:(Lisp_Object, char **, Lisp_Object)
create_pty	process.c	/^create_pty (Lisp_Object process)$/;"	f	file:	signature:(Lisp_Object process)
create_pty	process.c	/^static void create_pty (Lisp_Object);$/;"	p	file:
create_root_interval	intervals.c	/^create_root_interval (Lisp_Object parent)$/;"	f	signature:(Lisp_Object parent)
create_root_interval	intervals.h	/^extern INTERVAL create_root_interval (Lisp_Object);$/;"	p	signature:(Lisp_Object)
create_symbolic_link	w32.c	/^create_symbolic_link (LPCSTR lpSymlinkFilename,$/;"	f	file:	signature:(LPCSTR lpSymlinkFilename, LPCSTR lpTargetFileName, DWORD dwFlags)
create_temp_file	callproc.c	/^create_temp_file (ptrdiff_t nargs, Lisp_Object *args,$/;"	f	file:	signature:(ptrdiff_t nargs, Lisp_Object *args, Lisp_Object *filename_string_ptr)
create_terminal	termhooks.h	/^extern struct terminal *create_terminal (enum output_method,$/;"	p	signature:(enum output_method, struct redisplay_interface *)
create_terminal	terminal.c	/^create_terminal (enum output_method type, struct redisplay_interface *rif)$/;"	f	signature:(enum output_method type, struct redisplay_interface *rif)
create_toolhelp32_snapshot	w32.c	/^create_toolhelp32_snapshot (DWORD Flags, DWORD Ignored)$/;"	f	file:	signature:(DWORD Flags, DWORD Ignored)
create_tty_output	dispextern.h	/^extern void create_tty_output (struct frame *);$/;"	p	signature:(struct frame *)
create_tty_output	term.c	/^create_tty_output (struct frame *f)$/;"	f	signature:(struct frame *f)
crfd	unexelf.c	/^	int crfd;$/;"	m	struct:__anon123	file:	access:public
critsect	w32xfns.c	/^CRITICAL_SECTION critsect;$/;"	v
crit_prof	w32proc.c	/^static CRITICAL_SECTION crit_real, crit_prof;$/;"	v	file:
crit_real	w32proc.c	/^static CRITICAL_SECTION crit_real, crit_prof;$/;"	v	file:
crit_sig	w32proc.c	/^static CRITICAL_SECTION crit_sig;$/;"	v	file:
crlf_to_lf	w32.c	/^crlf_to_lf (register int n, register char *buf)$/;"	f	file:	signature:(register int n, register char *buf)
cross_disabled_images	globals.h	917;"	d
cr_context	xterm.h	/^  cairo_t *cr_context;$/;"	m	struct:x_output	access:public
cr_data	dispextern.h	/^  void *cr_data;$/;"	m	struct:image	access:public
cr_data2	dispextern.h	/^  void *cr_data2;$/;"	m	struct:image	access:public
cr_font_face	ftcrfont.c	/^  cairo_font_face_t *cr_font_face;$/;"	m	struct:ftcrfont_info	file:	access:public
cr_surface	xterm.h	/^  cairo_surface_t *cr_surface;$/;"	m	struct:x_output	access:public
CSB_CHINESE	w32font.c	1199;"	d	file:
CSB_JAPANESE	w32font.c	1197;"	d	file:
CSB_KOREAN	w32font.c	1198;"	d	file:
ctagsfiles1	Makefile	/^ctagsfiles1 = $(wildcard ${srcdir}\/*.[hc])$/;"	m
ctagsfiles2	Makefile	/^ctagsfiles2 = $(wildcard ${srcdir}\/*.m)$/;"	m
ctext_extended_segment_len	coding.h	/^  int ctext_extended_segment_len;$/;"	m	struct:iso_2022_spec	access:public
ctime	w32.c	53;"	d	file:
Ctl	commands.h	24;"	d
ctl_arrow_	buffer.h	/^  Lisp_Object ctl_arrow_;$/;"	m	struct:buffer	access:public
ctl_arrow_p	dispextern.h	/^  bool_bf ctl_arrow_p : 1;$/;"	m	struct:it	access:public
ctl_chars	dispextern.h	/^  Lisp_Object ctl_chars[16];$/;"	m	struct:it	access:public
CTL_CODE	w32.c	211;"	d	file:
ctrl_c_handler	unexw32.c	/^extern BOOL ctrl_c_handler (unsigned long type);$/;"	p	file:	signature:(unsigned long type)
ctrl_c_handler	w32console.c	/^BOOL ctrl_c_handler (unsigned long);$/;"	p	file:	signature:(unsigned long)
ctrl_c_handler	w32console.c	/^ctrl_c_handler (unsigned long type)$/;"	f	signature:(unsigned long type)
ctrl_modifier	termhooks.h	/^  ctrl_modifier	=  CHAR_CTL,$/;"	e	enum:__anon72
ctxrec	w32.c	/^PCONTEXT ctxrec;$/;"	v
ct_color	image.c	/^struct ct_color$/;"	s	file:
ct_color::b	image.c	/^  int r, g, b;$/;"	m	struct:ct_color	file:	access:public
ct_color::g	image.c	/^  int r, g, b;$/;"	m	struct:ct_color	file:	access:public
ct_color::next	image.c	/^  struct ct_color *next;$/;"	m	struct:ct_color	typeref:struct:ct_color::ct_color	file:	access:public
ct_color::pixel	image.c	/^  unsigned long pixel;$/;"	m	struct:ct_color	file:	access:public
ct_color::r	image.c	/^  int r, g, b;$/;"	m	struct:ct_color	file:	access:public
ct_colors_allocated	image.c	/^static int ct_colors_allocated;$/;"	v	file:
ct_colors_allocated_max	image.c	/^  ct_colors_allocated_max =$/;"	e	enum:__anon82	file:
ct_hash_rgb	image.c	/^ct_hash_rgb (unsigned r, unsigned g, unsigned b)$/;"	f	file:	signature:(unsigned r, unsigned g, unsigned b)
CT_SIZE	image.c	4392;"	d	file:
ct_table	image.c	/^static struct ct_color **ct_table;$/;"	v	typeref:struct:ct_color	file:
current	charset.c	/^  struct charset *current;$/;"	m	struct:__anon78	typeref:struct:__anon78::charset	file:	access:public
current	dispextern.h	/^    struct display_pos current;$/;"	m	struct:it::iterator_stack_entry	typeref:struct:it::iterator_stack_entry::display_pos	access:public
current	dispextern.h	/^  struct display_pos current;$/;"	m	struct:it	typeref:struct:it::display_pos	access:public
current_buffer	thread.h	100;"	d
current_clipboard_type	w32select.c	/^static UINT current_clipboard_type;$/;"	v	file:
current_coding_system	w32select.c	/^static Lisp_Object current_coding_system;$/;"	v	file:
current_column	indent.c	/^current_column (void)$/;"	f	signature:(void)
current_column	lisp.h	/^extern ptrdiff_t current_column (void);$/;"	p	signature:(void)
current_column_1	indent.c	/^current_column_1 (void)$/;"	f	file:	signature:(void)
current_column_1	indent.c	/^static ptrdiff_t current_column_1 (void);$/;"	p	file:	signature:(void)
current_count	xterm.c	/^static int current_count;$/;"	v	file:
current_cursor	w32term.h	/^  Cursor current_cursor;$/;"	m	struct:w32_output	access:public
current_cursor	xterm.h	/^  Cursor current_cursor;$/;"	m	struct:x_output	access:public
current_designation	coding.h	/^  int current_designation[4];$/;"	m	struct:iso_2022_spec	access:public
current_finish	xterm.c	/^static int current_finish;$/;"	v	file:
current_font	xsettings.c	/^static char *current_font;$/;"	v	file:
current_gif_memory_src	image.c	/^static gif_memory_source *current_gif_memory_src;$/;"	v	file:
current_global_map	keymap.c	/^Lisp_Object current_global_map;	\/* Current global keymap.  *\/$/;"	v
CURRENT_HEADER_LINE_HEIGHT	dispextern.h	1450;"	d
current_hold_quit	xterm.c	/^static struct input_event *current_hold_quit;$/;"	v	typeref:struct:input_event	file:
current_invocation	coding.h	/^  int current_invocation[2];$/;"	m	struct:iso_2022_spec	access:public
current_kboard	keyboard.c	/^KBOARD *current_kboard;$/;"	v
current_lcid	w32select.c	/^static LCID current_lcid;$/;"	v	file:
current_lock_owner	filelock.c	/^current_lock_owner (lock_info_type *owner, char *lfname)$/;"	f	file:	signature:(lock_info_type *owner, char *lfname)
current_matrix	frame.h	/^  struct glyph_matrix *current_matrix;$/;"	m	struct:frame	typeref:struct:frame::glyph_matrix	access:public
current_matrix	window.h	/^    struct glyph_matrix *current_matrix;$/;"	m	struct:window	typeref:struct:window::glyph_matrix	access:public
current_message	lisp.h	/^extern Lisp_Object current_message (void);$/;"	p	signature:(void)
current_message	xdisp.c	/^current_message (void)$/;"	f	signature:(void)
current_message_1	xdisp.c	/^current_message_1 (ptrdiff_t a1, Lisp_Object a2)$/;"	f	file:	signature:(ptrdiff_t a1, Lisp_Object a2)
current_message_1	xdisp.c	/^static bool current_message_1 (ptrdiff_t, Lisp_Object);$/;"	p	file:
current_minor_maps	keymap.c	/^current_minor_maps (Lisp_Object **modeptr, Lisp_Object **mapptr)$/;"	f	signature:(Lisp_Object **modeptr, Lisp_Object **mapptr)
current_minor_maps	keymap.h	/^extern ptrdiff_t current_minor_maps (Lisp_Object **, Lisp_Object **);$/;"	p	signature:(Lisp_Object **, Lisp_Object **)
CURRENT_MODE_LINE_FACE_ID	dispextern.h	1430;"	d
CURRENT_MODE_LINE_FACE_ID_3	dispextern.h	1417;"	d
CURRENT_MODE_LINE_HEIGHT	dispextern.h	1437;"	d
current_mono_font	xsettings.c	/^static char *current_mono_font;$/;"	v	file:
current_num_nls	w32select.c	/^static int current_requires_encoding, current_num_nls;$/;"	v	file:
current_pointer	nsterm.h	/^  Cursor current_pointer;$/;"	m	struct:ns_output	access:public
current_pool	frame.h	/^  struct glyph_pool *current_pool;$/;"	m	struct:frame	typeref:struct:frame::glyph_pool	access:public
current_popup_menu	w32menu.c	/^HMENU current_popup_menu;$/;"	v
current_requires_encoding	w32select.c	/^static int current_requires_encoding, current_num_nls;$/;"	v	file:
current_sampling_interval	profiler.c	/^static EMACS_INT current_sampling_interval;$/;"	v	file:
current_sblock	alloc.c	/^static struct sblock *oldest_sblock, *current_sblock;$/;"	v	typeref:struct:	file:
current_sound	sound.c	/^static struct sound *current_sound;$/;"	v	typeref:struct:sound	file:
current_sound_device	sound.c	/^static struct sound_device *current_sound_device;$/;"	v	typeref:struct:sound_device	file:
CURRENT_STATE	w32fns.c	2894;"	d	file:
current_syntax_table	syntax.h	/^  Lisp_Object current_syntax_table;	\/* Syntax table for current pos.  *\/$/;"	m	struct:gl_state_s	access:public
current_text	w32select.c	/^static Lisp_Object current_text;$/;"	v	file:
current_thread	thread.c	/^struct thread_state *current_thread = &main_thread;$/;"	v	typeref:struct:thread_state
current_timespec	systime.h	/^current_timespec (void)$/;"	f	signature:(void)
current_tool_bar_string	frame.h	/^  Lisp_Object current_tool_bar_string;$/;"	m	struct:frame	access:public
current_tool_bar_style	xsettings.c	/^static Lisp_Object current_tool_bar_style;$/;"	v	file:
current_tty	cm.c	/^struct tty_display_info *current_tty;$/;"	v	typeref:struct:tty_display_info
current_tty	w32console.c	/^struct tty_display_info *current_tty = NULL;$/;"	v	typeref:struct:tty_display_info
current_vpos	dispextern.h	/^  int desired_vpos, current_vpos;$/;"	m	struct:run	access:public
current_window	window.c	/^    Lisp_Object current_window;$/;"	m	struct:save_window_data	file:	access:public
current_x	dispextern.h	/^  int current_x;$/;"	m	struct:it	access:public
current_y	dispextern.h	/^  int current_y;$/;"	m	struct:it	access:public
current_y	dispextern.h	/^  int desired_y, current_y;$/;"	m	struct:run	access:public
curr_file_offset	unexmacosx.c	/^static unsigned long curr_file_offset = 0;$/;"	v	file:
curr_header_offset	unexmacosx.c	/^static unsigned long curr_header_offset = sizeof (struct mach_header);$/;"	v	file:
Cursor	dispextern.h	/^typedef int Cursor;$/;"	t
Cursor	nsgui.h	/^typedef NSCursor * Cursor;$/;"	t
Cursor	nsgui.h	/^typedef void *Cursor;$/;"	t
Cursor	nsgui.h	29;"	d
Cursor	nsgui.h	37;"	d
Cursor	w32gui.h	/^typedef HCURSOR Cursor;$/;"	t
cursor	window.h	/^    struct cursor_pos cursor;$/;"	m	struct:window	typeref:struct:window::cursor_pos	access:public
cursor	xfns.c	/^  Cursor cursor[mouse_cursor_max];$/;"	m	struct:mouse_cursor_data	file:	access:public
cursorX	termhooks.h	/^extern int cursorX (struct tty_display_info *);$/;"	p	signature:(struct tty_display_info *)
cursorX	termhooks.h	746;"	d
cursorX	w32console.c	/^cursorX (struct tty_display_info *tty)$/;"	f	signature:(struct tty_display_info *tty)
cursorY	termhooks.h	/^extern int cursorY (struct tty_display_info *);$/;"	p	signature:(struct tty_display_info *)
cursorY	termhooks.h	747;"	d
cursorY	w32console.c	/^cursorY (struct tty_display_info *tty)$/;"	f	signature:(struct tty_display_info *tty)
cursor_color	nsterm.h	/^  NSColor *cursor_color;$/;"	m	struct:ns_output	access:public
cursor_color	widgetprv.h	/^  Pixel		cursor_color;		\/* text cursor color *\/$/;"	m	struct:__anon98	access:public
cursor_coords	w32console.c	/^static COORD	cursor_coords;$/;"	v	file:
cursor_display_counter	w32term.h	/^  int cursor_display_counter;$/;"	m	struct:w32_display_info	access:public
CURSOR_FACE_ID	dispextern.h	/^  CURSOR_FACE_ID,$/;"	e	enum:face_id
cursor_foreground_pixel	w32term.h	/^  COLORREF cursor_foreground_pixel;$/;"	m	struct:w32_output	access:public
cursor_foreground_pixel	xterm.h	/^  unsigned long cursor_foreground_pixel;$/;"	m	struct:x_output	access:public
cursor_gc	w32term.h	/^  XGCValues *cursor_gc;				\/* cursor drawing *\/$/;"	m	struct:w32_output	access:public
cursor_gc	xterm.h	/^  GC cursor_gc;				\/* cursor drawing *\/$/;"	m	struct:x_output	access:public
cursor_hidden	termchar.h	/^  bool_bf cursor_hidden : 1;$/;"	m	struct:tty_display_info	access:public
cursor_in_echo_area	globals.h	919;"	d
cursor_in_fringe_p	dispextern.h	/^  bool_bf cursor_in_fringe_p : 1;$/;"	m	struct:glyph_row	access:public
cursor_in_mouse_face_p	dispextern.h	/^extern bool cursor_in_mouse_face_p (struct window *w);$/;"	p	signature:(struct window *w)
cursor_in_mouse_face_p	xdisp.c	/^cursor_in_mouse_face_p (struct window *w)$/;"	f	signature:(struct window *w)
cursor_in_non_selected_windows_	buffer.h	/^  Lisp_Object cursor_in_non_selected_windows_;$/;"	m	struct:buffer	access:public
CURSOR_MOVEMENT_CANNOT_BE_USED	xdisp.c	/^  CURSOR_MOVEMENT_CANNOT_BE_USED,$/;"	e	enum:__anon137	file:
CURSOR_MOVEMENT_MUST_SCROLL	xdisp.c	/^  CURSOR_MOVEMENT_MUST_SCROLL,$/;"	e	enum:__anon137	file:
CURSOR_MOVEMENT_NEED_LARGER_MATRICES	xdisp.c	/^  CURSOR_MOVEMENT_NEED_LARGER_MATRICES$/;"	e	enum:__anon137	file:
CURSOR_MOVEMENT_SUCCESS	xdisp.c	/^  CURSOR_MOVEMENT_SUCCESS,$/;"	e	enum:__anon137	file:
cursor_num	xfns.c	/^  unsigned int cursor_num[mouse_cursor_max];$/;"	m	struct:mouse_cursor_data	file:	access:public
cursor_off_p	window.h	/^    bool_bf cursor_off_p : 1;$/;"	m	struct:window	access:public
cursor_p	dispextern.h	/^  bool_bf cursor_p : 1;$/;"	m	struct:draw_fringe_bitmap_params	access:public
cursor_pixel	w32term.h	/^  COLORREF cursor_pixel;$/;"	m	struct:w32_output	access:public
cursor_pixel	xterm.h	/^  unsigned long cursor_pixel;$/;"	m	struct:x_output	access:public
cursor_pos	window.h	/^struct cursor_pos$/;"	s
cursor_pos::hpos	window.h	/^  int hpos, vpos;$/;"	m	struct:cursor_pos	access:public
cursor_pos::vpos	window.h	/^  int hpos, vpos;$/;"	m	struct:cursor_pos	access:public
cursor_pos::x	window.h	/^  int x, y;$/;"	m	struct:cursor_pos	access:public
cursor_pos::y	window.h	/^  int x, y;$/;"	m	struct:cursor_pos	access:public
cursor_row_fully_visible_p	xdisp.c	/^cursor_row_fully_visible_p (struct window *w, bool force_p,$/;"	f	file:	signature:(struct window *w, bool force_p, bool current_matrix_p)
cursor_row_fully_visible_p	xdisp.c	/^static bool cursor_row_fully_visible_p (struct window *, bool, bool);$/;"	p	file:	signature:(struct window *, bool, bool)
cursor_row_p	xdisp.c	/^cursor_row_p (struct glyph_row *row)$/;"	f	file:	signature:(struct glyph_row *row)
cursor_row_p	xdisp.c	/^static bool cursor_row_p (struct glyph_row *);$/;"	p	file:	signature:(struct glyph_row *)
cursor_to	dispextern.h	/^extern void cursor_to (struct frame *, int, int);$/;"	p	signature:(struct frame *, int, int)
cursor_to	terminal.c	/^cursor_to (struct frame *f, int vpos, int hpos)$/;"	f	signature:(struct frame *f, int vpos, int hpos)
cursor_to_hook	termhooks.h	/^  void (*cursor_to_hook) (struct frame *f, int vpos, int hpos);$/;"	m	struct:terminal	access:public
cursor_type_	buffer.h	/^  Lisp_Object cursor_type_;$/;"	m	struct:buffer	access:public
cursor_type_changed	frame.h	/^  bool_bf cursor_type_changed : 1;$/;"	m	struct:frame	access:public
cursor_width	frame.h	/^  int cursor_width;$/;"	m	struct:frame	access:public
CURTTY	termchar.h	232;"	d
CURVE_QUOTING_STYLE	lisp.h	/^    CURVE_QUOTING_STYLE,$/;"	e	enum:text_quoting_style
curX	cm.h	105;"	d
curY	cm.h	104;"	d
cur_screen	w32console.c	/^static HANDLE	prev_screen, cur_screen;$/;"	v	file:
cvar	thread.c	/^  struct Lisp_CondVar *cvar;$/;"	m	struct:notify_args	typeref:struct:notify_args::Lisp_CondVar	file:	access:public
cvt_pixel_dtor	xterm.c	/^cvt_pixel_dtor (XtAppContext app, XrmValuePtr to, XtPointer closure, XrmValuePtr args,$/;"	f	file:	signature:(XtAppContext app, XrmValuePtr to, XtPointer closure, XrmValuePtr args, Cardinal *nargs)
cvt_string_to_pixel	xterm.c	/^cvt_string_to_pixel (Display *dpy, XrmValue *args, Cardinal *nargs,$/;"	f	file:	signature:(Display *dpy, XrmValue *args, Cardinal *nargs, XrmValue *from, XrmValue *to, XtPointer *closure_ret)
cvt_string_to_pixel_args	xterm.c	/^static XtConvertArgRec cvt_string_to_pixel_args[] =$/;"	v	file:
cvt_string_to_pixel_value	xterm.c	/^static Pixel cvt_string_to_pixel_value;$/;"	v	file:
CYGW32_H	cygw32.h	20;"	d
CYGWIN_OBJ	Makefile	/^CYGWIN_OBJ=$/;"	m
C_CHILDREN_TITLEBAR	w32fns.c	129;"	d	file:
C_CHILDREN_TITLEBAR	w32fns.c	132;"	d	file:
c_string_pos	xdisp.c	/^c_string_pos (ptrdiff_t charpos, const char *s, bool multibyte_p)$/;"	f	file:	signature:(ptrdiff_t charpos, const char *s, bool multibyte_p)
c_string_width	character.c	/^c_string_width (const unsigned char *str, ptrdiff_t len, int precision,$/;"	f	signature:(const unsigned char *str, ptrdiff_t len, int precision, ptrdiff_t *nchars, ptrdiff_t *nbytes)
c_string_width	character.h	/^extern ptrdiff_t c_string_width (const unsigned char *, ptrdiff_t, int,$/;"	p	signature:(const unsigned char *, ptrdiff_t, int, ptrdiff_t *, ptrdiff_t *)
C_SWITCH_MACHINE	Makefile	/^C_SWITCH_MACHINE=$/;"	m
C_SWITCH_SYSTEM	Makefile	/^C_SWITCH_SYSTEM=$/;"	m
C_SWITCH_X_SITE	Makefile	/^C_SWITCH_X_SITE= -pthread -isystem \/usr\/include\/gtk-3.0 -isystem \/usr\/include\/at-spi2-atk\/2.0 -isystem \/usr\/include\/at-spi-2.0 -isystem \/usr\/include\/dbus-1.0 -isystem \/usr\/lib\/x86_64-linux-gnu\/dbus-1.0\/include -isystem \/usr\/include\/gtk-3.0 -isystem \/usr\/include\/gio-unix-2.0\/ -isystem \/usr\/include\/mirclient -isystem \/usr\/include\/mircore -isystem \/usr\/include\/mircookie -isystem \/usr\/include\/cairo -isystem \/usr\/include\/pango-1.0 -isystem \/usr\/include\/harfbuzz -isystem \/usr\/include\/pango-1.0 -isystem \/usr\/include\/atk-1.0 -isystem \/usr\/include\/cairo -isystem \/usr\/include\/pixman-1 -isystem \/usr\/include\/freetype2 -isystem \/usr\/include\/libpng16 -isystem \/usr\/include\/gdk-pixbuf-2.0 -isystem \/usr\/include\/libpng16 -isystem \/usr\/include\/glib-2.0 -isystem \/usr\/lib\/x86_64-linux-gnu\/glib-2.0\/include -isystem \/usr\/include\/freetype2$/;"	m
c_symbol_p	alloc.c	/^c_symbol_p (struct Lisp_Symbol *sym)$/;"	f	file:	signature:(struct Lisp_Symbol *sym)
d	lisp.h	/^  double d; intmax_t i; void *p;$/;"	m	union:Aligned_Cons	access:public
d	lisp.h	/^  double d; intmax_t i; void *p;$/;"	m	union:Aligned_String	access:public
DAEMON_MUST_EXEC	emacs.c	166;"	d	file:
daemon_name	emacs.c	/^static char *daemon_name;$/;"	v	file:
daemon_pipe	emacs.c	/^static int daemon_pipe[2];$/;"	v	file:
DAEMON_RUNNING	lisp.h	4130;"	d
DAEMON_RUNNING	lisp.h	4134;"	d
daemon_type	emacs.c	/^int daemon_type;$/;"	v
data	alloc.c	/^  char data[VECTOR_BLOCK_BYTES];$/;"	m	struct:vector_block	file:	access:public
data	alloc.c	/^  sdata data[FLEXIBLE_ARRAY_MEMBER];$/;"	m	struct:sblock	file:	access:public
data	alloc.c	/^  unsigned char data[FLEXIBLE_ARRAY_MEMBER];$/;"	m	struct:sdata	file:	access:public
data	casefiddle.c	/^  unsigned char data[max (6, MAX_MULTIBYTE_LENGTH)];$/;"	m	struct:casing_str_buf	file:	access:public
data	keyboard.c	/^  (Lisp_Object data, Lisp_Object context, Lisp_Object signal)$/;"	v
data	lisp.h	/^      double data;$/;"	m	union:Lisp_Float::__anon27	access:public
data	lisp.h	/^    bits_word data[FLEXIBLE_ARRAY_MEMBER];$/;"	m	struct:Lisp_Bool_Vector	access:public
data	lisp.h	/^    unsigned char *data;$/;"	m	struct:Lisp_String	access:public
data	lisp.h	/^    } data[SAVE_VALUE_SLOTS];$/;"	m	struct:Lisp_Save_Value	typeref:union:Lisp_Save_Value::__anon26	access:public
data	lisp.h	/^  void *data;$/;"	m	struct:Lisp_Module_Function	access:public
data	process.c	/^  void *data;$/;"	m	struct:fd_callback_data	file:	access:public
data	ralloc.c	/^  void *data;$/;"	m	struct:bp	file:	access:public
data	sound.c	/^  Lisp_Object data;$/;"	m	struct:sound	file:	access:public
data	sound.c	/^  void *data;$/;"	m	struct:sound_device	file:	access:public
data	w32gui.h	/^  unsigned char * data;$/;"	m	struct:_XImage	access:public
data	xselect.c	/^  unsigned char *data;$/;"	m	struct:selection_data	file:	access:public
DataBuffer	w32.c	/^            UCHAR  DataBuffer[1];$/;"	m	struct:_REPARSE_DATA_BUFFER::__anon66::__anon69	file:	access:public
datagram_address	process.c	/^} datagram_address[FD_SETSIZE];$/;"	v	typeref:struct:sockaddr_and_len	file:
DATAGRAM_CHAN_P	process.c	293;"	d	file:
DATAGRAM_CONN_P	process.c	294;"	d	file:
DATAGRAM_CONN_P	process.c	299;"	d	file:
DATAGRAM_SOCKETS	process.c	223;"	d	file:
data_length	sound.c	/^  u_int32_t data_length;$/;"	m	struct:wav_header	file:	access:public
data_offset	sound.c	/^  u_int32_t data_offset;$/;"	m	struct:au_header	file:	access:public
data_region_base	w32heap.c	/^unsigned char *data_region_base = NULL;$/;"	v
data_region_end	w32heap.c	/^unsigned char *data_region_end = NULL;$/;"	v
data_scnptr	unexaix.c	/^static off_t data_scnptr;$/;"	v	file:
data_section	unexw32.c	/^PIMAGE_SECTION_HEADER data_section;$/;"	v
data_segment_old_fileoff	unexmacosx.c	/^static off_t data_segment_old_fileoff = 0;$/;"	v	file:
data_segment_scp	unexmacosx.c	/^static struct segment_command *data_segment_scp;$/;"	v	typeref:struct:segment_command	file:
data_size	sound.c	/^  u_int32_t data_size;$/;"	m	struct:au_header	file:	access:public
data_size	unexw32.c	/^DWORD_PTR  data_size = 0;$/;"	v
data_space_start	vm-limit.c	/^static char *data_space_start;$/;"	v	file:
data_start	unexw32.c	/^PCHAR  data_start = 0;$/;"	v
data_start	vm-limit.c	/^char data_start[1] = { 1 };$/;"	v
data_start	vm-limit.c	38;"	d	file:
dbcs_lead	w32inevt.c	/^static char dbcs_lead = 0;$/;"	v	file:
dbcs_lead	w32term.c	/^static char dbcs_lead = 0;$/;"	v	file:
DBUS_CFLAGS	Makefile	/^DBUS_CFLAGS = -isystem \/usr\/include\/dbus-1.0 -isystem \/usr\/lib\/x86_64-linux-gnu\/dbus-1.0\/include$/;"	m
DBUS_EVENT	termhooks.h	/^  , DBUS_EVENT$/;"	e	enum:event_kind
DBUS_LIBS	Makefile	/^DBUS_LIBS = -ldbus-1$/;"	m
DBUS_NUM_MESSAGE_TYPES	dbusbind.c	32;"	d	file:
DBUS_OBJ	Makefile	/^DBUS_OBJ = dbusbind.o$/;"	m
deactivate_process	process.c	/^deactivate_process (Lisp_Object proc)$/;"	f	file:	signature:(Lisp_Object proc)
deactivate_process	process.c	/^static void deactivate_process (Lisp_Object);$/;"	p	file:
DEADP	alloc.c	392;"	d	file:
DEADP	alloc.c	465;"	d	file:
DebPrint	conf_post.h	149;"	d
DebPrint	conf_post.h	151;"	d
debug	regex.c	/^static int debug = -100000;$/;"	v	file:
DebugBreakProcess_Proc	w32proc.c	/^typedef BOOL (WINAPI * DebugBreakProcess_Proc) ($/;"	t	file:
debugger_may_continue	globals.h	925;"	d
debugger_stack_frame_as_list	globals.h	927;"	d
DebugInfo	systhread.h	/^  struct _CRITICAL_SECTION_DEBUG *DebugInfo;$/;"	m	struct:__anon43	typeref:struct:__anon43::_CRITICAL_SECTION_DEBUG	access:public
DEBUG_COMPILES_ARGUMENTS	regex.c	799;"	d	file:
debug_delta	xdisp.c	/^static ptrdiff_t debug_delta, debug_delta_bytes;$/;"	v	file:
debug_delta_bytes	xdisp.c	/^static ptrdiff_t debug_delta, debug_delta_bytes;$/;"	v	file:
debug_dvpos	xdisp.c	/^static int debug_dvpos, debug_dy;$/;"	v	file:
debug_dy	xdisp.c	/^static int debug_dvpos, debug_dy;$/;"	v	file:
debug_end_pos	globals.h	821;"	d
debug_end_vpos	xdisp.c	/^static ptrdiff_t debug_end_vpos;$/;"	v	file:
debug_first_unchanged_at_end_vpos	xdisp.c	/^static int debug_first_unchanged_at_end_vpos;$/;"	v	file:
debug_last_unchanged_at_beg_vpos	xdisp.c	/^static int debug_last_unchanged_at_beg_vpos;$/;"	v	file:
DEBUG_LOG	unexelf.c	188;"	d	file:
debug_method_add	xdisp.c	/^debug_method_add (struct window *w, char const *fmt, ...)$/;"	f	file:	signature:(struct window *w, char const *fmt, ...)
debug_on_exit	lisp.h	/^      bool_bf debug_on_exit : 1;$/;"	m	struct:specbinding::__anon34	access:public
debug_on_next_call	globals.h	921;"	d
debug_on_quit	globals.h	923;"	d
debug_output_compilation_hack	print.c	/^debug_output_compilation_hack (bool x)$/;"	f	signature:(bool x)
debug_output_compilation_hack	print.c	/^extern void debug_output_compilation_hack (bool) EXTERNALLY_VISIBLE;$/;"	p	file:
debug_print	print.c	/^debug_print (Lisp_Object arg)$/;"	f	signature:(Lisp_Object arg)
DEBUG_PRINT	regex.c	1144;"	d	file:
DEBUG_PRINT	regex.c	798;"	d	file:
DEBUG_PRINT_COMPILED_PATTERN	regex.c	1145;"	d	file:
DEBUG_PRINT_COMPILED_PATTERN	regex.c	800;"	d	file:
DEBUG_PRINT_DOUBLE_STRING	regex.c	1146;"	d	file:
DEBUG_PRINT_DOUBLE_STRING	regex.c	802;"	d	file:
debug_sheap	sheap.c	/^static int debug_sheap;$/;"	v	file:
DEBUG_STATEMENT	regex.c	1143;"	d	file:
DEBUG_STATEMENT	regex.c	797;"	d	file:
debug_timer_callback	atimer.c	/^debug_timer_callback (struct atimer *t)$/;"	f	file:	signature:(struct atimer *t)
debug_unexcw	unexcw.c	/^int debug_unexcw = 0;$/;"	v
decide_coding_unwind	fileio.c	/^decide_coding_unwind (Lisp_Object unwind_data)$/;"	f	file:	signature:(Lisp_Object unwind_data)
declared_special	lisp.h	/^  bool_bf declared_special : 1;$/;"	m	struct:Lisp_Symbol	access:public
DECLARE_GDB_SYM	lisp.h	49;"	d
DECLARE_HDC	xdisp.c	25301;"	d	file:
DECLARE_HDC	xdisp.c	25308;"	d	file:
DECLARE_POINTER_ALIAS	conf_post.h	226;"	d
decoder	charset.c	/^    int decoder[0x10000];$/;"	m	union:__anon78::__anon79	file:	access:public
decoder	coding.h	/^  void (*decoder) (struct coding_system *);$/;"	m	struct:coding_system	access:public
decode_any_frame	frame.c	/^decode_any_frame (register Lisp_Object frame)$/;"	f	signature:(register Lisp_Object frame)
decode_any_frame	frame.h	/^extern struct frame *decode_any_frame (Lisp_Object);$/;"	p	signature:(Lisp_Object)
decode_any_window	window.c	/^decode_any_window (register Lisp_Object window)$/;"	f	signature:(register Lisp_Object window)
decode_any_window	window.h	/^extern struct window *decode_any_window (Lisp_Object);$/;"	p	signature:(Lisp_Object)
decode_buffer	buffer.h	/^decode_buffer (Lisp_Object b)$/;"	f	signature:(Lisp_Object b)
decode_char	charset.c	/^decode_char (struct charset *charset, unsigned int code)$/;"	f	signature:(struct charset *charset, unsigned int code)
decode_char	charset.h	/^extern int decode_char (struct charset *, unsigned);$/;"	p	signature:(struct charset *, unsigned)
DECODE_CHAR	charset.h	405;"	d
decode_coding	coding.c	/^decode_coding (struct coding_system *coding)$/;"	f	file:	signature:(struct coding_system *coding)
decode_coding_big5	coding.c	/^decode_coding_big5 (struct coding_system *coding)$/;"	f	file:	signature:(struct coding_system *coding)
decode_coding_ccl	coding.c	/^decode_coding_ccl (struct coding_system *coding)$/;"	f	file:	signature:(struct coding_system *coding)
decode_coding_charset	coding.c	/^decode_coding_charset (struct coding_system *coding)$/;"	f	file:	signature:(struct coding_system *coding)
decode_coding_c_string	coding.h	725;"	d
decode_coding_emacs_mule	coding.c	/^decode_coding_emacs_mule (struct coding_system *coding)$/;"	f	file:	signature:(struct coding_system *coding)
decode_coding_gap	coding.c	/^decode_coding_gap (struct coding_system *coding,$/;"	f	signature:(struct coding_system *coding, ptrdiff_t chars, ptrdiff_t bytes)
decode_coding_gap	coding.h	/^extern void decode_coding_gap (struct coding_system *,$/;"	p	signature:(struct coding_system *, ptrdiff_t, ptrdiff_t)
decode_coding_iso_2022	coding.c	/^decode_coding_iso_2022 (struct coding_system *coding)$/;"	f	file:	signature:(struct coding_system *coding)
decode_coding_object	coding.c	/^decode_coding_object (struct coding_system *coding,$/;"	f	signature:(struct coding_system *coding, Lisp_Object src_object, ptrdiff_t from, ptrdiff_t from_byte, ptrdiff_t to, ptrdiff_t to_byte, Lisp_Object dst_object)
decode_coding_object	coding.h	/^extern void decode_coding_object (struct coding_system *,$/;"	p	signature:(struct coding_system *, Lisp_Object, ptrdiff_t, ptrdiff_t, ptrdiff_t, ptrdiff_t, Lisp_Object)
decode_coding_raw_text	coding.c	/^decode_coding_raw_text (struct coding_system *coding)$/;"	f	file:	signature:(struct coding_system *coding)
decode_coding_sjis	coding.c	/^decode_coding_sjis (struct coding_system *coding)$/;"	f	file:	signature:(struct coding_system *coding)
decode_coding_system	process.h	/^    Lisp_Object decode_coding_system;$/;"	m	struct:Lisp_Process	access:public
decode_coding_utf_16	coding.c	/^decode_coding_utf_16 (struct coding_system *coding)$/;"	f	file:	signature:(struct coding_system *coding)
decode_coding_utf_8	coding.c	/^decode_coding_utf_8 (struct coding_system *coding)$/;"	f	file:	signature:(struct coding_system *coding)
DECODE_COMPOSITION_END	coding.c	3433;"	d	file:
DECODE_COMPOSITION_RULE	coding.c	3297;"	d	file:
DECODE_COMPOSITION_START	coding.c	3401;"	d	file:
DECODE_DESIGNATION	coding.c	3219;"	d	file:
DECODE_EMACS_MULE_20_RELATIVE_COMPOSITION	coding.c	2216;"	d	file:
DECODE_EMACS_MULE_20_RULEBASE_COMPOSITION	coding.c	2229;"	d	file:
DECODE_EMACS_MULE_21_COMPOSITION	coding.c	2186;"	d	file:
DECODE_EMACS_MULE_COMPOSITION_RULE_20	coding.c	2148;"	d	file:
DECODE_EMACS_MULE_COMPOSITION_RULE_21	coding.c	2166;"	d	file:
DECODE_EMACS_MULE_COMPOSITION_START	coding.c	2240;"	d	file:
decode_env_path	emacs.c	/^decode_env_path (const char *evarname, const char *defalt, bool empty)$/;"	f	signature:(const char *evarname, const char *defalt, bool empty)
decode_env_path	lisp.h	/^extern Lisp_Object decode_env_path (const char *, const char *, bool);$/;"	p	signature:(const char *, const char *, bool)
decode_eol	coding.c	/^decode_eol (struct coding_system *coding)$/;"	f	file:	signature:(struct coding_system *coding)
DECODE_FILE	coding.h	646;"	d
decode_file_name	coding.c	/^decode_file_name (Lisp_Object fname)$/;"	f	signature:(Lisp_Object fname)
decode_file_name	coding.h	/^extern Lisp_Object decode_file_name (Lisp_Object);$/;"	p	signature:(Lisp_Object)
decode_float_time	editfns.c	/^decode_float_time (double t, struct lisp_time *result)$/;"	f	file:	signature:(double t, struct lisp_time *result)
decode_live_frame	frame.c	/^decode_live_frame (register Lisp_Object frame)$/;"	f	signature:(register Lisp_Object frame)
decode_live_frame	frame.h	/^extern struct frame *decode_live_frame (Lisp_Object);$/;"	p	signature:(Lisp_Object)
decode_live_terminal	termhooks.h	/^extern struct terminal *decode_live_terminal (Lisp_Object);$/;"	p	signature:(Lisp_Object)
decode_live_terminal	terminal.c	/^decode_live_terminal (Lisp_Object terminal)$/;"	f	signature:(Lisp_Object terminal)
decode_live_window	window.c	/^decode_live_window (register Lisp_Object window)$/;"	f	signature:(register Lisp_Object window)
decode_live_window	window.h	/^extern struct window *decode_live_window (Lisp_Object);$/;"	p	signature:(Lisp_Object)
decode_mode_spec	xdisp.c	/^decode_mode_spec (struct window *w, register int c, int field_width,$/;"	f	file:	signature:(struct window *w, register int c, int field_width, Lisp_Object *string)
decode_mode_spec	xdisp.c	/^static const char *decode_mode_spec (struct window *, int, int, Lisp_Object *);$/;"	p	file:	signature:(struct window *, int, int, Lisp_Object *)
decode_mode_spec_buffer	frame.h	/^  char *decode_mode_spec_buffer;$/;"	m	struct:frame	access:public
decode_mode_spec_coding	xdisp.c	/^decode_mode_spec_coding (Lisp_Object coding_system, char *buf, bool eol_flag)$/;"	f	file:	signature:(Lisp_Object coding_system, char *buf, bool eol_flag)
decode_next_window_args	window.c	/^decode_next_window_args (Lisp_Object *window, Lisp_Object *minibuf, Lisp_Object *all_frames)$/;"	f	file:	signature:(Lisp_Object *window, Lisp_Object *minibuf, Lisp_Object *all_frames)
DECODE_POSITION	buffer.h	294;"	d
decode_status	process.c	/^decode_status (Lisp_Object l, Lisp_Object *symbol, Lisp_Object *code,$/;"	f	file:	signature:(Lisp_Object l, Lisp_Object *symbol, Lisp_Object *code, bool *coredump)
DECODE_SYSTEM	coding.h	657;"	d
decode_terminal	terminal.c	/^decode_terminal (Lisp_Object terminal)$/;"	f	file:	signature:(Lisp_Object terminal)
decode_timer	keyboard.c	/^decode_timer (Lisp_Object timer, struct timespec *result)$/;"	f	file:	signature:(Lisp_Object timer, struct timespec *result)
decode_time_components	editfns.c	/^decode_time_components (Lisp_Object high, Lisp_Object low, Lisp_Object usec,$/;"	f	signature:(Lisp_Object high, Lisp_Object low, Lisp_Object usec, Lisp_Object psec, struct lisp_time *result, double *dresult)
decode_time_components	systime.h	/^extern int decode_time_components (Lisp_Object, Lisp_Object, Lisp_Object,$/;"	p	signature:(Lisp_Object, Lisp_Object, Lisp_Object, Lisp_Object, struct lisp_time *, double *)
decode_tty_terminal	termhooks.h	/^extern struct terminal *decode_tty_terminal (Lisp_Object);$/;"	p	signature:(Lisp_Object)
decode_tty_terminal	terminal.c	/^decode_tty_terminal (Lisp_Object terminal)$/;"	f	signature:(Lisp_Object terminal)
decode_valid_window	window.c	/^decode_valid_window (register Lisp_Object window)$/;"	f	file:	signature:(register Lisp_Object window)
decode_window_system_frame	frame.c	/^decode_window_system_frame (Lisp_Object frame)$/;"	f	signature:(Lisp_Object frame)
decode_window_system_frame	frame.h	/^  decode_window_system_frame (Lisp_Object);$/;"	p	signature:(Lisp_Object)
decoding	process.c	/^  (Lisp_Object process, Lisp_Object decoding, Lisp_Object encoding)$/;"	v
decoding_buf	process.h	/^    Lisp_Object decoding_buf;$/;"	m	struct:Lisp_Process	access:public
decoding_carryover	process.h	/^    int decoding_carryover;$/;"	m	struct:Lisp_Process	access:public
DeCommitFreeBlockThreshold	w32heap.c	/^  SIZE_T DeCommitFreeBlockThreshold;$/;"	m	struct:_RTL_HEAP_PARAMETERS	file:	access:public
DeCommitTotalFreeThreshold	w32heap.c	/^  SIZE_T DeCommitTotalFreeThreshold;$/;"	m	struct:_RTL_HEAP_PARAMETERS	file:	access:public
decompress_unwind_data	decompress.c	/^struct decompress_unwind_data$/;"	s	file:
decompress_unwind_data::nbytes	decompress.c	/^  ptrdiff_t old_point, start, nbytes;$/;"	m	struct:decompress_unwind_data	file:	access:public
decompress_unwind_data::old_point	decompress.c	/^  ptrdiff_t old_point, start, nbytes;$/;"	m	struct:decompress_unwind_data	file:	access:public
decompress_unwind_data::start	decompress.c	/^  ptrdiff_t old_point, start, nbytes;$/;"	m	struct:decompress_unwind_data	file:	access:public
decompress_unwind_data::stream	decompress.c	/^  z_stream *stream;$/;"	m	struct:decompress_unwind_data	file:	access:public
decorations	xfns.c	/^    unsigned long decorations;$/;"	m	struct:__anon39	file:	access:public
DEC_BOTH	character.h	515;"	d
dec_bytepos	syntax.c	/^dec_bytepos (ptrdiff_t bytepos)$/;"	f	file:	signature:(ptrdiff_t bytepos)
DEC_POS	character.h	483;"	d
DEC_TEXT_POS	dispextern.h	210;"	d
dedicated	window.c	/^  Lisp_Object scroll_bar_width, vertical_scroll_bar_type, dedicated;$/;"	m	struct:saved_window	file:	access:public
dedicated	window.h	/^    Lisp_Object dedicated;$/;"	m	struct:window	access:public
deep_copy_glyph_row	xdisp.c	/^deep_copy_glyph_row (struct glyph_row *to, struct glyph_row *from)$/;"	f	file:	signature:(struct glyph_row *to, struct glyph_row *from)
def	minibuf.c	/^  (Lisp_Object prompt, Lisp_Object collection, Lisp_Object predicate, Lisp_Object require_match, Lisp_Object initial_input, Lisp_Object hist, Lisp_Object def, Lisp_Object inherit_input_method)$/;"	v
def	minibuf.c	/^  (Lisp_Object prompt, Lisp_Object def, Lisp_Object require_match,$/;"	v
defalias	lread.c	/^defalias (struct Lisp_Subr *sname, char *string)$/;"	f	signature:(struct Lisp_Subr *sname, char *string)
defalt	lisp.h	/^    Lisp_Object defalt;$/;"	m	struct:Lisp_Char_Table	access:public
DEFAULT_ALSA_SOUND_DEVICE	sound.c	874;"	d	file:
default_ascent	font.h	/^  int default_ascent;$/;"	m	struct:font	access:public
default_char	coding.h	/^  int default_char;$/;"	m	struct:coding_system	access:public
DEFAULT_COLS	frame.c	5121;"	d	file:
DEFAULT_CURSOR	dispextern.h	/^  DEFAULT_CURSOR = -2,$/;"	e	enum:text_cursor_kinds
DEFAULT_ENCODING	font.c	46;"	d	file:
default_face_done_p	frame.h	/^  bool_bf default_face_done_p : 1;$/;"	m	struct:frame	access:public
DEFAULT_FACE_ID	dispextern.h	/^  DEFAULT_FACE_ID,$/;"	e	enum:face_id
default_filename	w32fns.c	/^  (Lisp_Object prompt, Lisp_Object dir, Lisp_Object default_filename, Lisp_Object mustmatch, Lisp_Object only_dir_p)$/;"	v
default_filename	xfns.c	/^  (Lisp_Object prompt, Lisp_Object dir, Lisp_Object default_filename, Lisp_Object mustmatch, Lisp_Object only_dir_p)$/;"	v
default_filename	xfns.c	/^  (Lisp_Object prompt, Lisp_Object dir, Lisp_Object default_filename,$/;"	v
DEFAULT_GDK_DISPLAY	xterm.h	801;"	d
DEFAULT_GDK_DISPLAY	xterm.h	806;"	d
DEFAULT_HASH_SIZE	alloc.c	/^  enum DEFAULT_HASH_SIZE DEFAULT_HASH_SIZE;$/;"	m	union:__anon13	typeref:enum:__anon13::DEFAULT_HASH_SIZE	file:	access:public
DEFAULT_HASH_SIZE	lisp.h	/^enum DEFAULT_HASH_SIZE { DEFAULT_HASH_SIZE = 65 };$/;"	e	enum:DEFAULT_HASH_SIZE
DEFAULT_HASH_SIZE	lisp.h	/^enum DEFAULT_HASH_SIZE { DEFAULT_HASH_SIZE = 65 };$/;"	g
DEFAULT_HOURGLASS_DELAY	xdisp.c	785;"	d	file:
DEFAULT_IMAGE_ASCENT	dispextern.h	3019;"	d
DEFAULT_IMAGE_HEIGHT	dispextern.h	3004;"	d
DEFAULT_IMAGE_WIDTH	dispextern.h	3003;"	d
DEFAULT_INTERVAL_P	intervals.h	119;"	d
default_invis_vector	xdisp.c	/^static Lisp_Object default_invis_vector[3];$/;"	v	file:
DEFAULT_LCID	w32select.c	/^static LCID DEFAULT_LCID;$/;"	v	file:
default_line_pixel_height	dispextern.h	/^int default_line_pixel_height (struct window *);$/;"	p	signature:(struct window *)
default_line_pixel_height	xdisp.c	/^default_line_pixel_height (struct window *w)$/;"	f	signature:(struct window *w)
default_max_colors	term.c	/^static int default_max_colors;$/;"	v	file:
default_no_color_video	term.c	/^static int default_no_color_video;$/;"	v	file:
default_orig_pair	term.c	/^static char *default_orig_pair;$/;"	v	file:
default_output_mode	callproc.c	/^static mode_t const default_output_mode = 0666;$/;"	v	file:
default_output_mode	callproc.c	/^static mode_t const default_output_mode = S_IREAD | S_IWRITE;$/;"	v	file:
default_pixels_per_inch_x	frame.h	/^default_pixels_per_inch_x (void)$/;"	f	signature:(void)
default_pixels_per_inch_y	frame.h	/^default_pixels_per_inch_y (void)$/;"	f	signature:(void)
DEFAULT_REHASH_SIZE	lisp.h	/^static float const DEFAULT_REHASH_SIZE = 1.5 - 1;$/;"	v
DEFAULT_REHASH_THRESHOLD	lisp.h	/^static float const DEFAULT_REHASH_THRESHOLD = 0.8125;$/;"	v
DEFAULT_ROWS	frame.c	5120;"	d	file:
default_set_background	term.c	/^static char *default_set_background;$/;"	v	file:
default_set_foreground	term.c	/^static char *default_set_foreground;$/;"	v	file:
default_shape	xfns.c	/^  int default_shape;$/;"	m	struct:mouse_cursor_types	file:	access:public
DEFAULT_SOUND_DEVICE	config.h	84;"	d
DEFAULT_TOOL_BAR_BUTTON_MARGIN	dispextern.h	3168;"	d
DEFAULT_TOOL_BAR_BUTTON_RELIEF	dispextern.h	3169;"	d
DEFAULT_TOOL_BAR_IMAGE_HEIGHT	dispextern.h	3173;"	d
DEFAULT_TOOL_BAR_LABEL_SIZE	dispextern.h	3164;"	d
default_toplevel_binding	eval.c	/^default_toplevel_binding (Lisp_Object symbol)$/;"	f	file:	signature:(Lisp_Object symbol)
default_to_grave_quoting_style	doc.c	/^default_to_grave_quoting_style (void)$/;"	f	file:	signature:(void)
default_value	data.c	/^default_value (Lisp_Object symbol)$/;"	f	file:	signature:(Lisp_Object symbol)
default_value	minibuf.c	/^  (Lisp_Object prompt, Lisp_Object initial_contents, Lisp_Object keymap, Lisp_Object read, Lisp_Object hist, Lisp_Object default_value, Lisp_Object inherit_input_method)$/;"	v
default_value	minibuf.c	/^  (Lisp_Object prompt, Lisp_Object initial_input, Lisp_Object history, Lisp_Object default_value, Lisp_Object inherit_input_method)$/;"	v
defcell	lisp.h	/^    Lisp_Object defcell;$/;"	m	struct:Lisp_Buffer_Local_Value	access:public
deferred_msg	w32term.h	/^typedef struct deferred_msg$/;"	s
deferred_msg	w32term.h	/^} deferred_msg;$/;"	t	typeref:struct:deferred_msg
deferred_msg::completed	w32term.h	/^  int                   completed;$/;"	m	struct:deferred_msg	access:public
deferred_msg::next	w32term.h	/^  struct deferred_msg * next;$/;"	m	struct:deferred_msg	typeref:struct:deferred_msg::deferred_msg	access:public
deferred_msg::result	w32term.h	/^  LRESULT               result;$/;"	m	struct:deferred_msg	access:public
deferred_msg::w32msg	w32term.h	/^  W32Msg                w32msg;$/;"	m	struct:deferred_msg	access:public
deferred_msg_head	w32fns.c	/^deferred_msg * deferred_msg_head;$/;"	v
DEFER_MS_W32_H	w32.c	24;"	d	file:
DEFER_MS_W32_H	w32notify.c	84;"	d	file:
DEFER_MS_W32_H	w32proc.c	25;"	d	file:
DEFINE	bytecode.c	276;"	d	file:
DEFINE	bytecode.c	278;"	d	file:
DEFINE	bytecode.c	461;"	d	file:
DEFINE	bytecode.c	463;"	d	file:
defined_color	xfaces.c	/^defined_color (struct frame *f, const char *color_name, XColor *color_def,$/;"	f	file:	signature:(struct frame *f, const char *color_name, XColor *color_def, bool alloc)
defined_GC_CHECK_STRING_BYTES	lisp.h	/^enum { defined_GC_CHECK_STRING_BYTES = false };$/;"	e	enum:__anon37
defined_GC_CHECK_STRING_BYTES	lisp.h	/^enum { defined_GC_CHECK_STRING_BYTES = true };$/;"	e	enum:__anon36
define_as_prefix	keymap.c	/^define_as_prefix (Lisp_Object keymap, Lisp_Object c)$/;"	f	file:	signature:(Lisp_Object keymap, Lisp_Object c)
define_as_prefix	keymap.c	/^static Lisp_Object define_as_prefix (Lisp_Object, Lisp_Object);$/;"	p	file:
define_charset_arg_index	charset.h	/^enum define_charset_arg_index$/;"	g
define_charset_internal	charset.c	/^define_charset_internal (Lisp_Object name,$/;"	f	file:	signature:(Lisp_Object name, int dimension, const char *code_space_chars, unsigned min_code, unsigned max_code, int iso_final, int iso_revision, int emacs_mule_id, bool ascii_compatible, bool supplementary, int code_offset)
define_coding_ccl_arg_index	coding.h	/^enum define_coding_ccl_arg_index$/;"	g
define_coding_iso2022_arg_index	coding.h	/^enum define_coding_iso2022_arg_index$/;"	g
define_coding_system_arg_index	coding.h	/^enum define_coding_system_arg_index$/;"	g
define_coding_undecided_arg_index	coding.h	/^enum define_coding_undecided_arg_index$/;"	g
define_coding_utf16_arg_index	coding.h	/^enum define_coding_utf16_arg_index$/;"	g
define_coding_utf8_arg_index	coding.h	/^enum define_coding_utf8_arg_index$/;"	g
define_frame_cursor	dispextern.h	/^  void (*define_frame_cursor) (struct frame *f, Cursor cursor);$/;"	m	struct:redisplay_interface	access:public
define_frame_cursor1	xdisp.c	/^define_frame_cursor1 (struct frame *f, Cursor cursor, Lisp_Object pointer)$/;"	f	file:	signature:(struct frame *f, Cursor cursor, Lisp_Object pointer)
define_fringe_bitmap	dispextern.h	/^  void (*define_fringe_bitmap) (int which, unsigned short *bits,$/;"	m	struct:redisplay_interface	access:public
DEFINE_GDB_SYMBOL_BEGIN	lisp.h	51;"	d
DEFINE_GDB_SYMBOL_END	lisp.h	52;"	d
define_image_type	image.c	/^define_image_type (struct image_type *type)$/;"	f	file:	signature:(struct image_type *type)
DEFINE_KEY_OPS_AS_MACROS	lisp.h	343;"	d
DEFINE_KEY_OPS_AS_MACROS	lisp.h	345;"	d
DEFINE_LISP_SYMBOL	lisp.h	732;"	d
DEFINE_NON_NIL_Q_SYMBOL_MACROS	lisp.h	745;"	d
define_symbol	lread.c	/^define_symbol (Lisp_Object sym, char const *str)$/;"	f	file:	signature:(Lisp_Object sym, char const *str)
DEFINE_SYMBOLS	lread.c	22;"	d	file:
defining_kbd_macro_	keyboard.h	/^    Lisp_Object defining_kbd_macro_;$/;"	m	struct:kboard	access:public
definition	data.c	/^  (register Lisp_Object symbol, Lisp_Object definition, Lisp_Object docstring)$/;"	v
definition	keymap.c	/^  (Lisp_Object definition, Lisp_Object keymap, Lisp_Object firstonly, Lisp_Object noindirect, Lisp_Object no_remap)$/;"	v
definition	keymap.c	/^  Lisp_Object definition, this, last;$/;"	m	struct:where_is_internal_data	file:	access:public
definition	keymap.c	/^  Lisp_Object definition;$/;"	m	struct:describe_map_elt	file:	access:public
defsubr	lisp.h	/^extern void defsubr (struct Lisp_Subr *);$/;"	p	signature:(struct Lisp_Subr *)
defsubr	lread.c	/^defsubr (struct Lisp_Subr *sname)$/;"	f	signature:(struct Lisp_Subr *sname)
DEFSYM	lisp.h	1933;"	d
defsym_name	globals.h	/^static char const *const defsym_name[] = {$/;"	v
DEFUN	lisp.h	2883;"	d
DEFUN	lisp.h	2892;"	d
DEFUN_ARGS_0	lisp.h	692;"	d
DEFUN_ARGS_1	lisp.h	693;"	d
DEFUN_ARGS_2	lisp.h	694;"	d
DEFUN_ARGS_3	lisp.h	695;"	d
DEFUN_ARGS_4	lisp.h	696;"	d
DEFUN_ARGS_5	lisp.h	697;"	d
DEFUN_ARGS_6	lisp.h	699;"	d
DEFUN_ARGS_7	lisp.h	701;"	d
DEFUN_ARGS_8	lisp.h	703;"	d
DEFUN_ARGS_MANY	lisp.h	690;"	d
DEFUN_ARGS_UNEVALLED	lisp.h	691;"	d
defvar_bool	lisp.h	/^extern void defvar_bool (struct Lisp_Boolfwd *, const char *, bool *);$/;"	p	signature:(struct Lisp_Boolfwd *, const char *, bool *)
DEFVAR_BOOL	lisp.h	2952;"	d
defvar_bool	lread.c	/^defvar_bool (struct Lisp_Boolfwd *b_fwd,$/;"	f	signature:(struct Lisp_Boolfwd *b_fwd, const char *namestring, bool *address)
defvar_int	lisp.h	/^extern void defvar_int (struct Lisp_Intfwd *, const char *, EMACS_INT *);$/;"	p	signature:(struct Lisp_Intfwd *, const char *, EMACS_INT *)
DEFVAR_INT	lisp.h	2957;"	d
defvar_int	lread.c	/^defvar_int (struct Lisp_Intfwd *i_fwd,$/;"	f	signature:(struct Lisp_Intfwd *i_fwd, const char *namestring, EMACS_INT *address)
defvar_kboard	lisp.h	/^extern void defvar_kboard (struct Lisp_Kboard_Objfwd *, const char *, int);$/;"	p	signature:(struct Lisp_Kboard_Objfwd *, const char *, int)
DEFVAR_KBOARD	lisp.h	2963;"	d
defvar_kboard	lread.c	/^defvar_kboard (struct Lisp_Kboard_Objfwd *ko_fwd,$/;"	f	signature:(struct Lisp_Kboard_Objfwd *ko_fwd, const char *namestring, int offset)
defvar_lisp	lisp.h	/^extern void defvar_lisp (struct Lisp_Objfwd *, const char *, Lisp_Object *);$/;"	p	signature:(struct Lisp_Objfwd *, const char *, Lisp_Object *)
DEFVAR_LISP	lisp.h	2942;"	d
defvar_lisp	lread.c	/^defvar_lisp (struct Lisp_Objfwd *o_fwd,$/;"	f	signature:(struct Lisp_Objfwd *o_fwd, const char *namestring, Lisp_Object *address)
defvar_lisp_nopro	lisp.h	/^extern void defvar_lisp_nopro (struct Lisp_Objfwd *, const char *, Lisp_Object *);$/;"	p	signature:(struct Lisp_Objfwd *, const char *, Lisp_Object *)
DEFVAR_LISP_NOPRO	lisp.h	2947;"	d
defvar_lisp_nopro	lread.c	/^defvar_lisp_nopro (struct Lisp_Objfwd *o_fwd,$/;"	f	signature:(struct Lisp_Objfwd *o_fwd, const char *namestring, Lisp_Object *address)
defvar_per_buffer	buffer.c	/^defvar_per_buffer (struct Lisp_Buffer_Objfwd *bo_fwd, const char *namestring,$/;"	f	file:	signature:(struct Lisp_Buffer_Objfwd *bo_fwd, const char *namestring, Lisp_Object *address, Lisp_Object predicate)
DEFVAR_PER_BUFFER	buffer.c	5369;"	d	file:
DEF_DLL_FN	w32.h	243;"	d
DEICONIFY_EVENT	termhooks.h	/^  DEICONIFY_EVENT,		\/* An X client deiconified this window.  *\/$/;"	e	enum:event_kind
delayed_size_change	dispnew.c	/^static bool delayed_size_change;$/;"	v	file:
deletecost	scroll.c	/^    int deletecost;$/;"	m	struct:matrix_elt	file:	access:public
deletecount	scroll.c	/^    unsigned char deletecount;$/;"	m	struct:matrix_elt	file:	access:public
deleted_pid_list	process.c	/^static Lisp_Object deleted_pid_list;$/;"	v	file:
delete_all_child_windows	window.c	/^delete_all_child_windows (Lisp_Object window)$/;"	f	signature:(Lisp_Object window)
delete_all_child_windows	window.h	/^extern void delete_all_child_windows (Lisp_Object);$/;"	p	signature:(Lisp_Object)
delete_all_overlays	buffer.c	/^delete_all_overlays (struct buffer *b)$/;"	f	signature:(struct buffer *b)
delete_all_overlays	buffer.h	/^extern void delete_all_overlays (struct buffer *);$/;"	p	signature:(struct buffer *)
delete_by_moving_to_trash	globals.h	929;"	d
delete_cache_boundaries	region-cache.c	/^delete_cache_boundaries (struct region_cache *c,$/;"	f	file:	signature:(struct region_cache *c, ptrdiff_t start, ptrdiff_t end)
delete_cb	gtkutil.c	/^delete_cb (GtkWidget *widget,$/;"	f	file:	signature:(GtkWidget *widget, GdkEvent *event, gpointer user_data)
delete_child	w32.h	/^extern void delete_child (child_process *cp);$/;"	p	signature:(child_process *cp)
delete_child	w32proc.c	/^delete_child (child_process *cp)$/;"	f	signature:(child_process *cp)
delete_crit	w32term.h	/^extern void delete_crit (void);$/;"	p	signature:(void)
delete_crit	w32xfns.c	/^delete_crit (void)$/;"	f	signature:(void)
delete_deletable_window	window.c	/^delete_deletable_window (Lisp_Object window)$/;"	f	file:	signature:(Lisp_Object window)
delete_exited_processes	globals.h	931;"	d
delete_frame	frame.c	/^delete_frame (Lisp_Object frame, Lisp_Object force)$/;"	f	signature:(Lisp_Object frame, Lisp_Object force)
delete_frame	frame.h	/^extern Lisp_Object delete_frame (Lisp_Object, Lisp_Object);$/;"	p	signature:(Lisp_Object, Lisp_Object)
delete_frame_hook	termhooks.h	/^  void (*delete_frame_hook) (struct frame *);$/;"	m	struct:terminal	access:public
delete_glyphs	dispextern.h	/^extern void delete_glyphs (struct frame *, int);$/;"	p	signature:(struct frame *, int)
delete_glyphs	terminal.c	/^delete_glyphs (struct frame *f, int n)$/;"	f	signature:(struct frame *f, int n)
delete_glyphs_hook	termhooks.h	/^  void (*delete_glyphs_hook) (struct frame *, int);$/;"	m	struct:terminal	access:public
delete_gpm_wait_descriptor	lisp.h	/^extern void delete_gpm_wait_descriptor (int);$/;"	p	signature:(int)
delete_gpm_wait_descriptor	process.c	/^delete_gpm_wait_descriptor (int desc)$/;"	f	signature:(int desc)
delete_initial_terminal	terminal.c	/^delete_initial_terminal (struct terminal *terminal)$/;"	f	file:	signature:(struct terminal *terminal)
delete_initial_terminal	terminal.c	/^static void delete_initial_terminal (struct terminal *);$/;"	p	file:	signature:(struct terminal *)
delete_interval	intervals.c	/^delete_interval (register INTERVAL i)$/;"	f	file:	signature:(register INTERVAL i)
delete_in_insert_mode	termchar.h	/^  bool_bf delete_in_insert_mode : 1;    \/* delete mode == insert mode *\/$/;"	m	struct:tty_display_info	access:public
delete_kboard	keyboard.c	/^delete_kboard (KBOARD *kb)$/;"	f	signature:(KBOARD *kb)
delete_kboard	keyboard.h	/^extern void delete_kboard (KBOARD *);$/;"	p	signature:(KBOARD *)
delete_keyboard_wait_descriptor	lisp.h	/^extern void delete_keyboard_wait_descriptor (int);$/;"	p	signature:(int)
delete_keyboard_wait_descriptor	process.c	/^delete_keyboard_wait_descriptor (int desc)$/;"	f	signature:(int desc)
delete_line_cost	frame.h	/^  int *delete_line_cost;$/;"	m	struct:frame	access:public
delete_node	intervals.c	/^delete_node (register INTERVAL i)$/;"	f	file:	signature:(register INTERVAL i)
delete_n_lines_cost	frame.h	/^  int *delete_n_lines_cost;$/;"	m	struct:frame	access:public
delete_p	xfns.c	/^   Lisp_Object source, Lisp_Object delete_p, Lisp_Object vector_ret_p)$/;"	v
delete_read_fd	process.c	/^delete_read_fd (int fd)$/;"	f	signature:(int fd)
delete_read_fd	process.h	/^extern void delete_read_fd (int fd);$/;"	p	signature:(int fd)
delete_temp_file	callproc.c	/^delete_temp_file (Lisp_Object name)$/;"	f	file:	signature:(Lisp_Object name)
delete_terminal	termhooks.h	/^extern void delete_terminal (struct terminal *);$/;"	p	signature:(struct terminal *)
delete_terminal	terminal.c	/^delete_terminal (struct terminal *terminal)$/;"	f	signature:(struct terminal *terminal)
delete_terminal_hook	termhooks.h	/^  void (*delete_terminal_hook) (struct terminal *);$/;"	m	struct:terminal	access:public
delete_tray_notification	w32fns.c	/^delete_tray_notification (struct frame *f, int id)$/;"	f	file:	signature:(struct frame *f, int id)
delete_tty	term.c	/^delete_tty (struct terminal *terminal)$/;"	f	file:	signature:(struct terminal *terminal)
delete_tty	term.c	/^static void delete_tty (struct terminal *);$/;"	p	file:	signature:(struct terminal *)
DELETE_WINDOW_EVENT	termhooks.h	/^  DELETE_WINDOW_EVENT,		\/* An X client said "delete this window".  *\/$/;"	e	enum:event_kind
delete_write_fd	process.c	/^delete_write_fd (int fd)$/;"	f	signature:(int fd)
delete_write_fd	process.h	/^extern void delete_write_fd (int fd);$/;"	p	signature:(int fd)
deliver_arith_signal	sysdep.c	/^deliver_arith_signal (int sig)$/;"	f	file:	signature:(int sig)
deliver_child_signal	process.c	/^deliver_child_signal (int sig)$/;"	f	file:	signature:(int sig)
deliver_danger_signal	sysdep.c	/^deliver_danger_signal (int sig)$/;"	f	file:	signature:(int sig)
deliver_fatal_signal	sysdep.c	/^deliver_fatal_signal (int sig)$/;"	f	file:	signature:(int sig)
deliver_fatal_thread_signal	sysdep.c	/^deliver_fatal_thread_signal (int sig)$/;"	f	file:	signature:(int sig)
deliver_input_available_signal	keyboard.c	/^deliver_input_available_signal (int sig)$/;"	f	file:	signature:(int sig)
deliver_interrupt_signal	keyboard.c	/^deliver_interrupt_signal (int sig)$/;"	f	file:	signature:(int sig)
deliver_process_signal	sysdep.c	/^deliver_process_signal (int sig, signal_handler_t handler)$/;"	f	signature:(int sig, signal_handler_t handler)
deliver_process_signal	syssignal.h	/^void deliver_process_signal (int, signal_handler_t);$/;"	p	signature:(int, signal_handler_t)
deliver_profiler_signal	profiler.c	/^deliver_profiler_signal (int signal)$/;"	f	file:	signature:(int signal)
deliver_thread_signal	sysdep.c	/^deliver_thread_signal (int sig, signal_handler_t handler)$/;"	f	file:	signature:(int sig, signal_handler_t handler)
deliver_user_signal	keyboard.c	/^deliver_user_signal (int sig)$/;"	f	file:	signature:(int sig)
deliver_user_signal	keyboard.c	/^static void deliver_user_signal (int);$/;"	p	file:	signature:(int)
deliver_window_change_signal	dispnew.c	/^deliver_window_change_signal (int sig)$/;"	f	file:	signature:(int sig)
deliver_window_change_signal	dispnew.c	/^static void deliver_window_change_signal (int);$/;"	p	file:	signature:(int)
deliver_wm_chars	w32fns.c	/^deliver_wm_chars (int do_translate, HWND hwnd, UINT msg, UINT wParam,$/;"	f	file:	signature:(int do_translate, HWND hwnd, UINT msg, UINT wParam, UINT lParam, int legacy_alt_meta)
del_range	insdel.c	/^del_range (ptrdiff_t from, ptrdiff_t to)$/;"	f	signature:(ptrdiff_t from, ptrdiff_t to)
del_range	lisp.h	/^extern void del_range (ptrdiff_t, ptrdiff_t);$/;"	p	signature:(ptrdiff_t, ptrdiff_t)
del_range_1	insdel.c	/^del_range_1 (ptrdiff_t from, ptrdiff_t to, bool prepare, bool ret_string)$/;"	f	signature:(ptrdiff_t from, ptrdiff_t to, bool prepare, bool ret_string)
del_range_1	lisp.h	/^extern Lisp_Object del_range_1 (ptrdiff_t, ptrdiff_t, bool, bool);$/;"	p	signature:(ptrdiff_t, ptrdiff_t, bool, bool)
del_range_2	insdel.c	/^del_range_2 (ptrdiff_t from, ptrdiff_t from_byte,$/;"	f	signature:(ptrdiff_t from, ptrdiff_t from_byte, ptrdiff_t to, ptrdiff_t to_byte, bool ret_string)
del_range_2	lisp.h	/^extern Lisp_Object del_range_2 (ptrdiff_t, ptrdiff_t,$/;"	p	signature:(ptrdiff_t, ptrdiff_t, ptrdiff_t, ptrdiff_t, bool)
del_range_both	insdel.c	/^del_range_both (ptrdiff_t from, ptrdiff_t from_byte,$/;"	f	signature:(ptrdiff_t from, ptrdiff_t from_byte, ptrdiff_t to, ptrdiff_t to_byte, bool prepare)
del_range_both	lisp.h	/^extern void del_range_both (ptrdiff_t, ptrdiff_t, ptrdiff_t, ptrdiff_t, bool);$/;"	p	signature:(ptrdiff_t, ptrdiff_t, ptrdiff_t, ptrdiff_t, bool)
del_range_byte	insdel.c	/^del_range_byte (ptrdiff_t from_byte, ptrdiff_t to_byte)$/;"	f	signature:(ptrdiff_t from_byte, ptrdiff_t to_byte)
del_range_byte	lisp.h	/^extern void del_range_byte (ptrdiff_t, ptrdiff_t);$/;"	p	signature:(ptrdiff_t, ptrdiff_t)
DEPDIR	Makefile	/^DEPDIR = deps$/;"	m
dependencies	dispextern.h	/^  Lisp_Object dependencies;$/;"	m	struct:image	access:public
DEPFLAGS	Makefile	/^  DEPFLAGS = -MMD -MF $(DEPDIR)\/$*.d -MP$/;"	m
DEPFLAGS	Makefile	/^  DEPFLAGS =$/;"	m
depth	lisp.h	/^    int depth;$/;"	m	struct:Lisp_Sub_Char_Table	access:public
depth	nsterm.h	/^  int height, width, depth;$/;"	m	struct:ns_bitmap_record	access:public
depth	syntax.c	/^    EMACS_INT depth;	\/* Depth at end of parsing.  *\/$/;"	m	struct:lisp_parse_state	file:	access:public
depth	w32term.h	/^  int height, width, depth;$/;"	m	struct:w32_bitmap_record	access:public
depth	xterm.h	/^  int height, width, depth;$/;"	m	struct:x_bitmap_record	access:public
desc	w32term.h	/^  void *desc;$/;"	m	struct:notifications_set	access:public
descent	composite.h	/^  short pixel_width, ascent, descent;$/;"	m	struct:composition	access:public
descent	dispextern.h	/^  int ascent, descent, max_ascent, max_descent;$/;"	m	struct:it	access:public
descent	dispextern.h	/^  short ascent, descent;$/;"	m	struct:glyph	access:public
descent	font.h	/^  int ascent, descent;$/;"	m	struct:font	access:public
descent	font.h	/^  short lbearing, rbearing, width, ascent, descent;$/;"	m	struct:font_metrics	access:public
descent	nsgui.h	/^  int descent;$/;"	m	struct:_XCharStruct	access:public
descent	w32font.h	/^  short lbearing, rbearing, width, ascent, descent;$/;"	m	struct:w32_metric_cache	access:public
describe_command	keymap.c	/^describe_command (Lisp_Object definition, Lisp_Object args)$/;"	f	file:	signature:(Lisp_Object definition, Lisp_Object args)
describe_command	keymap.c	/^static void describe_command (Lisp_Object, Lisp_Object);$/;"	p	file:
describe_map	keymap.c	/^describe_map (Lisp_Object map, Lisp_Object prefix,$/;"	f	file:	signature:(Lisp_Object map, Lisp_Object prefix, void (*elt_describer) (Lisp_Object, Lisp_Object), bool partial, Lisp_Object shadow, Lisp_Object *seen, bool nomenu, bool mention_shadow)
describe_map	keymap.c	/^static void describe_map (Lisp_Object, Lisp_Object,$/;"	p	file:	signature:(Lisp_Object, Lisp_Object, void (*) (Lisp_Object, Lisp_Object), bool, Lisp_Object, Lisp_Object *, bool, bool)
describe_map_compare	keymap.c	/^describe_map_compare (const void *aa, const void *bb)$/;"	f	file:	signature:(const void *aa, const void *bb)
describe_map_elt	keymap.c	/^struct describe_map_elt$/;"	s	file:
describe_map_elt::definition	keymap.c	/^  Lisp_Object definition;$/;"	m	struct:describe_map_elt	file:	access:public
describe_map_elt::event	keymap.c	/^  Lisp_Object event;$/;"	m	struct:describe_map_elt	file:	access:public
describe_map_elt::shadowed	keymap.c	/^  bool shadowed;$/;"	m	struct:describe_map_elt	file:	access:public
describe_map_tree	keymap.c	/^describe_map_tree (Lisp_Object startmap, bool partial, Lisp_Object shadow,$/;"	f	signature:(Lisp_Object startmap, bool partial, Lisp_Object shadow, Lisp_Object prefix, const char *title, bool nomenu, bool transl, bool always_title, bool mention_shadow)
describe_map_tree	keymap.h	/^extern void describe_map_tree (Lisp_Object, bool, Lisp_Object, Lisp_Object,$/;"	p	signature:(Lisp_Object, bool, Lisp_Object, Lisp_Object, const char *, bool, bool, bool, bool)
describe_translation	keymap.c	/^describe_translation (Lisp_Object definition, Lisp_Object args)$/;"	f	file:	signature:(Lisp_Object definition, Lisp_Object args)
describe_translation	keymap.c	/^static void describe_translation (Lisp_Object, Lisp_Object);$/;"	p	file:
describe_vector	keymap.c	/^describe_vector (Lisp_Object vector, Lisp_Object prefix, Lisp_Object args,$/;"	f	file:	signature:(Lisp_Object vector, Lisp_Object prefix, Lisp_Object args, void (*elt_describer) (Lisp_Object, Lisp_Object), bool partial, Lisp_Object shadow, Lisp_Object entire_map, bool keymap_p, bool mention_shadow)
describe_vector	keymap.c	/^static void describe_vector (Lisp_Object, Lisp_Object, Lisp_Object,$/;"	p	file:	signature:(Lisp_Object, Lisp_Object, Lisp_Object, void (*) (Lisp_Object, Lisp_Object), bool, Lisp_Object, Lisp_Object, bool, bool)
describe_vector_princ	keymap.c	/^describe_vector_princ (Lisp_Object elt, Lisp_Object fun)$/;"	f	file:	signature:(Lisp_Object elt, Lisp_Object fun)
deselect_palette	w32term.h	/^extern void deselect_palette (struct frame * f, HDC hdc);$/;"	p	signature:(struct frame * f, HDC hdc)
deselect_palette	w32xfns.c	/^deselect_palette (struct frame *f, HDC hdc)$/;"	f	signature:(struct frame *f, HDC hdc)
desired_cursor	frame.h	/^  enum text_cursor_kinds desired_cursor;$/;"	m	struct:frame	typeref:enum:frame::text_cursor_kinds	access:public
DESIRED_HEADER_LINE_HEIGHT	dispextern.h	1466;"	d
desired_matrix	frame.h	/^  struct glyph_matrix *desired_matrix;$/;"	m	struct:frame	typeref:struct:frame::glyph_matrix	access:public
desired_matrix	window.h	/^    struct glyph_matrix *desired_matrix;$/;"	m	struct:window	typeref:struct:window::glyph_matrix	access:public
DESIRED_MODE_LINE_HEIGHT	dispextern.h	1461;"	d
desired_pool	frame.h	/^  struct glyph_pool *desired_pool;$/;"	m	struct:frame	typeref:struct:frame::glyph_pool	access:public
desired_state	xselect.c	/^  int desired_state;$/;"	m	struct:prop_location	file:	access:public
desired_tool_bar_string	frame.h	/^  Lisp_Object desired_tool_bar_string;$/;"	m	struct:frame	access:public
desired_vpos	dispextern.h	/^  int desired_vpos, current_vpos;$/;"	m	struct:run	access:public
desired_y	dispextern.h	/^  int desired_y, current_y;$/;"	m	struct:run	access:public
dest	xselect.c	/^  (Lisp_Object display, Lisp_Object dest, Lisp_Object from,$/;"	v
destination	coding.h	/^  unsigned char *destination;$/;"	m	struct:coding_system	access:public
destroy_frame_xic	xterm.h	/^extern void destroy_frame_xic (struct frame *);$/;"	p	signature:(struct frame *)
destroy_fringe_bitmap	dispextern.h	/^  void (*destroy_fringe_bitmap) (int which);$/;"	m	struct:redisplay_interface	access:public
destroy_fringe_bitmap	fringe.c	/^destroy_fringe_bitmap (int n)$/;"	f	file:	signature:(int n)
detected_utf8_bytes	coding.h	/^  ptrdiff_t detected_utf8_bytes, detected_utf8_chars;$/;"	m	struct:coding_system	access:public
detected_utf8_chars	coding.h	/^  ptrdiff_t detected_utf8_bytes, detected_utf8_chars;$/;"	m	struct:coding_system	access:public
detector	coding.h	/^  bool (*detector) (struct coding_system *, struct coding_detection_info *);$/;"	m	struct:coding_system	access:public
detect_coding	coding.c	/^detect_coding (struct coding_system *coding)$/;"	f	file:	signature:(struct coding_system *coding)
detect_coding_big5	coding.c	/^detect_coding_big5 (struct coding_system *coding,$/;"	f	file:	signature:(struct coding_system *coding, struct coding_detection_info *detect_info)
detect_coding_ccl	coding.c	/^detect_coding_ccl (struct coding_system *coding,$/;"	f	file:	signature:(struct coding_system *coding, struct coding_detection_info *detect_info)
detect_coding_charset	coding.c	/^detect_coding_charset (struct coding_system *coding,$/;"	f	file:	signature:(struct coding_system *coding, struct coding_detection_info *detect_info)
detect_coding_emacs_mule	coding.c	/^detect_coding_emacs_mule (struct coding_system *coding,$/;"	f	file:	signature:(struct coding_system *coding, struct coding_detection_info *detect_info)
detect_coding_iso_2022	coding.c	/^detect_coding_iso_2022 (struct coding_system *coding,$/;"	f	file:	signature:(struct coding_system *coding, struct coding_detection_info *detect_info)
detect_coding_sjis	coding.c	/^detect_coding_sjis (struct coding_system *coding,$/;"	f	file:	signature:(struct coding_system *coding, struct coding_detection_info *detect_info)
detect_coding_system	coding.c	/^detect_coding_system (const unsigned char *src,$/;"	f	signature:(const unsigned char *src, ptrdiff_t src_chars, ptrdiff_t src_bytes, bool highest, bool multibytep, Lisp_Object coding_system)
detect_coding_system	lisp.h	/^extern Lisp_Object detect_coding_system (const unsigned char *, ptrdiff_t,$/;"	p	signature:(const unsigned char *, ptrdiff_t, ptrdiff_t, bool, bool, Lisp_Object)
detect_coding_utf_16	coding.c	/^detect_coding_utf_16 (struct coding_system *coding,$/;"	f	file:	signature:(struct coding_system *coding, struct coding_detection_info *detect_info)
detect_coding_utf_8	coding.c	/^detect_coding_utf_8 (struct coding_system *coding,$/;"	f	file:	signature:(struct coding_system *coding, struct coding_detection_info *detect_info)
detect_eol	coding.c	/^detect_eol (const unsigned char *source, ptrdiff_t src_bytes,$/;"	f	file:	signature:(const unsigned char *source, ptrdiff_t src_bytes, enum coding_category category)
detect_input_pending	keyboard.c	/^detect_input_pending (void)$/;"	f	signature:(void)
detect_input_pending	lisp.h	/^extern bool detect_input_pending (void);$/;"	p	signature:(void)
detect_input_pending_ignore_squeezables	keyboard.c	/^detect_input_pending_ignore_squeezables (void)$/;"	f	signature:(void)
detect_input_pending_ignore_squeezables	lisp.h	/^extern bool detect_input_pending_ignore_squeezables (void);$/;"	p	signature:(void)
detect_input_pending_run_timers	keyboard.c	/^detect_input_pending_run_timers (bool do_display)$/;"	f	signature:(bool do_display)
detect_input_pending_run_timers	lisp.h	/^extern bool detect_input_pending_run_timers (bool);$/;"	p	signature:(bool)
detect_suspicious_free	alloc.c	/^detect_suspicious_free (void *ptr)$/;"	f	file:	signature:(void *ptr)
detect_suspicious_free	alloc.c	/^static void detect_suspicious_free (void *ptr);$/;"	p	file:	signature:(void *ptr)
detect_suspicious_free	alloc.c	317;"	d	file:
DEVICE_DELTA	ftfont.c	1664;"	d	file:
DEV_TTY	keyboard.c	/^char const DEV_TTY[] = "CONOUT$";$/;"	v
DEV_TTY	keyboard.c	/^char const DEV_TTY[] = "\/dev\/tty";$/;"	v
dflt_group	w32.c	/^static struct group dflt_group =$/;"	v	typeref:struct:group	file:
dflt_group_name	w32.c	/^static char dflt_group_name[GNLEN+1];$/;"	v	file:
dflt_passwd	w32.c	/^static struct passwd dflt_passwd =$/;"	v	typeref:struct:passwd	file:
dflt_passwd_dir	w32.c	/^static char dflt_passwd_dir[MAX_UTF8_PATH];$/;"	v	file:
dflt_passwd_gecos	w32.c	/^static char dflt_passwd_gecos[PASSWD_FIELD_SIZE];$/;"	v	file:
dflt_passwd_name	w32.c	/^static char dflt_passwd_name[PASSWD_FIELD_SIZE];$/;"	v	file:
dflt_passwd_passwd	w32.c	/^static char dflt_passwd_passwd[PASSWD_FIELD_SIZE];$/;"	v	file:
dflt_passwd_shell	w32.c	/^static char dflt_passwd_shell[MAX_UTF8_PATH];$/;"	v	file:
DGifCloseFile	image.c	7574;"	d	file:
DGifCloseFile	image.c	7580;"	d	file:
DGifOpen	image.c	7575;"	d	file:
DGifOpen	image.c	7581;"	d	file:
DGifOpenFileName	image.c	7576;"	d	file:
DGifOpenFileName	image.c	7582;"	d	file:
DGifSlurp	image.c	7577;"	d	file:
DGifSlurp	image.c	7583;"	d	file:
dh	dispextern.h	/^  int wd, h, dh;$/;"	m	struct:draw_fringe_bitmap_params	access:public
dialog_delete_callback	gtkutil.c	/^dialog_delete_callback (GtkWidget *w, GdkEvent *event, gpointer user_data)$/;"	f	file:	signature:(GtkWidget *w, GdkEvent *event, gpointer user_data)
dialog_selection_callback	xmenu.c	/^dialog_selection_callback (GtkWidget *widget, gpointer client_data)$/;"	f	file:	signature:(GtkWidget *widget, gpointer client_data)
dialog_selection_callback	xmenu.c	/^dialog_selection_callback (Widget widget, LWLIB_ID id, XtPointer client_data)$/;"	f	file:	signature:(Widget widget, LWLIB_ID id, XtPointer client_data)
die	alloc.c	/^die (const char *msg, const char *file, int line)$/;"	f	signature:(const char *msg, const char *file, int line)
die	lisp.h	/^extern _Noreturn void die (const char *, const char *, int);$/;"	p	signature:(const char *, const char *, int)
digest_single_submenu	menu.c	/^digest_single_submenu (int start, int end, bool top_level_items)$/;"	f	signature:(int start, int end, bool top_level_items)
digest_single_submenu	menu.h	/^extern widget_value *digest_single_submenu (int, int, bool);$/;"	p	signature:(int, int, bool)
digit_to_number	lread.c	/^digit_to_number (int character, int base)$/;"	f	file:	signature:(int character, int base)
dim	dispnew.c	/^struct dim$/;"	s	file:
dim::height	dispnew.c	/^  int height;$/;"	m	struct:dim	file:	access:public
dim::width	dispnew.c	/^  int width;$/;"	m	struct:dim	file:	access:public
dimension	charset.c	/^  (Lisp_Object dimension, Lisp_Object chars)$/;"	v
dimension	charset.c	/^  (Lisp_Object dimension, Lisp_Object chars, Lisp_Object final_char)$/;"	v
dimension	charset.c	/^  (Lisp_Object dimension, Lisp_Object chars, Lisp_Object final_char, Lisp_Object charset)$/;"	v
dimension	charset.h	/^  int dimension;$/;"	m	struct:charset	access:public
dir	gtkutil.c	/^  GtkTextDirection dir;$/;"	m	struct:xg_frame_tb_info	file:	access:public
dir	w32fns.c	/^  (Lisp_Object prompt, Lisp_Object dir, Lisp_Object default_filename, Lisp_Object mustmatch, Lisp_Object only_dir_p)$/;"	v
dir	w32notify.c	/^  HANDLE dir;		\/* handle to the watched directory *\/$/;"	m	struct:notification	file:	access:public
dir	xfns.c	/^  (Lisp_Object prompt, Lisp_Object dir, Lisp_Object default_filename, Lisp_Object mustmatch, Lisp_Object only_dir_p)$/;"	v
dir	xfns.c	/^  (Lisp_Object prompt, Lisp_Object dir, Lisp_Object default_filename,$/;"	v
directory	dired.c	/^  (Lisp_Object directory, Lisp_Object full, Lisp_Object match, Lisp_Object nosort)$/;"	v
directory	dired.c	/^  (Lisp_Object directory, Lisp_Object full, Lisp_Object match, Lisp_Object nosort, Lisp_Object id_format)$/;"	v
directory	dired.c	/^  (Lisp_Object file, Lisp_Object directory, Lisp_Object predicate)$/;"	v
directory_	buffer.h	/^  Lisp_Object directory_;$/;"	m	struct:buffer	access:public
directory_files_internal	dired.c	/^directory_files_internal (Lisp_Object directory, Lisp_Object full,$/;"	f	signature:(Lisp_Object directory, Lisp_Object full, Lisp_Object match, Lisp_Object nosort, bool attrs, Lisp_Object id_format)
directory_files_internal	lisp.h	/^extern Lisp_Object directory_files_internal (Lisp_Object, Lisp_Object,$/;"	p	signature:(Lisp_Object, Lisp_Object, Lisp_Object, Lisp_Object, bool, Lisp_Object)
directory_files_internal_unwind	dired.c	/^directory_files_internal_unwind (void *d)$/;"	f	file:	signature:(void *d)
directory_files_internal_w32_unwind	dired.c	/^directory_files_internal_w32_unwind (Lisp_Object arg)$/;"	f	file:	signature:(Lisp_Object arg)
directory_file_name	fileio.c	/^directory_file_name (char *dst, char *src, ptrdiff_t srclen, bool multibyte)$/;"	f	file:	signature:(char *dst, char *src, ptrdiff_t srclen, bool multibyte)
DIRECTORY_SEP	config.h	90;"	d
dirent_namelen	dired.c	/^dirent_namelen (struct dirent *dp)$/;"	f	file:	signature:(struct dirent *dp)
DIRWATCH_BUFFER_SIZE	w32notify.c	104;"	d	file:
DIRWATCH_SIGNATURE	w32notify.c	105;"	d	file:
dir_find_data_a	w32.c	/^static WIN32_FIND_DATAA dir_find_data_a;$/;"	v	file:
DIR_FIND_DATA_A	w32.c	3432;"	d	file:
dir_find_data_w	w32.c	/^static WIN32_FIND_DATAW dir_find_data_w;$/;"	v	file:
DIR_FIND_DATA_W	w32.c	3431;"	d	file:
dir_find_handle	w32.c	/^static HANDLE dir_find_handle = INVALID_HANDLE_VALUE;$/;"	v	file:
dir_is_fat	w32.c	/^static int    dir_is_fat;$/;"	v	file:
dir_monitor_callback	gfilenotify.c	/^dir_monitor_callback (GFileMonitor *monitor,$/;"	f	file:	signature:(GFileMonitor *monitor, GFile *file, GFile *other_file, GFileMonitorEvent event_type, gpointer user_data)
dir_pathname	w32.c	/^static char   dir_pathname[MAX_UTF8_PATH];$/;"	v	file:
dir_static	w32.c	/^struct dirent dir_static;       \/* simulated directory contents *\/$/;"	v	typeref:struct:dirent
DIR_TO_FD	config.h	96;"	d
DIR_TO_FD	config.h	98;"	d
dir_warning	lisp.h	/^extern void dir_warning (const char *, Lisp_Object);$/;"	p	signature:(const char *, Lisp_Object)
dir_warning	lread.c	/^dir_warning (char const *use, Lisp_Object dirname)$/;"	f	signature:(char const *use, Lisp_Object dirname)
disable_address_randomization	lisp.h	/^extern bool disable_address_randomization (void);$/;"	p	signature:(void)
disable_address_randomization	lisp.h	/^INLINE bool disable_address_randomization (void) { return false; }$/;"	f	signature:(void)
disable_address_randomization	sysdep.c	/^disable_address_randomization (void)$/;"	f	signature:(void)
disable_ascii_optimization	globals.h	933;"	d
disable_itimers	w32proc.c	/^static int disable_itimers;$/;"	v	file:
disable_line_numbers_overlay_at_eob	buffer.c	/^disable_line_numbers_overlay_at_eob (void)$/;"	f	signature:(void)
disable_line_numbers_overlay_at_eob	lisp.h	/^extern Lisp_Object disable_line_numbers_overlay_at_eob (void);$/;"	p	signature:(void)
disassemble_lisp_time	editfns.c	/^disassemble_lisp_time (Lisp_Object specified_time, Lisp_Object *phigh,$/;"	f	file:	signature:(Lisp_Object specified_time, Lisp_Object *phigh, Lisp_Object *plow, Lisp_Object *pusec, Lisp_Object *ppsec)
DISCARD	bytecode.c	306;"	d	file:
discard_menu_items	menu.c	/^discard_menu_items (void)$/;"	f	signature:(void)
discard_menu_items	menu.h	/^extern void discard_menu_items (void);$/;"	p	signature:(void)
discard_mouse_events	keyboard.c	/^discard_mouse_events (void)$/;"	f	signature:(void)
discard_mouse_events	lisp.h	/^extern void discard_mouse_events (void);$/;"	p	signature:(void)
discard_tty_input	lisp.h	/^extern void discard_tty_input (void);$/;"	p	signature:(void)
discard_tty_input	sysdep.c	/^discard_tty_input (void)$/;"	f	signature:(void)
DISPEXTERN_H_INCLUDED	dispextern.h	23;"	d
display	dispextern.h	/^  Display *display;$/;"	m	struct:glyph_string	access:public
Display	image.c	3178;"	d	file:
Display	image.c	3187;"	d	file:
Display	nsgui.h	/^typedef int Display;$/;"	t
display	w32fns.c	/^  (Lisp_Object display, Lisp_Object xrm_string, Lisp_Object must_succeed)$/;"	v
Display	w32gui.h	/^typedef HDC Display;  \/* HDC so it doesn't conflict with xpm lib.  *\/$/;"	t
display	xfns.c	/^  (Lisp_Object display, Lisp_Object xrm_string, Lisp_Object must_succeed)$/;"	v
display	xfont.c	/^  Display *display;$/;"	m	struct:xfont_info	file:	access:public
display	xftfont.c	/^  Display *display;$/;"	m	struct:xftfont_info	file:	access:public
display	xselect.c	/^  (Lisp_Object display, Lisp_Object dest, Lisp_Object from,$/;"	v
display	xselect.c	/^  Display *display;$/;"	m	struct:prop_location	file:	access:public
display	xterm.h	/^  Display *display;$/;"	m	struct:x_display_info	access:public
displayed_buffer	xdisp.c	/^static struct buffer *displayed_buffer;$/;"	v	typeref:struct:buffer	file:
displayed_window_lines	window.c	/^displayed_window_lines (struct window *w)$/;"	f	file:	signature:(struct window *w)
displays_text_p	dispextern.h	/^  bool_bf displays_text_p : 1;$/;"	m	struct:glyph_row	access:public
display_and_set_cursor	dispextern.h	/^extern void display_and_set_cursor (struct window *, bool, int, int, int, int);$/;"	p	signature:(struct window *, bool, int, int, int, int)
display_and_set_cursor	xdisp.c	/^display_and_set_cursor (struct window *w, bool on,$/;"	f	signature:(struct window *w, bool on, int hpos, int vpos, int x, int y)
display_arg	emacs.c	/^bool display_arg;$/;"	v
display_available	frame.c	/^display_available (void)$/;"	f	signature:(void)
display_available	frame.h	/^extern bool display_available (void);$/;"	p	signature:(void)
display_buffer	window.c	/^display_buffer (Lisp_Object buffer, Lisp_Object not_this_window_p, Lisp_Object override_frame)$/;"	f	file:	signature:(Lisp_Object buffer, Lisp_Object not_this_window_p, Lisp_Object override_frame)
display_completed	dispnew.c	/^bool display_completed;$/;"	v
display_count_	buffer.h	/^  Lisp_Object display_count_;$/;"	m	struct:buffer	access:public
display_count_lines	xdisp.c	/^display_count_lines (ptrdiff_t start_byte,$/;"	f	file:	signature:(ptrdiff_t start_byte, ptrdiff_t limit_byte, ptrdiff_t count, ptrdiff_t *byte_pos_ptr)
display_count_lines	xdisp.c	/^static ptrdiff_t display_count_lines (ptrdiff_t, ptrdiff_t, ptrdiff_t,$/;"	p	file:	signature:(ptrdiff_t, ptrdiff_t, ptrdiff_t, ptrdiff_t *)
display_count_lines_logically	xdisp.c	/^display_count_lines_logically (ptrdiff_t start_byte, ptrdiff_t limit_byte,$/;"	f	file:	signature:(ptrdiff_t start_byte, ptrdiff_t limit_byte, ptrdiff_t count, ptrdiff_t *byte_pos_ptr)
display_count_lines_visually	xdisp.c	/^display_count_lines_visually (struct it *it)$/;"	f	file:	signature:(struct it *it)
display_echo_area	xdisp.c	/^display_echo_area (struct window *w)$/;"	f	file:	signature:(struct window *w)
display_echo_area_1	xdisp.c	/^display_echo_area_1 (ptrdiff_t a1, Lisp_Object a2)$/;"	f	file:	signature:(ptrdiff_t a1, Lisp_Object a2)
display_echo_area_1	xdisp.c	/^static bool display_echo_area_1 (ptrdiff_t, Lisp_Object);$/;"	p	file:
display_element_type	dispextern.h	/^enum display_element_type$/;"	g
display_ellipsis_p	dispextern.h	/^    bool_bf display_ellipsis_p : 1;$/;"	m	struct:it::iterator_stack_entry	access:public
display_error_modiff	buffer.h	/^  EMACS_INT display_error_modiff;$/;"	m	struct:buffer	access:public
display_header	unexhp9k800.c	/^display_header (struct header *hdr, struct som_exec_auxhdr *auxhdr)$/;"	f	file:	signature:(struct header *hdr, struct som_exec_auxhdr *auxhdr)
display_hourglass_p	globals.h	935;"	d
Display_Info	dispextern.h	/^typedef struct ns_display_info Display_Info;$/;"	t	typeref:struct:ns_display_info
Display_Info	dispextern.h	/^typedef struct w32_display_info Display_Info;$/;"	t	typeref:struct:w32_display_info
Display_Info	dispextern.h	/^typedef struct x_display_info Display_Info;$/;"	t	typeref:struct:x_display_info
display_info	nsterm.h	/^  struct ns_display_info *display_info;$/;"	m	struct:ns_output	typeref:struct:ns_output::ns_display_info	access:public
display_info	termchar.h	/^  struct tty_display_info *display_info;$/;"	m	struct:tty_output	typeref:struct:tty_output::tty_display_info	access:public
display_info	termhooks.h	/^  union display_info$/;"	u	struct:terminal	access:public
display_info	termhooks.h	/^  } display_info;$/;"	m	struct:terminal	typeref:union:terminal::display_info	access:public
display_info	xterm.h	/^  struct x_display_info *display_info;$/;"	m	struct:x_output	typeref:struct:x_output::x_display_info	access:public
display_last_displayed_message_p	xdisp.c	/^static bool display_last_displayed_message_p;$/;"	v	file:
display_line	xdisp.c	/^display_line (struct it *it, int cursor_vpos)$/;"	f	file:	signature:(struct it *it, int cursor_vpos)
display_line	xdisp.c	/^static bool display_line (struct it *, int);$/;"	p	file:	signature:(struct it *, int)
display_line_numbers_widen	globals.h	937;"	d
display_malloc_warning	alloc.c	/^display_malloc_warning (void)$/;"	f	signature:(void)
display_malloc_warning	lisp.h	/^extern void display_malloc_warning (void);$/;"	p	signature:(void)
display_menu_bar	xdisp.c	/^display_menu_bar (struct window *w)$/;"	f	file:	signature:(struct window *w)
display_menu_bar	xdisp.c	/^static void display_menu_bar (struct window *);$/;"	p	file:	signature:(struct window *)
display_mode_element	xdisp.c	/^display_mode_element (struct it *it, int depth, int field_width, int precision,$/;"	f	file:	signature:(struct it *it, int depth, int field_width, int precision, Lisp_Object elt, Lisp_Object props, bool risky)
display_mode_element	xdisp.c	/^static int display_mode_element (struct it *, int, int, int, Lisp_Object,$/;"	p	file:	signature:(struct it *, int, int, int, Lisp_Object, Lisp_Object, bool)
display_mode_line	xdisp.c	/^display_mode_line (struct window *w, enum face_id face_id, Lisp_Object format)$/;"	f	file:	signature:(struct window *w, enum face_id face_id, Lisp_Object format)
display_mode_line	xdisp.c	/^static int display_mode_line (struct window *, enum face_id, Lisp_Object);$/;"	p	file:	signature:(struct window *, enum face_id, Lisp_Object)
display_mode_lines	xdisp.c	/^display_mode_lines (struct window *w)$/;"	f	file:	signature:(struct window *w)
display_mode_lines	xdisp.c	/^static int display_mode_lines (struct window *);$/;"	p	file:	signature:(struct window *)
display_pos	dispextern.h	/^struct display_pos$/;"	s
display_pos::dpvec_index	dispextern.h	/^  int dpvec_index;$/;"	m	struct:display_pos	access:public
display_pos::overlay_string_index	dispextern.h	/^  ptrdiff_t overlay_string_index;$/;"	m	struct:display_pos	access:public
display_pos::pos	dispextern.h	/^  struct text_pos pos;$/;"	m	struct:display_pos	typeref:struct:display_pos::text_pos	access:public
display_pos::string_pos	dispextern.h	/^  struct text_pos string_pos;$/;"	m	struct:display_pos	typeref:struct:display_pos::text_pos	access:public
display_prop_end	xdisp.c	/^display_prop_end (struct it *it, Lisp_Object object, struct text_pos start_pos)$/;"	f	file:	signature:(struct it *it, Lisp_Object object, struct text_pos start_pos)
DISPLAY_PROP_IDX	dispextern.h	/^  DISPLAY_PROP_IDX,$/;"	e	enum:prop_idx
display_prop_intangible_p	dispextern.h	/^bool display_prop_intangible_p (Lisp_Object, Lisp_Object, ptrdiff_t, ptrdiff_t);$/;"	p	signature:(Lisp_Object, Lisp_Object, ptrdiff_t, ptrdiff_t)
display_prop_intangible_p	xdisp.c	/^display_prop_intangible_p (Lisp_Object prop, Lisp_Object overlay,$/;"	f	signature:(Lisp_Object prop, Lisp_Object overlay, ptrdiff_t charpos, ptrdiff_t bytepos)
display_prop_string_p	xdisp.c	/^display_prop_string_p (Lisp_Object prop, Lisp_Object string)$/;"	f	file:	signature:(Lisp_Object prop, Lisp_Object string)
display_raw_bytes_as_hex	globals.h	939;"	d
display_string	xdisp.c	/^display_string (const char *string, Lisp_Object lisp_string, Lisp_Object face_string,$/;"	f	file:	signature:(const char *string, Lisp_Object lisp_string, Lisp_Object face_string, ptrdiff_t face_string_pos, ptrdiff_t start, struct it *it, int field_width, int precision, int max_x, int multibyte)
display_string	xdisp.c	/^static int display_string (const char *, Lisp_Object, Lisp_Object,$/;"	p	file:	signature:(const char *, Lisp_Object, Lisp_Object, ptrdiff_t, ptrdiff_t, struct it *, int, int, int, int)
display_table	window.c	/^  Lisp_Object display_table;$/;"	m	struct:saved_window	file:	access:public
display_table	window.h	/^    Lisp_Object display_table;$/;"	m	struct:window	access:public
display_table_	buffer.h	/^  Lisp_Object display_table_;$/;"	m	struct:buffer	access:public
display_time_	buffer.h	/^  Lisp_Object display_time_;$/;"	m	struct:buffer	access:public
display_tool_bar_line	xdisp.c	/^display_tool_bar_line (struct it *it, int height)$/;"	f	file:	signature:(struct it *it, int height)
display_tty_menu_item	dispextern.h	/^extern void display_tty_menu_item (const char *, int, int, int, int, bool);$/;"	p	signature:(const char *, int, int, int, int, bool)
display_tty_menu_item	xdisp.c	/^display_tty_menu_item (const char *item_text, int width, int face_id,$/;"	f	signature:(const char *item_text, int width, int face_id, int x, int y, bool submenu)
display_x_get_resource	frame.c	/^display_x_get_resource (Display_Info *dpyinfo, Lisp_Object attribute,$/;"	f	signature:(Display_Info *dpyinfo, Lisp_Object attribute, Lisp_Object class, Lisp_Object component, Lisp_Object subclass)
display_x_get_resource	frame.h	/^extern Lisp_Object display_x_get_resource (Display_Info *,$/;"	p	signature:(Display_Info *, Lisp_Object attribute, Lisp_Object class, Lisp_Object component, Lisp_Object subclass)
disptab_matches_widthtab	indent.c	/^disptab_matches_widthtab (struct Lisp_Char_Table *disptab, struct Lisp_Vector *widthtab)$/;"	f	signature:(struct Lisp_Char_Table *disptab, struct Lisp_Vector *widthtab)
disptab_matches_widthtab	indent.h	/^bool disptab_matches_widthtab (struct Lisp_Char_Table *disptab,$/;"	p	signature:(struct Lisp_Char_Table *disptab, struct Lisp_Vector *widthtab)
DISP_BORDER_GLYPH	disptab.h	37;"	d
disp_char_vector	disptab.h	/^extern Lisp_Object disp_char_vector (struct Lisp_Char_Table *, int);$/;"	p	signature:(struct Lisp_Char_Table *, int)
DISP_CHAR_VECTOR	disptab.h	41;"	d
disp_char_vector	xdisp.c	/^disp_char_vector (struct Lisp_Char_Table *dp, int c)$/;"	f	signature:(struct Lisp_Char_Table *dp, int c)
DISP_CONTINUE_GLYPH	disptab.h	33;"	d
DISP_CTRL_GLYPH	disptab.h	35;"	d
DISP_ESCAPE_GLYPH	disptab.h	34;"	d
DISP_INFINITY	xdisp.c	328;"	d	file:
DISP_INVIS_VECTOR	disptab.h	36;"	d
disp_pos	dispextern.h	/^  ptrdiff_t disp_pos;		\/* position of display string after ch *\/$/;"	m	struct:bidi_it	access:public
disp_prop	dispextern.h	/^  int disp_prop;		\/* if non-zero, there really is a$/;"	m	struct:bidi_it	access:public
DISP_TABLE_EXTRA_SLOTS	disptab.h	31;"	d
DISP_TABLE_P	disptab.h	26;"	d
DISP_TRUNC_GLYPH	disptab.h	32;"	d
dissociate_if_controlling_tty	term.c	/^dissociate_if_controlling_tty (int fd)$/;"	f	file:	signature:(int fd)
dissociate_if_controlling_tty	term.c	/^static void dissociate_if_controlling_tty (int fd);$/;"	p	file:	signature:(int fd)
dlfunc	dynlib.c	320;"	d	file:
dns_request	process.h	/^    struct gaicb *dns_request;$/;"	m	struct:Lisp_Process	typeref:struct:Lisp_Process::gaicb	access:public
doc	lisp.h	/^    EMACS_INT doc;$/;"	m	struct:Lisp_Subr	access:public
docstring	category.c	/^  (Lisp_Object category, Lisp_Object docstring, Lisp_Object table)$/;"	v
docstring	eval.c	/^  (Lisp_Object function, Lisp_Object file, Lisp_Object docstring, Lisp_Object interactive, Lisp_Object type)$/;"	v
document	w32fns.c	/^  (Lisp_Object operation, Lisp_Object document, Lisp_Object parameters, Lisp_Object show_flag)$/;"	v
documentation	lisp.h	/^  Lisp_Object documentation;$/;"	m	struct:Lisp_Module_Function	access:public
doing_interact	xsmfns.c	/^static bool doing_interact;$/;"	v	file:
done_face	font.h	/^  void (*done_face) (struct frame *f, struct face *face);$/;"	m	struct:font_driver	access:public
dont_downcase_last	keyboard.c	/^  (Lisp_Object prompt, Lisp_Object continue_echo, Lisp_Object dont_downcase_last, Lisp_Object can_return_switch_frame, Lisp_Object cmd_loop)$/;"	v
doomed_finalizers	alloc.c	/^static struct Lisp_Finalizer doomed_finalizers;$/;"	v	typeref:struct:Lisp_Finalizer	file:
doprnt	doprnt.c	/^doprnt (char *buffer, ptrdiff_t bufsize, const char *format,$/;"	f	signature:(char *buffer, ptrdiff_t bufsize, const char *format, const char *format_end, va_list ap)
doprnt	lisp.h	/^extern ptrdiff_t doprnt (char *, ptrdiff_t, const char *, const char *,$/;"	p	signature:(char *, ptrdiff_t, const char *, const char *, va_list)
dostounix_filename	w32.c	/^dostounix_filename (register char *p)$/;"	f	signature:(register char *p)
dostounix_filename	w32.h	/^extern void dostounix_filename (register char *);$/;"	p	signature:(register char *)
dot	filelock.c	/^  char *at, *dot, *colon;$/;"	m	struct:__anon52	file:	access:public
DOTEXE	unexcw.c	30;"	d	file:
double_click_count	keyboard.c	/^static int double_click_count;$/;"	v	file:
double_click_fuzz	globals.h	823;"	d
double_modifier	termhooks.h	/^  double_modifier= 16,          \/* See drag_modifier.  *\/$/;"	e	enum:__anon72
Down	cm.h	107;"	d
downcase	buffer.h	/^downcase (int c)$/;"	f	signature:(int c)
downcase_table_	buffer.h	/^  Lisp_Object downcase_table_;$/;"	m	struct:buffer	access:public
DownCost	cm.h	130;"	d
down_arrow_bits	fringe.c	/^static unsigned short down_arrow_bits[] = {$/;"	v	file:
down_modifier	termhooks.h	/^  down_modifier =   2,		\/* Only used on mouse buttons.  *\/$/;"	e	enum:__anon72
do_auto_save_eh	fileio.c	/^do_auto_save_eh (Lisp_Object ignore)$/;"	f	file:	signature:(Lisp_Object ignore)
do_auto_save_make_dir	fileio.c	/^do_auto_save_make_dir (Lisp_Object dir)$/;"	f	file:	signature:(Lisp_Object dir)
do_auto_save_unwind	fileio.c	/^do_auto_save_unwind (void *arg)$/;"	f	file:	signature:(void *arg)
do_casify_multibyte_region	casefiddle.c	/^do_casify_multibyte_region (struct casing_context *ctx,$/;"	f	file:	signature:(struct casing_context *ctx, ptrdiff_t *startp, ptrdiff_t *endp)
do_casify_multibyte_string	casefiddle.c	/^do_casify_multibyte_string (struct casing_context *ctx, Lisp_Object obj)$/;"	f	file:	signature:(struct casing_context *ctx, Lisp_Object obj)
do_casify_natnum	casefiddle.c	/^do_casify_natnum (struct casing_context *ctx, Lisp_Object obj)$/;"	f	file:	signature:(struct casing_context *ctx, Lisp_Object obj)
do_casify_unibyte_region	casefiddle.c	/^do_casify_unibyte_region (struct casing_context *ctx,$/;"	f	file:	signature:(struct casing_context *ctx, ptrdiff_t *startp, ptrdiff_t *endp)
do_casify_unibyte_string	casefiddle.c	/^do_casify_unibyte_string (struct casing_context *ctx, Lisp_Object obj)$/;"	f	file:	signature:(struct casing_context *ctx, Lisp_Object obj)
do_debug_on_call	eval.c	/^do_debug_on_call (Lisp_Object code, ptrdiff_t count)$/;"	f	file:	signature:(Lisp_Object code, ptrdiff_t count)
do_direct_scrolling	scroll.c	/^do_direct_scrolling (struct frame *frame, struct glyph_matrix *current_matrix,$/;"	f	file:	signature:(struct frame *frame, struct glyph_matrix *current_matrix, struct matrix_elt *cost_matrix, int window_size, int unchanged_at_top)
do_direct_scrolling	scroll.c	/^static void do_direct_scrolling (struct frame *,$/;"	p	file:	signature:(struct frame *, struct glyph_matrix *, struct matrix_elt *, int, int)
do_ewmh_fullscreen	xterm.c	/^do_ewmh_fullscreen (struct frame *f)$/;"	f	file:	signature:(struct frame *f)
do_line_insertion_deletion_costs	dispextern.h	/^extern void do_line_insertion_deletion_costs (struct frame *, const char *,$/;"	p	signature:(struct frame *, const char *, const char *, const char *, const char *, const char *, const char *, int)
do_line_insertion_deletion_costs	scroll.c	/^do_line_insertion_deletion_costs (struct frame *frame,$/;"	f	signature:(struct frame *frame, const char *ins_line_string, const char *multi_ins_string, const char *del_line_string, const char *multi_del_string, const char *setup_string, const char *cleanup_string, int coefficient)
do_mouse_event	w32inevt.c	/^do_mouse_event (MOUSE_EVENT_RECORD *event,$/;"	f	file:	signature:(MOUSE_EVENT_RECORD *event, struct input_event *emacs_ev)
do_mouse_tracking	globals.h	789;"	d
do_nothing	eval.c	/^do_nothing (void)$/;"	f	file:	signature:(void)
do_one_unbind	eval.c	/^do_one_unbind (union specbinding *this_binding, bool unwinding,$/;"	f	file:	signature:(union specbinding *this_binding, bool unwinding, enum Set_Internal_Bind bindflag)
do_pending_atimers	atimer.c	/^do_pending_atimers (void)$/;"	f	signature:(void)
do_pending_atimers	atimer.h	/^void do_pending_atimers (void);$/;"	p	signature:(void)
do_pending_window_change	dispextern.h	/^void do_pending_window_change (bool);$/;"	p	signature:(bool)
do_pending_window_change	dispnew.c	/^do_pending_window_change (bool safe)$/;"	f	signature:(bool safe)
do_play_sound	sound.c	/^do_play_sound (const char *psz_file, unsigned long ui_volume)$/;"	f	file:	signature:(const char *psz_file, unsigned long ui_volume)
do_play_sound	sound.c	/^static int do_play_sound (const char *, unsigned long);$/;"	p	file:	signature:(const char *, unsigned long)
do_scrolling	scroll.c	/^do_scrolling (struct frame *frame, struct glyph_matrix *current_matrix,$/;"	f	file:	signature:(struct frame *frame, struct glyph_matrix *current_matrix, struct matrix_elt *matrix, int window_size, int unchanged_at_top)
do_scrolling	scroll.c	/^static void do_scrolling (struct frame *,$/;"	p	file:	signature:(struct frame *, struct glyph_matrix *, struct matrix_elt *, int, int)
do_specbind	eval.c	/^do_specbind (struct Lisp_Symbol *sym, union specbinding *bind,$/;"	f	file:	signature:(struct Lisp_Symbol *sym, union specbinding *bind, Lisp_Object value, enum Set_Internal_Bind bindflag)
do_switch_frame	frame.c	/^do_switch_frame (Lisp_Object frame, int track, int for_deletion, Lisp_Object norecord)$/;"	f	signature:(Lisp_Object frame, int track, int for_deletion, Lisp_Object norecord)
do_switch_frame	lisp.h	/^extern Lisp_Object do_switch_frame (Lisp_Object, int, int, Lisp_Object);$/;"	p	signature:(Lisp_Object, int, int, Lisp_Object)
do_symval_forwarding	data.c	/^do_symval_forwarding (register union Lisp_Fwd *valcontents)$/;"	f	signature:(register union Lisp_Fwd *valcontents)
do_symval_forwarding	lisp.h	/^extern Lisp_Object do_symval_forwarding (union Lisp_Fwd *);$/;"	p	signature:(union Lisp_Fwd *)
do_unwind_create_frame	w32fns.c	/^do_unwind_create_frame (Lisp_Object frame)$/;"	f	file:	signature:(Lisp_Object frame)
do_unwind_create_frame	xfns.c	/^do_unwind_create_frame (Lisp_Object frame)$/;"	f	file:	signature:(Lisp_Object frame)
do_unwind_mutex_lock	thread.c	/^do_unwind_mutex_lock (void)$/;"	f	file:	signature:(void)
do_yes_or_no_p	fns.c	/^do_yes_or_no_p (Lisp_Object prompt)$/;"	f	signature:(Lisp_Object prompt)
do_yes_or_no_p	lisp.h	/^extern Lisp_Object do_yes_or_no_p (Lisp_Object);$/;"	p	signature:(Lisp_Object)
dp	dispextern.h	/^  struct Lisp_Char_Table *dp;$/;"	m	struct:it	typeref:struct:it::Lisp_Char_Table	access:public
dpend	dispextern.h	/^  Lisp_Object *dpvec, *dpend;$/;"	m	struct:it	access:public
dpi	xsettings.c	/^  double dpi;$/;"	m	struct:xsettings	file:	access:public
dpvec	dispextern.h	/^  Lisp_Object *dpvec, *dpend;$/;"	m	struct:it	access:public
dpvec_char_len	dispextern.h	/^  int dpvec_char_len;$/;"	m	struct:it	access:public
dpvec_face_id	dispextern.h	/^  int dpvec_face_id;$/;"	m	struct:it	access:public
dpvec_index	dispextern.h	/^  int dpvec_index;$/;"	m	struct:display_pos	access:public
dpy	xterm.c	/^  Display *dpy;$/;"	m	struct:x_error_message_stack	file:	access:public
dpyinfo	xterm.h	/^  struct x_display_info *dpyinfo;$/;"	m	struct:selection_input_event	typeref:struct:selection_input_event::x_display_info	access:public
dpyinfo	xterm.h	/^  struct x_display_info *dpyinfo;$/;"	m	struct:xim_inst_t	typeref:struct:xim_inst_t::x_display_info	access:public
dpyinfo_refcount	w32fns.c	/^static int dpyinfo_refcount;$/;"	v	file:
dpyinfo_refcount	xfns.c	/^static int dpyinfo_refcount;$/;"	v	file:
dpyinfo_valid	xsettings.c	/^dpyinfo_valid (struct x_display_info *dpyinfo)$/;"	f	file:	signature:(struct x_display_info *dpyinfo)
dragging	w32term.h	/^  int dragging;$/;"	m	struct:scroll_bar	access:public
dragging	xterm.h	/^  int dragging;$/;"	m	struct:scroll_bar	access:public
drag_modifier	termhooks.h	/^  drag_modifier =   4,		\/* This is never used in the event$/;"	e	enum:__anon72
DRAG_N_DROP_EVENT	termhooks.h	/^  DRAG_N_DROP_EVENT,		\/* A drag-n-drop event is generated when$/;"	e	enum:event_kind
drag_n_drop_syms	keyboard.c	/^static Lisp_Object drag_n_drop_syms;$/;"	v	file:
drain_message_queue	w32term.h	/^extern int drain_message_queue (void);$/;"	p	signature:(void)
drain_message_queue	w32xfns.c	/^drain_message_queue (void)$/;"	f	signature:(void)
draw	font.h	/^  int (*draw) (struct glyph_string *s, int from, int to,$/;"	m	struct:font_driver	access:public
DrawRectangle	image.c	8269;"	d	file:
DrawText	image.c	7500;"	d	file:
DrawText	image.c	7503;"	d	file:
DrawText	image.c	7508;"	d	file:
DRAW_CURSOR	dispextern.h	/^  DRAW_CURSOR,$/;"	e	enum:draw_glyphs_face
draw_desc	xterm.h	/^  Drawable draw_desc;$/;"	m	struct:x_output	access:public
draw_fringe_bitmap	dispextern.h	/^  void (*draw_fringe_bitmap) (struct window *w, struct glyph_row *row,$/;"	m	struct:redisplay_interface	access:public
draw_fringe_bitmap	dispextern.h	/^void draw_fringe_bitmap (struct window *, struct glyph_row *, int);$/;"	p	signature:(struct window *, struct glyph_row *, int)
draw_fringe_bitmap	fringe.c	/^draw_fringe_bitmap (struct window *w, struct glyph_row *row, int left_p)$/;"	f	signature:(struct window *w, struct glyph_row *row, int left_p)
draw_fringe_bitmap_1	fringe.c	/^draw_fringe_bitmap_1 (struct window *w, struct glyph_row *row, int left_p, int overlay, int which)$/;"	f	file:	signature:(struct window *w, struct glyph_row *row, int left_p, int overlay, int which)
draw_fringe_bitmap_params	dispextern.h	/^struct draw_fringe_bitmap_params$/;"	s
draw_fringe_bitmap_params::bits	dispextern.h	/^  unsigned short *bits;$/;"	m	struct:draw_fringe_bitmap_params	access:public
draw_fringe_bitmap_params::bx	dispextern.h	/^  int bx, nx, by, ny;$/;"	m	struct:draw_fringe_bitmap_params	access:public
draw_fringe_bitmap_params::by	dispextern.h	/^  int bx, nx, by, ny;$/;"	m	struct:draw_fringe_bitmap_params	access:public
draw_fringe_bitmap_params::cursor_p	dispextern.h	/^  bool_bf cursor_p : 1;$/;"	m	struct:draw_fringe_bitmap_params	access:public
draw_fringe_bitmap_params::dh	dispextern.h	/^  int wd, h, dh;$/;"	m	struct:draw_fringe_bitmap_params	access:public
draw_fringe_bitmap_params::face	dispextern.h	/^  struct face *face;$/;"	m	struct:draw_fringe_bitmap_params	typeref:struct:draw_fringe_bitmap_params::face	access:public
draw_fringe_bitmap_params::h	dispextern.h	/^  int wd, h, dh;$/;"	m	struct:draw_fringe_bitmap_params	access:public
draw_fringe_bitmap_params::nx	dispextern.h	/^  int bx, nx, by, ny;$/;"	m	struct:draw_fringe_bitmap_params	access:public
draw_fringe_bitmap_params::ny	dispextern.h	/^  int bx, nx, by, ny;$/;"	m	struct:draw_fringe_bitmap_params	access:public
draw_fringe_bitmap_params::overlay_p	dispextern.h	/^  bool_bf overlay_p : 1;$/;"	m	struct:draw_fringe_bitmap_params	access:public
draw_fringe_bitmap_params::wd	dispextern.h	/^  int wd, h, dh;$/;"	m	struct:draw_fringe_bitmap_params	access:public
draw_fringe_bitmap_params::which	dispextern.h	/^  int which;  \/* enum fringe_bitmap_type *\/$/;"	m	struct:draw_fringe_bitmap_params	access:public
draw_fringe_bitmap_params::x	dispextern.h	/^  int x, y;$/;"	m	struct:draw_fringe_bitmap_params	access:public
draw_fringe_bitmap_params::y	dispextern.h	/^  int x, y;$/;"	m	struct:draw_fringe_bitmap_params	access:public
draw_glyphs	xdisp.c	/^draw_glyphs (struct window *w, int x, struct glyph_row *row,$/;"	f	file:	signature:(struct window *w, int x, struct glyph_row *row, enum glyph_row_area area, ptrdiff_t start, ptrdiff_t end, enum draw_glyphs_face hl, int overlaps)
draw_glyphs_face	dispextern.h	/^enum draw_glyphs_face$/;"	g
draw_glyph_string	dispextern.h	/^  void (*draw_glyph_string) (struct glyph_string *s);$/;"	m	struct:redisplay_interface	access:public
DRAW_IMAGE_RAISED	dispextern.h	/^  DRAW_IMAGE_RAISED,$/;"	e	enum:draw_glyphs_face
DRAW_IMAGE_SUNKEN	dispextern.h	/^  DRAW_IMAGE_SUNKEN$/;"	e	enum:draw_glyphs_face
DRAW_INVERSE_VIDEO	dispextern.h	/^  DRAW_INVERSE_VIDEO,$/;"	e	enum:draw_glyphs_face
DRAW_MOUSE_FACE	dispextern.h	/^  DRAW_MOUSE_FACE,$/;"	e	enum:draw_glyphs_face
DRAW_NORMAL_TEXT	dispextern.h	/^  DRAW_NORMAL_TEXT,$/;"	e	enum:draw_glyphs_face
draw_page	gtkutil.c	/^draw_page (GtkPrintOperation *operation, GtkPrintContext *context,$/;"	f	file:	signature:(GtkPrintOperation *operation, GtkPrintContext *context, gint page_nr, gpointer user_data)
draw_phys_cursor_glyph	dispextern.h	/^extern void draw_phys_cursor_glyph (struct window *,$/;"	p	signature:(struct window *, struct glyph_row *, enum draw_glyphs_face)
draw_phys_cursor_glyph	xdisp.c	/^draw_phys_cursor_glyph (struct window *w, struct glyph_row *row,$/;"	f	signature:(struct window *w, struct glyph_row *row, enum draw_glyphs_face hl)
draw_row_fringe_bitmaps	dispextern.h	/^void draw_row_fringe_bitmaps (struct window *, struct glyph_row *);$/;"	p	signature:(struct window *, struct glyph_row *)
draw_row_fringe_bitmaps	fringe.c	/^draw_row_fringe_bitmaps (struct window *w, struct glyph_row *row)$/;"	f	signature:(struct window *w, struct glyph_row *row)
draw_row_with_mouse_face	xdisp.c	/^draw_row_with_mouse_face (struct window *w, int start_x, struct glyph_row *row,$/;"	f	file:	signature:(struct window *w, int start_x, struct glyph_row *row, int start_hpos, int end_hpos, enum draw_glyphs_face draw)
draw_vertical_window_border	dispextern.h	/^  void (*draw_vertical_window_border) (struct window *w,$/;"	m	struct:redisplay_interface	access:public
draw_window_cursor	dispextern.h	/^  void (*draw_window_cursor) (struct window *w,$/;"	m	struct:redisplay_interface	access:public
draw_window_divider	dispextern.h	/^  void (*draw_window_divider) (struct window *w,$/;"	m	struct:redisplay_interface	access:public
draw_window_fringes	dispextern.h	/^bool draw_window_fringes (struct window *, bool);$/;"	p	signature:(struct window *, bool)
draw_window_fringes	fringe.c	/^draw_window_fringes (struct window *w, bool no_fringe_p)$/;"	f	signature:(struct window *w, bool no_fringe_p)
dribble	keyboard.c	/^static FILE *dribble;$/;"	v	file:
driver	font.h	/^  struct font_driver const *driver;$/;"	m	struct:font	access:public
driver	font.h	/^  struct font_driver const *driver;$/;"	m	struct:font_driver_list	access:public
DRIVE_INDEX	w32.c	3084;"	d	file:
DRIVE_LETTER	fileio.c	85;"	d	file:
drop_overlay	buffer.c	/^drop_overlay (struct buffer *b, struct Lisp_Overlay *ov)$/;"	f	file:	signature:(struct buffer *b, struct Lisp_Overlay *ov)
drop_xrender_surfaces	font.h	/^  void (*drop_xrender_surfaces) (struct frame *f);$/;"	m	struct:font_driver	access:public
dst_bytes	coding.h	/^  ptrdiff_t dst_pos, dst_pos_byte, dst_bytes;$/;"	m	struct:coding_system	access:public
dst_multibyte	coding.h	/^  bool_bf dst_multibyte : 1;$/;"	m	struct:coding_system	access:public
dst_object	coding.h	/^  Lisp_Object dst_object;$/;"	m	struct:coding_system	access:public
dst_pos	coding.h	/^  ptrdiff_t dst_pos, dst_pos_byte, dst_bytes;$/;"	m	struct:coding_system	access:public
dst_pos_byte	coding.h	/^  ptrdiff_t dst_pos, dst_pos_byte, dst_bytes;$/;"	m	struct:coding_system	access:public
DST_TO_OFFSET	unexw32.c	522;"	d	file:
dummy	widgetprv.h	/^    int dummy;$/;"	m	struct:__anon99	access:public
DUMMYUNIONNAME	w32.c	/^    } DUMMYUNIONNAME;$/;"	m	struct:_REPARSE_DATA_BUFFER	typeref:union:_REPARSE_DATA_BUFFER::__anon66	file:	access:public
DUMMYUNIONNAME	w32fns.c	/^  } DUMMYUNIONNAME;$/;"	m	struct:MY_NOTIFYICONDATAW	typeref:union:MY_NOTIFYICONDATAW::__anon75	file:	access:public
dummy_handler	process.c	/^static void dummy_handler (int sig) {}$/;"	f	file:	signature:(int sig)
dummy_main_reference	firstfile.c	/^int (*dummy_main_reference) (int, char **) = main;$/;"	v
DUMPED	gmalloc.c	79;"	d	file:
dumped_data	w32heap.c	/^static unsigned char dumped_data[DUMPED_HEAP_SIZE];$/;"	v	file:
dumped_data_commit	w32heap.c	/^dumped_data_commit (PVOID Base, PVOID *CommitAddress, PSIZE_T CommitSize)$/;"	f	file:	signature:(PVOID Base, PVOID *CommitAddress, PSIZE_T CommitSize)
DUMPED_HEAP_SIZE	w32heap.c	119;"	d	file:
DUMPED_HEAP_SIZE	w32heap.c	121;"	d	file:
dump_bss_and_heap	unexw32.c	/^void dump_bss_and_heap (file_data *p_infile, file_data *p_outfile);$/;"	p	file:	signature:(file_data *p_infile, file_data *p_outfile)
dump_fontset	fontset.c	/^dump_fontset (Lisp_Object fontset)$/;"	f	signature:(Lisp_Object fontset)
dump_fontset	fontset.c	/^Lisp_Object dump_fontset (Lisp_Object) EXTERNALLY_VISIBLE;$/;"	p	file:
dump_glyph	xdisp.c	/^dump_glyph (struct glyph_row *row, struct glyph *glyph, int area)$/;"	f	signature:(struct glyph_row *row, struct glyph *glyph, int area)
dump_glyph_matrix	xdisp.c	/^dump_glyph_matrix (struct glyph_matrix *matrix, int glyphs)$/;"	f	signature:(struct glyph_matrix *matrix, int glyphs)
dump_glyph_row	xdisp.c	/^dump_glyph_row (struct glyph_row *row, int vpos, int glyphs)$/;"	f	signature:(struct glyph_row *row, int vpos, int glyphs)
dump_glyph_string	xdisp.c	/^dump_glyph_string (struct glyph_string *s)$/;"	f	signature:(struct glyph_string *s)
dump_it	unexmacosx.c	/^dump_it (void)$/;"	f	file:	signature:(void)
dump_realized_face	xfaces.c	/^dump_realized_face (struct face *face)$/;"	f	file:	signature:(struct face *face)
dup	w32.c	63;"	d	file:
dup2	w32.c	64;"	d	file:
duplicate	regex.c	/^  duplicate,$/;"	e	enum:__anon144	file:
dupstring	alloc.c	/^dupstring (char **ptr, char const *string)$/;"	f	signature:(char **ptr, char const *string)
dupstring	lisp.h	/^extern void dupstring (char **, char const *);$/;"	p	signature:(char **, char const *)
dwFlags	w32fns.c	/^    DWORD   dwFlags;$/;"	m	struct:MONITOR_INFO	file:	access:public
dwFlags	w32fns.c	/^    DWORD   dwFlags;$/;"	m	struct:MONITOR_INFO_EX	file:	access:public
dwFlags	w32term.h	/^  DWORD dwFlags;$/;"	m	struct:tagTRACKMOUSEEVENT	access:public
dwHoverTime	w32term.h	/^  DWORD dwHoverTime;$/;"	m	struct:tagTRACKMOUSEEVENT	access:public
dwInfoFlags	w32fns.c	/^  DWORD dwInfoFlags;$/;"	m	struct:MY_NOTIFYICONDATAW	file:	access:public
dwLength	w32.c	/^  DWORD dwLength;$/;"	m	struct:_MEMORY_STATUS_EX	file:	access:public
dwMainThreadId	w32term.c	/^DWORD dwMainThreadId = 0;$/;"	v
dwMemoryLoad	w32.c	/^  DWORD dwMemoryLoad;$/;"	m	struct:_MEMORY_STATUS_EX	file:	access:public
dwModifiers	w32term.h	/^    DWORD dwModifiers;$/;"	m	struct:W32Msg	access:public
dwState	w32fns.c	/^  DWORD dwState;$/;"	m	struct:MY_NOTIFYICONDATAW	file:	access:public
dwStateMask	w32fns.c	/^  DWORD dwStateMask;$/;"	m	struct:MY_NOTIFYICONDATAW	file:	access:public
dwStyle	w32term.h	/^  DWORD dwStyle;$/;"	m	struct:w32_output	access:public
dwWindowsThreadId	w32term.c	/^DWORD dwWindowsThreadId = 0;$/;"	v
dx	w32fns.c	/^  (Lisp_Object string, Lisp_Object frame, Lisp_Object parms, Lisp_Object timeout, Lisp_Object dx, Lisp_Object dy)$/;"	v
dx	xfns.c	/^  (Lisp_Object string, Lisp_Object frame, Lisp_Object parms, Lisp_Object timeout, Lisp_Object dx, Lisp_Object dy)$/;"	v
dynamic	fringe.c	/^  bool_bf dynamic : 1;$/;"	m	struct:fringe_bitmap	file:	access:public
dynlib_addr	dynlib.c	/^dynlib_addr (void *addr, const char **fname, const char **symname)$/;"	f	signature:(void *addr, const char **fname, const char **symname)
dynlib_addr	dynlib.c	/^dynlib_addr (void *ptr, const char **path, const char **sym)$/;"	f	signature:(void *ptr, const char **path, const char **sym)
dynlib_addr	dynlib.h	/^void dynlib_addr (void *ptr, const char **file, const char **sym);$/;"	p	signature:(void *ptr, const char **file, const char **sym)
dynlib_close	dynlib.c	/^dynlib_close (dynlib_handle_ptr h)$/;"	f	signature:(dynlib_handle_ptr h)
dynlib_close	dynlib.h	/^int dynlib_close (dynlib_handle_ptr h);$/;"	p	signature:(dynlib_handle_ptr h)
dynlib_error	dynlib.c	/^dynlib_error (void)$/;"	f	signature:(void)
dynlib_error	dynlib.h	/^const char *dynlib_error (void);$/;"	p	signature:(void)
dynlib_func	dynlib.c	/^dynlib_func (dynlib_handle_ptr h, const char *sym)$/;"	f	signature:(dynlib_handle_ptr h, const char *sym)
dynlib_func	dynlib.h	/^dynlib_function_ptr dynlib_func (dynlib_handle_ptr h, const char *sym);$/;"	p	signature:(dynlib_handle_ptr h, const char *sym)
dynlib_function_ptr	dynlib.h	/^typedef struct dynlib_function_ptr_nonce *(ATTRIBUTE_MAY_ALIAS *dynlib_function_ptr) (void);$/;"	t	typeref:struct:dynlib_function_ptr
DYNLIB_H	dynlib.h	21;"	d
dynlib_handle_ptr	dynlib.h	/^typedef void *dynlib_handle_ptr;$/;"	t
dynlib_last_err	dynlib.c	/^static DWORD dynlib_last_err;$/;"	v	file:
dynlib_open	dynlib.c	/^dynlib_open (const char *dll_fname)$/;"	f	signature:(const char *dll_fname)
dynlib_open	dynlib.c	/^dynlib_open (const char *path)$/;"	f	signature:(const char *path)
dynlib_open	dynlib.h	/^dynlib_handle_ptr dynlib_open (const char *path);$/;"	p	signature:(const char *path)
dynlib_reset_last_error	dynlib.c	/^dynlib_reset_last_error (void)$/;"	f	signature:(void)
dynlib_reset_last_error	dynlib.c	/^void dynlib_reset_last_error (void);$/;"	p	file:	signature:(void)
dynlib_reset_last_error	w32.c	/^extern void dynlib_reset_last_error (void);$/;"	p	file:	signature:(void)
dynlib_sym	dynlib.c	/^dynlib_sym (dynlib_handle_ptr h, const char *sym)$/;"	f	signature:(dynlib_handle_ptr h, const char *sym)
dynlib_sym	dynlib.h	/^ATTRIBUTE_MAY_ALIAS void *dynlib_sym (dynlib_handle_ptr h, const char *sym);$/;"	p	signature:(dynlib_handle_ptr h, const char *sym)
eabs	lisp.h	4435;"	d
eassert	lisp.h	179;"	d
eassert	lisp.h	187;"	d
eassume	lisp.h	180;"	d
eassume	lisp.h	191;"	d
EastGravity	nsgui.h	170;"	d
EastGravity	w32gui.h	88;"	d
echoing	keyboard.c	/^static bool echoing;$/;"	v	file:
echo_add_key	keyboard.c	/^echo_add_key (Lisp_Object c)$/;"	f	file:	signature:(Lisp_Object c)
echo_area_buffer	xdisp.c	/^Lisp_Object echo_area_buffer[2];$/;"	v
echo_area_display	xdisp.c	/^echo_area_display (bool update_frame_p)$/;"	f	file:	signature:(bool update_frame_p)
echo_area_display	xdisp.c	/^static void echo_area_display (bool);$/;"	p	file:
echo_area_window	xdisp.c	/^Lisp_Object echo_area_window;$/;"	v
echo_buffer	xdisp.c	/^static Lisp_Object echo_buffer[2];$/;"	v	file:
echo_dash	keyboard.c	/^echo_dash (void)$/;"	f	file:	signature:(void)
echo_kboard	keyboard.c	/^struct kboard *echo_kboard;$/;"	v	typeref:struct:kboard
echo_keystrokes_p	keyboard.c	/^echo_keystrokes_p (void)$/;"	f	file:	signature:(void)
echo_length	keyboard.c	/^echo_length (void)$/;"	f	file:	signature:(void)
echo_length	keyboard.c	/^static ptrdiff_t echo_length (void);$/;"	p	file:	signature:(void)
echo_message_buffer	keyboard.c	/^Lisp_Object echo_message_buffer;$/;"	v
echo_now	keyboard.c	/^echo_now (void)$/;"	f	file:	signature:(void)
echo_now	keyboard.c	/^static void echo_now (void);$/;"	p	file:	signature:(void)
echo_prompt_	keyboard.h	/^    Lisp_Object echo_prompt_;$/;"	m	struct:kboard	access:public
echo_string_	keyboard.h	/^    Lisp_Object echo_string_;$/;"	m	struct:kboard	access:public
echo_truncate	keyboard.c	/^echo_truncate (ptrdiff_t nchars)$/;"	f	file:	signature:(ptrdiff_t nchars)
echo_update	keyboard.c	/^echo_update (void)$/;"	f	file:	signature:(void)
edit_widget	xterm.h	/^  GtkWidget *edit_widget;$/;"	m	struct:x_output	access:public
edit_widget	xterm.h	/^  Widget edit_widget;$/;"	m	struct:x_output	access:public
efds	thread.c	/^  fd_set *efds;$/;"	m	struct:select_args	file:	access:public
egetenv	lisp.h	/^egetenv (const char *var)$/;"	f	signature:(const char *var)
egetenv_internal	callproc.c	/^egetenv_internal (const char *var, ptrdiff_t len)$/;"	f	signature:(const char *var, ptrdiff_t len)
egetenv_internal	lisp.h	/^extern char *egetenv_internal (const char *, ptrdiff_t);$/;"	p	signature:(const char *, ptrdiff_t)
ELEMENT	editfns.c	3106;"	d	file:
ElfBitsW	unexelf.c	166;"	d	file:
ElfExpandBitsW	unexelf.c	175;"	d	file:
ELFSIZE	unexelf.c	122;"	d	file:
ELFSIZE	unexelf.c	124;"	d	file:
ELFSIZE	unexelf.c	169;"	d	file:
ELFSIZE	unexelf.c	171;"	d	file:
ElfW	unexelf.c	176;"	d	file:
ellipsis_p	dispextern.h	/^  bool_bf ellipsis_p : 1;$/;"	m	struct:it	access:public
ELOOP	filelock.c	473;"	d	file:
elsz	bidi.c	/^enum { elsz = sizeof (struct bidi_it) };$/;"	e	enum:__anon93	file:
elt	fns.c	/^  (Lisp_Object elt, Lisp_Object seq)$/;"	v
EmacsCGFloat	nsterm.h	/^typedef CGFloat EmacsCGFloat;$/;"	t
EmacsCGFloat	nsterm.h	/^typedef float EmacsCGFloat;$/;"	t
EmacsFixed	emacsgtkfixed.c	/^typedef struct _EmacsFixed EmacsFixed;$/;"	t	typeref:struct:_EmacsFixed	file:
EmacsFixedClass	emacsgtkfixed.c	/^typedef struct _EmacsFixedClass EmacsFixedClass;$/;"	t	typeref:struct:_EmacsFixedClass	file:
EmacsFixedPrivate	emacsgtkfixed.h	/^typedef struct _EmacsFixedPrivate       EmacsFixedPrivate;$/;"	t	typeref:struct:_EmacsFixedPrivate
EmacsFrame	widget.h	/^typedef struct _EmacsFrameRec *EmacsFrame;$/;"	t	typeref:struct:_EmacsFrameRec
emacsFrameClass	widget.c	/^emacsFrameClass (void)$/;"	f	signature:(void)
emacsFrameClass	widget.h	/^extern WidgetClass emacsFrameClass (void);$/;"	p	signature:(void)
EmacsFrameClass	widget.h	/^typedef struct _EmacsFrameClassRec *EmacsFrameClass;$/;"	t	typeref:struct:_EmacsFrameClassRec
EmacsFrameClassPart	widgetprv.h	/^} EmacsFrameClassPart;$/;"	t	typeref:struct:__anon99
emacsFrameClassRec	widget.c	/^static EmacsFrameClassRec emacsFrameClassRec = {$/;"	v	file:
EmacsFrameClassRec	widgetprv.h	/^} EmacsFrameClassRec;$/;"	t	typeref:struct:_EmacsFrameClassRec
EmacsFrameDestroy	widget.c	/^EmacsFrameDestroy (Widget widget)$/;"	f	file:	signature:(Widget widget)
EmacsFrameDestroy	widget.c	/^static void EmacsFrameDestroy (Widget widget);$/;"	p	file:	signature:(Widget widget)
EmacsFrameInitialize	widget.c	/^EmacsFrameInitialize (Widget request, Widget new, ArgList dum1, Cardinal *dum2)$/;"	f	file:	signature:(Widget request, Widget new, ArgList dum1, Cardinal *dum2)
EmacsFrameInitialize	widget.c	/^static void EmacsFrameInitialize (Widget request, Widget new, ArgList dum1, Cardinal *dum2);$/;"	p	file:	signature:(Widget request, Widget new, ArgList dum1, Cardinal *dum2)
EmacsFramePart	widgetprv.h	/^} EmacsFramePart;$/;"	t	typeref:struct:__anon98
EmacsFrameQueryGeometry	widget.c	/^EmacsFrameQueryGeometry (Widget widget, XtWidgetGeometry *request, XtWidgetGeometry *result)$/;"	f	file:	signature:(Widget widget, XtWidgetGeometry *request, XtWidgetGeometry *result)
EmacsFrameQueryGeometry	widget.c	/^static XtGeometryResult EmacsFrameQueryGeometry (Widget widget, XtWidgetGeometry *request, XtWidgetGeometry *result);$/;"	p	file:	signature:(Widget widget, XtWidgetGeometry *request, XtWidgetGeometry *result)
EmacsFrameRealize	widget.c	/^EmacsFrameRealize (Widget widget, XtValueMask *mask, XSetWindowAttributes *attrs)$/;"	f	file:	signature:(Widget widget, XtValueMask *mask, XSetWindowAttributes *attrs)
EmacsFrameRealize	widget.c	/^static void EmacsFrameRealize (Widget widget, XtValueMask *mask, XSetWindowAttributes *attrs);$/;"	p	file:	signature:(Widget widget, XtValueMask *mask, XSetWindowAttributes *attrs)
EmacsFrameRec	widgetprv.h	/^} EmacsFrameRec;$/;"	t	typeref:struct:_EmacsFrameRec
EmacsFrameResize	widget.c	/^EmacsFrameResize (Widget widget)$/;"	f	file:	signature:(Widget widget)
EmacsFrameResize	widget.c	/^static void EmacsFrameResize (Widget widget);$/;"	p	file:	signature:(Widget widget)
EmacsFrameSetCharSize	widget.c	/^EmacsFrameSetCharSize (Widget widget, int columns, int rows)$/;"	f	signature:(Widget widget, int columns, int rows)
EmacsFrameSetCharSize	widget.h	/^void EmacsFrameSetCharSize (Widget, int, int);$/;"	p	signature:(Widget, int, int)
EMACSGTKFIXED_H	emacsgtkfixed.h	22;"	d
EMACSRES	Makefile	/^EMACSRES = $/;"	m
emacswindow	xwidget.h	/^  GtkWidget *emacswindow;$/;"	m	struct:xwidget_view	access:public
emacs_abort	sysdep.c	/^emacs_abort (void)$/;"	f	signature:(void)
emacs_abort	w32fns.c	/^emacs_abort (void)$/;"	f	signature:(void)
EMACS_ATIMER_H	atimer.h	20;"	d
EMACS_ATTRIBUTE_NONNULL	emacs-module.h	38;"	d
EMACS_ATTRIBUTE_NONNULL	emacs-module.h	42;"	d
emacs_backtrace	lisp.h	/^extern void emacs_backtrace (int);$/;"	p	signature:(int)
emacs_backtrace	sysdep.c	/^emacs_backtrace (int backtrace_limit)$/;"	f	signature:(int backtrace_limit)
EMACS_BLOCKINPUT_H	blockinput.h	20;"	d
EMACS_BUFFER_H	buffer.h	22;"	d
emacs_bugreport	emacs.c	/^static const char emacs_bugreport[] = PACKAGE_BUGREPORT;$/;"	v	file:
emacs_button_translation	w32inevt.c	/^static int emacs_button_translation[NUM_TRANSLATED_MOUSE_BUTTONS] =$/;"	v	file:
EMACS_CATEGORY_H	category.h	26;"	d
EMACS_CCL_H	ccl.h	27;"	d
EMACS_CFLAGS	Makefile	/^EMACS_CFLAGS=-Demacs $(MYCPPFLAGS) -I. -I$(srcdir) \\$/;"	m
EMACS_CHARACTER_H	character.h	24;"	d
EMACS_CHARSET_H	charset.h	28;"	d
EMACS_CLASS	frame.h	1485;"	d
emacs_class	xterm.c	/^static char emacs_class[] = EMACS_CLASS;$/;"	v	file:
emacs_close	lisp.h	/^extern int emacs_close (int);$/;"	p	signature:(int)
emacs_close	sysdep.c	/^emacs_close (int fd)$/;"	f	signature:(int fd)
EMACS_CM_H	cm.h	20;"	d
EMACS_CODING_H	coding.h	27;"	d
EMACS_COMMANDS_H	commands.h	20;"	d
EMACS_COMPOSITE_H	composite.h	26;"	d
EMACS_CONFIGURATION	config.h	118;"	d
EMACS_CONFIG_FEATURES	config.h	121;"	d
EMACS_CONFIG_H	config.h	29;"	d
EMACS_CONFIG_OPTIONS	config.h	124;"	d
emacs_copyright	emacs.c	/^static const char emacs_copyright[] = COPYRIGHT;$/;"	v	file:
EMACS_DISPTAB_H	disptab.h	22;"	d
emacs_env	emacs-module.h	/^typedef struct emacs_env_26 emacs_env;$/;"	t	typeref:struct:emacs_env_26
emacs_env_25	emacs-module.h	/^struct emacs_env_25$/;"	s
emacs_env_25::private_members	emacs-module.h	/^  struct emacs_env_private *private_members;$/;"	m	struct:emacs_env_25	typeref:struct:emacs_env_25::emacs_env_private	access:public
emacs_env_25::size	emacs-module.h	/^  ptrdiff_t size;$/;"	m	struct:emacs_env_25	access:public
emacs_env_26	emacs-module.h	/^struct emacs_env_26$/;"	s
emacs_env_26::private_members	emacs-module.h	/^  struct emacs_env_private *private_members;$/;"	m	struct:emacs_env_26	typeref:struct:emacs_env_26::emacs_env_private	access:public
emacs_env_26::size	emacs-module.h	/^  ptrdiff_t size;$/;"	m	struct:emacs_env_26	access:public
emacs_env_private	emacs-module.c	/^struct emacs_env_private$/;"	s	file:
emacs_env_private::non_local_exit_data	emacs-module.c	/^  Lisp_Object non_local_exit_symbol, non_local_exit_data;$/;"	m	struct:emacs_env_private	file:	access:public
emacs_env_private::non_local_exit_symbol	emacs-module.c	/^  Lisp_Object non_local_exit_symbol, non_local_exit_data;$/;"	m	struct:emacs_env_private	file:	access:public
emacs_env_private::pending_non_local_exit	emacs-module.c	/^  enum emacs_funcall_exit pending_non_local_exit;$/;"	m	struct:emacs_env_private	typeref:enum:emacs_env_private::emacs_funcall_exit	file:	access:public
emacs_env_private::values	emacs-module.c	/^  Lisp_Object values;$/;"	m	struct:emacs_env_private	file:	access:public
emacs_event	xsmfns.c	/^static struct input_event emacs_event;$/;"	v	typeref:struct:input_event	file:
emacs_exec_file	lisp.h	/^extern int emacs_exec_file (char const *, char *const *, char *const *);$/;"	p	signature:(char const *, char *const *, char *const *)
emacs_exec_file	sysdep.c	/^emacs_exec_file (char const *file, char *const *argv, char *const *envp)$/;"	f	signature:(char const *file, char *const *argv, char *const *envp)
emacs_finalizer_function	emacs-module.c	/^typedef void (*emacs_finalizer_function) (void *);$/;"	t	file:
EMACS_FIXED	emacsgtkfixed.c	/^EMACS_FIXED (GtkWidget *widget)$/;"	f	file:	signature:(GtkWidget *widget)
emacs_fixed_class_init	emacsgtkfixed.c	/^emacs_fixed_class_init (EmacsFixedClass *klass)$/;"	f	file:	signature:(EmacsFixedClass *klass)
EMACS_FIXED_GET_CLASS	emacsgtkfixed.c	/^EMACS_FIXED_GET_CLASS (GtkWidget *widget)$/;"	f	file:	signature:(GtkWidget *widget)
emacs_fixed_get_preferred_height	emacsgtkfixed.c	/^emacs_fixed_get_preferred_height (GtkWidget *widget,$/;"	f	file:	signature:(GtkWidget *widget, gint *minimum, gint *natural)
emacs_fixed_get_preferred_height	emacsgtkfixed.c	/^static void emacs_fixed_get_preferred_height (GtkWidget *widget,$/;"	p	file:	signature:(GtkWidget *widget, gint *minimum, gint *natural)
emacs_fixed_get_preferred_width	emacsgtkfixed.c	/^emacs_fixed_get_preferred_width (GtkWidget *widget,$/;"	f	file:	signature:(GtkWidget *widget, gint *minimum, gint *natural)
emacs_fixed_get_preferred_width	emacsgtkfixed.c	/^static void emacs_fixed_get_preferred_width  (GtkWidget *widget,$/;"	p	file:	signature:(GtkWidget *widget, gint *minimum, gint *natural)
emacs_fixed_get_type	emacsgtkfixed.c	/^static GType emacs_fixed_get_type (void);$/;"	p	file:	signature:(void)
emacs_fixed_gtk_widget_size_allocate	emacsgtkfixed.c	/^emacs_fixed_gtk_widget_size_allocate (GtkWidget *widget,$/;"	f	file:	signature:(GtkWidget *widget, GtkAllocation *allocation)
emacs_fixed_init	emacsgtkfixed.c	/^emacs_fixed_init (EmacsFixed *fixed)$/;"	f	file:	signature:(EmacsFixed *fixed)
emacs_fixed_new	emacsgtkfixed.c	/^emacs_fixed_new (struct frame *f)$/;"	f	signature:(struct frame *f)
emacs_fixed_new	emacsgtkfixed.h	/^extern GtkWidget *emacs_fixed_new (struct frame *f);$/;"	p	signature:(struct frame *f)
EMACS_FONTSET_H	fontset.h	27;"	d
EMACS_FONT_H	font.h	23;"	d
emacs_fopen	sysdep.c	/^emacs_fopen (char const *file, char const *mode)$/;"	f	signature:(char const *file, char const *mode)
emacs_fopen	sysstdio.h	/^extern FILE *emacs_fopen (char const *, char const *);$/;"	p	signature:(char const *, char const *)
emacs_frame	widgetprv.h	/^    EmacsFramePart	emacs_frame;$/;"	m	struct:_EmacsFrameRec	access:public
emacs_frame_class	widgetprv.h	/^    EmacsFrameClassPart	emacs_frame_class;$/;"	m	struct:_EmacsFrameClassRec	access:public
EMACS_FRAME_H	frame.h	20;"	d
EMACS_FTFONT_H	ftfont.h	23;"	d
emacs_full_write	sysdep.c	/^emacs_full_write (int fd, char const *buf, ptrdiff_t nbyte,$/;"	f	file:	signature:(int fd, char const *buf, ptrdiff_t nbyte, int interruptible)
emacs_funcall_exit	emacs-module.h	/^enum emacs_funcall_exit$/;"	g
emacs_funcall_exit_return	emacs-module.h	/^  emacs_funcall_exit_return = 0,$/;"	e	enum:emacs_funcall_exit
emacs_funcall_exit_signal	emacs-module.h	/^  emacs_funcall_exit_signal = 1,$/;"	e	enum:emacs_funcall_exit
emacs_funcall_exit_throw	emacs-module.h	/^  emacs_funcall_exit_throw = 2$/;"	e	enum:emacs_funcall_exit
emacs_getenv_TZ	conf_post.h	/^extern char *emacs_getenv_TZ (void);$/;"	p	signature:(void)
emacs_getenv_TZ	editfns.c	/^emacs_getenv_TZ (void)$/;"	f	signature:(void)
emacs_get_current_dir_name	lisp.h	/^extern char *emacs_get_current_dir_name (void);$/;"	p	signature:(void)
emacs_get_current_dir_name	sysdep.c	/^emacs_get_current_dir_name (void)$/;"	f	signature:(void)
emacs_get_tty	sysdep.c	/^emacs_get_tty (int fd, struct emacs_tty *settings)$/;"	f	signature:(int fd, struct emacs_tty *settings)
emacs_get_tty_pgrp	process.c	/^emacs_get_tty_pgrp (struct Lisp_Process *p)$/;"	f	file:	signature:(struct Lisp_Process *p)
emacs_globals	globals.h	/^struct emacs_globals {$/;"	s
emacs_globals::f_attempt_orderly_shutdown_on_fatal_signal	globals.h	/^  bool f_attempt_orderly_shutdown_on_fatal_signal;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_attempt_stack_overflow_recovery	globals.h	/^  bool f_attempt_stack_overflow_recovery;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_automatic_hscrolling	globals.h	/^  Lisp_Object f_automatic_hscrolling;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_auto_raise_tool_bar_buttons_p	globals.h	/^  bool f_auto_raise_tool_bar_buttons_p;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_auto_save_interval	globals.h	/^  EMACS_INT f_auto_save_interval;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_auto_window_vscroll_p	globals.h	/^  bool f_auto_window_vscroll_p;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_baud_rate	globals.h	/^  EMACS_INT f_baud_rate;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_byte_metering_on	globals.h	/^  bool f_byte_metering_on;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_cannot_suspend	globals.h	/^  bool f_cannot_suspend;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_coding_system_require_warning	globals.h	/^  bool f_coding_system_require_warning;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_completion_ignore_case	globals.h	/^  bool f_completion_ignore_case;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_cons_cells_consed	globals.h	/^  EMACS_INT f_cons_cells_consed;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_create_lockfiles	globals.h	/^  bool f_create_lockfiles;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_cross_disabled_images	globals.h	/^  bool f_cross_disabled_images;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_cursor_in_echo_area	globals.h	/^  bool f_cursor_in_echo_area;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_debugger_may_continue	globals.h	/^  bool f_debugger_may_continue;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_debugger_stack_frame_as_list	globals.h	/^  bool f_debugger_stack_frame_as_list;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_debug_end_pos	globals.h	/^  EMACS_INT f_debug_end_pos;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_debug_on_next_call	globals.h	/^  bool f_debug_on_next_call;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_debug_on_quit	globals.h	/^  bool f_debug_on_quit;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_delete_by_moving_to_trash	globals.h	/^  bool f_delete_by_moving_to_trash;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_delete_exited_processes	globals.h	/^  bool f_delete_exited_processes;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_disable_ascii_optimization	globals.h	/^  bool f_disable_ascii_optimization;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_display_hourglass_p	globals.h	/^  bool f_display_hourglass_p;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_display_line_numbers_widen	globals.h	/^  bool f_display_line_numbers_widen;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_display_raw_bytes_as_hex	globals.h	/^  bool f_display_raw_bytes_as_hex;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_double_click_fuzz	globals.h	/^  EMACS_INT f_double_click_fuzz;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_do_mouse_tracking	globals.h	/^  Lisp_Object f_do_mouse_tracking;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_emacs_scroll_step	globals.h	/^  EMACS_INT f_emacs_scroll_step;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_enable_recursive_minibuffers	globals.h	/^  bool f_enable_recursive_minibuffers;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_eol_mnemonic_dos	globals.h	/^  Lisp_Object f_eol_mnemonic_dos;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_eol_mnemonic_mac	globals.h	/^  Lisp_Object f_eol_mnemonic_mac;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_eol_mnemonic_undecided	globals.h	/^  Lisp_Object f_eol_mnemonic_undecided;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_eol_mnemonic_unix	globals.h	/^  Lisp_Object f_eol_mnemonic_unix;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_executing_kbd_macro_index	globals.h	/^  EMACS_INT f_executing_kbd_macro_index;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_extra_keyboard_modifiers	globals.h	/^  EMACS_INT f_extra_keyboard_modifiers;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_floats_consed	globals.h	/^  EMACS_INT f_floats_consed;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_focus_follows_mouse	globals.h	/^  Lisp_Object f_focus_follows_mouse;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_force_load_messages	globals.h	/^  bool f_force_load_messages;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_frame_inhibit_implied_resize	globals.h	/^  Lisp_Object f_frame_inhibit_implied_resize;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_frame_resize_pixelwise	globals.h	/^  bool f_frame_resize_pixelwise;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_frame_size_history	globals.h	/^  Lisp_Object f_frame_size_history;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_garbage_collection_messages	globals.h	/^  bool f_garbage_collection_messages;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_gcs_done	globals.h	/^  EMACS_INT f_gcs_done;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_gc_cons_threshold	globals.h	/^  EMACS_INT f_gc_cons_threshold;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_global_gnutls_log_level	globals.h	/^  EMACS_INT f_global_gnutls_log_level;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_highlight_nonselected_windows	globals.h	/^  bool f_highlight_nonselected_windows;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_history_delete_duplicates	globals.h	/^  bool f_history_delete_duplicates;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_hscroll_margin	globals.h	/^  EMACS_INT f_hscroll_margin;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_imagemagick_render_type	globals.h	/^  EMACS_INT f_imagemagick_render_type;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_indent_tabs_mode	globals.h	/^  bool f_indent_tabs_mode;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_inherit_process_coding_system	globals.h	/^  bool f_inherit_process_coding_system;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_inhibit_bidi_mirroring	globals.h	/^  bool f_inhibit_bidi_mirroring;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_inhibit_compacting_font_caches	globals.h	/^  bool f_inhibit_compacting_font_caches;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_inhibit_eol_conversion	globals.h	/^  bool f_inhibit_eol_conversion;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_inhibit_eval_during_redisplay	globals.h	/^  bool f_inhibit_eval_during_redisplay;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_inhibit_free_realized_faces	globals.h	/^  bool f_inhibit_free_realized_faces;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_inhibit_iso_escape_detection	globals.h	/^  bool f_inhibit_iso_escape_detection;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_inhibit_load_charset_map	globals.h	/^  bool f_inhibit_load_charset_map;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_inhibit_menubar_update	globals.h	/^  bool f_inhibit_menubar_update;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_inhibit_message	globals.h	/^  bool f_inhibit_message;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_inhibit_modification_hooks	globals.h	/^  bool f_inhibit_modification_hooks;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_inhibit_null_byte_detection	globals.h	/^  bool f_inhibit_null_byte_detection;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_inhibit_try_cursor_movement	globals.h	/^  bool f_inhibit_try_cursor_movement;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_inhibit_try_window_id	globals.h	/^  bool f_inhibit_try_window_id;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_inhibit_try_window_reusing	globals.h	/^  bool f_inhibit_try_window_reusing;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_inhibit_x_resources	globals.h	/^  bool f_inhibit_x_resources;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_intervals_consed	globals.h	/^  EMACS_INT f_intervals_consed;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_inverse_video	globals.h	/^  bool f_inverse_video;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_last_command_event	globals.h	/^  Lisp_Object f_last_command_event;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_last_input_event	globals.h	/^  Lisp_Object f_last_input_event;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_last_nonmenu_event	globals.h	/^  Lisp_Object f_last_nonmenu_event;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_line_number_display_limit_width	globals.h	/^  EMACS_INT f_line_number_display_limit_width;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_load_convert_to_unibyte	globals.h	/^  bool f_load_convert_to_unibyte;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_load_dangerous_libraries	globals.h	/^  bool f_load_dangerous_libraries;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_load_force_doc_strings	globals.h	/^  bool f_load_force_doc_strings;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_load_in_progress	globals.h	/^  bool f_load_in_progress;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_load_prefer_newer	globals.h	/^  bool f_load_prefer_newer;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_make_cursor_line_fully_visible_p	globals.h	/^  bool f_make_cursor_line_fully_visible_p;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_max_lisp_eval_depth	globals.h	/^  EMACS_INT f_max_lisp_eval_depth;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_max_specpdl_size	globals.h	/^  EMACS_INT f_max_specpdl_size;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_menu_prompting	globals.h	/^  bool f_menu_prompting;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_menu_prompt_more_char	globals.h	/^  Lisp_Object f_menu_prompt_more_char;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_message_truncate_lines	globals.h	/^  bool f_message_truncate_lines;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_meta_prefix_char	globals.h	/^  Lisp_Object f_meta_prefix_char;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_minibuffer_allow_text_properties	globals.h	/^  bool f_minibuffer_allow_text_properties;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_minibuffer_auto_raise	globals.h	/^  bool f_minibuffer_auto_raise;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_misc_objects_consed	globals.h	/^  EMACS_INT f_misc_objects_consed;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_mode_line_in_non_selected_windows	globals.h	/^  bool f_mode_line_in_non_selected_windows;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_multibyte_syntax_as_symbol	globals.h	/^  bool f_multibyte_syntax_as_symbol;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_multiple_frames	globals.h	/^  bool f_multiple_frames;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_next_screen_context_lines	globals.h	/^  EMACS_INT f_next_screen_context_lines;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_noninteractive1	globals.h	/^  bool f_noninteractive1;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_no_redraw_on_reenter	globals.h	/^  bool f_no_redraw_on_reenter;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_num_input_keys	globals.h	/^  EMACS_INT f_num_input_keys;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_num_nonmacro_input_events	globals.h	/^  EMACS_INT f_num_nonmacro_input_events;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_open_paren_in_column_0_is_defun_start	globals.h	/^  bool f_open_paren_in_column_0_is_defun_start;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_overline_margin	globals.h	/^  EMACS_INT f_overline_margin;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_parse_sexp_ignore_comments	globals.h	/^  bool f_parse_sexp_ignore_comments;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_parse_sexp_lookup_properties	globals.h	/^  bool f_parse_sexp_lookup_properties;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_polling_period	globals.h	/^  EMACS_INT f_polling_period;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_print_escape_control_characters	globals.h	/^  bool f_print_escape_control_characters;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_print_escape_multibyte	globals.h	/^  bool f_print_escape_multibyte;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_print_escape_newlines	globals.h	/^  bool f_print_escape_newlines;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_print_escape_nonascii	globals.h	/^  bool f_print_escape_nonascii;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_print_quoted	globals.h	/^  bool f_print_quoted;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_profiler_log_size	globals.h	/^  EMACS_INT f_profiler_log_size;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_profiler_max_stack_depth	globals.h	/^  EMACS_INT f_profiler_max_stack_depth;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_pure_bytes_used	globals.h	/^  EMACS_INT f_pure_bytes_used;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_read_buffer_completion_ignore_case	globals.h	/^  bool f_read_buffer_completion_ignore_case;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_redisplay_dont_pause	globals.h	/^  bool f_redisplay_dont_pause;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_redisplay__inhibit_bidi	globals.h	/^  bool f_redisplay__inhibit_bidi;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_scroll_bar_adjust_thumb_portion_p	globals.h	/^  bool f_scroll_bar_adjust_thumb_portion_p;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_scroll_conservatively	globals.h	/^  EMACS_INT f_scroll_conservatively;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_scroll_margin	globals.h	/^  EMACS_INT f_scroll_margin;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_strings_consed	globals.h	/^  EMACS_INT f_strings_consed;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_string_chars_consed	globals.h	/^  EMACS_INT f_string_chars_consed;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_symbols_consed	globals.h	/^  EMACS_INT f_symbols_consed;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_syntax_propertize__done	globals.h	/^  EMACS_INT f_syntax_propertize__done;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_system_uses_terminfo	globals.h	/^  bool f_system_uses_terminfo;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_text_quoting_flag	globals.h	/^  bool f_text_quoting_flag;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_tooltip_reuse_hidden_frame	globals.h	/^  bool f_tooltip_reuse_hidden_frame;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_tool_bar_button_relief	globals.h	/^  EMACS_INT f_tool_bar_button_relief;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_tool_bar_max_label_size	globals.h	/^  EMACS_INT f_tool_bar_max_label_size;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_underline_minimum_offset	globals.h	/^  EMACS_INT f_underline_minimum_offset;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_undo_inhibit_record_point	globals.h	/^  bool f_undo_inhibit_record_point;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_undo_limit	globals.h	/^  EMACS_INT f_undo_limit;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_undo_strong_limit	globals.h	/^  EMACS_INT f_undo_strong_limit;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_unibyte_display_via_language_environment	globals.h	/^  bool f_unibyte_display_via_language_environment;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_use_default_font_for_symbols	globals.h	/^  bool f_use_default_font_for_symbols;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_use_dialog_box	globals.h	/^  bool f_use_dialog_box;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_use_file_dialog	globals.h	/^  bool f_use_file_dialog;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_use_system_font	globals.h	/^  bool f_use_system_font;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vafter_change_functions	globals.h	/^  Lisp_Object f_Vafter_change_functions;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vafter_init_time	globals.h	/^  Lisp_Object f_Vafter_init_time;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vafter_insert_file_functions	globals.h	/^  Lisp_Object f_Vafter_insert_file_functions;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vafter_load_alist	globals.h	/^  Lisp_Object f_Vafter_load_alist;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Valternate_fontname_alist	globals.h	/^  Lisp_Object f_Valternate_fontname_alist;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vauto_composition_function	globals.h	/^  Lisp_Object f_Vauto_composition_function;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vauto_composition_mode	globals.h	/^  Lisp_Object f_Vauto_composition_mode;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vauto_fill_chars	globals.h	/^  Lisp_Object f_Vauto_fill_chars;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vauto_resize_tool_bars	globals.h	/^  Lisp_Object f_Vauto_resize_tool_bars;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vauto_save_include_big_deletions	globals.h	/^  Lisp_Object f_Vauto_save_include_big_deletions;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vauto_save_list_file_name	globals.h	/^  Lisp_Object f_Vauto_save_list_file_name;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vauto_save_timeout	globals.h	/^  Lisp_Object f_Vauto_save_timeout;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vauto_save_visited_file_name	globals.h	/^  Lisp_Object f_Vauto_save_visited_file_name;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vbefore_change_functions	globals.h	/^  Lisp_Object f_Vbefore_change_functions;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vbefore_init_time	globals.h	/^  Lisp_Object f_Vbefore_init_time;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vblink_cursor_alist	globals.h	/^  Lisp_Object f_Vblink_cursor_alist;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vbuffer_access_fontified_property	globals.h	/^  Lisp_Object f_Vbuffer_access_fontified_property;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vbuffer_access_fontify_functions	globals.h	/^  Lisp_Object f_Vbuffer_access_fontify_functions;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vbuffer_list_update_hook	globals.h	/^  Lisp_Object f_Vbuffer_list_update_hook;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vbuild_files	globals.h	/^  Lisp_Object f_Vbuild_files;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vbytecomp_version_regexp	globals.h	/^  Lisp_Object f_Vbytecomp_version_regexp;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vbyte_boolean_vars	globals.h	/^  Lisp_Object f_Vbyte_boolean_vars;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vbyte_code_meter	globals.h	/^  Lisp_Object f_Vbyte_code_meter;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vcairo_version_string	globals.h	/^  Lisp_Object f_Vcairo_version_string;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vchange_major_mode_hook	globals.h	/^  Lisp_Object f_Vchange_major_mode_hook;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vcharset_list	globals.h	/^  Lisp_Object f_Vcharset_list;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vcharset_map_path	globals.h	/^  Lisp_Object f_Vcharset_map_path;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vcharset_revision_table	globals.h	/^  Lisp_Object f_Vcharset_revision_table;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vchar_code_property_alist	globals.h	/^  Lisp_Object f_Vchar_code_property_alist;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vchar_property_alias_alist	globals.h	/^  Lisp_Object f_Vchar_property_alias_alist;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vchar_script_table	globals.h	/^  Lisp_Object f_Vchar_script_table;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vchar_width_table	globals.h	/^  Lisp_Object f_Vchar_width_table;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vcode_conversion_map_vector	globals.h	/^  Lisp_Object f_Vcode_conversion_map_vector;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vcoding_category_list	globals.h	/^  Lisp_Object f_Vcoding_category_list;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vcoding_system_alist	globals.h	/^  Lisp_Object f_Vcoding_system_alist;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vcoding_system_for_read	globals.h	/^  Lisp_Object f_Vcoding_system_for_read;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vcoding_system_for_write	globals.h	/^  Lisp_Object f_Vcoding_system_for_write;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vcoding_system_list	globals.h	/^  Lisp_Object f_Vcoding_system_list;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vcombine_after_change_calls	globals.h	/^  Lisp_Object f_Vcombine_after_change_calls;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vcommand_debug_status	globals.h	/^  Lisp_Object f_Vcommand_debug_status;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vcommand_error_function	globals.h	/^  Lisp_Object f_Vcommand_error_function;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vcommand_history	globals.h	/^  Lisp_Object f_Vcommand_history;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vcommand_line_args	globals.h	/^  Lisp_Object f_Vcommand_line_args;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vcomment_end_can_be_escaped	globals.h	/^  bool f_Vcomment_end_can_be_escaped;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vcompletion_ignored_extensions	globals.h	/^  Lisp_Object f_Vcompletion_ignored_extensions;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vcompletion_regexp_list	globals.h	/^  Lisp_Object f_Vcompletion_regexp_list;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vcompose_chars_after_function	globals.h	/^  Lisp_Object f_Vcompose_chars_after_function;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vcomposition_function_table	globals.h	/^  Lisp_Object f_Vcomposition_function_table;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vconfigure_info_directory	globals.h	/^  Lisp_Object f_Vconfigure_info_directory;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vcurrent_iso639_language	globals.h	/^  Lisp_Object f_Vcurrent_iso639_language;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vcurrent_load_list	globals.h	/^  Lisp_Object f_Vcurrent_load_list;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vcurrent_prefix_arg	globals.h	/^  Lisp_Object f_Vcurrent_prefix_arg;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vdata_directory	globals.h	/^  Lisp_Object f_Vdata_directory;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vdbus_compiled_version	globals.h	/^  Lisp_Object f_Vdbus_compiled_version;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vdbus_debug	globals.h	/^  Lisp_Object f_Vdbus_debug;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vdbus_message_type_error	globals.h	/^  Lisp_Object f_Vdbus_message_type_error;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vdbus_message_type_invalid	globals.h	/^  Lisp_Object f_Vdbus_message_type_invalid;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vdbus_message_type_method_call	globals.h	/^  Lisp_Object f_Vdbus_message_type_method_call;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vdbus_message_type_method_return	globals.h	/^  Lisp_Object f_Vdbus_message_type_method_return;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vdbus_message_type_signal	globals.h	/^  Lisp_Object f_Vdbus_message_type_signal;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vdbus_registered_objects_table	globals.h	/^  Lisp_Object f_Vdbus_registered_objects_table;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vdbus_runtime_version	globals.h	/^  Lisp_Object f_Vdbus_runtime_version;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vdeactivate_mark	globals.h	/^  Lisp_Object f_Vdeactivate_mark;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vdebugger	globals.h	/^  Lisp_Object f_Vdebugger;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vdebug_ignored_errors	globals.h	/^  Lisp_Object f_Vdebug_ignored_errors;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vdebug_on_error	globals.h	/^  Lisp_Object f_Vdebug_on_error;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vdebug_on_event	globals.h	/^  Lisp_Object f_Vdebug_on_event;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vdebug_on_message	globals.h	/^  Lisp_Object f_Vdebug_on_message;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vdebug_on_signal	globals.h	/^  Lisp_Object f_Vdebug_on_signal;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vdefault_file_name_coding_system	globals.h	/^  Lisp_Object f_Vdefault_file_name_coding_system;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vdefault_frame_alist	globals.h	/^  Lisp_Object f_Vdefault_frame_alist;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vdefault_frame_scroll_bars	globals.h	/^  Lisp_Object f_Vdefault_frame_scroll_bars;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vdefault_process_coding_system	globals.h	/^  Lisp_Object f_Vdefault_process_coding_system;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vdefault_text_properties	globals.h	/^  Lisp_Object f_Vdefault_text_properties;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vdeferred_action_function	globals.h	/^  Lisp_Object f_Vdeferred_action_function;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vdeferred_action_list	globals.h	/^  Lisp_Object f_Vdeferred_action_list;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vdefine_key_rebound_commands	globals.h	/^  Lisp_Object f_Vdefine_key_rebound_commands;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vdelayed_warnings_list	globals.h	/^  Lisp_Object f_Vdelayed_warnings_list;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vdelete_frame_functions	globals.h	/^  Lisp_Object f_Vdelete_frame_functions;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vdelete_terminal_functions	globals.h	/^  Lisp_Object f_Vdelete_terminal_functions;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vdisable_point_adjustment	globals.h	/^  Lisp_Object f_Vdisable_point_adjustment;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vdisplay_line_numbers	globals.h	/^  Lisp_Object f_Vdisplay_line_numbers;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vdisplay_line_numbers_current_absolute	globals.h	/^  Lisp_Object f_Vdisplay_line_numbers_current_absolute;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vdisplay_line_numbers_width	globals.h	/^  Lisp_Object f_Vdisplay_line_numbers_width;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vdisplay_pixels_per_inch	globals.h	/^  Lisp_Object f_Vdisplay_pixels_per_inch;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vdoc_directory	globals.h	/^  Lisp_Object f_Vdoc_directory;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vdoc_file_name	globals.h	/^  Lisp_Object f_Vdoc_file_name;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vdouble_click_time	globals.h	/^  Lisp_Object f_Vdouble_click_time;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vdynamic_library_alist	globals.h	/^  Lisp_Object f_Vdynamic_library_alist;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vecho_keystrokes	globals.h	/^  Lisp_Object f_Vecho_keystrokes;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_vector_cells_consed	globals.h	/^  EMACS_INT f_vector_cells_consed;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vemacs_copyright	globals.h	/^  Lisp_Object f_Vemacs_copyright;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vemacs_version	globals.h	/^  Lisp_Object f_Vemacs_version;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vemulation_mode_map_alists	globals.h	/^  Lisp_Object f_Vemulation_mode_map_alists;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Venable_character_translation	globals.h	/^  Lisp_Object f_Venable_character_translation;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Venable_disabled_menus_and_buttons	globals.h	/^  Lisp_Object f_Venable_disabled_menus_and_buttons;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Veval_buffer_list	globals.h	/^  Lisp_Object f_Veval_buffer_list;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vexecuting_kbd_macro	globals.h	/^  Lisp_Object f_Vexecuting_kbd_macro;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vexec_directory	globals.h	/^  Lisp_Object f_Vexec_directory;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vexec_path	globals.h	/^  Lisp_Object f_Vexec_path;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vexec_suffixes	globals.h	/^  Lisp_Object f_Vexec_suffixes;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vface_default_stipple	globals.h	/^  Lisp_Object f_Vface_default_stipple;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vface_font_rescale_alist	globals.h	/^  Lisp_Object f_Vface_font_rescale_alist;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vface_ignored_fonts	globals.h	/^  Lisp_Object f_Vface_ignored_fonts;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vface_new_frame_defaults	globals.h	/^  Lisp_Object f_Vface_new_frame_defaults;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vface_remapping_alist	globals.h	/^  Lisp_Object f_Vface_remapping_alist;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vfast_but_imprecise_scrolling	globals.h	/^  bool f_Vfast_but_imprecise_scrolling;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vfeatures	globals.h	/^  Lisp_Object f_Vfeatures;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vfile_coding_system_alist	globals.h	/^  Lisp_Object f_Vfile_coding_system_alist;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vfile_name_coding_system	globals.h	/^  Lisp_Object f_Vfile_name_coding_system;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vfile_name_handler_alist	globals.h	/^  Lisp_Object f_Vfile_name_handler_alist;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vfind_word_boundary_function_table	globals.h	/^  Lisp_Object f_Vfind_word_boundary_function_table;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vfirst_change_hook	globals.h	/^  Lisp_Object f_Vfirst_change_hook;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vfloat_output_format	globals.h	/^  Lisp_Object f_Vfloat_output_format;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vfocus_in_hook	globals.h	/^  Lisp_Object f_Vfocus_in_hook;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vfocus_out_hook	globals.h	/^  Lisp_Object f_Vfocus_out_hook;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vfontification_functions	globals.h	/^  Lisp_Object f_Vfontification_functions;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vfontset_alias_alist	globals.h	/^  Lisp_Object f_Vfontset_alias_alist;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vfont_ccl_encoder_alist	globals.h	/^  Lisp_Object f_Vfont_ccl_encoder_alist;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vfont_encoding_alist	globals.h	/^  Lisp_Object f_Vfont_encoding_alist;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vfont_encoding_charset_alist	globals.h	/^  Lisp_Object f_Vfont_encoding_charset_alist;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vfont_log	globals.h	/^  Lisp_Object f_Vfont_log;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vfont_slant_table	globals.h	/^  Lisp_Object f_Vfont_slant_table;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vfont_weight_table	globals.h	/^  Lisp_Object f_Vfont_weight_table;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vfont_width_table	globals.h	/^  Lisp_Object f_Vfont_width_table;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vframe_alpha_lower_limit	globals.h	/^  Lisp_Object f_Vframe_alpha_lower_limit;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vframe_title_format	globals.h	/^  Lisp_Object f_Vframe_title_format;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vfringe_bitmaps	globals.h	/^  Lisp_Object f_Vfringe_bitmaps;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vfunction_key_map	globals.h	/^  Lisp_Object f_Vfunction_key_map;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vgc_cons_percentage	globals.h	/^  Lisp_Object f_Vgc_cons_percentage;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vgc_elapsed	globals.h	/^  Lisp_Object f_Vgc_elapsed;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vglobal_disable_point_adjustment	globals.h	/^  Lisp_Object f_Vglobal_disable_point_adjustment;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vglobal_mode_string	globals.h	/^  Lisp_Object f_Vglobal_mode_string;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vglyphless_char_display	globals.h	/^  Lisp_Object f_Vglyphless_char_display;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vglyph_table	globals.h	/^  Lisp_Object f_Vglyph_table;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vgtk_version_string	globals.h	/^  Lisp_Object f_Vgtk_version_string;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vhelp_char	globals.h	/^  Lisp_Object f_Vhelp_char;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vhelp_event_list	globals.h	/^  Lisp_Object f_Vhelp_event_list;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vhelp_form	globals.h	/^  Lisp_Object f_Vhelp_form;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vhistory_add_new_input	globals.h	/^  Lisp_Object f_Vhistory_add_new_input;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vhistory_length	globals.h	/^  Lisp_Object f_Vhistory_length;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vhourglass_delay	globals.h	/^  Lisp_Object f_Vhourglass_delay;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vhscroll_step	globals.h	/^  Lisp_Object f_Vhscroll_step;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vicon_title_format	globals.h	/^  Lisp_Object f_Vicon_title_format;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vignore_relative_composition	globals.h	/^  Lisp_Object f_Vignore_relative_composition;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vimage_cache_eviction_delay	globals.h	/^  Lisp_Object f_Vimage_cache_eviction_delay;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vimage_types	globals.h	/^  Lisp_Object f_Vimage_types;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vinhibit_changing_match_data	globals.h	/^  Lisp_Object f_Vinhibit_changing_match_data;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vinhibit_debugger	globals.h	/^  Lisp_Object f_Vinhibit_debugger;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vinhibit_field_text_motion	globals.h	/^  Lisp_Object f_Vinhibit_field_text_motion;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vinhibit_file_name_handlers	globals.h	/^  Lisp_Object f_Vinhibit_file_name_handlers;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vinhibit_file_name_operation	globals.h	/^  Lisp_Object f_Vinhibit_file_name_operation;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vinhibit_point_motion_hooks	globals.h	/^  Lisp_Object f_Vinhibit_point_motion_hooks;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vinhibit_quit	globals.h	/^  Lisp_Object f_Vinhibit_quit;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vinhibit_read_only	globals.h	/^  Lisp_Object f_Vinhibit_read_only;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vinhibit_redisplay	globals.h	/^  Lisp_Object f_Vinhibit_redisplay;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vinitial_environment	globals.h	/^  Lisp_Object f_Vinitial_environment;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vinitial_window_system	globals.h	/^  Lisp_Object f_Vinitial_window_system;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vinput_method_function	globals.h	/^  Lisp_Object f_Vinput_method_function;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vinput_method_previous_message	globals.h	/^  Lisp_Object f_Vinput_method_previous_message;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vinstallation_directory	globals.h	/^  Lisp_Object f_Vinstallation_directory;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vinternal_interpreter_environment	globals.h	/^  Lisp_Object f_Vinternal_interpreter_environment;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vinternal__top_level_message	globals.h	/^  Lisp_Object f_Vinternal__top_level_message;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vinvocation_directory	globals.h	/^  Lisp_Object f_Vinvocation_directory;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vinvocation_name	globals.h	/^  Lisp_Object f_Vinvocation_name;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_visible_bell	globals.h	/^  bool f_visible_bell;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_visible_cursor	globals.h	/^  bool f_visible_cursor;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vkbd_macro_termination_hook	globals.h	/^  Lisp_Object f_Vkbd_macro_termination_hook;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vkey_translation_map	globals.h	/^  Lisp_Object f_Vkey_translation_map;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vkill_buffer_query_functions	globals.h	/^  Lisp_Object f_Vkill_buffer_query_functions;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vkill_emacs_hook	globals.h	/^  Lisp_Object f_Vkill_emacs_hook;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vlast_code_conversion_error	globals.h	/^  Lisp_Object f_Vlast_code_conversion_error;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vlast_coding_system_used	globals.h	/^  Lisp_Object f_Vlast_coding_system_used;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vlast_event_frame	globals.h	/^  Lisp_Object f_Vlast_event_frame;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vlatin_extra_code_table	globals.h	/^  Lisp_Object f_Vlatin_extra_code_table;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vlexical_binding	globals.h	/^  Lisp_Object f_Vlexical_binding;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vline_number_display_limit	globals.h	/^  Lisp_Object f_Vline_number_display_limit;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vline_prefix	globals.h	/^  Lisp_Object f_Vline_prefix;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vload_file_name	globals.h	/^  Lisp_Object f_Vload_file_name;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vload_file_rep_suffixes	globals.h	/^  Lisp_Object f_Vload_file_rep_suffixes;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vload_history	globals.h	/^  Lisp_Object f_Vload_history;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vload_path	globals.h	/^  Lisp_Object f_Vload_path;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vload_read_function	globals.h	/^  Lisp_Object f_Vload_read_function;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vload_source_file_function	globals.h	/^  Lisp_Object f_Vload_source_file_function;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vload_suffixes	globals.h	/^  Lisp_Object f_Vload_suffixes;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vlocale_coding_system	globals.h	/^  Lisp_Object f_Vlocale_coding_system;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vlread_old_style_backquotes	globals.h	/^  Lisp_Object f_Vlread_old_style_backquotes;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vlread_unescaped_character_literals	globals.h	/^  Lisp_Object f_Vlread_unescaped_character_literals;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vlucid_menu_bar_dirty_flag	globals.h	/^  Lisp_Object f_Vlucid_menu_bar_dirty_flag;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vmake_pointer_invisible	globals.h	/^  Lisp_Object f_Vmake_pointer_invisible;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vmark_even_if_inactive	globals.h	/^  Lisp_Object f_Vmark_even_if_inactive;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vmaximum_scroll_margin	globals.h	/^  Lisp_Object f_Vmaximum_scroll_margin;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vmax_image_size	globals.h	/^  Lisp_Object f_Vmax_image_size;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vmax_mini_window_height	globals.h	/^  Lisp_Object f_Vmax_mini_window_height;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vmemory_full	globals.h	/^  Lisp_Object f_Vmemory_full;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vmemory_signal_data	globals.h	/^  Lisp_Object f_Vmemory_signal_data;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vmenu_bar_final_items	globals.h	/^  Lisp_Object f_Vmenu_bar_final_items;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vmenu_bar_mode	globals.h	/^  Lisp_Object f_Vmenu_bar_mode;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vmenu_bar_update_hook	globals.h	/^  Lisp_Object f_Vmenu_bar_update_hook;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vmenu_updating_frame	globals.h	/^  Lisp_Object f_Vmenu_updating_frame;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vmessage_log_max	globals.h	/^  Lisp_Object f_Vmessage_log_max;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vminibuffer_completing_file_name	globals.h	/^  Lisp_Object f_Vminibuffer_completing_file_name;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vminibuffer_completion_confirm	globals.h	/^  Lisp_Object f_Vminibuffer_completion_confirm;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vminibuffer_completion_predicate	globals.h	/^  Lisp_Object f_Vminibuffer_completion_predicate;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vminibuffer_completion_table	globals.h	/^  Lisp_Object f_Vminibuffer_completion_table;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vminibuffer_exit_hook	globals.h	/^  Lisp_Object f_Vminibuffer_exit_hook;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vminibuffer_help_form	globals.h	/^  Lisp_Object f_Vminibuffer_help_form;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vminibuffer_history_position	globals.h	/^  Lisp_Object f_Vminibuffer_history_position;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vminibuffer_history_variable	globals.h	/^  Lisp_Object f_Vminibuffer_history_variable;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vminibuffer_local_map	globals.h	/^  Lisp_Object f_Vminibuffer_local_map;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vminibuffer_local_ns_map	globals.h	/^  Lisp_Object f_Vminibuffer_local_ns_map;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vminibuffer_message_timeout	globals.h	/^  Lisp_Object f_Vminibuffer_message_timeout;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vminibuffer_prompt_properties	globals.h	/^  Lisp_Object f_Vminibuffer_prompt_properties;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vminibuffer_setup_hook	globals.h	/^  Lisp_Object f_Vminibuffer_setup_hook;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vminibuf_scroll_window	globals.h	/^  Lisp_Object f_Vminibuf_scroll_window;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vminor_mode_map_alist	globals.h	/^  Lisp_Object f_Vminor_mode_map_alist;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vminor_mode_overriding_map_alist	globals.h	/^  Lisp_Object f_Vminor_mode_overriding_map_alist;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vmodule_file_suffix	globals.h	/^  Lisp_Object f_Vmodule_file_suffix;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vmost_negative_fixnum	globals.h	/^  Lisp_Object f_Vmost_negative_fixnum;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vmost_positive_fixnum	globals.h	/^  Lisp_Object f_Vmost_positive_fixnum;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vmotif_version_string	globals.h	/^  Lisp_Object f_Vmotif_version_string;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vmouse_autoselect_window	globals.h	/^  Lisp_Object f_Vmouse_autoselect_window;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vmouse_highlight	globals.h	/^  Lisp_Object f_Vmouse_highlight;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vmouse_leave_buffer_hook	globals.h	/^  Lisp_Object f_Vmouse_leave_buffer_hook;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vmouse_position_function	globals.h	/^  Lisp_Object f_Vmouse_position_function;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vmove_frame_functions	globals.h	/^  Lisp_Object f_Vmove_frame_functions;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vnetwork_coding_system_alist	globals.h	/^  Lisp_Object f_Vnetwork_coding_system_alist;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vnobreak_char_display	globals.h	/^  Lisp_Object f_Vnobreak_char_display;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vobarray	globals.h	/^  Lisp_Object f_Vobarray;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Voperating_system_release	globals.h	/^  Lisp_Object f_Voperating_system_release;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Votf_script_alist	globals.h	/^  Lisp_Object f_Votf_script_alist;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vother_window_scroll_buffer	globals.h	/^  Lisp_Object f_Vother_window_scroll_buffer;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Voverflow_newline_into_fringe	globals.h	/^  Lisp_Object f_Voverflow_newline_into_fringe;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Voverlay_arrow_position	globals.h	/^  Lisp_Object f_Voverlay_arrow_position;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Voverlay_arrow_string	globals.h	/^  Lisp_Object f_Voverlay_arrow_string;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Voverlay_arrow_variable_list	globals.h	/^  Lisp_Object f_Voverlay_arrow_variable_list;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Voverriding_local_map	globals.h	/^  Lisp_Object f_Voverriding_local_map;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Voverriding_local_map_menu_flag	globals.h	/^  Lisp_Object f_Voverriding_local_map_menu_flag;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vpath_separator	globals.h	/^  Lisp_Object f_Vpath_separator;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vpost_command_hook	globals.h	/^  Lisp_Object f_Vpost_command_hook;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vpost_gc_hook	globals.h	/^  Lisp_Object f_Vpost_gc_hook;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vpost_self_insert_hook	globals.h	/^  Lisp_Object f_Vpost_self_insert_hook;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vprefix_help_command	globals.h	/^  Lisp_Object f_Vprefix_help_command;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vpreloaded_file_list	globals.h	/^  Lisp_Object f_Vpreloaded_file_list;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vprevious_system_messages_locale	globals.h	/^  Lisp_Object f_Vprevious_system_messages_locale;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vprevious_system_time_locale	globals.h	/^  Lisp_Object f_Vprevious_system_time_locale;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vpre_command_hook	globals.h	/^  Lisp_Object f_Vpre_command_hook;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vpre_redisplay_function	globals.h	/^  Lisp_Object f_Vpre_redisplay_function;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vprintable_chars	globals.h	/^  Lisp_Object f_Vprintable_chars;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vprint_charset_text_property	globals.h	/^  Lisp_Object f_Vprint_charset_text_property;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vprint_circle	globals.h	/^  Lisp_Object f_Vprint_circle;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vprint_continuous_numbering	globals.h	/^  Lisp_Object f_Vprint_continuous_numbering;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vprint_gensym	globals.h	/^  Lisp_Object f_Vprint_gensym;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vprint_length	globals.h	/^  Lisp_Object f_Vprint_length;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vprint_level	globals.h	/^  Lisp_Object f_Vprint_level;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vprint_number_table	globals.h	/^  Lisp_Object f_Vprint_number_table;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vprocess_adaptive_read_buffering	globals.h	/^  Lisp_Object f_Vprocess_adaptive_read_buffering;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vprocess_coding_system_alist	globals.h	/^  Lisp_Object f_Vprocess_coding_system_alist;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vprocess_connection_type	globals.h	/^  Lisp_Object f_Vprocess_connection_type;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vprocess_environment	globals.h	/^  Lisp_Object f_Vprocess_environment;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vpurify_flag	globals.h	/^  Lisp_Object f_Vpurify_flag;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vquit_flag	globals.h	/^  Lisp_Object f_Vquit_flag;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vread_buffer_function	globals.h	/^  Lisp_Object f_Vread_buffer_function;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vread_circle	globals.h	/^  Lisp_Object f_Vread_circle;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vread_expression_history	globals.h	/^  Lisp_Object f_Vread_expression_history;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vread_hide_char	globals.h	/^  Lisp_Object f_Vread_hide_char;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vread_symbol_positions_list	globals.h	/^  Lisp_Object f_Vread_symbol_positions_list;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vread_with_symbol_positions	globals.h	/^  Lisp_Object f_Vread_with_symbol_positions;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vreal_this_command	globals.h	/^  Lisp_Object f_Vreal_this_command;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vrecenter_redisplay	globals.h	/^  Lisp_Object f_Vrecenter_redisplay;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vredisplay_end_trigger_functions	globals.h	/^  Lisp_Object f_Vredisplay_end_trigger_functions;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vredisplay__all_windows_cause	globals.h	/^  Lisp_Object f_Vredisplay__all_windows_cause;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vredisplay__mode_lines_cause	globals.h	/^  Lisp_Object f_Vredisplay__mode_lines_cause;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vreport_emacs_bug_address	globals.h	/^  Lisp_Object f_Vreport_emacs_bug_address;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vresize_mini_windows	globals.h	/^  Lisp_Object f_Vresize_mini_windows;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vresume_tty_functions	globals.h	/^  Lisp_Object f_Vresume_tty_functions;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vring_bell_function	globals.h	/^  Lisp_Object f_Vring_bell_function;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vsaved_region_selection	globals.h	/^  Lisp_Object f_Vsaved_region_selection;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vscalable_fonts_allowed	globals.h	/^  Lisp_Object f_Vscalable_fonts_allowed;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vscript_representative_chars	globals.h	/^  Lisp_Object f_Vscript_representative_chars;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vscroll_preserve_screen_position	globals.h	/^  Lisp_Object f_Vscroll_preserve_screen_position;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vsearch_spaces_regexp	globals.h	/^  Lisp_Object f_Vsearch_spaces_regexp;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vselection_converter_alist	globals.h	/^  Lisp_Object f_Vselection_converter_alist;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vselection_inhibit_update_commands	globals.h	/^  Lisp_Object f_Vselection_inhibit_update_commands;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vselect_active_regions	globals.h	/^  Lisp_Object f_Vselect_active_regions;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vselect_safe_coding_system_function	globals.h	/^  Lisp_Object f_Vselect_safe_coding_system_function;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vset_auto_coding_function	globals.h	/^  Lisp_Object f_Vset_auto_coding_function;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vshared_game_score_directory	globals.h	/^  Lisp_Object f_Vshared_game_score_directory;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vshell_file_name	globals.h	/^  Lisp_Object f_Vshell_file_name;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vshow_help_function	globals.h	/^  Lisp_Object f_Vshow_help_function;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vshow_trailing_whitespace	globals.h	/^  Lisp_Object f_Vshow_trailing_whitespace;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vsignal_hook_function	globals.h	/^  Lisp_Object f_Vsignal_hook_function;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vsource_directory	globals.h	/^  Lisp_Object f_Vsource_directory;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vspecial_event_map	globals.h	/^  Lisp_Object f_Vspecial_event_map;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vstandard_display_table	globals.h	/^  Lisp_Object f_Vstandard_display_table;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vstandard_input	globals.h	/^  Lisp_Object f_Vstandard_input;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vstandard_output	globals.h	/^  Lisp_Object f_Vstandard_output;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vstandard_translation_table_for_decode	globals.h	/^  Lisp_Object f_Vstandard_translation_table_for_decode;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vstandard_translation_table_for_encode	globals.h	/^  Lisp_Object f_Vstandard_translation_table_for_encode;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vsuspend_tty_functions	globals.h	/^  Lisp_Object f_Vsuspend_tty_functions;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vsystem_configuration	globals.h	/^  Lisp_Object f_Vsystem_configuration;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vsystem_configuration_features	globals.h	/^  Lisp_Object f_Vsystem_configuration_features;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vsystem_configuration_options	globals.h	/^  Lisp_Object f_Vsystem_configuration_options;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vsystem_messages_locale	globals.h	/^  Lisp_Object f_Vsystem_messages_locale;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vsystem_name	globals.h	/^  Lisp_Object f_Vsystem_name;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vsystem_time_locale	globals.h	/^  Lisp_Object f_Vsystem_time_locale;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vsystem_type	globals.h	/^  Lisp_Object f_Vsystem_type;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vtemporary_file_directory	globals.h	/^  Lisp_Object f_Vtemporary_file_directory;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vtemp_buffer_show_function	globals.h	/^  Lisp_Object f_Vtemp_buffer_show_function;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vterminal_frame	globals.h	/^  Lisp_Object f_Vterminal_frame;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vtext_property_default_nonsticky	globals.h	/^  Lisp_Object f_Vtext_property_default_nonsticky;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vtext_quoting_style	globals.h	/^  Lisp_Object f_Vtext_quoting_style;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vthis_command	globals.h	/^  Lisp_Object f_Vthis_command;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vthis_command_keys_shift_translated	globals.h	/^  Lisp_Object f_Vthis_command_keys_shift_translated;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vthis_original_command	globals.h	/^  Lisp_Object f_Vthis_original_command;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vthrow_on_input	globals.h	/^  Lisp_Object f_Vthrow_on_input;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vtimer_idle_list	globals.h	/^  Lisp_Object f_Vtimer_idle_list;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vtimer_list	globals.h	/^  Lisp_Object f_Vtimer_list;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vtool_bar_border	globals.h	/^  Lisp_Object f_Vtool_bar_border;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vtool_bar_button_margin	globals.h	/^  Lisp_Object f_Vtool_bar_button_margin;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vtool_bar_mode	globals.h	/^  Lisp_Object f_Vtool_bar_mode;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vtool_bar_separator_image_expression	globals.h	/^  Lisp_Object f_Vtool_bar_separator_image_expression;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vtool_bar_style	globals.h	/^  Lisp_Object f_Vtool_bar_style;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vtop_level	globals.h	/^  Lisp_Object f_Vtop_level;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vtransient_mark_mode	globals.h	/^  Lisp_Object f_Vtransient_mark_mode;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vtranslation_hash_table_vector	globals.h	/^  Lisp_Object f_Vtranslation_hash_table_vector;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vtranslation_table_for_input	globals.h	/^  Lisp_Object f_Vtranslation_table_for_input;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vtranslation_table_vector	globals.h	/^  Lisp_Object f_Vtranslation_table_vector;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vtruncate_partial_width_windows	globals.h	/^  Lisp_Object f_Vtruncate_partial_width_windows;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vtty_defined_color_alist	globals.h	/^  Lisp_Object f_Vtty_defined_color_alist;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vtty_erase_char	globals.h	/^  Lisp_Object f_Vtty_erase_char;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vundo_outer_limit	globals.h	/^  Lisp_Object f_Vundo_outer_limit;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vundo_outer_limit_function	globals.h	/^  Lisp_Object f_Vundo_outer_limit_function;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vunicode_category_table	globals.h	/^  Lisp_Object f_Vunicode_category_table;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vunread_command_events	globals.h	/^  Lisp_Object f_Vunread_command_events;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vunread_input_method_events	globals.h	/^  Lisp_Object f_Vunread_input_method_events;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vunread_post_input_method_events	globals.h	/^  Lisp_Object f_Vunread_post_input_method_events;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vuser_full_name	globals.h	/^  Lisp_Object f_Vuser_full_name;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vuser_init_file	globals.h	/^  Lisp_Object f_Vuser_init_file;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vuser_login_name	globals.h	/^  Lisp_Object f_Vuser_login_name;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vuser_real_login_name	globals.h	/^  Lisp_Object f_Vuser_real_login_name;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vuse_default_ascent	globals.h	/^  Lisp_Object f_Vuse_default_ascent;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vvalues	globals.h	/^  Lisp_Object f_Vvalues;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vvertical_centering_font_regexp	globals.h	/^  Lisp_Object f_Vvertical_centering_font_regexp;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vvoid_text_area_pointer	globals.h	/^  Lisp_Object f_Vvoid_text_area_pointer;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vwhere_is_preferred_modifier	globals.h	/^  Lisp_Object f_Vwhere_is_preferred_modifier;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vwhile_no_input_ignore_events	globals.h	/^  Lisp_Object f_Vwhile_no_input_ignore_events;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vwindow_combination_limit	globals.h	/^  Lisp_Object f_Vwindow_combination_limit;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vwindow_combination_resize	globals.h	/^  Lisp_Object f_Vwindow_combination_resize;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vwindow_configuration_change_hook	globals.h	/^  Lisp_Object f_Vwindow_configuration_change_hook;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vwindow_persistent_parameters	globals.h	/^  Lisp_Object f_Vwindow_persistent_parameters;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vwindow_point_insertion_type	globals.h	/^  Lisp_Object f_Vwindow_point_insertion_type;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vwindow_scroll_functions	globals.h	/^  Lisp_Object f_Vwindow_scroll_functions;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vwindow_size_change_functions	globals.h	/^  Lisp_Object f_Vwindow_size_change_functions;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vwindow_system_version	globals.h	/^  Lisp_Object f_Vwindow_system_version;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vword_combining_categories	globals.h	/^  Lisp_Object f_Vword_combining_categories;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vword_separating_categories	globals.h	/^  Lisp_Object f_Vword_separating_categories;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vwrap_prefix	globals.h	/^  Lisp_Object f_Vwrap_prefix;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vwrite_region_annotate_functions	globals.h	/^  Lisp_Object f_Vwrite_region_annotate_functions;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vwrite_region_annotations_so_far	globals.h	/^  Lisp_Object f_Vwrite_region_annotations_so_far;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vwrite_region_post_annotation_function	globals.h	/^  Lisp_Object f_Vwrite_region_post_annotation_function;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vxft_settings	globals.h	/^  Lisp_Object f_Vxft_settings;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vx_alt_keysym	globals.h	/^  Lisp_Object f_Vx_alt_keysym;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vx_bitmap_file_path	globals.h	/^  Lisp_Object f_Vx_bitmap_file_path;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vx_ctrl_keysym	globals.h	/^  Lisp_Object f_Vx_ctrl_keysym;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vx_cursor_fore_pixel	globals.h	/^  Lisp_Object f_Vx_cursor_fore_pixel;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vx_hourglass_pointer_shape	globals.h	/^  Lisp_Object f_Vx_hourglass_pointer_shape;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vx_hyper_keysym	globals.h	/^  Lisp_Object f_Vx_hyper_keysym;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vx_keysym_table	globals.h	/^  Lisp_Object f_Vx_keysym_table;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vx_lost_selection_functions	globals.h	/^  Lisp_Object f_Vx_lost_selection_functions;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vx_max_tooltip_size	globals.h	/^  Lisp_Object f_Vx_max_tooltip_size;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vx_meta_keysym	globals.h	/^  Lisp_Object f_Vx_meta_keysym;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vx_mode_pointer_shape	globals.h	/^  Lisp_Object f_Vx_mode_pointer_shape;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vx_nontext_pointer_shape	globals.h	/^  Lisp_Object f_Vx_nontext_pointer_shape;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vx_no_window_manager	globals.h	/^  Lisp_Object f_Vx_no_window_manager;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vx_pixel_size_width_font_regexp	globals.h	/^  Lisp_Object f_Vx_pixel_size_width_font_regexp;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vx_pointer_shape	globals.h	/^  Lisp_Object f_Vx_pointer_shape;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vx_resource_class	globals.h	/^  Lisp_Object f_Vx_resource_class;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vx_resource_name	globals.h	/^  Lisp_Object f_Vx_resource_name;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vx_select_enable_clipboard_manager	globals.h	/^  Lisp_Object f_Vx_select_enable_clipboard_manager;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vx_sensitive_text_pointer_shape	globals.h	/^  Lisp_Object f_Vx_sensitive_text_pointer_shape;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vx_sent_selection_functions	globals.h	/^  Lisp_Object f_Vx_sent_selection_functions;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vx_session_id	globals.h	/^  Lisp_Object f_Vx_session_id;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vx_session_previous_id	globals.h	/^  Lisp_Object f_Vx_session_previous_id;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vx_super_keysym	globals.h	/^  Lisp_Object f_Vx_super_keysym;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vx_toolkit_scroll_bars	globals.h	/^  Lisp_Object f_Vx_toolkit_scroll_bars;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vx_window_bottom_edge_shape	globals.h	/^  Lisp_Object f_Vx_window_bottom_edge_shape;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vx_window_bottom_left_corner_shape	globals.h	/^  Lisp_Object f_Vx_window_bottom_left_corner_shape;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vx_window_bottom_right_corner_shape	globals.h	/^  Lisp_Object f_Vx_window_bottom_right_corner_shape;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vx_window_horizontal_drag_shape	globals.h	/^  Lisp_Object f_Vx_window_horizontal_drag_shape;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vx_window_left_edge_shape	globals.h	/^  Lisp_Object f_Vx_window_left_edge_shape;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vx_window_right_edge_shape	globals.h	/^  Lisp_Object f_Vx_window_right_edge_shape;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vx_window_top_edge_shape	globals.h	/^  Lisp_Object f_Vx_window_top_edge_shape;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vx_window_top_left_corner_shape	globals.h	/^  Lisp_Object f_Vx_window_top_left_corner_shape;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vx_window_top_right_corner_shape	globals.h	/^  Lisp_Object f_Vx_window_top_right_corner_shape;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_Vx_window_vertical_drag_shape	globals.h	/^  Lisp_Object f_Vx_window_vertical_drag_shape;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_window_resize_pixelwise	globals.h	/^  bool f_window_resize_pixelwise;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_words_include_escapes	globals.h	/^  bool f_words_include_escapes;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_write_region_inhibit_fsync	globals.h	/^  bool f_write_region_inhibit_fsync;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_xft_font_ascent_descent_override	globals.h	/^  bool f_xft_font_ascent_descent_override;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_x_frame_normalize_before_maximize	globals.h	/^  bool f_x_frame_normalize_before_maximize;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_x_gtk_file_dialog_help_text	globals.h	/^  bool f_x_gtk_file_dialog_help_text;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_x_gtk_show_hidden_files	globals.h	/^  bool f_x_gtk_show_hidden_files;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_x_gtk_use_old_file_dialog	globals.h	/^  bool f_x_gtk_use_old_file_dialog;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_x_gtk_use_system_tooltips	globals.h	/^  bool f_x_gtk_use_system_tooltips;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_x_gtk_use_window_move	globals.h	/^  bool f_x_gtk_use_window_move;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_x_mouse_click_focus_ignore_position	globals.h	/^  bool f_x_mouse_click_focus_ignore_position;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_x_selection_timeout	globals.h	/^  EMACS_INT f_x_selection_timeout;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_x_stretch_cursor_p	globals.h	/^  bool f_x_stretch_cursor_p;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_x_underline_at_descent_line	globals.h	/^  bool f_x_underline_at_descent_line;$/;"	m	struct:emacs_globals	access:public
emacs_globals::f_x_use_underline_position_properties	globals.h	/^  bool f_x_use_underline_position_properties;$/;"	m	struct:emacs_globals	access:public
EMACS_GNUTLS_DEFINED	gnutls.h	20;"	d
emacs_gnutls_deinit	gnutls.c	/^emacs_gnutls_deinit (Lisp_Object proc)$/;"	f	signature:(Lisp_Object proc)
emacs_gnutls_deinit	gnutls.h	/^extern Lisp_Object emacs_gnutls_deinit (Lisp_Object);$/;"	p	signature:(Lisp_Object)
emacs_gnutls_global_init	gnutls.c	/^emacs_gnutls_global_init (void)$/;"	f	signature:(void)
emacs_gnutls_global_init	gnutls.h	/^extern Lisp_Object emacs_gnutls_global_init (void);$/;"	p	signature:(void)
emacs_gnutls_global_init	sysdep.c	103;"	d	file:
emacs_gnutls_handle_error	gnutls.c	/^emacs_gnutls_handle_error (gnutls_session_t session, int err)$/;"	f	file:	signature:(gnutls_session_t session, int err)
emacs_gnutls_handle_error	gnutls.c	/^static bool emacs_gnutls_handle_error (gnutls_session_t, int);$/;"	p	file:	signature:(gnutls_session_t, int)
emacs_gnutls_handshake	gnutls.c	/^emacs_gnutls_handshake (struct Lisp_Process *proc)$/;"	f	file:	signature:(struct Lisp_Process *proc)
emacs_gnutls_nonblock_errno	gnutls.c	/^emacs_gnutls_nonblock_errno (gnutls_transport_ptr_t ptr)$/;"	f	file:	signature:(gnutls_transport_ptr_t ptr)
emacs_gnutls_pull	w32.c	/^emacs_gnutls_pull (gnutls_transport_ptr_t p, void* buf, size_t sz)$/;"	f	signature:(gnutls_transport_ptr_t p, void* buf, size_t sz)
emacs_gnutls_pull	w32.h	/^extern ssize_t emacs_gnutls_pull (gnutls_transport_ptr_t p,$/;"	p	signature:(gnutls_transport_ptr_t p, void* buf, size_t sz)
emacs_gnutls_push	w32.c	/^emacs_gnutls_push (gnutls_transport_ptr_t p, const void* buf, size_t sz)$/;"	f	signature:(gnutls_transport_ptr_t p, const void* buf, size_t sz)
emacs_gnutls_push	w32.h	/^extern ssize_t emacs_gnutls_push (gnutls_transport_ptr_t p,$/;"	p	signature:(gnutls_transport_ptr_t p, const void* buf, size_t sz)
emacs_gnutls_read	gnutls.c	/^emacs_gnutls_read (struct Lisp_Process *proc, char *buf, ptrdiff_t nbyte)$/;"	f	signature:(struct Lisp_Process *proc, char *buf, ptrdiff_t nbyte)
emacs_gnutls_read	gnutls.h	/^emacs_gnutls_read (struct Lisp_Process *proc, char *buf, ptrdiff_t nbyte);$/;"	p	signature:(struct Lisp_Process *proc, char *buf, ptrdiff_t nbyte)
emacs_gnutls_record_check_pending	gnutls.c	/^emacs_gnutls_record_check_pending (gnutls_session_t state)$/;"	f	signature:(gnutls_session_t state)
emacs_gnutls_record_check_pending	gnutls.h	/^extern ptrdiff_t emacs_gnutls_record_check_pending (gnutls_session_t state);$/;"	p	signature:(gnutls_session_t state)
emacs_gnutls_transport_set_errno	gnutls.c	/^emacs_gnutls_transport_set_errno (gnutls_session_t state, int err)$/;"	f	signature:(gnutls_session_t state, int err)
emacs_gnutls_transport_set_errno	gnutls.h	/^extern void emacs_gnutls_transport_set_errno (gnutls_session_t state, int err);$/;"	p	signature:(gnutls_session_t state, int err)
emacs_gnutls_write	gnutls.c	/^emacs_gnutls_write (struct Lisp_Process *proc, const char *buf, ptrdiff_t nbyte)$/;"	f	signature:(struct Lisp_Process *proc, const char *buf, ptrdiff_t nbyte)
emacs_gnutls_write	gnutls.h	/^emacs_gnutls_write (struct Lisp_Process *proc, const char *buf, ptrdiff_t nbyte);$/;"	p	signature:(struct Lisp_Process *proc, const char *buf, ptrdiff_t nbyte)
EMACS_INDENT_H	indent.h	20;"	d
emacs_init_function	emacs-module.c	/^typedef int (*emacs_init_function) (struct emacs_runtime *);$/;"	t	file:
EMACS_INTERVALS_H	intervals.h	20;"	d
emacs_intr_read	sysdep.c	/^emacs_intr_read (int fd, void *buf, ptrdiff_t nbyte, bool interruptible)$/;"	f	file:	signature:(int fd, void *buf, ptrdiff_t nbyte, bool interruptible)
EMACS_KEYBOARD_H	keyboard.h	21;"	d
EMACS_LCONTROL	w32fns.c	2797;"	d	file:
EMACS_LISP_H	lisp.h	22;"	d
EMACS_LMENU	w32fns.c	2799;"	d	file:
emacs_localtime_rz	editfns.c	/^emacs_localtime_rz (timezone_t tz, time_t const *t, struct tm *tm)$/;"	f	file:	signature:(timezone_t tz, time_t const *t, struct tm *tm)
EMACS_MACROS_H	macros.h	20;"	d
emacs_mktime_z	editfns.c	/^emacs_mktime_z (timezone_t tz, struct tm *tm)$/;"	f	file:	signature:(timezone_t tz, struct tm *tm)
EMACS_MODULE_H	emacs-module.h	21;"	d
emacs_mule	coding.h	/^      struct emacs_mule_spec emacs_mule;$/;"	m	union:coding_system::__anon152	typeref:struct:coding_system::__anon152::emacs_mule_spec	access:public
emacs_mule_bytes	coding.c	/^char emacs_mule_bytes[256];$/;"	v
emacs_mule_char	coding.c	/^emacs_mule_char (struct coding_system *coding, const unsigned char *src,$/;"	f	file:	signature:(struct coding_system *coding, const unsigned char *src, int *nbytes, int *nchars, int *id, struct composition_status *cmp_status)
emacs_mule_charset	charset.c	/^int emacs_mule_charset[256];$/;"	v
EMACS_MULE_COMPOSITION_END	coding.c	2264;"	d	file:
emacs_mule_finish_composition	coding.c	/^emacs_mule_finish_composition (int *charbuf,$/;"	f	file:	signature:(int *charbuf, struct composition_status *cmp_status)
emacs_mule_id	charset.h	/^  int emacs_mule_id;$/;"	m	struct:charset	access:public
EMACS_MULE_LEADING_CODES	coding.c	2577;"	d	file:
EMACS_MULE_LEADING_CODE_PRIVATE_11	charset.h	516;"	d
EMACS_MULE_LEADING_CODE_PRIVATE_12	charset.h	517;"	d
EMACS_MULE_LEADING_CODE_PRIVATE_21	charset.h	518;"	d
EMACS_MULE_LEADING_CODE_PRIVATE_22	charset.h	519;"	d
EMACS_MULE_MAYBE_FINISH_COMPOSITION	coding.c	2325;"	d	file:
emacs_mule_spec	coding.h	/^struct emacs_mule_spec$/;"	s
emacs_mule_spec::cmp_status	coding.h	/^  struct composition_status cmp_status;$/;"	m	struct:emacs_mule_spec	typeref:struct:emacs_mule_spec::composition_status	access:public
emacs_nmemftime	editfns.c	/^emacs_nmemftime (char *s, size_t maxsize, const char *format,$/;"	f	file:	signature:(char *s, size_t maxsize, const char *format, size_t format_len, const struct tm *tp, timezone_t tz, int ns)
EMACS_NOEXCEPT	emacs-module.h	31;"	d
EMACS_NOEXCEPT	emacs-module.h	33;"	d
EMACS_NOTIFICATION_MSG	w32fns.c	9901;"	d	file:
emacs_open	lisp.h	/^extern int emacs_open (const char *, int, int);$/;"	p	signature:(const char *, int, int)
emacs_open	sysdep.c	/^emacs_open (const char *file, int oflags, int mode)$/;"	f	signature:(const char *file, int oflags, int mode)
emacs_options	xterm.c	/^static XrmOptionDescRec emacs_options[] = {$/;"	v	file:
emacs_perror	lisp.h	/^extern void emacs_perror (char const *);$/;"	p	signature:(char const *)
emacs_perror	sysdep.c	/^emacs_perror (char const *message)$/;"	f	signature:(char const *message)
emacs_pipe	lisp.h	/^extern int emacs_pipe (int[2]);$/;"	p	signature:(int[2])
emacs_pipe	sysdep.c	/^emacs_pipe (int fd[2])$/;"	f	signature:(int fd[2])
EMACS_PROCESS_H	process.h	20;"	d
emacs_program	xsmfns.c	/^static char *emacs_program;$/;"	v	file:
EMACS_PURESIZE_H	puresize.h	20;"	d
emacs_raise	syssignal.h	73;"	d
EMACS_RCONTROL	w32fns.c	2798;"	d	file:
emacs_read	lisp.h	/^extern ptrdiff_t emacs_read (int, void *, ptrdiff_t);$/;"	p	signature:(int, void *, ptrdiff_t)
emacs_read	sysdep.c	/^emacs_read (int fd, void *buf, ptrdiff_t nbyte)$/;"	f	signature:(int fd, void *buf, ptrdiff_t nbyte)
emacs_readlinkat	fileio.c	/^emacs_readlinkat (int fd, char const *filename)$/;"	f	signature:(int fd, char const *filename)
emacs_readlinkat	lisp.h	/^extern Lisp_Object emacs_readlinkat (int, const char *);$/;"	p	signature:(int, const char *)
emacs_read_quit	lisp.h	/^extern ptrdiff_t emacs_read_quit (int, void *, ptrdiff_t);$/;"	p	signature:(int, void *, ptrdiff_t)
emacs_read_quit	sysdep.c	/^emacs_read_quit (int fd, void *buf, ptrdiff_t nbyte)$/;"	f	signature:(int fd, void *buf, ptrdiff_t nbyte)
EMACS_REGION_CACHE_H	region-cache.h	22;"	d
emacs_re_max_failures	regex.c	/^size_t emacs_re_max_failures = 40000;$/;"	v
emacs_re_max_failures	regex.c	/^size_t emacs_re_max_failures = 4000;$/;"	v
emacs_re_safe_alloca	regex.c	/^ptrdiff_t emacs_re_safe_alloca = MAX_ALLOCA;$/;"	v
EMACS_RMENU	w32fns.c	2800;"	d	file:
emacs_root_dir	lisp.h	/^extern char *emacs_root_dir (void);$/;"	p	signature:(void)
emacs_root_dir	w32.c	/^emacs_root_dir (void)$/;"	f	signature:(void)
emacs_runtime	emacs-module.h	/^struct emacs_runtime$/;"	s
emacs_runtime::private_members	emacs-module.h	/^  struct emacs_runtime_private *private_members;$/;"	m	struct:emacs_runtime	typeref:struct:emacs_runtime::emacs_runtime_private	access:public
emacs_runtime::size	emacs-module.h	/^  ptrdiff_t size;$/;"	m	struct:emacs_runtime	access:public
emacs_runtime_private	emacs-module.c	/^struct emacs_runtime_private$/;"	s	file:
emacs_runtime_private::env	emacs-module.c	/^  emacs_env *env;$/;"	m	struct:emacs_runtime_private	file:	access:public
emacs_scroll_step	globals.h	825;"	d
emacs_setenv_TZ	conf_post.h	/^extern int emacs_setenv_TZ (char const *);$/;"	p	signature:(char const *)
emacs_setenv_TZ	editfns.c	/^emacs_setenv_TZ (const char *tzstring)$/;"	f	signature:(const char *tzstring)
emacs_setlocale	sysdep.c	/^emacs_setlocale (int category, char const *locale)$/;"	f	file:	signature:(int category, char const *locale)
emacs_set_tty	sysdep.c	/^emacs_set_tty (int fd, struct emacs_tty *settings, bool flushp)$/;"	f	signature:(int fd, struct emacs_tty *settings, bool flushp)
emacs_sigaction_flags	sysdep.c	/^emacs_sigaction_flags (void)$/;"	f	file:	signature:(void)
emacs_sigaction_init	sysdep.c	/^emacs_sigaction_init (struct sigaction *action, signal_handler_t handler)$/;"	f	signature:(struct sigaction *action, signal_handler_t handler)
emacs_sigaction_init	syssignal.h	/^extern void emacs_sigaction_init (struct sigaction *, signal_handler_t);$/;"	p	signature:(struct sigaction *, signal_handler_t)
emacs_strerror	emacs.c	/^emacs_strerror (int error_number)$/;"	f	signature:(int error_number)
emacs_strerror	lisp.h	/^extern char *emacs_strerror (int);$/;"	p	signature:(int)
emacs_subr	lisp.h	/^typedef emacs_value (*emacs_subr) (emacs_env *, ptrdiff_t,$/;"	t
EMACS_SYNTAX_H	syntax.h	22;"	d
EMACS_SYSSIGNAL_H	syssignal.h	21;"	d
EMACS_SYSSTDIO_H	sysstdio.h	21;"	d
EMACS_SYSTIME_H	systime.h	20;"	d
EMACS_SYSTTY_H	systty.h	20;"	d
EMACS_SYSWAIT_H	syswait.h	24;"	d
EMACS_TERMCHAR_H	termchar.h	20;"	d
EMACS_TERMHOOKS_H	termhooks.h	22;"	d
EMACS_TERMOPTS_H	termopts.h	21;"	d
EMACS_TPARAM_H	tparam.h	21;"	d
emacs_tputs	cm.h	163;"	d
EMACS_TRAY_NOTIFICATION_ID	w32fns.c	9900;"	d	file:
emacs_tty	systty.h	/^struct emacs_tty {$/;"	s
emacs_tty::main	systty.h	/^  struct termios main;$/;"	m	struct:emacs_tty	typeref:struct:emacs_tty::termios	access:public
EMACS_UNEXEC_H	unexec.h	2;"	d
emacs_value	emacs-module.h	/^typedef struct emacs_value_tag *emacs_value;$/;"	t	typeref:struct:emacs_value_tag
emacs_variadic_function	emacs-module.h	/^enum { emacs_variadic_function = -2 };$/;"	e	enum:__anon149
emacs_version	emacs.c	/^static const char emacs_version[] = PACKAGE_VERSION;$/;"	v	file:
EMACS_W32FONT_H	w32font.h	20;"	d
EMACS_W32GUI_H	w32gui.h	20;"	d
EMACS_W32INEVT_H	w32inevt.h	20;"	d
EMACS_W32_H	w32.h	2;"	d
emacs_write	lisp.h	/^extern ptrdiff_t emacs_write (int, void const *, ptrdiff_t);$/;"	p	signature:(int, void const *, ptrdiff_t)
emacs_write	sysdep.c	/^emacs_write (int fd, void const *buf, ptrdiff_t nbyte)$/;"	f	signature:(int fd, void const *buf, ptrdiff_t nbyte)
emacs_write_quit	lisp.h	/^extern ptrdiff_t emacs_write_quit (int, void const *, ptrdiff_t);$/;"	p	signature:(int, void const *, ptrdiff_t)
emacs_write_quit	sysdep.c	/^emacs_write_quit (int fd, void const *buf, ptrdiff_t nbyte)$/;"	f	signature:(int fd, void const *buf, ptrdiff_t nbyte)
emacs_write_sig	lisp.h	/^extern ptrdiff_t emacs_write_sig (int, void const *, ptrdiff_t);$/;"	p	signature:(int, void const *, ptrdiff_t)
emacs_write_sig	sysdep.c	/^emacs_write_sig (int fd, void const *buf, ptrdiff_t nbyte)$/;"	f	signature:(int fd, void const *buf, ptrdiff_t nbyte)
emacs_zone	unexmacosx.c	/^static malloc_zone_t *emacs_zone;$/;"	v	file:
embedded_utf_8	coding.h	/^  bool_bf embedded_utf_8 : 1;$/;"	m	struct:iso_2022_spec	access:public
emboss_matrix	image.c	/^static int emboss_matrix[9] = {$/;"	v	file:
EMIT_FOUR_BYTES	coding.c	797;"	d	file:
EMIT_ONE_ASCII_BYTE	coding.c	727;"	d	file:
EMIT_ONE_BYTE	coding.c	749;"	d	file:
EMIT_THREE_BYTES	coding.c	790;"	d	file:
EMIT_TWO_ASCII_BYTES	coding.c	736;"	d	file:
EMIT_TWO_BYTES	coding.c	766;"	d	file:
empty_indices	nsterm.h	/^  NSMutableSet *empty_indices;$/;"	m	struct:ns_color_table	access:public
empty_line_bits	fringe.c	/^static unsigned short empty_line_bits[] = {$/;"	v	file:
empty_mask	sysdep.c	/^sigset_t empty_mask;$/;"	v
empty_multibyte_string	emacs.c	/^Lisp_Object empty_unibyte_string, empty_multibyte_string;$/;"	v
empty_unibyte_string	emacs.c	/^Lisp_Object empty_unibyte_string, empty_multibyte_string;$/;"	v
emulate_dialog_with_menu	menu.c	/^emulate_dialog_with_menu (struct frame *f, Lisp_Object contents)$/;"	f	file:	signature:(struct frame *f, Lisp_Object contents)
enabled_p	dispextern.h	/^  bool_bf enabled_p : 1;$/;"	m	struct:glyph_row	access:public
enable_multibyte_characters_	buffer.h	/^  Lisp_Object enable_multibyte_characters_;$/;"	m	struct:buffer	access:public
enable_privilege	w32.c	/^enable_privilege (LPCTSTR priv_name, BOOL enable_p, TOKEN_PRIVILEGES *old_priv)$/;"	f	file:	signature:(LPCTSTR priv_name, BOOL enable_p, TOKEN_PRIVILEGES *old_priv)
enable_privilege	w32.c	/^static int enable_privilege (LPCTSTR, BOOL, TOKEN_PRIVILEGES *);$/;"	p	file:	signature:(LPCTSTR, BOOL, TOKEN_PRIVILEGES *)
enable_recursive_minibuffers	globals.h	941;"	d
encoder	charset.c	/^    unsigned short encoder[0x20000];$/;"	m	union:__anon78::__anon79	file:	access:public
encoder	coding.h	/^  bool (*encoder) (struct coding_system *);$/;"	m	struct:coding_system	access:public
encode_char	charset.c	/^encode_char (struct charset *charset, int c)$/;"	f	signature:(struct charset *charset, int c)
encode_char	charset.h	/^extern unsigned encode_char (struct charset *, int);$/;"	p	signature:(struct charset *, int)
ENCODE_CHAR	charset.h	429;"	d
encode_char	font.h	/^  unsigned (*encode_char) (struct font *font, int c);$/;"	m	struct:font_driver	access:public
encode_coding	coding.c	/^encode_coding (struct coding_system *coding)$/;"	f	file:	signature:(struct coding_system *coding)
encode_coding_big5	coding.c	/^encode_coding_big5 (struct coding_system *coding)$/;"	f	file:	signature:(struct coding_system *coding)
encode_coding_ccl	coding.c	/^encode_coding_ccl (struct coding_system *coding)$/;"	f	file:	signature:(struct coding_system *coding)
encode_coding_charset	coding.c	/^encode_coding_charset (struct coding_system *coding)$/;"	f	file:	signature:(struct coding_system *coding)
encode_coding_emacs_mule	coding.c	/^encode_coding_emacs_mule (struct coding_system *coding)$/;"	f	file:	signature:(struct coding_system *coding)
encode_coding_iso_2022	coding.c	/^encode_coding_iso_2022 (struct coding_system *coding)$/;"	f	file:	signature:(struct coding_system *coding)
encode_coding_object	coding.c	/^encode_coding_object (struct coding_system *coding,$/;"	f	signature:(struct coding_system *coding, Lisp_Object src_object, ptrdiff_t from, ptrdiff_t from_byte, ptrdiff_t to, ptrdiff_t to_byte, Lisp_Object dst_object)
encode_coding_object	coding.h	/^extern void encode_coding_object (struct coding_system *,$/;"	p	signature:(struct coding_system *, Lisp_Object, ptrdiff_t, ptrdiff_t, ptrdiff_t, ptrdiff_t, Lisp_Object)
encode_coding_raw_text	coding.c	/^encode_coding_raw_text (struct coding_system *coding)$/;"	f	file:	signature:(struct coding_system *coding)
encode_coding_sjis	coding.c	/^encode_coding_sjis (struct coding_system *coding)$/;"	f	file:	signature:(struct coding_system *coding)
encode_coding_string	coding.h	718;"	d
encode_coding_system	process.h	/^    Lisp_Object encode_coding_system;$/;"	m	struct:Lisp_Process	access:public
encode_coding_utf_16	coding.c	/^encode_coding_utf_16 (struct coding_system *coding)$/;"	f	file:	signature:(struct coding_system *coding)
encode_coding_utf_8	coding.c	/^encode_coding_utf_8 (struct coding_system *coding)$/;"	f	signature:(struct coding_system *coding)
encode_coding_utf_8	coding.h	/^extern bool encode_coding_utf_8 (struct coding_system *);$/;"	p	signature:(struct coding_system *)
ENCODE_COMPOSITION_RULE	coding.c	3322;"	d	file:
encode_current_directory	callproc.c	/^encode_current_directory (void)$/;"	f	signature:(void)
encode_current_directory	process.h	/^extern Lisp_Object encode_current_directory (void);$/;"	p	signature:(void)
ENCODE_DESIGNATION	coding.c	4040;"	d	file:
encode_designation_at_bol	coding.c	/^encode_designation_at_bol (struct coding_system *coding,$/;"	f	file:	signature:(struct coding_system *coding, int *charbuf, int *charbuf_end, unsigned char *dst)
ENCODE_FILE	coding.h	642;"	d
encode_file_name	coding.c	/^encode_file_name (Lisp_Object fname)$/;"	f	signature:(Lisp_Object fname)
encode_file_name	coding.h	/^extern Lisp_Object encode_file_name (Lisp_Object);$/;"	p	signature:(Lisp_Object)
encode_inhibit_flag	coding.c	/^encode_inhibit_flag (Lisp_Object flag)$/;"	f	file:	signature:(Lisp_Object flag)
encode_invocation_designation	coding.c	/^encode_invocation_designation (struct charset *charset,$/;"	f	file:	signature:(struct charset *charset, struct coding_system *coding, unsigned char *dst, ptrdiff_t *p_nchars)
ENCODE_ISO_CHARACTER	coding.c	4228;"	d	file:
ENCODE_ISO_CHARACTER_DIMENSION1	coding.c	4144;"	d	file:
ENCODE_ISO_CHARACTER_DIMENSION2	coding.c	4188;"	d	file:
ENCODE_LOCKING_SHIFT_2	coding.c	4126;"	d	file:
ENCODE_LOCKING_SHIFT_3	coding.c	4133;"	d	file:
ENCODE_MENU_STRING	keyboard.h	369;"	d
ENCODE_MENU_STRING	keyboard.h	371;"	d
ENCODE_MENU_STRING	keyboard.h	373;"	d
ENCODE_MENU_STRING	keyboard.h	376;"	d
encode_menu_string	menu.c	/^encode_menu_string (Lisp_Object str)$/;"	f	file:	signature:(Lisp_Object str)
ENCODE_RESET_PLANE_AND_REGISTER	coding.c	4313;"	d	file:
ENCODE_SHIFT_IN	coding.c	4112;"	d	file:
ENCODE_SHIFT_OUT	coding.c	4119;"	d	file:
ENCODE_SINGLE_SHIFT_2	coding.c	4088;"	d	file:
ENCODE_SINGLE_SHIFT_3	coding.c	4098;"	d	file:
ENCODE_SYSTEM	coding.h	650;"	d
encode_terminal_code	term.c	/^encode_terminal_code (struct glyph *src, int src_len,$/;"	f	signature:(struct glyph *src, int src_len, struct coding_system *coding)
encode_terminal_code	termhooks.h	/^extern unsigned char *encode_terminal_code (struct glyph *, int,$/;"	p	signature:(struct glyph *, int, struct coding_system *)
encode_terminal_dst	term.c	/^static unsigned char *encode_terminal_dst;$/;"	v	file:
encode_terminal_dst_size	term.c	/^static ptrdiff_t encode_terminal_dst_size;$/;"	v	file:
encode_terminal_src	term.c	/^static unsigned char *encode_terminal_src;$/;"	v	file:
encode_terminal_src_size	term.c	/^static ptrdiff_t encode_terminal_src_size;$/;"	v	file:
ENCODE_UTF_8	coding.h	663;"	d
encoding	sound.c	/^  u_int32_t encoding;$/;"	m	struct:au_header	file:	access:public
encoding_buf	process.h	/^    Lisp_Object encoding_buf;$/;"	m	struct:Lisp_Process	access:public
encoding_charset	font.h	/^  int encoding_charset;$/;"	m	struct:font	access:public
end	alloc.c	/^  void *start, *end;$/;"	m	struct:mem_node	file:	access:public
end	buffer.c	/^  (Lisp_Object beg, Lisp_Object end, Lisp_Object buffer,$/;"	v
end	buffer.c	/^  (Lisp_Object overlay, Lisp_Object beg, Lisp_Object end, Lisp_Object buffer)$/;"	v
end	buffer.c	/^  ptrdiff_t beg, end;$/;"	m	struct:sortvec	file:	access:public
end	casefiddle.c	/^  (Lisp_Object beg, Lisp_Object end, Lisp_Object region_noncontiguous_p)$/;"	v
end	charset.c	/^  (Lisp_Object beg, Lisp_Object end, Lisp_Object table)$/;"	v
end	coding.c	/^  (Lisp_Object start, Lisp_Object end, Lisp_Object coding_system, Lisp_Object destination)$/;"	v
end	coding.c	/^  (Lisp_Object start, Lisp_Object end, Lisp_Object coding_system,$/;"	v
end	coding.c	/^  (Lisp_Object start, Lisp_Object end, Lisp_Object coding_system_list)$/;"	v
end	coding.c	/^  (Lisp_Object start, Lisp_Object end, Lisp_Object exclude)$/;"	v
end	coding.c	/^  (Lisp_Object start, Lisp_Object end, Lisp_Object highest)$/;"	v
end	composite.c	/^  (Lisp_Object start, Lisp_Object end, Lisp_Object components, Lisp_Object modification_func)$/;"	v
end	composite.c	/^  (Lisp_Object string, Lisp_Object start, Lisp_Object end,$/;"	v
end	dispextern.h	/^  struct display_pos end;$/;"	m	struct:glyph_row	typeref:struct:glyph_row::display_pos	access:public
end	editfns.c	/^  (Lisp_Object start, Lisp_Object end, Lisp_Object fromchar, Lisp_Object tochar, Lisp_Object noundo)$/;"	v
end	editfns.c	/^  (Lisp_Object start, Lisp_Object end, register Lisp_Object table)$/;"	v
end	fileio.c	/^  (Lisp_Object filename, Lisp_Object visit, Lisp_Object beg, Lisp_Object end, Lisp_Object replace)$/;"	v
end	fileio.c	/^  (Lisp_Object start, Lisp_Object end, Lisp_Object filename, Lisp_Object append,$/;"	v
end	fns.c	/^  (Lisp_Object algorithm, Lisp_Object object, Lisp_Object start, Lisp_Object end, Lisp_Object binary)$/;"	v
end	fns.c	/^  (Lisp_Object beg, Lisp_Object end, Lisp_Object no_line_break)$/;"	v
end	fns.c	/^  (Lisp_Object object, Lisp_Object start, Lisp_Object end, Lisp_Object coding_system, Lisp_Object noerror)$/;"	v
end	keyboard.c	/^  int start, end;$/;"	m	struct:keyremap	file:	access:public
end	lisp.h	/^    Lisp_Object end;$/;"	m	struct:Lisp_Overlay	access:public
end	lread.c	/^  (Lisp_Object start, Lisp_Object end, Lisp_Object printflag, Lisp_Object read_function)$/;"	v
end	ralloc.c	/^  void *end;$/;"	m	struct:heap	file:	access:public
end	regex.h	/^  regoff_t *end;$/;"	m	struct:re_registers	access:public
end	textprop.c	/^  (Lisp_Object start, Lisp_Object end, Lisp_Object face,$/;"	v
end	textprop.c	/^  (Lisp_Object start, Lisp_Object end, Lisp_Object list_of_properties, Lisp_Object object)$/;"	v
end	textprop.c	/^  (Lisp_Object start, Lisp_Object end, Lisp_Object properties, Lisp_Object object)$/;"	v
end	textprop.c	/^  (Lisp_Object start, Lisp_Object end, Lisp_Object properties,$/;"	v
end	textprop.c	/^  (Lisp_Object start, Lisp_Object end, Lisp_Object property, Lisp_Object value, Lisp_Object object)$/;"	v
end	textprop.c	/^  (Lisp_Object start, Lisp_Object end, Lisp_Object property,$/;"	v
end	w32term.h	/^  int start, end;$/;"	m	struct:scroll_bar	access:public
end	xml.c	/^  (Lisp_Object start, Lisp_Object end, Lisp_Object base_url, Lisp_Object discard_comments)$/;"	v
end	xterm.h	/^  int start, end;$/;"	m	struct:scroll_bar	access:public
end1	editfns.c	/^  (Lisp_Object buffer1, Lisp_Object start1, Lisp_Object end1, Lisp_Object buffer2, Lisp_Object start2, Lisp_Object end2)$/;"	v
end1	fns.c	/^  (Lisp_Object str1, Lisp_Object start1, Lisp_Object end1, Lisp_Object str2,$/;"	v
end2	fns.c	/^   Lisp_Object start2, Lisp_Object end2, Lisp_Object ignore_case)$/;"	v
endbuf	regex.c	/^  endbuf,$/;"	e	enum:__anon144	file:
endian	coding.h	/^  enum utf_16_endian_type endian;$/;"	m	struct:utf_16_spec	typeref:enum:utf_16_spec::utf_16_endian_type	access:public
endline	regex.c	/^  endline,$/;"	e	enum:__anon144	file:
endr1	editfns.c	/^  (Lisp_Object startr1, Lisp_Object endr1, Lisp_Object startr2, Lisp_Object endr2, Lisp_Object leave_markers)$/;"	v
endr2	editfns.c	/^  (Lisp_Object startr1, Lisp_Object endr1, Lisp_Object startr2, Lisp_Object endr2, Lisp_Object leave_markers)$/;"	v
ends_at_zv_p	dispextern.h	/^  bool_bf ends_at_zv_p : 1;$/;"	m	struct:glyph_row	access:public
ends_in_ellipsis_p	dispextern.h	/^  bool_bf ends_in_ellipsis_p : 1;$/;"	m	struct:glyph_row	access:public
ends_in_middle_of_char_p	dispextern.h	/^  bool_bf ends_in_middle_of_char_p : 1;$/;"	m	struct:glyph_row	access:public
ends_in_newline_from_string_p	dispextern.h	/^  bool_bf ends_in_newline_from_string_p : 1;$/;"	m	struct:glyph_row	access:public
end_charpos	dispextern.h	/^    ptrdiff_t end_charpos;$/;"	m	struct:it::iterator_stack_entry	access:public
end_charpos	dispextern.h	/^  ptrdiff_t end_charpos;$/;"	m	struct:it	access:public
end_for_frame	font.h	/^  int (*end_for_frame) (struct frame *f);$/;"	m	struct:font_driver	access:public
end_info	image.c	/^  png_info *end_info;$/;"	m	struct:png_load_context	file:	access:public
end_kbd_macro	macros.c	/^end_kbd_macro (void)$/;"	f	signature:(void)
end_kbd_macro	macros.h	/^extern void end_kbd_macro (void);$/;"	p	signature:(void)
END_NONSTICKY_P	intervals.h	217;"	d
end_of_box_run_p	dispextern.h	/^  bool_bf end_of_box_run_p : 1;$/;"	m	struct:it	access:public
end_of_file_error	lread.c	/^end_of_file_error (void)$/;"	f	file:	signature:(void)
END_SESSION_EVENT	termhooks.h	/^  END_SESSION_EVENT,		\/* The user is logging out or shutting down.  *\/$/;"	e	enum:event_kind
end_unchanged	buffer.h	/^    ptrdiff_t end_unchanged;$/;"	m	struct:buffer_text	access:public
END_UNCHANGED	buffer.h	211;"	d
end_unchanged	region-cache.c	/^  ptrdiff_t beg_unchanged, end_unchanged;$/;"	m	struct:region_cache	file:	access:public
enlarge_buffer_text	buffer.c	/^enlarge_buffer_text (struct buffer *b, ptrdiff_t delta)$/;"	f	signature:(struct buffer *b, ptrdiff_t delta)
enlarge_buffer_text	buffer.h	/^extern void enlarge_buffer_text (struct buffer *, ptrdiff_t);$/;"	p	signature:(struct buffer *, ptrdiff_t)
ensure_echo_area_buffers	xdisp.c	/^ensure_echo_area_buffers (void)$/;"	f	file:	signature:(void)
ENSURE_FAIL_STACK	regex.c	1378;"	d	file:
ensure_menu_items	menu.c	/^ensure_menu_items (int items)$/;"	f	file:	signature:(int items)
enter_crit	w32term.h	700;"	d
entity	font.c	/^  Lisp_Object entity;$/;"	m	struct:font_sort_data	file:	access:public
entry	charset.c	/^  } entry[0x10000];$/;"	m	struct:charset_map_entries	typeref:struct:charset_map_entries::__anon80	file:	access:public
entry	w32term.h	/^  PALETTEENTRY entry;$/;"	m	struct:w32_palette_entry	access:public
entry_address	unexelf.c	/^entry_address (void *section_h, ptrdiff_t idx, ptrdiff_t entsize)$/;"	f	file:	signature:(void *section_h, ptrdiff_t idx, ptrdiff_t entsize)
EnumDisplayMonitors_Proc	w32fns.c	/^typedef BOOL (WINAPI * EnumDisplayMonitors_Proc)$/;"	t	file:
EnumSystemLocales	w32term.h	827;"	d
EnumSystemLocales	w32term.h	829;"	d
EnumSystemLocalesA	w32term.h	/^BOOL WINAPI EnumSystemLocalesA(LOCALE_ENUMPROCA,DWORD);$/;"	p	signature:(LOCALE_ENUMPROCA,DWORD)
EnumSystemLocalesW	w32term.h	/^BOOL WINAPI EnumSystemLocalesW(LOCALE_ENUMPROCW,DWORD);$/;"	p	signature:(LOCALE_ENUMPROCW,DWORD)
ENUM_BF	lisp.h	401;"	d
ENUM_BF	lisp.h	403;"	d
enum_codepage_fn	w32proc.c	/^enum_codepage_fn (LPTSTR codepageNum)$/;"	f	file:	signature:(LPTSTR codepageNum)
enum_display_monitors_fn	w32fns.c	/^EnumDisplayMonitors_Proc enum_display_monitors_fn = NULL;$/;"	v
enum_locale_callback	w32select.c	/^enum_locale_callback (\/*const*\/ char* loc_string)$/;"	f	file:	signature:( char* loc_string)
enum_locale_callback	w32select.c	/^static BOOL WINAPI enum_locale_callback (\/*const*\/ char* loc_string);$/;"	p	file:	signature:( char* loc_string)
enum_locale_fn	w32proc.c	/^enum_locale_fn (LPTSTR localeNum)$/;"	f	file:	signature:(LPTSTR localeNum)
env	emacs-module.c	/^  emacs_env *env;$/;"	m	struct:emacs_runtime_private	file:	access:public
eof_ic	ccl.c	/^    int eof_ic;			\/* Instruction Counter to jump on EOF.  *\/$/;"	m	struct:ccl_prog_stack	file:	access:public
eof_ic	ccl.h	/^  int eof_ic;			\/* Instruction Counter for end-of-file$/;"	m	struct:ccl_program	access:public
eol_mnemonic_dos	globals.h	791;"	d
eol_mnemonic_mac	globals.h	793;"	d
eol_mnemonic_undecided	globals.h	795;"	d
eol_mnemonic_unix	globals.h	797;"	d
eol_pos	dispextern.h	/^  struct text_pos eol_pos;$/;"	m	struct:it	typeref:struct:it::text_pos	access:public
eol_seen	coding.h	/^  unsigned eol_seen : 3;$/;"	m	struct:coding_system	access:public
EOL_SEEN_CR	coding.c	1122;"	d	file:
EOL_SEEN_CRLF	coding.c	1123;"	d	file:
EOL_SEEN_LF	coding.c	1121;"	d	file:
EOL_SEEN_NONE	coding.c	1120;"	d	file:
EQ	lisp.h	/^(EQ) (Lisp_Object x, Lisp_Object y)$/;"	f	signature:(Lisp_Object x, Lisp_Object y)
EQ	lisp.h	355;"	d
EQUAL	editfns.c	3107;"	d	file:
EqualSid_Proc	w32.c	/^typedef BOOL (WINAPI * EqualSid_Proc) ($/;"	t	file:
EQUAL_INCLUDING_PROPERTIES	fns.c	/^enum equal_kind { EQUAL_NO_QUIT, EQUAL_PLAIN, EQUAL_INCLUDING_PROPERTIES };$/;"	e	enum:equal_kind	file:
equal_kind	fns.c	/^enum equal_kind { EQUAL_NO_QUIT, EQUAL_PLAIN, EQUAL_INCLUDING_PROPERTIES };$/;"	g	file:
EQUAL_NO_QUIT	fns.c	/^enum equal_kind { EQUAL_NO_QUIT, EQUAL_PLAIN, EQUAL_INCLUDING_PROPERTIES };$/;"	e	enum:equal_kind	file:
equal_no_quit	fns.c	/^equal_no_quit (Lisp_Object o1, Lisp_Object o2)$/;"	f	signature:(Lisp_Object o1, Lisp_Object o2)
equal_no_quit	lisp.h	/^extern bool equal_no_quit (Lisp_Object, Lisp_Object);$/;"	p	signature:(Lisp_Object, Lisp_Object)
EQUAL_PLAIN	fns.c	/^enum equal_kind { EQUAL_NO_QUIT, EQUAL_PLAIN, EQUAL_INCLUDING_PROPERTIES };$/;"	e	enum:equal_kind	file:
equal_sid	w32.c	/^equal_sid (PSID sid1, PSID sid2)$/;"	f	file:	signature:(PSID sid1, PSID sid2)
erase_phys_cursor	dispextern.h	/^extern void erase_phys_cursor (struct window *);$/;"	p	signature:(struct window *)
erase_phys_cursor	xdisp.c	/^erase_phys_cursor (struct window *w)$/;"	f	signature:(struct window *w)
errcode	w32.h	/^  volatile int        errcode;$/;"	m	struct:_child_process	access:public
errnum	w32.c	/^  int errnum;$/;"	m	struct:__anon70	file:	access:public
error	eval.c	/^error (const char *m, ...)$/;"	f	signature:(const char *m, ...)
ERROR0	unexaix.c	102;"	d	file:
ERROR1	unexaix.c	103;"	d	file:
ERROR2	unexaix.c	104;"	d	file:
errorp	insdel.c	/^  bool errorp;$/;"	m	struct:rvoe_arg	file:	access:public
error_cursor	xfns.c	/^  int error_cursor;$/;"	m	struct:mouse_cursor_data	file:	access:public
error_data	thread.h	/^  Lisp_Object error_data;$/;"	m	struct:thread_state	access:public
error_msg	xterm.c	/^static char *error_msg;$/;"	v	file:
error_string	xfns.c	/^  char *error_string;$/;"	m	struct:mouse_cursor_data	file:	access:public
error_symbol	eval.c	/^  (Lisp_Object error_symbol, Lisp_Object data)$/;"	v
error_symbol	thread.c	/^  (Lisp_Object thread, Lisp_Object error_symbol, Lisp_Object data)$/;"	v
error_symbol	thread.h	/^  Lisp_Object error_symbol;$/;"	m	struct:thread_state	access:public
escape_from_edge	editfns.c	/^  (Lisp_Object new_pos, Lisp_Object old_pos, Lisp_Object escape_from_edge,$/;"	v
escape_from_edge	editfns.c	/^  (Lisp_Object pos, Lisp_Object escape_from_edge, Lisp_Object limit)$/;"	v
esctab	termcap.c	/^static const char esctab[]$/;"	v	file:
esprintf	doprnt.c	/^esprintf (char *buf, char const *format, ...)$/;"	f	signature:(char *buf, char const *format, ...)
estimate_mode_line_height	dispextern.h	/^int estimate_mode_line_height (struct frame *, enum face_id);$/;"	p	signature:(struct frame *, enum face_id)
estimate_mode_line_height	xdisp.c	/^estimate_mode_line_height (struct frame *f, enum face_id face_id)$/;"	f	signature:(struct frame *f, enum face_id face_id)
ETAGS	Makefile	/^ETAGS = ..\/lib-src\/etags${EXEEXT}$/;"	m
etc	Makefile	/^etc = ..\/etc$/;"	m
evalcost	cm.c	/^evalcost (int c)$/;"	f	signature:(int c)
evalcost	cm.h	/^extern int evalcost (int c);$/;"	p	signature:(int c)
evalcost	w32console.c	/^evalcost (int c)$/;"	f	signature:(int c)
evalcost	w32console.c	/^int evalcost (int);$/;"	p	file:	signature:(int)
eval_dyn	keyboard.c	/^eval_dyn (Lisp_Object form)$/;"	f	file:	signature:(Lisp_Object form)
eval_sub	eval.c	/^eval_sub (Lisp_Object form)$/;"	f	signature:(Lisp_Object form)
eval_sub	lisp.h	/^extern Lisp_Object eval_sub (Lisp_Object form);$/;"	p	signature:(Lisp_Object form)
evaporate_overlays	buffer.c	/^evaporate_overlays (ptrdiff_t pos)$/;"	f	signature:(ptrdiff_t pos)
evaporate_overlays	buffer.h	/^extern void evaporate_overlays (ptrdiff_t);$/;"	p	signature:(ptrdiff_t)
event	keymap.c	/^  Lisp_Object event;$/;"	m	struct:describe_map_elt	file:	access:public
event	xselect.c	/^    struct selection_input_event event;$/;"	m	struct:selection_event_queue	typeref:struct:selection_event_queue::selection_input_event	file:	access:public
events	systhread.h	/^  void *events[CONDV_MAX];$/;"	m	struct:__anon45	access:public
EVENT_CLICK_COUNT	keyboard.h	394;"	d
EVENT_END	keyboard.h	391;"	d
event_handler_gdk	xterm.c	/^event_handler_gdk (GdkXEvent *gxev, GdkEvent *ev, gpointer data)$/;"	f	file:	signature:(GdkXEvent *gxev, GdkEvent *ev, gpointer data)
EVENT_HAS_PARAMETERS	keyboard.h	382;"	d
event_head	keyboard.c	/^struct event_head$/;"	s	file:
EVENT_HEAD	keyboard.h	386;"	d
event_head::kind	keyboard.c	/^  short kind;$/;"	m	struct:event_head	file:	access:public
event_head::var	keyboard.c	/^  short var;$/;"	m	struct:event_head	file:	access:public
EVENT_HEAD_KIND	keyboard.h	415;"	d
EVENT_INIT	termhooks.h	308;"	d
event_kind	termhooks.h	/^enum event_kind$/;"	g
EVENT_KIND_WIDTH	keyboard.h	/^  ENUM_BF (event_kind) kind : EVENT_KIND_WIDTH;$/;"	m	union:buffered_input_event	access:public
EVENT_KIND_WIDTH	termhooks.h	/^enum { EVENT_KIND_WIDTH = 16 };$/;"	e	enum:__anon71
event_object	thread.h	/^  Lisp_Object event_object;$/;"	m	struct:thread_state	access:public
event_queue	w32inevt.c	/^static INPUT_RECORD event_queue[EVENT_QUEUE_SIZE];$/;"	v	file:
EVENT_QUEUE_SIZE	w32inevt.c	58;"	d	file:
event_record	xterm.c	/^struct record event_record[100];$/;"	v	typeref:struct:record
event_record_index	xterm.c	/^int event_record_index;$/;"	v
EVENT_START	keyboard.h	390;"	d
event_to_kboard	keyboard.c	/^event_to_kboard (struct input_event *event)$/;"	f	file:	signature:(struct input_event *event)
evict_lower_half	profiler.c	/^static void evict_lower_half (log_t *log)$/;"	f	file:	signature:(log_t *log)
evxprintf	doprnt.c	/^evxprintf (char **buf, ptrdiff_t *bufsize,$/;"	f	signature:(char **buf, ptrdiff_t *bufsize, char const *nonheapbuf, ptrdiff_t bufsize_max, char const *format, va_list ap)
exact	gmalloc.c	/^    void *exact;		\/* The address that malloc returned.  *\/$/;"	m	struct:alignlist	file:	access:public
exactn	regex.c	/^  exactn,$/;"	e	enum:__anon144	file:
exact_window_width_line_p	dispextern.h	/^  bool_bf exact_window_width_line_p : 1;$/;"	m	struct:glyph_row	access:public
except_addr	w32fns.c	/^static PVOID except_addr;$/;"	v	file:
except_code	w32fns.c	/^static DWORD except_code;$/;"	v	file:
exclamation_mark_bits	fringe.c	/^static unsigned short exclamation_mark_bits[] = {$/;"	v	file:
exclude_keys	keymap.c	/^static Lisp_Object exclude_keys;$/;"	v	file:
EXCMD	ccl.c	916;"	d	file:
excprec	w32.c	/^PEXCEPTION_RECORD excprec;$/;"	v
excptr	w32.c	/^PEXCEPTION_POINTERS excptr;$/;"	v
execute_charset	regex.c	/^execute_charset (const_re_char **pp, unsigned c, unsigned corig, bool unibyte)$/;"	f	file:	signature:(const_re_char **pp, unsigned c, unsigned corig, bool unibyte)
executing_kbd_macro	macros.c	/^Lisp_Object executing_kbd_macro;$/;"	v
executing_kbd_macro_index	globals.h	827;"	d
executing_kbd_macro_iterations	macros.c	/^EMACS_INT executing_kbd_macro_iterations;$/;"	v
exec_byte_code	bytecode.c	/^exec_byte_code (Lisp_Object bytestr, Lisp_Object vector, Lisp_Object maxdepth,$/;"	f	signature:(Lisp_Object bytestr, Lisp_Object vector, Lisp_Object maxdepth, Lisp_Object args_template, ptrdiff_t nargs, Lisp_Object *args)
exec_byte_code	lisp.h	/^extern Lisp_Object exec_byte_code (Lisp_Object, Lisp_Object, Lisp_Object,$/;"	p	signature:(Lisp_Object, Lisp_Object, Lisp_Object, Lisp_Object, ptrdiff_t, Lisp_Object *)
exec_failed	callproc.c	/^exec_failed (char const *name, int err)$/;"	f	file:	signature:(char const *name, int err)
EXEC_MONITOR_OUTPUT	process.c	/^    EXEC_MONITOR_OUTPUT$/;"	e	enum:__anon48	file:
exec_sentinel	process.c	/^exec_sentinel (Lisp_Object proc, Lisp_Object reason)$/;"	f	file:	signature:(Lisp_Object proc, Lisp_Object reason)
exec_sentinel	process.c	/^static void exec_sentinel (Lisp_Object, Lisp_Object);$/;"	p	file:
exec_sentinel_error_handler	process.c	/^exec_sentinel_error_handler (Lisp_Object error_val)$/;"	f	file:	signature:(Lisp_Object error_val)
EXEEXT	Makefile	/^EXEEXT = $/;"	m
exe_header_t	unexcw.c	/^} exe_header_t;$/;"	t	typeref:struct:__anon2	file:
EXFUN	globals.h	/^_Noreturn EXFUN (Fabort_recursive_edit, 0);$/;"	p	signature:(Fabort_recursive_edit, 0)
EXFUN	globals.h	/^_Noreturn EXFUN (Fexit_recursive_edit, 0);$/;"	p	signature:(Fexit_recursive_edit, 0)
EXFUN	globals.h	/^_Noreturn EXFUN (Fkill_emacs, 1);$/;"	p	signature:(Fkill_emacs, 1)
EXFUN	globals.h	/^_Noreturn EXFUN (Fsignal, 2);$/;"	p	signature:(Fsignal, 2)
EXFUN	globals.h	/^_Noreturn EXFUN (Fthrow, 2);$/;"	p	signature:(Fthrow, 2)
EXFUN	globals.h	/^_Noreturn EXFUN (Ftop_level, 0);$/;"	p	signature:(Ftop_level, 0)
EXFUN	lisp.h	685;"	d
EXIT_CANCELED	process.h	/^  EXIT_CANCELED = 125, \/* Internal error prior to exec attempt.  *\/$/;"	e	enum:__anon133
EXIT_CANNOT_INVOKE	process.h	/^  EXIT_CANNOT_INVOKE = 126, \/* Program located, but not usable.  *\/$/;"	e	enum:__anon133
EXIT_ENOENT	process.h	/^  EXIT_ENOENT = 127 \/* Could not find program to exec.  *\/$/;"	e	enum:__anon133
exp	eval.c	/^     (Lisp_Object exp, Lisp_Object nframes, Lisp_Object base)$/;"	v
expand_and_dir_to_file	fileio.c	/^expand_and_dir_to_file (Lisp_Object filename, Lisp_Object defdir)$/;"	f	signature:(Lisp_Object filename, Lisp_Object defdir)
expand_and_dir_to_file	lisp.h	/^extern Lisp_Object expand_and_dir_to_file (Lisp_Object, Lisp_Object);$/;"	p	signature:(Lisp_Object, Lisp_Object)
expect	image.c	2796;"	d	file:
expect	image.c	2931;"	d	file:
expect	image.c	4109;"	d	file:
expect	image.c	4318;"	d	file:
expected	atimer.c	/^  struct timespec expected;$/;"	m	struct:atimer_result	typeref:struct:atimer_result::timespec	file:	access:public
expect_ident	image.c	2805;"	d	file:
expect_ident	image.c	2932;"	d	file:
expect_ident	image.c	4118;"	d	file:
expect_ident	image.c	4319;"	d	file:
expect_property_change	xselect.c	/^expect_property_change (Display *display, Window window,$/;"	f	file:	signature:(Display *display, Window window, Atom property, int state)
expect_property_change	xselect.c	/^static struct prop_location *expect_property_change (Display *, Window,$/;"	p	file:	signature:(Display *, Window, Atom, int)
expiration	atimer.h	/^  struct timespec expiration;$/;"	m	struct:atimer	typeref:struct:atimer::timespec	access:public
expire	w32proc.c	/^  volatile ULONGLONG expire;$/;"	m	struct:itimer_data	file:	access:public
EXPLICIT_FORMATTING	bidi.c	/^  EXPLICIT_FORMATTING$/;"	e	enum:__anon92	file:
explicit_name	frame.h	/^  bool_bf explicit_name : 1;$/;"	m	struct:frame	access:public
explicit_parent	nsterm.h	/^  char explicit_parent;$/;"	m	struct:ns_output	access:public
explicit_parent	w32term.h	/^  unsigned explicit_parent : 1;$/;"	m	struct:w32_output	access:public
explicit_parent	xterm.h	/^  bool_bf explicit_parent : 1;$/;"	m	struct:x_output	access:public
expose_area	xdisp.c	/^expose_area (struct window *w, struct glyph_row *row, XRectangle *r,$/;"	f	file:	signature:(struct window *w, struct glyph_row *row, XRectangle *r, enum glyph_row_area area)
expose_frame	dispextern.h	/^extern void expose_frame (struct frame *, int, int, int, int);$/;"	p	signature:(struct frame *, int, int, int, int)
expose_frame	xdisp.c	/^expose_frame (struct frame *f, int x, int y, int w, int h)$/;"	f	signature:(struct frame *f, int x, int y, int w, int h)
expose_line	xdisp.c	/^expose_line (struct window *w, struct glyph_row *row, XRectangle *r)$/;"	f	file:	signature:(struct window *w, struct glyph_row *row, XRectangle *r)
expose_overlaps	xdisp.c	/^expose_overlaps (struct window *w,$/;"	f	file:	signature:(struct window *w, struct glyph_row *first_overlapping_row, struct glyph_row *last_overlapping_row, XRectangle *r)
expose_window	xdisp.c	/^expose_window (struct window *w, XRectangle *fr)$/;"	f	file:	signature:(struct window *w, XRectangle *fr)
expose_window_tree	xdisp.c	/^expose_window_tree (struct window *w, XRectangle *r)$/;"	f	file:	signature:(struct window *w, XRectangle *r)
exprintf	doprnt.c	/^exprintf (char **buf, ptrdiff_t *bufsize,$/;"	f	signature:(char **buf, ptrdiff_t *bufsize, char const *nonheapbuf, ptrdiff_t bufsize_max, char const *format, ...)
extends_to_end_of_line_p	dispextern.h	/^  bool_bf extends_to_end_of_line_p : 1;$/;"	m	struct:glyph_string	access:public
EXTEND_BUFFER	regex.c	1656;"	d	file:
extend_face_to_end_of_line	xdisp.c	/^extend_face_to_end_of_line (struct it *it)$/;"	f	file:	signature:(struct it *it)
extend_face_to_end_of_line	xdisp.c	/^static void extend_face_to_end_of_line (struct it *);$/;"	p	file:	signature:(struct it *)
extend_property_ranges	intervals.h	/^Lisp_Object extend_property_ranges (Lisp_Object, Lisp_Object, Lisp_Object);$/;"	p	signature:(Lisp_Object, Lisp_Object, Lisp_Object)
extend_property_ranges	textprop.c	/^extend_property_ranges (Lisp_Object list, Lisp_Object old_end, Lisp_Object new_end)$/;"	f	signature:(Lisp_Object list, Lisp_Object old_end, Lisp_Object new_end)
EXTEND_RANGE_TABLE	regex.c	1749;"	d	file:
extend_range_table_work_area	regex.c	/^extend_range_table_work_area (struct range_table_work_area *work_area)$/;"	f	file:	signature:(struct range_table_work_area *work_area)
extern	gmalloc.c	286;"	d	file:
extern	gmalloc.c	88;"	d	file:
EXTERNALLY_VISIBLE	alloc.c	/^bool block_input_in_memory_allocators EXTERNALLY_VISIBLE;$/;"	v
EXTERNALLY_VISIBLE	alloc.c	/^Lisp_Object last_marked[LAST_MARKED_SIZE] EXTERNALLY_VISIBLE;$/;"	v
EXTERNALLY_VISIBLE	alloc.c	/^ptrdiff_t mark_object_loop_halt EXTERNALLY_VISIBLE;$/;"	v
EXTERNALLY_VISIBLE	alloc.c	/^struct suspicious_free_record suspicious_free_history[64] EXTERNALLY_VISIBLE;$/;"	v	typeref:struct:suspicious_free_history
EXTERNALLY_VISIBLE	alloc.c	/^void *lisp_malloc_loser EXTERNALLY_VISIBLE;$/;"	v
EXTERNALLY_VISIBLE	alloc.c	/^voidfuncptr __MALLOC_HOOK_VOLATILE __malloc_initialize_hook EXTERNALLY_VISIBLE$/;"	v
EXTERNALLY_VISIBLE	conf_post.h	185;"	d
EXTERNALLY_VISIBLE	conf_post.h	187;"	d
EXTERNALLY_VISIBLE	keyboard.c	/^int stop_character EXTERNALLY_VISIBLE;$/;"	v
EXTERNALLY_VISIBLE	print.c	/^bool print_output_debug_flag EXTERNALLY_VISIBLE = 1;$/;"	v
external_menu_bar	frame.h	/^  bool_bf external_menu_bar : 1;$/;"	m	struct:frame	access:public
external_sock_fd	process.c	/^static int external_sock_fd;$/;"	v	file:
external_tool_bar	frame.h	/^  bool_bf external_tool_bar : 1;$/;"	m	struct:frame	access:public
EXTERN_INLINE	conf_post.h	316;"	d
extra	dispextern.h	/^  void *extra;$/;"	m	struct:face	access:public
EXTRACT_CHARACTER	regex.c	744;"	d	file:
extract_dimension	window.c	/^extract_dimension (Lisp_Object dimension)$/;"	f	file:	signature:(Lisp_Object dimension)
extract_float	lisp.h	/^extern double extract_float (Lisp_Object);$/;"	p	signature:(Lisp_Object)
extract_number	regex.c	/^extract_number (re_char *source)$/;"	f	file:	signature:(re_char *source)
EXTRACT_NUMBER	regex.c	705;"	d	file:
extract_number_and_incr	regex.c	/^extract_number_and_incr (re_char **source)$/;"	f	file:	signature:(re_char **source)
EXTRACT_NUMBER_AND_INCR	regex.c	718;"	d	file:
extras	lisp.h	/^    Lisp_Object extras[FLEXIBLE_ARRAY_MEMBER];$/;"	m	struct:Lisp_Char_Table	access:public
extra_bss_size	unexw32.c	/^DWORD_PTR  extra_bss_size = 0;$/;"	v
extra_bss_size_static	unexw32.c	/^DWORD_PTR  extra_bss_size_static = 0;$/;"	v
extra_bytes	ralloc.c	/^static int extra_bytes;$/;"	v	file:
EXTRA_CONTEXT_FIELDS	editfns.c	3114;"	d	file:
extra_keyboard_modifiers	globals.h	829;"	d
extra_line_spacing	dispextern.h	/^  int extra_line_spacing;$/;"	m	struct:glyph_row	access:public
extra_line_spacing	dispextern.h	/^  int extra_line_spacing;$/;"	m	struct:it	access:public
extra_line_spacing	frame.h	/^  int extra_line_spacing;$/;"	m	struct:frame	access:public
extra_line_spacing_	buffer.h	/^  Lisp_Object extra_line_spacing_;$/;"	m	struct:buffer	access:public
extra_peer_verification	gnutls.c	/^enum extra_peer_verification$/;"	g	file:
ext_codes	xterm.h	/^  XExtCodes *ext_codes;$/;"	m	struct:x_display_info	access:public
e_malloc	w32.c	/^extern void *e_malloc (size_t);$/;"	p	file:
e_property	syntax.h	/^  ptrdiff_t e_property;			\/* First index where c_s_t is$/;"	m	struct:gl_state_s	access:public
e_property_truncated	syntax.h	/^  bool e_property_truncated;		\/* true if e_property if was truncated$/;"	m	struct:gl_state_s	access:public
e_write	fileio.c	/^e_write (int desc, Lisp_Object string, ptrdiff_t start, ptrdiff_t end,$/;"	f	file:	signature:(int desc, Lisp_Object string, ptrdiff_t start, ptrdiff_t end, struct coding_system *coding)
e_write	fileio.c	/^static bool e_write (int, Lisp_Object, ptrdiff_t, ptrdiff_t,$/;"	p	file:	signature:(int, Lisp_Object, ptrdiff_t, ptrdiff_t, struct coding_system *)
E_WRITE_MAX	fileio.c	/^enum { E_WRITE_MAX = 8 * 1024 * 1024 };$/;"	e	enum:__anon102	file:
f	dispextern.h	/^  struct frame *f;$/;"	m	struct:face_cache	typeref:struct:face_cache::frame	access:public
f	dispextern.h	/^  struct frame *f;$/;"	m	struct:glyph_string	typeref:struct:glyph_string::frame	access:public
f	dispextern.h	/^  struct frame *f;$/;"	m	struct:it	typeref:struct:it::frame	access:public
f	emacsgtkfixed.c	/^  struct frame *f;$/;"	m	struct:_EmacsFixedPrivate	typeref:struct:_EmacsFixedPrivate::frame	file:	access:public
f	gtkutil.h	/^  struct frame  *f;$/;"	m	struct:xg_menu_cb_data_	typeref:struct:xg_menu_cb_data_::frame	access:public
f	xmenu.c	/^  struct frame *f;$/;"	m	struct:next_popup_x_y	typeref:struct:next_popup_x_y::frame	file:	access:public
f1	dired.c	/^  (Lisp_Object f1, Lisp_Object f2)$/;"	v
f1	profiler.c	/^     (Lisp_Object f1, Lisp_Object f2)$/;"	v
faccessat	w32.c	/^faccessat (int dirfd, const char * path, int mode, int flags)$/;"	f	signature:(int dirfd, const char * path, int mode, int flags)
face	dispextern.h	/^  struct face *face;$/;"	m	struct:draw_fringe_bitmap_params	typeref:struct:draw_fringe_bitmap_params::face	access:public
face	dispextern.h	/^  struct face *face;$/;"	m	struct:glyph_string	typeref:struct:glyph_string::face	access:public
face	dispextern.h	/^struct face$/;"	s
face	textprop.c	/^  (Lisp_Object start, Lisp_Object end, Lisp_Object face,$/;"	v
face	xdisp.c	/^     (Lisp_Object format, Lisp_Object face,$/;"	v
face	xfaces.c	/^  (Lisp_Object face, Lisp_Object attr, Lisp_Object value, Lisp_Object frame)$/;"	v
face	xfaces.c	/^  (Lisp_Object face, Lisp_Object frame)$/;"	v
face	xfaces.c	/^  (Lisp_Object face, Lisp_Object frame, Lisp_Object character)$/;"	v
face	xfaces.c	/^  (Lisp_Object pattern, Lisp_Object face, Lisp_Object frame,$/;"	v
face1	xfaces.c	/^  (Lisp_Object face1, Lisp_Object face2, Lisp_Object frame)$/;"	v
face2	xfaces.c	/^  (Lisp_Object face1, Lisp_Object face2, Lisp_Object frame)$/;"	v
face::ascii_face	dispextern.h	/^  struct face *ascii_face;$/;"	m	struct:face	typeref:struct:face::face	access:public
face::background	dispextern.h	/^  unsigned long background;$/;"	m	struct:face	access:public
face::background_defaulted_p	dispextern.h	/^  bool_bf background_defaulted_p : 1;$/;"	m	struct:face	access:public
face::box	dispextern.h	/^  ENUM_BF (face_box_type) box : 2;$/;"	m	struct:face	access:public
face::box_color	dispextern.h	/^  unsigned long box_color;$/;"	m	struct:face	access:public
face::box_color_defaulted_p	dispextern.h	/^  bool_bf box_color_defaulted_p : 1;$/;"	m	struct:face	access:public
face::box_line_width	dispextern.h	/^  int box_line_width;$/;"	m	struct:face	access:public
face::colors_copied_bitwise_p	dispextern.h	/^  bool_bf colors_copied_bitwise_p : 1;$/;"	m	struct:face	access:public
face::extra	dispextern.h	/^  void *extra;$/;"	m	struct:face	access:public
face::font	dispextern.h	/^  struct font *font;$/;"	m	struct:face	typeref:struct:face::font	access:public
face::fontset	dispextern.h	/^  int fontset;$/;"	m	struct:face	access:public
face::foreground	dispextern.h	/^  unsigned long foreground;$/;"	m	struct:face	access:public
face::foreground_defaulted_p	dispextern.h	/^  bool_bf foreground_defaulted_p : 1;$/;"	m	struct:face	access:public
face::gc	dispextern.h	/^  GC gc;$/;"	m	struct:face	access:public
face::hash	dispextern.h	/^  unsigned hash;$/;"	m	struct:face	access:public
face::id	dispextern.h	/^  int id;$/;"	m	struct:face	access:public
face::lface	dispextern.h	/^  Lisp_Object lface[LFACE_VECTOR_SIZE];$/;"	m	struct:face	access:public
face::next	dispextern.h	/^  struct face *next, *prev;$/;"	m	struct:face	typeref:struct:face::face	access:public
face::overline_color	dispextern.h	/^  unsigned long overline_color;$/;"	m	struct:face	access:public
face::overline_color_defaulted_p	dispextern.h	/^  bool_bf overline_color_defaulted_p : 1;$/;"	m	struct:face	access:public
face::overline_p	dispextern.h	/^  bool_bf overline_p : 1;$/;"	m	struct:face	access:public
face::overstrike	dispextern.h	/^  bool_bf overstrike : 1;$/;"	m	struct:face	access:public
face::prev	dispextern.h	/^  struct face *next, *prev;$/;"	m	struct:face	typeref:struct:face::	access:public
face::stipple	dispextern.h	/^  ptrdiff_t stipple;$/;"	m	struct:face	access:public
face::strike_through_color	dispextern.h	/^  unsigned long strike_through_color;$/;"	m	struct:face	access:public
face::strike_through_color_defaulted_p	dispextern.h	/^  bool_bf strike_through_color_defaulted_p : 1;$/;"	m	struct:face	access:public
face::strike_through_p	dispextern.h	/^  bool_bf strike_through_p : 1;$/;"	m	struct:face	access:public
face::synth_ital	dispextern.h	/^  bool_bf synth_ital : 1;$/;"	m	struct:face	access:public
face::tty_bold_p	dispextern.h	/^  bool_bf tty_bold_p : 1;$/;"	m	struct:face	access:public
face::tty_italic_p	dispextern.h	/^  bool_bf tty_italic_p : 1;$/;"	m	struct:face	access:public
face::tty_reverse_p	dispextern.h	/^  bool_bf tty_reverse_p : 1;$/;"	m	struct:face	access:public
face::tty_underline_p	dispextern.h	/^  bool_bf tty_underline_p : 1;$/;"	m	struct:face	access:public
face::underline_color	dispextern.h	/^  unsigned long underline_color;$/;"	m	struct:face	access:public
face::underline_defaulted_p	dispextern.h	/^  bool_bf underline_defaulted_p : 1;$/;"	m	struct:face	access:public
face::underline_p	dispextern.h	/^  bool_bf underline_p : 1;$/;"	m	struct:face	access:public
face::underline_type	dispextern.h	/^  ENUM_BF (face_underline_type) underline_type : 1;$/;"	m	struct:face	access:public
face::use_box_color_for_shadows_p	dispextern.h	/^  bool_bf use_box_color_for_shadows_p : 1;$/;"	m	struct:face	access:public
faces_by_id	dispextern.h	/^  struct face **faces_by_id;$/;"	m	struct:face_cache	typeref:struct:face_cache::face	access:public
face_after_it_pos	xdisp.c	885;"	d	file:
face_alist	frame.h	/^  Lisp_Object face_alist;$/;"	m	struct:frame	access:public
face_attr_equal_p	xfaces.c	/^face_attr_equal_p (Lisp_Object v1, Lisp_Object v2)$/;"	f	file:	signature:(Lisp_Object v1, Lisp_Object v2)
face_at_buffer_position	dispextern.h	/^int face_at_buffer_position (struct window *, ptrdiff_t, ptrdiff_t *, ptrdiff_t,$/;"	p	signature:(struct window *, ptrdiff_t, ptrdiff_t *, ptrdiff_t, bool, int)
face_at_buffer_position	xfaces.c	/^face_at_buffer_position (struct window *w, ptrdiff_t pos,$/;"	f	signature:(struct window *w, ptrdiff_t pos, ptrdiff_t *endptr, ptrdiff_t limit, bool mouse, int base_face_id)
face_at_string_position	dispextern.h	/^int face_at_string_position (struct window *, Lisp_Object, ptrdiff_t, ptrdiff_t,$/;"	p	signature:(struct window *, Lisp_Object, ptrdiff_t, ptrdiff_t, ptrdiff_t *, enum face_id, bool)
face_at_string_position	xfaces.c	/^face_at_string_position (struct window *w, Lisp_Object string,$/;"	f	signature:(struct window *w, Lisp_Object string, ptrdiff_t pos, ptrdiff_t bufpos, ptrdiff_t *endptr, enum face_id base_face_id, bool mouse_p)
face_before_it_pos	xdisp.c	884;"	d	file:
face_before_or_after_it_pos	xdisp.c	/^face_before_or_after_it_pos (struct it *it, bool before_p)$/;"	f	file:	signature:(struct it *it, bool before_p)
face_before_or_after_it_pos	xdisp.c	/^static int face_before_or_after_it_pos (struct it *, bool);$/;"	p	file:	signature:(struct it *, bool)
face_before_selective_p	dispextern.h	/^  bool_bf face_before_selective_p : 1;$/;"	m	struct:it	access:public
face_boolean_x_resource_value	xfaces.c	/^face_boolean_x_resource_value (Lisp_Object value, bool signal_p)$/;"	f	file:	signature:(Lisp_Object value, bool signal_p)
face_box_p	dispextern.h	/^  bool_bf face_box_p : 1;$/;"	m	struct:it	access:public
face_box_type	dispextern.h	/^enum face_box_type$/;"	g
face_cache	dispextern.h	/^struct face_cache$/;"	s
face_cache	frame.h	/^  struct face_cache *face_cache;$/;"	m	struct:frame	typeref:struct:frame::face_cache	access:public
face_cache::buckets	dispextern.h	/^  struct face **buckets;$/;"	m	struct:face_cache	typeref:struct:face_cache::face	access:public
face_cache::f	dispextern.h	/^  struct frame *f;$/;"	m	struct:face_cache	typeref:struct:face_cache::frame	access:public
face_cache::faces_by_id	dispextern.h	/^  struct face **faces_by_id;$/;"	m	struct:face_cache	typeref:struct:face_cache::face	access:public
face_cache::menu_face_changed_p	dispextern.h	/^  bool_bf menu_face_changed_p : 1;$/;"	m	struct:face_cache	access:public
face_cache::size	dispextern.h	/^  ptrdiff_t size;$/;"	m	struct:face_cache	access:public
face_cache::used	dispextern.h	/^  int used;$/;"	m	struct:face_cache	access:public
FACE_CACHE_BUCKETS_SIZE	xfaces.c	271;"	d	file:
face_change	frame.h	/^  bool_bf face_change : 1;$/;"	m	struct:frame	access:public
face_change	xfaces.c	/^bool face_change;$/;"	v
face_color_gray_p	xfaces.c	/^face_color_gray_p (struct frame *f, const char *color_name)$/;"	f	file:	signature:(struct frame *f, const char *color_name)
face_color_supported_p	xfaces.c	/^face_color_supported_p (struct frame *f, const char *color_name,$/;"	f	file:	signature:(struct frame *f, const char *color_name, bool background_p)
FACE_DEFAULT	w32gui.h	76;"	d
face_fontset	xfaces.c	/^face_fontset (Lisp_Object attrs[LFACE_VECTOR_SIZE])$/;"	f	file:	signature:(Lisp_Object attrs[LFACE_VECTOR_SIZE])
FACE_FOR_CHAR	dispextern.h	/^FACE_FOR_CHAR (struct frame *f, struct face *face, int character,$/;"	f	signature:(struct frame *f, struct face *face, int character, ptrdiff_t pos, Lisp_Object object)
face_for_char	fontset.c	/^face_for_char (struct frame *f, struct face *face, int c,$/;"	f	signature:(struct frame *f, struct face *face, int c, ptrdiff_t pos, Lisp_Object object)
face_for_char	fontset.h	/^extern int face_for_char (struct frame *, struct face *, int,$/;"	p	signature:(struct frame *, struct face *, int, ptrdiff_t, Lisp_Object)
face_for_font	fontset.h	/^extern int face_for_font (struct frame *, Lisp_Object, struct face *);$/;"	p	signature:(struct frame *, Lisp_Object, struct face *)
face_for_font	xfaces.c	/^face_for_font (struct frame *f, Lisp_Object font_object, struct face *base_face)$/;"	f	signature:(struct frame *f, Lisp_Object font_object, struct face *base_face)
face_for_overlay_string	dispextern.h	/^int face_for_overlay_string (struct window *, ptrdiff_t, ptrdiff_t *, ptrdiff_t,$/;"	p	signature:(struct window *, ptrdiff_t, ptrdiff_t *, ptrdiff_t, bool, Lisp_Object)
face_for_overlay_string	xfaces.c	/^face_for_overlay_string (struct window *w, ptrdiff_t pos,$/;"	f	signature:(struct window *w, ptrdiff_t pos, ptrdiff_t *endptr, ptrdiff_t limit, bool mouse, Lisp_Object overlay)
FACE_FROM_ID	dispextern.h	1781;"	d
FACE_FROM_ID_OR_NULL	dispextern.h	1788;"	d
face_id	dispextern.h	/^    int face_id;$/;"	m	struct:it::iterator_stack_entry	access:public
face_id	dispextern.h	/^  int face_id;$/;"	m	struct:it	access:public
face_id	dispextern.h	/^  int face_id;$/;"	m	struct:__anon105	access:public
face_id	dispextern.h	/^  unsigned face_id : FACE_ID_BITS;$/;"	m	struct:glyph	access:public
face_id	dispextern.h	/^enum face_id$/;"	g
FACE_ID_BITS	dispextern.h	458;"	d
face_name	xfaces.c	/^  Lisp_Object face_name;$/;"	m	struct:named_merge_point	file:	access:public
FACE_NO_BOX	dispextern.h	/^  FACE_NO_BOX,$/;"	e	enum:face_box_type
FACE_PROP_IDX	dispextern.h	/^  FACE_PROP_IDX,$/;"	e	enum:prop_idx
FACE_RAISED_BOX	dispextern.h	/^  FACE_RAISED_BOX,$/;"	e	enum:face_box_type
FACE_SIMPLE_BOX	dispextern.h	/^  FACE_SIMPLE_BOX,$/;"	e	enum:face_box_type
FACE_SUITABLE_FOR_ASCII_CHAR_P	dispextern.h	/^FACE_SUITABLE_FOR_ASCII_CHAR_P (struct face *face)$/;"	f	signature:(struct face *face)
FACE_SUNKEN_BOX	dispextern.h	/^  FACE_SUNKEN_BOX$/;"	e	enum:face_box_type
FACE_TTY_DEFAULT_BG_COLOR	dispextern.h	1714;"	d
FACE_TTY_DEFAULT_COLOR	dispextern.h	1706;"	d
FACE_TTY_DEFAULT_FG_COLOR	dispextern.h	1710;"	d
face_tty_specified_color	dispextern.h	/^face_tty_specified_color (unsigned long color)$/;"	f	signature:(unsigned long color)
face_underline_type	dispextern.h	/^enum face_underline_type$/;"	g
FACE_UNDER_LINE	dispextern.h	/^  FACE_UNDER_LINE,$/;"	e	enum:face_underline_type
FACE_UNDER_WAVE	dispextern.h	/^  FACE_UNDER_WAVE$/;"	e	enum:face_underline_type
FACE_UNIBYTE_P	dispextern.h	1727;"	d
face_with_height	dispextern.h	/^int face_with_height (struct frame *, int, int);$/;"	p	signature:(struct frame *, int, int)
face_with_height	xfaces.c	/^face_with_height (struct frame *f, int face_id, int height)$/;"	f	signature:(struct frame *f, int face_id, int height)
failure_code	image.c	/^    } failure_code;$/;"	m	struct:my_jpeg_error_mgr	typeref:enum:my_jpeg_error_mgr::__anon83	file:	access:public
FAILURE_PAT	regex.c	1372;"	d	file:
FAILURE_STR	regex.c	1373;"	d	file:
fail_stack	regex.c	/^static fail_stack_type fail_stack;$/;"	v	file:
fail_stack_elt	regex.c	/^union fail_stack_elt$/;"	u	file:
fail_stack_elt::integer	regex.c	/^  long integer;$/;"	m	union:fail_stack_elt	file:	access:public
fail_stack_elt::pointer	regex.c	/^  re_char *pointer;$/;"	m	union:fail_stack_elt	file:	access:public
fail_stack_elt_t	regex.c	/^typedef union fail_stack_elt fail_stack_elt_t;$/;"	t	typeref:union:fail_stack_elt	file:
FAIL_STACK_EMPTY	regex.c	1286;"	d	file:
FAIL_STACK_GROWTH_FACTOR	regex.c	1331;"	d	file:
fail_stack_type	regex.c	/^} fail_stack_type;$/;"	t	typeref:struct:__anon145	file:
faked_key	w32inevt.c	/^int faked_key;$/;"	v
faked_key	w32term.h	/^  int faked_key;$/;"	m	struct:w32_display_info	access:public
fake_current_matrices	dispnew.c	/^fake_current_matrices (Lisp_Object window)$/;"	f	file:	signature:(Lisp_Object window)
FALLTHROUGH	conf_post.h	197;"	d
FALLTHROUGH	conf_post.h	199;"	d
FALSE	w32menu.c	58;"	d	file:
family	xfaces.c	/^  (Lisp_Object family, Lisp_Object frame)$/;"	v
fastmap	regex.h	/^  char *fastmap;$/;"	m	struct:re_pattern_buffer	access:public
fastmap	search.c	/^  char fastmap[0400];$/;"	m	struct:regexp_cache	file:	access:public
fastmap_accurate	regex.h	/^  unsigned fastmap_accurate : 1;$/;"	m	struct:re_pattern_buffer	access:public
fast_c_string_match_ignore_case	lisp.h	/^extern ptrdiff_t fast_c_string_match_ignore_case (Lisp_Object, const char *,$/;"	p	signature:(Lisp_Object, const char *, ptrdiff_t)
fast_c_string_match_ignore_case	search.c	/^fast_c_string_match_ignore_case (Lisp_Object regexp,$/;"	f	signature:(Lisp_Object regexp, const char *string, ptrdiff_t len)
fast_find_string_pos	xdisp.c	/^fast_find_string_pos (struct window *w, ptrdiff_t pos, Lisp_Object object,$/;"	f	file:	signature:(struct window *w, ptrdiff_t pos, Lisp_Object object, int *hpos, int *vpos, int *x, int *y, bool right_p)
FAST_LONGJMP	image.c	5824;"	d	file:
FAST_LONGJMP	image.c	5827;"	d	file:
fast_looking_at	lisp.h	/^extern ptrdiff_t fast_looking_at (Lisp_Object, ptrdiff_t, ptrdiff_t,$/;"	p	signature:(Lisp_Object, ptrdiff_t, ptrdiff_t, ptrdiff_t, ptrdiff_t, Lisp_Object)
fast_looking_at	search.c	/^fast_looking_at (Lisp_Object regexp, ptrdiff_t pos, ptrdiff_t pos_byte,$/;"	f	signature:(Lisp_Object regexp, ptrdiff_t pos, ptrdiff_t pos_byte, ptrdiff_t limit, ptrdiff_t limit_byte, Lisp_Object string)
fast_map	charset.h	/^  unsigned char fast_map[190];$/;"	m	struct:charset	access:public
FAST_SETJMP	image.c	5823;"	d	file:
FAST_SETJMP	image.c	5826;"	d	file:
fast_set_selected_frame	xdisp.c	/^fast_set_selected_frame (Lisp_Object frame)$/;"	f	file:	signature:(Lisp_Object frame)
fast_string_match	lisp.h	/^fast_string_match (Lisp_Object regexp, Lisp_Object string)$/;"	f	signature:(Lisp_Object regexp, Lisp_Object string)
fast_string_match_ignore_case	lisp.h	/^fast_string_match_ignore_case (Lisp_Object regexp, Lisp_Object string)$/;"	f	signature:(Lisp_Object regexp, Lisp_Object string)
fast_string_match_internal	lisp.h	/^extern ptrdiff_t fast_string_match_internal (Lisp_Object, Lisp_Object,$/;"	p	signature:(Lisp_Object, Lisp_Object, Lisp_Object)
fast_string_match_internal	search.c	/^fast_string_match_internal (Lisp_Object regexp, Lisp_Object string,$/;"	f	signature:(Lisp_Object regexp, Lisp_Object string, Lisp_Object table)
fatal	term.c	/^fatal (const char *str, ...)$/;"	f	signature:(const char *str, ...)
fatal	xrdb.c	/^fatal (char *msg, char *prog)$/;"	f	file:	signature:(char *msg, char *prog)
fatal_error_in_progress	emacs.c	/^bool fatal_error_in_progress;$/;"	v
fchdir_unwind	cygw32.c	/^fchdir_unwind (int dir_fd)$/;"	f	file:	signature:(int dir_fd)
fchmod	w32.c	/^fchmod (int fd, mode_t mode)$/;"	f	signature:(int fd, mode_t mode)
fchmod	w32.h	/^extern int fchmod (int, mode_t);$/;"	p	signature:(int, mode_t)
fclose_unwind	fileio.c	/^fclose_unwind (void *arg)$/;"	f	signature:(void *arg)
fclose_unwind	lisp.h	/^extern void fclose_unwind (void *);$/;"	p	signature:(void *)
fcntl	w32.c	/^fcntl (int s, int cmd, int options)$/;"	f	signature:(int s, int cmd, int options)
Fcombine_after_change_execute_1	insdel.c	/^Fcombine_after_change_execute_1 (Lisp_Object val)$/;"	f	file:	signature:(Lisp_Object val)
fc_charset	ftfont.c	/^  FcCharSet *fc_charset;$/;"	m	struct:ftfont_cache_data	file:	access:public
fc_charset	ftfont.c	/^  FcCharSet *fc_charset;$/;"	m	struct:__anon125	file:	access:public
fc_charset_table	ftfont.c	/^} fc_charset_table[] =$/;"	v	typeref:struct:__anon125	file:
FC_HINT_STYLE	xftfont.c	175;"	d	file:
fc_initialized	ftfont.c	/^static bool fc_initialized;$/;"	v	file:
FC_LCD_DEFAULT	xsettings.c	311;"	d	file:
FC_LCD_FILTER	xftfont.c	184;"	d	file:
FC_LCD_FILTER	xsettings.c	314;"	d	file:
FC_LCD_NONE	xsettings.c	308;"	d	file:
fd	sound.c	/^  int fd;$/;"	m	struct:sound	file:	access:public
fd	sound.c	/^  int fd;$/;"	m	struct:sound_device	file:	access:public
fd	w32.h	/^  int                 fd;$/;"	m	struct:_child_process	access:public
fdutimens	w32.c	/^fdutimens (int fd, char const *file, struct timespec const timespec[2])$/;"	f	signature:(int fd, char const *file, struct timespec const timespec[2])
fd_bits	process.c	/^enum fd_bits$/;"	g	file:
fd_callback	process.h	/^typedef void (*fd_callback) (int fd, void *data);$/;"	t
fd_callback_data	process.c	/^static struct fd_callback_data$/;"	s	file:
fd_callback_data::data	process.c	/^  void *data;$/;"	m	struct:fd_callback_data	file:	access:public
fd_callback_data::flags	process.c	/^  int flags;$/;"	m	struct:fd_callback_data	file:	access:public
fd_callback_data::func	process.c	/^  fd_callback func;$/;"	m	struct:fd_callback_data	file:	access:public
fd_callback_data::thread	process.c	/^  struct thread_state *thread;$/;"	m	struct:fd_callback_data	typeref:struct:fd_callback_data::thread_state	file:	access:public
fd_callback_data::waiting_thread	process.c	/^  struct thread_state *waiting_thread;$/;"	m	struct:fd_callback_data	typeref:struct:fd_callback_data::thread_state	file:	access:public
fd_callback_info	process.c	/^} fd_callback_info[FD_SETSIZE];$/;"	v	typeref:struct:fd_callback_data	file:
fd_CLR	sysselect.h	/^fd_CLR (int fd, fd_set *set)$/;"	f	signature:(int fd, fd_set *set)
FD_CLR	sysselect.h	42;"	d
FD_CLR	sysselect.h	78;"	d
FD_CLR	sysselect.h	81;"	d
FD_CLR	w32.h	44;"	d
fd_info	w32.c	/^filedesc fd_info [ MAXDESC ];$/;"	v
fd_ISSET	sysselect.h	/^fd_ISSET (int fd, fd_set *set)$/;"	f	signature:(int fd, fd_set *set)
FD_ISSET	sysselect.h	43;"	d
FD_ISSET	sysselect.h	79;"	d
FD_ISSET	sysselect.h	82;"	d
FD_ISSET	w32.h	50;"	d
fd_SET	sysselect.h	/^fd_SET (int fd, fd_set *set)$/;"	f	signature:(int fd, fd_set *set)
fd_set	sysselect.h	/^typedef int fd_set;$/;"	t
FD_SET	sysselect.h	41;"	d
FD_SET	sysselect.h	80;"	d
FD_SET	sysselect.h	83;"	d
fd_set	w32.h	/^} fd_set;$/;"	t	typeref:struct:__anon89
FD_SET	w32.h	38;"	d
FD_SETSIZE	sysselect.h	34;"	d
FD_SETSIZE	sysselect.h	37;"	d
FD_SETSIZE	w32.h	32;"	d
FD_ZERO	sysselect.h	44;"	d
FD_ZERO	w32.h	51;"	d
feature	fns.c	/^  (Lisp_Object feature, Lisp_Object filename, Lisp_Object noerror)$/;"	v
feature	fns.c	/^  (Lisp_Object feature, Lisp_Object subfeature)$/;"	v
feature	fns.c	/^  (Lisp_Object feature, Lisp_Object subfeatures)$/;"	v
features	ftfont.c	/^  unsigned int *features[2];$/;"	m	struct:OpenTypeSpec	file:	access:public
FEATURE_ANY	ftfont.c	1596;"	d	file:
FEATURE_ANY	ftfont.c	1661;"	d	file:
FEATURE_NONE	ftfont.c	1594;"	d	file:
FEATURE_NONE	ftfont.c	1660;"	d	file:
feof_unlocked	sysstdio.h	41;"	d
ferror_unlocked	sysstdio.h	44;"	d
FETCH	bytecode.c	288;"	d	file:
FETCH2	bytecode.c	293;"	d	file:
fetch_buffer_markers	buffer.c	/^fetch_buffer_markers (struct buffer *b)$/;"	f	file:	signature:(struct buffer *b)
FETCH_BYTE	buffer.h	369;"	d
FETCH_CHAR	buffer.h	362;"	d
FETCH_CHAR_ADVANCE	character.h	434;"	d
FETCH_CHAR_ADVANCE_NO_CHECK	character.h	457;"	d
FETCH_CHAR_AS_MULTIBYTE	buffer.h	375;"	d
FETCH_END	insdel.c	2067;"	d	file:
FETCH_MULTIBYTE_CHAR	buffer.h	/^FETCH_MULTIBYTE_CHAR (ptrdiff_t pos)$/;"	f	signature:(ptrdiff_t pos)
FETCH_START	insdel.c	2064;"	d	file:
FETCH_STRING_CHAR_ADVANCE	character.h	371;"	d
FETCH_STRING_CHAR_ADVANCE_NO_CHECK	character.h	418;"	d
FETCH_STRING_CHAR_AS_MULTIBYTE_ADVANCE	character.h	394;"	d
fflush_unlocked	sysstdio.h	47;"	d
fgets_unlocked	sysstdio.h	50;"	d
file	cygw32.c	/^  (Lisp_Object file, Lisp_Object absolute_p)$/;"	v
file	dired.c	/^  (Lisp_Object file, Lisp_Object directory)$/;"	v
file	dired.c	/^  (Lisp_Object file, Lisp_Object directory, Lisp_Object predicate)$/;"	v
file	eval.c	/^  (Lisp_Object function, Lisp_Object file, Lisp_Object docstring, Lisp_Object interactive, Lisp_Object type)$/;"	v
file	fileio.c	/^  (Lisp_Object file, Lisp_Object newname, Lisp_Object ok_if_already_exists)$/;"	v
file	fileio.c	/^  (Lisp_Object file, Lisp_Object newname, Lisp_Object ok_if_already_exists,$/;"	v
file	gfilenotify.c	/^  (Lisp_Object file, Lisp_Object flags, Lisp_Object callback)$/;"	v
file	image.c	/^  FILE *file;$/;"	m	struct:jpeg_stdio_mgr	file:	access:public
file	kqueue.c	/^  (Lisp_Object file, Lisp_Object flags, Lisp_Object callback)$/;"	v
file	lread.c	/^  (Lisp_Object file, Lisp_Object noerror, Lisp_Object nomessage,$/;"	v
file	nsterm.h	/^  char *file;$/;"	m	struct:ns_bitmap_record	access:public
file	print.c	/^  (Lisp_Object file, Lisp_Object append)$/;"	v
file	sound.c	/^  Lisp_Object file;$/;"	m	struct:sound_device	file:	access:public
file	w32heap.h	/^    HANDLE         file;$/;"	m	struct:file_data	access:public
file	w32notify.c	/^  (Lisp_Object file, Lisp_Object filter, Lisp_Object callback)$/;"	v
file	w32term.h	/^  char *file;$/;"	m	struct:w32_bitmap_record	access:public
file	xterm.h	/^  char *file;$/;"	m	struct:x_bitmap_record	access:public
file1	fileio.c	/^  (Lisp_Object file1, Lisp_Object file2)$/;"	v
filedesc	w32.h	/^} filedesc;$/;"	t	typeref:struct:__anon91
filename	dired.c	/^  (Lisp_Object filename, Lisp_Object id_format)$/;"	v
filename	emacs.c	/^  (Lisp_Object filename, Lisp_Object symfile)$/;"	v
filename	fileio.c	/^  (Lisp_Object filename, Lisp_Object acl_string)$/;"	v
filename	fileio.c	/^  (Lisp_Object filename, Lisp_Object context)$/;"	v
filename	fileio.c	/^  (Lisp_Object filename, Lisp_Object mode)$/;"	v
filename	fileio.c	/^  (Lisp_Object filename, Lisp_Object operation)$/;"	v
filename	fileio.c	/^  (Lisp_Object filename, Lisp_Object string)$/;"	v
filename	fileio.c	/^  (Lisp_Object filename, Lisp_Object timestamp)$/;"	v
filename	fileio.c	/^  (Lisp_Object filename, Lisp_Object trash)$/;"	v
filename	fileio.c	/^  (Lisp_Object filename, Lisp_Object visit, Lisp_Object beg, Lisp_Object end, Lisp_Object replace)$/;"	v
filename	fileio.c	/^  (Lisp_Object start, Lisp_Object end, Lisp_Object filename, Lisp_Object append,$/;"	v
filename	fns.c	/^  (Lisp_Object feature, Lisp_Object filename, Lisp_Object noerror)$/;"	v
filename	inotify.c	/^     (Lisp_Object filename, Lisp_Object aspect, Lisp_Object callback)$/;"	v
filename	lread.c	/^  (Lisp_Object buffer, Lisp_Object printflag, Lisp_Object filename, Lisp_Object unibyte, Lisp_Object do_allow_print)$/;"	v
filename	lread.c	/^  (Lisp_Object filename, Lisp_Object path, Lisp_Object suffixes, Lisp_Object predicate)$/;"	v
filename_	buffer.h	/^  Lisp_Object filename_;$/;"	m	struct:buffer	access:public
filename_from_ansi	w32.c	/^filename_from_ansi (const char *fn_in, char *fn_out)$/;"	f	signature:(const char *fn_in, char *fn_out)
filename_from_ansi	w32.h	/^extern int  filename_from_ansi (const char *, char *);$/;"	p	signature:(const char *, char *)
filename_from_utf16	w32.c	/^filename_from_utf16 (const wchar_t *fn_in, char *fn_out)$/;"	f	signature:(const wchar_t *fn_in, char *fn_out)
filename_from_utf16	w32.h	/^extern int  filename_from_utf16 (const wchar_t *, char *);$/;"	p	signature:(const wchar_t *, char *)
filename_to_ansi	w32.c	/^filename_to_ansi (const char *fn_in, char *fn_out)$/;"	f	signature:(const char *fn_in, char *fn_out)
filename_to_ansi	w32.h	/^extern int  filename_to_ansi (const char *, char *);$/;"	p	signature:(const char *, char *)
filename_to_utf16	w32.c	/^filename_to_utf16 (const char *fn_in, wchar_t *fn_out)$/;"	f	signature:(const char *fn_in, wchar_t *fn_out)
filename_to_utf16	w32.h	/^extern int  filename_to_utf16 (const char *, wchar_t *);$/;"	p	signature:(const char *, wchar_t *)
filesize	unexmacosx.c	/^  vm_size_t filesize;$/;"	m	struct:__anon76	file:	access:public
FILETIME_TO_U64	w32.c	4640;"	d	file:
file_accessible_directory_p	fileio.c	/^file_accessible_directory_p (Lisp_Object file)$/;"	f	signature:(Lisp_Object file)
file_accessible_directory_p	lisp.h	/^extern bool file_accessible_directory_p (Lisp_Object);$/;"	p	signature:(Lisp_Object)
FILE_ANY_ACCESS	w32.c	208;"	d	file:
file_attributes	dired.c	/^file_attributes (int fd, char const *name, Lisp_Object id_format)$/;"	f	file:	signature:(int fd, char const *name, Lisp_Object id_format)
file_attributes	dired.c	/^static Lisp_Object file_attributes (int, char const *, Lisp_Object);$/;"	p	file:	signature:(int, char const *, Lisp_Object)
FILE_AT_EOF	w32.h	132;"	d
file_base	w32heap.h	/^    unsigned char *file_base;$/;"	m	struct:file_data	access:public
FILE_BINARY	w32.h	130;"	d
FILE_CONNECT	w32.h	129;"	d
file_data	w32heap.h	/^typedef struct file_data {$/;"	s
file_data	w32heap.h	/^} file_data;$/;"	t	typeref:struct:file_data
file_data::file	w32heap.h	/^    HANDLE         file;$/;"	m	struct:file_data	access:public
file_data::file_base	w32heap.h	/^    unsigned char *file_base;$/;"	m	struct:file_data	access:public
file_data::file_mapping	w32heap.h	/^    HANDLE         file_mapping;$/;"	m	struct:file_data	access:public
file_data::name	w32heap.h	/^    char          *name;$/;"	m	struct:file_data	access:public
file_data::size	w32heap.h	/^    unsigned long  size;$/;"	m	struct:file_data	access:public
FILE_DEVICE_FILE_SYSTEM	w32.c	202;"	d	file:
file_dialog_callback	w32fns.c	/^file_dialog_callback (HWND hwnd, UINT msg, WPARAM wParam, LPARAM lParam)$/;"	f	file:	signature:(HWND hwnd, UINT msg, WPARAM wParam, LPARAM lParam)
file_dialog_cb	xfns.c	/^file_dialog_cb (Widget widget, XtPointer client_data, XtPointer call_data)$/;"	f	file:	signature:(Widget widget, XtPointer client_data, XtPointer call_data)
file_dialog_unmap_cb	xfns.c	/^file_dialog_unmap_cb (Widget widget, XtPointer client_data, XtPointer call_data)$/;"	f	file:	signature:(Widget widget, XtPointer client_data, XtPointer call_data)
file_directory_p	fileio.c	/^file_directory_p (char const *file)$/;"	f	signature:(char const *file)
file_directory_p	lisp.h	/^extern bool file_directory_p (const char *);$/;"	p	signature:(const char *)
file_format_	buffer.h	/^  Lisp_Object file_format_;$/;"	m	struct:buffer	access:public
file_for_image	gtkutil.c	/^file_for_image (Lisp_Object image)$/;"	f	file:	signature:(Lisp_Object image)
file_header	unexcw.c	/^  FILHDR file_header;$/;"	m	struct:__anon2	file:	access:public
FILE_LAST_CR	w32.h	131;"	d
FILE_LISTEN	w32.h	128;"	d
file_mapping	w32heap.h	/^    HANDLE         file_mapping;$/;"	m	struct:file_data	access:public
file_name_absolute_p	fileio.c	/^file_name_absolute_p (const char *filename)$/;"	f	file:	signature:(const char *filename)
file_name_as_directory	fileio.c	/^file_name_as_directory (char *dst, const char *src, ptrdiff_t srclen,$/;"	f	file:	signature:(char *dst, const char *src, ptrdiff_t srclen, bool multibyte)
file_name_as_directory_slop	fileio.c	/^enum { file_name_as_directory_slop = 2 };$/;"	e	enum:__anon100	file:
file_name_case_insensitive_p	fileio.c	/^file_name_case_insensitive_p (const char *filename)$/;"	f	file:	signature:(const char *filename)
file_name_codepage	w32.c	/^static int file_name_codepage;$/;"	v	file:
FILE_NAME_COMBO_BOX	w32fns.c	7614;"	d	file:
file_name_completion	dired.c	/^file_name_completion (Lisp_Object file, Lisp_Object dirname, bool all_flag,$/;"	f	file:	signature:(Lisp_Object file, Lisp_Object dirname, bool all_flag, Lisp_Object predicate)
file_name_completion	dired.c	/^static Lisp_Object file_name_completion (Lisp_Object, Lisp_Object, bool,$/;"	p	file:
file_name_completion_stat	dired.c	/^file_name_completion_stat (int fd, struct dirent *dp, struct stat *st_addr)$/;"	f	file:	signature:(int fd, struct dirent *dp, struct stat *st_addr)
file_name_completion_stat	dired.c	/^static int file_name_completion_stat (int, struct dirent *, struct stat *);$/;"	p	file:	signature:(int, struct dirent *, struct stat *)
FILE_NAME_LIST	w32fns.c	7615;"	d	file:
FILE_NAME_TEXT_FIELD	w32fns.c	7613;"	d	file:
FILE_NDELAY	w32.h	136;"	d
FILE_NOTIFICATIONS_SIZE	w32term.h	721;"	d
FILE_NOTIFY_EVENT	termhooks.h	/^  , FILE_NOTIFY_EVENT$/;"	e	enum:event_kind
file_offset	fileio.c	/^file_offset (Lisp_Object val)$/;"	f	file:	signature:(Lisp_Object val)
file_offset	lread.c	60;"	d	file:
file_offset	lread.c	63;"	d	file:
file_optional_header	unexcw.c	/^  PEAOUTHDR file_optional_header;$/;"	m	struct:__anon2	file:	access:public
FILE_PIPE	w32.h	134;"	d
FILE_READ	w32.h	126;"	d
FILE_SEND_SIGCHLD	w32.h	133;"	d
FILE_SERIAL	w32.h	137;"	d
FILE_SOCKET	w32.h	135;"	d
file_tell	lread.c	61;"	d	file:
file_tell	lread.c	64;"	d	file:
file_truename_	buffer.h	/^  Lisp_Object file_truename_;$/;"	m	struct:buffer	access:public
FILE_WRITE	w32.h	127;"	d
FILLED_BOX_CURSOR	dispextern.h	/^  FILLED_BOX_CURSOR,$/;"	e	enum:text_cursor_kinds
filled_rectangle_bits	fringe.c	/^static unsigned short filled_rectangle_bits[] = {$/;"	v	file:
filled_square_bits	fringe.c	/^static unsigned short filled_square_bits[] = {$/;"	v	file:
fill_column_	buffer.h	/^  Lisp_Object fill_column_;$/;"	m	struct:buffer	access:public
fill_composite_glyph_string	xdisp.c	/^fill_composite_glyph_string (struct glyph_string *s, struct face *base_face,$/;"	f	file:	signature:(struct glyph_string *s, struct face *base_face, int overlaps)
fill_glyphless_glyph_string	xdisp.c	/^fill_glyphless_glyph_string (struct glyph_string *s, int face_id,$/;"	f	file:	signature:(struct glyph_string *s, int face_id, int start, int end, int overlaps)
fill_glyph_string	xdisp.c	/^fill_glyph_string (struct glyph_string *s, int face_id,$/;"	f	file:	signature:(struct glyph_string *s, int face_id, int start, int end, int overlaps)
fill_gstring_body	composite.c	/^fill_gstring_body (Lisp_Object gstring)$/;"	f	file:	signature:(Lisp_Object gstring)
fill_gstring_glyph_string	xdisp.c	/^fill_gstring_glyph_string (struct glyph_string *s, int face_id,$/;"	f	file:	signature:(struct glyph_string *s, int face_id, int start, int end, int overlaps)
fill_gstring_header	composite.c	/^fill_gstring_header (Lisp_Object header, ptrdiff_t from, ptrdiff_t from_byte,$/;"	f	file:	signature:(Lisp_Object header, ptrdiff_t from, ptrdiff_t from_byte, ptrdiff_t to, Lisp_Object font_object, Lisp_Object string)
fill_image_glyph_string	xdisp.c	/^fill_image_glyph_string (struct glyph_string *s)$/;"	f	file:	signature:(struct glyph_string *s)
fill_in_lock_file_name	filelock.c	/^fill_in_lock_file_name (char *lockfile, Lisp_Object fn)$/;"	f	file:	signature:(char *lockfile, Lisp_Object fn)
fill_in_logfont	w32font.c	/^fill_in_logfont (struct frame *f, LOGFONT *logfont, Lisp_Object font_spec)$/;"	f	file:	signature:(struct frame *f, LOGFONT *logfont, Lisp_Object font_spec)
fill_in_logfont	w32font.c	/^static void fill_in_logfont (struct frame *, LOGFONT *, Lisp_Object);$/;"	p	file:	signature:(struct frame *, LOGFONT *, Lisp_Object)
fill_in_menu	w32menu.c	/^fill_in_menu (HMENU menu, widget_value *wv)$/;"	f	file:	signature:(HMENU menu, widget_value *wv)
fill_in_menu	w32menu.c	/^static int fill_in_menu (HMENU, widget_value *);$/;"	p	file:	signature:(HMENU, widget_value *)
fill_line_p	dispextern.h	/^  bool_bf fill_line_p : 1;$/;"	m	struct:glyph_row	access:public
fill_queue	w32inevt.c	/^fill_queue (BOOL block)$/;"	f	file:	signature:(BOOL block)
fill_stretch_glyph_string	xdisp.c	/^fill_stretch_glyph_string (struct glyph_string *s, int start, int end)$/;"	f	file:	signature:(struct glyph_string *s, int start, int end)
fill_up_frame_row_with_spaces	dispextern.h	/^extern void fill_up_frame_row_with_spaces (struct glyph_row *, int);$/;"	p	signature:(struct glyph_row *, int)
fill_up_frame_row_with_spaces	dispnew.c	/^fill_up_frame_row_with_spaces (struct glyph_row *row, int upto)$/;"	f	signature:(struct glyph_row *row, int upto)
fill_up_glyph_row_area_with_spaces	dispnew.c	/^fill_up_glyph_row_area_with_spaces (struct glyph_row *row, int area)$/;"	f	file:	signature:(struct glyph_row *row, int area)
fill_up_glyph_row_area_with_spaces	dispnew.c	/^static void fill_up_glyph_row_area_with_spaces (struct glyph_row *, int);$/;"	p	file:	signature:(struct glyph_row *, int)
fill_up_glyph_row_with_spaces	dispnew.c	/^fill_up_glyph_row_with_spaces (struct glyph_row *row)$/;"	f	file:	signature:(struct glyph_row *row)
fill_up_glyph_row_with_spaces	dispnew.c	/^static void fill_up_glyph_row_with_spaces (struct glyph_row *);$/;"	p	file:	signature:(struct glyph_row *)
fill_xwidget_glyph_string	xdisp.c	/^fill_xwidget_glyph_string (struct glyph_string *s)$/;"	f	file:	signature:(struct glyph_string *s)
filter	process.h	/^    Lisp_Object filter;$/;"	m	struct:Lisp_Process	access:public
filter	w32notify.c	/^  (Lisp_Object file, Lisp_Object filter, Lisp_Object callback)$/;"	v
filter	w32notify.c	/^  DWORD filter;		\/* bit mask for events to watch *\/$/;"	m	struct:notification	file:	access:public
filter_list_to_flags	w32notify.c	/^filter_list_to_flags (Lisp_Object filter_list)$/;"	f	file:	signature:(Lisp_Object filter_list)
filter_properties	font.h	/^  void (*filter_properties) (Lisp_Object font, Lisp_Object properties);$/;"	m	struct:font_driver	access:public
finalizer	lisp.h	/^  void (*finalizer) (void *);$/;"	m	struct:Lisp_User_Ptr	access:public
FINALIZERP	lisp.h	/^FINALIZERP (Lisp_Object x)$/;"	f	signature:(Lisp_Object x)
finalizers	alloc.c	/^static struct Lisp_Finalizer finalizers;$/;"	v	typeref:struct:Lisp_Finalizer	file:
finalizer_insert	alloc.c	/^finalizer_insert (struct Lisp_Finalizer *element,$/;"	f	file:	signature:(struct Lisp_Finalizer *element, struct Lisp_Finalizer *finalizer)
finalize_environment	emacs-module.c	/^finalize_environment (emacs_env *env)$/;"	f	file:	signature:(emacs_env *env)
finalize_environment	emacs-module.c	/^static void finalize_environment (emacs_env *);$/;"	p	file:	signature:(emacs_env *)
finalize_environment_unwind	emacs-module.c	/^finalize_environment_unwind (void *env)$/;"	f	file:	signature:(void *env)
finalize_environment_unwind	emacs-module.c	/^static void finalize_environment_unwind (void *);$/;"	p	file:	signature:(void *)
finalize_kbd_macro_chars	macros.c	/^finalize_kbd_macro_chars (void)$/;"	f	signature:(void)
finalize_kbd_macro_chars	macros.h	/^extern void finalize_kbd_macro_chars (void);$/;"	p	signature:(void)
finalize_one_condvar	thread.c	/^finalize_one_condvar (struct Lisp_CondVar *condvar)$/;"	f	signature:(struct Lisp_CondVar *condvar)
finalize_one_condvar	thread.h	/^extern void finalize_one_condvar (struct Lisp_CondVar *);$/;"	p	signature:(struct Lisp_CondVar *)
finalize_one_mutex	thread.c	/^finalize_one_mutex (struct Lisp_Mutex *mutex)$/;"	f	signature:(struct Lisp_Mutex *mutex)
finalize_one_mutex	thread.h	/^extern void finalize_one_mutex (struct Lisp_Mutex *);$/;"	p	signature:(struct Lisp_Mutex *)
finalize_one_thread	thread.c	/^finalize_one_thread (struct thread_state *state)$/;"	f	signature:(struct thread_state *state)
finalize_one_thread	thread.h	/^extern void finalize_one_thread (struct thread_state *state);$/;"	p	signature:(struct thread_state *state)
finalize_runtime_unwind	emacs-module.c	/^finalize_runtime_unwind (void* raw_ert)$/;"	f	file:	signature:(void* raw_ert)
finalize_runtime_unwind	emacs-module.c	/^static void finalize_runtime_unwind (void *);$/;"	p	file:	signature:(void *)
final_char	charset.c	/^  (Lisp_Object dimension, Lisp_Object chars, Lisp_Object final_char, Lisp_Object charset)$/;"	v
FINAL_FREE_BLOCKS	gmalloc.c	119;"	d	file:
find_and_call_menu_selection	menu.c	/^find_and_call_menu_selection (struct frame *f, int menu_bar_items_used,$/;"	f	signature:(struct frame *f, int menu_bar_items_used, Lisp_Object vector, void *client_data)
find_and_call_menu_selection	menu.h	/^extern void find_and_call_menu_selection (struct frame *, int,$/;"	p	signature:(struct frame *, int, Lisp_Object, void *)
find_and_return_menu_selection	menu.c	/^find_and_return_menu_selection (struct frame *f, bool keymaps, void *client_data)$/;"	f	signature:(struct frame *f, bool keymaps, void *client_data)
find_and_return_menu_selection	nsterm.h	/^extern Lisp_Object find_and_return_menu_selection (struct frame *f,$/;"	p	signature:(struct frame *f, bool keymaps, void *client_data)
find_automatic_composition	composite.c	/^find_automatic_composition (ptrdiff_t pos, ptrdiff_t limit,$/;"	f	file:	signature:(ptrdiff_t pos, ptrdiff_t limit, ptrdiff_t *start, ptrdiff_t *end, Lisp_Object *gstring, Lisp_Object string)
find_before_next_newline	lisp.h	/^extern ptrdiff_t find_before_next_newline (ptrdiff_t, ptrdiff_t,$/;"	p	signature:(ptrdiff_t, ptrdiff_t, ptrdiff_t, ptrdiff_t *)
find_before_next_newline	search.c	/^find_before_next_newline (ptrdiff_t from, ptrdiff_t to,$/;"	f	signature:(ptrdiff_t from, ptrdiff_t to, ptrdiff_t cnt, ptrdiff_t *bytepos)
find_bloc	ralloc.c	/^find_bloc (void **ptr)$/;"	f	file:	signature:(void **ptr)
find_cache_boundary	region-cache.c	/^find_cache_boundary (struct region_cache *c, ptrdiff_t pos)$/;"	f	file:	signature:(struct region_cache *c, ptrdiff_t pos)
find_capability	termcap.c	/^find_capability (register char *bp, register const char *cap)$/;"	f	file:	signature:(register char *bp, register const char *cap)
find_charsets_in_text	charset.c	/^find_charsets_in_text (const unsigned char *ptr, ptrdiff_t nchars,$/;"	f	file:	signature:(const unsigned char *ptr, ptrdiff_t nchars, ptrdiff_t nbytes, Lisp_Object charsets, Lisp_Object table, bool multibyte)
find_child_console	w32proc.c	/^find_child_console (HWND hwnd, LPARAM arg)$/;"	f	file:	signature:(HWND hwnd, LPARAM arg)
find_child_pid	w32proc.c	/^find_child_pid (DWORD pid)$/;"	f	file:	signature:(DWORD pid)
find_composition	composite.c	/^find_composition (ptrdiff_t pos, ptrdiff_t limit,$/;"	f	signature:(ptrdiff_t pos, ptrdiff_t limit, ptrdiff_t *start, ptrdiff_t *end, Lisp_Object *prop, Lisp_Object object)
find_composition	composite.h	/^extern bool find_composition (ptrdiff_t, ptrdiff_t, ptrdiff_t *, ptrdiff_t *,$/;"	p	signature:(ptrdiff_t, ptrdiff_t, ptrdiff_t *, ptrdiff_t *, Lisp_Object *, Lisp_Object)
find_deferred_msg	w32fns.c	/^find_deferred_msg (HWND hwnd, UINT msg)$/;"	f	file:	signature:(HWND hwnd, UINT msg)
find_defun_start	syntax.c	/^find_defun_start (ptrdiff_t pos, ptrdiff_t pos_byte)$/;"	f	file:	signature:(ptrdiff_t pos, ptrdiff_t pos_byte)
find_descriptor	inotify.c	/^find_descriptor (Lisp_Object descriptor)$/;"	f	file:	signature:(Lisp_Object descriptor)
find_emacs_zone_regions	unexmacosx.c	/^find_emacs_zone_regions (void)$/;"	f	file:	signature:(void)
find_field	editfns.c	/^find_field (Lisp_Object pos, Lisp_Object merge_at_boundary,$/;"	f	file:	signature:(Lisp_Object pos, Lisp_Object merge_at_boundary, Lisp_Object beg_limit, ptrdiff_t *beg, Lisp_Object end_limit, ptrdiff_t *end)
find_first_strong_char	bidi.c	/^find_first_strong_char (ptrdiff_t pos, ptrdiff_t bytepos, ptrdiff_t end,$/;"	f	file:	signature:(ptrdiff_t pos, ptrdiff_t bytepos, ptrdiff_t end, ptrdiff_t *disp_pos, int *disp_prop, struct bidi_string_data *string, struct window *w, bool string_p, bool frame_window_p, ptrdiff_t *ch_len, ptrdiff_t *nchars, bool stop_at_pdi)
find_first_unchanged_at_end_row	xdisp.c	/^find_first_unchanged_at_end_row (struct window *w,$/;"	f	file:	signature:(struct window *w, ptrdiff_t *delta, ptrdiff_t *delta_bytes)
find_first_unchanged_at_end_row	xdisp.c	/^static struct glyph_row *find_first_unchanged_at_end_row (struct window *,$/;"	p	file:	signature:(struct window *, ptrdiff_t *, ptrdiff_t *)
find_font_encoding	font.c	/^find_font_encoding (Lisp_Object fontname)$/;"	f	signature:(Lisp_Object fontname)
find_font_encoding	font.h	/^extern Lisp_Object find_font_encoding (Lisp_Object);$/;"	p	signature:(Lisp_Object)
find_handler_clause	eval.c	/^find_handler_clause (Lisp_Object handlers, Lisp_Object conditions)$/;"	f	file:	signature:(Lisp_Object handlers, Lisp_Object conditions)
find_handler_clause	eval.c	/^static Lisp_Object find_handler_clause (Lisp_Object, Lisp_Object);$/;"	p	file:
find_heap	ralloc.c	/^find_heap (void *address)$/;"	f	file:	signature:(void *address)
find_hot_spot	dispextern.h	/^extern Lisp_Object find_hot_spot (Lisp_Object, int, int);$/;"	p	signature:(Lisp_Object, int, int)
find_hot_spot	xdisp.c	/^find_hot_spot (Lisp_Object map, int x, int y)$/;"	f	signature:(Lisp_Object map, int x, int y)
find_icon_from_name	gtkutil.c	/^find_icon_from_name (char *name,$/;"	f	file:	signature:(char *name, GtkIconTheme *icon_theme, char **icon_name)
find_interval	intervals.c	/^find_interval (register INTERVAL tree, register ptrdiff_t position)$/;"	f	signature:(register INTERVAL tree, register ptrdiff_t position)
find_interval	intervals.h	/^extern INTERVAL find_interval (INTERVAL, ptrdiff_t);$/;"	p	signature:(INTERVAL, ptrdiff_t)
find_last_row_displaying_text	xdisp.c	/^find_last_row_displaying_text (struct glyph_matrix *, struct it *,$/;"	p	file:	signature:(struct glyph_matrix *, struct it *, struct glyph_row *)
find_last_row_displaying_text	xdisp.c	/^find_last_row_displaying_text (struct glyph_matrix *matrix, struct it *it,$/;"	f	file:	signature:(struct glyph_matrix *matrix, struct it *it, struct glyph_row *start)
find_last_unchanged_at_beg_row	xdisp.c	/^find_last_unchanged_at_beg_row (struct window *w)$/;"	f	file:	signature:(struct window *w)
find_last_unchanged_at_beg_row	xdisp.c	/^static struct glyph_row *find_last_unchanged_at_beg_row (struct window *);$/;"	p	file:	signature:(struct window *)
find_newline	lisp.h	/^extern ptrdiff_t find_newline (ptrdiff_t, ptrdiff_t, ptrdiff_t, ptrdiff_t,$/;"	p	signature:(ptrdiff_t, ptrdiff_t, ptrdiff_t, ptrdiff_t, ptrdiff_t, ptrdiff_t *, ptrdiff_t *, bool)
find_newline	search.c	/^find_newline (ptrdiff_t start, ptrdiff_t start_byte, ptrdiff_t end,$/;"	f	signature:(ptrdiff_t start, ptrdiff_t start_byte, ptrdiff_t end, ptrdiff_t end_byte, ptrdiff_t count, ptrdiff_t *shortage, ptrdiff_t *bytepos, bool allow_quit)
find_newline1	search.c	/^find_newline1 (ptrdiff_t start, ptrdiff_t start_byte, ptrdiff_t end,$/;"	f	file:	signature:(ptrdiff_t start, ptrdiff_t start_byte, ptrdiff_t end, ptrdiff_t end_byte, ptrdiff_t count, ptrdiff_t *shortage, ptrdiff_t *bytepos, bool allow_quit)
find_newline_no_quit	lisp.h	/^extern ptrdiff_t find_newline_no_quit (ptrdiff_t, ptrdiff_t,$/;"	p	signature:(ptrdiff_t, ptrdiff_t, ptrdiff_t, ptrdiff_t *)
find_newline_no_quit	search.c	/^find_newline_no_quit (ptrdiff_t from, ptrdiff_t frombyte,$/;"	f	signature:(ptrdiff_t from, ptrdiff_t frombyte, ptrdiff_t cnt, ptrdiff_t *bytepos)
find_row_edges	xdisp.c	/^find_row_edges (struct it *it, struct glyph_row *row,$/;"	f	file:	signature:(struct it *it, struct glyph_row *row, ptrdiff_t min_pos, ptrdiff_t min_bpos, ptrdiff_t max_pos, ptrdiff_t max_bpos)
find_rtl_image	gtkutil.c	/^find_rtl_image (struct frame *f, Lisp_Object image, Lisp_Object rtl)$/;"	f	file:	signature:(struct frame *f, Lisp_Object image, Lisp_Object rtl)
find_section	unexw32.c	/^find_section (const char * name, IMAGE_NT_HEADERS * nt_header)$/;"	f	signature:(const char * name, IMAGE_NT_HEADERS * nt_header)
find_section	w32heap.h	/^IMAGE_SECTION_HEADER * find_section (const char *, IMAGE_NT_HEADERS *);$/;"	p	signature:(const char *, IMAGE_NT_HEADERS *)
find_sound_type	sound.c	/^find_sound_type (struct sound *s)$/;"	f	file:	signature:(struct sound *s)
find_start_begv	syntax.c	/^static ptrdiff_t find_start_begv;$/;"	v	file:
find_start_buffer	syntax.c	/^static struct buffer *find_start_buffer;$/;"	v	typeref:struct:buffer	file:
find_start_modiff	syntax.c	/^static EMACS_INT find_start_modiff;$/;"	v	file:
find_start_pos	syntax.c	/^static ptrdiff_t find_start_pos;$/;"	v	file:
find_start_value	syntax.c	/^static ptrdiff_t find_start_value;$/;"	v	file:
find_start_value_byte	syntax.c	/^static ptrdiff_t find_start_value_byte;$/;"	v	file:
find_string_data_in_pure	alloc.c	/^find_string_data_in_pure (const char *data, ptrdiff_t nbytes)$/;"	f	file:	signature:(const char *data, ptrdiff_t nbytes)
find_suspicious_object_in_range	alloc.c	/^find_suspicious_object_in_range (void *begin, void *end)$/;"	f	file:	signature:(void *begin, void *end)
find_suspicious_object_in_range	alloc.c	/^static void *find_suspicious_object_in_range (void *begin, void *end);$/;"	p	file:	signature:(void *begin, void *end)
find_suspicious_object_in_range	alloc.c	316;"	d	file:
find_symbol_value	data.c	/^find_symbol_value (Lisp_Object symbol)$/;"	f	signature:(Lisp_Object symbol)
find_symbol_value	lisp.h	/^extern Lisp_Object find_symbol_value (Lisp_Object);$/;"	p	signature:(Lisp_Object)
find_user_signal_name	keyboard.c	/^find_user_signal_name (int sig)$/;"	f	file:	signature:(int sig)
find_user_signal_name	keyboard.c	/^static char *find_user_signal_name (int);$/;"	p	file:	signature:(int)
finished	image.c	/^  boolean finished;$/;"	m	struct:jpeg_stdio_mgr	file:	access:public
finish_after_tls_connection	process.c	/^finish_after_tls_connection (Lisp_Object proc)$/;"	f	file:	signature:(Lisp_Object proc)
finish_composition	coding.c	/^finish_composition (int *charbuf, struct composition_status *cmp_status)$/;"	f	file:	signature:(int *charbuf, struct composition_status *cmp_status)
finish_menu_items	menu.c	/^finish_menu_items (void)$/;"	f	signature:(void)
FIRST	bytecode.c	431;"	d	file:
first	gmalloc.c	/^		size_t first; \/* First free fragment of the block.  *\/$/;"	m	struct:__anon60::__anon61::__anon62::__anon63	file:	access:public
first	window.c	/^  (Lisp_Object window, Lisp_Object first, Lisp_Object last, Lisp_Object body, Lisp_Object inverse, Lisp_Object left)$/;"	v
FIRSTFILE_OBJ	Makefile	/^FIRSTFILE_OBJ=$/;"	m
firstonly	keymap.c	/^  (Lisp_Object definition, Lisp_Object keymap, Lisp_Object firstonly, Lisp_Object noindirect, Lisp_Object no_remap)$/;"	v
first_bloc	ralloc.c	/^  struct bp *first_bloc;$/;"	m	struct:heap	typeref:struct:heap::bp	file:	access:public
first_bloc	ralloc.c	/^static bloc_ptr first_bloc, last_bloc;$/;"	v	file:
FIRST_CHAR_POSITION	nsterm.h	1116;"	d
first_dpyinfo	xsettings.c	/^static struct x_display_info *first_dpyinfo;$/;"	v	typeref:struct:x_display_info	file:
first_elt	dispextern.h	/^  bool_bf first_elt : 1;	\/* if true, examine current char first *\/$/;"	m	struct:bidi_it	access:public
first_glyph	dispextern.h	/^  struct glyph *first_glyph;$/;"	m	struct:glyph_string	typeref:struct:glyph_string::glyph	access:public
first_heap	ralloc.c	/^static heap_ptr first_heap, last_heap;$/;"	v	file:
first_idx	w32.c	/^static int first_idx = -1, last_idx = -1;$/;"	v	file:
FIRST_STRING_P	regex.c	504;"	d	file:
first_visible_x	dispextern.h	/^  int first_visible_x, last_visible_x;$/;"	m	struct:it	access:public
first_vpos	dispextern.h	/^  int first_vpos;$/;"	m	struct:it	access:public
fixedcase	search.c	/^  (Lisp_Object newtext, Lisp_Object fixedcase, Lisp_Object literal, Lisp_Object string, Lisp_Object subexp)$/;"	v
fixed_drives	w32.c	/^static BOOL fixed_drives[26];$/;"	v	file:
FIXNUM_BITS	lisp.h	/^    FIXNUM_BITS = VALBITS + 1$/;"	e	enum:Lisp_Bits
FIXNUM_OVERFLOW_P	lisp.h	1007;"	d
fixup_alt_jump	regex.c	/^  pattern_offset_t fixup_alt_jump;$/;"	m	struct:__anon146	file:	access:public
FIXUP_ALT_JUMP	regex.c	2390;"	d	file:
fixup_executable	unexcw.c	/^fixup_executable (int fd)$/;"	f	file:	signature:(int fd)
fixup_locale	emacs.c	/^fixup_locale (void)$/;"	f	signature:(void)
fixup_locale	lisp.h	/^INLINE void fixup_locale (void) {}$/;"	f	signature:(void)
fixup_locale	lisp.h	/^void fixup_locale (void);$/;"	p	signature:(void)
fix_command	callint.c	/^fix_command (Lisp_Object input, Lisp_Object values)$/;"	f	file:	signature:(Lisp_Object input, Lisp_Object values)
fix_overlapping_area	dispextern.h	/^  void (*fix_overlapping_area) (struct window *w, struct glyph_row *row,$/;"	m	struct:redisplay_interface	access:public
fix_overlays_before	buffer.c	/^fix_overlays_before (struct buffer *bp, ptrdiff_t prev, ptrdiff_t pos)$/;"	f	signature:(struct buffer *bp, ptrdiff_t prev, ptrdiff_t pos)
fix_overlays_before	buffer.h	/^extern void fix_overlays_before (struct buffer *, ptrdiff_t, ptrdiff_t);$/;"	p	signature:(struct buffer *, ptrdiff_t, ptrdiff_t)
fix_start_end_in_overlays	buffer.c	/^fix_start_end_in_overlays (register ptrdiff_t start, register ptrdiff_t end)$/;"	f	signature:(register ptrdiff_t start, register ptrdiff_t end)
fix_start_end_in_overlays	lisp.h	/^extern void fix_start_end_in_overlays (ptrdiff_t, ptrdiff_t);$/;"	p	signature:(ptrdiff_t, ptrdiff_t)
fkey_table	term.c	/^struct fkey_table {$/;"	s	file:
fkey_table::cap	term.c	/^  const char *cap, *name;$/;"	m	struct:fkey_table	file:	access:public
fkey_table::name	term.c	/^  const char *cap, *name;$/;"	m	struct:fkey_table	file:	access:public
flAccel	w32term.c	/^  DWORD flAccel;$/;"	m	struct:tagGLYPHSET	file:	access:public
flag	casefiddle.c	/^  enum case_action flag;$/;"	m	struct:casing_context	typeref:enum:casing_context::case_action	file:	access:public
flags	bidi.c	/^  unsigned flags : 2;$/;"	m	struct:bpa_stack_entry	file:	access:public
flags	coding.h	/^  unsigned flags;$/;"	m	struct:iso_2022_spec	access:public
flags	dispextern.h	/^  char flags;$/;"	m	struct:__anon104	access:public
flags	dispextern.h	/^  unsigned char flags;		\/* sos, override, isolate_status *\/$/;"	m	struct:bidi_stack	access:public
flags	gfilenotify.c	/^  (Lisp_Object file, Lisp_Object flags, Lisp_Object callback)$/;"	v
flags	kqueue.c	/^  (Lisp_Object file, Lisp_Object flags, Lisp_Object callback)$/;"	v
flags	process.c	/^  int flags;$/;"	m	struct:fd_callback_data	file:	access:public
Flags	w32.c	/^            ULONG Flags;$/;"	m	struct:_REPARSE_DATA_BUFFER::__anon66::__anon67	file:	access:public
flags	w32.c	/^  DWORD     flags;$/;"	m	struct:volume_info_data	file:	access:public
flags	w32.h	/^  unsigned         flags;$/;"	m	struct:__anon91	access:public
flags	xfns.c	/^    unsigned long flags;$/;"	m	struct:__anon39	file:	access:public
flag_bit	process.c	/^  int flag_bit;$/;"	m	struct:ifflag_def	file:	access:public
FLAG_EMBEDDING_INSIDE	bidi.c	2455;"	d	file:
FLAG_OPPOSITE_INSIDE	bidi.c	2456;"	d	file:
flag_sym	process.c	/^  const char *flag_sym;$/;"	m	struct:ifflag_def	file:	access:public
FLEXIBLE_ARRAY_MEMBER	config.h	144;"	d
FLOATP	lisp.h	/^(FLOATP) (Lisp_Object x)$/;"	f	signature:(Lisp_Object x)
FLOATP	lisp.h	356;"	d
floats	alloc.c	/^  struct Lisp_Float floats[FLOAT_BLOCK_SIZE];$/;"	m	struct:float_block	typeref:struct:float_block::Lisp_Float	file:	access:public
floats_consed	globals.h	831;"	d
float_block	alloc.c	/^static struct float_block *float_block;$/;"	v	typeref:struct:float_block	file:
float_block	alloc.c	/^struct float_block$/;"	s	file:
FLOAT_BLOCK	alloc.c	2594;"	d	file:
float_block::floats	alloc.c	/^  struct Lisp_Float floats[FLOAT_BLOCK_SIZE];$/;"	m	struct:float_block	typeref:struct:float_block::Lisp_Float	file:	access:public
float_block::gcmarkbits	alloc.c	/^  bits_word gcmarkbits[1 + FLOAT_BLOCK_SIZE \/ BITS_PER_BITS_WORD];$/;"	m	struct:float_block	file:	access:public
float_block::next	alloc.c	/^  struct float_block *next;$/;"	m	struct:float_block	typeref:struct:float_block::float_block	file:	access:public
float_block_index	alloc.c	/^static int float_block_index = FLOAT_BLOCK_SIZE;$/;"	v	file:
FLOAT_BLOCK_SIZE	alloc.c	2575;"	d	file:
float_free_list	alloc.c	/^static struct Lisp_Float *float_free_list;$/;"	v	typeref:struct:Lisp_Float	file:
FLOAT_INDEX	alloc.c	2597;"	d	file:
FLOAT_MARK	alloc.c	2611;"	d	file:
FLOAT_MARKED_P	alloc.c	2608;"	d	file:
float_to_string	lisp.h	/^extern int float_to_string (char *, double);$/;"	p	signature:(char *, double)
float_to_string	print.c	/^float_to_string (char *buf, double data)$/;"	f	signature:(char *buf, double data)
FLOAT_TO_STRING_BUFSIZE	lisp.h	3722;"	d
FLOAT_UNMARK	alloc.c	2614;"	d	file:
FLOOR	ftfont.c	1530;"	d	file:
flow	keyboard.c	/^  (Lisp_Object flow, Lisp_Object terminal)$/;"	v
flow	keyboard.c	/^  (Lisp_Object interrupt, Lisp_Object flow, Lisp_Object meta, Lisp_Object quit)$/;"	v
flow_control	termchar.h	/^  bool_bf flow_control : 1;$/;"	m	struct:tty_display_info	access:public
flt_font	ftfont.c	/^  MFLTFont flt_font;$/;"	m	struct:MFLTFontFT	file:	access:public
flush_dirty_back_buffers	xterm.c	/^flush_dirty_back_buffers (void)$/;"	f	file:	signature:(void)
flush_display	dispextern.h	/^  void (*flush_display) (struct frame *f);$/;"	m	struct:redisplay_interface	access:public
flush_frame	frame.h	/^flush_frame (struct frame *f)$/;"	f	signature:(struct frame *f)
flush_stack_call_func	alloc.c	/^flush_stack_call_func (void (*func) (void *arg), void *arg)$/;"	f	signature:(void (*func) (void *arg), void *arg)
flush_stack_call_func	lisp.h	/^extern void flush_stack_call_func (void (*func) (void *arg), void *arg);$/;"	p	signature:(void (*func) (void *arg), void *arg)
flush_stdout	dispnew.c	/^flush_stdout (void)$/;"	f	signature:(void)
fn	atimer.h	/^  atimer_callback fn;$/;"	m	struct:atimer	access:public
FOCUS_EXPLICIT	w32term.h	/^  FOCUS_EXPLICIT = 2$/;"	e	enum:__anon141
FOCUS_EXPLICIT	xterm.h	/^  FOCUS_EXPLICIT = 2$/;"	e	enum:__anon88
focus_follows_mouse	globals.h	799;"	d
focus_frame	frame.h	/^  Lisp_Object focus_frame;$/;"	m	struct:frame	access:public
focus_frame	window.c	/^    Lisp_Object focus_frame;$/;"	m	struct:save_window_data	file:	access:public
FOCUS_IMPLICIT	w32term.h	/^  FOCUS_IMPLICIT = 1,$/;"	e	enum:__anon141
FOCUS_IMPLICIT	xterm.h	/^  FOCUS_IMPLICIT = 1,$/;"	e	enum:__anon88
FOCUS_IN_EVENT	termhooks.h	/^  FOCUS_IN_EVENT,$/;"	e	enum:event_kind
FOCUS_NONE	w32term.h	/^  FOCUS_NONE     = 0,$/;"	e	enum:__anon141
FOCUS_NONE	xterm.h	/^  FOCUS_NONE     = 0,$/;"	e	enum:__anon88
FOCUS_OUT_EVENT	termhooks.h	/^  FOCUS_OUT_EVENT,$/;"	e	enum:event_kind
focus_state	w32term.h	/^  int focus_state;$/;"	m	struct:x_output	access:public
focus_state	xterm.h	/^  int focus_state;$/;"	m	struct:x_output	access:public
FOF_NO_CONNECTED_ELEMENTS	w32fns.c	74;"	d	file:
follow_key	keyboard.c	/^follow_key (Lisp_Object keymap, Lisp_Object key)$/;"	f	file:	signature:(Lisp_Object keymap, Lisp_Object key)
font	composite.h	/^  void *font;$/;"	m	struct:composition	access:public
font	dispextern.h	/^  struct font *font;$/;"	m	struct:face	typeref:struct:face::font	access:public
font	dispextern.h	/^  struct font *font;$/;"	m	struct:glyph_string	typeref:struct:glyph_string::font	access:public
font	font.c	/^  (Lisp_Object font, Lisp_Object fold_wildcards)$/;"	v
font	font.c	/^  (Lisp_Object font, Lisp_Object frame)$/;"	v
font	font.c	/^  (Lisp_Object font, Lisp_Object key)$/;"	v
font	font.c	/^  (Lisp_Object font, Lisp_Object prop, Lisp_Object val)$/;"	v
font	font.h	/^struct font$/;"	s
font	ftcrfont.c	/^  struct font font;$/;"	m	struct:ftcrfont_info	typeref:struct:ftcrfont_info::font	file:	access:public
font	ftfont.c	/^  struct font *font;$/;"	m	struct:MFLTFontFT	typeref:struct:MFLTFontFT::font	file:	access:public
font	ftfont.c	/^  struct font font;$/;"	m	struct:ftfont_info	typeref:struct:ftfont_info::font	file:	access:public
font	nsgui.h	/^  struct ns_font *font;$/;"	m	struct:_XGCValues	typeref:struct:_XGCValues::ns_font	access:public
font	nsgui.h	/^  void *font;$/;"	m	struct:_XGCValues	access:public
font	nsterm.h	/^  struct font *font;$/;"	m	struct:ns_output	typeref:struct:ns_output::font	access:public
font	nsterm.h	/^  struct font font;$/;"	m	struct:nsfont_info	typeref:struct:nsfont_info::font	access:public
font	w32font.h	/^  struct font font;$/;"	m	struct:w32font_info	typeref:struct:w32font_info::font	access:public
font	w32gui.h	/^  struct font *font;$/;"	m	struct:_XGCValues	typeref:struct:_XGCValues::font	access:public
font	w32term.h	/^  struct font *font;$/;"	m	struct:w32_output	typeref:struct:w32_output::font	access:public
font	xfont.c	/^  struct font font;$/;"	m	struct:xfont_info	typeref:struct:xfont_info::font	file:	access:public
font	xftfont.c	/^  struct font font;$/;"	m	struct:xftfont_info	typeref:struct:xftfont_info::font	file:	access:public
font	xsettings.c	/^  char *font;$/;"	m	struct:xsettings	file:	access:public
font	xterm.h	/^  struct font *font;$/;"	m	struct:x_output	typeref:struct:x_output::font	access:public
font::ascent	font.h	/^  int ascent, descent;$/;"	m	struct:font	access:public
font::average_width	font.h	/^  int average_width;$/;"	m	struct:font	access:public
font::baseline_offset	font.h	/^  int baseline_offset;$/;"	m	struct:font	access:public
font::default_ascent	font.h	/^  int default_ascent;$/;"	m	struct:font	access:public
font::descent	font.h	/^  int ascent, descent;$/;"	m	struct:font	access:public
font::driver	font.h	/^  struct font_driver const *driver;$/;"	m	struct:font	access:public
font::encoding_charset	font.h	/^  int encoding_charset;$/;"	m	struct:font	access:public
font::header	font.h	/^  struct vectorlike_header header;$/;"	m	struct:font	typeref:struct:font::vectorlike_header	access:public
font::height	font.h	/^  int height;$/;"	m	struct:font	access:public
font::max_width	font.h	/^  int max_width;$/;"	m	struct:font	access:public
font::min_width	font.h	/^  int min_width;$/;"	m	struct:font	access:public
font::pixel_size	font.h	/^  int pixel_size;$/;"	m	struct:font	access:public
font::props	font.h	/^  Lisp_Object props[FONT_OBJECT_MAX];$/;"	m	struct:font	access:public
font::relative_compose	font.h	/^  int relative_compose;$/;"	m	struct:font	access:public
font::repertory_charset	font.h	/^  int repertory_charset;$/;"	m	struct:font	access:public
font::space_width	font.h	/^  int space_width;$/;"	m	struct:font	access:public
font::underline_position	font.h	/^  int underline_position;$/;"	m	struct:font	access:public
font::underline_thickness	font.h	/^  int underline_thickness;$/;"	m	struct:font	access:public
font::vertical_centering	font.h	/^  bool vertical_centering;$/;"	m	struct:font	access:public
FONTCONFIG_CFLAGS	Makefile	/^FONTCONFIG_CFLAGS = -isystem \/usr\/include\/freetype2$/;"	m
FONTCONFIG_LIBS	Makefile	/^FONTCONFIG_LIBS = -lfontconfig -lfreetype$/;"	m
FONTIFIED_PROP_IDX	dispextern.h	/^  FONTIFIED_PROP_IDX,$/;"	e	enum:prop_idx
FONTP	font.h	/^FONTP (Lisp_Object x)$/;"	f	signature:(Lisp_Object x)
fontset	dispextern.h	/^  int fontset;$/;"	m	struct:face	access:public
fontset	fontset.c	/^  (Lisp_Object fontset, Lisp_Object frame)$/;"	v
fontset	nsterm.h	/^  int fontset; \/* only used with font_backend *\/$/;"	m	struct:ns_output	access:public
fontset	w32term.h	/^  int fontset;$/;"	m	struct:w32_output	access:public
fontset	xterm.h	/^  int fontset;$/;"	m	struct:x_output	access:public
fontset_add	fontset.c	/^fontset_add (Lisp_Object fontset, Lisp_Object range, Lisp_Object elt, Lisp_Object add)$/;"	f	file:	signature:(Lisp_Object fontset, Lisp_Object range, Lisp_Object elt, Lisp_Object add)
FONTSET_ADD	fontset.c	327;"	d	file:
fontset_ascii	fontset.c	/^fontset_ascii (int id)$/;"	f	signature:(int id)
FONTSET_ASCII	fontset.c	206;"	d	file:
fontset_ascii	fontset.h	/^extern Lisp_Object fontset_ascii (int);$/;"	p	signature:(int)
FONTSET_BASE	fontset.c	215;"	d	file:
fontset_compare_rfontdef	fontset.c	/^fontset_compare_rfontdef (const void *val1, const void *val2)$/;"	f	file:	signature:(const void *val1, const void *val2)
FONTSET_DEFAULT	fontset.c	236;"	d	file:
FONTSET_FALLBACK	fontset.c	245;"	d	file:
fontset_find_font	fontset.c	/^fontset_find_font (Lisp_Object fontset, int c, struct face *face,$/;"	f	file:	signature:(Lisp_Object fontset, int c, struct face *face, int charset_id, bool fallback)
fontset_font	fontset.c	/^fontset_font (Lisp_Object fontset, int c, struct face *face, int id)$/;"	f	file:	signature:(Lisp_Object fontset, int c, struct face *face, int id)
FONTSET_FRAME	fontset.c	222;"	d	file:
fontset_from_font	fontset.c	/^fontset_from_font (Lisp_Object font_object)$/;"	f	signature:(Lisp_Object font_object)
fontset_from_font	fontset.h	/^extern int fontset_from_font (Lisp_Object);$/;"	p	signature:(Lisp_Object)
FONTSET_FROM_ID	fontset.c	186;"	d	file:
fontset_get_font_group	fontset.c	/^fontset_get_font_group (Lisp_Object fontset, int c)$/;"	f	file:	signature:(Lisp_Object fontset, int c)
FONTSET_ID	fontset.c	190;"	d	file:
fontset_id_valid_p	fontset.c	/^fontset_id_valid_p (int id)$/;"	f	file:	signature:(int id)
fontset_name	fontset.c	/^fontset_name (int id)$/;"	f	signature:(int id)
FONTSET_NAME	fontset.c	199;"	d	file:
fontset_name	fontset.h	/^extern Lisp_Object fontset_name (int);$/;"	p	signature:(int)
FONTSET_NOFONT_FACE	fontset.c	229;"	d	file:
fontset_pattern_regexp	fontset.c	/^fontset_pattern_regexp (Lisp_Object pattern)$/;"	f	file:	signature:(Lisp_Object pattern)
fontset_ref	fontset.c	/^fontset_ref (Lisp_Object fontset, int c)$/;"	f	file:	signature:(Lisp_Object fontset, int c)
FONTSET_REF	fontset.c	295;"	d	file:
FONTSET_SET	fontset.c	317;"	d	file:
fonts_changed	frame.h	/^  bool_bf fonts_changed : 1;$/;"	m	struct:frame	access:public
font_add_log	font.c	/^font_add_log (const char *action, Lisp_Object arg, Lisp_Object result)$/;"	f	signature:(const char *action, Lisp_Object arg, Lisp_Object result)
font_add_log	font.h	/^extern void font_add_log (const char *, Lisp_Object, Lisp_Object);$/;"	p	signature:(const char *, Lisp_Object, Lisp_Object)
FONT_ADD_LOG	font.h	932;"	d
FONT_ADSTYLE_INDEX	font.h	/^    FONT_ADSTYLE_INDEX,$/;"	e	enum:font_property_index
font_at	font.c	/^font_at (int c, ptrdiff_t pos, struct face *face, struct window *w,$/;"	f	file:	signature:(int c, ptrdiff_t pos, struct face *face, struct window *w, Lisp_Object string)
FONT_AVGWIDTH_INDEX	font.h	/^    FONT_AVGWIDTH_INDEX,$/;"	e	enum:font_property_index
FONT_BASE	font.h	235;"	d
font_bitmap	font.h	/^struct font_bitmap$/;"	s
font_bitmap::advance	font.h	/^  int advance;$/;"	m	struct:font_bitmap	access:public
font_bitmap::bits_per_pixel	font.h	/^  int bits_per_pixel;$/;"	m	struct:font_bitmap	access:public
font_bitmap::buffer	font.h	/^  unsigned char *buffer;$/;"	m	struct:font_bitmap	access:public
font_bitmap::left	font.h	/^  int left;$/;"	m	struct:font_bitmap	access:public
font_bitmap::pitch	font.h	/^  int pitch;$/;"	m	struct:font_bitmap	access:public
font_bitmap::rows	font.h	/^  int rows;$/;"	m	struct:font_bitmap	access:public
font_bitmap::top	font.h	/^  int top;$/;"	m	struct:font_bitmap	access:public
font_bitmap::width	font.h	/^  int width;$/;"	m	struct:font_bitmap	access:public
font_build_object	font.c	/^font_build_object (int vectorsize, Lisp_Object type,$/;"	f	signature:(int vectorsize, Lisp_Object type, Lisp_Object entity, double pixelsize)
font_build_object	font.h	/^extern Lisp_Object font_build_object (int, Lisp_Object, Lisp_Object, double);$/;"	p	signature:(int, Lisp_Object, Lisp_Object, double)
font_callback_data	w32font.c	/^struct font_callback_data$/;"	s	file:
font_callback_data::frame	w32font.c	/^  Lisp_Object frame;$/;"	m	struct:font_callback_data	file:	access:public
font_callback_data::list	w32font.c	/^  Lisp_Object list;$/;"	m	struct:font_callback_data	file:	access:public
font_callback_data::opentype_only	w32font.c	/^  bool opentype_only;$/;"	m	struct:font_callback_data	file:	access:public
font_callback_data::orig_font_spec	w32font.c	/^  Lisp_Object orig_font_spec;$/;"	m	struct:font_callback_data	file:	access:public
font_callback_data::pattern	w32font.c	/^  LOGFONT pattern;$/;"	m	struct:font_callback_data	file:	access:public
font_charset_alist	font.c	/^static Lisp_Object font_charset_alist;$/;"	v	file:
font_check_otf	font.c	/^font_check_otf (Lisp_Object spec, Lisp_Object otf_capability)$/;"	f	file:	signature:(Lisp_Object spec, Lisp_Object otf_capability)
font_check_otf_features	font.c	/^font_check_otf_features (Lisp_Object script, Lisp_Object langsys,$/;"	f	file:	signature:(Lisp_Object script, Lisp_Object langsys, Lisp_Object features, Lisp_Object table)
font_clear_cache	font.c	/^font_clear_cache (struct frame *f, Lisp_Object cache,$/;"	f	file:	signature:(struct frame *f, Lisp_Object cache, struct font_driver const *driver)
font_clear_cache	font.c	/^static void font_clear_cache (struct frame *, Lisp_Object,$/;"	p	file:	signature:(struct frame *, Lisp_Object, struct font_driver const *)
font_clear_prop	font.c	/^font_clear_prop (Lisp_Object *attrs, enum font_property_index prop)$/;"	f	signature:(Lisp_Object *attrs, enum font_property_index prop)
font_clear_prop	font.h	/^extern void font_clear_prop (Lisp_Object *attrs,$/;"	p	signature:(Lisp_Object *attrs, enum font_property_index prop)
font_close_object	font.c	/^font_close_object (struct frame *f, Lisp_Object font_object)$/;"	f	file:	signature:(struct frame *f, Lisp_Object font_object)
font_compare	font.c	/^font_compare (const void *d1, const void *d2)$/;"	f	file:	signature:(const void *d1, const void *d2)
font_data	frame.h	/^  Lisp_Object font_data;$/;"	m	struct:frame	access:public
FONT_DEBUG	font.h	926;"	d
font_deferred_log	font.c	/^font_deferred_log (const char *action, Lisp_Object arg, Lisp_Object result)$/;"	f	signature:(const char *action, Lisp_Object arg, Lisp_Object result)
font_deferred_log	font.h	/^extern void font_deferred_log (const char *, Lisp_Object, Lisp_Object);$/;"	p	signature:(const char *, Lisp_Object, Lisp_Object)
FONT_DEFERRED_LOG	font.h	938;"	d
FONT_DEF_ENCODING	fontset.c	264;"	d	file:
FONT_DEF_NEW	fontset.c	255;"	d	file:
FONT_DEF_REPERTORY	fontset.c	265;"	d	file:
FONT_DEF_SPEC	fontset.c	263;"	d	file:
font_delete_unmatched	font.c	/^font_delete_unmatched (Lisp_Object vec, Lisp_Object spec, int size)$/;"	f	file:	signature:(Lisp_Object vec, Lisp_Object spec, int size)
FONT_DESCENT	font.h	236;"	d
font_done_for_face	font.c	/^font_done_for_face (struct frame *f, struct face *face)$/;"	f	signature:(struct frame *f, struct face *face)
font_done_for_face	font.h	/^extern void font_done_for_face (struct frame *f, struct face *face);$/;"	p	signature:(struct frame *f, struct face *face)
FONT_DPI_INDEX	font.h	/^    FONT_DPI_INDEX,$/;"	e	enum:font_property_index
font_driver	font.h	/^struct font_driver$/;"	s
font_driver::anchor_point	font.h	/^  int (*anchor_point) (struct font *font, unsigned code, int index,$/;"	m	struct:font_driver	access:public
font_driver::cached_font_ok	font.h	/^  bool (*cached_font_ok) (struct frame *f,$/;"	m	struct:font_driver	access:public
font_driver::case_sensitive	font.h	/^  bool case_sensitive;$/;"	m	struct:font_driver	access:public
font_driver::check	font.h	/^  int (*check) (struct frame *f, struct font *font);$/;"	m	struct:font_driver	access:public
font_driver::close	font.h	/^  void (*close) (struct font *font);$/;"	m	struct:font_driver	access:public
font_driver::combining_capability	font.h	/^  Lisp_Object (*combining_capability) (struct font *font);$/;"	m	struct:font_driver	access:public
font_driver::done_face	font.h	/^  void (*done_face) (struct frame *f, struct face *face);$/;"	m	struct:font_driver	access:public
font_driver::draw	font.h	/^  int (*draw) (struct glyph_string *s, int from, int to,$/;"	m	struct:font_driver	access:public
font_driver::drop_xrender_surfaces	font.h	/^  void (*drop_xrender_surfaces) (struct frame *f);$/;"	m	struct:font_driver	access:public
font_driver::encode_char	font.h	/^  unsigned (*encode_char) (struct font *font, int c);$/;"	m	struct:font_driver	access:public
font_driver::end_for_frame	font.h	/^  int (*end_for_frame) (struct frame *f);$/;"	m	struct:font_driver	access:public
font_driver::filter_properties	font.h	/^  void (*filter_properties) (Lisp_Object font, Lisp_Object properties);$/;"	m	struct:font_driver	access:public
font_driver::free_bitmap	font.h	/^  void (*free_bitmap) (struct font *font, struct font_bitmap *bitmap);$/;"	m	struct:font_driver	access:public
font_driver::free_entity	font.h	/^  void (*free_entity) (Lisp_Object font_entity);$/;"	m	struct:font_driver	access:public
font_driver::get_bitmap	font.h	/^  int (*get_bitmap) (struct font *font, unsigned code,$/;"	m	struct:font_driver	access:public
font_driver::get_cache	font.h	/^  Lisp_Object (*get_cache) (struct frame *f);$/;"	m	struct:font_driver	access:public
font_driver::get_variation_glyphs	font.h	/^  int (*get_variation_glyphs) (struct font *font,$/;"	m	struct:font_driver	access:public
font_driver::has_char	font.h	/^  int (*has_char) (Lisp_Object font, int c);$/;"	m	struct:font_driver	access:public
font_driver::list	font.h	/^  Lisp_Object (*list) (struct frame *frame, Lisp_Object font_spec);$/;"	m	struct:font_driver	access:public
font_driver::list_family	font.h	/^  Lisp_Object (*list_family) (struct frame *f);$/;"	m	struct:font_driver	access:public
font_driver::match	font.h	/^  Lisp_Object (*match) (struct frame *f, Lisp_Object spec);$/;"	m	struct:font_driver	access:public
font_driver::open	font.h	/^  Lisp_Object (*open) (struct frame *f, Lisp_Object font_entity,$/;"	m	struct:font_driver	access:public
font_driver::otf_capability	font.h	/^  Lisp_Object (*otf_capability) (struct font *font);$/;"	m	struct:font_driver	access:public
font_driver::otf_drive	font.h	/^  int (*otf_drive) (struct font *font, Lisp_Object features,$/;"	m	struct:font_driver	access:public
font_driver::prepare_face	font.h	/^  void (*prepare_face) (struct frame *f, struct face *face);$/;"	m	struct:font_driver	access:public
font_driver::shape	font.h	/^  Lisp_Object (*shape) (Lisp_Object lgstring);$/;"	m	struct:font_driver	access:public
font_driver::start_for_frame	font.h	/^  int (*start_for_frame) (struct frame *f);$/;"	m	struct:font_driver	access:public
font_driver::text_extents	font.h	/^  void (*text_extents) (struct font *font,$/;"	m	struct:font_driver	access:public
font_driver::type	font.h	/^  Lisp_Object type;$/;"	m	struct:font_driver	access:public
font_driver_list	font.c	/^static struct font_driver_list *font_driver_list;$/;"	v	typeref:struct:font_driver_list	file:
font_driver_list	font.h	/^struct font_driver_list$/;"	s
font_driver_list	frame.h	/^  struct font_driver_list *font_driver_list;$/;"	m	struct:frame	typeref:struct:frame::font_driver_list	access:public
font_driver_list::driver	font.h	/^  struct font_driver const *driver;$/;"	m	struct:font_driver_list	access:public
font_driver_list::next	font.h	/^  struct font_driver_list *next;$/;"	m	struct:font_driver_list	typeref:struct:font_driver_list::font_driver_list	access:public
font_driver_list::on	font.h	/^  bool on;$/;"	m	struct:font_driver_list	access:public
font_driver_preference	font.c	/^  int font_driver_preference;$/;"	m	struct:font_sort_data	file:	access:public
font_drop_xrender_surfaces	font.c	/^font_drop_xrender_surfaces (struct frame *f)$/;"	f	signature:(struct frame *f)
font_drop_xrender_surfaces	font.h	/^extern void font_drop_xrender_surfaces (struct frame *f);$/;"	p	signature:(struct frame *f)
font_encode_char	font.c	/^font_encode_char (Lisp_Object font_object, int c)$/;"	f	file:	signature:(Lisp_Object font_object, int c)
font_encode_char	font.c	/^static unsigned font_encode_char (Lisp_Object, int);$/;"	p	file:	signature:(Lisp_Object, int)
FONT_ENCODING_NOT_DECIDED	font.h	258;"	d
font_entity	font.c	/^  (Lisp_Object font_entity, Lisp_Object size, Lisp_Object frame)$/;"	v
font_entity	font.h	/^struct font_entity$/;"	s
font_entity::header	font.h	/^  struct vectorlike_header header;$/;"	m	struct:font_entity	typeref:struct:font_entity::vectorlike_header	access:public
font_entity::props	font.h	/^  Lisp_Object props[FONT_ENTITY_MAX];$/;"	m	struct:font_entity	access:public
FONT_ENTITY_MAX	font.h	/^    FONT_ENTITY_MAX,$/;"	e	enum:font_property_index
FONT_ENTITY_P	font.h	/^FONT_ENTITY_P (Lisp_Object x)$/;"	f	signature:(Lisp_Object x)
font_expand_wildcards	font.c	/^font_expand_wildcards (Lisp_Object *field, int n)$/;"	f	file:	signature:(Lisp_Object *field, int n)
font_expand_wildcards	font.c	/^static int font_expand_wildcards (Lisp_Object *, int);$/;"	p	file:	signature:(Lisp_Object *, int)
FONT_EXTRA_INDEX	font.h	/^    FONT_EXTRA_INDEX,		\/* alist		alist *\/$/;"	e	enum:font_property_index
FONT_FAMILY_INDEX	font.h	/^    FONT_FAMILY_INDEX,$/;"	e	enum:font_property_index
FONT_FILE_INDEX	font.h	/^    FONT_FILE_INDEX,$/;"	e	enum:font_property_index
font_fill_lglyph_metrics	font.c	/^font_fill_lglyph_metrics (Lisp_Object glyph, Lisp_Object font_object)$/;"	f	signature:(Lisp_Object glyph, Lisp_Object font_object)
font_fill_lglyph_metrics	font.h	/^extern void font_fill_lglyph_metrics (Lisp_Object, Lisp_Object);$/;"	p	signature:(Lisp_Object, Lisp_Object)
font_filter_properties	font.c	/^font_filter_properties (Lisp_Object font,$/;"	f	signature:(Lisp_Object font, Lisp_Object alist, const char *const boolean_properties[], const char *const non_boolean_properties[])
font_filter_properties	font.h	/^extern void font_filter_properties (Lisp_Object font,$/;"	p	signature:(Lisp_Object font, Lisp_Object alist, const char *const boolean_properties[], const char *const non_boolean_properties[])
font_find_for_lface	font.c	/^font_find_for_lface (struct frame *f, Lisp_Object *attrs, Lisp_Object spec, int c)$/;"	f	signature:(struct frame *f, Lisp_Object *attrs, Lisp_Object spec, int c)
font_find_for_lface	font.h	/^extern Lisp_Object font_find_for_lface (struct frame *f, Lisp_Object *lface,$/;"	p	signature:(struct frame *f, Lisp_Object *lface, Lisp_Object spec, int c)
font_finish_cache	font.c	/^font_finish_cache (struct frame *f, struct font_driver const *driver)$/;"	f	file:	signature:(struct frame *f, struct font_driver const *driver)
font_for_char	fontset.c	/^font_for_char (struct face *face, int c, ptrdiff_t pos, Lisp_Object object)$/;"	f	signature:(struct face *face, int c, ptrdiff_t pos, Lisp_Object object)
font_for_char	fontset.h	/^extern Lisp_Object font_for_char (struct face *, int, ptrdiff_t, Lisp_Object);$/;"	p	signature:(struct face *, int, ptrdiff_t, Lisp_Object)
font_for_underline_metrics	dispextern.h	/^extern struct font *font_for_underline_metrics (struct glyph_string *);$/;"	p	signature:(struct glyph_string *)
font_for_underline_metrics	xdisp.c	/^font_for_underline_metrics (struct glyph_string *s)$/;"	f	signature:(struct glyph_string *s)
FONT_FOUNDRY_INDEX	font.h	/^    FONT_FOUNDRY_INDEX,$/;"	e	enum:font_property_index
FONT_FULLNAME_INDEX	font.h	/^    FONT_FULLNAME_INDEX,$/;"	e	enum:font_property_index
font_get_cache	font.c	/^font_get_cache (struct frame *f, struct font_driver const *driver)$/;"	f	file:	signature:(struct frame *f, struct font_driver const *driver)
font_get_frame	font.h	/^extern Lisp_Object font_get_frame (Lisp_Object font_object);$/;"	p	signature:(Lisp_Object font_object)
font_get_frame_data	font.c	/^font_get_frame_data (struct frame *f, Lisp_Object driver)$/;"	f	signature:(struct frame *f, Lisp_Object driver)
font_get_frame_data	font.h	/^extern void *font_get_frame_data (struct frame *f, Lisp_Object);$/;"	p	signature:(struct frame *f, Lisp_Object)
font_get_name	font.c	/^font_get_name (Lisp_Object font_object)$/;"	f	signature:(Lisp_Object font_object)
font_get_name	font.h	/^extern Lisp_Object font_get_name (Lisp_Object font_object);$/;"	p	signature:(Lisp_Object font_object)
FONT_HANDLE	w32font.h	61;"	d
font_has_char	font.c	/^font_has_char (struct frame *f, Lisp_Object font, int c)$/;"	f	signature:(struct frame *f, Lisp_Object font, int c)
font_has_char	font.h	/^extern int font_has_char (struct frame *, Lisp_Object, int);$/;"	p	signature:(struct frame *, Lisp_Object, int)
font_height	dispextern.h	/^    Lisp_Object font_height;$/;"	m	struct:it::iterator_stack_entry	access:public
font_height	dispextern.h	/^  Lisp_Object font_height;$/;"	m	struct:it	access:public
FONT_HEIGHT	font.h	234;"	d
font_intern_prop	font.c	/^font_intern_prop (const char *str, ptrdiff_t len, bool force_symbol)$/;"	f	signature:(const char *str, ptrdiff_t len, bool force_symbol)
font_intern_prop	font.h	/^extern Lisp_Object font_intern_prop (const char *str, ptrdiff_t len,$/;"	p	signature:(const char *str, ptrdiff_t len, bool force_symbol)
FONT_INVALID_CODE	font.h	558;"	d
font_list_entities	font.c	/^font_list_entities (struct frame *f, Lisp_Object spec)$/;"	f	signature:(struct frame *f, Lisp_Object spec)
font_list_entities	font.h	/^extern Lisp_Object font_list_entities (struct frame *, Lisp_Object);$/;"	p	signature:(struct frame *, Lisp_Object)
font_load_for_lface	font.c	/^font_load_for_lface (struct frame *f, Lisp_Object *attrs, Lisp_Object spec)$/;"	f	signature:(struct frame *f, Lisp_Object *attrs, Lisp_Object spec)
font_load_for_lface	font.h	/^extern Lisp_Object font_load_for_lface (struct frame *f, Lisp_Object *lface,$/;"	p	signature:(struct frame *f, Lisp_Object *lface, Lisp_Object spec)
font_make_entity	font.c	/^font_make_entity (void)$/;"	f	signature:(void)
font_make_entity	font.h	/^extern Lisp_Object font_make_entity (void);$/;"	p	signature:(void)
font_make_object	font.c	/^font_make_object (int size, Lisp_Object entity, int pixelsize)$/;"	f	signature:(int size, Lisp_Object entity, int pixelsize)
font_make_object	font.h	/^extern Lisp_Object font_make_object (int, Lisp_Object, int);$/;"	p	signature:(int, Lisp_Object, int)
font_make_spec	font.c	/^font_make_spec (void)$/;"	f	file:	signature:(void)
font_matches_spec	w32font.c	/^font_matches_spec (DWORD type, NEWTEXTMETRICEX *font,$/;"	f	file:	signature:(DWORD type, NEWTEXTMETRICEX *font, Lisp_Object spec, Lisp_Object backend, LOGFONT *logfont)
font_matching_entity	font.c	/^font_matching_entity (struct frame *f, Lisp_Object *attrs, Lisp_Object spec)$/;"	f	file:	signature:(struct frame *f, Lisp_Object *attrs, Lisp_Object spec)
font_matching_entity	font.c	/^static Lisp_Object font_matching_entity (struct frame *, Lisp_Object *,$/;"	p	file:	signature:(struct frame *, Lisp_Object *, Lisp_Object)
font_match_p	font.c	/^font_match_p (Lisp_Object spec, Lisp_Object font)$/;"	f	signature:(Lisp_Object spec, Lisp_Object font)
font_match_p	font.h	/^extern bool font_match_p (Lisp_Object spec, Lisp_Object font);$/;"	p	signature:(Lisp_Object spec, Lisp_Object font)
font_metrics	font.h	/^struct font_metrics$/;"	s
font_metrics::ascent	font.h	/^  short lbearing, rbearing, width, ascent, descent;$/;"	m	struct:font_metrics	access:public
font_metrics::descent	font.h	/^  short lbearing, rbearing, width, ascent, descent;$/;"	m	struct:font_metrics	access:public
font_metrics::lbearing	font.h	/^  short lbearing, rbearing, width, ascent, descent;$/;"	m	struct:font_metrics	access:public
font_metrics::rbearing	font.h	/^  short lbearing, rbearing, width, ascent, descent;$/;"	m	struct:font_metrics	access:public
font_metrics::width	font.h	/^  short lbearing, rbearing, width, ascent, descent;$/;"	m	struct:font_metrics	access:public
FONT_METRICS_INDEX	font.h	/^    FONT_METRICS_INDEX,$/;"	e	enum:font_property_index
FONT_NAME_INDEX	font.h	/^    FONT_NAME_INDEX = FONT_ENTITY_MAX,$/;"	e	enum:font_property_index
font_not_found_p	dispextern.h	/^  bool_bf font_not_found_p : 1;$/;"	m	struct:glyph_string	access:public
FONT_OBJ	Makefile	/^FONT_OBJ=xfont.o ftfont.o xftfont.o ftxfont.o$/;"	m
font_object	composite.c	/^  (Lisp_Object from, Lisp_Object to, Lisp_Object font_object, Lisp_Object string)$/;"	v
font_object	font.c	/^  (Lisp_Object font_object, Lisp_Object character)$/;"	v
font_object	font.c	/^  (Lisp_Object font_object, Lisp_Object frame)$/;"	v
font_object	font.c	/^  (Lisp_Object font_object, Lisp_Object from, Lisp_Object to,$/;"	v
FONT_OBJECT_MAX	font.h	/^    FONT_OBJECT_MAX$/;"	e	enum:font_property_index
FONT_OBJECT_P	font.h	/^FONT_OBJECT_P (Lisp_Object x)$/;"	f	signature:(Lisp_Object x)
FONT_OBJLIST_INDEX	font.h	/^    FONT_OBJLIST_INDEX = FONT_SPEC_MAX,$/;"	e	enum:font_property_index
font_open_by_name	font.c	/^font_open_by_name (struct frame *f, Lisp_Object name)$/;"	f	signature:(struct frame *f, Lisp_Object name)
font_open_by_name	font.h	/^extern Lisp_Object font_open_by_name (struct frame *f, Lisp_Object name);$/;"	p	signature:(struct frame *f, Lisp_Object name)
font_open_by_spec	font.c	/^font_open_by_spec (struct frame *f, Lisp_Object spec)$/;"	f	signature:(struct frame *f, Lisp_Object spec)
font_open_by_spec	font.h	/^extern Lisp_Object font_open_by_spec (struct frame *f, Lisp_Object spec);$/;"	p	signature:(struct frame *f, Lisp_Object spec)
font_open_entity	font.c	/^font_open_entity (struct frame *f, Lisp_Object entity, int pixel_size)$/;"	f	file:	signature:(struct frame *f, Lisp_Object entity, int pixel_size)
font_open_entity	font.c	/^static Lisp_Object font_open_entity (struct frame *, Lisp_Object, int);$/;"	p	file:	signature:(struct frame *, Lisp_Object, int)
font_open_for_lface	font.c	/^font_open_for_lface (struct frame *f, Lisp_Object entity, Lisp_Object *attrs, Lisp_Object spec)$/;"	f	signature:(struct frame *f, Lisp_Object entity, Lisp_Object *attrs, Lisp_Object spec)
font_open_for_lface	font.h	/^extern Lisp_Object font_open_for_lface (struct frame *f, Lisp_Object entity,$/;"	p	signature:(struct frame *f, Lisp_Object entity, Lisp_Object *lface, Lisp_Object spec)
font_parse_family_registry	font.c	/^font_parse_family_registry (Lisp_Object family, Lisp_Object registry, Lisp_Object font_spec)$/;"	f	signature:(Lisp_Object family, Lisp_Object registry, Lisp_Object font_spec)
font_parse_family_registry	font.h	/^extern void font_parse_family_registry (Lisp_Object family,$/;"	p	signature:(Lisp_Object family, Lisp_Object registry, Lisp_Object spec)
font_parse_fcname	font.c	/^font_parse_fcname (char *name, ptrdiff_t len, Lisp_Object font)$/;"	f	file:	signature:(char *name, ptrdiff_t len, Lisp_Object font)
font_parse_name	font.c	/^font_parse_name (char *name, ptrdiff_t namelen, Lisp_Object font)$/;"	f	file:	signature:(char *name, ptrdiff_t namelen, Lisp_Object font)
font_parse_name	font.c	/^static int font_parse_name (char *, ptrdiff_t, Lisp_Object);$/;"	p	file:	signature:(char *, ptrdiff_t, Lisp_Object)
font_parse_xlfd	font.c	/^font_parse_xlfd (char *name, ptrdiff_t len, Lisp_Object font)$/;"	f	signature:(char *name, ptrdiff_t len, Lisp_Object font)
font_parse_xlfd	font.h	/^extern int font_parse_xlfd (char *name, ptrdiff_t len, Lisp_Object font);$/;"	p	signature:(char *name, ptrdiff_t len, Lisp_Object font)
font_pixel_size	font.c	/^font_pixel_size (struct frame *f, Lisp_Object spec)$/;"	f	file:	signature:(struct frame *f, Lisp_Object spec)
font_pixel_size	font.c	/^static int font_pixel_size (struct frame *f, Lisp_Object);$/;"	p	file:	signature:(struct frame *f, Lisp_Object)
FONT_PIXEL_SIZE_QUANTUM	font.h	556;"	d
font_prepare_cache	font.c	/^font_prepare_cache (struct frame *f, struct font_driver const *driver)$/;"	f	file:	signature:(struct frame *f, struct font_driver const *driver)
font_prepare_for_face	font.c	/^font_prepare_for_face (struct frame *f, struct face *face)$/;"	f	signature:(struct frame *f, struct face *face)
font_prepare_for_face	font.h	/^extern void font_prepare_for_face (struct frame *f, struct face *face);$/;"	p	signature:(struct frame *f, struct face *face)
font_property_index	font.h	/^enum font_property_index$/;"	g
font_property_table	font.c	/^} font_property_table[] =$/;"	v	typeref:struct:__anon157	file:
font_props_for_sorting	xfaces.c	/^static enum font_property_index font_props_for_sorting[FONT_SIZE_INDEX];$/;"	v	typeref:enum:font_property_index	file:
font_prop_validate	font.c	/^font_prop_validate (int idx, Lisp_Object prop, Lisp_Object val)$/;"	f	file:	signature:(int idx, Lisp_Object prop, Lisp_Object val)
font_prop_validate	font.c	/^static Lisp_Object font_prop_validate (int, Lisp_Object, Lisp_Object);$/;"	p	file:	signature:(int, Lisp_Object, Lisp_Object)
font_prop_validate_non_neg	font.c	/^font_prop_validate_non_neg (Lisp_Object prop, Lisp_Object val)$/;"	f	file:	signature:(Lisp_Object prop, Lisp_Object val)
font_prop_validate_non_neg	font.c	/^static Lisp_Object font_prop_validate_non_neg (Lisp_Object, Lisp_Object);$/;"	p	file:
font_prop_validate_otf	font.c	/^font_prop_validate_otf (Lisp_Object prop, Lisp_Object val)$/;"	f	file:	signature:(Lisp_Object prop, Lisp_Object val)
font_prop_validate_spacing	font.c	/^font_prop_validate_spacing (Lisp_Object prop, Lisp_Object val)$/;"	f	file:	signature:(Lisp_Object prop, Lisp_Object val)
font_prop_validate_spacing	font.c	/^static Lisp_Object font_prop_validate_spacing (Lisp_Object, Lisp_Object);$/;"	p	file:
font_prop_validate_style	font.c	/^font_prop_validate_style (Lisp_Object style, Lisp_Object val)$/;"	f	file:	signature:(Lisp_Object style, Lisp_Object val)
font_prop_validate_style	font.c	/^static Lisp_Object font_prop_validate_style (Lisp_Object, Lisp_Object);$/;"	p	file:
font_prop_validate_symbol	font.c	/^font_prop_validate_symbol (Lisp_Object prop, Lisp_Object val)$/;"	f	file:	signature:(Lisp_Object prop, Lisp_Object val)
font_prop_validate_symbol	font.c	/^static Lisp_Object font_prop_validate_symbol (Lisp_Object, Lisp_Object);$/;"	p	file:
font_put_extra	font.c	/^font_put_extra (Lisp_Object font, Lisp_Object prop, Lisp_Object val)$/;"	f	signature:(Lisp_Object font, Lisp_Object prop, Lisp_Object val)
font_put_extra	font.h	/^extern Lisp_Object font_put_extra (Lisp_Object font, Lisp_Object prop,$/;"	p	signature:(Lisp_Object font, Lisp_Object prop, Lisp_Object val)
font_put_frame_data	font.c	/^font_put_frame_data (struct frame *f, Lisp_Object driver, void *data)$/;"	f	signature:(struct frame *f, Lisp_Object driver, void *data)
font_put_frame_data	font.h	/^extern void font_put_frame_data (struct frame *, Lisp_Object, void *);$/;"	p	signature:(struct frame *, Lisp_Object, void *)
font_range	font.c	/^font_range (ptrdiff_t pos, ptrdiff_t pos_byte, ptrdiff_t *limit,$/;"	f	signature:(ptrdiff_t pos, ptrdiff_t pos_byte, ptrdiff_t *limit, struct window *w, struct face *face, Lisp_Object string)
font_range	font.h	/^extern Lisp_Object font_range (ptrdiff_t, ptrdiff_t, ptrdiff_t *,$/;"	p	signature:(ptrdiff_t, ptrdiff_t, ptrdiff_t *, struct window *, struct face *, Lisp_Object)
font_registry_charsets	font.c	/^font_registry_charsets (Lisp_Object registry, struct charset **encoding, struct charset **repertory)$/;"	f	signature:(Lisp_Object registry, struct charset **encoding, struct charset **repertory)
font_registry_charsets	font.h	/^extern int font_registry_charsets (Lisp_Object, struct charset **,$/;"	p	signature:(Lisp_Object, struct charset **, struct charset **)
FONT_REGISTRY_INDEX	font.h	/^    FONT_REGISTRY_INDEX,$/;"	e	enum:font_property_index
font_rescale_ratio	font.c	/^font_rescale_ratio (Lisp_Object font_entity)$/;"	f	file:	signature:(Lisp_Object font_entity)
font_score	font.c	/^font_score (Lisp_Object entity, Lisp_Object *spec_prop)$/;"	f	file:	signature:(Lisp_Object entity, Lisp_Object *spec_prop)
font_select_entity	font.c	/^font_select_entity (struct frame *f, Lisp_Object entities,$/;"	f	file:	signature:(struct frame *f, Lisp_Object entities, Lisp_Object *attrs, int pixel_size, int c)
FONT_SET_STYLE	font.h	230;"	d
FONT_SIZE_INDEX	font.h	/^    FONT_SIZE_INDEX,$/;"	e	enum:font_property_index
FONT_SLANT_FOR_FACE	font.h	211;"	d
FONT_SLANT_INDEX	font.h	/^    FONT_SLANT_INDEX,$/;"	e	enum:font_property_index
FONT_SLANT_NAME_NUMERIC	font.h	221;"	d
FONT_SLANT_NUMERIC	font.h	191;"	d
FONT_SLANT_SYMBOLIC	font.h	202;"	d
font_sort_data	font.c	/^struct font_sort_data$/;"	s	file:
font_sort_data::entity	font.c	/^  Lisp_Object entity;$/;"	m	struct:font_sort_data	file:	access:public
font_sort_data::font_driver_preference	font.c	/^  int font_driver_preference;$/;"	m	struct:font_sort_data	file:	access:public
font_sort_data::score	font.c	/^  unsigned score;$/;"	m	struct:font_sort_data	file:	access:public
font_sort_entities	font.c	/^font_sort_entities (Lisp_Object list, Lisp_Object prefer,$/;"	f	file:	signature:(Lisp_Object list, Lisp_Object prefer, struct frame *f, int best_only)
font_sort_order	xfaces.c	/^static int font_sort_order[4];$/;"	v	file:
font_spacing	font.h	/^enum font_spacing$/;"	g
FONT_SPACING_CHARCELL	font.h	/^    FONT_SPACING_CHARCELL = 110$/;"	e	enum:font_spacing
FONT_SPACING_DUAL	font.h	/^    FONT_SPACING_DUAL = 90,$/;"	e	enum:font_spacing
FONT_SPACING_INDEX	font.h	/^    FONT_SPACING_INDEX,$/;"	e	enum:font_property_index
FONT_SPACING_MONO	font.h	/^    FONT_SPACING_MONO = 100,$/;"	e	enum:font_spacing
FONT_SPACING_PROPORTIONAL	font.h	/^    FONT_SPACING_PROPORTIONAL = 0,$/;"	e	enum:font_spacing
font_spec	font.c	/^  (Lisp_Object font_spec, Lisp_Object frame)$/;"	v
font_spec	font.c	/^  (Lisp_Object font_spec, Lisp_Object frame, Lisp_Object num, Lisp_Object prefer)$/;"	v
font_spec	font.h	/^struct font_spec$/;"	s
font_spec	fontset.c	/^  (Lisp_Object name, Lisp_Object target, Lisp_Object font_spec, Lisp_Object frame, Lisp_Object add)$/;"	v
font_spec::header	font.h	/^  struct vectorlike_header header;$/;"	m	struct:font_spec	typeref:struct:font_spec::vectorlike_header	access:public
font_spec::props	font.h	/^  Lisp_Object props[FONT_SPEC_MAX];$/;"	m	struct:font_spec	access:public
font_spec_from_name	font.c	/^font_spec_from_name (Lisp_Object font_name)$/;"	f	signature:(Lisp_Object font_name)
font_spec_from_name	font.h	/^extern Lisp_Object font_spec_from_name (Lisp_Object font_name);$/;"	p	signature:(Lisp_Object font_name)
FONT_SPEC_MAX	font.h	/^    FONT_SPEC_MAX,$/;"	e	enum:font_property_index
FONT_SPEC_P	font.h	/^FONT_SPEC_P (Lisp_Object x)$/;"	f	signature:(Lisp_Object x)
FONT_STYLE_INDEX	font.h	/^    FONT_STYLE_INDEX,$/;"	e	enum:font_property_index
font_style_symbolic	font.c	/^font_style_symbolic (Lisp_Object font, enum font_property_index prop,$/;"	f	signature:(Lisp_Object font, enum font_property_index prop, bool for_face)
font_style_symbolic	font.h	/^extern Lisp_Object font_style_symbolic (Lisp_Object font,$/;"	p	signature:(Lisp_Object font, enum font_property_index prop, bool for_face)
font_style_table	font.c	/^static Lisp_Object font_style_table;$/;"	v	file:
font_style_to_value	font.c	/^font_style_to_value (enum font_property_index prop, Lisp_Object val,$/;"	f	signature:(enum font_property_index prop, Lisp_Object val, bool noerror)
font_style_to_value	font.h	/^extern int font_style_to_value (enum font_property_index prop,$/;"	p	signature:(enum font_property_index prop, Lisp_Object name, bool noerror)
font_supported_scripts	w32font.c	/^font_supported_scripts (FONTSIGNATURE * sig)$/;"	f	file:	signature:(FONTSIGNATURE * sig)
font_supported_scripts	w32font.c	/^static Lisp_Object font_supported_scripts (FONTSIGNATURE *);$/;"	p	file:	signature:(FONTSIGNATURE *)
FONT_TEXTMETRIC	w32font.h	62;"	d
FONT_TOO_HIGH	dispextern.h	1507;"	d
font_type	dispextern.h	/^  unsigned font_type : 3;$/;"	m	struct:glyph	access:public
FONT_TYPE_INDEX	font.h	/^    FONT_TYPE_INDEX,$/;"	e	enum:font_property_index
FONT_TYPE_UNKNOWN	dispextern.h	540;"	d
FONT_TYPE_WANTED	gtkutil.c	2238;"	d	file:
font_unparse_fcname	font.c	/^font_unparse_fcname (Lisp_Object font, int pixel_size, char *name, int nbytes)$/;"	f	file:	signature:(Lisp_Object font, int pixel_size, char *name, int nbytes)
font_unparse_fcname	font.c	/^static int font_unparse_fcname (Lisp_Object, int, char *, int);$/;"	p	file:	signature:(Lisp_Object, int, char *, int)
font_unparse_xlfd	font.c	/^font_unparse_xlfd (Lisp_Object font, int pixel_size, char *name, int nbytes)$/;"	f	signature:(Lisp_Object font, int pixel_size, char *name, int nbytes)
font_unparse_xlfd	font.h	/^extern ptrdiff_t font_unparse_xlfd (Lisp_Object font, int pixel_size,$/;"	p	signature:(Lisp_Object font, int pixel_size, char *name, int bytes)
font_update_drivers	font.c	/^font_update_drivers (struct frame *f, Lisp_Object new_drivers)$/;"	f	signature:(struct frame *f, Lisp_Object new_drivers)
font_update_drivers	font.h	/^extern Lisp_Object font_update_drivers (struct frame *f, Lisp_Object list);$/;"	p	signature:(struct frame *f, Lisp_Object list)
font_update_sort_order	font.c	/^font_update_sort_order (int *order)$/;"	f	signature:(int *order)
font_update_sort_order	font.h	/^extern void font_update_sort_order (int *order);$/;"	p	signature:(int *order)
font_vconcat_entity_vectors	font.c	/^font_vconcat_entity_vectors (Lisp_Object list)$/;"	f	file:	signature:(Lisp_Object list)
FONT_WEIGHT_FOR_FACE	font.h	208;"	d
FONT_WEIGHT_INDEX	font.h	/^    FONT_WEIGHT_INDEX,$/;"	e	enum:font_property_index
FONT_WEIGHT_NAME_NUMERIC	font.h	218;"	d
FONT_WEIGHT_NUMERIC	font.h	187;"	d
FONT_WEIGHT_SYMBOLIC	font.h	199;"	d
FONT_WIDTH	font.h	233;"	d
FONT_WIDTH_FOR_FACE	font.h	214;"	d
FONT_WIDTH_INDEX	font.h	/^    FONT_WIDTH_INDEX,$/;"	e	enum:font_property_index
FONT_WIDTH_NAME_NUMERIC	font.h	224;"	d
FONT_WIDTH_NUMERIC	font.h	195;"	d
FONT_WIDTH_SYMBOLIC	font.h	205;"	d
fopen	w32.c	54;"	d	file:
FOPEN_BINARY	sysstdio.h	29;"	d
FOPEN_BINARY	sysstdio.h	32;"	d
FOPEN_TEXT	sysstdio.h	30;"	d
FOPEN_TEXT	sysstdio.h	33;"	d
force_auto_save_soon	keyboard.c	/^force_auto_save_soon (void)$/;"	f	signature:(void)
force_auto_save_soon	lisp.h	/^extern void force_auto_save_soon (void);$/;"	p	signature:(void)
force_load_messages	globals.h	943;"	d
force_open	sysdep.c	/^force_open (int fd, int flags)$/;"	f	file:	signature:(int fd, int flags)
force_quit_count	keyboard.c	/^static int volatile force_quit_count;$/;"	v	file:
force_start	window.h	/^    bool_bf force_start : 1;$/;"	m	struct:window	access:public
foreach_window	window.c	/^foreach_window (struct frame *f, bool (*fn) (struct window *, void *),$/;"	f	file:	signature:(struct frame *f, bool (*fn) (struct window *, void *), void *user_data)
foreach_window	window.c	/^static void foreach_window (struct frame *,$/;"	p	file:	signature:(struct frame *, bool (* fn) (struct window *, void *), void *)
foreach_window_1	window.c	/^foreach_window_1 (struct window *w, bool (*fn) (struct window *, void *),$/;"	f	file:	signature:(struct window *w, bool (*fn) (struct window *, void *), void *user_data)
foreach_window_1	window.c	/^static bool foreach_window_1 (struct window *,$/;"	p	file:	signature:(struct window *, bool (* fn) (struct window *, void *), void *)
foreground	dispextern.h	/^  unsigned long foreground;$/;"	m	struct:face	access:public
foreground	nsgui.h	/^  unsigned long foreground;$/;"	m	struct:_XGCValues	access:public
foreground	w32console.c	/^  (Lisp_Object foreground, Lisp_Object background)$/;"	v
foreground	w32gui.h	/^  COLORREF foreground;$/;"	m	struct:_XGCValues	access:public
foreground_color	nsterm.h	/^  NSColor *foreground_color;$/;"	m	struct:ns_output	access:public
foreground_defaulted_p	dispextern.h	/^  bool_bf foreground_defaulted_p : 1;$/;"	m	struct:face	access:public
foreground_pixel	frame.h	/^  unsigned long foreground_pixel;$/;"	m	struct:frame	access:public
foreground_pixel	widgetprv.h	/^  Pixel		foreground_pixel;	\/* foreground *\/$/;"	m	struct:__anon98	access:public
ForgetGravity	nsgui.h	164;"	d
ForgetGravity	w32gui.h	82;"	d
forget_escape_and_glyphless_faces	dispextern.h	/^extern void forget_escape_and_glyphless_faces (void);$/;"	p	signature:(void)
forget_escape_and_glyphless_faces	xdisp.c	/^forget_escape_and_glyphless_faces (void)$/;"	f	signature:(void)
form	eval.c	/^  (Lisp_Object form, Lisp_Object environment)$/;"	v
form	eval.c	/^  (Lisp_Object form, Lisp_Object lexical)$/;"	v
format	sound.c	/^  int format;$/;"	m	struct:sound_device	file:	access:public
format	sound.c	/^  u_int16_t format;$/;"	m	struct:wav_header	file:	access:public
format	xdisp.c	/^     (Lisp_Object format, Lisp_Object face,$/;"	v
format	xfns.c	/^   Lisp_Object type, Lisp_Object format, Lisp_Object outer_p)$/;"	v
format	xselect.c	/^   Lisp_Object message_type, Lisp_Object format, Lisp_Object values)$/;"	v
format	xselect.c	/^  int format;$/;"	m	struct:selection_data	file:	access:public
format_mode_line_unwind_data	xdisp.c	/^format_mode_line_unwind_data (struct frame *target_frame,$/;"	f	file:	signature:(struct frame *target_frame, struct buffer *obuf, Lisp_Object owin, bool save_proptrans)
format_nargs	xdisp.c	/^format_nargs (char const *format)$/;"	f	file:	signature:(char const *format)
format_string	editfns.c	/^  (Lisp_Object format_string, Lisp_Object timeval, Lisp_Object zone)$/;"	v
format_time_string	editfns.c	/^format_time_string (char const *format, ptrdiff_t formatlen,$/;"	f	file:	signature:(char const *format, ptrdiff_t formatlen, struct timespec t, Lisp_Object zone, struct tm *tmp)
format_time_string	editfns.c	/^static Lisp_Object format_time_string (char const *, ptrdiff_t, struct timespec,$/;"	p	file:	signature:(char const *, ptrdiff_t, struct timespec, Lisp_Object, struct tm *)
FORWARD_CHAR	composite.c	1396;"	d	file:
forward_i	syntax.h	/^  INTERVAL forward_i;			\/* Where to start lookup on forward.  *\/$/;"	m	struct:gl_state_s	access:public
FORWARD_SIGNAL_TO_MAIN_THREAD	syssignal.h	38;"	d
forward_to_next_line_start	xdisp.c	/^forward_to_next_line_start (struct it *it, bool *skipped_p,$/;"	f	file:	signature:(struct it *it, bool *skipped_p, struct bidi_it *bidi_it_prev)
forw_comment	syntax.c	/^forw_comment (ptrdiff_t from, ptrdiff_t from_byte, ptrdiff_t stop,$/;"	f	file:	signature:(ptrdiff_t from, ptrdiff_t from_byte, ptrdiff_t stop, EMACS_INT nesting, int style, int prev_syntax, ptrdiff_t *charpos_ptr, ptrdiff_t *bytepos_ptr, EMACS_INT *incomment_ptr, int *last_syntax_ptr)
FOR_EACH_ALIST_VALUE	lisp.h	4680;"	d
FOR_EACH_BUFFER	buffer.h	1068;"	d
FOR_EACH_FRAME	frame.h	1139;"	d
FOR_EACH_LIVE_BUFFER	buffer.h	1179;"	d
FOR_EACH_PER_BUFFER_OBJECT_AT	buffer.h	1282;"	d
FOR_EACH_PROCESS	process.c	305;"	d	file:
FOR_EACH_TAIL	lisp.h	4636;"	d
for_each_tail_internal	lisp.h	/^struct for_each_tail_internal$/;"	s
FOR_EACH_TAIL_INTERNAL	lisp.h	4667;"	d
for_each_tail_internal::max	lisp.h	/^  intptr_t max, n;$/;"	m	struct:for_each_tail_internal	access:public
for_each_tail_internal::n	lisp.h	/^  intptr_t max, n;$/;"	m	struct:for_each_tail_internal	access:public
for_each_tail_internal::q	lisp.h	/^  unsigned short int q;$/;"	m	struct:for_each_tail_internal	access:public
for_each_tail_internal::tortoise	lisp.h	/^  Lisp_Object tortoise;$/;"	m	struct:for_each_tail_internal	access:public
FOR_EACH_TAIL_SAFE	lisp.h	4642;"	d
for_encoder	charset.c	/^  short for_encoder;$/;"	m	struct:__anon78	file:	access:public
FOR_MSW	image.c	3173;"	d	file:
FOR_MSW	image.c	3184;"	d	file:
for_no_font	dispextern.h	/^      bool_bf for_no_font : 1;$/;"	m	struct:glyph::__anon110::__anon113	access:public
for_overlaps	dispextern.h	/^  unsigned for_overlaps : 3;$/;"	m	struct:glyph_string	access:public
FOR_READ	process.c	/^  FOR_READ = 1,$/;"	e	enum:fd_bits	file:
FOR_WRITE	process.c	/^  FOR_WRITE = 2,$/;"	e	enum:fd_bits	file:
found	coding.h	/^  int found;$/;"	m	struct:coding_detection_info	access:public
found	lisp.h	/^    bool_bf found : 1;$/;"	m	struct:Lisp_Buffer_Local_Value	access:public
found_lcid	w32proc.c	/^static LCID found_lcid;$/;"	v	file:
four_corners_best	image.c	/^four_corners_best (XImagePtr_or_DC ximg, int *corners,$/;"	f	file:	signature:(XImagePtr_or_DC ximg, int *corners, unsigned long width, unsigned long height)
four_corners_best	image.c	/^static unsigned long four_corners_best (XImagePtr ximg,$/;"	p	file:	signature:(XImagePtr ximg, int *corners, unsigned long width, unsigned long height)
fp	image.c	/^  FILE *fp;$/;"	m	struct:png_load_context	file:	access:public
FPRINTF_WM_CHARS	w32fns.c	3650;"	d	file:
FPRINTF_WM_CHARS	w32fns.c	3652;"	d	file:
fputc_unlocked	sysstdio.h	53;"	d
fputs_unlocked	sysstdio.h	56;"	d
frag	gmalloc.c	/^	      } frag;$/;"	m	union:__anon60::__anon61::__anon62	typeref:struct:__anon60::__anon61::__anon62::__anon63	file:	access:public
frame	font.c	/^  (Lisp_Object font_spec, Lisp_Object frame, Lisp_Object num, Lisp_Object prefer)$/;"	v
frame	fontset.c	/^  (Lisp_Object name, Lisp_Object target, Lisp_Object font_spec, Lisp_Object frame, Lisp_Object add)$/;"	v
frame	frame.c	/^     (Lisp_Object frame, Lisp_Object horizontal,$/;"	v
frame	frame.c	/^     (Lisp_Object frame, Lisp_Object noactivate)$/;"	v
frame	frame.c	/^  (Lisp_Object frame, Lisp_Object alist)$/;"	v
frame	frame.c	/^  (Lisp_Object frame, Lisp_Object focus_frame)$/;"	v
frame	frame.c	/^  (Lisp_Object frame, Lisp_Object force)$/;"	v
frame	frame.c	/^  (Lisp_Object frame, Lisp_Object height, Lisp_Object pretend, Lisp_Object pixelwise)$/;"	v
frame	frame.c	/^  (Lisp_Object frame, Lisp_Object made)$/;"	v
frame	frame.c	/^  (Lisp_Object frame, Lisp_Object miniframe)$/;"	v
frame	frame.c	/^  (Lisp_Object frame, Lisp_Object norecord)$/;"	v
frame	frame.c	/^  (Lisp_Object frame, Lisp_Object parameter)$/;"	v
frame	frame.c	/^  (Lisp_Object frame, Lisp_Object width, Lisp_Object height, Lisp_Object pixelwise)$/;"	v
frame	frame.c	/^  (Lisp_Object frame, Lisp_Object width, Lisp_Object pretend, Lisp_Object pixelwise)$/;"	v
frame	frame.c	/^  (Lisp_Object frame, Lisp_Object x, Lisp_Object y)$/;"	v
frame	frame.h	/^struct frame$/;"	s
frame	regex.c	/^  size_t frame;	\/* Offset of the cur constructed frame.  *\/$/;"	m	struct:__anon145	file:	access:public
frame	sysdep.c	47;"	d	file:
frame	sysdep.c	49;"	d	file:
frame	w32fns.c	/^  (Lisp_Object frame, Lisp_Object type)$/;"	v
frame	w32fns.c	/^  (Lisp_Object string, Lisp_Object frame, Lisp_Object parms, Lisp_Object timeout, Lisp_Object dx, Lisp_Object dy)$/;"	v
frame	w32font.c	/^  (Lisp_Object frame, Lisp_Object exclude_proportional)$/;"	v
frame	w32font.c	/^  Lisp_Object frame;$/;"	m	struct:font_callback_data	file:	access:public
frame	widgetprv.h	/^  struct frame *frame;		\/* the *emacs* frame object *\/$/;"	m	struct:__anon98	typeref:struct:__anon98::frame	access:public
frame	window.c	/^     (Lisp_Object frame, Lisp_Object horizontal)$/;"	v
frame	window.c	/^  (Lisp_Object frame, Lisp_Object minibuf, Lisp_Object window)$/;"	v
frame	window.c	/^  (Lisp_Object frame, Lisp_Object window, Lisp_Object norecord)$/;"	v
frame	window.h	/^    Lisp_Object frame;$/;"	m	struct:window	access:public
frame	xdisp.c	/^  (Lisp_Object frame, Lisp_Object pixelwise)$/;"	v
frame	xfaces.c	/^  (Lisp_Object color, Lisp_Object frame, Lisp_Object background_p)$/;"	v
frame	xfaces.c	/^  (Lisp_Object face, Lisp_Object frame, Lisp_Object character)$/;"	v
frame	xfaces.c	/^  (Lisp_Object from, Lisp_Object to, Lisp_Object frame, Lisp_Object new_frame)$/;"	v
frame	xfaces.c	/^  (Lisp_Object pattern, Lisp_Object face, Lisp_Object frame,$/;"	v
frame	xfns.c	/^  (Lisp_Object frame, Lisp_Object ignored)$/;"	v
frame	xfns.c	/^  (Lisp_Object frame, Lisp_Object type)$/;"	v
frame	xfns.c	/^  (Lisp_Object prop, Lisp_Object frame, Lisp_Object source)$/;"	v
frame	xfns.c	/^  (Lisp_Object prop, Lisp_Object frame, Lisp_Object type,$/;"	v
frame	xfns.c	/^  (Lisp_Object prop, Lisp_Object value, Lisp_Object frame,$/;"	v
frame	xfns.c	/^  (Lisp_Object string, Lisp_Object frame, Lisp_Object parms, Lisp_Object timeout, Lisp_Object dx, Lisp_Object dy)$/;"	v
frame1	w32fns.c	/^     (Lisp_Object frame1, Lisp_Object frame2, Lisp_Object above)$/;"	v
frame1	xfns.c	/^     (Lisp_Object frame1, Lisp_Object frame2, Lisp_Object above)$/;"	v
frame2	w32fns.c	/^     (Lisp_Object frame1, Lisp_Object frame2, Lisp_Object above)$/;"	v
frame2	xfns.c	/^     (Lisp_Object frame1, Lisp_Object frame2, Lisp_Object above)$/;"	v
frame::after_make_frame	frame.h	/^  bool_bf after_make_frame : 1;$/;"	m	struct:frame	access:public
frame::alpha	frame.h	/^  double alpha[2];$/;"	m	struct:frame	access:public
frame::already_hscrolled_p	frame.h	/^  bool_bf already_hscrolled_p : 1;$/;"	m	struct:frame	access:public
frame::auto_lower	frame.h	/^  bool_bf auto_lower : 1;$/;"	m	struct:frame	access:public
frame::auto_raise	frame.h	/^  bool_bf auto_raise : 1;$/;"	m	struct:frame	access:public
frame::background_pixel	frame.h	/^  unsigned long background_pixel;$/;"	m	struct:frame	access:public
frame::blink_off_cursor	frame.h	/^  enum text_cursor_kinds blink_off_cursor;$/;"	m	struct:frame	typeref:enum:frame::text_cursor_kinds	access:public
frame::blink_off_cursor_width	frame.h	/^  int blink_off_cursor_width;$/;"	m	struct:frame	access:public
frame::border_width	frame.h	/^  int border_width;$/;"	m	struct:frame	access:public
frame::bottom_divider_width	frame.h	/^  int right_divider_width, bottom_divider_width;$/;"	m	struct:frame	access:public
frame::buffer_list	frame.h	/^  Lisp_Object buffer_list;$/;"	m	struct:frame	access:public
frame::buffer_predicate	frame.h	/^  Lisp_Object buffer_predicate;$/;"	m	struct:frame	access:public
frame::buried_buffer_list	frame.h	/^  Lisp_Object buried_buffer_list;$/;"	m	struct:frame	access:public
frame::can_x_set_window_size	frame.h	/^  bool_bf can_x_set_window_size : 1;$/;"	m	struct:frame	access:public
frame::column_width	frame.h	/^  int column_width;$/;"	m	struct:frame	access:public
frame::condemned_scroll_bars	frame.h	/^  Lisp_Object condemned_scroll_bars;$/;"	m	struct:frame	access:public
frame::config_scroll_bar_cols	frame.h	/^  int config_scroll_bar_cols;$/;"	m	struct:frame	access:public
frame::config_scroll_bar_height	frame.h	/^  int config_scroll_bar_height;$/;"	m	struct:frame	access:public
frame::config_scroll_bar_lines	frame.h	/^  int config_scroll_bar_lines;$/;"	m	struct:frame	access:public
frame::config_scroll_bar_width	frame.h	/^  int config_scroll_bar_width;$/;"	m	struct:frame	access:public
frame::cost_calculation_baud_rate	frame.h	/^  int cost_calculation_baud_rate;$/;"	m	struct:frame	access:public
frame::current_matrix	frame.h	/^  struct glyph_matrix *current_matrix;$/;"	m	struct:frame	typeref:struct:frame::glyph_matrix	access:public
frame::current_pool	frame.h	/^  struct glyph_pool *current_pool;$/;"	m	struct:frame	typeref:struct:frame::glyph_pool	access:public
frame::current_tool_bar_string	frame.h	/^  Lisp_Object current_tool_bar_string;$/;"	m	struct:frame	access:public
frame::cursor_type_changed	frame.h	/^  bool_bf cursor_type_changed : 1;$/;"	m	struct:frame	access:public
frame::cursor_width	frame.h	/^  int cursor_width;$/;"	m	struct:frame	access:public
frame::decode_mode_spec_buffer	frame.h	/^  char *decode_mode_spec_buffer;$/;"	m	struct:frame	access:public
frame::default_face_done_p	frame.h	/^  bool_bf default_face_done_p : 1;$/;"	m	struct:frame	access:public
frame::delete_line_cost	frame.h	/^  int *delete_line_cost;$/;"	m	struct:frame	access:public
frame::delete_n_lines_cost	frame.h	/^  int *delete_n_lines_cost;$/;"	m	struct:frame	access:public
frame::desired_cursor	frame.h	/^  enum text_cursor_kinds desired_cursor;$/;"	m	struct:frame	typeref:enum:frame::text_cursor_kinds	access:public
frame::desired_matrix	frame.h	/^  struct glyph_matrix *desired_matrix;$/;"	m	struct:frame	typeref:struct:frame::glyph_matrix	access:public
frame::desired_pool	frame.h	/^  struct glyph_pool *desired_pool;$/;"	m	struct:frame	typeref:struct:frame::glyph_pool	access:public
frame::desired_tool_bar_string	frame.h	/^  Lisp_Object desired_tool_bar_string;$/;"	m	struct:frame	access:public
frame::explicit_name	frame.h	/^  bool_bf explicit_name : 1;$/;"	m	struct:frame	access:public
frame::external_menu_bar	frame.h	/^  bool_bf external_menu_bar : 1;$/;"	m	struct:frame	access:public
frame::external_tool_bar	frame.h	/^  bool_bf external_tool_bar : 1;$/;"	m	struct:frame	access:public
frame::extra_line_spacing	frame.h	/^  int extra_line_spacing;$/;"	m	struct:frame	access:public
frame::face_alist	frame.h	/^  Lisp_Object face_alist;$/;"	m	struct:frame	access:public
frame::face_cache	frame.h	/^  struct face_cache *face_cache;$/;"	m	struct:frame	typeref:struct:frame::face_cache	access:public
frame::face_change	frame.h	/^  bool_bf face_change : 1;$/;"	m	struct:frame	access:public
frame::focus_frame	frame.h	/^  Lisp_Object focus_frame;$/;"	m	struct:frame	access:public
frame::fonts_changed	frame.h	/^  bool_bf fonts_changed : 1;$/;"	m	struct:frame	access:public
frame::font_data	frame.h	/^  Lisp_Object font_data;$/;"	m	struct:frame	access:public
frame::font_driver_list	frame.h	/^  struct font_driver_list *font_driver_list;$/;"	m	struct:frame	typeref:struct:frame::font_driver_list	access:public
frame::foreground_pixel	frame.h	/^  unsigned long foreground_pixel;$/;"	m	struct:frame	access:public
frame::fringe_cols	frame.h	/^  int fringe_cols;$/;"	m	struct:frame	access:public
frame::frozen_window_starts	frame.h	/^  bool_bf frozen_window_starts : 1;$/;"	m	struct:frame	access:public
frame::gamma	frame.h	/^  double gamma;$/;"	m	struct:frame	access:public
frame::garbaged	frame.h	/^  bool_bf garbaged : 1;$/;"	m	struct:frame	access:public
frame::glyphs_initialized_p	frame.h	/^  bool_bf glyphs_initialized_p : 1;$/;"	m	struct:frame	access:public
frame::header	frame.h	/^  struct vectorlike_header header;$/;"	m	struct:frame	typeref:struct:frame::vectorlike_header	access:public
frame::horizontal_scroll_bars	frame.h	/^  bool_bf horizontal_scroll_bars : 1;$/;"	m	struct:frame	access:public
frame::iconified	frame.h	/^  bool_bf iconified : 1;$/;"	m	struct:frame	access:public
frame::icon_name	frame.h	/^  Lisp_Object icon_name;$/;"	m	struct:frame	access:public
frame::inhibit_horizontal_resize	frame.h	/^  bool_bf inhibit_horizontal_resize : 1;$/;"	m	struct:frame	access:public
frame::inhibit_vertical_resize	frame.h	/^  bool_bf inhibit_vertical_resize : 1;$/;"	m	struct:frame	access:public
frame::insert_line_cost	frame.h	/^  int *insert_line_cost;$/;"	m	struct:frame	access:public
frame::insert_n_lines_cost	frame.h	/^  int *insert_n_lines_cost;$/;"	m	struct:frame	access:public
frame::internal_border_width	frame.h	/^  int internal_border_width;$/;"	m	struct:frame	access:public
frame::last_tool_bar_item	frame.h	/^  int last_tool_bar_item;$/;"	m	struct:frame	access:public
frame::left_fringe_width	frame.h	/^  int left_fringe_width, right_fringe_width;$/;"	m	struct:frame	access:public
frame::left_pos	frame.h	/^  int left_pos, top_pos;$/;"	m	struct:frame	access:public
frame::line_height	frame.h	/^  int line_height;$/;"	m	struct:frame	access:public
frame::menu_bar_height	frame.h	/^  int menu_bar_height;$/;"	m	struct:frame	access:public
frame::menu_bar_items	frame.h	/^  Lisp_Object menu_bar_items;$/;"	m	struct:frame	access:public
frame::menu_bar_items_used	frame.h	/^  int menu_bar_items_used;$/;"	m	struct:frame	access:public
frame::menu_bar_lines	frame.h	/^  int menu_bar_lines;$/;"	m	struct:frame	access:public
frame::menu_bar_vector	frame.h	/^  Lisp_Object menu_bar_vector;$/;"	m	struct:frame	access:public
frame::menu_bar_window	frame.h	/^  Lisp_Object menu_bar_window;$/;"	m	struct:frame	access:public
frame::minibuffer_window	frame.h	/^  Lisp_Object minibuffer_window;$/;"	m	struct:frame	access:public
frame::minimize_tool_bar_window_p	frame.h	/^  bool_bf minimize_tool_bar_window_p : 1;$/;"	m	struct:frame	access:public
frame::mouse_moved	frame.h	/^  bool_bf mouse_moved : 1;$/;"	m	struct:frame	access:public
frame::name	frame.h	/^  Lisp_Object name;$/;"	m	struct:frame	access:public
frame::namebuf	frame.h	/^  char *namebuf;$/;"	m	struct:frame	access:public
frame::new_height	frame.h	/^  int new_width, new_height;$/;"	m	struct:frame	access:public
frame::new_pixelwise	frame.h	/^  bool_bf new_pixelwise : 1;$/;"	m	struct:frame	access:public
frame::new_width	frame.h	/^  int new_width, new_height;$/;"	m	struct:frame	access:public
frame::no_accept_focus	frame.h	/^  bool_bf no_accept_focus : 1;$/;"	m	struct:frame	access:public
frame::no_focus_on_map	frame.h	/^  bool_bf no_focus_on_map : 1;$/;"	m	struct:frame	access:public
frame::no_special_glyphs	frame.h	/^  bool_bf no_special_glyphs : 1;$/;"	m	struct:frame	access:public
frame::no_split	frame.h	/^  bool_bf no_split : 1;$/;"	m	struct:frame	access:public
frame::n_tool_bar_items	frame.h	/^  int n_tool_bar_items;$/;"	m	struct:frame	access:public
frame::n_tool_bar_rows	frame.h	/^  int n_tool_bar_rows;$/;"	m	struct:frame	access:public
frame::output_data	frame.h	/^  output_data;$/;"	m	struct:frame	typeref:union:frame::output_data	access:public
frame::output_data	frame.h	/^  union output_data$/;"	u	struct:frame	access:public
frame::output_data::nothing	frame.h	/^    intptr_t nothing;$/;"	m	union:frame::output_data	access:public
frame::output_data::ns	frame.h	/^    struct ns_output *ns;       \/* From nsterm.h.  *\/$/;"	m	union:frame::output_data	typeref:struct:frame::output_data::ns_output	access:public
frame::output_data::tty	frame.h	/^    struct tty_output *tty;     \/* From termchar.h.  *\/$/;"	m	union:frame::output_data	typeref:struct:frame::output_data::tty_output	access:public
frame::output_data::w32	frame.h	/^    struct w32_output *w32;     \/* From w32term.h.  *\/$/;"	m	union:frame::output_data	typeref:struct:frame::output_data::w32_output	access:public
frame::output_data::x	frame.h	/^    struct x_output *x;         \/* From xterm.h.  *\/$/;"	m	union:frame::output_data	typeref:struct:frame::output_data::x_output	access:public
frame::output_method	frame.h	/^  ENUM_BF (output_method) output_method : 3;$/;"	m	struct:frame	access:public
frame::override_redirect	frame.h	/^  bool_bf override_redirect : 1;$/;"	m	struct:frame	access:public
frame::param_alist	frame.h	/^  Lisp_Object param_alist;$/;"	m	struct:frame	access:public
frame::parent_frame	frame.h	/^  Lisp_Object parent_frame;$/;"	m	struct:frame	access:public
frame::pixel_height	frame.h	/^  int pixel_width, pixel_height;$/;"	m	struct:frame	access:public
frame::pixel_width	frame.h	/^  int pixel_width, pixel_height;$/;"	m	struct:frame	access:public
frame::pointer_invisible	frame.h	/^  bool_bf pointer_invisible : 1;$/;"	m	struct:frame	access:public
frame::redisplay	frame.h	/^  bool_bf redisplay : 1;$/;"	m	struct:frame	access:public
frame::resized_p	frame.h	/^  bool_bf resized_p : 1;$/;"	m	struct:frame	access:public
frame::right_divider_width	frame.h	/^  int right_divider_width, bottom_divider_width;$/;"	m	struct:frame	access:public
frame::right_fringe_width	frame.h	/^  int left_fringe_width, right_fringe_width;$/;"	m	struct:frame	access:public
frame::root_window	frame.h	/^  Lisp_Object root_window;$/;"	m	struct:frame	access:public
frame::scroll_bars	frame.h	/^  Lisp_Object scroll_bars;$/;"	m	struct:frame	access:public
frame::selected_window	frame.h	/^  Lisp_Object selected_window;$/;"	m	struct:frame	access:public
frame::shell_position	frame.h	/^  char *shell_position;$/;"	m	struct:frame	access:public
frame::size_hint_flags	frame.h	/^  int size_hint_flags;$/;"	m	struct:frame	access:public
frame::skip_taskbar	frame.h	/^  bool_bf skip_taskbar : 1;$/;"	m	struct:frame	access:public
frame::terminal	frame.h	/^  struct terminal *terminal;$/;"	m	struct:frame	typeref:struct:frame::terminal	access:public
frame::text_cols	frame.h	/^  int text_cols, text_lines;$/;"	m	struct:frame	access:public
frame::text_height	frame.h	/^  int text_width, text_height;$/;"	m	struct:frame	access:public
frame::text_lines	frame.h	/^  int text_cols, text_lines;$/;"	m	struct:frame	access:public
frame::text_width	frame.h	/^  int text_width, text_height;$/;"	m	struct:frame	access:public
frame::title	frame.h	/^  Lisp_Object title;$/;"	m	struct:frame	access:public
frame::tool_bar_height	frame.h	/^  int tool_bar_height;$/;"	m	struct:frame	access:public
frame::tool_bar_items	frame.h	/^  Lisp_Object tool_bar_items;$/;"	m	struct:frame	access:public
frame::tool_bar_lines	frame.h	/^  int tool_bar_lines;$/;"	m	struct:frame	access:public
frame::tool_bar_position	frame.h	/^  Lisp_Object tool_bar_position;$/;"	m	struct:frame	access:public
frame::tool_bar_redisplayed	frame.h	/^  bool_bf tool_bar_redisplayed : 1;$/;"	m	struct:frame	access:public
frame::tool_bar_resized	frame.h	/^  bool_bf tool_bar_resized : 1;$/;"	m	struct:frame	access:public
frame::tool_bar_window	frame.h	/^  Lisp_Object tool_bar_window;$/;"	m	struct:frame	access:public
frame::top_pos	frame.h	/^  int left_pos, top_pos;$/;"	m	struct:frame	access:public
frame::total_cols	frame.h	/^  int total_cols, total_lines;$/;"	m	struct:frame	access:public
frame::total_lines	frame.h	/^  int total_cols, total_lines;$/;"	m	struct:frame	access:public
frame::undecorated	frame.h	/^  bool_bf undecorated : 1;$/;"	m	struct:frame	access:public
frame::updated_p	frame.h	/^  bool_bf updated_p : 1;$/;"	m	struct:frame	access:public
frame::vertical_scroll_bar_type	frame.h	/^  ENUM_BF (vertical_scroll_bar_type) vertical_scroll_bar_type : 2;$/;"	m	struct:frame	access:public
frame::visible	frame.h	/^  unsigned visible : 2;$/;"	m	struct:frame	access:public
frame::wait_event_type	frame.h	/^  int wait_event_type;$/;"	m	struct:frame	access:public
frame::wants_modeline	frame.h	/^  bool_bf wants_modeline : 1;$/;"	m	struct:frame	access:public
frame::want_fullscreen	frame.h	/^  ENUM_BF (fullscreen_type) want_fullscreen : 4;$/;"	m	struct:frame	access:public
frame::window_configuration_changed	frame.h	/^  bool_bf window_configuration_changed : 1;$/;"	m	struct:frame	access:public
frame::win_gravity	frame.h	/^  int win_gravity;$/;"	m	struct:frame	access:public
frame::z_group	frame.h	/^  ENUM_BF (z_group) z_group : 2;$/;"	m	struct:frame	access:public
FrameCols	cm.h	127;"	d
FRAMEP	lisp.h	/^FRAMEP (Lisp_Object a)$/;"	f	signature:(Lisp_Object a)
FrameRows	cm.h	126;"	d
frames	xfns.c	/^     (Lisp_Object frames, Lisp_Object type)$/;"	v
frames_discard_buffer	frame.c	/^frames_discard_buffer (Lisp_Object buffer)$/;"	f	signature:(Lisp_Object buffer)
frames_discard_buffer	lisp.h	/^extern void frames_discard_buffer (Lisp_Object);$/;"	p	signature:(Lisp_Object)
frame_ancestor_p	frame.c	/^frame_ancestor_p (struct frame *af, struct frame *df)$/;"	f	signature:(struct frame *af, struct frame *df)
frame_ancestor_p	frame.h	/^extern bool frame_ancestor_p (struct frame *af, struct frame *df);$/;"	p	signature:(struct frame *af, struct frame *df)
frame_and_buffer_state	dispnew.c	/^static Lisp_Object frame_and_buffer_state;$/;"	v	file:
frame_background	dispextern.h	/^  unsigned long frame_foreground, frame_background;$/;"	m	struct:image	access:public
FRAME_BACKGROUND_COLOR	nsterm.h	1026;"	d
FRAME_BACKGROUND_PIXEL	frame.h	1108;"	d
FRAME_BASELINE_OFFSET	nsterm.h	1110;"	d
FRAME_BASELINE_OFFSET	w32term.h	408;"	d
FRAME_BASELINE_OFFSET	xterm.h	844;"	d
FRAME_BLINK_OFF_CURSOR	frame.h	1103;"	d
FRAME_BLINK_OFF_CURSOR_WIDTH	frame.h	1105;"	d
FRAME_BOTTOM_DIVIDER_WIDTH	frame.h	/^FRAME_BOTTOM_DIVIDER_WIDTH (struct frame *f)$/;"	f	signature:(struct frame *f)
FRAME_CANON_X_FROM_PIXEL_X	frame.h	1354;"	d
FRAME_CANON_Y_FROM_PIXEL_Y	frame.h	1363;"	d
FRAME_CHAR_INS_DEL_OK	termhooks.h	691;"	d
frame_char_to_pixel_position	frame.c	/^frame_char_to_pixel_position (struct frame *f, int x, int y,$/;"	f	file:	signature:(struct frame *f, int x, int y, int *pix_x, int *pix_y)
FRAME_COLS	frame.h	804;"	d
frame_cols	window.c	/^    int frame_cols, frame_lines;$/;"	m	struct:save_window_data	file:	access:public
FRAME_COLUMN_WIDTH	frame.h	1260;"	d
FRAME_COL_TO_PIXEL_X	frame.h	1380;"	d
FRAME_CONDEMNED_SCROLL_BARS	frame.h	1097;"	d
FRAME_CONFIG_SCROLL_BAR_COLS	frame.h	986;"	d
FRAME_CONFIG_SCROLL_BAR_HEIGHT	frame.h	981;"	d
FRAME_CONFIG_SCROLL_BAR_LINES	frame.h	991;"	d
FRAME_CONFIG_SCROLL_BAR_WIDTH	frame.h	976;"	d
FRAME_COST_BAUD_RATE	frame.h	1100;"	d
FRAME_CR_CONTEXT	xterm.c	306;"	d	file:
FRAME_CR_SURFACE	xterm.c	307;"	d	file:
FRAME_CURSOR_COLOR	nsterm.h	1034;"	d
FRAME_CURSOR_WIDTH	frame.h	1104;"	d
FRAME_CURSOR_X_LIMIT	frame.h	1092;"	d
FRAME_DEFAULT_FACE	nsterm.h	1031;"	d
frame_default_tool_bar_height	frame.c	/^enum { frame_default_tool_bar_height = 0 };$/;"	e	enum:__anon143	file:
frame_default_tool_bar_height	frame.c	/^int frame_default_tool_bar_height;$/;"	v
FRAME_DELETEN_COST	frame.h	908;"	d
FRAME_DELETE_COST	frame.h	906;"	d
FRAME_DESIRED_CURSOR	frame.h	1102;"	d
frame_dimension	frame.h	/^frame_dimension (int x)$/;"	f	signature:(int x)
FRAME_DISPLAY_INFO	nsterm.h	1014;"	d
FRAME_DISPLAY_INFO	w32term.h	411;"	d
FRAME_DISPLAY_INFO	xterm.h	847;"	d
FRAME_EXTERNAL_MENU_BAR	frame.h	860;"	d
FRAME_EXTERNAL_MENU_BAR	frame.h	862;"	d
FRAME_EXTERNAL_TOOL_BAR	frame.h	830;"	d
FRAME_EXTERNAL_TOOL_BAR	frame.h	832;"	d
FRAME_FACE_CACHE	frame.h	1112;"	d
frame_float	frame.c	/^frame_float (struct frame *f, Lisp_Object val, enum frame_float_type what,$/;"	f	file:	signature:(struct frame *f, Lisp_Object val, enum frame_float_type what, int *parent_done, int *outer_done, int default_value)
FRAME_FLOAT_HEIGHT	frame.c	/^ FRAME_FLOAT_HEIGHT,$/;"	e	enum:frame_float_type	file:
FRAME_FLOAT_LEFT	frame.c	/^ FRAME_FLOAT_LEFT,$/;"	e	enum:frame_float_type	file:
FRAME_FLOAT_TOP	frame.c	/^ FRAME_FLOAT_TOP$/;"	e	enum:frame_float_type	file:
frame_float_type	frame.c	/^enum frame_float_type$/;"	g	file:
FRAME_FLOAT_WIDTH	frame.c	/^ FRAME_FLOAT_WIDTH,$/;"	e	enum:frame_float_type	file:
FRAME_FOCUS_FRAME	frame.h	909;"	d
FRAME_FONT	nsterm.h	1037;"	d
FRAME_FONT	w32term.h	406;"	d
FRAME_FONT	xterm.h	833;"	d
FRAME_FONTSET	nsterm.h	1108;"	d
FRAME_FONTSET	w32term.h	407;"	d
FRAME_FONTSET	xterm.h	834;"	d
frame_foreground	dispextern.h	/^  unsigned long frame_foreground, frame_background;$/;"	m	struct:image	access:public
FRAME_FOREGROUND_COLOR	nsterm.h	1025;"	d
FRAME_FOREGROUND_PIXEL	frame.h	1107;"	d
frame_for_x_selection	xselect.c	/^frame_for_x_selection (Lisp_Object object)$/;"	f	file:	signature:(Lisp_Object object)
FRAME_FRINGE_COLS	frame.h	/^FRAME_FRINGE_COLS (struct frame *f)$/;"	f	signature:(struct frame *f)
frame_garbaged	frame.c	/^bool frame_garbaged;$/;"	v
FRAME_GARBAGED_P	frame.h	879;"	d
frame_geometry	xfns.c	/^frame_geometry (Lisp_Object frame, Lisp_Object attribute)$/;"	f	file:	signature:(Lisp_Object frame, Lisp_Object attribute)
FRAME_GTK_OUTER_WIDGET	xterm.h	815;"	d
FRAME_GTK_WIDGET	xterm.h	816;"	d
FRAME_HAS_HORIZONTAL_SCROLL_BARS	frame.h	967;"	d
FRAME_HAS_HORIZONTAL_SCROLL_BARS	frame.h	970;"	d
FRAME_HAS_MINIBUF_P	frame.h	792;"	d
FRAME_HAS_VERTICAL_SCROLL_BARS	frame.h	915;"	d
FRAME_HAS_VERTICAL_SCROLL_BARS	frame.h	925;"	d
FRAME_HAS_VERTICAL_SCROLL_BARS_ON_LEFT	frame.h	917;"	d
FRAME_HAS_VERTICAL_SCROLL_BARS_ON_LEFT	frame.h	926;"	d
FRAME_HAS_VERTICAL_SCROLL_BARS_ON_RIGHT	frame.h	919;"	d
FRAME_HAS_VERTICAL_SCROLL_BARS_ON_RIGHT	frame.h	927;"	d
frame_highlight	w32term.c	/^frame_highlight (struct frame *f)$/;"	f	file:	signature:(struct frame *f)
frame_highlight	w32term.c	/^static void frame_highlight (struct frame *);$/;"	p	file:	signature:(struct frame *)
frame_highlight	xterm.c	/^frame_highlight (struct frame *f)$/;"	f	file:	signature:(struct frame *f)
FRAME_ICONIFIED_P	frame.h	872;"	d
FRAME_IMAGE_CACHE	frame.h	711;"	d
frame_inhibit_implied_resize	globals.h	801;"	d
frame_inhibit_resize	frame.c	/^frame_inhibit_resize (struct frame *f, bool horizontal, Lisp_Object parameter)$/;"	f	signature:(struct frame *f, bool horizontal, Lisp_Object parameter)
frame_inhibit_resize	frame.h	/^extern bool frame_inhibit_resize (struct frame *, bool, Lisp_Object);$/;"	p	signature:(struct frame *, bool, Lisp_Object)
FRAME_INITIAL_P	frame.h	721;"	d
FRAME_INSERTN_COST	frame.h	907;"	d
FRAME_INSERT_COST	frame.h	905;"	d
frame_internal_border_part	frame.c	/^frame_internal_border_part (struct frame *f, int x, int y)$/;"	f	signature:(struct frame *f, int x, int y)
frame_internal_border_part	frame.h	/^extern enum internal_border_part frame_internal_border_part (struct frame *f, int x, int y);$/;"	p	signature:(struct frame *f, int x, int y)
FRAME_INTERNAL_BORDER_WIDTH	frame.h	/^FRAME_INTERNAL_BORDER_WIDTH (struct frame *f)$/;"	f	signature:(struct frame *f)
FRAME_KBOARD	frame.h	708;"	d
FRAME_KEYBOARD_CODING	termhooks.h	697;"	d
FRAME_LEFT_FRINGE_WIDTH	frame.h	/^FRAME_LEFT_FRINGE_WIDTH (struct frame *f)$/;"	f	signature:(struct frame *f)
FRAME_LEFT_SCROLL_BAR_AREA_WIDTH	frame.h	994;"	d
FRAME_LEFT_SCROLL_BAR_COLS	frame.h	1009;"	d
FRAME_LINES	frame.h	808;"	d
frame_lines	window.c	/^    int frame_cols, frame_lines;$/;"	m	struct:save_window_data	file:	access:public
FRAME_LINE_HEIGHT	frame.h	1256;"	d
FRAME_LINE_INS_DEL_OK	termhooks.h	690;"	d
FRAME_LINE_TO_PIXEL_Y	frame.h	1376;"	d
FRAME_LIVE_P	frame.h	784;"	d
frame_make_pointer_invisible	frame.c	/^frame_make_pointer_invisible (struct frame *f)$/;"	f	signature:(struct frame *f)
frame_make_pointer_invisible	frame.h	/^extern void frame_make_pointer_invisible (struct frame *);$/;"	p	signature:(struct frame *)
frame_make_pointer_visible	frame.c	/^frame_make_pointer_visible (struct frame *f)$/;"	f	signature:(struct frame *f)
frame_make_pointer_visible	frame.h	/^extern void frame_make_pointer_visible (struct frame *);$/;"	p	signature:(struct frame *)
frame_matrix_frame	dispnew.c	/^static struct frame *frame_matrix_frame;$/;"	v	typeref:struct:frame	file:
FRAME_MEMORY_BELOW_FRAME	termhooks.h	694;"	d
FRAME_MENUBAR_HEIGHT	xterm.h	828;"	d
FRAME_MENUBAR_HEIGHT	xterm.h	830;"	d
FRAME_MENU_BAR_HEIGHT	frame.h	825;"	d
frame_menu_bar_height	window.c	/^    int frame_menu_bar_height, frame_tool_bar_height;$/;"	m	struct:save_window_data	file:	access:public
FRAME_MENU_BAR_ITEMS	frame.h	1099;"	d
FRAME_MENU_BAR_LINES	frame.h	822;"	d
frame_menu_bar_lines	window.c	/^    int frame_menu_bar_lines, frame_tool_bar_lines;$/;"	m	struct:save_window_data	file:	access:public
FRAME_MESSAGE_BUF_SIZE	frame.h	1118;"	d
FRAME_MINIBUF_ONLY_P	frame.h	787;"	d
FRAME_MINIBUF_WINDOW	frame.h	897;"	d
frame_mode_line_height	dispextern.h	/^int frame_mode_line_height (struct frame *);$/;"	p	signature:(struct frame *)
FRAME_MOUSE_UPDATE	frame.h	1147;"	d
FRAME_MUST_WRITE_SPACES	termhooks.h	689;"	d
frame_name_fnn_p	frame.c	/^frame_name_fnn_p (char *str, ptrdiff_t len)$/;"	f	file:	signature:(char *str, ptrdiff_t len)
FRAME_NORMAL_PLACEMENT	w32term.h	416;"	d
FRAME_NO_ACCEPT_FOCUS	frame.h	943;"	d
FRAME_NO_ACCEPT_FOCUS	frame.h	957;"	d
FRAME_NO_FOCUS_ON_MAP	frame.h	942;"	d
FRAME_NO_FOCUS_ON_MAP	frame.h	956;"	d
FRAME_NO_SPECIAL_GLYPHS	frame.h	944;"	d
FRAME_NO_SPECIAL_GLYPHS	frame.h	958;"	d
FRAME_NO_SPLIT_P	frame.h	882;"	d
FRAME_NS_DISPLAY	nsterm.h	1020;"	d
FRAME_NS_FONT_TABLE	nsterm.h	1106;"	d
FRAME_NS_P	frame.h	730;"	d
FRAME_NS_P	frame.h	732;"	d
FRAME_NS_TITLEBAR_HEIGHT	nsterm.h	1046;"	d
FRAME_NS_VIEW	nsterm.h	1033;"	d
FRAME_NS_WINDOW	nsterm.h	1016;"	d
FRAME_OBSCURED_P	frame.h	869;"	d
frame_or_window	keyboard.c	/^  (Lisp_Object x, Lisp_Object y, Lisp_Object frame_or_window, Lisp_Object whole)$/;"	v
frame_or_window	termhooks.h	/^  Lisp_Object frame_or_window;$/;"	m	struct:input_event	access:public
FRAME_OUTER_WINDOW	xterm.h	782;"	d
FRAME_OUTER_WINDOW	xterm.h	817;"	d
FRAME_OUTER_WINDOW	xterm.h	823;"	d
FRAME_OVERRIDE_REDIRECT	frame.h	933;"	d
FRAME_OVERRIDE_REDIRECT	frame.h	935;"	d
FRAME_OVERRIDE_REDIRECT	frame.h	953;"	d
FRAME_PARENT_FRAME	frame.h	937;"	d
FRAME_PARENT_FRAME	frame.h	954;"	d
frame_parms	frame.c	/^static const struct frame_parm_table frame_parms[] =$/;"	v	typeref:struct:frame_parm_table	file:
frame_parm_handler	dispextern.h	/^typedef void (*frame_parm_handler) (struct frame *, Lisp_Object, Lisp_Object);$/;"	t
frame_parm_handlers	dispextern.h	/^  frame_parm_handler *frame_parm_handlers;$/;"	m	struct:redisplay_interface	access:public
frame_parm_table	frame.c	/^struct frame_parm_table {$/;"	s	file:
frame_parm_table::name	frame.c	/^  const char *name;$/;"	m	struct:frame_parm_table	file:	access:public
frame_parm_table::sym	frame.c	/^  int sym;$/;"	m	struct:frame_parm_table	file:	access:public
FRAME_PIXEL_HEIGHT	frame.h	800;"	d
FRAME_PIXEL_HEIGHT_TO_TEXT_LINES	frame.h	1425;"	d
FRAME_PIXEL_TO_TEXT_HEIGHT	frame.h	1454;"	d
FRAME_PIXEL_TO_TEXT_WIDTH	frame.h	1448;"	d
FRAME_PIXEL_WIDTH	frame.h	797;"	d
FRAME_PIXEL_WIDTH_TO_TEXT_COLS	frame.h	1418;"	d
FRAME_PIXEL_X_FROM_CANON_X	frame.h	1337;"	d
FRAME_PIXEL_X_TO_COL	frame.h	1412;"	d
FRAME_PIXEL_Y_FROM_CANON_Y	frame.h	1345;"	d
FRAME_PIXEL_Y_TO_LINE	frame.h	1400;"	d
FRAME_POINTER_TYPE	nsterm.h	1035;"	d
FRAME_PREV_FSMODE	w32term.h	417;"	d
frame_raise_lower_hook	termhooks.h	/^  void (*frame_raise_lower_hook) (struct frame *f, bool raise_flag);$/;"	m	struct:terminal	access:public
frame_rehighlight_hook	termhooks.h	/^  void (*frame_rehighlight_hook) (struct frame *);$/;"	m	struct:terminal	access:public
frame_resize_pixelwise	globals.h	945;"	d
FRAME_RES_X	frame.h	755;"	d
FRAME_RES_X	frame.h	764;"	d
FRAME_RES_Y	frame.h	757;"	d
FRAME_RES_Y	frame.h	765;"	d
FRAME_RIF	termhooks.h	702;"	d
FRAME_RIGHT_DIVIDER_WIDTH	frame.h	/^FRAME_RIGHT_DIVIDER_WIDTH (struct frame *f)$/;"	f	signature:(struct frame *f)
FRAME_RIGHT_FRINGE_WIDTH	frame.h	/^FRAME_RIGHT_FRINGE_WIDTH (struct frame *f)$/;"	f	signature:(struct frame *f)
FRAME_RIGHT_SCROLL_BAR_AREA_WIDTH	frame.h	1000;"	d
FRAME_RIGHT_SCROLL_BAR_COLS	frame.h	1018;"	d
FRAME_ROOT_WINDOW	frame.h	900;"	d
frame_row_to_window	dispnew.c	/^frame_row_to_window (struct window *w, int row)$/;"	f	file:	signature:(struct window *w, int row)
FRAME_SCROLL_BARS	frame.h	1096;"	d
FRAME_SCROLL_BAR_AREA_HEIGHT	frame.h	1032;"	d
FRAME_SCROLL_BAR_AREA_WIDTH	frame.h	1025;"	d
FRAME_SCROLL_BAR_COLS	frame.h	1038;"	d
FRAME_SCROLL_BAR_LINES	frame.h	1044;"	d
FRAME_SCROLL_REGION_COST	termhooks.h	693;"	d
FRAME_SCROLL_REGION_OK	termhooks.h	692;"	d
FRAME_SELECTED_WINDOW	frame.h	903;"	d
frame_set_mouse_pixel_position	frame.h	/^extern void frame_set_mouse_pixel_position (struct frame *f, int pix_x, int pix_y);$/;"	p	signature:(struct frame *f, int pix_x, int pix_y)
frame_set_mouse_pixel_position	w32term.c	/^frame_set_mouse_pixel_position (struct frame *f, int pix_x, int pix_y)$/;"	f	signature:(struct frame *f, int pix_x, int pix_y)
frame_set_mouse_pixel_position	xterm.c	/^frame_set_mouse_pixel_position (struct frame *f, int pix_x, int pix_y)$/;"	f	signature:(struct frame *f, int pix_x, int pix_y)
frame_set_mouse_position	frame.c	/^frame_set_mouse_position (struct frame *f, int x, int y)$/;"	f	file:	signature:(struct frame *f, int x, int y)
frame_size_history	globals.h	803;"	d
frame_size_history_add	frame.c	/^frame_size_history_add (struct frame *f, Lisp_Object fun_symbol,$/;"	f	signature:(struct frame *f, Lisp_Object fun_symbol, int width, int height, Lisp_Object rest)
frame_size_history_add	frame.h	/^extern void frame_size_history_add (struct frame *f, Lisp_Object fun_symbol,$/;"	p	signature:(struct frame *f, Lisp_Object fun_symbol, int width, int height, Lisp_Object rest)
FRAME_SKIP_TASKBAR	frame.h	941;"	d
FRAME_SKIP_TASKBAR	frame.h	955;"	d
FRAME_SMALLEST_CHAR_WIDTH	frame.h	1471;"	d
FRAME_SMALLEST_FONT_HEIGHT	frame.h	1475;"	d
FRAME_TERMCAP_P	frame.h	722;"	d
FRAME_TERMINAL	termhooks.h	704;"	d
FRAME_TERMINAL_CODING	termhooks.h	696;"	d
FRAME_TEXT_COLS_TO_PIXEL_WIDTH	frame.h	1386;"	d
FRAME_TEXT_HEIGHT	frame.h	816;"	d
frame_text_height	window.c	/^    int frame_text_width, frame_text_height;$/;"	m	struct:save_window_data	file:	access:public
FRAME_TEXT_LINES_TO_PIXEL_HEIGHT	frame.h	1392;"	d
FRAME_TEXT_TO_PIXEL_HEIGHT	frame.h	1440;"	d
FRAME_TEXT_TO_PIXEL_WIDTH	frame.h	1434;"	d
FRAME_TEXT_WIDTH	frame.h	812;"	d
frame_text_width	window.c	/^    int frame_text_width, frame_text_height;$/;"	m	struct:save_window_data	file:	access:public
FRAME_TOOLBAR_BOTTOM_HEIGHT	xterm.h	836;"	d
FRAME_TOOLBAR_HEIGHT	nsterm.h	1055;"	d
FRAME_TOOLBAR_HEIGHT	xterm.h	838;"	d
FRAME_TOOLBAR_LEFT_WIDTH	xterm.h	840;"	d
FRAME_TOOLBAR_RIGHT_WIDTH	xterm.h	841;"	d
FRAME_TOOLBAR_TOP_HEIGHT	xterm.h	835;"	d
FRAME_TOOLBAR_WIDTH	xterm.h	842;"	d
FRAME_TOOL_BAR_HEIGHT	frame.h	846;"	d
frame_tool_bar_height	window.c	/^    int frame_menu_bar_height, frame_tool_bar_height;$/;"	m	struct:save_window_data	file:	access:public
FRAME_TOOL_BAR_LINES	frame.h	843;"	d
frame_tool_bar_lines	window.c	/^    int frame_menu_bar_lines, frame_tool_bar_lines;$/;"	m	struct:save_window_data	file:	access:public
FRAME_TOOL_BAR_POSITION	frame.h	837;"	d
FRAME_TOOL_BAR_POSITION	frame.h	839;"	d
FRAME_TOP_MARGIN	frame.h	849;"	d
FRAME_TOP_MARGIN_HEIGHT	frame.h	853;"	d
FRAME_TOTAL_COLS	frame.h	1051;"	d
FRAME_TOTAL_FRINGE_WIDTH	frame.h	/^FRAME_TOTAL_FRINGE_WIDTH (struct frame *f)$/;"	f	signature:(struct frame *f)
FRAME_TOTAL_LINES	frame.h	1055;"	d
FRAME_TO_WINDOW_PIXEL_X	window.h	971;"	d
frame_to_window_pixel_xy	xdisp.c	/^frame_to_window_pixel_xy (struct window *w, int *x, int *y)$/;"	f	file:	signature:(struct window *w, int *x, int *y)
FRAME_TO_WINDOW_PIXEL_Y	window.h	975;"	d
FRAME_TTY	termchar.h	226;"	d
FRAME_UNDECORATED	frame.h	931;"	d
FRAME_UNDECORATED	frame.h	952;"	d
frame_unhighlight	w32term.c	/^frame_unhighlight (struct frame *f)$/;"	f	file:	signature:(struct frame *f)
frame_unhighlight	w32term.c	/^static void frame_unhighlight (struct frame *);$/;"	p	file:	signature:(struct frame *)
frame_unhighlight	xterm.c	/^frame_unhighlight (struct frame *f)$/;"	f	file:	signature:(struct frame *f)
frame_unspecified_color	frame.c	/^frame_unspecified_color (struct frame *f, Lisp_Object unspec)$/;"	f	file:	signature:(struct frame *f, Lisp_Object unspec)
frame_up_to_date_hook	termhooks.h	/^  void (*frame_up_to_date_hook) (struct frame *);$/;"	m	struct:terminal	access:public
FRAME_VERTICAL_SCROLL_BAR_TYPE	frame.h	914;"	d
FRAME_VERTICAL_SCROLL_BAR_TYPE	frame.h	923;"	d
FRAME_VISIBLE_P	frame.h	866;"	d
FRAME_W32_P	frame.h	725;"	d
FRAME_W32_P	frame.h	727;"	d
FRAME_W32_WINDOW	w32term.h	403;"	d
FRAME_WANTS_MODELINE_P	frame.h	885;"	d
FRAME_WINDOWS_FROZEN	frame.h	889;"	d
FRAME_WINDOWS_HEIGHT	frame.h	1465;"	d
frame_windows_min_size	frame.c	/^frame_windows_min_size (Lisp_Object frame, Lisp_Object horizontal,$/;"	f	file:	signature:(Lisp_Object frame, Lisp_Object horizontal, Lisp_Object ignore, Lisp_Object pixelwise)
FRAME_WINDOWS_WIDTH	frame.h	1461;"	d
FRAME_WINDOW_CONFIGURATION_CHANGED	frame.h	893;"	d
frame_window_p	dispextern.h	/^  bool_bf frame_window_p : 1;	\/* true if displaying on a GUI frame *\/$/;"	m	struct:bidi_it	access:public
FRAME_WINDOW_P	frame.h	739;"	d
FRAME_WINDOW_P	frame.h	742;"	d
FRAME_WINDOW_P	frame.h	745;"	d
FRAME_WINDOW_P	frame.h	748;"	d
FRAME_XIC	xterm.h	864;"	d
FRAME_XIC_FONTSET	xterm.h	868;"	d
FRAME_XIC_STYLE	xterm.h	867;"	d
FRAME_X_COLORMAP	xterm.h	862;"	d
FRAME_X_DISPLAY	nsterm.h	1021;"	d
FRAME_X_DISPLAY	w32term.h	414;"	d
FRAME_X_DISPLAY	xterm.h	850;"	d
FRAME_X_DOUBLE_BUFFERED_P	xterm.h	774;"	d
FRAME_X_DRAWABLE	xterm.h	771;"	d
FRAME_X_EMBEDDED_P	xterm.h	1267;"	d
FRAME_X_NEED_BUFFER_FLIP	xterm.h	778;"	d
FRAME_X_OUTPUT	nsterm.h	1015;"	d
FRAME_X_OUTPUT	w32term.h	400;"	d
FRAME_X_OUTPUT	xdisp.c	325;"	d	file:
FRAME_X_OUTPUT	xterm.h	757;"	d
FRAME_X_P	frame.h	723;"	d
FRAME_X_RAW_DRAWABLE	xterm.h	763;"	d
FRAME_X_SCREEN	nsterm.h	1022;"	d
FRAME_X_SCREEN	xterm.h	853;"	d
FRAME_X_SCREEN_NUMBER	xterm.h	856;"	d
FRAME_X_VISUAL	nsterm.h	1023;"	d
FRAME_X_VISUAL	xterm.h	859;"	d
FRAME_X_WINDOW	nsterm.h	1017;"	d
FRAME_X_WINDOW	w32term.h	404;"	d
FRAME_X_WINDOW	xterm.h	760;"	d
FRAME_X_XIM	xterm.h	865;"	d
FRAME_X_XIM_STYLES	xterm.h	866;"	d
FRAME_Z_GROUP	frame.h	945;"	d
FRAME_Z_GROUP	frame.h	959;"	d
FRAME_Z_GROUP_ABOVE	frame.h	947;"	d
FRAME_Z_GROUP_ABOVE	frame.h	961;"	d
FRAME_Z_GROUP_ABOVE_SUSPENDED	frame.h	948;"	d
FRAME_Z_GROUP_BELOW	frame.h	950;"	d
FRAME_Z_GROUP_BELOW	frame.h	962;"	d
FRAME_Z_GROUP_NONE	frame.h	946;"	d
FRAME_Z_GROUP_NONE	frame.h	960;"	d
FRBITS	fringe.c	437;"	d	file:
fread_unlocked	sysstdio.h	59;"	d
free	alloc.c	790;"	d	file:
free	alloc.c	793;"	d	file:
free	conf_post.h	102;"	d
free	conf_post.h	116;"	d
free	dispextern.h	/^  void (* free) (struct frame *f, struct image *img);$/;"	m	struct:image_type	access:public
free	gmalloc.c	/^      } free;$/;"	m	union:__anon60	typeref:struct:__anon60::__anon64	file:	access:public
free	gmalloc.c	/^extern void free (void *ptr);$/;"	p	file:	signature:(void *ptr)
free	gmalloc.c	/^free (void *ptr)$/;"	f	signature:(void *ptr)
free	gmalloc.c	1695;"	d	file:
free	gmalloc.c	69;"	d	file:
free	gmalloc.c	74;"	d	file:
free	image.c	989;"	d	file:
free	ralloc.c	/^  void *free;$/;"	m	struct:heap	file:	access:public
free	regex.c	150;"	d	file:
free	regex.c	152;"	d	file:
free	unexmacosx.c	94;"	d	file:
free	w32heap.c	327;"	d	file:
FREEABLE_P	w32heap.c	330;"	d	file:
FREEFLOOD	gmalloc.c	1866;"	d	file:
freehook	gmalloc.c	/^freehook (void *ptr)$/;"	f	file:	signature:(void *ptr)
freelocale	sysdep.c	/^freelocale (locale_t loc)$/;"	f	file:	signature:(locale_t loc)
freelocale	sysdep.c	3802;"	d	file:
freelocale	sysdep.c	3807;"	d	file:
FREETYPE_CFLAGS	Makefile	/^FREETYPE_CFLAGS = -isystem \/usr\/include\/freetype2$/;"	m
freetype_font_cache	ftfont.c	/^static Lisp_Object freetype_font_cache;$/;"	v	file:
FREETYPE_LIBS	Makefile	/^FREETYPE_LIBS = -lfreetype$/;"	m
freeze_buffer_relocation	search.c	/^freeze_buffer_relocation (void)$/;"	f	file:	signature:(void)
free_ablock	alloc.c	/^static struct ablock *free_ablock;$/;"	v	typeref:struct:ablock	file:
free_after_dump	w32heap.c	/^free_after_dump (void *ptr)$/;"	f	signature:(void *ptr)
free_after_dump_9x	w32heap.c	/^free_after_dump_9x (void *ptr)$/;"	f	signature:(void *ptr)
free_all_realized_faces	dispextern.h	/^void free_all_realized_faces (Lisp_Object);$/;"	p	signature:(Lisp_Object)
free_all_realized_faces	xfaces.c	/^free_all_realized_faces (Lisp_Object frame)$/;"	f	signature:(Lisp_Object frame)
free_arglist	xrdb.c	600;"	d	file:
free_atimers	atimer.c	/^static struct atimer *free_atimers;$/;"	v	typeref:struct:atimer	file:
free_before_dump	w32heap.c	/^free_before_dump (void *ptr)$/;"	f	signature:(void *ptr)
free_bitmap	font.h	/^  void (*free_bitmap) (struct font *font, struct font_bitmap *bitmap);$/;"	m	struct:font_driver	access:public
free_bitmap_record	image.c	/^free_bitmap_record (Display_Info *dpyinfo, Bitmap_Record *bm)$/;"	f	file:	signature:(Display_Info *dpyinfo, Bitmap_Record *bm)
free_bloc	ralloc.c	/^free_bloc (bloc_ptr bloc)$/;"	f	file:	signature:(bloc_ptr bloc)
free_buffer_text	buffer.c	/^free_buffer_text (struct buffer *b)$/;"	f	file:	signature:(struct buffer *b)
free_buffer_text	buffer.c	/^static void free_buffer_text (struct buffer *b);$/;"	p	file:	signature:(struct buffer *b)
free_color_table	image.c	/^free_color_table (void)$/;"	f	file:	signature:(void)
free_color_table	image.c	/^static void free_color_table (void);$/;"	p	file:	signature:(void)
free_cons	alloc.c	/^free_cons (struct Lisp_Cons *ptr)$/;"	f	signature:(struct Lisp_Cons *ptr)
free_cons	lisp.h	/^extern void free_cons (struct Lisp_Cons *);$/;"	p	signature:(struct Lisp_Cons *)
free_dns_request	process.c	/^free_dns_request (Lisp_Object proc)$/;"	f	file:	signature:(Lisp_Object proc)
free_entity	font.h	/^  void (*free_entity) (Lisp_Object font_entity);$/;"	m	struct:font_driver	access:public
free_face_cache	xfaces.c	/^free_face_cache (struct face_cache *c)$/;"	f	file:	signature:(struct face_cache *c)
free_face_cache	xfaces.c	/^static void free_face_cache (struct face_cache *);$/;"	p	file:	signature:(struct face_cache *)
free_face_colors	xfaces.c	/^free_face_colors (struct frame *f, struct face *face)$/;"	f	file:	signature:(struct frame *f, struct face *face)
free_face_fontset	fontset.c	/^free_face_fontset (struct frame *f, struct face *face)$/;"	f	signature:(struct frame *f, struct face *face)
free_face_fontset	fontset.h	/^extern void free_face_fontset (struct frame *, struct face *);$/;"	p	signature:(struct frame *, struct face *)
free_font_driver_list	font.c	/^free_font_driver_list (struct frame *f)$/;"	f	signature:(struct frame *f)
free_font_driver_list	font.h	/^extern void free_font_driver_list (struct frame *f);$/;"	p	signature:(struct frame *f)
free_frame_faces	dispextern.h	/^void free_frame_faces (struct frame *);$/;"	p	signature:(struct frame *)
free_frame_faces	xfaces.c	/^free_frame_faces (struct frame *f)$/;"	f	signature:(struct frame *f)
free_frame_menubar	frame.h	/^extern void free_frame_menubar (struct frame *);$/;"	p	signature:(struct frame *)
free_frame_menubar	gtkutil.c	/^free_frame_menubar (struct frame *f)$/;"	f	signature:(struct frame *f)
free_frame_menubar	w32menu.c	/^free_frame_menubar (struct frame *f)$/;"	f	signature:(struct frame *f)
free_frame_menubar	xmenu.c	/^free_frame_menubar (struct frame *f)$/;"	f	signature:(struct frame *f)
free_frame_tool_bar	gtkutil.c	/^free_frame_tool_bar (struct frame *f)$/;"	f	signature:(struct frame *f)
free_frame_tool_bar	gtkutil.h	/^extern void free_frame_tool_bar (struct frame *f);$/;"	p	signature:(struct frame *f)
free_frame_tool_bar	nsterm.h	/^extern void free_frame_tool_bar (struct frame *f);$/;"	p	signature:(struct frame *f)
free_frame_xic	xfns.c	/^free_frame_xic (struct frame *f)$/;"	f	signature:(struct frame *f)
free_frame_xic	xterm.h	/^extern void free_frame_xic (struct frame *);$/;"	p	signature:(struct frame *)
free_glyphs	dispextern.h	/^void free_glyphs (struct frame *);$/;"	p	signature:(struct frame *)
free_glyphs	dispnew.c	/^free_glyphs (struct frame *f)$/;"	f	signature:(struct frame *f)
free_glyph_matrix	dispnew.c	/^free_glyph_matrix (struct glyph_matrix *matrix)$/;"	f	file:	signature:(struct glyph_matrix *matrix)
free_glyph_pool	dispnew.c	/^free_glyph_pool (struct glyph_pool *pool)$/;"	f	file:	signature:(struct glyph_pool *pool)
free_image	image.c	/^free_image (struct frame *f, struct image *img)$/;"	f	file:	signature:(struct frame *f, struct image *img)
free_image_cache	dispextern.h	/^void free_image_cache (struct frame *);$/;"	p	signature:(struct frame *)
free_image_cache	image.c	/^free_image_cache (struct frame *f)$/;"	f	signature:(struct frame *f)
free_large_strings	alloc.c	/^free_large_strings (void)$/;"	f	file:	signature:(void)
free_large_strings	alloc.c	/^static void free_large_strings (void);$/;"	p	file:	signature:(void)
free_marker	alloc.c	/^free_marker (Lisp_Object marker)$/;"	f	signature:(Lisp_Object marker)
free_marker	lisp.h	/^extern void free_marker (Lisp_Object);$/;"	p	signature:(Lisp_Object)
free_menubar_widget_value_tree	menu.c	/^free_menubar_widget_value_tree (widget_value *wv)$/;"	f	signature:(widget_value *wv)
free_menubar_widget_value_tree	menu.h	/^extern void free_menubar_widget_value_tree (widget_value *);$/;"	p	signature:(widget_value *)
free_misc	alloc.c	/^free_misc (Lisp_Object misc)$/;"	f	signature:(Lisp_Object misc)
free_misc	lisp.h	/^extern void free_misc (Lisp_Object);$/;"	p	signature:(Lisp_Object)
free_monitors	frame.c	/^free_monitors (struct MonitorInfo *monitors, int n_monitors)$/;"	f	signature:(struct MonitorInfo *monitors, int n_monitors)
free_monitors	frame.h	/^extern void free_monitors (struct MonitorInfo *monitors, int n_monitors);$/;"	p	signature:(struct MonitorInfo *monitors, int n_monitors)
Free_Pixmap	image.c	1191;"	d	file:
Free_Pixmap	image.c	1196;"	d	file:
Free_Pixmap	image.c	1201;"	d	file:
FREE_RANGE_TABLE_WORK_AREA	regex.c	1773;"	d	file:
free_realized_face	xfaces.c	/^free_realized_face (struct frame *f, struct face *face)$/;"	f	file:	signature:(struct frame *f, struct face *face)
free_realized_faces	xfaces.c	/^free_realized_faces (struct face_cache *c)$/;"	f	file:	signature:(struct face_cache *c)
free_realized_fontsets	fontset.c	/^free_realized_fontsets (Lisp_Object base)$/;"	f	file:	signature:(Lisp_Object base)
free_region_cache	region-cache.c	/^free_region_cache (struct region_cache *c)$/;"	f	signature:(struct region_cache *c)
free_region_cache	region-cache.h	/^void free_region_cache (struct region_cache *);$/;"	p	signature:(struct region_cache *)
free_saved_screen	term.c	/^free_saved_screen (struct glyph_matrix *saved)$/;"	f	file:	signature:(struct glyph_matrix *saved)
free_save_value	alloc.c	/^free_save_value (Lisp_Object save)$/;"	f	signature:(Lisp_Object save)
free_save_value	lisp.h	/^extern void free_save_value (Lisp_Object);$/;"	p	signature:(Lisp_Object)
FREE_STACK_RETURN	regex.c	2398;"	d	file:
FREE_VAR	regex.c	4531;"	d	file:
FREE_VARIABLES	regex.c	4539;"	d	file:
FREE_VARIABLES	regex.c	4549;"	d	file:
free_window_matrices	dispextern.h	/^void free_window_matrices (struct window *);$/;"	p	signature:(struct window *)
free_window_matrices	dispnew.c	/^free_window_matrices (struct window *w)$/;"	f	signature:(struct window *w)
fringes_outside_margins	window.c	/^  Lisp_Object left_fringe_width, right_fringe_width, fringes_outside_margins;$/;"	m	struct:saved_window	file:	access:public
fringes_outside_margins	window.h	/^    bool_bf fringes_outside_margins : 1;$/;"	m	struct:window	access:public
fringes_outside_margins_	buffer.h	/^  Lisp_Object fringes_outside_margins_;$/;"	m	struct:buffer	access:public
fringe_bitmap	fringe.c	/^struct fringe_bitmap$/;"	s	file:
fringe_bitmap::align	fringe.c	/^  unsigned align : 2;$/;"	m	struct:fringe_bitmap	file:	access:public
fringe_bitmap::bits	fringe.c	/^  unsigned short *bits;$/;"	m	struct:fringe_bitmap	file:	access:public
fringe_bitmap::dynamic	fringe.c	/^  bool_bf dynamic : 1;$/;"	m	struct:fringe_bitmap	file:	access:public
fringe_bitmap::height	fringe.c	/^  unsigned height : 8;$/;"	m	struct:fringe_bitmap	file:	access:public
fringe_bitmap::period	fringe.c	/^  unsigned period : 8;$/;"	m	struct:fringe_bitmap	file:	access:public
fringe_bitmap::width	fringe.c	/^  unsigned width : 8;$/;"	m	struct:fringe_bitmap	file:	access:public
fringe_bitmaps	fringe.c	/^static struct fringe_bitmap **fringe_bitmaps;$/;"	v	typeref:struct:fringe_bitmap	file:
fringe_bitmap_align	fringe.c	/^enum fringe_bitmap_align$/;"	g	file:
fringe_bitmap_periodic_p	dispextern.h	/^  bool_bf fringe_bitmap_periodic_p : 1;$/;"	m	struct:glyph_row	access:public
fringe_bmp	w32term.c	/^static HBITMAP *fringe_bmp = 0;$/;"	v	file:
fringe_bmp	xterm.c	/^static cairo_pattern_t **fringe_bmp = 0;$/;"	v	file:
fringe_cols	frame.h	/^  int fringe_cols;$/;"	m	struct:frame	access:public
fringe_cursor_alist_	buffer.h	/^  Lisp_Object fringe_cursor_alist_;$/;"	m	struct:buffer	access:public
fringe_faces	fringe.c	/^static Lisp_Object *fringe_faces;$/;"	v	file:
FRINGE_FACE_ID	dispextern.h	/^  FRINGE_FACE_ID,$/;"	e	enum:face_id
FRINGE_HEIGHT_BITS	dispextern.h	128;"	d
FRINGE_ID_BITS	dispextern.h	125;"	d
fringe_indicator_alist_	buffer.h	/^  Lisp_Object fringe_indicator_alist_;$/;"	m	struct:buffer	access:public
from	charset.c	/^    unsigned from, to;$/;"	m	struct:charset_map_entries::__anon80	file:	access:public
from	composite.c	/^  (Lisp_Object from, Lisp_Object to, Lisp_Object font_object, Lisp_Object string)$/;"	v
from	dispextern.h	/^    struct { int from, to; } cmp;$/;"	m	struct:glyph::__anon107::__anon108	access:public
from	dispextern.h	/^  int from, to;$/;"	m	struct:composition_it	access:public
from	fns.c	/^  (Lisp_Object string, Lisp_Object from, Lisp_Object to)$/;"	v
from	fns.c	/^  (Lisp_Object string, register Lisp_Object from, Lisp_Object to)$/;"	v
from	fns.c	/^  ptrdiff_t from;		\/* refer to ARGS[argnum] (argument string) *\/$/;"	m	struct:textprop_rec	file:	access:public
from	font.c	/^  (Lisp_Object font_object, Lisp_Object from, Lisp_Object to,$/;"	v
from	indent.c	/^  (Lisp_Object from, Lisp_Object frompos, Lisp_Object to, Lisp_Object topos,$/;"	v
from	syntax.c	/^  (Lisp_Object from, Lisp_Object count)$/;"	v
from	syntax.c	/^  (Lisp_Object from, Lisp_Object count, Lisp_Object depth)$/;"	v
from	syntax.c	/^  (Lisp_Object from, Lisp_Object to, Lisp_Object targetdepth,$/;"	v
from	xdisp.c	/^  (Lisp_Object from, Lisp_Object to, Lisp_Object object)$/;"	v
from	xdisp.c	/^  (Lisp_Object window, Lisp_Object from, Lisp_Object to, Lisp_Object x_limit,$/;"	v
from	xfaces.c	/^  (Lisp_Object from, Lisp_Object to, Lisp_Object frame, Lisp_Object new_frame)$/;"	v
from	xselect.c	/^  (Lisp_Object display, Lisp_Object dest, Lisp_Object from,$/;"	v
fromchar	editfns.c	/^  (Lisp_Object start, Lisp_Object end, Lisp_Object fromchar, Lisp_Object tochar, Lisp_Object noundo)$/;"	v
frompos	indent.c	/^  (Lisp_Object from, Lisp_Object frompos, Lisp_Object to, Lisp_Object topos,$/;"	v
from_code	charset.c	/^  (Lisp_Object function, Lisp_Object charset, Lisp_Object arg, Lisp_Object from_code, Lisp_Object to_code)$/;"	v
from_disp_prop_p	dispextern.h	/^    bool_bf from_disp_prop_p : 1;$/;"	m	struct:it::iterator_stack_entry	access:public
from_disp_prop_p	dispextern.h	/^  bool_bf from_disp_prop_p : 1;$/;"	m	struct:it	access:public
from_disp_str	dispextern.h	/^  bool_bf from_disp_str : 1;	\/* True means the string comes from a$/;"	m	struct:bidi_string_data	access:public
FROM_FILE_P	lread.c	358;"	d	file:
from_overlay	dispextern.h	/^    Lisp_Object from_overlay;$/;"	m	struct:it::iterator_stack_entry	access:public
from_overlay	dispextern.h	/^  Lisp_Object from_overlay;$/;"	m	struct:it	access:public
from_unicode	coding.c	/^from_unicode (Lisp_Object str)$/;"	f	signature:(Lisp_Object str)
from_unicode	coding.h	/^extern Lisp_Object from_unicode (Lisp_Object str);$/;"	p	signature:(Lisp_Object str)
from_unicode_buffer	coding.c	/^from_unicode_buffer (const wchar_t *wstr)$/;"	f	signature:(const wchar_t *wstr)
from_unicode_buffer	coding.h	/^extern Lisp_Object from_unicode_buffer (const wchar_t *wstr);$/;"	p	signature:(const wchar_t *wstr)
front_advance	buffer.c	/^   Lisp_Object front_advance, Lisp_Object rear_advance)$/;"	v
FRONT_NONSTICKY_P	intervals.h	219;"	d
front_sticky	intervals.h	/^  bool_bf front_sticky : 1;	    \/* True means text inserted just$/;"	m	struct:interval	access:public
FRONT_STICKY_P	intervals.h	215;"	d
frozen_window_starts	frame.h	/^  bool_bf frozen_window_starts : 1;$/;"	m	struct:frame	access:public
FSCTL_GET_REPARSE_POINT	w32.c	215;"	d	file:
fset_buffer_list	frame.h	/^fset_buffer_list (struct frame *f, Lisp_Object val)$/;"	f	signature:(struct frame *f, Lisp_Object val)
fset_buffer_predicate	frame.c	/^fset_buffer_predicate (struct frame *f, Lisp_Object val)$/;"	f	file:	signature:(struct frame *f, Lisp_Object val)
fset_buried_buffer_list	frame.h	/^fset_buried_buffer_list (struct frame *f, Lisp_Object val)$/;"	f	signature:(struct frame *f, Lisp_Object val)
fset_condemned_scroll_bars	frame.h	/^fset_condemned_scroll_bars (struct frame *f, Lisp_Object val)$/;"	f	signature:(struct frame *f, Lisp_Object val)
fset_current_tool_bar_string	frame.h	/^fset_current_tool_bar_string (struct frame *f, Lisp_Object val)$/;"	f	signature:(struct frame *f, Lisp_Object val)
fset_desired_tool_bar_string	frame.h	/^fset_desired_tool_bar_string (struct frame *f, Lisp_Object val)$/;"	f	signature:(struct frame *f, Lisp_Object val)
fset_face_alist	frame.h	/^fset_face_alist (struct frame *f, Lisp_Object val)$/;"	f	signature:(struct frame *f, Lisp_Object val)
fset_focus_frame	frame.h	/^fset_focus_frame (struct frame *f, Lisp_Object val)$/;"	f	signature:(struct frame *f, Lisp_Object val)
fset_font_data	font.c	/^fset_font_data (struct frame *f, Lisp_Object val)$/;"	f	file:	signature:(struct frame *f, Lisp_Object val)
fset_icon_name	frame.h	/^fset_icon_name (struct frame *f, Lisp_Object val)$/;"	f	signature:(struct frame *f, Lisp_Object val)
fset_menu_bar_items	frame.h	/^fset_menu_bar_items (struct frame *f, Lisp_Object val)$/;"	f	signature:(struct frame *f, Lisp_Object val)
fset_menu_bar_vector	frame.h	/^fset_menu_bar_vector (struct frame *f, Lisp_Object val)$/;"	f	signature:(struct frame *f, Lisp_Object val)
fset_menu_bar_window	frame.h	/^fset_menu_bar_window (struct frame *f, Lisp_Object val)$/;"	f	signature:(struct frame *f, Lisp_Object val)
fset_minibuffer_window	frame.c	/^fset_minibuffer_window (struct frame *f, Lisp_Object val)$/;"	f	file:	signature:(struct frame *f, Lisp_Object val)
fset_name	frame.h	/^fset_name (struct frame *f, Lisp_Object val)$/;"	f	signature:(struct frame *f, Lisp_Object val)
fset_param_alist	frame.h	/^fset_param_alist (struct frame *f, Lisp_Object val)$/;"	f	signature:(struct frame *f, Lisp_Object val)
fset_parent_frame	frame.h	/^fset_parent_frame (struct frame *f, Lisp_Object val)$/;"	f	signature:(struct frame *f, Lisp_Object val)
fset_redisplay	window.h	/^extern void fset_redisplay (struct frame *f);$/;"	p	signature:(struct frame *f)
fset_redisplay	xdisp.c	/^fset_redisplay (struct frame *f)$/;"	f	signature:(struct frame *f)
fset_root_window	frame.h	/^fset_root_window (struct frame *f, Lisp_Object val)$/;"	f	signature:(struct frame *f, Lisp_Object val)
fset_scroll_bars	frame.h	/^fset_scroll_bars (struct frame *f, Lisp_Object val)$/;"	f	signature:(struct frame *f, Lisp_Object val)
fset_selected_window	frame.h	/^fset_selected_window (struct frame *f, Lisp_Object val)$/;"	f	signature:(struct frame *f, Lisp_Object val)
fset_title	frame.h	/^fset_title (struct frame *f, Lisp_Object val)$/;"	f	signature:(struct frame *f, Lisp_Object val)
fset_tool_bar_items	frame.h	/^fset_tool_bar_items (struct frame *f, Lisp_Object val)$/;"	f	signature:(struct frame *f, Lisp_Object val)
fset_tool_bar_position	frame.h	/^fset_tool_bar_position (struct frame *f, Lisp_Object val)$/;"	f	signature:(struct frame *f, Lisp_Object val)
fset_tool_bar_window	frame.h	/^fset_tool_bar_window (struct frame *f, Lisp_Object val)$/;"	f	signature:(struct frame *f, Lisp_Object val)
FSI	dispextern.h	/^  FSI,		\/* first strong isolate *\/$/;"	e	enum:__anon114
fstat	w32.c	/^fstat (int desc, struct stat * buf)$/;"	f	signature:(int desc, struct stat * buf)
fstatat	w32.c	/^fstatat (int fd, char const *name, struct stat *st, int flags)$/;"	f	signature:(int fd, char const *name, struct stat *st, int flags)
fs_query_fontset	fontset.c	/^fs_query_fontset (Lisp_Object name, int name_pattern)$/;"	f	signature:(Lisp_Object name, int name_pattern)
fs_query_fontset	fontset.h	/^extern int fs_query_fontset (Lisp_Object, int);$/;"	p	signature:(Lisp_Object, int)
ftcrfont_close	ftcrfont.c	/^ftcrfont_close (struct font *font)$/;"	f	file:	signature:(struct font *font)
ftcrfont_draw	ftcrfont.c	/^ftcrfont_draw (struct glyph_string *s,$/;"	f	file:	signature:(struct glyph_string *s, int from, int to, int x, int y, bool with_background)
ftcrfont_driver	ftcrfont.c	/^struct font_driver const ftcrfont_driver =$/;"	v
ftcrfont_glyph_extents	ftcrfont.c	/^ftcrfont_glyph_extents (struct font *font,$/;"	f	file:	signature:(struct font *font, unsigned glyph, struct font_metrics *metrics)
ftcrfont_info	ftcrfont.c	/^struct ftcrfont_info$/;"	s	file:
ftcrfont_info::cr_font_face	ftcrfont.c	/^  cairo_font_face_t *cr_font_face;$/;"	m	struct:ftcrfont_info	file:	access:public
ftcrfont_info::font	ftcrfont.c	/^  struct font font;$/;"	m	struct:ftcrfont_info	typeref:struct:ftcrfont_info::font	file:	access:public
ftcrfont_info::ft_size	ftcrfont.c	/^  FT_Size ft_size;$/;"	m	struct:ftcrfont_info	file:	access:public
ftcrfont_info::ft_size_draw	ftcrfont.c	/^  FT_Size ft_size_draw;$/;"	m	struct:ftcrfont_info	file:	access:public
ftcrfont_info::index	ftcrfont.c	/^  int index;$/;"	m	struct:ftcrfont_info	file:	access:public
ftcrfont_info::matrix	ftcrfont.c	/^  FT_Matrix matrix;$/;"	m	struct:ftcrfont_info	file:	access:public
ftcrfont_info::maybe_otf	ftcrfont.c	/^  bool maybe_otf;	  \/* Flag to tell if this may be OTF or not.  *\/$/;"	m	struct:ftcrfont_info	file:	access:public
ftcrfont_info::metrics	ftcrfont.c	/^  struct font_metrics **metrics;$/;"	m	struct:ftcrfont_info	typeref:struct:ftcrfont_info::font_metrics	file:	access:public
ftcrfont_info::metrics_nrows	ftcrfont.c	/^  short metrics_nrows;$/;"	m	struct:ftcrfont_info	file:	access:public
ftcrfont_info::otf	ftcrfont.c	/^  OTF *otf;$/;"	m	struct:ftcrfont_info	file:	access:public
ftcrfont_list	ftcrfont.c	/^ftcrfont_list (struct frame *f, Lisp_Object spec)$/;"	f	file:	signature:(struct frame *f, Lisp_Object spec)
ftcrfont_match	ftcrfont.c	/^ftcrfont_match (struct frame *f, Lisp_Object spec)$/;"	f	file:	signature:(struct frame *f, Lisp_Object spec)
ftcrfont_open	ftcrfont.c	/^ftcrfont_open (struct frame *f, Lisp_Object entity, int pixel_size)$/;"	f	file:	signature:(struct frame *f, Lisp_Object entity, int pixel_size)
ftcrfont_text_extents	ftcrfont.c	/^ftcrfont_text_extents (struct font *font,$/;"	f	file:	signature:(struct font *font, unsigned *code, int nglyphs, struct font_metrics *metrics)
ftfont_anchor_point	font.h	/^extern int ftfont_anchor_point (struct font *, unsigned int, int,$/;"	p	signature:(struct font *, unsigned int, int, int *, int *)
ftfont_anchor_point	ftfont.c	/^ftfont_anchor_point (struct font *font, unsigned int code, int idx,$/;"	f	signature:(struct font *font, unsigned int code, int idx, int *x, int *y)
ftfont_booleans	ftfont.c	/^static const char *const ftfont_booleans [] = {$/;"	v	file:
ftfont_cache_data	ftfont.c	/^struct ftfont_cache_data$/;"	s	file:
ftfont_cache_data::fc_charset	ftfont.c	/^  FcCharSet *fc_charset;$/;"	m	struct:ftfont_cache_data	file:	access:public
ftfont_cache_data::ft_face	ftfont.c	/^  FT_Face ft_face;$/;"	m	struct:ftfont_cache_data	file:	access:public
ftfont_cache_for	ftfont.c	/^enum ftfont_cache_for$/;"	g	file:
FTFONT_CACHE_FOR_CHARSET	ftfont.c	/^    FTFONT_CACHE_FOR_CHARSET,$/;"	e	enum:ftfont_cache_for	file:
FTFONT_CACHE_FOR_ENTITY	ftfont.c	/^    FTFONT_CACHE_FOR_ENTITY$/;"	e	enum:ftfont_cache_for	file:
FTFONT_CACHE_FOR_FACE	ftfont.c	/^    FTFONT_CACHE_FOR_FACE,$/;"	e	enum:ftfont_cache_for	file:
ftfont_check_otf	ftfont.c	/^ftfont_check_otf (MFLTFont *font, MFLTOtfSpec *spec)$/;"	f	file:	signature:(MFLTFont *font, MFLTOtfSpec *spec)
ftfont_close	font.h	/^extern void ftfont_close (struct font *);$/;"	p	signature:(struct font *)
ftfont_close	ftfont.c	/^ftfont_close (struct font *font)$/;"	f	signature:(struct font *font)
ftfont_combining_capability	font.h	/^extern Lisp_Object ftfont_combining_capability (struct font *);$/;"	p	signature:(struct font *)
ftfont_combining_capability	ftfont.c	/^ftfont_combining_capability (struct font *font)$/;"	f	signature:(struct font *font)
ftfont_driver	ftfont.c	/^static struct font_driver const ftfont_driver =$/;"	v	file:
ftfont_driver	ftfont.c	/^static struct font_driver const ftfont_driver;$/;"	v	file:
ftfont_drive_otf	ftfont.c	/^ftfont_drive_otf (MFLTFont *font, MFLTOtfSpec *spec, MFLTGlyphString *in,$/;"	f	file:	signature:(MFLTFont *font, MFLTOtfSpec *spec, MFLTGlyphString *in, int from, int to, MFLTGlyphString *out, MFLTGlyphAdjustment *adjustment)
ftfont_drive_otf	ftfont.c	/^ftfont_drive_otf (MFLTFont *font,$/;"	f	file:	signature:(MFLTFont *font, MFLTOtfSpec *spec, MFLTGlyphString *in, int from, int to, MFLTGlyphString *out, MFLTGlyphAdjustment *adjustment)
ftfont_encode_char	font.h	/^extern unsigned ftfont_encode_char (struct font *, int);$/;"	p	signature:(struct font *, int)
ftfont_encode_char	ftfont.c	/^ftfont_encode_char (struct font *font, int c)$/;"	f	signature:(struct font *font, int c)
ftfont_filter_properties	font.h	/^extern void ftfont_filter_properties (Lisp_Object, Lisp_Object);$/;"	p	signature:(Lisp_Object, Lisp_Object)
ftfont_filter_properties	ftfont.c	/^ftfont_filter_properties (Lisp_Object font, Lisp_Object alist)$/;"	f	signature:(Lisp_Object font, Lisp_Object alist)
ftfont_generic_family_list	ftfont.c	/^static Lisp_Object ftfont_generic_family_list;$/;"	v	file:
ftfont_get_bitmap	font.h	/^extern int ftfont_get_bitmap (struct font *, unsigned int,$/;"	p	signature:(struct font *, unsigned int, struct font_bitmap *, int)
ftfont_get_bitmap	ftfont.c	/^ftfont_get_bitmap (struct font *font, unsigned int code, struct font_bitmap *bitmap, int bits_per_pixel)$/;"	f	signature:(struct font *font, unsigned int code, struct font_bitmap *bitmap, int bits_per_pixel)
ftfont_get_cache	font.h	/^extern Lisp_Object ftfont_get_cache (struct frame *);$/;"	p	signature:(struct frame *)
ftfont_get_cache	ftfont.c	/^ftfont_get_cache (struct frame *f)$/;"	f	signature:(struct frame *f)
ftfont_get_charset	ftfont.c	/^ftfont_get_charset (Lisp_Object registry)$/;"	f	file:	signature:(Lisp_Object registry)
ftfont_get_fc_charset	ftfont.c	/^ftfont_get_fc_charset (Lisp_Object entity)$/;"	f	signature:(Lisp_Object entity)
ftfont_get_fc_charset	ftfont.h	/^extern FcCharSet *ftfont_get_fc_charset (Lisp_Object);$/;"	p	signature:(Lisp_Object)
ftfont_get_glyph_id	ftfont.c	/^ftfont_get_glyph_id (MFLTFont *font, MFLTGlyphString *gstring,$/;"	f	file:	signature:(MFLTFont *font, MFLTGlyphString *gstring, int from, int to)
ftfont_get_metrics	ftfont.c	/^ftfont_get_metrics (MFLTFont *font, MFLTGlyphString *gstring,$/;"	f	file:	signature:(MFLTFont *font, MFLTGlyphString *gstring, int from, int to)
ftfont_get_open_type_spec	ftfont.c	/^ftfont_get_open_type_spec (Lisp_Object otf_spec)$/;"	f	file:	signature:(Lisp_Object otf_spec)
ftfont_get_otf	ftfont.c	/^ftfont_get_otf (struct ftfont_info *ftfont_info)$/;"	f	file:	signature:(struct ftfont_info *ftfont_info)
ftfont_has_char	font.h	/^extern int ftfont_has_char (Lisp_Object, int);$/;"	p	signature:(Lisp_Object, int)
ftfont_has_char	ftfont.c	/^ftfont_has_char (Lisp_Object font, int c)$/;"	f	signature:(Lisp_Object font, int c)
ftfont_info	ftfont.c	/^struct ftfont_info$/;"	s	file:
ftfont_info::font	ftfont.c	/^  struct font font;$/;"	m	struct:ftfont_info	typeref:struct:ftfont_info::font	file:	access:public
ftfont_info::ft_size	ftfont.c	/^  FT_Size ft_size;$/;"	m	struct:ftfont_info	file:	access:public
ftfont_info::index	ftfont.c	/^  int index;$/;"	m	struct:ftfont_info	file:	access:public
ftfont_info::matrix	ftfont.c	/^  FT_Matrix matrix;$/;"	m	struct:ftfont_info	file:	access:public
ftfont_info::maybe_otf	ftfont.c	/^  bool maybe_otf;	\/* Flag to tell if this may be OTF or not.  *\/$/;"	m	struct:ftfont_info	file:	access:public
ftfont_info::otf	ftfont.c	/^  OTF *otf;$/;"	m	struct:ftfont_info	file:	access:public
ftfont_info_size	ftfont.c	/^size_t ftfont_info_size = sizeof (struct ftfont_info);$/;"	v
ftfont_list	font.h	/^extern Lisp_Object ftfont_list (struct frame *, Lisp_Object);$/;"	p	signature:(struct frame *, Lisp_Object)
ftfont_list	ftfont.c	/^ftfont_list (struct frame *f, Lisp_Object spec)$/;"	f	signature:(struct frame *f, Lisp_Object spec)
ftfont_list_family	font.h	/^extern Lisp_Object ftfont_list_family (struct frame *);$/;"	p	signature:(struct frame *)
ftfont_list_family	ftfont.c	/^ftfont_list_family (struct frame *f)$/;"	f	signature:(struct frame *f)
ftfont_lookup_cache	ftfont.c	/^ftfont_lookup_cache (Lisp_Object key, enum ftfont_cache_for cache_for)$/;"	f	file:	signature:(Lisp_Object key, enum ftfont_cache_for cache_for)
ftfont_lookup_cache	ftfont.c	/^static Lisp_Object ftfont_lookup_cache (Lisp_Object,$/;"	p	file:	signature:(Lisp_Object, enum ftfont_cache_for)
ftfont_match	font.h	/^extern Lisp_Object ftfont_match (struct frame *, Lisp_Object);$/;"	p	signature:(struct frame *, Lisp_Object)
ftfont_match	ftfont.c	/^ftfont_match (struct frame *f, Lisp_Object spec)$/;"	f	signature:(struct frame *f, Lisp_Object spec)
ftfont_non_booleans	ftfont.c	/^static const char *const ftfont_non_booleans [] = {$/;"	v	file:
ftfont_open	font.h	/^extern Lisp_Object ftfont_open (struct frame *, Lisp_Object, int);$/;"	p	signature:(struct frame *, Lisp_Object, int)
ftfont_open	ftfont.c	/^ftfont_open (struct frame *f, Lisp_Object entity, int pixel_size)$/;"	f	signature:(struct frame *f, Lisp_Object entity, int pixel_size)
ftfont_open2	ftfont.c	/^ftfont_open2 (struct frame *f,$/;"	f	signature:(struct frame *f, Lisp_Object entity, int pixel_size, Lisp_Object font_object)
ftfont_open2	ftfont.h	/^extern Lisp_Object ftfont_open2 (struct frame *f,$/;"	p	signature:(struct frame *f, Lisp_Object entity, int pixel_size, Lisp_Object font_object)
ftfont_otf_capability	font.h	/^extern Lisp_Object ftfont_otf_capability (struct font *);$/;"	p	signature:(struct font *)
ftfont_otf_capability	ftfont.c	/^ftfont_otf_capability (struct font *font)$/;"	f	signature:(struct font *font)
ftfont_otf_features	ftfont.c	/^ftfont_otf_features (OTF_GSUB_GPOS *gsub_gpos)$/;"	f	file:	signature:(OTF_GSUB_GPOS *gsub_gpos)
ftfont_pattern_entity	ftfont.c	/^ftfont_pattern_entity (FcPattern *p, Lisp_Object extra)$/;"	f	file:	signature:(FcPattern *p, Lisp_Object extra)
ftfont_resolve_generic_family	ftfont.c	/^ftfont_resolve_generic_family (Lisp_Object family, FcPattern *pattern)$/;"	f	file:	signature:(Lisp_Object family, FcPattern *pattern)
ftfont_shape	font.h	/^extern Lisp_Object ftfont_shape (Lisp_Object);$/;"	p	signature:(Lisp_Object)
ftfont_shape	ftfont.c	/^ftfont_shape (Lisp_Object lgstring)$/;"	f	signature:(Lisp_Object lgstring)
ftfont_shape_by_flt	ftfont.c	/^ftfont_shape_by_flt (Lisp_Object lgstring, struct font *font,$/;"	f	file:	signature:(Lisp_Object lgstring, struct font *font, FT_Face ft_face, OTF *otf, FT_Matrix *matrix)
ftfont_spec_pattern	ftfont.c	/^ftfont_spec_pattern (Lisp_Object spec, char *otlayout, struct OpenTypeSpec **otspec, const char **langname)$/;"	f	file:	signature:(Lisp_Object spec, char *otlayout, struct OpenTypeSpec **otspec, const char **langname)
ftfont_text_extents	font.h	/^extern void ftfont_text_extents (struct font *, unsigned *, int,$/;"	p	signature:(struct font *, unsigned *, int, struct font_metrics *)
ftfont_text_extents	ftfont.c	/^ftfont_text_extents (struct font *font, unsigned int *code,$/;"	f	signature:(struct font *font, unsigned int *code, int nglyphs, struct font_metrics *metrics)
ftfont_try_otf	ftfont.c	/^ftfont_try_otf (MFLTFont *font, MFLTOtfSpec *spec,$/;"	f	file:	signature:(MFLTFont *font, MFLTOtfSpec *spec, MFLTGlyphString *in, int from, int to)
ftfont_variation_glyphs	font.h	/^extern int ftfont_variation_glyphs (struct font *, int, unsigned[256]);$/;"	p	signature:(struct font *, int, unsigned[256])
ftfont_variation_glyphs	ftfont.c	/^ftfont_variation_glyphs (struct font *font, int c, unsigned variations[256])$/;"	f	signature:(struct font *font, int c, unsigned variations[256])
ftxfont_close	ftxfont.c	/^ftxfont_close (struct font *font)$/;"	f	file:	signature:(struct font *font)
ftxfont_draw	ftxfont.c	/^ftxfont_draw (struct glyph_string *s, int from, int to, int x, int y,$/;"	f	file:	signature:(struct glyph_string *s, int from, int to, int x, int y, bool with_background)
ftxfont_draw_background	ftxfont.c	/^ftxfont_draw_background (struct frame *f, struct font *font, GC gc, int x, int y,$/;"	f	file:	signature:(struct frame *f, struct font *font, GC gc, int x, int y, int width)
ftxfont_draw_bitmap	ftxfont.c	/^ftxfont_draw_bitmap (struct frame *f, GC gc_fore, GC *gcs, struct font *font,$/;"	f	file:	signature:(struct frame *f, GC gc_fore, GC *gcs, struct font *font, unsigned int code, int x, int y, XPoint *p, int size, int *n, bool flush)
ftxfont_driver	ftxfont.c	/^struct font_driver const ftxfont_driver =$/;"	v
ftxfont_end_for_frame	ftxfont.c	/^ftxfont_end_for_frame (struct frame *f)$/;"	f	file:	signature:(struct frame *f)
ftxfont_frame_data	ftxfont.c	/^struct ftxfont_frame_data$/;"	s	file:
ftxfont_frame_data::colors	ftxfont.c	/^  XColor colors[2];$/;"	m	struct:ftxfont_frame_data	file:	access:public
ftxfont_frame_data::gcs	ftxfont.c	/^  GC gcs[6];$/;"	m	struct:ftxfont_frame_data	file:	access:public
ftxfont_frame_data::next	ftxfont.c	/^  struct ftxfont_frame_data *next;$/;"	m	struct:ftxfont_frame_data	typeref:struct:ftxfont_frame_data::ftxfont_frame_data	file:	access:public
ftxfont_get_gcs	ftxfont.c	/^ftxfont_get_gcs (struct frame *f, unsigned long foreground, unsigned long background)$/;"	f	file:	signature:(struct frame *f, unsigned long foreground, unsigned long background)
ftxfont_list	ftxfont.c	/^ftxfont_list (struct frame *f, Lisp_Object spec)$/;"	f	file:	signature:(struct frame *f, Lisp_Object spec)
ftxfont_match	ftxfont.c	/^ftxfont_match (struct frame *f, Lisp_Object spec)$/;"	f	file:	signature:(struct frame *f, Lisp_Object spec)
ftxfont_open	ftxfont.c	/^ftxfont_open (struct frame *f, Lisp_Object entity, int pixel_size)$/;"	f	file:	signature:(struct frame *f, Lisp_Object entity, int pixel_size)
ft_face	ftfont.c	/^  FT_Face ft_face;$/;"	m	struct:ftfont_cache_data	file:	access:public
ft_face	ftfont.c	/^  FT_Face ft_face;$/;"	m	struct:MFLTFontFT	file:	access:public
ft_face_cache	ftfont.c	/^static Lisp_Object ft_face_cache;$/;"	v	file:
ft_library	ftfont.c	/^static FT_Library ft_library;$/;"	v	file:
ft_size	ftcrfont.c	/^  FT_Size ft_size;$/;"	m	struct:ftcrfont_info	file:	access:public
ft_size	ftfont.c	/^  FT_Size ft_size;$/;"	m	struct:ftfont_info	file:	access:public
ft_size	xftfont.c	/^  FT_Size ft_size;$/;"	m	struct:xftfont_info	file:	access:public
ft_size_draw	ftcrfont.c	/^  FT_Size ft_size_draw;$/;"	m	struct:ftcrfont_info	file:	access:public
full	dired.c	/^  (Lisp_Object directory, Lisp_Object full, Lisp_Object match, Lisp_Object nosort)$/;"	v
full	dired.c	/^  (Lisp_Object directory, Lisp_Object full, Lisp_Object match, Lisp_Object nosort, Lisp_Object id_format)$/;"	v
full	termcap.c	/^    ptrdiff_t full;$/;"	m	struct:termcap_buffer	file:	access:public
FULLSCREEN_BOTH	frame.h	/^  FULLSCREEN_BOTH      = 0x3, \/* Not a typo but means "width and height".  *\/$/;"	e	enum:fullscreen_type
FULLSCREEN_HEIGHT	frame.h	/^  FULLSCREEN_HEIGHT    = 0x2,$/;"	e	enum:fullscreen_type
fullscreen_hook	termhooks.h	/^  void (*fullscreen_hook) (struct frame *f);$/;"	m	struct:terminal	access:public
FULLSCREEN_MAXIMIZED	frame.h	/^  FULLSCREEN_MAXIMIZED = 0x4,$/;"	e	enum:fullscreen_type
FULLSCREEN_NONE	frame.h	/^  FULLSCREEN_NONE,$/;"	e	enum:fullscreen_type
fullscreen_type	frame.h	/^enum fullscreen_type$/;"	g
FULLSCREEN_WAIT	frame.h	/^  FULLSCREEN_WAIT      = 0x8$/;"	e	enum:fullscreen_type
FULLSCREEN_WIDTH	frame.h	/^  FULLSCREEN_WIDTH     = 0x1,$/;"	e	enum:fullscreen_type
full_width_p	dispextern.h	/^  bool_bf full_width_p : 1;$/;"	m	struct:glyph_row	access:public
func	lisp.h	/^      void (*func) (int);$/;"	m	struct:specbinding::__anon31	access:public
func	lisp.h	/^      void (*func) (Lisp_Object);$/;"	m	struct:specbinding::__anon29	access:public
func	lisp.h	/^      void (*func) (void *);$/;"	m	struct:specbinding::__anon30	access:public
func	lisp.h	/^      void (*func) (void);$/;"	m	struct:specbinding::__anon32	access:public
func	process.c	/^  fd_callback func;$/;"	m	struct:fd_callback_data	file:	access:public
func	thread.c	/^  select_func *func;$/;"	m	struct:select_args	file:	access:public
funcall_lambda	eval.c	/^funcall_lambda (Lisp_Object fun, ptrdiff_t nargs,$/;"	f	file:	signature:(Lisp_Object fun, ptrdiff_t nargs, register Lisp_Object *arg_vector)
funcall_lambda	eval.c	/^static Lisp_Object funcall_lambda (Lisp_Object, ptrdiff_t, Lisp_Object *);$/;"	p	file:	signature:(Lisp_Object, ptrdiff_t, Lisp_Object *)
funcall_module	emacs-module.c	/^funcall_module (Lisp_Object function, ptrdiff_t nargs, Lisp_Object *arglist)$/;"	f	signature:(Lisp_Object function, ptrdiff_t nargs, Lisp_Object *arglist)
funcall_module	lisp.h	/^extern Lisp_Object funcall_module (Lisp_Object, ptrdiff_t, Lisp_Object *);$/;"	p	signature:(Lisp_Object, ptrdiff_t, Lisp_Object *)
funcall_nil	eval.c	/^funcall_nil (ptrdiff_t nargs, Lisp_Object *args)$/;"	f	file:	signature:(ptrdiff_t nargs, Lisp_Object *args)
funcall_not	eval.c	/^funcall_not (ptrdiff_t nargs, Lisp_Object *args)$/;"	f	file:	signature:(ptrdiff_t nargs, Lisp_Object *args)
funcall_subr	eval.c	/^funcall_subr (struct Lisp_Subr *subr, ptrdiff_t numargs, Lisp_Object *args)$/;"	f	signature:(struct Lisp_Subr *subr, ptrdiff_t numargs, Lisp_Object *args)
funcall_subr	lisp.h	/^extern Lisp_Object funcall_subr (struct Lisp_Subr *subr, ptrdiff_t numargs, Lisp_Object *arg_vector);$/;"	p	signature:(struct Lisp_Subr *subr, ptrdiff_t numargs, Lisp_Object *arg_vector)
funcpointer	lisp.h	/^      voidfuncptr funcpointer;$/;"	m	union:Lisp_Save_Value::__anon26	access:public
function	callint.c	/^  (Lisp_Object function, Lisp_Object record_flag, Lisp_Object keys)$/;"	v
function	charset.c	/^  (Lisp_Object function, Lisp_Object charset, Lisp_Object arg, Lisp_Object from_code, Lisp_Object to_code)$/;"	v
function	chartab.c	/^  (Lisp_Object function, Lisp_Object char_table)$/;"	v
function	doc.c	/^  (Lisp_Object function, Lisp_Object raw)$/;"	v
function	eval.c	/^     (Lisp_Object function, Lisp_Object base)$/;"	v
function	eval.c	/^     (Lisp_Object function, Lisp_Object nframes, Lisp_Object base)$/;"	v
function	eval.c	/^  (Lisp_Object function, Lisp_Object file, Lisp_Object docstring, Lisp_Object interactive, Lisp_Object type)$/;"	v
function	eval.c	/^  (Lisp_Object function, Lisp_Object for_call_interactively)$/;"	v
function	fns.c	/^     (Lisp_Object function, Lisp_Object sequence)$/;"	v
function	fns.c	/^  (Lisp_Object function, Lisp_Object sequence)$/;"	v
function	fns.c	/^  (Lisp_Object function, Lisp_Object sequence, Lisp_Object separator)$/;"	v
function	fns.c	/^  (Lisp_Object function, Lisp_Object table)$/;"	v
function	keymap.c	/^  (Lisp_Object function, Lisp_Object keymap)$/;"	v
function	keymap.c	/^  (Lisp_Object function, Lisp_Object keymap, Lisp_Object sort_first)$/;"	v
function	lisp.h	/^      Lisp_Object function;$/;"	m	struct:specbinding::__anon34	access:public
function	lisp.h	/^    Lisp_Object function;$/;"	m	struct:Lisp_Finalizer	access:public
function	lisp.h	/^    } function;$/;"	m	struct:Lisp_Subr	typeref:union:Lisp_Subr::__anon22	access:public
function	lisp.h	/^  Lisp_Object function;$/;"	m	struct:Lisp_Symbol	access:public
function	lread.c	/^  (Lisp_Object function, Lisp_Object obarray)$/;"	v
function	thread.c	/^  (Lisp_Object function, Lisp_Object name)$/;"	v
function	thread.h	/^  Lisp_Object function;$/;"	m	struct:thread_state	access:public
FUNCTIONP	eval.c	/^FUNCTIONP (Lisp_Object object)$/;"	f	signature:(Lisp_Object object)
FUNCTIONP	lisp.h	/^extern bool FUNCTIONP (Lisp_Object);$/;"	p	signature:(Lisp_Object)
functions	xfns.c	/^    unsigned long functions;$/;"	m	struct:__anon39	file:	access:public
FUNCTION_KEY_OFFSET	keyboard.c	4688;"	d	file:
FUNCTION_KEY_OFFSET	keyboard.c	4983;"	d	file:
func_key_syms	keyboard.c	/^static Lisp_Object func_key_syms;$/;"	v	file:
fundef	eval.c	/^  (Lisp_Object fundef, Lisp_Object funname, Lisp_Object macro_only)$/;"	v
funhook	w32fns.c	/^funhook (int code, WPARAM w, LPARAM l)$/;"	f	file:	signature:(int code, WPARAM w, LPARAM l)
funname	eval.c	/^  (Lisp_Object fundef, Lisp_Object funname, Lisp_Object macro_only)$/;"	v
fwd	data.c	/^    union Lisp_Fwd *fwd;$/;"	m	union:Lisp_Val_Fwd	typeref:union:Lisp_Val_Fwd::Lisp_Fwd	file:	access:public
fwd	lisp.h	/^    union Lisp_Fwd *fwd;	\/* Should never be (Buffer|Kboard)_Objfwd.  *\/$/;"	m	struct:Lisp_Buffer_Local_Value	typeref:union:Lisp_Buffer_Local_Value::Lisp_Fwd	access:public
fwd	lisp.h	/^    union Lisp_Fwd *fwd;$/;"	m	union:Lisp_Symbol::__anon18	typeref:union:Lisp_Symbol::__anon18::Lisp_Fwd	access:public
fwrite_unlocked	sysstdio.h	62;"	d
f_attempt_orderly_shutdown_on_fatal_signal	globals.h	/^  bool f_attempt_orderly_shutdown_on_fatal_signal;$/;"	m	struct:emacs_globals	access:public
f_attempt_stack_overflow_recovery	globals.h	/^  bool f_attempt_stack_overflow_recovery;$/;"	m	struct:emacs_globals	access:public
f_automatic_hscrolling	globals.h	/^  Lisp_Object f_automatic_hscrolling;$/;"	m	struct:emacs_globals	access:public
f_auto_raise_tool_bar_buttons_p	globals.h	/^  bool f_auto_raise_tool_bar_buttons_p;$/;"	m	struct:emacs_globals	access:public
f_auto_save_interval	globals.h	/^  EMACS_INT f_auto_save_interval;$/;"	m	struct:emacs_globals	access:public
f_auto_window_vscroll_p	globals.h	/^  bool f_auto_window_vscroll_p;$/;"	m	struct:emacs_globals	access:public
f_baud_rate	globals.h	/^  EMACS_INT f_baud_rate;$/;"	m	struct:emacs_globals	access:public
f_byte_metering_on	globals.h	/^  bool f_byte_metering_on;$/;"	m	struct:emacs_globals	access:public
f_cannot_suspend	globals.h	/^  bool f_cannot_suspend;$/;"	m	struct:emacs_globals	access:public
f_coding_system_require_warning	globals.h	/^  bool f_coding_system_require_warning;$/;"	m	struct:emacs_globals	access:public
f_completion_ignore_case	globals.h	/^  bool f_completion_ignore_case;$/;"	m	struct:emacs_globals	access:public
f_cons_cells_consed	globals.h	/^  EMACS_INT f_cons_cells_consed;$/;"	m	struct:emacs_globals	access:public
f_create_lockfiles	globals.h	/^  bool f_create_lockfiles;$/;"	m	struct:emacs_globals	access:public
f_cross_disabled_images	globals.h	/^  bool f_cross_disabled_images;$/;"	m	struct:emacs_globals	access:public
f_current_buffer	window.c	/^    Lisp_Object f_current_buffer;$/;"	m	struct:save_window_data	file:	access:public
f_cursor_in_echo_area	globals.h	/^  bool f_cursor_in_echo_area;$/;"	m	struct:emacs_globals	access:public
f_debugger_may_continue	globals.h	/^  bool f_debugger_may_continue;$/;"	m	struct:emacs_globals	access:public
f_debugger_stack_frame_as_list	globals.h	/^  bool f_debugger_stack_frame_as_list;$/;"	m	struct:emacs_globals	access:public
f_debug_end_pos	globals.h	/^  EMACS_INT f_debug_end_pos;$/;"	m	struct:emacs_globals	access:public
f_debug_on_next_call	globals.h	/^  bool f_debug_on_next_call;$/;"	m	struct:emacs_globals	access:public
f_debug_on_quit	globals.h	/^  bool f_debug_on_quit;$/;"	m	struct:emacs_globals	access:public
f_delete_by_moving_to_trash	globals.h	/^  bool f_delete_by_moving_to_trash;$/;"	m	struct:emacs_globals	access:public
f_delete_exited_processes	globals.h	/^  bool f_delete_exited_processes;$/;"	m	struct:emacs_globals	access:public
f_disable_ascii_optimization	globals.h	/^  bool f_disable_ascii_optimization;$/;"	m	struct:emacs_globals	access:public
f_display_hourglass_p	globals.h	/^  bool f_display_hourglass_p;$/;"	m	struct:emacs_globals	access:public
f_display_line_numbers_widen	globals.h	/^  bool f_display_line_numbers_widen;$/;"	m	struct:emacs_globals	access:public
f_display_raw_bytes_as_hex	globals.h	/^  bool f_display_raw_bytes_as_hex;$/;"	m	struct:emacs_globals	access:public
f_double_click_fuzz	globals.h	/^  EMACS_INT f_double_click_fuzz;$/;"	m	struct:emacs_globals	access:public
f_do_mouse_tracking	globals.h	/^  Lisp_Object f_do_mouse_tracking;$/;"	m	struct:emacs_globals	access:public
f_emacs_scroll_step	globals.h	/^  EMACS_INT f_emacs_scroll_step;$/;"	m	struct:emacs_globals	access:public
f_enable_recursive_minibuffers	globals.h	/^  bool f_enable_recursive_minibuffers;$/;"	m	struct:emacs_globals	access:public
f_eol_mnemonic_dos	globals.h	/^  Lisp_Object f_eol_mnemonic_dos;$/;"	m	struct:emacs_globals	access:public
f_eol_mnemonic_mac	globals.h	/^  Lisp_Object f_eol_mnemonic_mac;$/;"	m	struct:emacs_globals	access:public
f_eol_mnemonic_undecided	globals.h	/^  Lisp_Object f_eol_mnemonic_undecided;$/;"	m	struct:emacs_globals	access:public
f_eol_mnemonic_unix	globals.h	/^  Lisp_Object f_eol_mnemonic_unix;$/;"	m	struct:emacs_globals	access:public
f_executing_kbd_macro_index	globals.h	/^  EMACS_INT f_executing_kbd_macro_index;$/;"	m	struct:emacs_globals	access:public
f_extra_keyboard_modifiers	globals.h	/^  EMACS_INT f_extra_keyboard_modifiers;$/;"	m	struct:emacs_globals	access:public
f_floats_consed	globals.h	/^  EMACS_INT f_floats_consed;$/;"	m	struct:emacs_globals	access:public
f_focus_follows_mouse	globals.h	/^  Lisp_Object f_focus_follows_mouse;$/;"	m	struct:emacs_globals	access:public
f_force_load_messages	globals.h	/^  bool f_force_load_messages;$/;"	m	struct:emacs_globals	access:public
f_frame_inhibit_implied_resize	globals.h	/^  Lisp_Object f_frame_inhibit_implied_resize;$/;"	m	struct:emacs_globals	access:public
f_frame_resize_pixelwise	globals.h	/^  bool f_frame_resize_pixelwise;$/;"	m	struct:emacs_globals	access:public
f_frame_size_history	globals.h	/^  Lisp_Object f_frame_size_history;$/;"	m	struct:emacs_globals	access:public
f_garbage_collection_messages	globals.h	/^  bool f_garbage_collection_messages;$/;"	m	struct:emacs_globals	access:public
f_gcs_done	globals.h	/^  EMACS_INT f_gcs_done;$/;"	m	struct:emacs_globals	access:public
f_gc_cons_threshold	globals.h	/^  EMACS_INT f_gc_cons_threshold;$/;"	m	struct:emacs_globals	access:public
f_global_gnutls_log_level	globals.h	/^  EMACS_INT f_global_gnutls_log_level;$/;"	m	struct:emacs_globals	access:public
f_hdr	unexaix.c	/^static struct filehdr f_hdr;		\/* File header *\/$/;"	v	typeref:struct:filehdr	file:
f_highlight_nonselected_windows	globals.h	/^  bool f_highlight_nonselected_windows;$/;"	m	struct:emacs_globals	access:public
f_history_delete_duplicates	globals.h	/^  bool f_history_delete_duplicates;$/;"	m	struct:emacs_globals	access:public
f_hscroll_margin	globals.h	/^  EMACS_INT f_hscroll_margin;$/;"	m	struct:emacs_globals	access:public
f_imagemagick_render_type	globals.h	/^  EMACS_INT f_imagemagick_render_type;$/;"	m	struct:emacs_globals	access:public
f_indent_tabs_mode	globals.h	/^  bool f_indent_tabs_mode;$/;"	m	struct:emacs_globals	access:public
f_inherit_process_coding_system	globals.h	/^  bool f_inherit_process_coding_system;$/;"	m	struct:emacs_globals	access:public
f_inhibit_bidi_mirroring	globals.h	/^  bool f_inhibit_bidi_mirroring;$/;"	m	struct:emacs_globals	access:public
f_inhibit_compacting_font_caches	globals.h	/^  bool f_inhibit_compacting_font_caches;$/;"	m	struct:emacs_globals	access:public
f_inhibit_eol_conversion	globals.h	/^  bool f_inhibit_eol_conversion;$/;"	m	struct:emacs_globals	access:public
f_inhibit_eval_during_redisplay	globals.h	/^  bool f_inhibit_eval_during_redisplay;$/;"	m	struct:emacs_globals	access:public
f_inhibit_free_realized_faces	globals.h	/^  bool f_inhibit_free_realized_faces;$/;"	m	struct:emacs_globals	access:public
f_inhibit_iso_escape_detection	globals.h	/^  bool f_inhibit_iso_escape_detection;$/;"	m	struct:emacs_globals	access:public
f_inhibit_load_charset_map	globals.h	/^  bool f_inhibit_load_charset_map;$/;"	m	struct:emacs_globals	access:public
f_inhibit_menubar_update	globals.h	/^  bool f_inhibit_menubar_update;$/;"	m	struct:emacs_globals	access:public
f_inhibit_message	globals.h	/^  bool f_inhibit_message;$/;"	m	struct:emacs_globals	access:public
f_inhibit_modification_hooks	globals.h	/^  bool f_inhibit_modification_hooks;$/;"	m	struct:emacs_globals	access:public
f_inhibit_null_byte_detection	globals.h	/^  bool f_inhibit_null_byte_detection;$/;"	m	struct:emacs_globals	access:public
f_inhibit_try_cursor_movement	globals.h	/^  bool f_inhibit_try_cursor_movement;$/;"	m	struct:emacs_globals	access:public
f_inhibit_try_window_id	globals.h	/^  bool f_inhibit_try_window_id;$/;"	m	struct:emacs_globals	access:public
f_inhibit_try_window_reusing	globals.h	/^  bool f_inhibit_try_window_reusing;$/;"	m	struct:emacs_globals	access:public
f_inhibit_x_resources	globals.h	/^  bool f_inhibit_x_resources;$/;"	m	struct:emacs_globals	access:public
f_intervals_consed	globals.h	/^  EMACS_INT f_intervals_consed;$/;"	m	struct:emacs_globals	access:public
f_inverse_video	globals.h	/^  bool f_inverse_video;$/;"	m	struct:emacs_globals	access:public
f_last_command_event	globals.h	/^  Lisp_Object f_last_command_event;$/;"	m	struct:emacs_globals	access:public
f_last_input_event	globals.h	/^  Lisp_Object f_last_input_event;$/;"	m	struct:emacs_globals	access:public
f_last_nonmenu_event	globals.h	/^  Lisp_Object f_last_nonmenu_event;$/;"	m	struct:emacs_globals	access:public
f_line_number_display_limit_width	globals.h	/^  EMACS_INT f_line_number_display_limit_width;$/;"	m	struct:emacs_globals	access:public
f_lisp_eval_depth	lisp.h	/^  EMACS_INT f_lisp_eval_depth;$/;"	m	struct:handler	access:public
f_load_convert_to_unibyte	globals.h	/^  bool f_load_convert_to_unibyte;$/;"	m	struct:emacs_globals	access:public
f_load_dangerous_libraries	globals.h	/^  bool f_load_dangerous_libraries;$/;"	m	struct:emacs_globals	access:public
f_load_force_doc_strings	globals.h	/^  bool f_load_force_doc_strings;$/;"	m	struct:emacs_globals	access:public
f_load_in_progress	globals.h	/^  bool f_load_in_progress;$/;"	m	struct:emacs_globals	access:public
f_load_prefer_newer	globals.h	/^  bool f_load_prefer_newer;$/;"	m	struct:emacs_globals	access:public
f_make_cursor_line_fully_visible_p	globals.h	/^  bool f_make_cursor_line_fully_visible_p;$/;"	m	struct:emacs_globals	access:public
f_max_lisp_eval_depth	globals.h	/^  EMACS_INT f_max_lisp_eval_depth;$/;"	m	struct:emacs_globals	access:public
f_max_specpdl_size	globals.h	/^  EMACS_INT f_max_specpdl_size;$/;"	m	struct:emacs_globals	access:public
f_menu_prompting	globals.h	/^  bool f_menu_prompting;$/;"	m	struct:emacs_globals	access:public
f_menu_prompt_more_char	globals.h	/^  Lisp_Object f_menu_prompt_more_char;$/;"	m	struct:emacs_globals	access:public
f_message_truncate_lines	globals.h	/^  bool f_message_truncate_lines;$/;"	m	struct:emacs_globals	access:public
f_meta_prefix_char	globals.h	/^  Lisp_Object f_meta_prefix_char;$/;"	m	struct:emacs_globals	access:public
f_minibuffer_allow_text_properties	globals.h	/^  bool f_minibuffer_allow_text_properties;$/;"	m	struct:emacs_globals	access:public
f_minibuffer_auto_raise	globals.h	/^  bool f_minibuffer_auto_raise;$/;"	m	struct:emacs_globals	access:public
f_misc_objects_consed	globals.h	/^  EMACS_INT f_misc_objects_consed;$/;"	m	struct:emacs_globals	access:public
f_mode_line_in_non_selected_windows	globals.h	/^  bool f_mode_line_in_non_selected_windows;$/;"	m	struct:emacs_globals	access:public
f_multibyte_syntax_as_symbol	globals.h	/^  bool f_multibyte_syntax_as_symbol;$/;"	m	struct:emacs_globals	access:public
f_multiple_frames	globals.h	/^  bool f_multiple_frames;$/;"	m	struct:emacs_globals	access:public
f_next_screen_context_lines	globals.h	/^  EMACS_INT f_next_screen_context_lines;$/;"	m	struct:emacs_globals	access:public
f_noninteractive1	globals.h	/^  bool f_noninteractive1;$/;"	m	struct:emacs_globals	access:public
f_no_redraw_on_reenter	globals.h	/^  bool f_no_redraw_on_reenter;$/;"	m	struct:emacs_globals	access:public
f_num_input_keys	globals.h	/^  EMACS_INT f_num_input_keys;$/;"	m	struct:emacs_globals	access:public
f_num_nonmacro_input_events	globals.h	/^  EMACS_INT f_num_nonmacro_input_events;$/;"	m	struct:emacs_globals	access:public
f_ohdr	unexaix.c	/^static struct aouthdr f_ohdr;		\/* Optional file header (a.out) *\/$/;"	v	typeref:struct:aouthdr	file:
f_open_paren_in_column_0_is_defun_start	globals.h	/^  bool f_open_paren_in_column_0_is_defun_start;$/;"	m	struct:emacs_globals	access:public
f_overline_margin	globals.h	/^  EMACS_INT f_overline_margin;$/;"	m	struct:emacs_globals	access:public
f_parse_sexp_ignore_comments	globals.h	/^  bool f_parse_sexp_ignore_comments;$/;"	m	struct:emacs_globals	access:public
f_parse_sexp_lookup_properties	globals.h	/^  bool f_parse_sexp_lookup_properties;$/;"	m	struct:emacs_globals	access:public
f_polling_period	globals.h	/^  EMACS_INT f_polling_period;$/;"	m	struct:emacs_globals	access:public
f_print_escape_control_characters	globals.h	/^  bool f_print_escape_control_characters;$/;"	m	struct:emacs_globals	access:public
f_print_escape_multibyte	globals.h	/^  bool f_print_escape_multibyte;$/;"	m	struct:emacs_globals	access:public
f_print_escape_newlines	globals.h	/^  bool f_print_escape_newlines;$/;"	m	struct:emacs_globals	access:public
f_print_escape_nonascii	globals.h	/^  bool f_print_escape_nonascii;$/;"	m	struct:emacs_globals	access:public
f_print_quoted	globals.h	/^  bool f_print_quoted;$/;"	m	struct:emacs_globals	access:public
f_profiler_log_size	globals.h	/^  EMACS_INT f_profiler_log_size;$/;"	m	struct:emacs_globals	access:public
f_profiler_max_stack_depth	globals.h	/^  EMACS_INT f_profiler_max_stack_depth;$/;"	m	struct:emacs_globals	access:public
f_pure_bytes_used	globals.h	/^  EMACS_INT f_pure_bytes_used;$/;"	m	struct:emacs_globals	access:public
f_read_buffer_completion_ignore_case	globals.h	/^  bool f_read_buffer_completion_ignore_case;$/;"	m	struct:emacs_globals	access:public
f_redisplay_dont_pause	globals.h	/^  bool f_redisplay_dont_pause;$/;"	m	struct:emacs_globals	access:public
f_redisplay__inhibit_bidi	globals.h	/^  bool f_redisplay__inhibit_bidi;$/;"	m	struct:emacs_globals	access:public
f_scroll_bar_adjust_thumb_portion_p	globals.h	/^  bool f_scroll_bar_adjust_thumb_portion_p;$/;"	m	struct:emacs_globals	access:public
f_scroll_conservatively	globals.h	/^  EMACS_INT f_scroll_conservatively;$/;"	m	struct:emacs_globals	access:public
f_scroll_margin	globals.h	/^  EMACS_INT f_scroll_margin;$/;"	m	struct:emacs_globals	access:public
f_strings_consed	globals.h	/^  EMACS_INT f_strings_consed;$/;"	m	struct:emacs_globals	access:public
f_string_chars_consed	globals.h	/^  EMACS_INT f_string_chars_consed;$/;"	m	struct:emacs_globals	access:public
f_symbols_consed	globals.h	/^  EMACS_INT f_symbols_consed;$/;"	m	struct:emacs_globals	access:public
f_syntax_propertize__done	globals.h	/^  EMACS_INT f_syntax_propertize__done;$/;"	m	struct:emacs_globals	access:public
f_system_uses_terminfo	globals.h	/^  bool f_system_uses_terminfo;$/;"	m	struct:emacs_globals	access:public
f_text_quoting_flag	globals.h	/^  bool f_text_quoting_flag;$/;"	m	struct:emacs_globals	access:public
f_tooltip_reuse_hidden_frame	globals.h	/^  bool f_tooltip_reuse_hidden_frame;$/;"	m	struct:emacs_globals	access:public
f_tool_bar_button_relief	globals.h	/^  EMACS_INT f_tool_bar_button_relief;$/;"	m	struct:emacs_globals	access:public
f_tool_bar_max_label_size	globals.h	/^  EMACS_INT f_tool_bar_max_label_size;$/;"	m	struct:emacs_globals	access:public
f_underline_minimum_offset	globals.h	/^  EMACS_INT f_underline_minimum_offset;$/;"	m	struct:emacs_globals	access:public
f_undo_inhibit_record_point	globals.h	/^  bool f_undo_inhibit_record_point;$/;"	m	struct:emacs_globals	access:public
f_undo_limit	globals.h	/^  EMACS_INT f_undo_limit;$/;"	m	struct:emacs_globals	access:public
f_undo_strong_limit	globals.h	/^  EMACS_INT f_undo_strong_limit;$/;"	m	struct:emacs_globals	access:public
f_unibyte_display_via_language_environment	globals.h	/^  bool f_unibyte_display_via_language_environment;$/;"	m	struct:emacs_globals	access:public
f_use_default_font_for_symbols	globals.h	/^  bool f_use_default_font_for_symbols;$/;"	m	struct:emacs_globals	access:public
f_use_dialog_box	globals.h	/^  bool f_use_dialog_box;$/;"	m	struct:emacs_globals	access:public
f_use_file_dialog	globals.h	/^  bool f_use_file_dialog;$/;"	m	struct:emacs_globals	access:public
f_use_system_font	globals.h	/^  bool f_use_system_font;$/;"	m	struct:emacs_globals	access:public
f_Vafter_change_functions	globals.h	/^  Lisp_Object f_Vafter_change_functions;$/;"	m	struct:emacs_globals	access:public
f_Vafter_init_time	globals.h	/^  Lisp_Object f_Vafter_init_time;$/;"	m	struct:emacs_globals	access:public
f_Vafter_insert_file_functions	globals.h	/^  Lisp_Object f_Vafter_insert_file_functions;$/;"	m	struct:emacs_globals	access:public
f_Vafter_load_alist	globals.h	/^  Lisp_Object f_Vafter_load_alist;$/;"	m	struct:emacs_globals	access:public
f_Valternate_fontname_alist	globals.h	/^  Lisp_Object f_Valternate_fontname_alist;$/;"	m	struct:emacs_globals	access:public
f_Vauto_composition_function	globals.h	/^  Lisp_Object f_Vauto_composition_function;$/;"	m	struct:emacs_globals	access:public
f_Vauto_composition_mode	globals.h	/^  Lisp_Object f_Vauto_composition_mode;$/;"	m	struct:emacs_globals	access:public
f_Vauto_fill_chars	globals.h	/^  Lisp_Object f_Vauto_fill_chars;$/;"	m	struct:emacs_globals	access:public
f_Vauto_resize_tool_bars	globals.h	/^  Lisp_Object f_Vauto_resize_tool_bars;$/;"	m	struct:emacs_globals	access:public
f_Vauto_save_include_big_deletions	globals.h	/^  Lisp_Object f_Vauto_save_include_big_deletions;$/;"	m	struct:emacs_globals	access:public
f_Vauto_save_list_file_name	globals.h	/^  Lisp_Object f_Vauto_save_list_file_name;$/;"	m	struct:emacs_globals	access:public
f_Vauto_save_timeout	globals.h	/^  Lisp_Object f_Vauto_save_timeout;$/;"	m	struct:emacs_globals	access:public
f_Vauto_save_visited_file_name	globals.h	/^  Lisp_Object f_Vauto_save_visited_file_name;$/;"	m	struct:emacs_globals	access:public
f_Vbefore_change_functions	globals.h	/^  Lisp_Object f_Vbefore_change_functions;$/;"	m	struct:emacs_globals	access:public
f_Vbefore_init_time	globals.h	/^  Lisp_Object f_Vbefore_init_time;$/;"	m	struct:emacs_globals	access:public
f_Vblink_cursor_alist	globals.h	/^  Lisp_Object f_Vblink_cursor_alist;$/;"	m	struct:emacs_globals	access:public
f_Vbuffer_access_fontified_property	globals.h	/^  Lisp_Object f_Vbuffer_access_fontified_property;$/;"	m	struct:emacs_globals	access:public
f_Vbuffer_access_fontify_functions	globals.h	/^  Lisp_Object f_Vbuffer_access_fontify_functions;$/;"	m	struct:emacs_globals	access:public
f_Vbuffer_list_update_hook	globals.h	/^  Lisp_Object f_Vbuffer_list_update_hook;$/;"	m	struct:emacs_globals	access:public
f_Vbuild_files	globals.h	/^  Lisp_Object f_Vbuild_files;$/;"	m	struct:emacs_globals	access:public
f_Vbytecomp_version_regexp	globals.h	/^  Lisp_Object f_Vbytecomp_version_regexp;$/;"	m	struct:emacs_globals	access:public
f_Vbyte_boolean_vars	globals.h	/^  Lisp_Object f_Vbyte_boolean_vars;$/;"	m	struct:emacs_globals	access:public
f_Vbyte_code_meter	globals.h	/^  Lisp_Object f_Vbyte_code_meter;$/;"	m	struct:emacs_globals	access:public
f_Vcairo_version_string	globals.h	/^  Lisp_Object f_Vcairo_version_string;$/;"	m	struct:emacs_globals	access:public
f_Vchange_major_mode_hook	globals.h	/^  Lisp_Object f_Vchange_major_mode_hook;$/;"	m	struct:emacs_globals	access:public
f_Vcharset_list	globals.h	/^  Lisp_Object f_Vcharset_list;$/;"	m	struct:emacs_globals	access:public
f_Vcharset_map_path	globals.h	/^  Lisp_Object f_Vcharset_map_path;$/;"	m	struct:emacs_globals	access:public
f_Vcharset_revision_table	globals.h	/^  Lisp_Object f_Vcharset_revision_table;$/;"	m	struct:emacs_globals	access:public
f_Vchar_code_property_alist	globals.h	/^  Lisp_Object f_Vchar_code_property_alist;$/;"	m	struct:emacs_globals	access:public
f_Vchar_property_alias_alist	globals.h	/^  Lisp_Object f_Vchar_property_alias_alist;$/;"	m	struct:emacs_globals	access:public
f_Vchar_script_table	globals.h	/^  Lisp_Object f_Vchar_script_table;$/;"	m	struct:emacs_globals	access:public
f_Vchar_width_table	globals.h	/^  Lisp_Object f_Vchar_width_table;$/;"	m	struct:emacs_globals	access:public
f_Vcode_conversion_map_vector	globals.h	/^  Lisp_Object f_Vcode_conversion_map_vector;$/;"	m	struct:emacs_globals	access:public
f_Vcoding_category_list	globals.h	/^  Lisp_Object f_Vcoding_category_list;$/;"	m	struct:emacs_globals	access:public
f_Vcoding_system_alist	globals.h	/^  Lisp_Object f_Vcoding_system_alist;$/;"	m	struct:emacs_globals	access:public
f_Vcoding_system_for_read	globals.h	/^  Lisp_Object f_Vcoding_system_for_read;$/;"	m	struct:emacs_globals	access:public
f_Vcoding_system_for_write	globals.h	/^  Lisp_Object f_Vcoding_system_for_write;$/;"	m	struct:emacs_globals	access:public
f_Vcoding_system_list	globals.h	/^  Lisp_Object f_Vcoding_system_list;$/;"	m	struct:emacs_globals	access:public
f_Vcombine_after_change_calls	globals.h	/^  Lisp_Object f_Vcombine_after_change_calls;$/;"	m	struct:emacs_globals	access:public
f_Vcommand_debug_status	globals.h	/^  Lisp_Object f_Vcommand_debug_status;$/;"	m	struct:emacs_globals	access:public
f_Vcommand_error_function	globals.h	/^  Lisp_Object f_Vcommand_error_function;$/;"	m	struct:emacs_globals	access:public
f_Vcommand_history	globals.h	/^  Lisp_Object f_Vcommand_history;$/;"	m	struct:emacs_globals	access:public
f_Vcommand_line_args	globals.h	/^  Lisp_Object f_Vcommand_line_args;$/;"	m	struct:emacs_globals	access:public
f_Vcomment_end_can_be_escaped	globals.h	/^  bool f_Vcomment_end_can_be_escaped;$/;"	m	struct:emacs_globals	access:public
f_Vcompletion_ignored_extensions	globals.h	/^  Lisp_Object f_Vcompletion_ignored_extensions;$/;"	m	struct:emacs_globals	access:public
f_Vcompletion_regexp_list	globals.h	/^  Lisp_Object f_Vcompletion_regexp_list;$/;"	m	struct:emacs_globals	access:public
f_Vcompose_chars_after_function	globals.h	/^  Lisp_Object f_Vcompose_chars_after_function;$/;"	m	struct:emacs_globals	access:public
f_Vcomposition_function_table	globals.h	/^  Lisp_Object f_Vcomposition_function_table;$/;"	m	struct:emacs_globals	access:public
f_Vconfigure_info_directory	globals.h	/^  Lisp_Object f_Vconfigure_info_directory;$/;"	m	struct:emacs_globals	access:public
f_Vcurrent_iso639_language	globals.h	/^  Lisp_Object f_Vcurrent_iso639_language;$/;"	m	struct:emacs_globals	access:public
f_Vcurrent_load_list	globals.h	/^  Lisp_Object f_Vcurrent_load_list;$/;"	m	struct:emacs_globals	access:public
f_Vcurrent_prefix_arg	globals.h	/^  Lisp_Object f_Vcurrent_prefix_arg;$/;"	m	struct:emacs_globals	access:public
f_Vdata_directory	globals.h	/^  Lisp_Object f_Vdata_directory;$/;"	m	struct:emacs_globals	access:public
f_Vdbus_compiled_version	globals.h	/^  Lisp_Object f_Vdbus_compiled_version;$/;"	m	struct:emacs_globals	access:public
f_Vdbus_debug	globals.h	/^  Lisp_Object f_Vdbus_debug;$/;"	m	struct:emacs_globals	access:public
f_Vdbus_message_type_error	globals.h	/^  Lisp_Object f_Vdbus_message_type_error;$/;"	m	struct:emacs_globals	access:public
f_Vdbus_message_type_invalid	globals.h	/^  Lisp_Object f_Vdbus_message_type_invalid;$/;"	m	struct:emacs_globals	access:public
f_Vdbus_message_type_method_call	globals.h	/^  Lisp_Object f_Vdbus_message_type_method_call;$/;"	m	struct:emacs_globals	access:public
f_Vdbus_message_type_method_return	globals.h	/^  Lisp_Object f_Vdbus_message_type_method_return;$/;"	m	struct:emacs_globals	access:public
f_Vdbus_message_type_signal	globals.h	/^  Lisp_Object f_Vdbus_message_type_signal;$/;"	m	struct:emacs_globals	access:public
f_Vdbus_registered_objects_table	globals.h	/^  Lisp_Object f_Vdbus_registered_objects_table;$/;"	m	struct:emacs_globals	access:public
f_Vdbus_runtime_version	globals.h	/^  Lisp_Object f_Vdbus_runtime_version;$/;"	m	struct:emacs_globals	access:public
f_Vdeactivate_mark	globals.h	/^  Lisp_Object f_Vdeactivate_mark;$/;"	m	struct:emacs_globals	access:public
f_Vdebugger	globals.h	/^  Lisp_Object f_Vdebugger;$/;"	m	struct:emacs_globals	access:public
f_Vdebug_ignored_errors	globals.h	/^  Lisp_Object f_Vdebug_ignored_errors;$/;"	m	struct:emacs_globals	access:public
f_Vdebug_on_error	globals.h	/^  Lisp_Object f_Vdebug_on_error;$/;"	m	struct:emacs_globals	access:public
f_Vdebug_on_event	globals.h	/^  Lisp_Object f_Vdebug_on_event;$/;"	m	struct:emacs_globals	access:public
f_Vdebug_on_message	globals.h	/^  Lisp_Object f_Vdebug_on_message;$/;"	m	struct:emacs_globals	access:public
f_Vdebug_on_signal	globals.h	/^  Lisp_Object f_Vdebug_on_signal;$/;"	m	struct:emacs_globals	access:public
f_Vdefault_file_name_coding_system	globals.h	/^  Lisp_Object f_Vdefault_file_name_coding_system;$/;"	m	struct:emacs_globals	access:public
f_Vdefault_frame_alist	globals.h	/^  Lisp_Object f_Vdefault_frame_alist;$/;"	m	struct:emacs_globals	access:public
f_Vdefault_frame_scroll_bars	globals.h	/^  Lisp_Object f_Vdefault_frame_scroll_bars;$/;"	m	struct:emacs_globals	access:public
f_Vdefault_process_coding_system	globals.h	/^  Lisp_Object f_Vdefault_process_coding_system;$/;"	m	struct:emacs_globals	access:public
f_Vdefault_text_properties	globals.h	/^  Lisp_Object f_Vdefault_text_properties;$/;"	m	struct:emacs_globals	access:public
f_Vdeferred_action_function	globals.h	/^  Lisp_Object f_Vdeferred_action_function;$/;"	m	struct:emacs_globals	access:public
f_Vdeferred_action_list	globals.h	/^  Lisp_Object f_Vdeferred_action_list;$/;"	m	struct:emacs_globals	access:public
f_Vdefine_key_rebound_commands	globals.h	/^  Lisp_Object f_Vdefine_key_rebound_commands;$/;"	m	struct:emacs_globals	access:public
f_Vdelayed_warnings_list	globals.h	/^  Lisp_Object f_Vdelayed_warnings_list;$/;"	m	struct:emacs_globals	access:public
f_Vdelete_frame_functions	globals.h	/^  Lisp_Object f_Vdelete_frame_functions;$/;"	m	struct:emacs_globals	access:public
f_Vdelete_terminal_functions	globals.h	/^  Lisp_Object f_Vdelete_terminal_functions;$/;"	m	struct:emacs_globals	access:public
f_Vdisable_point_adjustment	globals.h	/^  Lisp_Object f_Vdisable_point_adjustment;$/;"	m	struct:emacs_globals	access:public
f_Vdisplay_line_numbers	globals.h	/^  Lisp_Object f_Vdisplay_line_numbers;$/;"	m	struct:emacs_globals	access:public
f_Vdisplay_line_numbers_current_absolute	globals.h	/^  Lisp_Object f_Vdisplay_line_numbers_current_absolute;$/;"	m	struct:emacs_globals	access:public
f_Vdisplay_line_numbers_width	globals.h	/^  Lisp_Object f_Vdisplay_line_numbers_width;$/;"	m	struct:emacs_globals	access:public
f_Vdisplay_pixels_per_inch	globals.h	/^  Lisp_Object f_Vdisplay_pixels_per_inch;$/;"	m	struct:emacs_globals	access:public
f_Vdoc_directory	globals.h	/^  Lisp_Object f_Vdoc_directory;$/;"	m	struct:emacs_globals	access:public
f_Vdoc_file_name	globals.h	/^  Lisp_Object f_Vdoc_file_name;$/;"	m	struct:emacs_globals	access:public
f_Vdouble_click_time	globals.h	/^  Lisp_Object f_Vdouble_click_time;$/;"	m	struct:emacs_globals	access:public
f_Vdynamic_library_alist	globals.h	/^  Lisp_Object f_Vdynamic_library_alist;$/;"	m	struct:emacs_globals	access:public
f_Vecho_keystrokes	globals.h	/^  Lisp_Object f_Vecho_keystrokes;$/;"	m	struct:emacs_globals	access:public
f_vector_cells_consed	globals.h	/^  EMACS_INT f_vector_cells_consed;$/;"	m	struct:emacs_globals	access:public
f_Vemacs_copyright	globals.h	/^  Lisp_Object f_Vemacs_copyright;$/;"	m	struct:emacs_globals	access:public
f_Vemacs_version	globals.h	/^  Lisp_Object f_Vemacs_version;$/;"	m	struct:emacs_globals	access:public
f_Vemulation_mode_map_alists	globals.h	/^  Lisp_Object f_Vemulation_mode_map_alists;$/;"	m	struct:emacs_globals	access:public
f_Venable_character_translation	globals.h	/^  Lisp_Object f_Venable_character_translation;$/;"	m	struct:emacs_globals	access:public
f_Venable_disabled_menus_and_buttons	globals.h	/^  Lisp_Object f_Venable_disabled_menus_and_buttons;$/;"	m	struct:emacs_globals	access:public
f_Veval_buffer_list	globals.h	/^  Lisp_Object f_Veval_buffer_list;$/;"	m	struct:emacs_globals	access:public
f_Vexecuting_kbd_macro	globals.h	/^  Lisp_Object f_Vexecuting_kbd_macro;$/;"	m	struct:emacs_globals	access:public
f_Vexec_directory	globals.h	/^  Lisp_Object f_Vexec_directory;$/;"	m	struct:emacs_globals	access:public
f_Vexec_path	globals.h	/^  Lisp_Object f_Vexec_path;$/;"	m	struct:emacs_globals	access:public
f_Vexec_suffixes	globals.h	/^  Lisp_Object f_Vexec_suffixes;$/;"	m	struct:emacs_globals	access:public
f_Vface_default_stipple	globals.h	/^  Lisp_Object f_Vface_default_stipple;$/;"	m	struct:emacs_globals	access:public
f_Vface_font_rescale_alist	globals.h	/^  Lisp_Object f_Vface_font_rescale_alist;$/;"	m	struct:emacs_globals	access:public
f_Vface_ignored_fonts	globals.h	/^  Lisp_Object f_Vface_ignored_fonts;$/;"	m	struct:emacs_globals	access:public
f_Vface_new_frame_defaults	globals.h	/^  Lisp_Object f_Vface_new_frame_defaults;$/;"	m	struct:emacs_globals	access:public
f_Vface_remapping_alist	globals.h	/^  Lisp_Object f_Vface_remapping_alist;$/;"	m	struct:emacs_globals	access:public
f_Vfast_but_imprecise_scrolling	globals.h	/^  bool f_Vfast_but_imprecise_scrolling;$/;"	m	struct:emacs_globals	access:public
f_Vfeatures	globals.h	/^  Lisp_Object f_Vfeatures;$/;"	m	struct:emacs_globals	access:public
f_Vfile_coding_system_alist	globals.h	/^  Lisp_Object f_Vfile_coding_system_alist;$/;"	m	struct:emacs_globals	access:public
f_Vfile_name_coding_system	globals.h	/^  Lisp_Object f_Vfile_name_coding_system;$/;"	m	struct:emacs_globals	access:public
f_Vfile_name_handler_alist	globals.h	/^  Lisp_Object f_Vfile_name_handler_alist;$/;"	m	struct:emacs_globals	access:public
f_Vfind_word_boundary_function_table	globals.h	/^  Lisp_Object f_Vfind_word_boundary_function_table;$/;"	m	struct:emacs_globals	access:public
f_Vfirst_change_hook	globals.h	/^  Lisp_Object f_Vfirst_change_hook;$/;"	m	struct:emacs_globals	access:public
f_Vfloat_output_format	globals.h	/^  Lisp_Object f_Vfloat_output_format;$/;"	m	struct:emacs_globals	access:public
f_Vfocus_in_hook	globals.h	/^  Lisp_Object f_Vfocus_in_hook;$/;"	m	struct:emacs_globals	access:public
f_Vfocus_out_hook	globals.h	/^  Lisp_Object f_Vfocus_out_hook;$/;"	m	struct:emacs_globals	access:public
f_Vfontification_functions	globals.h	/^  Lisp_Object f_Vfontification_functions;$/;"	m	struct:emacs_globals	access:public
f_Vfontset_alias_alist	globals.h	/^  Lisp_Object f_Vfontset_alias_alist;$/;"	m	struct:emacs_globals	access:public
f_Vfont_ccl_encoder_alist	globals.h	/^  Lisp_Object f_Vfont_ccl_encoder_alist;$/;"	m	struct:emacs_globals	access:public
f_Vfont_encoding_alist	globals.h	/^  Lisp_Object f_Vfont_encoding_alist;$/;"	m	struct:emacs_globals	access:public
f_Vfont_encoding_charset_alist	globals.h	/^  Lisp_Object f_Vfont_encoding_charset_alist;$/;"	m	struct:emacs_globals	access:public
f_Vfont_log	globals.h	/^  Lisp_Object f_Vfont_log;$/;"	m	struct:emacs_globals	access:public
f_Vfont_slant_table	globals.h	/^  Lisp_Object f_Vfont_slant_table;$/;"	m	struct:emacs_globals	access:public
f_Vfont_weight_table	globals.h	/^  Lisp_Object f_Vfont_weight_table;$/;"	m	struct:emacs_globals	access:public
f_Vfont_width_table	globals.h	/^  Lisp_Object f_Vfont_width_table;$/;"	m	struct:emacs_globals	access:public
f_Vframe_alpha_lower_limit	globals.h	/^  Lisp_Object f_Vframe_alpha_lower_limit;$/;"	m	struct:emacs_globals	access:public
f_Vframe_title_format	globals.h	/^  Lisp_Object f_Vframe_title_format;$/;"	m	struct:emacs_globals	access:public
f_Vfringe_bitmaps	globals.h	/^  Lisp_Object f_Vfringe_bitmaps;$/;"	m	struct:emacs_globals	access:public
f_Vfunction_key_map	globals.h	/^  Lisp_Object f_Vfunction_key_map;$/;"	m	struct:emacs_globals	access:public
f_Vgc_cons_percentage	globals.h	/^  Lisp_Object f_Vgc_cons_percentage;$/;"	m	struct:emacs_globals	access:public
f_Vgc_elapsed	globals.h	/^  Lisp_Object f_Vgc_elapsed;$/;"	m	struct:emacs_globals	access:public
f_Vglobal_disable_point_adjustment	globals.h	/^  Lisp_Object f_Vglobal_disable_point_adjustment;$/;"	m	struct:emacs_globals	access:public
f_Vglobal_mode_string	globals.h	/^  Lisp_Object f_Vglobal_mode_string;$/;"	m	struct:emacs_globals	access:public
f_Vglyphless_char_display	globals.h	/^  Lisp_Object f_Vglyphless_char_display;$/;"	m	struct:emacs_globals	access:public
f_Vglyph_table	globals.h	/^  Lisp_Object f_Vglyph_table;$/;"	m	struct:emacs_globals	access:public
f_Vgtk_version_string	globals.h	/^  Lisp_Object f_Vgtk_version_string;$/;"	m	struct:emacs_globals	access:public
f_Vhelp_char	globals.h	/^  Lisp_Object f_Vhelp_char;$/;"	m	struct:emacs_globals	access:public
f_Vhelp_event_list	globals.h	/^  Lisp_Object f_Vhelp_event_list;$/;"	m	struct:emacs_globals	access:public
f_Vhelp_form	globals.h	/^  Lisp_Object f_Vhelp_form;$/;"	m	struct:emacs_globals	access:public
f_Vhistory_add_new_input	globals.h	/^  Lisp_Object f_Vhistory_add_new_input;$/;"	m	struct:emacs_globals	access:public
f_Vhistory_length	globals.h	/^  Lisp_Object f_Vhistory_length;$/;"	m	struct:emacs_globals	access:public
f_Vhourglass_delay	globals.h	/^  Lisp_Object f_Vhourglass_delay;$/;"	m	struct:emacs_globals	access:public
f_Vhscroll_step	globals.h	/^  Lisp_Object f_Vhscroll_step;$/;"	m	struct:emacs_globals	access:public
f_Vicon_title_format	globals.h	/^  Lisp_Object f_Vicon_title_format;$/;"	m	struct:emacs_globals	access:public
f_Vignore_relative_composition	globals.h	/^  Lisp_Object f_Vignore_relative_composition;$/;"	m	struct:emacs_globals	access:public
f_Vimage_cache_eviction_delay	globals.h	/^  Lisp_Object f_Vimage_cache_eviction_delay;$/;"	m	struct:emacs_globals	access:public
f_Vimage_types	globals.h	/^  Lisp_Object f_Vimage_types;$/;"	m	struct:emacs_globals	access:public
f_Vinhibit_changing_match_data	globals.h	/^  Lisp_Object f_Vinhibit_changing_match_data;$/;"	m	struct:emacs_globals	access:public
f_Vinhibit_debugger	globals.h	/^  Lisp_Object f_Vinhibit_debugger;$/;"	m	struct:emacs_globals	access:public
f_Vinhibit_field_text_motion	globals.h	/^  Lisp_Object f_Vinhibit_field_text_motion;$/;"	m	struct:emacs_globals	access:public
f_Vinhibit_file_name_handlers	globals.h	/^  Lisp_Object f_Vinhibit_file_name_handlers;$/;"	m	struct:emacs_globals	access:public
f_Vinhibit_file_name_operation	globals.h	/^  Lisp_Object f_Vinhibit_file_name_operation;$/;"	m	struct:emacs_globals	access:public
f_Vinhibit_point_motion_hooks	globals.h	/^  Lisp_Object f_Vinhibit_point_motion_hooks;$/;"	m	struct:emacs_globals	access:public
f_Vinhibit_quit	globals.h	/^  Lisp_Object f_Vinhibit_quit;$/;"	m	struct:emacs_globals	access:public
f_Vinhibit_read_only	globals.h	/^  Lisp_Object f_Vinhibit_read_only;$/;"	m	struct:emacs_globals	access:public
f_Vinhibit_redisplay	globals.h	/^  Lisp_Object f_Vinhibit_redisplay;$/;"	m	struct:emacs_globals	access:public
f_Vinitial_environment	globals.h	/^  Lisp_Object f_Vinitial_environment;$/;"	m	struct:emacs_globals	access:public
f_Vinitial_window_system	globals.h	/^  Lisp_Object f_Vinitial_window_system;$/;"	m	struct:emacs_globals	access:public
f_Vinput_method_function	globals.h	/^  Lisp_Object f_Vinput_method_function;$/;"	m	struct:emacs_globals	access:public
f_Vinput_method_previous_message	globals.h	/^  Lisp_Object f_Vinput_method_previous_message;$/;"	m	struct:emacs_globals	access:public
f_Vinstallation_directory	globals.h	/^  Lisp_Object f_Vinstallation_directory;$/;"	m	struct:emacs_globals	access:public
f_Vinternal_interpreter_environment	globals.h	/^  Lisp_Object f_Vinternal_interpreter_environment;$/;"	m	struct:emacs_globals	access:public
f_Vinternal__top_level_message	globals.h	/^  Lisp_Object f_Vinternal__top_level_message;$/;"	m	struct:emacs_globals	access:public
f_Vinvocation_directory	globals.h	/^  Lisp_Object f_Vinvocation_directory;$/;"	m	struct:emacs_globals	access:public
f_Vinvocation_name	globals.h	/^  Lisp_Object f_Vinvocation_name;$/;"	m	struct:emacs_globals	access:public
f_visible_bell	globals.h	/^  bool f_visible_bell;$/;"	m	struct:emacs_globals	access:public
f_visible_cursor	globals.h	/^  bool f_visible_cursor;$/;"	m	struct:emacs_globals	access:public
f_Vkbd_macro_termination_hook	globals.h	/^  Lisp_Object f_Vkbd_macro_termination_hook;$/;"	m	struct:emacs_globals	access:public
f_Vkey_translation_map	globals.h	/^  Lisp_Object f_Vkey_translation_map;$/;"	m	struct:emacs_globals	access:public
f_Vkill_buffer_query_functions	globals.h	/^  Lisp_Object f_Vkill_buffer_query_functions;$/;"	m	struct:emacs_globals	access:public
f_Vkill_emacs_hook	globals.h	/^  Lisp_Object f_Vkill_emacs_hook;$/;"	m	struct:emacs_globals	access:public
f_Vlast_code_conversion_error	globals.h	/^  Lisp_Object f_Vlast_code_conversion_error;$/;"	m	struct:emacs_globals	access:public
f_Vlast_coding_system_used	globals.h	/^  Lisp_Object f_Vlast_coding_system_used;$/;"	m	struct:emacs_globals	access:public
f_Vlast_event_frame	globals.h	/^  Lisp_Object f_Vlast_event_frame;$/;"	m	struct:emacs_globals	access:public
f_Vlatin_extra_code_table	globals.h	/^  Lisp_Object f_Vlatin_extra_code_table;$/;"	m	struct:emacs_globals	access:public
f_Vlexical_binding	globals.h	/^  Lisp_Object f_Vlexical_binding;$/;"	m	struct:emacs_globals	access:public
f_Vline_number_display_limit	globals.h	/^  Lisp_Object f_Vline_number_display_limit;$/;"	m	struct:emacs_globals	access:public
f_Vline_prefix	globals.h	/^  Lisp_Object f_Vline_prefix;$/;"	m	struct:emacs_globals	access:public
f_Vload_file_name	globals.h	/^  Lisp_Object f_Vload_file_name;$/;"	m	struct:emacs_globals	access:public
f_Vload_file_rep_suffixes	globals.h	/^  Lisp_Object f_Vload_file_rep_suffixes;$/;"	m	struct:emacs_globals	access:public
f_Vload_history	globals.h	/^  Lisp_Object f_Vload_history;$/;"	m	struct:emacs_globals	access:public
f_Vload_path	globals.h	/^  Lisp_Object f_Vload_path;$/;"	m	struct:emacs_globals	access:public
f_Vload_read_function	globals.h	/^  Lisp_Object f_Vload_read_function;$/;"	m	struct:emacs_globals	access:public
f_Vload_source_file_function	globals.h	/^  Lisp_Object f_Vload_source_file_function;$/;"	m	struct:emacs_globals	access:public
f_Vload_suffixes	globals.h	/^  Lisp_Object f_Vload_suffixes;$/;"	m	struct:emacs_globals	access:public
f_Vlocale_coding_system	globals.h	/^  Lisp_Object f_Vlocale_coding_system;$/;"	m	struct:emacs_globals	access:public
f_Vlread_old_style_backquotes	globals.h	/^  Lisp_Object f_Vlread_old_style_backquotes;$/;"	m	struct:emacs_globals	access:public
f_Vlread_unescaped_character_literals	globals.h	/^  Lisp_Object f_Vlread_unescaped_character_literals;$/;"	m	struct:emacs_globals	access:public
f_Vlucid_menu_bar_dirty_flag	globals.h	/^  Lisp_Object f_Vlucid_menu_bar_dirty_flag;$/;"	m	struct:emacs_globals	access:public
f_Vmake_pointer_invisible	globals.h	/^  Lisp_Object f_Vmake_pointer_invisible;$/;"	m	struct:emacs_globals	access:public
f_Vmark_even_if_inactive	globals.h	/^  Lisp_Object f_Vmark_even_if_inactive;$/;"	m	struct:emacs_globals	access:public
f_Vmaximum_scroll_margin	globals.h	/^  Lisp_Object f_Vmaximum_scroll_margin;$/;"	m	struct:emacs_globals	access:public
f_Vmax_image_size	globals.h	/^  Lisp_Object f_Vmax_image_size;$/;"	m	struct:emacs_globals	access:public
f_Vmax_mini_window_height	globals.h	/^  Lisp_Object f_Vmax_mini_window_height;$/;"	m	struct:emacs_globals	access:public
f_Vmemory_full	globals.h	/^  Lisp_Object f_Vmemory_full;$/;"	m	struct:emacs_globals	access:public
f_Vmemory_signal_data	globals.h	/^  Lisp_Object f_Vmemory_signal_data;$/;"	m	struct:emacs_globals	access:public
f_Vmenu_bar_final_items	globals.h	/^  Lisp_Object f_Vmenu_bar_final_items;$/;"	m	struct:emacs_globals	access:public
f_Vmenu_bar_mode	globals.h	/^  Lisp_Object f_Vmenu_bar_mode;$/;"	m	struct:emacs_globals	access:public
f_Vmenu_bar_update_hook	globals.h	/^  Lisp_Object f_Vmenu_bar_update_hook;$/;"	m	struct:emacs_globals	access:public
f_Vmenu_updating_frame	globals.h	/^  Lisp_Object f_Vmenu_updating_frame;$/;"	m	struct:emacs_globals	access:public
f_Vmessage_log_max	globals.h	/^  Lisp_Object f_Vmessage_log_max;$/;"	m	struct:emacs_globals	access:public
f_Vminibuffer_completing_file_name	globals.h	/^  Lisp_Object f_Vminibuffer_completing_file_name;$/;"	m	struct:emacs_globals	access:public
f_Vminibuffer_completion_confirm	globals.h	/^  Lisp_Object f_Vminibuffer_completion_confirm;$/;"	m	struct:emacs_globals	access:public
f_Vminibuffer_completion_predicate	globals.h	/^  Lisp_Object f_Vminibuffer_completion_predicate;$/;"	m	struct:emacs_globals	access:public
f_Vminibuffer_completion_table	globals.h	/^  Lisp_Object f_Vminibuffer_completion_table;$/;"	m	struct:emacs_globals	access:public
f_Vminibuffer_exit_hook	globals.h	/^  Lisp_Object f_Vminibuffer_exit_hook;$/;"	m	struct:emacs_globals	access:public
f_Vminibuffer_help_form	globals.h	/^  Lisp_Object f_Vminibuffer_help_form;$/;"	m	struct:emacs_globals	access:public
f_Vminibuffer_history_position	globals.h	/^  Lisp_Object f_Vminibuffer_history_position;$/;"	m	struct:emacs_globals	access:public
f_Vminibuffer_history_variable	globals.h	/^  Lisp_Object f_Vminibuffer_history_variable;$/;"	m	struct:emacs_globals	access:public
f_Vminibuffer_local_map	globals.h	/^  Lisp_Object f_Vminibuffer_local_map;$/;"	m	struct:emacs_globals	access:public
f_Vminibuffer_local_ns_map	globals.h	/^  Lisp_Object f_Vminibuffer_local_ns_map;$/;"	m	struct:emacs_globals	access:public
f_Vminibuffer_message_timeout	globals.h	/^  Lisp_Object f_Vminibuffer_message_timeout;$/;"	m	struct:emacs_globals	access:public
f_Vminibuffer_prompt_properties	globals.h	/^  Lisp_Object f_Vminibuffer_prompt_properties;$/;"	m	struct:emacs_globals	access:public
f_Vminibuffer_setup_hook	globals.h	/^  Lisp_Object f_Vminibuffer_setup_hook;$/;"	m	struct:emacs_globals	access:public
f_Vminibuf_scroll_window	globals.h	/^  Lisp_Object f_Vminibuf_scroll_window;$/;"	m	struct:emacs_globals	access:public
f_Vminor_mode_map_alist	globals.h	/^  Lisp_Object f_Vminor_mode_map_alist;$/;"	m	struct:emacs_globals	access:public
f_Vminor_mode_overriding_map_alist	globals.h	/^  Lisp_Object f_Vminor_mode_overriding_map_alist;$/;"	m	struct:emacs_globals	access:public
f_Vmodule_file_suffix	globals.h	/^  Lisp_Object f_Vmodule_file_suffix;$/;"	m	struct:emacs_globals	access:public
f_Vmost_negative_fixnum	globals.h	/^  Lisp_Object f_Vmost_negative_fixnum;$/;"	m	struct:emacs_globals	access:public
f_Vmost_positive_fixnum	globals.h	/^  Lisp_Object f_Vmost_positive_fixnum;$/;"	m	struct:emacs_globals	access:public
f_Vmotif_version_string	globals.h	/^  Lisp_Object f_Vmotif_version_string;$/;"	m	struct:emacs_globals	access:public
f_Vmouse_autoselect_window	globals.h	/^  Lisp_Object f_Vmouse_autoselect_window;$/;"	m	struct:emacs_globals	access:public
f_Vmouse_highlight	globals.h	/^  Lisp_Object f_Vmouse_highlight;$/;"	m	struct:emacs_globals	access:public
f_Vmouse_leave_buffer_hook	globals.h	/^  Lisp_Object f_Vmouse_leave_buffer_hook;$/;"	m	struct:emacs_globals	access:public
f_Vmouse_position_function	globals.h	/^  Lisp_Object f_Vmouse_position_function;$/;"	m	struct:emacs_globals	access:public
f_Vmove_frame_functions	globals.h	/^  Lisp_Object f_Vmove_frame_functions;$/;"	m	struct:emacs_globals	access:public
f_Vnetwork_coding_system_alist	globals.h	/^  Lisp_Object f_Vnetwork_coding_system_alist;$/;"	m	struct:emacs_globals	access:public
f_Vnobreak_char_display	globals.h	/^  Lisp_Object f_Vnobreak_char_display;$/;"	m	struct:emacs_globals	access:public
f_Vobarray	globals.h	/^  Lisp_Object f_Vobarray;$/;"	m	struct:emacs_globals	access:public
f_Voperating_system_release	globals.h	/^  Lisp_Object f_Voperating_system_release;$/;"	m	struct:emacs_globals	access:public
f_Votf_script_alist	globals.h	/^  Lisp_Object f_Votf_script_alist;$/;"	m	struct:emacs_globals	access:public
f_Vother_window_scroll_buffer	globals.h	/^  Lisp_Object f_Vother_window_scroll_buffer;$/;"	m	struct:emacs_globals	access:public
f_Voverflow_newline_into_fringe	globals.h	/^  Lisp_Object f_Voverflow_newline_into_fringe;$/;"	m	struct:emacs_globals	access:public
f_Voverlay_arrow_position	globals.h	/^  Lisp_Object f_Voverlay_arrow_position;$/;"	m	struct:emacs_globals	access:public
f_Voverlay_arrow_string	globals.h	/^  Lisp_Object f_Voverlay_arrow_string;$/;"	m	struct:emacs_globals	access:public
f_Voverlay_arrow_variable_list	globals.h	/^  Lisp_Object f_Voverlay_arrow_variable_list;$/;"	m	struct:emacs_globals	access:public
f_Voverriding_local_map	globals.h	/^  Lisp_Object f_Voverriding_local_map;$/;"	m	struct:emacs_globals	access:public
f_Voverriding_local_map_menu_flag	globals.h	/^  Lisp_Object f_Voverriding_local_map_menu_flag;$/;"	m	struct:emacs_globals	access:public
f_Vpath_separator	globals.h	/^  Lisp_Object f_Vpath_separator;$/;"	m	struct:emacs_globals	access:public
f_Vpost_command_hook	globals.h	/^  Lisp_Object f_Vpost_command_hook;$/;"	m	struct:emacs_globals	access:public
f_Vpost_gc_hook	globals.h	/^  Lisp_Object f_Vpost_gc_hook;$/;"	m	struct:emacs_globals	access:public
f_Vpost_self_insert_hook	globals.h	/^  Lisp_Object f_Vpost_self_insert_hook;$/;"	m	struct:emacs_globals	access:public
f_Vprefix_help_command	globals.h	/^  Lisp_Object f_Vprefix_help_command;$/;"	m	struct:emacs_globals	access:public
f_Vpreloaded_file_list	globals.h	/^  Lisp_Object f_Vpreloaded_file_list;$/;"	m	struct:emacs_globals	access:public
f_Vprevious_system_messages_locale	globals.h	/^  Lisp_Object f_Vprevious_system_messages_locale;$/;"	m	struct:emacs_globals	access:public
f_Vprevious_system_time_locale	globals.h	/^  Lisp_Object f_Vprevious_system_time_locale;$/;"	m	struct:emacs_globals	access:public
f_Vpre_command_hook	globals.h	/^  Lisp_Object f_Vpre_command_hook;$/;"	m	struct:emacs_globals	access:public
f_Vpre_redisplay_function	globals.h	/^  Lisp_Object f_Vpre_redisplay_function;$/;"	m	struct:emacs_globals	access:public
f_Vprintable_chars	globals.h	/^  Lisp_Object f_Vprintable_chars;$/;"	m	struct:emacs_globals	access:public
f_Vprint_charset_text_property	globals.h	/^  Lisp_Object f_Vprint_charset_text_property;$/;"	m	struct:emacs_globals	access:public
f_Vprint_circle	globals.h	/^  Lisp_Object f_Vprint_circle;$/;"	m	struct:emacs_globals	access:public
f_Vprint_continuous_numbering	globals.h	/^  Lisp_Object f_Vprint_continuous_numbering;$/;"	m	struct:emacs_globals	access:public
f_Vprint_gensym	globals.h	/^  Lisp_Object f_Vprint_gensym;$/;"	m	struct:emacs_globals	access:public
f_Vprint_length	globals.h	/^  Lisp_Object f_Vprint_length;$/;"	m	struct:emacs_globals	access:public
f_Vprint_level	globals.h	/^  Lisp_Object f_Vprint_level;$/;"	m	struct:emacs_globals	access:public
f_Vprint_number_table	globals.h	/^  Lisp_Object f_Vprint_number_table;$/;"	m	struct:emacs_globals	access:public
f_Vprocess_adaptive_read_buffering	globals.h	/^  Lisp_Object f_Vprocess_adaptive_read_buffering;$/;"	m	struct:emacs_globals	access:public
f_Vprocess_coding_system_alist	globals.h	/^  Lisp_Object f_Vprocess_coding_system_alist;$/;"	m	struct:emacs_globals	access:public
f_Vprocess_connection_type	globals.h	/^  Lisp_Object f_Vprocess_connection_type;$/;"	m	struct:emacs_globals	access:public
f_Vprocess_environment	globals.h	/^  Lisp_Object f_Vprocess_environment;$/;"	m	struct:emacs_globals	access:public
f_Vpurify_flag	globals.h	/^  Lisp_Object f_Vpurify_flag;$/;"	m	struct:emacs_globals	access:public
f_Vquit_flag	globals.h	/^  Lisp_Object f_Vquit_flag;$/;"	m	struct:emacs_globals	access:public
f_Vread_buffer_function	globals.h	/^  Lisp_Object f_Vread_buffer_function;$/;"	m	struct:emacs_globals	access:public
f_Vread_circle	globals.h	/^  Lisp_Object f_Vread_circle;$/;"	m	struct:emacs_globals	access:public
f_Vread_expression_history	globals.h	/^  Lisp_Object f_Vread_expression_history;$/;"	m	struct:emacs_globals	access:public
f_Vread_hide_char	globals.h	/^  Lisp_Object f_Vread_hide_char;$/;"	m	struct:emacs_globals	access:public
f_Vread_symbol_positions_list	globals.h	/^  Lisp_Object f_Vread_symbol_positions_list;$/;"	m	struct:emacs_globals	access:public
f_Vread_with_symbol_positions	globals.h	/^  Lisp_Object f_Vread_with_symbol_positions;$/;"	m	struct:emacs_globals	access:public
f_Vreal_this_command	globals.h	/^  Lisp_Object f_Vreal_this_command;$/;"	m	struct:emacs_globals	access:public
f_Vrecenter_redisplay	globals.h	/^  Lisp_Object f_Vrecenter_redisplay;$/;"	m	struct:emacs_globals	access:public
f_Vredisplay_end_trigger_functions	globals.h	/^  Lisp_Object f_Vredisplay_end_trigger_functions;$/;"	m	struct:emacs_globals	access:public
f_Vredisplay__all_windows_cause	globals.h	/^  Lisp_Object f_Vredisplay__all_windows_cause;$/;"	m	struct:emacs_globals	access:public
f_Vredisplay__mode_lines_cause	globals.h	/^  Lisp_Object f_Vredisplay__mode_lines_cause;$/;"	m	struct:emacs_globals	access:public
f_Vreport_emacs_bug_address	globals.h	/^  Lisp_Object f_Vreport_emacs_bug_address;$/;"	m	struct:emacs_globals	access:public
f_Vresize_mini_windows	globals.h	/^  Lisp_Object f_Vresize_mini_windows;$/;"	m	struct:emacs_globals	access:public
f_Vresume_tty_functions	globals.h	/^  Lisp_Object f_Vresume_tty_functions;$/;"	m	struct:emacs_globals	access:public
f_Vring_bell_function	globals.h	/^  Lisp_Object f_Vring_bell_function;$/;"	m	struct:emacs_globals	access:public
f_Vsaved_region_selection	globals.h	/^  Lisp_Object f_Vsaved_region_selection;$/;"	m	struct:emacs_globals	access:public
f_Vscalable_fonts_allowed	globals.h	/^  Lisp_Object f_Vscalable_fonts_allowed;$/;"	m	struct:emacs_globals	access:public
f_Vscript_representative_chars	globals.h	/^  Lisp_Object f_Vscript_representative_chars;$/;"	m	struct:emacs_globals	access:public
f_Vscroll_preserve_screen_position	globals.h	/^  Lisp_Object f_Vscroll_preserve_screen_position;$/;"	m	struct:emacs_globals	access:public
f_Vsearch_spaces_regexp	globals.h	/^  Lisp_Object f_Vsearch_spaces_regexp;$/;"	m	struct:emacs_globals	access:public
f_Vselection_converter_alist	globals.h	/^  Lisp_Object f_Vselection_converter_alist;$/;"	m	struct:emacs_globals	access:public
f_Vselection_inhibit_update_commands	globals.h	/^  Lisp_Object f_Vselection_inhibit_update_commands;$/;"	m	struct:emacs_globals	access:public
f_Vselect_active_regions	globals.h	/^  Lisp_Object f_Vselect_active_regions;$/;"	m	struct:emacs_globals	access:public
f_Vselect_safe_coding_system_function	globals.h	/^  Lisp_Object f_Vselect_safe_coding_system_function;$/;"	m	struct:emacs_globals	access:public
f_Vset_auto_coding_function	globals.h	/^  Lisp_Object f_Vset_auto_coding_function;$/;"	m	struct:emacs_globals	access:public
f_Vshared_game_score_directory	globals.h	/^  Lisp_Object f_Vshared_game_score_directory;$/;"	m	struct:emacs_globals	access:public
f_Vshell_file_name	globals.h	/^  Lisp_Object f_Vshell_file_name;$/;"	m	struct:emacs_globals	access:public
f_Vshow_help_function	globals.h	/^  Lisp_Object f_Vshow_help_function;$/;"	m	struct:emacs_globals	access:public
f_Vshow_trailing_whitespace	globals.h	/^  Lisp_Object f_Vshow_trailing_whitespace;$/;"	m	struct:emacs_globals	access:public
f_Vsignal_hook_function	globals.h	/^  Lisp_Object f_Vsignal_hook_function;$/;"	m	struct:emacs_globals	access:public
f_Vsource_directory	globals.h	/^  Lisp_Object f_Vsource_directory;$/;"	m	struct:emacs_globals	access:public
f_Vspecial_event_map	globals.h	/^  Lisp_Object f_Vspecial_event_map;$/;"	m	struct:emacs_globals	access:public
f_Vstandard_display_table	globals.h	/^  Lisp_Object f_Vstandard_display_table;$/;"	m	struct:emacs_globals	access:public
f_Vstandard_input	globals.h	/^  Lisp_Object f_Vstandard_input;$/;"	m	struct:emacs_globals	access:public
f_Vstandard_output	globals.h	/^  Lisp_Object f_Vstandard_output;$/;"	m	struct:emacs_globals	access:public
f_Vstandard_translation_table_for_decode	globals.h	/^  Lisp_Object f_Vstandard_translation_table_for_decode;$/;"	m	struct:emacs_globals	access:public
f_Vstandard_translation_table_for_encode	globals.h	/^  Lisp_Object f_Vstandard_translation_table_for_encode;$/;"	m	struct:emacs_globals	access:public
f_Vsuspend_tty_functions	globals.h	/^  Lisp_Object f_Vsuspend_tty_functions;$/;"	m	struct:emacs_globals	access:public
f_Vsystem_configuration	globals.h	/^  Lisp_Object f_Vsystem_configuration;$/;"	m	struct:emacs_globals	access:public
f_Vsystem_configuration_features	globals.h	/^  Lisp_Object f_Vsystem_configuration_features;$/;"	m	struct:emacs_globals	access:public
f_Vsystem_configuration_options	globals.h	/^  Lisp_Object f_Vsystem_configuration_options;$/;"	m	struct:emacs_globals	access:public
f_Vsystem_messages_locale	globals.h	/^  Lisp_Object f_Vsystem_messages_locale;$/;"	m	struct:emacs_globals	access:public
f_Vsystem_name	globals.h	/^  Lisp_Object f_Vsystem_name;$/;"	m	struct:emacs_globals	access:public
f_Vsystem_time_locale	globals.h	/^  Lisp_Object f_Vsystem_time_locale;$/;"	m	struct:emacs_globals	access:public
f_Vsystem_type	globals.h	/^  Lisp_Object f_Vsystem_type;$/;"	m	struct:emacs_globals	access:public
f_Vtemporary_file_directory	globals.h	/^  Lisp_Object f_Vtemporary_file_directory;$/;"	m	struct:emacs_globals	access:public
f_Vtemp_buffer_show_function	globals.h	/^  Lisp_Object f_Vtemp_buffer_show_function;$/;"	m	struct:emacs_globals	access:public
f_Vterminal_frame	globals.h	/^  Lisp_Object f_Vterminal_frame;$/;"	m	struct:emacs_globals	access:public
f_Vtext_property_default_nonsticky	globals.h	/^  Lisp_Object f_Vtext_property_default_nonsticky;$/;"	m	struct:emacs_globals	access:public
f_Vtext_quoting_style	globals.h	/^  Lisp_Object f_Vtext_quoting_style;$/;"	m	struct:emacs_globals	access:public
f_Vthis_command	globals.h	/^  Lisp_Object f_Vthis_command;$/;"	m	struct:emacs_globals	access:public
f_Vthis_command_keys_shift_translated	globals.h	/^  Lisp_Object f_Vthis_command_keys_shift_translated;$/;"	m	struct:emacs_globals	access:public
f_Vthis_original_command	globals.h	/^  Lisp_Object f_Vthis_original_command;$/;"	m	struct:emacs_globals	access:public
f_Vthrow_on_input	globals.h	/^  Lisp_Object f_Vthrow_on_input;$/;"	m	struct:emacs_globals	access:public
f_Vtimer_idle_list	globals.h	/^  Lisp_Object f_Vtimer_idle_list;$/;"	m	struct:emacs_globals	access:public
f_Vtimer_list	globals.h	/^  Lisp_Object f_Vtimer_list;$/;"	m	struct:emacs_globals	access:public
f_Vtool_bar_border	globals.h	/^  Lisp_Object f_Vtool_bar_border;$/;"	m	struct:emacs_globals	access:public
f_Vtool_bar_button_margin	globals.h	/^  Lisp_Object f_Vtool_bar_button_margin;$/;"	m	struct:emacs_globals	access:public
f_Vtool_bar_mode	globals.h	/^  Lisp_Object f_Vtool_bar_mode;$/;"	m	struct:emacs_globals	access:public
f_Vtool_bar_separator_image_expression	globals.h	/^  Lisp_Object f_Vtool_bar_separator_image_expression;$/;"	m	struct:emacs_globals	access:public
f_Vtool_bar_style	globals.h	/^  Lisp_Object f_Vtool_bar_style;$/;"	m	struct:emacs_globals	access:public
f_Vtop_level	globals.h	/^  Lisp_Object f_Vtop_level;$/;"	m	struct:emacs_globals	access:public
f_Vtransient_mark_mode	globals.h	/^  Lisp_Object f_Vtransient_mark_mode;$/;"	m	struct:emacs_globals	access:public
f_Vtranslation_hash_table_vector	globals.h	/^  Lisp_Object f_Vtranslation_hash_table_vector;$/;"	m	struct:emacs_globals	access:public
f_Vtranslation_table_for_input	globals.h	/^  Lisp_Object f_Vtranslation_table_for_input;$/;"	m	struct:emacs_globals	access:public
f_Vtranslation_table_vector	globals.h	/^  Lisp_Object f_Vtranslation_table_vector;$/;"	m	struct:emacs_globals	access:public
f_Vtruncate_partial_width_windows	globals.h	/^  Lisp_Object f_Vtruncate_partial_width_windows;$/;"	m	struct:emacs_globals	access:public
f_Vtty_defined_color_alist	globals.h	/^  Lisp_Object f_Vtty_defined_color_alist;$/;"	m	struct:emacs_globals	access:public
f_Vtty_erase_char	globals.h	/^  Lisp_Object f_Vtty_erase_char;$/;"	m	struct:emacs_globals	access:public
f_Vundo_outer_limit	globals.h	/^  Lisp_Object f_Vundo_outer_limit;$/;"	m	struct:emacs_globals	access:public
f_Vundo_outer_limit_function	globals.h	/^  Lisp_Object f_Vundo_outer_limit_function;$/;"	m	struct:emacs_globals	access:public
f_Vunicode_category_table	globals.h	/^  Lisp_Object f_Vunicode_category_table;$/;"	m	struct:emacs_globals	access:public
f_Vunread_command_events	globals.h	/^  Lisp_Object f_Vunread_command_events;$/;"	m	struct:emacs_globals	access:public
f_Vunread_input_method_events	globals.h	/^  Lisp_Object f_Vunread_input_method_events;$/;"	m	struct:emacs_globals	access:public
f_Vunread_post_input_method_events	globals.h	/^  Lisp_Object f_Vunread_post_input_method_events;$/;"	m	struct:emacs_globals	access:public
f_Vuser_full_name	globals.h	/^  Lisp_Object f_Vuser_full_name;$/;"	m	struct:emacs_globals	access:public
f_Vuser_init_file	globals.h	/^  Lisp_Object f_Vuser_init_file;$/;"	m	struct:emacs_globals	access:public
f_Vuser_login_name	globals.h	/^  Lisp_Object f_Vuser_login_name;$/;"	m	struct:emacs_globals	access:public
f_Vuser_real_login_name	globals.h	/^  Lisp_Object f_Vuser_real_login_name;$/;"	m	struct:emacs_globals	access:public
f_Vuse_default_ascent	globals.h	/^  Lisp_Object f_Vuse_default_ascent;$/;"	m	struct:emacs_globals	access:public
f_Vvalues	globals.h	/^  Lisp_Object f_Vvalues;$/;"	m	struct:emacs_globals	access:public
f_Vvertical_centering_font_regexp	globals.h	/^  Lisp_Object f_Vvertical_centering_font_regexp;$/;"	m	struct:emacs_globals	access:public
f_Vvoid_text_area_pointer	globals.h	/^  Lisp_Object f_Vvoid_text_area_pointer;$/;"	m	struct:emacs_globals	access:public
f_Vwhere_is_preferred_modifier	globals.h	/^  Lisp_Object f_Vwhere_is_preferred_modifier;$/;"	m	struct:emacs_globals	access:public
f_Vwhile_no_input_ignore_events	globals.h	/^  Lisp_Object f_Vwhile_no_input_ignore_events;$/;"	m	struct:emacs_globals	access:public
f_Vwindow_combination_limit	globals.h	/^  Lisp_Object f_Vwindow_combination_limit;$/;"	m	struct:emacs_globals	access:public
f_Vwindow_combination_resize	globals.h	/^  Lisp_Object f_Vwindow_combination_resize;$/;"	m	struct:emacs_globals	access:public
f_Vwindow_configuration_change_hook	globals.h	/^  Lisp_Object f_Vwindow_configuration_change_hook;$/;"	m	struct:emacs_globals	access:public
f_Vwindow_persistent_parameters	globals.h	/^  Lisp_Object f_Vwindow_persistent_parameters;$/;"	m	struct:emacs_globals	access:public
f_Vwindow_point_insertion_type	globals.h	/^  Lisp_Object f_Vwindow_point_insertion_type;$/;"	m	struct:emacs_globals	access:public
f_Vwindow_scroll_functions	globals.h	/^  Lisp_Object f_Vwindow_scroll_functions;$/;"	m	struct:emacs_globals	access:public
f_Vwindow_size_change_functions	globals.h	/^  Lisp_Object f_Vwindow_size_change_functions;$/;"	m	struct:emacs_globals	access:public
f_Vwindow_system_version	globals.h	/^  Lisp_Object f_Vwindow_system_version;$/;"	m	struct:emacs_globals	access:public
f_Vword_combining_categories	globals.h	/^  Lisp_Object f_Vword_combining_categories;$/;"	m	struct:emacs_globals	access:public
f_Vword_separating_categories	globals.h	/^  Lisp_Object f_Vword_separating_categories;$/;"	m	struct:emacs_globals	access:public
f_Vwrap_prefix	globals.h	/^  Lisp_Object f_Vwrap_prefix;$/;"	m	struct:emacs_globals	access:public
f_Vwrite_region_annotate_functions	globals.h	/^  Lisp_Object f_Vwrite_region_annotate_functions;$/;"	m	struct:emacs_globals	access:public
f_Vwrite_region_annotations_so_far	globals.h	/^  Lisp_Object f_Vwrite_region_annotations_so_far;$/;"	m	struct:emacs_globals	access:public
f_Vwrite_region_post_annotation_function	globals.h	/^  Lisp_Object f_Vwrite_region_post_annotation_function;$/;"	m	struct:emacs_globals	access:public
f_Vxft_settings	globals.h	/^  Lisp_Object f_Vxft_settings;$/;"	m	struct:emacs_globals	access:public
f_Vx_alt_keysym	globals.h	/^  Lisp_Object f_Vx_alt_keysym;$/;"	m	struct:emacs_globals	access:public
f_Vx_bitmap_file_path	globals.h	/^  Lisp_Object f_Vx_bitmap_file_path;$/;"	m	struct:emacs_globals	access:public
f_Vx_ctrl_keysym	globals.h	/^  Lisp_Object f_Vx_ctrl_keysym;$/;"	m	struct:emacs_globals	access:public
f_Vx_cursor_fore_pixel	globals.h	/^  Lisp_Object f_Vx_cursor_fore_pixel;$/;"	m	struct:emacs_globals	access:public
f_Vx_hourglass_pointer_shape	globals.h	/^  Lisp_Object f_Vx_hourglass_pointer_shape;$/;"	m	struct:emacs_globals	access:public
f_Vx_hyper_keysym	globals.h	/^  Lisp_Object f_Vx_hyper_keysym;$/;"	m	struct:emacs_globals	access:public
f_Vx_keysym_table	globals.h	/^  Lisp_Object f_Vx_keysym_table;$/;"	m	struct:emacs_globals	access:public
f_Vx_lost_selection_functions	globals.h	/^  Lisp_Object f_Vx_lost_selection_functions;$/;"	m	struct:emacs_globals	access:public
f_Vx_max_tooltip_size	globals.h	/^  Lisp_Object f_Vx_max_tooltip_size;$/;"	m	struct:emacs_globals	access:public
f_Vx_meta_keysym	globals.h	/^  Lisp_Object f_Vx_meta_keysym;$/;"	m	struct:emacs_globals	access:public
f_Vx_mode_pointer_shape	globals.h	/^  Lisp_Object f_Vx_mode_pointer_shape;$/;"	m	struct:emacs_globals	access:public
f_Vx_nontext_pointer_shape	globals.h	/^  Lisp_Object f_Vx_nontext_pointer_shape;$/;"	m	struct:emacs_globals	access:public
f_Vx_no_window_manager	globals.h	/^  Lisp_Object f_Vx_no_window_manager;$/;"	m	struct:emacs_globals	access:public
f_Vx_pixel_size_width_font_regexp	globals.h	/^  Lisp_Object f_Vx_pixel_size_width_font_regexp;$/;"	m	struct:emacs_globals	access:public
f_Vx_pointer_shape	globals.h	/^  Lisp_Object f_Vx_pointer_shape;$/;"	m	struct:emacs_globals	access:public
f_Vx_resource_class	globals.h	/^  Lisp_Object f_Vx_resource_class;$/;"	m	struct:emacs_globals	access:public
f_Vx_resource_name	globals.h	/^  Lisp_Object f_Vx_resource_name;$/;"	m	struct:emacs_globals	access:public
f_Vx_select_enable_clipboard_manager	globals.h	/^  Lisp_Object f_Vx_select_enable_clipboard_manager;$/;"	m	struct:emacs_globals	access:public
f_Vx_sensitive_text_pointer_shape	globals.h	/^  Lisp_Object f_Vx_sensitive_text_pointer_shape;$/;"	m	struct:emacs_globals	access:public
f_Vx_sent_selection_functions	globals.h	/^  Lisp_Object f_Vx_sent_selection_functions;$/;"	m	struct:emacs_globals	access:public
f_Vx_session_id	globals.h	/^  Lisp_Object f_Vx_session_id;$/;"	m	struct:emacs_globals	access:public
f_Vx_session_previous_id	globals.h	/^  Lisp_Object f_Vx_session_previous_id;$/;"	m	struct:emacs_globals	access:public
f_Vx_super_keysym	globals.h	/^  Lisp_Object f_Vx_super_keysym;$/;"	m	struct:emacs_globals	access:public
f_Vx_toolkit_scroll_bars	globals.h	/^  Lisp_Object f_Vx_toolkit_scroll_bars;$/;"	m	struct:emacs_globals	access:public
f_Vx_window_bottom_edge_shape	globals.h	/^  Lisp_Object f_Vx_window_bottom_edge_shape;$/;"	m	struct:emacs_globals	access:public
f_Vx_window_bottom_left_corner_shape	globals.h	/^  Lisp_Object f_Vx_window_bottom_left_corner_shape;$/;"	m	struct:emacs_globals	access:public
f_Vx_window_bottom_right_corner_shape	globals.h	/^  Lisp_Object f_Vx_window_bottom_right_corner_shape;$/;"	m	struct:emacs_globals	access:public
f_Vx_window_horizontal_drag_shape	globals.h	/^  Lisp_Object f_Vx_window_horizontal_drag_shape;$/;"	m	struct:emacs_globals	access:public
f_Vx_window_left_edge_shape	globals.h	/^  Lisp_Object f_Vx_window_left_edge_shape;$/;"	m	struct:emacs_globals	access:public
f_Vx_window_right_edge_shape	globals.h	/^  Lisp_Object f_Vx_window_right_edge_shape;$/;"	m	struct:emacs_globals	access:public
f_Vx_window_top_edge_shape	globals.h	/^  Lisp_Object f_Vx_window_top_edge_shape;$/;"	m	struct:emacs_globals	access:public
f_Vx_window_top_left_corner_shape	globals.h	/^  Lisp_Object f_Vx_window_top_left_corner_shape;$/;"	m	struct:emacs_globals	access:public
f_Vx_window_top_right_corner_shape	globals.h	/^  Lisp_Object f_Vx_window_top_right_corner_shape;$/;"	m	struct:emacs_globals	access:public
f_Vx_window_vertical_drag_shape	globals.h	/^  Lisp_Object f_Vx_window_vertical_drag_shape;$/;"	m	struct:emacs_globals	access:public
f_whitespace_regexp	search.c	/^  Lisp_Object regexp, f_whitespace_regexp;$/;"	m	struct:regexp_cache	file:	access:public
f_window_resize_pixelwise	globals.h	/^  bool f_window_resize_pixelwise;$/;"	m	struct:emacs_globals	access:public
f_words_include_escapes	globals.h	/^  bool f_words_include_escapes;$/;"	m	struct:emacs_globals	access:public
f_write_region_inhibit_fsync	globals.h	/^  bool f_write_region_inhibit_fsync;$/;"	m	struct:emacs_globals	access:public
f_xft_font_ascent_descent_override	globals.h	/^  bool f_xft_font_ascent_descent_override;$/;"	m	struct:emacs_globals	access:public
f_x_frame_normalize_before_maximize	globals.h	/^  bool f_x_frame_normalize_before_maximize;$/;"	m	struct:emacs_globals	access:public
f_x_gtk_file_dialog_help_text	globals.h	/^  bool f_x_gtk_file_dialog_help_text;$/;"	m	struct:emacs_globals	access:public
f_x_gtk_show_hidden_files	globals.h	/^  bool f_x_gtk_show_hidden_files;$/;"	m	struct:emacs_globals	access:public
f_x_gtk_use_old_file_dialog	globals.h	/^  bool f_x_gtk_use_old_file_dialog;$/;"	m	struct:emacs_globals	access:public
f_x_gtk_use_system_tooltips	globals.h	/^  bool f_x_gtk_use_system_tooltips;$/;"	m	struct:emacs_globals	access:public
f_x_gtk_use_window_move	globals.h	/^  bool f_x_gtk_use_window_move;$/;"	m	struct:emacs_globals	access:public
f_x_mouse_click_focus_ignore_position	globals.h	/^  bool f_x_mouse_click_focus_ignore_position;$/;"	m	struct:emacs_globals	access:public
f_x_selection_timeout	globals.h	/^  EMACS_INT f_x_selection_timeout;$/;"	m	struct:emacs_globals	access:public
f_x_stretch_cursor_p	globals.h	/^  bool f_x_stretch_cursor_p;$/;"	m	struct:emacs_globals	access:public
f_x_underline_at_descent_line	globals.h	/^  bool f_x_underline_at_descent_line;$/;"	m	struct:emacs_globals	access:public
f_x_use_underline_position_properties	globals.h	/^  bool f_x_use_underline_position_properties;$/;"	m	struct:emacs_globals	access:public
g	ftfont.c	/^  MFLTGlyph g;$/;"	m	struct:__anon126	file:	access:public
g	image.c	/^  int r, g, b;$/;"	m	struct:ct_color	file:	access:public
gamma	frame.h	/^  double gamma;$/;"	m	struct:frame	access:public
gamma_correct	dispextern.h	/^void gamma_correct (struct frame *, COLORREF *);$/;"	p	signature:(struct frame *, COLORREF *)
gamma_correct	dispextern.h	/^void gamma_correct (struct frame *, XColor *);$/;"	p	signature:(struct frame *, XColor *)
gamma_correct	w32fns.c	/^gamma_correct (struct frame *f, COLORREF *color)$/;"	f	signature:(struct frame *f, COLORREF *color)
gamma_correct	xfns.c	/^gamma_correct (struct frame *f, XColor *color)$/;"	f	signature:(struct frame *f, XColor *color)
GAP_BYTES_DFL	buffer.h	323;"	d
GAP_BYTES_MIN	buffer.h	328;"	d
GAP_END_ADDR	buffer.h	77;"	d
gap_left	insdel.c	/^gap_left (ptrdiff_t charpos, ptrdiff_t bytepos, bool newgap)$/;"	f	file:	signature:(ptrdiff_t charpos, ptrdiff_t bytepos, bool newgap)
gap_left	insdel.c	/^static void gap_left (ptrdiff_t, ptrdiff_t, bool);$/;"	p	file:
gap_len	region-cache.c	/^  ptrdiff_t gap_start, gap_len;$/;"	m	struct:region_cache	file:	access:public
gap_right	insdel.c	/^gap_right (ptrdiff_t charpos, ptrdiff_t bytepos)$/;"	f	file:	signature:(ptrdiff_t charpos, ptrdiff_t bytepos)
gap_right	insdel.c	/^static void gap_right (ptrdiff_t, ptrdiff_t);$/;"	p	file:
gap_size	buffer.h	/^    ptrdiff_t gap_size;		\/* Size of buffer's gap.  *\/$/;"	m	struct:buffer_text	access:public
GAP_SIZE	buffer.h	86;"	d
gap_start	region-cache.c	/^  ptrdiff_t gap_start, gap_len;$/;"	m	struct:region_cache	file:	access:public
garbaged	frame.h	/^  bool_bf garbaged : 1;$/;"	m	struct:frame	access:public
garbage_collection_messages	globals.h	947;"	d
garbage_collect_1	alloc.c	/^garbage_collect_1 (void *end)$/;"	f	file:	signature:(void *end)
gc	dispextern.h	/^  GC gc;$/;"	m	struct:face	access:public
gc	dispextern.h	/^  GC gc;$/;"	m	struct:glyph_string	access:public
gc	dispextern.h	/^  XGCValues *gc;$/;"	m	struct:glyph_string	access:public
GC	nsgui.h	/^typedef XGCValues * GC;$/;"	t
GC	w32gui.h	/^typedef XGCValues * GC;$/;"	t
gc	w32term.h	/^    XGCValues *gc;$/;"	m	struct:w32_output::relief	access:public
gc	xterm.h	/^    GC gc;$/;"	m	struct:x_output::relief	access:public
GCALIGNED	lisp.h	260;"	d
GCALIGNED	lisp.h	262;"	d
GCALIGNMENT	lisp.h	217;"	d
GCBackground	nsgui.h	93;"	d
GCBackground	w32gui.h	39;"	d
GCC_LINT	config.h	164;"	d
GCFont	nsgui.h	94;"	d
GCFont	w32gui.h	40;"	d
GCForeground	nsgui.h	92;"	d
GCForeground	w32gui.h	38;"	d
GCGraphicsExposures	xfaces.c	221;"	d	file:
GCGraphicsExposures	xfaces.c	225;"	d	file:
gcmarkbit	intervals.h	/^  bool_bf gcmarkbit : 1;$/;"	m	struct:interval	access:public
gcmarkbit	lisp.h	/^    bool_bf gcmarkbit : 1;$/;"	m	struct:Lisp_Free	access:public
gcmarkbit	lisp.h	/^    bool_bf gcmarkbit : 1;$/;"	m	struct:Lisp_Overlay	access:public
gcmarkbit	lisp.h	/^    bool_bf gcmarkbit : 1;$/;"	m	struct:Lisp_Save_Value	access:public
gcmarkbit	lisp.h	/^  bool_bf gcmarkbit : 1;$/;"	m	struct:Lisp_Marker	access:public
gcmarkbit	lisp.h	/^  bool_bf gcmarkbit : 1;$/;"	m	struct:Lisp_Misc_Any	access:public
gcmarkbit	lisp.h	/^  bool_bf gcmarkbit : 1;$/;"	m	struct:Lisp_Symbol	access:public
gcmarkbit	lisp.h	/^  bool_bf gcmarkbit : 1;$/;"	m	struct:Lisp_User_Ptr	access:public
gcmarkbits	alloc.c	/^  bits_word gcmarkbits[1 + CONS_BLOCK_SIZE \/ BITS_PER_BITS_WORD];$/;"	m	struct:cons_block	file:	access:public
gcmarkbits	alloc.c	/^  bits_word gcmarkbits[1 + FLOAT_BLOCK_SIZE \/ BITS_PER_BITS_WORD];$/;"	m	struct:float_block	file:	access:public
gconf_client	xsettings.c	/^static GConfClient *gconf_client;$/;"	v	file:
GCONF_FONT_NAME	xsettings.c	264;"	d	file:
GCONF_MONO_FONT	xsettings.c	263;"	d	file:
GCONF_TOOL_BAR_STYLE	xsettings.c	261;"	d	file:
gcs	ftxfont.c	/^  GC gcs[6];$/;"	m	struct:ftxfont_frame_data	file:	access:public
gcs_done	globals.h	835;"	d
GCTYPEBITS	lisp.h	69;"	d
gc_aset	lisp.h	/^gc_aset (Lisp_Object array, ptrdiff_t idx, Lisp_Object val)$/;"	f	signature:(Lisp_Object array, ptrdiff_t idx, Lisp_Object val)
gc_asize	lisp.h	/^gc_asize (Lisp_Object array)$/;"	f	signature:(Lisp_Object array)
GC_CHECK_MARKED_OBJECTS	alloc.c	79;"	d	file:
gc_cons_threshold	globals.h	833;"	d
GC_DEFAULT_THRESHOLD	alloc.c	220;"	d	file:
GC_FONT_ENTITY_P	font.h	/^GC_FONT_ENTITY_P (Lisp_Object x)$/;"	f	signature:(Lisp_Object x)
GC_FONT_OBJECT_P	font.h	/^GC_FONT_OBJECT_P (Lisp_Object x)$/;"	f	signature:(Lisp_Object x)
GC_FONT_SPEC_P	font.h	/^GC_FONT_SPEC_P (Lisp_Object x)$/;"	f	signature:(Lisp_Object x)
gc_in_progress	alloc.c	/^bool gc_in_progress;$/;"	v
GC_MALLOC_CHECK	alloc.c	88;"	d	file:
GC_POINTER_ALIGNMENT	alloc.c	4852;"	d	file:
gc_relative_threshold	alloc.c	/^EMACS_INT gc_relative_threshold;$/;"	v
GC_SETJMP_WORKS	config.h	185;"	d
GC_STRING_EXTRA	alloc.c	1781;"	d	file:
GC_STRING_OVERRUN_COOKIE_SIZE	alloc.c	1745;"	d	file:
GC_STRING_OVERRUN_COOKIE_SIZE	alloc.c	1750;"	d	file:
gc_sweep	alloc.c	/^gc_sweep (void)$/;"	f	file:	signature:(void)
gc_sweep	alloc.c	/^static void gc_sweep (void);$/;"	p	file:	signature:(void)
GC_XFONT_ENTITY	font.h	/^GC_XFONT_ENTITY (Lisp_Object p)$/;"	f	signature:(Lisp_Object p)
GC_XFONT_OBJECT	font.h	/^GC_XFONT_OBJECT (Lisp_Object p)$/;"	f	signature:(Lisp_Object p)
GC_XFONT_SPEC	font.h	/^GC_XFONT_SPEC (Lisp_Object p)$/;"	f	signature:(Lisp_Object p)
gdb_make_enums_visible	alloc.c	/^} const EXTERNALLY_VISIBLE gdb_make_enums_visible = {0};$/;"	v
gdefault_morecore	gmalloc.c	/^gdefault_morecore (ptrdiff_t increment)$/;"	f	file:	signature:(ptrdiff_t increment)
GDK_DISABLE_DEPRECATION_WARNINGS	config.h	188;"	d
GDK_KEY_g	gtkutil.c	131;"	d	file:
gdk_pixbuf_get_bits_per_sample	image.c	9136;"	d	file:
gdk_pixbuf_get_bits_per_sample	image.c	9154;"	d	file:
gdk_pixbuf_get_colorspace	image.c	9137;"	d	file:
gdk_pixbuf_get_colorspace	image.c	9155;"	d	file:
gdk_pixbuf_get_has_alpha	image.c	9138;"	d	file:
gdk_pixbuf_get_has_alpha	image.c	9156;"	d	file:
gdk_pixbuf_get_height	image.c	9139;"	d	file:
gdk_pixbuf_get_height	image.c	9157;"	d	file:
gdk_pixbuf_get_n_channels	image.c	9140;"	d	file:
gdk_pixbuf_get_n_channels	image.c	9158;"	d	file:
gdk_pixbuf_get_pixels	image.c	9141;"	d	file:
gdk_pixbuf_get_pixels	image.c	9159;"	d	file:
gdk_pixbuf_get_rowstride	image.c	9142;"	d	file:
gdk_pixbuf_get_rowstride	image.c	9160;"	d	file:
gdk_pixbuf_get_width	image.c	9143;"	d	file:
gdk_pixbuf_get_width	image.c	9161;"	d	file:
gdk_window_get_geometry	gtkutil.c	120;"	d	file:
gdk_window_get_screen	gtkutil.c	118;"	d	file:
GDK_WINDOW_XID	xterm.h	804;"	d
GDK_WINDOW_XID	xterm.h	805;"	d
gdk_x11_set_sm_client_id	xsmfns.c	42;"	d	file:
gdk_x11_window_lookup_for_display	gtkutil.c	122;"	d	file:
gdpy_def	gtkutil.c	/^static GdkDisplay *gdpy_def;$/;"	v	file:
general_insert_function	editfns.c	/^general_insert_function (void (*insert_func)$/;"	f	file:	signature:(void (*insert_func) (const char *, ptrdiff_t), void (*insert_from_string_func) (Lisp_Object, ptrdiff_t, ptrdiff_t, ptrdiff_t, ptrdiff_t, bool), bool inherit, ptrdiff_t nargs, Lisp_Object *args)
GenericReparseBuffer	w32.c	/^        } GenericReparseBuffer;$/;"	m	union:_REPARSE_DATA_BUFFER::__anon66	typeref:struct:_REPARSE_DATA_BUFFER::__anon66::__anon69	file:	access:public
gen_help_event	keyboard.c	/^gen_help_event (Lisp_Object help, Lisp_Object frame, Lisp_Object window,$/;"	f	signature:(Lisp_Object help, Lisp_Object frame, Lisp_Object window, Lisp_Object object, ptrdiff_t pos)
gen_help_event	keyboard.h	/^extern void gen_help_event (Lisp_Object, Lisp_Object, Lisp_Object,$/;"	p	signature:(Lisp_Object, Lisp_Object, Lisp_Object, Lisp_Object, ptrdiff_t)
geom	frame.h	/^  XRectangle geom, work;$/;"	m	struct:MonitorInfo	access:public
geometry	widgetprv.h	/^  char *	geometry;		\/* geometry spec of this frame *\/$/;"	m	struct:__anon98	access:public
GetAdaptersInfo_Proc	w32.c	/^typedef DWORD (WINAPI *GetAdaptersInfo_Proc) ($/;"	t	file:
GETADDRINFO_A_LIBS	Makefile	/^GETADDRINFO_A_LIBS = -lanl$/;"	m
getavg	w32.c	/^getavg (int which)$/;"	f	file:	signature:(int which)
GetCachedVolumeInformation	w32.c	/^GetCachedVolumeInformation (char * root_dir)$/;"	f	file:	signature:(char * root_dir)
GetCharWidth32W_Proc	w32font.c	/^typedef BOOL (WINAPI * GetCharWidth32W_Proc) ($/;"	t	file:
getchar_unlocked	sysstdio.h	68;"	d
getcjmp	keyboard.c	/^static sys_jmp_buf getcjmp;$/;"	v	file:
GetConsoleWindow_Proc	w32fns.c	/^typedef HWND (WINAPI *GetConsoleWindow_Proc) (void);$/;"	t	file:
getcwd	w32.c	/^getcwd (char *dir, int dirsize)$/;"	f	signature:(char *dir, int dirsize)
getc_unlocked	sysstdio.h	65;"	d
GetDiskFreeSpaceExA_Proc	w32fns.c	/^typedef BOOL (WINAPI *GetDiskFreeSpaceExA_Proc)$/;"	t	file:
GetDiskFreeSpaceExW_Proc	w32fns.c	/^typedef BOOL (WINAPI *GetDiskFreeSpaceExW_Proc)$/;"	t	file:
getegid	w32.c	/^getegid (void)$/;"	f	signature:(void)
getenv_internal	callproc.c	/^getenv_internal (const char *var, ptrdiff_t varlen, char **value,$/;"	f	file:	signature:(const char *var, ptrdiff_t varlen, char **value, ptrdiff_t *valuelen, Lisp_Object frame)
getenv_internal_1	callproc.c	/^getenv_internal_1 (const char *var, ptrdiff_t varlen, char **value,$/;"	f	file:	signature:(const char *var, ptrdiff_t varlen, char **value, ptrdiff_t *valuelen, Lisp_Object env)
getenv_TZ	conf_post.h	173;"	d
geteuid	w32.c	/^geteuid (void)$/;"	f	signature:(void)
GetFileSecurityA_Proc	w32.c	/^typedef BOOL (WINAPI * GetFileSecurityA_Proc) ($/;"	t	file:
GetFileSecurityW_Proc	w32.c	/^typedef BOOL (WINAPI * GetFileSecurityW_Proc) ($/;"	t	file:
getgid	w32.c	/^getgid (void)$/;"	f	signature:(void)
GetGlyphOutlineW_Proc	w32font.c	/^typedef DWORD (WINAPI * GetGlyphOutlineW_Proc) ($/;"	t	file:
getgrgid	w32.c	/^getgrgid (gid_t gid)$/;"	f	signature:(gid_t gid)
GETGROUPS_T	config.h	192;"	d
gethomedir	xrdb.c	/^gethomedir (void)$/;"	f	file:	signature:(void)
gethostbyname	w32.c	229;"	d	file:
gethostname	w32.c	228;"	d	file:
getitimer	w32proc.c	/^getitimer (int which, struct itimerval *value)$/;"	f	signature:(int which, struct itimerval *value)
GetLengthSid_Proc	w32.c	/^typedef DWORD (WINAPI * GetLengthSid_Proc) ($/;"	t	file:
getloadavg	w32.c	/^getloadavg (double loadavg[], int nelem)$/;"	f	signature:(double loadavg[], int nelem)
GETLOADAVG_LIBS	Makefile	/^GETLOADAVG_LIBS = $/;"	m
GETMARKBIT	alloc.c	2581;"	d	file:
GetMenuItemInfoA_Proc	w32menu.c	/^typedef BOOL (WINAPI * GetMenuItemInfoA_Proc) ($/;"	t	file:
GetModuleHandleExA_Proc	dynlib.c	/^typedef BOOL (WINAPI *GetModuleHandleExA_Proc) (DWORD,LPCSTR,HMODULE*);$/;"	t	file:
GetMonitorInfo_Proc	w32fns.c	/^typedef BOOL (WINAPI * GetMonitorInfo_Proc)$/;"	t	file:
GetNativeSystemInfo_Proc	w32.c	/^typedef void (WINAPI * GetNativeSystemInfo_Proc) ($/;"	t	file:
GetOutlineTextMetricsW_Proc	w32font.c	/^typedef UINT (WINAPI * GetOutlineTextMetricsW_Proc) ($/;"	t	file:
getpagesize	getpagesize.h	25;"	d
getpagesize	getpagesize.h	30;"	d
getpagesize	getpagesize.h	33;"	d
getpagesize	getpagesize.h	39;"	d
getpagesize	getpagesize.h	44;"	d
getpagesize	gmalloc.c	/^extern int getpagesize (void);$/;"	p	file:	signature:(void)
getpagesize	w32heap.c	/^getpagesize (void)$/;"	f	signature:(void)
getpeername	w32.c	231;"	d	file:
getpgrp	w32proc.c	/^getpgrp (void)$/;"	f	signature:(void)
GetProcessMemoryInfo_Proc	w32.c	/^typedef BOOL (WINAPI * GetProcessMemoryInfo_Proc) ($/;"	t	file:
GetProcessTimes_Proc	w32.c	/^typedef BOOL (WINAPI * GetProcessTimes_Proc) ($/;"	t	file:
GetProcessWorkingSetSize_Proc	w32.c	/^typedef BOOL (WINAPI * GetProcessWorkingSetSize_Proc) ($/;"	t	file:
getpwnam	w32.c	/^getpwnam (char *name)$/;"	f	signature:(char *name)
getpwuid	w32.c	/^getpwuid (unsigned uid)$/;"	f	signature:(unsigned uid)
getrlimit	w32heap.c	/^getrlimit (rlimit_resource_t rltype, struct rlimit *rlp)$/;"	f	signature:(rlimit_resource_t rltype, struct rlimit *rlp)
GetSecurityDescriptorDacl_Proc	w32.c	/^typedef BOOL (WINAPI *GetSecurityDescriptorDacl_Proc) ($/;"	t	file:
GetSecurityDescriptorGroup_Proc	w32.c	/^typedef BOOL (WINAPI * GetSecurityDescriptorGroup_Proc) ($/;"	t	file:
GetSecurityDescriptorOwner_Proc	w32.c	/^typedef BOOL (WINAPI * GetSecurityDescriptorOwner_Proc) ($/;"	t	file:
GetSecurityInfo_Proc	w32.c	/^typedef DWORD (WINAPI * GetSecurityInfo_Proc) ($/;"	t	file:
getservbyname	w32.c	230;"	d	file:
GetSidSubAuthorityCount_Proc	w32.c	/^typedef PUCHAR (WINAPI * GetSidSubAuthorityCount_Proc) ($/;"	t	file:
GetSidSubAuthority_Proc	w32.c	/^typedef PDWORD (WINAPI * GetSidSubAuthority_Proc) ($/;"	t	file:
getsockname	w32.c	235;"	d	file:
GetSystemTimes_Proc	w32.c	/^typedef BOOL (WINAPI * GetSystemTimes_Proc) ($/;"	t	file:
gettext	regex.c	118;"	d	file:
GetTextMetricsW_Proc	w32font.c	/^typedef BOOL (WINAPI * GetTextMetricsW_Proc) ($/;"	t	file:
gettext_noop	regex.c	124;"	d	file:
GetThreadTimes_Proc	w32proc.c	/^typedef BOOL (WINAPI *GetThreadTimes_Proc) ($/;"	t	file:
GETTIMEOFDAY_TIMEZONE	config.h	203;"	d
GetTitleBarInfo_Proc	w32fns.c	/^typedef BOOL (WINAPI * GetTitleBarInfo_Proc)$/;"	t	file:
GetTokenInformation_Proc	w32.c	/^typedef BOOL (WINAPI * GetTokenInformation_Proc) ($/;"	t	file:
getuid	w32.c	/^getuid (void)$/;"	f	signature:(void)
get_adapters_info	w32.c	/^get_adapters_info (PIP_ADAPTER_INFO pAdapterInfo, PULONG pOutBufLen)$/;"	f	file:	signature:(PIP_ADAPTER_INFO pAdapterInfo, PULONG pOutBufLen)
get_adstyle_property	ftfont.c	/^get_adstyle_property (FcPattern *p)$/;"	f	file:	signature:(FcPattern *p)
get_allocation_unit	w32common.h	30;"	d
GET_APPCOMMAND_LPARAM	w32term.h	621;"	d
get_backtrace	eval.c	/^get_backtrace (Lisp_Object array)$/;"	f	signature:(Lisp_Object array)
get_backtrace	lisp.h	/^extern void get_backtrace (Lisp_Object array);$/;"	p	signature:(Lisp_Object array)
get_backtrace_frame	eval.c	/^get_backtrace_frame (Lisp_Object nframes, Lisp_Object base)$/;"	f	file:	signature:(Lisp_Object nframes, Lisp_Object base)
get_backtrace_starting_at	eval.c	/^get_backtrace_starting_at (Lisp_Object base)$/;"	f	file:	signature:(Lisp_Object base)
get_bitmap	font.h	/^  int (*get_bitmap) (struct font *font, unsigned code,$/;"	m	struct:font_driver	access:public
get_bits_and_offset	xterm.c	/^get_bits_and_offset (unsigned long mask, int *bits, int *offset)$/;"	f	file:	signature:(unsigned long mask, int *bits, int *offset)
get_bloc	ralloc.c	/^get_bloc (size_t size)$/;"	f	file:	signature:(size_t size)
get_boot_time	filelock.c	/^get_boot_time (void)$/;"	f	file:	signature:(void)
get_boot_time_1	filelock.c	/^get_boot_time_1 (const char *filename, bool newest)$/;"	f	signature:(const char *filename, bool newest)
get_boot_time_1	filelock.c	/^static void get_boot_time_1 (const char *, bool);$/;"	p	file:	signature:(const char *, bool)
GET_BUFFER_SPACE	regex.c	1608;"	d	file:
GET_BUFFER_WINDOW	window.c	/^  GET_BUFFER_WINDOW,		    \/* Arg is buffer *\/$/;"	e	enum:window_loop	file:
get_byte_code_arity	bytecode.c	/^get_byte_code_arity (Lisp_Object args_template)$/;"	f	signature:(Lisp_Object args_template)
get_byte_code_arity	lisp.h	/^extern Lisp_Object get_byte_code_arity (Lisp_Object);$/;"	p	signature:(Lisp_Object)
get_cache	font.h	/^  Lisp_Object (*get_cache) (struct frame *f);$/;"	m	struct:font_driver	access:public
GET_CCL_CODE	ccl.c	746;"	d	file:
GET_CCL_RANGE	ccl.c	736;"	d	file:
GET_CHAR_AFTER	regex.c	192;"	d	file:
GET_CHAR_AFTER	regex.c	278;"	d	file:
GET_CHAR_BEFORE_2	regex.c	174;"	d	file:
GET_CHAR_BEFORE_2	regex.c	276;"	d	file:
get_char_face_and_encoding	xdisp.c	/^get_char_face_and_encoding (struct frame *f, int c, int face_id,$/;"	f	file:	signature:(struct frame *f, int c, int face_id, XChar2b *char2b, bool display_p)
get_char_glyph_code	xdisp.c	/^get_char_glyph_code (int c, struct font *font, XChar2b *char2b)$/;"	f	file:	signature:(int c, struct font *font, XChar2b *char2b)
get_char_property_and_overlay	intervals.h	/^Lisp_Object get_char_property_and_overlay (Lisp_Object, Lisp_Object,$/;"	p	signature:(Lisp_Object, Lisp_Object, Lisp_Object, Lisp_Object *)
get_char_property_and_overlay	textprop.c	/^get_char_property_and_overlay (Lisp_Object position, register Lisp_Object prop, Lisp_Object object, Lisp_Object *overlay)$/;"	f	signature:(Lisp_Object position, register Lisp_Object prop, Lisp_Object object, Lisp_Object *overlay)
get_char_width_32_w	w32font.c	/^get_char_width_32_w (HDC hdc, UINT uFirstChar, UINT uLastChar, LPINT lpBuffer)$/;"	f	file:	signature:(HDC hdc, UINT uFirstChar, UINT uLastChar, LPINT lpBuffer)
get_char_width_32_w	w32font.c	223;"	d	file:
get_child_status	sysdep.c	/^get_child_status (pid_t child, int *status, int options, bool interruptible)$/;"	f	file:	signature:(pid_t child, int *status, int options, bool interruptible)
get_composition_id	composite.c	/^get_composition_id (ptrdiff_t charpos, ptrdiff_t bytepos, ptrdiff_t nchars,$/;"	f	signature:(ptrdiff_t charpos, ptrdiff_t bytepos, ptrdiff_t nchars, Lisp_Object prop, Lisp_Object string)
get_composition_id	composite.h	/^extern ptrdiff_t get_composition_id (ptrdiff_t, ptrdiff_t, ptrdiff_t,$/;"	p	signature:(ptrdiff_t, ptrdiff_t, ptrdiff_t, Lisp_Object, Lisp_Object)
get_composition_string_fn	w32fns.c	/^ImmGetCompositionString_Proc get_composition_string_fn = NULL;$/;"	v
get_contiguous_space	gmalloc.c	/^get_contiguous_space (ptrdiff_t size, void *position)$/;"	f	file:	signature:(ptrdiff_t size, void *position)
get_current_wm_state	xterm.c	/^get_current_wm_state (struct frame *f,$/;"	f	file:	signature:(struct frame *f, Window window, int *size_state, bool *sticky)
get_current_wm_state	xterm.c	/^static bool get_current_wm_state (struct frame *, Window, int *, bool *);$/;"	p	file:	signature:(struct frame *, Window, int *, bool *)
get_data_end	w32heap.h	/^extern unsigned char *get_data_end (void);$/;"	p	signature:(void)
get_data_start	w32heap.h	/^extern unsigned char *get_data_start (void);$/;"	p	signature:(void)
get_default_char_pixel_size	widget.c	/^get_default_char_pixel_size (EmacsFrame ew, int *pixel_width, int *pixel_height)$/;"	f	file:	signature:(EmacsFrame ew, int *pixel_width, int *pixel_height)
get_dialog_title	gtkutil.c	/^get_dialog_title (char key)$/;"	f	file:	signature:(char key)
get_dll_version	w32fns.c	/^get_dll_version (const char *dll_name)$/;"	f	file:	signature:(const char *dll_name)
get_doc_string	doc.c	/^get_doc_string (Lisp_Object filepos, bool unibyte, bool definition)$/;"	f	signature:(Lisp_Object filepos, bool unibyte, bool definition)
get_doc_string	lisp.h	/^extern Lisp_Object get_doc_string (Lisp_Object, bool, bool);$/;"	p	signature:(Lisp_Object, bool, bool)
get_doc_string_buffer	doc.c	/^static char *get_doc_string_buffer;$/;"	v	file:
get_doc_string_buffer_size	doc.c	/^static ptrdiff_t get_doc_string_buffer_size;$/;"	v	file:
get_environ_db	xrdb.c	/^get_environ_db (void)$/;"	f	file:	signature:(void)
get_fallback	xrdb.c	/^get_fallback (Display *display)$/;"	f	file:	signature:(Display *display)
get_file_owner_and_group	w32.c	/^get_file_owner_and_group (PSECURITY_DESCRIPTOR psd, struct stat *st)$/;"	f	file:	signature:(PSECURITY_DESCRIPTOR psd, struct stat *st)
get_file_security	w32.c	/^get_file_security (const char *lpFileName,$/;"	f	file:	signature:(const char *lpFileName, SECURITY_INFORMATION RequestedInformation, PSECURITY_DESCRIPTOR pSecurityDescriptor, DWORD nLength, LPDWORD lpnLengthNeeded)
get_file_security_desc_by_handle	w32.c	/^get_file_security_desc_by_handle (HANDLE h)$/;"	f	file:	signature:(HANDLE h)
get_file_security_desc_by_name	w32.c	/^get_file_security_desc_by_name (const char *fname)$/;"	f	file:	signature:(const char *fname)
get_font_ascent_descent	dispextern.h	/^extern void get_font_ascent_descent (struct font *, int *, int *);$/;"	p	signature:(struct font *, int *, int *)
get_font_ascent_descent	xdisp.c	/^get_font_ascent_descent (struct font *font, int *ascent, int *descent)$/;"	f	signature:(struct font *font, int *ascent, int *descent)
get_font_prop_index	font.c	/^get_font_prop_index (Lisp_Object key)$/;"	f	file:	signature:(Lisp_Object key)
get_font_prop_index	font.c	/^static int get_font_prop_index (Lisp_Object);$/;"	p	file:
get_frame	w32inevt.c	/^get_frame (void)$/;"	f	file:	signature:(void)
get_frame_dc	w32term.h	/^extern HDC get_frame_dc (struct frame * f);$/;"	p	signature:(struct frame * f)
get_frame_dc	w32xfns.c	/^get_frame_dc (struct frame *f)$/;"	f	signature:(struct frame *f)
get_frame_param	frame.c	/^get_frame_param (register struct frame *frame, Lisp_Object prop)$/;"	f	signature:(register struct frame *frame, Lisp_Object prop)
get_frame_param	lisp.h	/^extern Lisp_Object get_frame_param (struct frame *, Lisp_Object);$/;"	p	signature:(struct frame *, Lisp_Object)
get_fringe_bitmap_data	fringe.c	/^get_fringe_bitmap_data (int bn)$/;"	f	file:	signature:(int bn)
get_fringe_bitmap_name	fringe.c	/^get_fringe_bitmap_name (int bn)$/;"	f	file:	signature:(int bn)
GET_FROM_BUFFER	dispextern.h	/^  GET_FROM_BUFFER = 0,$/;"	e	enum:it_method
GET_FROM_C_STRING	dispextern.h	/^  GET_FROM_C_STRING,$/;"	e	enum:it_method
GET_FROM_DISPLAY_VECTOR	dispextern.h	/^  GET_FROM_DISPLAY_VECTOR,$/;"	e	enum:it_method
GET_FROM_IMAGE	dispextern.h	/^  GET_FROM_IMAGE,$/;"	e	enum:it_method
GET_FROM_STRETCH	dispextern.h	/^  GET_FROM_STRETCH,$/;"	e	enum:it_method
GET_FROM_STRING	dispextern.h	/^  GET_FROM_STRING,$/;"	e	enum:it_method
GET_FROM_XWIDGET	dispextern.h	/^  GET_FROM_XWIDGET,$/;"	e	enum:it_method
get_future_frame_param	frame.c	/^get_future_frame_param (Lisp_Object parameter,$/;"	f	file:	signature:(Lisp_Object parameter, Lisp_Object supplied_parms, char *current_value)
get_glyph_face_and_encoding	xdisp.c	/^get_glyph_face_and_encoding (struct frame *f, struct glyph *glyph,$/;"	f	file:	signature:(struct frame *f, struct glyph *glyph, XChar2b *char2b)
get_glyph_outline_w	w32font.c	/^get_glyph_outline_w (HDC hdc, UINT uChar, UINT uFormat, LPGLYPHMETRICS lpgm,$/;"	f	file:	signature:(HDC hdc, UINT uChar, UINT uFormat, LPGLYPHMETRICS lpgm, DWORD cbBuffer, LPVOID lpvBuffer, const MAT2 *lpmat2)
get_glyph_outline_w	w32font.c	221;"	d	file:
get_glyph_overhangs	dispextern.h	/^  void (*get_glyph_overhangs) (struct glyph *glyph, struct frame *f,$/;"	m	struct:redisplay_interface	access:public
get_glyph_string_clip_rect	dispextern.h	/^extern void get_glyph_string_clip_rect (struct glyph_string *,$/;"	p	signature:(struct glyph_string *, NativeRectangle *nr)
get_glyph_string_clip_rect	xdisp.c	/^get_glyph_string_clip_rect (struct glyph_string *s, NativeRectangle *nr)$/;"	f	signature:(struct glyph_string *s, NativeRectangle *nr)
get_glyph_string_clip_rects	dispextern.h	/^extern int get_glyph_string_clip_rects (struct glyph_string *,$/;"	p	signature:(struct glyph_string *, NativeRectangle *, int)
get_glyph_string_clip_rects	xdisp.c	/^get_glyph_string_clip_rects (struct glyph_string *s, NativeRectangle *rects, int n)$/;"	f	signature:(struct glyph_string *s, NativeRectangle *rects, int n)
GET_HASH_TABLE	ccl.c	47;"	d	file:
get_ime_context_fn	w32fns.c	/^ImmGetContext_Proc get_ime_context_fn = NULL;$/;"	v
get_input_pending	keyboard.c	/^get_input_pending (int flags)$/;"	f	file:	signature:(int flags)
get_input_pending	keyboard.c	/^static bool get_input_pending (int);$/;"	p	file:	signature:(int)
GET_INTERVAL_COUNT	regex.c	1912;"	d	file:
GET_INTERVAL_OBJECT	intervals.h	135;"	d
get_it_property	xdisp.c	/^get_it_property (struct it *it, Lisp_Object prop)$/;"	f	file:	signature:(struct it *it, Lisp_Object prop)
get_it_property	xdisp.c	/^static Lisp_Object get_it_property (struct it *, Lisp_Object);$/;"	p	file:	signature:(struct it *, Lisp_Object)
get_keyelt	keymap.c	/^get_keyelt (Lisp_Object object, bool autoload)$/;"	f	file:	signature:(Lisp_Object object, bool autoload)
get_keyelt	keymap.c	/^static Lisp_Object get_keyelt (Lisp_Object, bool);$/;"	p	file:
get_keymap	keymap.c	/^get_keymap (Lisp_Object object, bool error_if_not_keymap, bool autoload)$/;"	f	signature:(Lisp_Object object, bool error_if_not_keymap, bool autoload)
get_keymap	keymap.h	/^extern Lisp_Object get_keymap (Lisp_Object, bool, bool);$/;"	p	signature:(Lisp_Object, bool, bool)
get_key_arg	fns.c	/^get_key_arg (Lisp_Object key, ptrdiff_t nargs, Lisp_Object *args, char *used)$/;"	f	file:	signature:(Lisp_Object key, ptrdiff_t nargs, Lisp_Object *args, char *used)
get_lcid	w32proc.c	/^get_lcid (const char *locale_name)$/;"	f	file:	signature:(const char *locale_name)
get_lcid_callback	w32proc.c	/^get_lcid_callback (LPTSTR locale_num_str)$/;"	f	file:	signature:(LPTSTR locale_num_str)
get_leaf_windows	window.c	/^get_leaf_windows (struct window *w, struct window **flat, ptrdiff_t i)$/;"	f	file:	signature:(struct window *w, struct window **flat, ptrdiff_t i)
get_leaf_windows	window.c	/^static ptrdiff_t get_leaf_windows (struct window *, struct window **,$/;"	p	file:	signature:(struct window *, struct window **, ptrdiff_t)
get_length_sid	w32.c	/^get_length_sid (PSID sid)$/;"	f	file:	signature:(PSID sid)
get_lface_attributes	xfaces.c	/^get_lface_attributes (struct frame *f, Lisp_Object face_name,$/;"	f	file:	signature:(struct frame *f, Lisp_Object face_name, Lisp_Object attrs[LFACE_VECTOR_SIZE], bool signal_p, struct named_merge_point *named_merge_points)
get_lface_attributes_no_remap	xfaces.c	/^get_lface_attributes_no_remap (struct frame *f, Lisp_Object face_name,$/;"	f	file:	signature:(struct frame *f, Lisp_Object face_name, Lisp_Object attrs[LFACE_VECTOR_SIZE], bool signal_p)
get_lim_data	vm-limit.c	/^get_lim_data (void)$/;"	f	file:	signature:(void)
get_lisp_to_sockaddr_size	process.c	/^get_lisp_to_sockaddr_size (Lisp_Object address, int *familyp)$/;"	f	file:	signature:(Lisp_Object address, int *familyp)
get_local_map	intervals.c	/^get_local_map (ptrdiff_t position, struct buffer *buffer, Lisp_Object type)$/;"	f	signature:(ptrdiff_t position, struct buffer *buffer, Lisp_Object type)
get_local_map	intervals.h	/^extern Lisp_Object get_local_map (ptrdiff_t, struct buffer *, Lisp_Object);$/;"	p	signature:(ptrdiff_t, struct buffer *, Lisp_Object)
get_logical_cursor_bitmap	fringe.c	/^get_logical_cursor_bitmap (struct window *w, Lisp_Object cursor)$/;"	f	file:	signature:(struct window *w, Lisp_Object cursor)
get_logical_fringe_bitmap	fringe.c	/^get_logical_fringe_bitmap (struct window *w, Lisp_Object bitmap, int right_p, int partial_p)$/;"	f	file:	signature:(struct window *w, Lisp_Object bitmap, int right_p, int partial_p)
get_long_basename	w32.c	/^get_long_basename (char * name, char * buf, int size)$/;"	f	file:	signature:(char * name, char * buf, int size)
get_menu_item_info	w32menu.c	/^GetMenuItemInfoA_Proc get_menu_item_info = GetMenuItemInfoA;$/;"	v
get_menu_item_info	w32menu.c	/^GetMenuItemInfoA_Proc get_menu_item_info = NULL;$/;"	v
get_minibuffer	lisp.h	/^extern Lisp_Object get_minibuffer (EMACS_INT);$/;"	p	signature:(EMACS_INT)
get_minibuffer	minibuf.c	/^get_minibuffer (EMACS_INT depth)$/;"	f	signature:(EMACS_INT depth)
GET_MODULE_HANDLE_EX_FLAG_FROM_ADDRESS	dynlib.c	49;"	d	file:
GET_MODULE_HANDLE_EX_FLAG_UNCHANGED_REFCOUNT	dynlib.c	52;"	d	file:
get_monitor_info_fn	w32fns.c	/^GetMonitorInfo_Proc get_monitor_info_fn = NULL;$/;"	v
get_named_terminal	termhooks.h	/^extern struct terminal *get_named_terminal (const char *);$/;"	p	signature:(const char *)
get_named_terminal	terminal.c	/^get_named_terminal (const char *name)$/;"	f	signature:(const char *name)
get_name_and_id	w32.c	/^get_name_and_id (PSECURITY_DESCRIPTOR psd, unsigned *id, char *nm, int what)$/;"	f	file:	signature:(PSECURITY_DESCRIPTOR psd, unsigned *id, char *nm, int what)
get_native_system_info	w32.c	/^get_native_system_info (LPSYSTEM_INFO lpSystemInfo)$/;"	f	file:	signature:(LPSYSTEM_INFO lpSystemInfo)
get_next_display_element	xdisp.c	/^get_next_display_element (struct it *it)$/;"	f	file:	signature:(struct it *it)
get_next_display_element	xdisp.c	/^static bool get_next_display_element (struct it *);$/;"	p	file:	signature:(struct it *)
GET_NEXT_DISPLAY_ELEMENT	xdisp.c	6824;"	d	file:
get_next_element	xdisp.c	/^static next_element_function const get_next_element[NUM_IT_METHODS] =$/;"	v	file:
get_next_msg	w32term.h	/^extern BOOL get_next_msg (W32Msg *, BOOL);$/;"	p	signature:(W32Msg *, BOOL)
get_next_msg	w32xfns.c	/^get_next_msg (W32Msg * lpmsg, BOOL bWait)$/;"	f	signature:(W32Msg * lpmsg, BOOL bWait)
get_outline_metrics_w	w32font.c	/^get_outline_metrics_w(HDC hdc, UINT cbData, LPOUTLINETEXTMETRICW lpotmw)$/;"	f	file:	signature:(HDC hdc, UINT cbData, LPOUTLINETEXTMETRICW lpotmw)
get_outline_metrics_w	w32font.c	219;"	d	file:
GET_OVERLAYS_AT	buffer.h	1159;"	d
get_overlay_arrow_glyph_row	xdisp.c	/^get_overlay_arrow_glyph_row (struct window *w, Lisp_Object overlay_arrow_string)$/;"	f	file:	signature:(struct window *w, Lisp_Object overlay_arrow_string)
get_overlay_strings	xdisp.c	/^get_overlay_strings (struct it *it, ptrdiff_t charpos)$/;"	f	file:	signature:(struct it *it, ptrdiff_t charpos)
get_overlay_strings	xdisp.c	/^static bool get_overlay_strings (struct it *, ptrdiff_t);$/;"	p	file:	signature:(struct it *, ptrdiff_t)
get_overlay_strings_1	xdisp.c	/^get_overlay_strings_1 (struct it *it, ptrdiff_t charpos, bool compute_stop_p)$/;"	f	file:	signature:(struct it *it, ptrdiff_t charpos, bool compute_stop_p)
get_overlay_strings_1	xdisp.c	/^static bool get_overlay_strings_1 (struct it *, ptrdiff_t, bool);$/;"	p	file:	signature:(struct it *, ptrdiff_t, bool)
get_page_size	w32common.h	29;"	d
get_per_char_metric	xdisp.c	/^get_per_char_metric (struct font *font, XChar2b *char2b)$/;"	f	file:	signature:(struct font *font, XChar2b *char2b)
get_phys_cursor_geometry	dispextern.h	/^extern void get_phys_cursor_geometry (struct window *, struct glyph_row *,$/;"	p	signature:(struct window *, struct glyph_row *, struct glyph *, int *, int *, int *)
get_phys_cursor_geometry	xdisp.c	/^get_phys_cursor_geometry (struct window *w, struct glyph_row *row,$/;"	f	signature:(struct window *w, struct glyph_row *row, struct glyph *glyph, int *xp, int *yp, int *heightp)
get_phys_cursor_glyph	window.c	/^get_phys_cursor_glyph (struct window *w)$/;"	f	signature:(struct window *w)
get_phys_cursor_glyph	window.h	/^struct glyph *get_phys_cursor_glyph (struct window *w);$/;"	p	signature:(struct window *w)
GET_PIXEL	image.c	69;"	d	file:
GET_PIXEL	image.c	84;"	d	file:
GET_PIXEL	image.c	97;"	d	file:
get_process	process.c	/^get_process (register Lisp_Object name)$/;"	f	file:	signature:(register Lisp_Object name)
get_processor_type	w32common.h	31;"	d
get_process_memory_info	w32.c	/^get_process_memory_info (HANDLE h_proc,$/;"	f	file:	signature:(HANDLE h_proc, PPROCESS_MEMORY_COUNTERS mem_counters, DWORD bufsize)
get_process_times_fn	w32.c	/^GetProcessTimes_Proc get_process_times_fn = NULL;$/;"	v
get_process_working_set_size	w32.c	/^get_process_working_set_size (HANDLE h_proc,$/;"	f	file:	signature:(HANDLE h_proc, PSIZE_T minrss, PSIZE_T maxrss)
get_property_and_range	intervals.c	/^get_property_and_range (ptrdiff_t pos, Lisp_Object prop, Lisp_Object *val,$/;"	f	signature:(ptrdiff_t pos, Lisp_Object prop, Lisp_Object *val, ptrdiff_t *start, ptrdiff_t *end, Lisp_Object object)
get_property_and_range	intervals.h	/^extern bool get_property_and_range (ptrdiff_t, Lisp_Object, Lisp_Object *,$/;"	p	signature:(ptrdiff_t, Lisp_Object, Lisp_Object *, ptrdiff_t *, ptrdiff_t *, Lisp_Object)
get_prop_window	xsettings.c	/^get_prop_window (struct x_display_info *dpyinfo)$/;"	f	file:	signature:(struct x_display_info *dpyinfo)
get_random	lisp.h	/^extern EMACS_INT get_random (void);$/;"	p	signature:(void)
get_random	sysdep.c	/^get_random (void)$/;"	f	signature:(void)
get_rid	w32.c	/^get_rid (PSID sid)$/;"	f	file:	signature:(PSID sid)
get_rid	w32.c	/^static DWORD get_rid (PSID);$/;"	p	file:
get_section_info	unexw32.c	/^get_section_info (file_data *p_infile)$/;"	f	signature:(file_data *p_infile)
get_section_info	unexw32.c	/^void get_section_info (file_data *p_file);$/;"	p	file:	signature:(file_data *p_file)
get_security_descriptor_dacl	w32.c	/^get_security_descriptor_dacl (PSECURITY_DESCRIPTOR pSecurityDescriptor,$/;"	f	file:	signature:(PSECURITY_DESCRIPTOR pSecurityDescriptor, LPBOOL lpbDaclPresent, PACL *pDacl, LPBOOL lpbDaclDefaulted)
get_security_descriptor_group	w32.c	/^get_security_descriptor_group (PSECURITY_DESCRIPTOR pSecurityDescriptor,$/;"	f	file:	signature:(PSECURITY_DESCRIPTOR pSecurityDescriptor, PSID *pGroup, LPBOOL lpbGroupDefaulted)
get_security_descriptor_owner	w32.c	/^get_security_descriptor_owner (PSECURITY_DESCRIPTOR pSecurityDescriptor,$/;"	f	file:	signature:(PSECURITY_DESCRIPTOR pSecurityDescriptor, PSID *pOwner, LPBOOL lpbOwnerDefaulted)
get_security_info	w32.c	/^get_security_info (HANDLE handle,$/;"	f	file:	signature:(HANDLE handle, SE_OBJECT_TYPE ObjectType, SECURITY_INFORMATION SecurityInfo, PSID *ppsidOwner, PSID *ppsidGroup, PACL *ppDacl, PACL *ppSacl, PSECURITY_DESCRIPTOR *ppSecurityDescriptor)
get_sid_sub_authority	w32.c	/^get_sid_sub_authority (PSID pSid, DWORD n)$/;"	f	file:	signature:(PSID pSid, DWORD n)
get_sid_sub_authority_count	w32.c	/^get_sid_sub_authority_count (PSID pSid)$/;"	f	file:	signature:(PSID pSid)
get_specified_cursor_type	xdisp.c	/^get_specified_cursor_type (Lisp_Object arg, int *width)$/;"	f	file:	signature:(Lisp_Object arg, int *width)
get_spec_bg_or_alpha_as_argb	image.c	/^get_spec_bg_or_alpha_as_argb (struct image *img,$/;"	f	file:	signature:(struct image *img, struct frame *f)
get_system_app	xrdb.c	/^get_system_app (const char *class)$/;"	f	file:	signature:(const char *class)
get_system_times	w32.c	/^get_system_times (LPFILETIME lpIdleTime,$/;"	f	file:	signature:(LPFILETIME lpIdleTime, LPFILETIME lpKernelTime, LPFILETIME lpUserTime)
GET_TEMP_CHARSET_WORK_DECODER	charset.c	198;"	d	file:
GET_TEMP_CHARSET_WORK_ENCODER	charset.c	188;"	d	file:
get_text_metrics_w	w32font.c	/^get_text_metrics_w(HDC hdc, LPTEXTMETRICW lptmw)$/;"	f	file:	signature:(HDC hdc, LPTEXTMETRICW lptmw)
get_text_metrics_w	w32font.c	220;"	d	file:
get_title_bar_info_fn	w32fns.c	/^GetTitleBarInfo_Proc get_title_bar_info_fn = NULL;$/;"	v
get_token_information	w32.c	/^get_token_information (HANDLE TokenHandle,$/;"	f	file:	signature:(HANDLE TokenHandle, TOKEN_INFORMATION_CLASS TokenInformationClass, LPVOID TokenInformation, DWORD TokenInformationLength, PDWORD ReturnLength)
get_tool_bar_item	xdisp.c	/^get_tool_bar_item (struct frame *f, int x, int y, struct glyph **glyph,$/;"	f	file:	signature:(struct frame *f, int x, int y, struct glyph **glyph, int *hpos, int *vpos, int *prop_idx)
get_translation	coding.c	/^get_translation (Lisp_Object trans, int *buf, int *buf_end, ptrdiff_t *nchars)$/;"	f	file:	signature:(Lisp_Object trans, int *buf, int *buf_end, ptrdiff_t *nchars)
GET_TRANSLATION_TABLE	character.h	686;"	d
get_translation_table	coding.c	/^get_translation_table (Lisp_Object attrs, bool encodep, int *max_lookup)$/;"	f	file:	signature:(Lisp_Object attrs, bool encodep, int *max_lookup)
get_truename_buffer	buffer.c	/^get_truename_buffer (register Lisp_Object filename)$/;"	f	signature:(register Lisp_Object filename)
get_truename_buffer	lisp.h	/^extern Lisp_Object get_truename_buffer (Lisp_Object);$/;"	p	signature:(Lisp_Object)
get_tty_size	dispextern.h	/^void get_tty_size (int, int *, int *);$/;"	p	signature:(int, int *, int *)
get_tty_size	sysdep.c	/^get_tty_size (int fd, int *widthp, int *heightp)$/;"	f	signature:(int fd, int *widthp, int *heightp)
get_up_time	sysdep.c	/^get_up_time (void)$/;"	f	file:	signature:(void)
get_user_app	xrdb.c	/^get_user_app (const char *class)$/;"	f	file:	signature:(const char *class)
get_user_db	xrdb.c	/^get_user_db (Display *display)$/;"	f	file:	signature:(Display *display)
get_utf8_string	gtkutil.c	/^get_utf8_string (const char *str)$/;"	f	file:	signature:(const char *str)
get_variation_glyphs	font.h	/^  int (*get_variation_glyphs) (struct font *font,$/;"	m	struct:font_driver	access:public
get_visually_first_element	xdisp.c	/^get_visually_first_element (struct it *it)$/;"	f	file:	signature:(struct it *it)
get_visually_first_element	xdisp.c	/^static void get_visually_first_element (struct it *);$/;"	p	file:	signature:(struct it *)
get_volume_info	w32.c	/^get_volume_info (const char * name, const char ** pPath)$/;"	f	file:	signature:(const char * name, const char ** pPath)
get_w32_major_version	w32common.h	32;"	d
get_w32_minor_version	w32common.h	33;"	d
GET_WHEEL_DELTA_WPARAM	w32term.c	76;"	d	file:
get_window_cursor_type	xdisp.c	/^get_window_cursor_type (struct window *w, struct glyph *glyph, int *width,$/;"	f	file:	signature:(struct window *w, struct glyph *glyph, int *width, bool *active_cursor)
get_window_points_and_markers	fileio.c	/^get_window_points_and_markers (void)$/;"	f	file:	signature:(void)
get_wm_chars	w32fns.c	/^get_wm_chars (HWND aWnd, int *buf, int buflen, int ignore_ctrl, int ctrl,$/;"	f	file:	signature:(HWND aWnd, int *buf, int buflen, int ignore_ctrl, int ctrl, int *ctrl_cnt, int *is_dead, int vk, int exp)
get_wm_shell	widget.c	/^get_wm_shell (Widget w)$/;"	f	file:	signature:(Widget w)
gfree_hook	gmalloc.c	/^static void (*__MALLOC_HOOK_VOLATILE gfree_hook) (void *);$/;"	v	file:
GID	w32.c	4813;"	d	file:
GifErrorString	image.c	7578;"	d	file:
GifErrorString	image.c	7584;"	d	file:
GIFLIB_MAJOR	image.c	7527;"	d	file:
GIFLIB_MINOR	image.c	7513;"	d	file:
GIFLIB_RELEASE	image.c	7516;"	d	file:
GIF_ALGORITHM	image.c	/^  GIF_ALGORITHM,$/;"	e	enum:gif_keyword_index	file:
GIF_ASCENT	image.c	/^  GIF_ASCENT,$/;"	e	enum:gif_keyword_index	file:
GIF_BACKGROUND	image.c	/^  GIF_BACKGROUND,$/;"	e	enum:gif_keyword_index	file:
gif_clear_image	image.c	/^gif_clear_image (struct frame *f, struct image *img)$/;"	f	file:	signature:(struct frame *f, struct image *img)
gif_clear_image	image.c	/^static void gif_clear_image (struct frame *f, struct image *img);$/;"	p	file:	signature:(struct frame *f, struct image *img)
gif_close	image.c	/^gif_close (GifFileType *gif, int *err)$/;"	f	file:	signature:(GifFileType *gif, int *err)
GIF_DATA	image.c	/^  GIF_DATA,$/;"	e	enum:gif_keyword_index	file:
GIF_FILE	image.c	/^  GIF_FILE,$/;"	e	enum:gif_keyword_index	file:
gif_format	image.c	/^static const struct image_keyword gif_format[GIF_LAST] =$/;"	v	typeref:struct:image_keyword	file:
GIF_HEURISTIC_MASK	image.c	/^  GIF_HEURISTIC_MASK,$/;"	e	enum:gif_keyword_index	file:
GIF_IMAGE	image.c	/^  GIF_IMAGE,$/;"	e	enum:gif_keyword_index	file:
gif_image_p	image.c	/^gif_image_p (Lisp_Object object)$/;"	f	file:	signature:(Lisp_Object object)
gif_image_p	image.c	/^static bool gif_image_p (Lisp_Object object);$/;"	p	file:	signature:(Lisp_Object object)
gif_keyword_index	image.c	/^enum gif_keyword_index$/;"	g	file:
GIF_LAST	image.c	/^  GIF_LAST$/;"	e	enum:gif_keyword_index	file:
gif_load	image.c	/^gif_load (struct frame *f, struct image *img)$/;"	f	file:	signature:(struct frame *f, struct image *img)
gif_load	image.c	/^static bool gif_load (struct frame *f, struct image *img);$/;"	p	file:	signature:(struct frame *f, struct image *img)
GIF_LOCAL_DESCRIPTOR_EXTENSION	image.c	7640;"	d	file:
GIF_MARGIN	image.c	/^  GIF_MARGIN,$/;"	e	enum:gif_keyword_index	file:
GIF_MASK	image.c	/^  GIF_MASK,$/;"	e	enum:gif_keyword_index	file:
gif_memory_source	image.c	/^gif_memory_source;$/;"	t	typeref:struct:__anon85	file:
gif_read_from_memory	image.c	/^gif_read_from_memory (GifFileType *file, GifByteType *buf, int len)$/;"	f	file:	signature:(GifFileType *file, GifByteType *buf, int len)
GIF_RELIEF	image.c	/^  GIF_RELIEF,$/;"	e	enum:gif_keyword_index	file:
GIF_TYPE	image.c	/^  GIF_TYPE,$/;"	e	enum:gif_keyword_index	file:
gif_type	image.c	/^static struct image_type gif_type =$/;"	v	typeref:struct:image_type	file:
GIVE_UP	xdisp.c	18406;"	d	file:
GIVE_UP	xdisp.c	19111;"	d	file:
GLIB_DISABLE_DEPRECATION_WARNINGS	config.h	206;"	d
GlobalMemoryStatusEx_Proc	w32.c	/^typedef BOOL (WINAPI * GlobalMemoryStatusEx_Proc) ($/;"	t	file:
GlobalMemoryStatus_Proc	w32.c	/^typedef BOOL (WINAPI * GlobalMemoryStatus_Proc) ($/;"	t	file:
globals	alloc.c	/^struct emacs_globals globals;$/;"	v	typeref:struct:emacs_globals
globals_of_gfilenotify	gfilenotify.c	/^globals_of_gfilenotify (void)$/;"	f	signature:(void)
globals_of_gfilenotify	lisp.h	/^extern void globals_of_gfilenotify (void);$/;"	p	signature:(void)
globals_of_kqueue	kqueue.c	/^globals_of_kqueue (void)$/;"	f	signature:(void)
globals_of_kqueue	lisp.h	/^extern void globals_of_kqueue (void);$/;"	p	signature:(void)
globals_of_w32	w32.c	/^globals_of_w32 (void)$/;"	f	signature:(void)
globals_of_w32	w32.h	/^extern void globals_of_w32 (void);$/;"	p	signature:(void)
globals_of_w32fns	w32fns.c	/^globals_of_w32fns (void)$/;"	f	signature:(void)
globals_of_w32fns	w32term.h	/^extern void globals_of_w32fns (void);$/;"	p	signature:(void)
globals_of_w32font	w32font.c	/^globals_of_w32font (void)$/;"	f	signature:(void)
globals_of_w32font	w32font.h	/^extern void globals_of_w32font (void);$/;"	p	signature:(void)
globals_of_w32menu	w32menu.c	/^globals_of_w32menu (void)$/;"	f	signature:(void)
globals_of_w32menu	w32term.h	/^extern void globals_of_w32menu (void);$/;"	p	signature:(void)
globals_of_w32notify	w32notify.c	/^globals_of_w32notify (void)$/;"	f	signature:(void)
globals_of_w32notify	w32term.h	/^extern void globals_of_w32notify (void);$/;"	p	signature:(void)
globals_of_w32select	w32select.c	/^globals_of_w32select (void)$/;"	f	signature:(void)
globals_of_w32select	w32select.h	/^extern void globals_of_w32select (void);$/;"	p	signature:(void)
global_code	syntax.h	/^  Lisp_Object global_code;		\/* Syntax code of current char.  *\/$/;"	m	struct:gl_state_s	access:public
global_env	emacs-module.c	/^static emacs_env *global_env;$/;"	v	file:
global_env_private	emacs-module.c	/^static struct emacs_env_private global_env_private;$/;"	v	typeref:struct:emacs_env_private	file:
global_gnutls_log_level	globals.h	837;"	d
global_lock	thread.c	/^static sys_mutex_t global_lock;$/;"	v	file:
global_map	keymap.c	/^Lisp_Object global_map;		\/* Default global key bindings.  *\/$/;"	v
global_memory_status	w32.c	/^global_memory_status (MEMORYSTATUS *buf)$/;"	f	file:	signature:(MEMORYSTATUS *buf)
global_memory_status_ex	w32.c	/^global_memory_status_ex (MEMORY_STATUS_EX *buf)$/;"	f	file:	signature:(MEMORY_STATUS_EX *buf)
GLOBAL_SOURCES	Makefile	/^GLOBAL_SOURCES = $(base_obj:.o=.c) $(NS_OBJC_OBJ:.o=.m) $(rust_srcdir)\/src\/*.rs$/;"	m
glyph	dispextern.h	/^struct glyph$/;"	s
GLYPH	dispextern.h	/^} GLYPH;$/;"	t	typeref:struct:__anon105
glyph::ascent	dispextern.h	/^  short ascent, descent;$/;"	m	struct:glyph	access:public
glyph::avoid_cursor_p	dispextern.h	/^  bool_bf avoid_cursor_p : 1;$/;"	m	struct:glyph	access:public
glyph::bidi_type	dispextern.h	/^  unsigned bidi_type : 3;$/;"	m	struct:glyph	access:public
glyph::charpos	dispextern.h	/^  ptrdiff_t charpos;$/;"	m	struct:glyph	access:public
glyph::descent	dispextern.h	/^  short ascent, descent;$/;"	m	struct:glyph	access:public
glyph::face_id	dispextern.h	/^  unsigned face_id : FACE_ID_BITS;$/;"	m	struct:glyph	access:public
glyph::font_type	dispextern.h	/^  unsigned font_type : 3;$/;"	m	struct:glyph	access:public
glyph::glyph_not_available_p	dispextern.h	/^  bool_bf glyph_not_available_p : 1;$/;"	m	struct:glyph	access:public
glyph::left_box_line_p	dispextern.h	/^  bool_bf left_box_line_p : 1;$/;"	m	struct:glyph	access:public
glyph::multibyte_p	dispextern.h	/^  bool_bf multibyte_p : 1;$/;"	m	struct:glyph	access:public
glyph::object	dispextern.h	/^  Lisp_Object object;$/;"	m	struct:glyph	access:public
glyph::overlaps_vertically_p	dispextern.h	/^  bool_bf overlaps_vertically_p : 1;$/;"	m	struct:glyph	access:public
glyph::padding_p	dispextern.h	/^  bool_bf padding_p : 1;$/;"	m	struct:glyph	access:public
glyph::pixel_width	dispextern.h	/^  short pixel_width;$/;"	m	struct:glyph	access:public
glyph::resolved_level	dispextern.h	/^  unsigned resolved_level : 7;$/;"	m	struct:glyph	access:public
glyph::right_box_line_p	dispextern.h	/^  bool_bf right_box_line_p : 1;$/;"	m	struct:glyph	access:public
glyph::slice	dispextern.h	/^  } slice;$/;"	m	struct:glyph	typeref:union:glyph::__anon107	access:public
glyph::type	dispextern.h	/^  unsigned type : 3;$/;"	m	struct:glyph	access:public
glyph::u	dispextern.h	/^  } u;$/;"	m	struct:glyph	typeref:union:glyph::__anon110	access:public
glyph::voffset	dispextern.h	/^  short voffset;$/;"	m	struct:glyph	access:public
glyph::__anon107::cmp	dispextern.h	/^    struct { int from, to; } cmp;$/;"	m	union:glyph::__anon107	typeref:struct:glyph::__anon107::__anon108	access:public
glyph::__anon107::glyphless	dispextern.h	/^    } glyphless;$/;"	m	union:glyph::__anon107	typeref:struct:glyph::__anon107::__anon109	access:public
glyph::__anon107::img	dispextern.h	/^    struct glyph_slice img;$/;"	m	union:glyph::__anon107	typeref:struct:glyph::__anon107::glyph_slice	access:public
glyph::__anon107::__anon108::from	dispextern.h	/^    struct { int from, to; } cmp;$/;"	m	struct:glyph::__anon107::__anon108	access:public
glyph::__anon107::__anon108::to	dispextern.h	/^    struct { int from, to; } cmp;$/;"	m	struct:glyph::__anon107::__anon108	access:public
glyph::__anon107::__anon109::lower_xoff	dispextern.h	/^      short lower_xoff, lower_yoff;$/;"	m	struct:glyph::__anon107::__anon109	access:public
glyph::__anon107::__anon109::lower_yoff	dispextern.h	/^      short lower_xoff, lower_yoff;$/;"	m	struct:glyph::__anon107::__anon109	access:public
glyph::__anon107::__anon109::upper_xoff	dispextern.h	/^      short upper_xoff, upper_yoff;$/;"	m	struct:glyph::__anon107::__anon109	access:public
glyph::__anon107::__anon109::upper_yoff	dispextern.h	/^      short upper_xoff, upper_yoff;$/;"	m	struct:glyph::__anon107::__anon109	access:public
glyph::__anon110::ch	dispextern.h	/^    unsigned ch;$/;"	m	union:glyph::__anon110	access:public
glyph::__anon110::cmp	dispextern.h	/^    } cmp;$/;"	m	union:glyph::__anon110	typeref:struct:glyph::__anon110::__anon111	access:public
glyph::__anon110::glyphless	dispextern.h	/^    } glyphless;$/;"	m	union:glyph::__anon110	typeref:struct:glyph::__anon110::__anon113	access:public
glyph::__anon110::img_id	dispextern.h	/^    int img_id;$/;"	m	union:glyph::__anon110	access:public
glyph::__anon110::stretch	dispextern.h	/^    stretch;$/;"	m	union:glyph::__anon110	typeref:struct:glyph::__anon110::__anon112	access:public
glyph::__anon110::val	dispextern.h	/^    unsigned val;$/;"	m	union:glyph::__anon110	access:public
glyph::__anon110::xwidget	dispextern.h	/^    struct xwidget *xwidget;$/;"	m	union:glyph::__anon110	typeref:struct:glyph::__anon110::xwidget	access:public
glyph::__anon110::__anon111::automatic	dispextern.h	/^      bool_bf automatic : 1;$/;"	m	struct:glyph::__anon110::__anon111	access:public
glyph::__anon110::__anon111::id	dispextern.h	/^      unsigned id    : 31;$/;"	m	struct:glyph::__anon110::__anon111	access:public
glyph::__anon110::__anon112::ascent	dispextern.h	/^      unsigned ascent  : 16;$/;"	m	struct:glyph::__anon110::__anon112	access:public
glyph::__anon110::__anon112::height	dispextern.h	/^      unsigned height  : 16;$/;"	m	struct:glyph::__anon110::__anon112	access:public
glyph::__anon110::__anon113::ch	dispextern.h	/^      unsigned ch : 25;$/;"	m	struct:glyph::__anon110::__anon113	access:public
glyph::__anon110::__anon113::for_no_font	dispextern.h	/^      bool_bf for_no_font : 1;$/;"	m	struct:glyph::__anon110::__anon113	access:public
glyph::__anon110::__anon113::len	dispextern.h	/^      unsigned len : 4;$/;"	m	struct:glyph::__anon110::__anon113	access:public
glyph::__anon110::__anon113::method	dispextern.h	/^      unsigned method : 2;$/;"	m	struct:glyph::__anon110::__anon113	access:public
glyphless	dispextern.h	/^    } glyphless;$/;"	m	union:glyph::__anon107	typeref:struct:glyph::__anon107::__anon109	access:public
glyphless	dispextern.h	/^    } glyphless;$/;"	m	union:glyph::__anon110	typeref:struct:glyph::__anon110::__anon113	access:public
GLYPHLESS_DISPLAY_ACRONYM	dispextern.h	/^    GLYPHLESS_DISPLAY_ACRONYM,$/;"	e	enum:glyphless_display_method
GLYPHLESS_DISPLAY_EMPTY_BOX	dispextern.h	/^    GLYPHLESS_DISPLAY_EMPTY_BOX,$/;"	e	enum:glyphless_display_method
GLYPHLESS_DISPLAY_HEX_CODE	dispextern.h	/^    GLYPHLESS_DISPLAY_HEX_CODE$/;"	e	enum:glyphless_display_method
glyphless_display_method	dispextern.h	/^enum glyphless_display_method$/;"	g
GLYPHLESS_DISPLAY_THIN_SPACE	dispextern.h	/^    GLYPHLESS_DISPLAY_THIN_SPACE,$/;"	e	enum:glyphless_display_method
GLYPHLESS_GLYPH	dispextern.h	/^  GLYPHLESS_GLYPH,$/;"	e	enum:glyph_type
glyphless_method	dispextern.h	/^  enum glyphless_display_method glyphless_method;$/;"	m	struct:it	typeref:enum:it::glyphless_display_method	access:public
glyphs	dispextern.h	/^  struct glyph *glyphs;$/;"	m	struct:glyph_pool	typeref:struct:glyph_pool::glyph	access:public
glyphs	dispextern.h	/^  struct glyph *glyphs[1 + LAST_AREA];$/;"	m	struct:glyph_row	typeref:struct:glyph_row::glyph	access:public
glyphs	nsterm.h	/^  unsigned short **glyphs; \/* map Unicode index to glyph *\/$/;"	m	struct:nsfont_info	access:public
GLYPHSET	w32term.c	/^} GLYPHSET;$/;"	t	typeref:struct:tagGLYPHSET	file:
glyphs_initialized_p	frame.h	/^  bool_bf glyphs_initialized_p : 1;$/;"	m	struct:frame	access:public
GLYPH_ALIAS_P	disptab.h	74;"	d
glyph_base	w32console.c	/^static struct glyph glyph_base[256];$/;"	v	typeref:struct:glyph	file:
GLYPH_CHAR	dispextern.h	/^INLINE int GLYPH_CHAR (GLYPH glyph) { return glyph.ch; }$/;"	f	signature:(GLYPH glyph)
GLYPH_CHAR_AND_FACE_EQUAL_P	dispextern.h	578;"	d
GLYPH_CHAR_VALID_P	dispextern.h	/^GLYPH_CHAR_VALID_P (GLYPH g)$/;"	f	signature:(GLYPH g)
GLYPH_CODE_CHAR	dispextern.h	/^GLYPH_CODE_CHAR (Lisp_Object gc)$/;"	f	signature:(Lisp_Object gc)
GLYPH_CODE_FACE	dispextern.h	/^GLYPH_CODE_FACE (Lisp_Object gc)$/;"	f	signature:(Lisp_Object gc)
GLYPH_CODE_P	dispextern.h	/^GLYPH_CODE_P (Lisp_Object gc)$/;"	f	signature:(Lisp_Object gc)
glyph_code_table	termhooks.h	/^  Lisp_Object glyph_code_table;$/;"	m	struct:terminal	access:public
GLYPH_EQUAL_P	dispextern.h	565;"	d
GLYPH_FACE	dispextern.h	/^INLINE int GLYPH_FACE (GLYPH glyph) { return glyph.face_id; }$/;"	f	signature:(GLYPH glyph)
GLYPH_FOLLOW_ALIASES	disptab.h	79;"	d
glyph_id	macfont.h	/^  CGGlyph glyph_id;$/;"	m	struct:mac_glyph_layout	access:public
glyph_idx	w32font.h	/^  unsigned int glyph_idx;$/;"	m	struct:w32font_info	access:public
GLYPH_INVALID_P	dispextern.h	618;"	d
glyph_len	composite.h	/^  int glyph_len;$/;"	m	struct:composition	access:public
GLYPH_LENGTH	disptab.h	90;"	d
glyph_matrix	dispextern.h	/^struct glyph_matrix$/;"	s
glyph_matrix::begv	dispextern.h	/^  ptrdiff_t begv, zv;$/;"	m	struct:glyph_matrix	access:public
glyph_matrix::buffer	dispextern.h	/^  struct buffer *buffer;$/;"	m	struct:glyph_matrix	typeref:struct:glyph_matrix::buffer	access:public
glyph_matrix::header_line_p	dispextern.h	/^  bool_bf header_line_p : 1;$/;"	m	struct:glyph_matrix	access:public
glyph_matrix::left_margin_glyphs	dispextern.h	/^  int left_margin_glyphs, right_margin_glyphs;$/;"	m	struct:glyph_matrix	access:public
glyph_matrix::matrix_h	dispextern.h	/^  int matrix_w, matrix_h;$/;"	m	struct:glyph_matrix	access:public
glyph_matrix::matrix_w	dispextern.h	/^  int matrix_w, matrix_h;$/;"	m	struct:glyph_matrix	access:public
glyph_matrix::matrix_x	dispextern.h	/^  int matrix_x, matrix_y;$/;"	m	struct:glyph_matrix	access:public
glyph_matrix::matrix_y	dispextern.h	/^  int matrix_x, matrix_y;$/;"	m	struct:glyph_matrix	access:public
glyph_matrix::method	dispextern.h	/^  char method[512];$/;"	m	struct:glyph_matrix	access:public
glyph_matrix::no_scrolling_p	dispextern.h	/^  bool_bf no_scrolling_p : 1;$/;"	m	struct:glyph_matrix	access:public
glyph_matrix::nrows	dispextern.h	/^  int nrows;$/;"	m	struct:glyph_matrix	access:public
glyph_matrix::pool	dispextern.h	/^  struct glyph_pool *pool;$/;"	m	struct:glyph_matrix	typeref:struct:glyph_matrix::glyph_pool	access:public
glyph_matrix::right_margin_glyphs	dispextern.h	/^  int left_margin_glyphs, right_margin_glyphs;$/;"	m	struct:glyph_matrix	access:public
glyph_matrix::rows	dispextern.h	/^  struct glyph_row *rows;$/;"	m	struct:glyph_matrix	typeref:struct:glyph_matrix::glyph_row	access:public
glyph_matrix::rows_allocated	dispextern.h	/^  ptrdiff_t rows_allocated;$/;"	m	struct:glyph_matrix	access:public
glyph_matrix::window_height	dispextern.h	/^  int window_height, window_width;$/;"	m	struct:glyph_matrix	access:public
glyph_matrix::window_pixel_left	dispextern.h	/^  int window_pixel_left, window_pixel_top;$/;"	m	struct:glyph_matrix	access:public
glyph_matrix::window_pixel_top	dispextern.h	/^  int window_pixel_left, window_pixel_top;$/;"	m	struct:glyph_matrix	access:public
glyph_matrix::window_vscroll	dispextern.h	/^  int window_vscroll;$/;"	m	struct:glyph_matrix	access:public
glyph_matrix::window_width	dispextern.h	/^  int window_height, window_width;$/;"	m	struct:glyph_matrix	access:public
glyph_matrix::zv	dispextern.h	/^  ptrdiff_t begv, zv;$/;"	m	struct:glyph_matrix	access:public
glyph_matrix_count	dispnew.c	/^static int glyph_matrix_count;$/;"	v	file:
GLYPH_MODE_LINE_FACE	dispextern.h	/^enum { GLYPH_MODE_LINE_FACE = 1 };$/;"	e	enum:__anon106
glyph_not_available_p	dispextern.h	/^  bool_bf glyph_not_available_p : 1;$/;"	m	struct:glyph	access:public
glyph_not_available_p	dispextern.h	/^  bool_bf glyph_not_available_p : 1;$/;"	m	struct:it	access:public
glyph_pool	dispextern.h	/^struct glyph_pool$/;"	s
glyph_pool::glyphs	dispextern.h	/^  struct glyph *glyphs;$/;"	m	struct:glyph_pool	typeref:struct:glyph_pool::glyph	access:public
glyph_pool::ncolumns	dispextern.h	/^  int nrows, ncolumns;$/;"	m	struct:glyph_pool	access:public
glyph_pool::nglyphs	dispextern.h	/^  ptrdiff_t nglyphs;$/;"	m	struct:glyph_pool	access:public
glyph_pool::nrows	dispextern.h	/^  int nrows, ncolumns;$/;"	m	struct:glyph_pool	access:public
glyph_pool_count	dispnew.c	/^static int glyph_pool_count;$/;"	v	file:
glyph_row	dispextern.h	/^  struct glyph_row *glyph_row;$/;"	m	struct:it	typeref:struct:it::glyph_row	access:public
glyph_row	dispextern.h	/^struct glyph_row$/;"	s
glyph_row::ascent	dispextern.h	/^  int ascent, height;$/;"	m	struct:glyph_row	access:public
glyph_row::clip	dispextern.h	/^  XRectangle *clip;$/;"	m	struct:glyph_row	access:public
glyph_row::contains_overlapping_glyphs_p	dispextern.h	/^  bool_bf contains_overlapping_glyphs_p : 1;$/;"	m	struct:glyph_row	access:public
glyph_row::continuation_lines_width	dispextern.h	/^  int continuation_lines_width;$/;"	m	struct:glyph_row	access:public
glyph_row::continued_p	dispextern.h	/^  bool_bf continued_p : 1;$/;"	m	struct:glyph_row	access:public
glyph_row::cursor_in_fringe_p	dispextern.h	/^  bool_bf cursor_in_fringe_p : 1;$/;"	m	struct:glyph_row	access:public
glyph_row::displays_text_p	dispextern.h	/^  bool_bf displays_text_p : 1;$/;"	m	struct:glyph_row	access:public
glyph_row::enabled_p	dispextern.h	/^  bool_bf enabled_p : 1;$/;"	m	struct:glyph_row	access:public
glyph_row::end	dispextern.h	/^  struct display_pos end;$/;"	m	struct:glyph_row	typeref:struct:glyph_row::display_pos	access:public
glyph_row::ends_at_zv_p	dispextern.h	/^  bool_bf ends_at_zv_p : 1;$/;"	m	struct:glyph_row	access:public
glyph_row::ends_in_ellipsis_p	dispextern.h	/^  bool_bf ends_in_ellipsis_p : 1;$/;"	m	struct:glyph_row	access:public
glyph_row::ends_in_middle_of_char_p	dispextern.h	/^  bool_bf ends_in_middle_of_char_p : 1;$/;"	m	struct:glyph_row	access:public
glyph_row::ends_in_newline_from_string_p	dispextern.h	/^  bool_bf ends_in_newline_from_string_p : 1;$/;"	m	struct:glyph_row	access:public
glyph_row::exact_window_width_line_p	dispextern.h	/^  bool_bf exact_window_width_line_p : 1;$/;"	m	struct:glyph_row	access:public
glyph_row::extra_line_spacing	dispextern.h	/^  int extra_line_spacing;$/;"	m	struct:glyph_row	access:public
glyph_row::fill_line_p	dispextern.h	/^  bool_bf fill_line_p : 1;$/;"	m	struct:glyph_row	access:public
glyph_row::fringe_bitmap_periodic_p	dispextern.h	/^  bool_bf fringe_bitmap_periodic_p : 1;$/;"	m	struct:glyph_row	access:public
glyph_row::full_width_p	dispextern.h	/^  bool_bf full_width_p : 1;$/;"	m	struct:glyph_row	access:public
glyph_row::glyphs	dispextern.h	/^  struct glyph *glyphs[1 + LAST_AREA];$/;"	m	struct:glyph_row	typeref:struct:glyph_row::glyph	access:public
glyph_row::hash	dispextern.h	/^  unsigned hash;$/;"	m	struct:glyph_row	access:public
glyph_row::height	dispextern.h	/^  int ascent, height;$/;"	m	struct:glyph_row	access:public
glyph_row::indicate_bob_p	dispextern.h	/^  bool_bf indicate_bob_p : 1;$/;"	m	struct:glyph_row	access:public
glyph_row::indicate_bottom_line_p	dispextern.h	/^  bool_bf indicate_bottom_line_p : 1;$/;"	m	struct:glyph_row	access:public
glyph_row::indicate_empty_line_p	dispextern.h	/^  bool_bf indicate_empty_line_p : 1;$/;"	m	struct:glyph_row	access:public
glyph_row::indicate_eob_p	dispextern.h	/^  bool_bf indicate_eob_p : 1;$/;"	m	struct:glyph_row	access:public
glyph_row::indicate_top_line_p	dispextern.h	/^  bool_bf indicate_top_line_p : 1;$/;"	m	struct:glyph_row	access:public
glyph_row::left_fringe_bitmap	dispextern.h	/^  unsigned left_fringe_bitmap : FRINGE_ID_BITS;$/;"	m	struct:glyph_row	access:public
glyph_row::left_fringe_face_id	dispextern.h	/^  unsigned left_fringe_face_id : FACE_ID_BITS;$/;"	m	struct:glyph_row	access:public
glyph_row::left_fringe_offset	dispextern.h	/^  signed left_fringe_offset : FRINGE_HEIGHT_BITS;$/;"	m	struct:glyph_row	access:public
glyph_row::left_user_fringe_bitmap	dispextern.h	/^  unsigned left_user_fringe_bitmap : FRINGE_ID_BITS;$/;"	m	struct:glyph_row	access:public
glyph_row::left_user_fringe_face_id	dispextern.h	/^  unsigned left_user_fringe_face_id : FACE_ID_BITS;$/;"	m	struct:glyph_row	access:public
glyph_row::maxpos	dispextern.h	/^  struct text_pos minpos, maxpos;$/;"	m	struct:glyph_row	typeref:struct:glyph_row::	access:public
glyph_row::minpos	dispextern.h	/^  struct text_pos minpos, maxpos;$/;"	m	struct:glyph_row	typeref:struct:glyph_row::text_pos	access:public
glyph_row::mode_line_p	dispextern.h	/^  bool_bf mode_line_p : 1;$/;"	m	struct:glyph_row	access:public
glyph_row::mouse_face_p	dispextern.h	/^  bool_bf mouse_face_p : 1;$/;"	m	struct:glyph_row	access:public
glyph_row::overlapped_p	dispextern.h	/^  bool_bf overlapped_p : 1;$/;"	m	struct:glyph_row	access:public
glyph_row::overlapping_p	dispextern.h	/^  bool_bf overlapping_p : 1;$/;"	m	struct:glyph_row	access:public
glyph_row::overlay_arrow_bitmap	dispextern.h	/^  int overlay_arrow_bitmap;$/;"	m	struct:glyph_row	access:public
glyph_row::phys_ascent	dispextern.h	/^  int phys_ascent, phys_height;$/;"	m	struct:glyph_row	access:public
glyph_row::phys_height	dispextern.h	/^  int phys_ascent, phys_height;$/;"	m	struct:glyph_row	access:public
glyph_row::pixel_width	dispextern.h	/^  int pixel_width;$/;"	m	struct:glyph_row	access:public
glyph_row::redraw_fringe_bitmaps_p	dispextern.h	/^  bool_bf redraw_fringe_bitmaps_p : 1;$/;"	m	struct:glyph_row	access:public
glyph_row::reversed_p	dispextern.h	/^  bool_bf reversed_p : 1;$/;"	m	struct:glyph_row	access:public
glyph_row::right_fringe_bitmap	dispextern.h	/^  unsigned right_fringe_bitmap : FRINGE_ID_BITS;$/;"	m	struct:glyph_row	access:public
glyph_row::right_fringe_face_id	dispextern.h	/^  unsigned right_fringe_face_id : FACE_ID_BITS;$/;"	m	struct:glyph_row	access:public
glyph_row::right_fringe_offset	dispextern.h	/^  signed right_fringe_offset : FRINGE_HEIGHT_BITS;$/;"	m	struct:glyph_row	access:public
glyph_row::right_user_fringe_bitmap	dispextern.h	/^  unsigned right_user_fringe_bitmap : FRINGE_ID_BITS;$/;"	m	struct:glyph_row	access:public
glyph_row::right_user_fringe_face_id	dispextern.h	/^  unsigned right_user_fringe_face_id : FACE_ID_BITS;$/;"	m	struct:glyph_row	access:public
glyph_row::start	dispextern.h	/^  struct display_pos start;$/;"	m	struct:glyph_row	typeref:struct:glyph_row::display_pos	access:public
glyph_row::starts_in_middle_of_char_p	dispextern.h	/^  bool_bf starts_in_middle_of_char_p : 1;$/;"	m	struct:glyph_row	access:public
glyph_row::truncated_on_left_p	dispextern.h	/^  bool_bf truncated_on_left_p : 1;$/;"	m	struct:glyph_row	access:public
glyph_row::truncated_on_right_p	dispextern.h	/^  bool_bf truncated_on_right_p : 1;$/;"	m	struct:glyph_row	access:public
glyph_row::used	dispextern.h	/^  short used[1 + LAST_AREA];$/;"	m	struct:glyph_row	access:public
glyph_row::visible_height	dispextern.h	/^  int visible_height;$/;"	m	struct:glyph_row	access:public
glyph_row::x	dispextern.h	/^  int x, y;$/;"	m	struct:glyph_row	access:public
glyph_row::y	dispextern.h	/^  int x, y;$/;"	m	struct:glyph_row	access:public
glyph_row_area	dispextern.h	/^enum glyph_row_area$/;"	g
glyph_row_slice_p	dispnew.c	/^glyph_row_slice_p (struct glyph_row *window_row, struct glyph_row *frame_row)$/;"	f	file:	signature:(struct glyph_row *window_row, struct glyph_row *frame_row)
GLYPH_SIMPLE_P	disptab.h	69;"	d
glyph_slice	dispextern.h	/^struct glyph_slice$/;"	s
glyph_slice::height	dispextern.h	/^  unsigned height : 16;$/;"	m	struct:glyph_slice	access:public
glyph_slice::width	dispextern.h	/^  unsigned width : 16;$/;"	m	struct:glyph_slice	access:public
glyph_slice::x	dispextern.h	/^  unsigned x : 16;$/;"	m	struct:glyph_slice	access:public
glyph_slice::y	dispextern.h	/^  unsigned y : 16;$/;"	m	struct:glyph_slice	access:public
GLYPH_SLICE_EQUAL_P	dispextern.h	554;"	d
glyph_string	dispextern.h	/^struct glyph_string$/;"	s
GLYPH_STRING	disptab.h	91;"	d
glyph_string::area	dispextern.h	/^  enum glyph_row_area area;$/;"	m	struct:glyph_string	typeref:enum:glyph_string::glyph_row_area	access:public
glyph_string::background_filled_p	dispextern.h	/^  bool_bf background_filled_p : 1;$/;"	m	struct:glyph_string	access:public
glyph_string::background_width	dispextern.h	/^  int background_width;$/;"	m	struct:glyph_string	access:public
glyph_string::char2b	dispextern.h	/^  XChar2b *char2b;$/;"	m	struct:glyph_string	access:public
glyph_string::clip	dispextern.h	/^  NativeRectangle clip[2];$/;"	m	struct:glyph_string	access:public
glyph_string::clip_head	dispextern.h	/^  struct glyph_string *clip_head, *clip_tail;$/;"	m	struct:glyph_string	typeref:struct:glyph_string::glyph_string	access:public
glyph_string::clip_tail	dispextern.h	/^  struct glyph_string *clip_head, *clip_tail;$/;"	m	struct:glyph_string	typeref:struct:glyph_string::	access:public
glyph_string::cmp	dispextern.h	/^  struct composition *cmp;$/;"	m	struct:glyph_string	typeref:struct:glyph_string::composition	access:public
glyph_string::cmp_from	dispextern.h	/^  int cmp_from, cmp_to;$/;"	m	struct:glyph_string	access:public
glyph_string::cmp_id	dispextern.h	/^  ptrdiff_t cmp_id;$/;"	m	struct:glyph_string	access:public
glyph_string::cmp_to	dispextern.h	/^  int cmp_from, cmp_to;$/;"	m	struct:glyph_string	access:public
glyph_string::display	dispextern.h	/^  Display *display;$/;"	m	struct:glyph_string	access:public
glyph_string::extends_to_end_of_line_p	dispextern.h	/^  bool_bf extends_to_end_of_line_p : 1;$/;"	m	struct:glyph_string	access:public
glyph_string::f	dispextern.h	/^  struct frame *f;$/;"	m	struct:glyph_string	typeref:struct:glyph_string::frame	access:public
glyph_string::face	dispextern.h	/^  struct face *face;$/;"	m	struct:glyph_string	typeref:struct:glyph_string::face	access:public
glyph_string::first_glyph	dispextern.h	/^  struct glyph *first_glyph;$/;"	m	struct:glyph_string	typeref:struct:glyph_string::glyph	access:public
glyph_string::font	dispextern.h	/^  struct font *font;$/;"	m	struct:glyph_string	typeref:struct:glyph_string::font	access:public
glyph_string::font_not_found_p	dispextern.h	/^  bool_bf font_not_found_p : 1;$/;"	m	struct:glyph_string	access:public
glyph_string::for_overlaps	dispextern.h	/^  unsigned for_overlaps : 3;$/;"	m	struct:glyph_string	access:public
glyph_string::gc	dispextern.h	/^  GC gc;$/;"	m	struct:glyph_string	access:public
glyph_string::gc	dispextern.h	/^  XGCValues *gc;$/;"	m	struct:glyph_string	access:public
glyph_string::hdc	dispextern.h	/^  HDC hdc;$/;"	m	struct:glyph_string	access:public
glyph_string::height	dispextern.h	/^  int height;$/;"	m	struct:glyph_string	access:public
glyph_string::hl	dispextern.h	/^  enum draw_glyphs_face hl;$/;"	m	struct:glyph_string	typeref:enum:glyph_string::draw_glyphs_face	access:public
glyph_string::img	dispextern.h	/^  struct image *img;$/;"	m	struct:glyph_string	typeref:struct:glyph_string::image	access:public
glyph_string::left_overhang	dispextern.h	/^  int left_overhang;$/;"	m	struct:glyph_string	access:public
glyph_string::nchars	dispextern.h	/^  int nchars;$/;"	m	struct:glyph_string	access:public
glyph_string::next	dispextern.h	/^  struct glyph_string *next, *prev;$/;"	m	struct:glyph_string	typeref:struct:glyph_string::glyph_string	access:public
glyph_string::num_clips	dispextern.h	/^  int num_clips;$/;"	m	struct:glyph_string	access:public
glyph_string::padding_p	dispextern.h	/^  bool_bf padding_p : 1;$/;"	m	struct:glyph_string	access:public
glyph_string::prev	dispextern.h	/^  struct glyph_string *next, *prev;$/;"	m	struct:glyph_string	typeref:struct:glyph_string::	access:public
glyph_string::right_overhang	dispextern.h	/^  int right_overhang;$/;"	m	struct:glyph_string	access:public
glyph_string::row	dispextern.h	/^  struct glyph_row *row;$/;"	m	struct:glyph_string	typeref:struct:glyph_string::glyph_row	access:public
glyph_string::slice	dispextern.h	/^  struct glyph_slice slice;$/;"	m	struct:glyph_string	typeref:struct:glyph_string::glyph_slice	access:public
glyph_string::stippled_p	dispextern.h	/^  bool_bf stippled_p : 1;$/;"	m	struct:glyph_string	access:public
glyph_string::underline_position	dispextern.h	/^  int underline_position;$/;"	m	struct:glyph_string	access:public
glyph_string::underline_thickness	dispextern.h	/^  int underline_thickness;$/;"	m	struct:glyph_string	access:public
glyph_string::w	dispextern.h	/^  struct window *w;$/;"	m	struct:glyph_string	typeref:struct:glyph_string::window	access:public
glyph_string::width	dispextern.h	/^  int width;$/;"	m	struct:glyph_string	access:public
glyph_string::x	dispextern.h	/^  int x;$/;"	m	struct:glyph_string	access:public
glyph_string::xwidget	dispextern.h	/^  struct xwidget *xwidget;$/;"	m	struct:glyph_string	typeref:struct:glyph_string::xwidget	access:public
glyph_string::y	dispextern.h	/^  int y, ybase;$/;"	m	struct:glyph_string	access:public
glyph_string::ybase	dispextern.h	/^  int y, ybase;$/;"	m	struct:glyph_string	access:public
glyph_string_containing_background_width	xdisp.c	/^glyph_string_containing_background_width (struct glyph_string *s)$/;"	f	file:	signature:(struct glyph_string *s)
GLYPH_TABLE_BASE	disptab.h	63;"	d
GLYPH_TABLE_LENGTH	disptab.h	58;"	d
glyph_type	dispextern.h	/^enum glyph_type$/;"	g
gl_state	syntax.c	/^struct gl_state_s gl_state;		\/* Global state of syntax parser.  *\/$/;"	v	typeref:struct:gl_state_s
gl_state_s	syntax.h	/^struct gl_state_s$/;"	s
gl_state_s::backward_i	syntax.h	/^  INTERVAL backward_i;			\/* or backward movement.  The$/;"	m	struct:gl_state_s	access:public
gl_state_s::b_property	syntax.h	/^  ptrdiff_t b_property;			\/* First index where c_s_t is valid.  *\/$/;"	m	struct:gl_state_s	access:public
gl_state_s::current_syntax_table	syntax.h	/^  Lisp_Object current_syntax_table;	\/* Syntax table for current pos.  *\/$/;"	m	struct:gl_state_s	access:public
gl_state_s::e_property	syntax.h	/^  ptrdiff_t e_property;			\/* First index where c_s_t is$/;"	m	struct:gl_state_s	access:public
gl_state_s::e_property_truncated	syntax.h	/^  bool e_property_truncated;		\/* true if e_property if was truncated$/;"	m	struct:gl_state_s	access:public
gl_state_s::forward_i	syntax.h	/^  INTERVAL forward_i;			\/* Where to start lookup on forward.  *\/$/;"	m	struct:gl_state_s	access:public
gl_state_s::global_code	syntax.h	/^  Lisp_Object global_code;		\/* Syntax code of current char.  *\/$/;"	m	struct:gl_state_s	access:public
gl_state_s::object	syntax.h	/^  Lisp_Object object;			\/* The object we are scanning.  *\/$/;"	m	struct:gl_state_s	access:public
gl_state_s::offset	syntax.h	/^  ptrdiff_t offset;$/;"	m	struct:gl_state_s	access:public
gl_state_s::old_prop	syntax.h	/^  Lisp_Object old_prop;			\/* Syntax-table prop at prev pos.  *\/$/;"	m	struct:gl_state_s	access:public
gl_state_s::start	syntax.h	/^  ptrdiff_t start;			\/* Where to stop.  *\/$/;"	m	struct:gl_state_s	access:public
gl_state_s::stop	syntax.h	/^  ptrdiff_t stop;			\/* Where to stop.  *\/$/;"	m	struct:gl_state_s	access:public
gl_state_s::use_global	syntax.h	/^  bool use_global;			\/* Whether to use global_code$/;"	m	struct:gl_state_s	access:public
gmalloc_hook	gmalloc.c	/^static void *(*__MALLOC_HOOK_VOLATILE gmalloc_hook) (size_t);$/;"	v	file:
GMALLOC_OBJ	Makefile	/^GMALLOC_OBJ=gmalloc.o$/;"	m
GNUC_PREREQ	conf_post.h	41;"	d
GNUC_PREREQ	conf_post.h	43;"	d
GNUC_PREREQ	conf_post.h	46;"	d
GNULIB_CLOSE_STREAM	config.h	213;"	d
GNULIB_FACCESSAT	config.h	217;"	d
GNULIB_FDOPENDIR	config.h	221;"	d
GNULIB_FSCANF	config.h	225;"	d
GNULIB_MKOSTEMP	config.h	229;"	d
GNULIB_PORTCHECK	config.h	232;"	d
GNULIB_SCANF	config.h	248;"	d
GNUSTEP_CFLAGS	Makefile	/^GNUSTEP_CFLAGS=$/;"	m
gnutls_alert_get	gnutls.c	270;"	d	file:
gnutls_alert_get_name	gnutls.c	271;"	d	file:
gnutls_anon_allocate_client_credentials	gnutls.c	272;"	d	file:
gnutls_anon_cred	process.h	/^    gnutls_anon_client_credentials_t gnutls_anon_cred;$/;"	m	struct:Lisp_Process	access:public
gnutls_anon_free_client_credentials	gnutls.c	273;"	d	file:
gnutls_audit_log_function	gnutls.c	/^gnutls_audit_log_function (gnutls_session_t session, const char *string)$/;"	f	file:	signature:(gnutls_session_t session, const char *string)
gnutls_audit_log_function	gnutls.c	/^static void gnutls_audit_log_function (gnutls_session_t, const char *);$/;"	p	file:	signature:(gnutls_session_t, const char *)
gnutls_boot_parameters	process.h	/^    Lisp_Object gnutls_boot_parameters;$/;"	m	struct:Lisp_Process	access:public
gnutls_bye	gnutls.c	274;"	d	file:
gnutls_certificate	process.h	/^    gnutls_x509_crt_t gnutls_certificate;$/;"	m	struct:Lisp_Process	access:public
gnutls_certificate_allocate_credentials	gnutls.c	275;"	d	file:
gnutls_certificate_details	gnutls.c	/^gnutls_certificate_details (gnutls_x509_crt_t cert)$/;"	f	file:	signature:(gnutls_x509_crt_t cert)
gnutls_certificate_free_credentials	gnutls.c	276;"	d	file:
gnutls_certificate_get_peers	gnutls.c	277;"	d	file:
gnutls_certificate_set_verify_flags	gnutls.c	278;"	d	file:
gnutls_certificate_set_x509_crl_file	gnutls.c	279;"	d	file:
gnutls_certificate_set_x509_key_file	gnutls.c	280;"	d	file:
gnutls_certificate_set_x509_system_trust	gnutls.c	281;"	d	file:
gnutls_certificate_set_x509_trust_file	gnutls.c	282;"	d	file:
gnutls_certificate_type_get	gnutls.c	283;"	d	file:
gnutls_certificate_verify_peers2	gnutls.c	284;"	d	file:
gnutls_cipher_get	gnutls.c	285;"	d	file:
gnutls_cipher_get_name	gnutls.c	286;"	d	file:
gnutls_complete_negotiation_p	process.h	/^    bool_bf gnutls_complete_negotiation_p : 1;$/;"	m	struct:Lisp_Process	access:public
gnutls_credentials_set	gnutls.c	287;"	d	file:
gnutls_cred_type	process.h	/^    Lisp_Object gnutls_cred_type;$/;"	m	struct:Lisp_Process	access:public
gnutls_deinit	gnutls.c	288;"	d	file:
gnutls_dh_get_prime_bits	gnutls.c	289;"	d	file:
gnutls_dh_set_prime_bits	gnutls.c	290;"	d	file:
GNUTLS_EMACS_ERROR_INVALID_TYPE	gnutls.h	52;"	d
GNUTLS_EMACS_ERROR_NOT_LOADED	gnutls.h	51;"	d
GNUTLS_EMACS_HANDSHAKES_LIMIT	gnutls.h	30;"	d
gnutls_error_is_fatal	gnutls.c	291;"	d	file:
gnutls_extra_peer_verification	process.h	/^    unsigned int gnutls_extra_peer_verification;$/;"	m	struct:Lisp_Process	access:public
gnutls_global_init	gnutls.c	292;"	d	file:
gnutls_global_initialized	gnutls.c	/^static bool gnutls_global_initialized;$/;"	v	file:
gnutls_global_set_audit_log_function	gnutls.c	293;"	d	file:
gnutls_global_set_log_function	gnutls.c	294;"	d	file:
gnutls_global_set_log_level	gnutls.c	295;"	d	file:
gnutls_handshake	gnutls.c	296;"	d	file:
gnutls_handshakes_tried	process.h	/^    int gnutls_handshakes_tried;$/;"	m	struct:Lisp_Process	access:public
gnutls_hex_string	gnutls.c	/^gnutls_hex_string (unsigned char *buf, ptrdiff_t buf_size, const char *prefix)$/;"	f	file:	signature:(unsigned char *buf, ptrdiff_t buf_size, const char *prefix)
gnutls_init	gnutls.c	297;"	d	file:
GNUTLS_INITSTAGE	gnutls.h	54;"	d
gnutls_initstage	process.h	/^    gnutls_initstage_t gnutls_initstage;$/;"	m	struct:Lisp_Process	access:public
gnutls_initstage_t	gnutls.h	/^} gnutls_initstage_t;$/;"	t	typeref:enum:__anon97
gnutls_ip_address_p	gnutls.c	/^gnutls_ip_address_p (char *string)$/;"	f	file:	signature:(char *string)
gnutls_kx_get	gnutls.c	298;"	d	file:
gnutls_kx_get_name	gnutls.c	299;"	d	file:
GNUTLS_LOG	gnutls.h	59;"	d
GNUTLS_LOG2	gnutls.h	65;"	d
GNUTLS_LOG2i	gnutls.h	71;"	d
gnutls_log_function	gnutls.c	/^gnutls_log_function (int level, const char *string)$/;"	f	file:	signature:(int level, const char *string)
gnutls_log_function	gnutls.c	/^static void gnutls_log_function (int, const char *);$/;"	p	file:	signature:(int, const char *)
gnutls_log_function2	gnutls.c	/^gnutls_log_function2 (int level, const char *string, const char *extra)$/;"	f	file:	signature:(int level, const char *string, const char *extra)
gnutls_log_function2	gnutls.c	/^static void gnutls_log_function2 (int, const char *, const char *);$/;"	p	file:	signature:(int, const char *, const char *)
gnutls_log_level	process.h	/^    int gnutls_log_level;$/;"	m	struct:Lisp_Process	access:public
gnutls_mac_get	gnutls.c	300;"	d	file:
gnutls_mac_get_name	gnutls.c	301;"	d	file:
gnutls_make_error	gnutls.c	/^gnutls_make_error (int err)$/;"	f	file:	signature:(int err)
gnutls_p	process.h	/^    bool_bf gnutls_p : 1;$/;"	m	struct:Lisp_Process	access:public
gnutls_peer_verification	process.h	/^    unsigned int gnutls_peer_verification;$/;"	m	struct:Lisp_Process	access:public
gnutls_pk_algorithm_get_name	gnutls.c	302;"	d	file:
gnutls_pk_bits_to_sec_param	gnutls.c	303;"	d	file:
gnutls_priority_set_direct	gnutls.c	304;"	d	file:
GNUTLS_PROCESS_USABLE	gnutls.h	56;"	d
gnutls_protocol_get_name	gnutls.c	305;"	d	file:
gnutls_protocol_get_version	gnutls.c	306;"	d	file:
gnutls_record_check_pending	gnutls.c	307;"	d	file:
gnutls_record_recv	gnutls.c	308;"	d	file:
gnutls_record_send	gnutls.c	309;"	d	file:
gnutls_rnd	sysdep.c	104;"	d	file:
gnutls_sec_param_get_name	gnutls.c	310;"	d	file:
gnutls_server_name_set	gnutls.c	311;"	d	file:
gnutls_sign_get_name	gnutls.c	312;"	d	file:
GNUTLS_STAGE_CALLBACKS	gnutls.h	/^  GNUTLS_STAGE_CALLBACKS,$/;"	e	enum:__anon97
GNUTLS_STAGE_CRED_ALLOC	gnutls.h	/^  GNUTLS_STAGE_CRED_ALLOC,$/;"	e	enum:__anon97
GNUTLS_STAGE_CRED_SET	gnutls.h	/^  GNUTLS_STAGE_CRED_SET,$/;"	e	enum:__anon97
GNUTLS_STAGE_EMPTY	gnutls.h	/^  GNUTLS_STAGE_EMPTY = 0,$/;"	e	enum:__anon97
GNUTLS_STAGE_FILES	gnutls.h	/^  GNUTLS_STAGE_FILES,$/;"	e	enum:__anon97
GNUTLS_STAGE_HANDSHAKE_CANDO	gnutls.h	/^  GNUTLS_STAGE_HANDSHAKE_CANDO = GNUTLS_STAGE_CRED_SET,$/;"	e	enum:__anon97
GNUTLS_STAGE_HANDSHAKE_TRIED	gnutls.h	/^  GNUTLS_STAGE_HANDSHAKE_TRIED,$/;"	e	enum:__anon97
GNUTLS_STAGE_INIT	gnutls.h	/^  GNUTLS_STAGE_INIT,$/;"	e	enum:__anon97
GNUTLS_STAGE_PRIORITY	gnutls.h	/^  GNUTLS_STAGE_PRIORITY,$/;"	e	enum:__anon97
GNUTLS_STAGE_READY	gnutls.h	/^  GNUTLS_STAGE_READY$/;"	e	enum:__anon97
GNUTLS_STAGE_TRANSPORT_POINTERS_SET	gnutls.h	/^  GNUTLS_STAGE_TRANSPORT_POINTERS_SET,$/;"	e	enum:__anon97
gnutls_state	process.h	/^    gnutls_session_t gnutls_state;$/;"	m	struct:Lisp_Process	access:public
gnutls_strerror	gnutls.c	313;"	d	file:
gnutls_transport_set_errno	gnutls.c	314;"	d	file:
gnutls_transport_set_ptr2	gnutls.c	315;"	d	file:
gnutls_transport_set_pull_function	gnutls.c	316;"	d	file:
gnutls_transport_set_push_function	gnutls.c	317;"	d	file:
gnutls_try_handshake	gnutls.c	/^gnutls_try_handshake (struct Lisp_Process *proc)$/;"	f	signature:(struct Lisp_Process *proc)
gnutls_try_handshake	gnutls.h	/^extern int gnutls_try_handshake (struct Lisp_Process *p);$/;"	p	signature:(struct Lisp_Process *p)
gnutls_verify_boot	gnutls.c	/^gnutls_verify_boot (Lisp_Object proc, Lisp_Object proplist)$/;"	f	signature:(Lisp_Object proc, Lisp_Object proplist)
gnutls_verify_boot	gnutls.h	/^extern Lisp_Object gnutls_verify_boot (Lisp_Object proc, Lisp_Object proplist);$/;"	p	signature:(Lisp_Object proc, Lisp_Object proplist)
gnutls_x509_cred	process.h	/^    gnutls_certificate_client_credentials gnutls_x509_cred;$/;"	m	struct:Lisp_Process	access:public
gnutls_x509_crt_check_hostname	gnutls.c	318;"	d	file:
gnutls_x509_crt_check_issuer	gnutls.c	319;"	d	file:
gnutls_x509_crt_deinit	gnutls.c	320;"	d	file:
gnutls_x509_crt_get_activation_time	gnutls.c	321;"	d	file:
gnutls_x509_crt_get_dn	gnutls.c	322;"	d	file:
gnutls_x509_crt_get_expiration_time	gnutls.c	323;"	d	file:
gnutls_x509_crt_get_fingerprint	gnutls.c	324;"	d	file:
gnutls_x509_crt_get_issuer_dn	gnutls.c	325;"	d	file:
gnutls_x509_crt_get_issuer_unique_id	gnutls.c	326;"	d	file:
gnutls_x509_crt_get_key_id	gnutls.c	327;"	d	file:
gnutls_x509_crt_get_pk_algorithm	gnutls.c	328;"	d	file:
gnutls_x509_crt_get_serial	gnutls.c	329;"	d	file:
gnutls_x509_crt_get_signature_algorithm	gnutls.c	330;"	d	file:
gnutls_x509_crt_get_subject_unique_id	gnutls.c	331;"	d	file:
gnutls_x509_crt_get_version	gnutls.c	332;"	d	file:
gnutls_x509_crt_import	gnutls.c	333;"	d	file:
gnutls_x509_crt_init	gnutls.c	334;"	d	file:
GNU_LINUX	config.h	251;"	d
GNU_OBJC_CFLAGS	Makefile	/^GNU_OBJC_CFLAGS=$(patsubst -specs=%-hardened-cc1,,)$/;"	m
gnu_xbm_bits	emacs-icon.h	/^static unsigned char gnu_xbm_bits[] = {$/;"	v
gnu_xbm_height	emacs-icon.h	321;"	d
gnu_xbm_width	emacs-icon.h	320;"	d
gnu_xpm_bits	emacs-icon.h	/^static const char * gnu_xpm_bits[] = {$/;"	v
gobble_input	keyboard.c	/^gobble_input (void)$/;"	f	signature:(void)
gobble_input	keyboard.h	/^extern int gobble_input (void);$/;"	p	signature:(void)
gobble_line	termcap.c	/^gobble_line (int fd, register struct termcap_buffer *bufp, char *append_end)$/;"	f	file:	signature:(int fd, register struct termcap_buffer *bufp, char *append_end)
gobble_line	termcap.c	/^static char *gobble_line (int, struct termcap_buffer *, char *);$/;"	p	file:	signature:(int, struct termcap_buffer *, char *)
GPM_CLICK_EVENT	termhooks.h	/^  , GPM_CLICK_EVENT$/;"	e	enum:event_kind
gpm_tty	term.c	/^struct tty_display_info *gpm_tty = NULL;$/;"	v	typeref:struct:tty_display_info
gpt	buffer.h	/^    ptrdiff_t gpt;		\/* Char pos of gap in buffer.  *\/$/;"	m	struct:buffer_text	access:public
GPT	buffer.h	51;"	d
GPT_ADDR	buffer.h	74;"	d
gpt_byte	buffer.h	/^    ptrdiff_t gpt_byte;		\/* Byte pos of gap in buffer.  *\/$/;"	m	struct:buffer_text	access:public
GPT_BYTE	buffer.h	52;"	d
grabbed	nsterm.h	/^  int grabbed;$/;"	m	struct:ns_display_info	access:public
grabbed	w32term.h	/^  int grabbed;$/;"	m	struct:w32_display_info	access:public
grabbed	xterm.h	/^  int grabbed;$/;"	m	struct:x_display_info	access:public
graft_intervals_into_buffer	intervals.c	/^graft_intervals_into_buffer (INTERVAL source, ptrdiff_t position,$/;"	f	signature:(INTERVAL source, ptrdiff_t position, ptrdiff_t length, struct buffer *buffer, bool inherit)
graft_intervals_into_buffer	intervals.h	/^extern void graft_intervals_into_buffer (INTERVAL, ptrdiff_t, ptrdiff_t,$/;"	p	signature:(INTERVAL, ptrdiff_t, ptrdiff_t, struct buffer *, bool)
graphicp	character.c	/^graphicp (int c)$/;"	f	signature:(int c)
graphicp	character.h	/^extern bool graphicp (int);$/;"	p	signature:(int)
GRAVE_QUOTING_STYLE	lisp.h	/^    GRAVE_QUOTING_STYLE,$/;"	e	enum:text_quoting_style
gray	xterm.h	/^  Pixmap gray;$/;"	m	struct:x_display_info	access:public
grealloc_hook	gmalloc.c	/^static void *(*grealloc_hook) (void *, size_t);$/;"	v	file:
GREEK_CAPITAL_LETTER_SIGMA	casefiddle.c	/^enum { GREEK_CAPITAL_LETTER_SIGMA = 0x03A3 }; \/* Σ *\/$/;"	e	enum:__anon155	file:
GREEK_SMALL_LETTER_FINAL_SIGMA	casefiddle.c	/^enum { GREEK_SMALL_LETTER_FINAL_SIGMA = 0x03C2 }; \/* ς *\/$/;"	e	enum:__anon156	file:
green	dispextern.h	/^  unsigned short red, green, blue;$/;"	m	struct:__anon104	access:public
green	w32fns.c	/^  (Lisp_Object red, Lisp_Object green, Lisp_Object blue, Lisp_Object name)$/;"	v
GREEN16_FROM_ULONG	nsterm.h	813;"	d
green_bits	xterm.h	/^  int red_bits, blue_bits, green_bits;$/;"	m	struct:x_display_info	access:public
GREEN_FROM_ULONG	nsterm.h	807;"	d
green_offset	xterm.h	/^  int red_offset, blue_offset, green_offset;$/;"	m	struct:x_display_info	access:public
group_in_compile_stack	regex.c	/^group_in_compile_stack (compile_stack_type compile_stack, regnum_t regnum)$/;"	f	file:	signature:(compile_stack_type compile_stack, regnum_t regnum)
group_in_compile_stack	regex.c	/^static boolean group_in_compile_stack (compile_stack_type compile_stack,$/;"	p	file:	signature:(compile_stack_type compile_stack, regnum_t regnum)
growable_destination	coding.c	/^growable_destination (struct coding_system *coding)$/;"	f	file:	signature:(struct coding_system *coding)
GROW_FAIL_STACK	regex.c	1333;"	d	file:
grow_mini_window	window.c	/^grow_mini_window (struct window *w, int delta, bool pixelwise)$/;"	f	signature:(struct window *w, int delta, bool pixelwise)
grow_mini_window	window.h	/^extern void grow_mini_window (struct window *, int, bool);$/;"	p	signature:(struct window *, int, bool)
GROW_RAW_KEYBUF	keyboard.c	122;"	d	file:
grow_read_buffer	lread.c	/^grow_read_buffer (char *buf, ptrdiff_t offset,$/;"	f	file:	signature:(char *buf, ptrdiff_t offset, char **buf_addr, ptrdiff_t *buf_size, ptrdiff_t count)
grow_specpdl	eval.c	/^grow_specpdl (void)$/;"	f	file:	signature:(void)
grow_specpdl	eval.c	/^static void grow_specpdl (void);$/;"	p	file:	signature:(void)
gsettings_client	xsettings.c	/^static GSettings *gsettings_client;$/;"	v	file:
GSETTINGS_FONT_NAME	xsettings.c	195;"	d	file:
GSETTINGS_MONO_FONT	xsettings.c	194;"	d	file:
GSETTINGS_SCHEMA	xsettings.c	190;"	d	file:
GSETTINGS_TOOL_BAR_STYLE	xsettings.c	191;"	d	file:
gstring	ftfont.c	/^static MFLTGlyphString gstring;$/;"	v	file:
gstring_hash_table	composite.c	/^static Lisp_Object gstring_hash_table;$/;"	v	file:
gstring_lookup_cache	composite.c	/^gstring_lookup_cache (Lisp_Object header)$/;"	f	file:	signature:(Lisp_Object header)
gstring_lookup_cache	composite.c	/^static Lisp_Object gstring_lookup_cache (Lisp_Object);$/;"	p	file:
gstring_work	composite.c	/^static Lisp_Object gstring_work;$/;"	v	file:
gstring_work_headers	composite.c	/^static Lisp_Object gstring_work_headers;$/;"	v	file:
GS_ALGORITHM	image.c	/^  GS_ALGORITHM,$/;"	e	enum:gs_keyword_index	file:
GS_ASCENT	image.c	/^  GS_ASCENT,$/;"	e	enum:gs_keyword_index	file:
GS_BACKGROUND	image.c	/^  GS_BACKGROUND,$/;"	e	enum:gs_keyword_index	file:
GS_BOUNDING_BOX	image.c	/^  GS_BOUNDING_BOX,$/;"	e	enum:gs_keyword_index	file:
gs_clear_image	image.c	/^gs_clear_image (struct frame *f, struct image *img)$/;"	f	file:	signature:(struct frame *f, struct image *img)
gs_clear_image	image.c	/^static void gs_clear_image (struct frame *f, struct image *img);$/;"	p	file:	signature:(struct frame *f, struct image *img)
GS_FILE	image.c	/^  GS_FILE,$/;"	e	enum:gs_keyword_index	file:
gs_format	image.c	/^static const struct image_keyword gs_format[GS_LAST] =$/;"	v	typeref:struct:image_keyword	file:
GS_HEURISTIC_MASK	image.c	/^  GS_HEURISTIC_MASK,$/;"	e	enum:gs_keyword_index	file:
gs_image_p	image.c	/^gs_image_p (Lisp_Object object)$/;"	f	file:	signature:(Lisp_Object object)
gs_image_p	image.c	/^static bool gs_image_p (Lisp_Object object);$/;"	p	file:	signature:(Lisp_Object object)
gs_keyword_index	image.c	/^enum gs_keyword_index$/;"	g	file:
GS_LAST	image.c	/^  GS_LAST$/;"	e	enum:gs_keyword_index	file:
gs_load	image.c	/^gs_load (struct frame *f, struct image *img)$/;"	f	file:	signature:(struct frame *f, struct image *img)
gs_load	image.c	/^static bool gs_load (struct frame *f, struct image *img);$/;"	p	file:	signature:(struct frame *f, struct image *img)
GS_LOADER	image.c	/^  GS_LOADER,$/;"	e	enum:gs_keyword_index	file:
GS_MARGIN	image.c	/^  GS_MARGIN,$/;"	e	enum:gs_keyword_index	file:
GS_MASK	image.c	/^  GS_MASK,$/;"	e	enum:gs_keyword_index	file:
GS_PT_HEIGHT	image.c	/^  GS_PT_HEIGHT,$/;"	e	enum:gs_keyword_index	file:
GS_PT_WIDTH	image.c	/^  GS_PT_WIDTH,$/;"	e	enum:gs_keyword_index	file:
GS_RELIEF	image.c	/^  GS_RELIEF,$/;"	e	enum:gs_keyword_index	file:
GS_TYPE	image.c	/^  GS_TYPE,$/;"	e	enum:gs_keyword_index	file:
gs_type	image.c	/^static struct image_type gs_type =$/;"	v	typeref:struct:image_type	file:
GtkFixedPrivateL	emacsgtkfixed.c	/^struct GtkFixedPrivateL$/;"	s	file:
GtkFixedPrivateL::children	emacsgtkfixed.c	/^  GList *children;$/;"	m	struct:GtkFixedPrivateL	file:	access:public
GTKUTIL_H	gtkutil.h	21;"	d
gtk_adjustment_configure	gtkutil.c	79;"	d	file:
gtk_adjustment_get_page_size	xterm.h	796;"	d
gtk_adjustment_get_step_increment	gtkutil.c	69;"	d	file:
gtk_adjustment_get_upper	xterm.h	797;"	d
gtk_adjustment_set_page_increment	gtkutil.c	68;"	d	file:
gtk_adjustment_set_page_size	gtkutil.c	67;"	d	file:
gtk_adjustment_set_step_increment	gtkutil.c	70;"	d	file:
gtk_box_new	gtkutil.c	124;"	d	file:
GTK_CHECK_VERSION	xterm.h	62;"	d
GTK_CHECK_VERSION	xterm.h	68;"	d
gtk_dialog_get_action_area	gtkutil.c	60;"	d	file:
gtk_dialog_get_content_area	gtkutil.c	61;"	d	file:
GTK_FONT_CHOOSER	gtkutil.c	100;"	d	file:
GTK_FONT_CHOOSER	gtkutil.c	99;"	d	file:
gtk_font_chooser_dialog_new	gtkutil.c	97;"	d	file:
gtk_font_chooser_set_font	gtkutil.c	101;"	d	file:
GTK_OBJ	Makefile	/^GTK_OBJ=gtkutil.o emacsgtkfixed.o$/;"	m
gtk_scrollbar_new	gtkutil.c	127;"	d	file:
gtk_widget_get_mapped	xterm.h	793;"	d
gtk_widget_get_preferred_size	xterm.h	807;"	d
gtk_widget_get_sensitive	gtkutil.c	64;"	d	file:
gtk_widget_get_window	xterm.h	790;"	d
gtk_widget_set_has_window	gtkutil.c	56;"	d	file:
GTK_WIDGET_TO_X_WIN	xterm.h	811;"	d
guichar_t	w32term.h	/^typedef char guichar_t;$/;"	t
guichar_t	w32term.h	/^typedef wchar_t guichar_t;$/;"	t
guidItem	w32fns.c	/^  GUID guidItem;$/;"	m	struct:MY_NOTIFYICONDATAW	file:	access:public
GUISTR	w32term.h	841;"	d
GUISTR	w32term.h	847;"	d
GUI_ENCODE_FILE	w32term.h	842;"	d
GUI_ENCODE_FILE	w32term.h	848;"	d
GUI_ENCODE_SYSTEM	w32term.h	843;"	d
GUI_ENCODE_SYSTEM	w32term.h	849;"	d
GUI_FN	w32term.h	844;"	d
GUI_FN	w32term.h	850;"	d
GUI_SDATA	w32term.h	854;"	d
g_b_init_compare_string_w	w32.c	/^BOOL g_b_init_compare_string_w;$/;"	v
g_b_init_convert_sddl_to_sd	w32.c	/^static BOOL g_b_init_convert_sddl_to_sd;$/;"	v	file:
g_b_init_convert_sd_to_sddl	w32.c	/^static BOOL g_b_init_convert_sd_to_sddl;$/;"	v	file:
g_b_init_copy_sid	w32.c	/^static BOOL g_b_init_copy_sid;$/;"	v	file:
g_b_init_create_symbolic_link_a	w32.c	/^static BOOL g_b_init_create_symbolic_link_a;$/;"	v	file:
g_b_init_create_symbolic_link_w	w32.c	/^static BOOL g_b_init_create_symbolic_link_w;$/;"	v	file:
g_b_init_create_toolhelp32_snapshot	w32.c	/^static BOOL g_b_init_create_toolhelp32_snapshot;$/;"	v	file:
g_b_init_debug_break_process	w32.c	/^BOOL g_b_init_debug_break_process;$/;"	v
g_b_init_equal_sid	w32.c	/^static BOOL g_b_init_equal_sid;$/;"	v	file:
g_b_init_get_adapters_info	w32.c	/^static BOOL g_b_init_get_adapters_info;$/;"	v	file:
g_b_init_get_char_width_32_w	w32font.c	/^static BOOL g_b_init_get_char_width_32_w;$/;"	v	file:
g_b_init_get_file_security_a	w32.c	/^static BOOL g_b_init_get_file_security_a;$/;"	v	file:
g_b_init_get_file_security_w	w32.c	/^static BOOL g_b_init_get_file_security_w;$/;"	v	file:
g_b_init_get_glyph_outline_w	w32font.c	/^static BOOL g_b_init_get_glyph_outline_w;$/;"	v	file:
g_b_init_get_length_sid	w32.c	/^static BOOL g_b_init_get_length_sid;$/;"	v	file:
g_b_init_get_module_handle_ex	dynlib.c	/^static BOOL g_b_init_get_module_handle_ex;$/;"	v	file:
g_b_init_get_native_system_info	w32.c	/^static BOOL g_b_init_get_native_system_info;$/;"	v	file:
g_b_init_get_outline_metrics_w	w32font.c	/^static BOOL g_b_init_get_outline_metrics_w;$/;"	v	file:
g_b_init_get_process_memory_info	w32.c	/^static BOOL g_b_init_get_process_memory_info;$/;"	v	file:
g_b_init_get_process_working_set_size	w32.c	/^static BOOL g_b_init_get_process_working_set_size;$/;"	v	file:
g_b_init_get_security_descriptor_dacl	w32.c	/^static BOOL g_b_init_get_security_descriptor_dacl;$/;"	v	file:
g_b_init_get_security_descriptor_group	w32.c	/^static BOOL g_b_init_get_security_descriptor_group;$/;"	v	file:
g_b_init_get_security_descriptor_owner	w32.c	/^static BOOL g_b_init_get_security_descriptor_owner;$/;"	v	file:
g_b_init_get_security_info	w32.c	/^static BOOL g_b_init_get_security_info;$/;"	v	file:
g_b_init_get_sid_sub_authority	w32.c	/^static BOOL g_b_init_get_sid_sub_authority;$/;"	v	file:
g_b_init_get_sid_sub_authority_count	w32.c	/^static BOOL g_b_init_get_sid_sub_authority_count;$/;"	v	file:
g_b_init_get_system_times	w32.c	/^static BOOL g_b_init_get_system_times;$/;"	v	file:
g_b_init_get_text_metrics_w	w32font.c	/^static BOOL g_b_init_get_text_metrics_w;$/;"	v	file:
g_b_init_get_token_information	w32.c	/^static BOOL g_b_init_get_token_information;$/;"	v	file:
g_b_init_global_memory_status	w32.c	/^static BOOL g_b_init_global_memory_status;$/;"	v	file:
g_b_init_global_memory_status_ex	w32.c	/^static BOOL g_b_init_global_memory_status_ex;$/;"	v	file:
g_b_init_impersonate_self	w32.c	/^static BOOL g_b_init_impersonate_self;$/;"	v	file:
g_b_init_is_valid_security_descriptor	w32.c	/^static BOOL g_b_init_is_valid_security_descriptor;$/;"	v	file:
g_b_init_is_valid_sid	w32.c	/^static BOOL g_b_init_is_valid_sid;$/;"	v	file:
g_b_init_is_windows_9x	w32.c	/^static BOOL g_b_init_is_windows_9x;$/;"	v	file:
g_b_init_lookup_account_sid	w32.c	/^static BOOL g_b_init_lookup_account_sid;$/;"	v	file:
g_b_init_open_process_token	w32.c	/^static BOOL g_b_init_open_process_token;$/;"	v	file:
g_b_init_open_thread_token	w32.c	/^static BOOL g_b_init_open_thread_token;$/;"	v	file:
g_b_init_process32_first	w32.c	/^static BOOL g_b_init_process32_first;$/;"	v	file:
g_b_init_process32_next	w32.c	/^static BOOL g_b_init_process32_next;$/;"	v	file:
g_b_init_revert_to_self	w32.c	/^static BOOL g_b_init_revert_to_self;$/;"	v	file:
g_b_init_set_file_security_a	w32.c	/^static BOOL g_b_init_set_file_security_a;$/;"	v	file:
g_b_init_set_file_security_w	w32.c	/^static BOOL g_b_init_set_file_security_w;$/;"	v	file:
g_b_init_set_named_security_info_a	w32.c	/^static BOOL g_b_init_set_named_security_info_a;$/;"	v	file:
g_b_init_set_named_security_info_w	w32.c	/^static BOOL g_b_init_set_named_security_info_w;$/;"	v	file:
g_clear_error	image.c	9144;"	d	file:
g_clear_error	image.c	9162;"	d	file:
g_object_unref	image.c	9145;"	d	file:
g_object_unref	image.c	9163;"	d	file:
g_type_init	image.c	9146;"	d	file:
g_type_init	image.c	9165;"	d	file:
h	dispextern.h	/^  int wd, h, dh;$/;"	m	struct:draw_fringe_bitmap_params	access:public
hack_wm_protocols	xfns.c	/^hack_wm_protocols (struct frame *f, Widget widget)$/;"	f	file:	signature:(struct frame *f, Widget widget)
handle	sound.c	/^  snd_pcm_t *handle;$/;"	m	struct:alsa_params	file:	access:public
HANDLED_NORMALLY	xdisp.c	/^  HANDLED_NORMALLY,$/;"	e	enum:prop_handled	file:
HANDLED_OVERLAY_STRING_CONSUMED	xdisp.c	/^  HANDLED_OVERLAY_STRING_CONSUMED,$/;"	e	enum:prop_handled	file:
HANDLED_RECOMPUTE_PROPS	xdisp.c	/^  HANDLED_RECOMPUTE_PROPS,$/;"	e	enum:prop_handled	file:
HANDLED_RETURN	xdisp.c	/^  HANDLED_RETURN$/;"	e	enum:prop_handled	file:
handler	lisp.h	/^struct handler$/;"	s
handler	xdisp.c	/^  enum prop_handled (*handler) (struct it *it);$/;"	m	struct:props	typeref:enum:props::handler	file:	access:public
handler	xterm.c	/^  x_special_error_handler handler;$/;"	m	struct:x_error_message_stack	file:	access:public
handler::bytecode_dest	lisp.h	/^  int bytecode_dest;$/;"	m	struct:handler	access:public
handler::bytecode_top	lisp.h	/^  Lisp_Object *bytecode_top;$/;"	m	struct:handler	access:public
handler::f_lisp_eval_depth	lisp.h	/^  EMACS_INT f_lisp_eval_depth;$/;"	m	struct:handler	access:public
handler::interrupt_input_blocked	lisp.h	/^  int interrupt_input_blocked;$/;"	m	struct:handler	access:public
handler::jmp	lisp.h	/^  sys_jmp_buf jmp;$/;"	m	struct:handler	access:public
handler::next	lisp.h	/^  struct handler *next;$/;"	m	struct:handler	typeref:struct:handler::handler	access:public
handler::nextfree	lisp.h	/^  struct handler *nextfree;$/;"	m	struct:handler	typeref:struct:handler::handler	access:public
handler::pdlcount	lisp.h	/^  ptrdiff_t pdlcount;$/;"	m	struct:handler	access:public
handler::poll_suppress_count	lisp.h	/^  int poll_suppress_count;$/;"	m	struct:handler	access:public
handler::tag_or_ch	lisp.h	/^  Lisp_Object tag_or_ch;$/;"	m	struct:handler	access:public
handler::type	lisp.h	/^  enum handlertype type;$/;"	m	struct:handler	typeref:enum:handler::handlertype	access:public
handler::val	lisp.h	/^  Lisp_Object val;$/;"	m	struct:handler	access:public
handlerlist	thread.h	77;"	d
handlerlist_sentinel	thread.h	80;"	d
handlertype	lisp.h	/^enum handlertype { CATCHER, CONDITION_CASE, CATCHER_ALL };$/;"	g
handler_data	xterm.c	/^  void *handler_data;$/;"	m	struct:x_error_message_stack	file:	access:public
handler_id	xwidget.h	/^  long handler_id;$/;"	m	struct:xwidget_view	access:public
handle_alarm_signal	atimer.c	/^handle_alarm_signal (int sig)$/;"	f	file:	signature:(int sig)
handle_arith_signal	sysdep.c	/^handle_arith_signal (int sig)$/;"	f	file:	signature:(int sig)
handle_async_input	keyboard.c	/^handle_async_input (void)$/;"	f	file:	signature:(void)
handle_charset_annotation	coding.c	/^handle_charset_annotation (ptrdiff_t pos, ptrdiff_t limit,$/;"	f	file:	signature:(ptrdiff_t pos, ptrdiff_t limit, struct coding_system *coding, int *buf, ptrdiff_t *stop)
handle_child_signal	process.c	/^handle_child_signal (int sig)$/;"	f	file:	signature:(int sig)
handle_composition_annotation	coding.c	/^handle_composition_annotation (ptrdiff_t pos, ptrdiff_t limit,$/;"	f	file:	signature:(ptrdiff_t pos, ptrdiff_t limit, struct coding_system *coding, int *buf, ptrdiff_t *stop)
handle_composition_prop	xdisp.c	/^handle_composition_prop (struct it *it)$/;"	f	file:	signature:(struct it *it)
handle_composition_prop	xdisp.c	/^static enum prop_handled handle_composition_prop (struct it *);$/;"	p	file:	signature:(struct it *)
handle_danger_signal	sysdep.c	/^handle_danger_signal (int sig)$/;"	f	file:	signature:(int sig)
handle_display_prop	xdisp.c	/^handle_display_prop (struct it *it)$/;"	f	file:	signature:(struct it *it)
handle_display_prop	xdisp.c	/^static enum prop_handled handle_display_prop (struct it *);$/;"	p	file:	signature:(struct it *)
handle_display_spec	xdisp.c	/^handle_display_spec (struct it *it, Lisp_Object spec, Lisp_Object object,$/;"	f	file:	signature:(struct it *it, Lisp_Object spec, Lisp_Object object, Lisp_Object overlay, struct text_pos *position, ptrdiff_t bufpos, bool frame_window_p)
handle_display_spec	xdisp.c	/^static int handle_display_spec (struct it *, Lisp_Object, Lisp_Object,$/;"	p	file:	signature:(struct it *, Lisp_Object, Lisp_Object, Lisp_Object, struct text_pos *, ptrdiff_t, bool)
handle_face_prop	xdisp.c	/^handle_face_prop (struct it *it)$/;"	f	file:	signature:(struct it *it)
handle_face_prop	xdisp.c	/^static enum prop_handled handle_face_prop (struct it *);$/;"	p	file:	signature:(struct it *)
handle_fatal_signal	sysdep.c	/^handle_fatal_signal (int sig)$/;"	f	file:	signature:(int sig)
handle_file_notifications	w32inevt.c	/^handle_file_notifications (struct input_event *hold_quit)$/;"	f	signature:(struct input_event *hold_quit)
handle_file_notifications	w32term.h	/^extern int handle_file_notifications (struct input_event *);$/;"	p	signature:(struct input_event *)
HANDLE_FLAG_INHERIT	w32.c	7255;"	d	file:
handle_fontified_prop	xdisp.c	/^handle_fontified_prop (struct it *it)$/;"	f	file:	signature:(struct it *it)
handle_fontified_prop	xdisp.c	/^static enum prop_handled handle_fontified_prop (struct it *);$/;"	p	file:	signature:(struct it *)
handle_input_available_signal	keyboard.c	/^handle_input_available_signal (int sig)$/;"	f	signature:(int sig)
handle_input_available_signal	lisp.h	/^void handle_input_available_signal (int);$/;"	p	signature:(int)
handle_interrupt	keyboard.c	/^handle_interrupt (bool in_signal_handler)$/;"	f	file:	signature:(bool in_signal_handler)
handle_interrupt	keyboard.c	/^static void handle_interrupt (bool);$/;"	p	file:
handle_interrupt_signal	keyboard.c	/^handle_interrupt_signal (int sig)$/;"	f	file:	signature:(int sig)
handle_invisible_prop	xdisp.c	/^handle_invisible_prop (struct it *it)$/;"	f	file:	signature:(struct it *it)
handle_invisible_prop	xdisp.c	/^static enum prop_handled handle_invisible_prop (struct it *);$/;"	p	file:	signature:(struct it *)
handle_line_prefix	xdisp.c	/^handle_line_prefix (struct it *it)$/;"	f	file:	signature:(struct it *it)
handle_line_prefix	xdisp.c	/^static void handle_line_prefix (struct it *);$/;"	p	file:	signature:(struct it *)
handle_one_term_event	term.c	/^handle_one_term_event (struct tty_display_info *tty, Gpm_Event *event,$/;"	f	signature:(struct tty_display_info *tty, Gpm_Event *event, struct input_event *hold_quit)
handle_one_term_event	termhooks.h	/^extern int handle_one_term_event (struct tty_display_info *, Gpm_Event *, struct input_event *);$/;"	p	signature:(struct tty_display_info *, Gpm_Event *, struct input_event *)
handle_one_xevent	xterm.c	/^handle_one_xevent (struct x_display_info *dpyinfo,$/;"	f	file:	signature:(struct x_display_info *dpyinfo, const XEvent *event, int *finish, struct input_event *hold_quit)
handle_one_xevent	xterm.c	/^static int handle_one_xevent (struct x_display_info *,$/;"	p	file:	signature:(struct x_display_info *, const XEvent *, int *, struct input_event *)
handle_overlay_change	xdisp.c	/^handle_overlay_change (struct it *it)$/;"	f	file:	signature:(struct it *it)
handle_overlay_change	xdisp.c	/^static enum prop_handled handle_overlay_change (struct it *);$/;"	p	file:	signature:(struct it *)
handle_profiler_signal	profiler.c	/^handle_profiler_signal (int signal)$/;"	f	file:	signature:(int signal)
handle_sigsegv	sysdep.c	/^handle_sigsegv (int sig, siginfo_t *siginfo, void *arg)$/;"	f	file:	signature:(int sig, siginfo_t *siginfo, void *arg)
handle_single_display_spec	xdisp.c	/^handle_single_display_spec (struct it *it, Lisp_Object spec, Lisp_Object object,$/;"	f	file:	signature:(struct it *it, Lisp_Object spec, Lisp_Object object, Lisp_Object overlay, struct text_pos *position, ptrdiff_t bufpos, int display_replaced, bool frame_window_p)
handle_single_display_spec	xdisp.c	/^static int handle_single_display_spec (struct it *, Lisp_Object,$/;"	p	file:	signature:(struct it *, Lisp_Object, Lisp_Object, Lisp_Object, struct text_pos *, ptrdiff_t, int, bool)
handle_stop	xdisp.c	/^handle_stop (struct it *it)$/;"	f	file:	signature:(struct it *it)
handle_stop_backwards	xdisp.c	/^handle_stop_backwards (struct it *it, ptrdiff_t charpos)$/;"	f	file:	signature:(struct it *it, ptrdiff_t charpos)
handle_stop_backwards	xdisp.c	/^static void handle_stop_backwards (struct it *, ptrdiff_t);$/;"	p	file:	signature:(struct it *, ptrdiff_t)
handle_tool_bar_click	dispextern.h	/^extern void handle_tool_bar_click (struct frame *,$/;"	p	signature:(struct frame *, int, int, bool, int)
handle_tool_bar_click	xdisp.c	/^handle_tool_bar_click (struct frame *f, int x, int y, bool down_p,$/;"	f	signature:(struct frame *f, int x, int y, bool down_p, int modifiers)
handle_user_signal	keyboard.c	/^handle_user_signal (int sig)$/;"	f	file:	signature:(int sig)
handle_window_change_signal	dispnew.c	/^handle_window_change_signal (int sig)$/;"	f	file:	signature:(int sig)
hand_cursor	nsterm.h	/^  Cursor hand_cursor;$/;"	m	struct:ns_output	access:public
hand_cursor	w32term.h	/^  Cursor hand_cursor;$/;"	m	struct:w32_output	access:public
hand_cursor	xterm.h	/^  Cursor hand_cursor;$/;"	m	struct:x_output	access:public
hard	textprop.c	/^enum { soft = false, hard = true };$/;"	e	enum:__anon59	file:
harmonize_variable_watchers	data.c	/^harmonize_variable_watchers (Lisp_Object alias, Lisp_Object base_variable)$/;"	f	file:	signature:(Lisp_Object alias, Lisp_Object base_variable)
hash	dispextern.h	/^  EMACS_UINT hash;$/;"	m	struct:image	access:public
hash	dispextern.h	/^  unsigned hash;$/;"	m	struct:face	access:public
hash	dispextern.h	/^  unsigned hash;$/;"	m	struct:glyph_row	access:public
hash	lisp.h	/^  Lisp_Object hash;$/;"	m	struct:Lisp_Hash_Table	access:public
hashfn	lisp.h	/^  EMACS_UINT (*hashfn) (struct hash_table_test *t, Lisp_Object);$/;"	m	struct:hash_table_test	access:public
hashfn_eq	fns.c	/^hashfn_eq (struct hash_table_test *ht, Lisp_Object key)$/;"	f	file:	signature:(struct hash_table_test *ht, Lisp_Object key)
hashfn_eql	fns.c	/^hashfn_eql (struct hash_table_test *ht, Lisp_Object key)$/;"	f	file:	signature:(struct hash_table_test *ht, Lisp_Object key)
hashfn_equal	fns.c	/^hashfn_equal (struct hash_table_test *ht, Lisp_Object key)$/;"	f	file:	signature:(struct hash_table_test *ht, Lisp_Object key)
hashfn_profiler	profiler.c	/^hashfn_profiler (struct hash_table_test *ht, Lisp_Object bt)$/;"	f	file:	signature:(struct hash_table_test *ht, Lisp_Object bt)
hashfn_user_defined	fns.c	/^hashfn_user_defined (struct hash_table_test *ht, Lisp_Object key)$/;"	f	file:	signature:(struct hash_table_test *ht, Lisp_Object key)
hashtest_eq	fns.c	/^  hashtest_eq = { LISPSYM_INITIALLY (Qeq), LISPSYM_INITIALLY (Qnil),$/;"	v
hashtest_eql	fns.c	/^  hashtest_eql = { LISPSYM_INITIALLY (Qeql), LISPSYM_INITIALLY (Qnil),$/;"	v
hashtest_equal	fns.c	/^  hashtest_equal = { LISPSYM_INITIALLY (Qequal), LISPSYM_INITIALLY (Qnil),$/;"	v
hashtest_profiler	profiler.c	/^static struct hash_table_test hashtest_profiler;$/;"	v	typeref:struct:hash_table_test	file:
hash_clear	fns.c	/^hash_clear (struct Lisp_Hash_Table *h)$/;"	f	file:	signature:(struct Lisp_Hash_Table *h)
hash_get_category_set	category.c	/^hash_get_category_set (Lisp_Object table, Lisp_Object category_set)$/;"	f	file:	signature:(Lisp_Object table, Lisp_Object category_set)
HASH_HASH	lisp.h	/^HASH_HASH (struct Lisp_Hash_Table *h, ptrdiff_t idx)$/;"	f	signature:(struct Lisp_Hash_Table *h, ptrdiff_t idx)
hash_index	charset.h	/^  ptrdiff_t hash_index;$/;"	m	struct:charset	access:public
hash_index	composite.h	/^  ptrdiff_t hash_index;$/;"	m	struct:composition	access:public
HASH_INDEX	fns.c	/^HASH_INDEX (struct Lisp_Hash_Table *h, ptrdiff_t idx)$/;"	f	file:	signature:(struct Lisp_Hash_Table *h, ptrdiff_t idx)
HASH_KEY	lisp.h	/^HASH_KEY (struct Lisp_Hash_Table *h, ptrdiff_t idx)$/;"	f	signature:(struct Lisp_Hash_Table *h, ptrdiff_t idx)
hash_lookup	fns.c	/^hash_lookup (struct Lisp_Hash_Table *h, Lisp_Object key, EMACS_UINT *hash)$/;"	f	signature:(struct Lisp_Hash_Table *h, Lisp_Object key, EMACS_UINT *hash)
hash_lookup	lisp.h	/^ptrdiff_t hash_lookup (struct Lisp_Hash_Table *, Lisp_Object, EMACS_UINT *);$/;"	p	signature:(struct Lisp_Hash_Table *, Lisp_Object, EMACS_UINT *)
HASH_NEXT	fns.c	/^HASH_NEXT (struct Lisp_Hash_Table *h, ptrdiff_t idx)$/;"	f	file:	signature:(struct Lisp_Hash_Table *h, ptrdiff_t idx)
hash_put	fns.c	/^hash_put (struct Lisp_Hash_Table *h, Lisp_Object key, Lisp_Object value,$/;"	f	signature:(struct Lisp_Hash_Table *h, Lisp_Object key, Lisp_Object value, EMACS_UINT hash)
hash_put	lisp.h	/^ptrdiff_t hash_put (struct Lisp_Hash_Table *, Lisp_Object, Lisp_Object,$/;"	p	signature:(struct Lisp_Hash_Table *, Lisp_Object, Lisp_Object, EMACS_UINT)
hash_remove_from_table	fns.c	/^hash_remove_from_table (struct Lisp_Hash_Table *h, Lisp_Object key)$/;"	f	signature:(struct Lisp_Hash_Table *h, Lisp_Object key)
hash_remove_from_table	lisp.h	/^void hash_remove_from_table (struct Lisp_Hash_Table *, Lisp_Object);$/;"	p	signature:(struct Lisp_Hash_Table *, Lisp_Object)
hash_string	fns.c	/^hash_string (char const *ptr, ptrdiff_t len)$/;"	f	signature:(char const *ptr, ptrdiff_t len)
hash_string	lisp.h	/^EMACS_UINT hash_string (char const *, ptrdiff_t);$/;"	p	signature:(char const *, ptrdiff_t)
hash_string_case_insensitive	xfaces.c	/^hash_string_case_insensitive (Lisp_Object string)$/;"	f	file:	signature:(Lisp_Object string)
HASH_TABLE_P	lisp.h	/^HASH_TABLE_P (Lisp_Object a)$/;"	f	signature:(Lisp_Object a)
HASH_TABLE_SIZE	lisp.h	/^HASH_TABLE_SIZE (struct Lisp_Hash_Table *h)$/;"	f	signature:(struct Lisp_Hash_Table *h)
hash_table_test	lisp.h	/^struct hash_table_test$/;"	s
hash_table_test::cmpfn	lisp.h	/^  bool (*cmpfn) (struct hash_table_test *t, Lisp_Object, Lisp_Object);$/;"	m	struct:hash_table_test	access:public
hash_table_test::hashfn	lisp.h	/^  EMACS_UINT (*hashfn) (struct hash_table_test *t, Lisp_Object);$/;"	m	struct:hash_table_test	access:public
hash_table_test::name	lisp.h	/^  Lisp_Object name;$/;"	m	struct:hash_table_test	access:public
hash_table_test::user_cmp_function	lisp.h	/^  Lisp_Object user_cmp_function;$/;"	m	struct:hash_table_test	access:public
hash_table_test::user_hash_function	lisp.h	/^  Lisp_Object user_hash_function;$/;"	m	struct:hash_table_test	access:public
HASH_VALUE	lisp.h	/^HASH_VALUE (struct Lisp_Hash_Table *h, ptrdiff_t idx)$/;"	f	signature:(struct Lisp_Hash_Table *h, ptrdiff_t idx)
has_been_visible	xterm.h	/^  bool_bf has_been_visible : 1;$/;"	m	struct:x_output	access:public
has_char	font.h	/^  int (*has_char) (Lisp_Object font, int c);$/;"	m	struct:font_driver	access:public
has_palette	w32term.h	/^  int has_palette;$/;"	m	struct:w32_display_info	access:public
HAVE_ACCEPT4	config.h	257;"	d
HAVE_ALIGNED_ALLOC	config.h	332;"	d
HAVE_ALLOCA	config.h	336;"	d
HAVE_ALLOCA_H	config.h	340;"	d
have_boxes	menu.c	/^have_boxes (void)$/;"	f	file:	signature:(void)
HAVE_BYTESWAP_H	config.h	346;"	d
HAVE_C99_STRTOLD	config.h	349;"	d
HAVE_CFMAKERAW	config.h	352;"	d
HAVE_CFSETSPEED	config.h	355;"	d
HAVE_CLOCK_GETTIME	config.h	358;"	d
HAVE_CLOCK_SETTIME	config.h	361;"	d
HAVE_C_VARARRAYS	config.h	370;"	d
HAVE_DBUS	config.h	377;"	d
HAVE_DBUS_TYPE_IS_VALID	config.h	380;"	d
HAVE_DBUS_VALIDATE_BUS_NAME	config.h	383;"	d
HAVE_DBUS_VALIDATE_INTERFACE	config.h	386;"	d
HAVE_DBUS_VALIDATE_MEMBER	config.h	389;"	d
HAVE_DBUS_VALIDATE_PATH	config.h	392;"	d
HAVE_DBUS_WATCH_GET_UNIX_FD	config.h	395;"	d
HAVE_DECL_ALARM	config.h	399;"	d
HAVE_DECL_ALIGNED_ALLOC	config.h	403;"	d
HAVE_DECL_CLEARERR_UNLOCKED	config.h	407;"	d
HAVE_DECL_FDATASYNC	config.h	415;"	d
HAVE_DECL_FDOPENDIR	config.h	419;"	d
HAVE_DECL_FEOF_UNLOCKED	config.h	423;"	d
HAVE_DECL_FERROR_UNLOCKED	config.h	427;"	d
HAVE_DECL_FFLUSH_UNLOCKED	config.h	431;"	d
HAVE_DECL_FGETS_UNLOCKED	config.h	435;"	d
HAVE_DECL_FPUTC_UNLOCKED	config.h	439;"	d
HAVE_DECL_FPUTS_UNLOCKED	config.h	443;"	d
HAVE_DECL_FREAD_UNLOCKED	config.h	447;"	d
HAVE_DECL_FWRITE_UNLOCKED	config.h	451;"	d
HAVE_DECL_GETCHAR_UNLOCKED	config.h	455;"	d
HAVE_DECL_GETC_UNLOCKED	config.h	459;"	d
HAVE_DECL_GETDTABLESIZE	config.h	463;"	d
HAVE_DECL_LOCALTIME_R	config.h	467;"	d
HAVE_DECL_MEMRCHR	config.h	471;"	d
HAVE_DECL_PUTCHAR_UNLOCKED	config.h	475;"	d
HAVE_DECL_PUTC_UNLOCKED	config.h	479;"	d
HAVE_DECL_STRMODE	config.h	483;"	d
HAVE_DECL_STRTOIMAX	config.h	487;"	d
HAVE_DECL_SYS_SIGLIST	config.h	495;"	d
HAVE_DECL___FPENDING	config.h	507;"	d
HAVE_DIALOGS	w32menu.c	54;"	d	file:
HAVE_DIRENT_H	config.h	514;"	d
HAVE_DUP2	config.h	526;"	d
HAVE_ENDGRENT	config.h	532;"	d
HAVE_ENDPWENT	config.h	535;"	d
HAVE_ENVIRON_DECL	config.h	538;"	d
HAVE_EXECINFO_H	config.h	544;"	d
HAVE_FACCESSAT	config.h	547;"	d
HAVE_FCHDIR	config.h	553;"	d
HAVE_FCHMOD	config.h	556;"	d
HAVE_FCNTL	config.h	559;"	d
HAVE_FDOPENDIR	config.h	565;"	d
HAVE_FORK	config.h	568;"	d
HAVE_FREEIFADDRS	config.h	571;"	d
HAVE_FREETYPE	config.h	574;"	d
HAVE_FSEEKO	config.h	577;"	d
HAVE_FSTATAT	config.h	580;"	d
HAVE_FSYNC	config.h	583;"	d
HAVE_FUTIMENS	config.h	586;"	d
HAVE_FUTIMES	config.h	589;"	d
HAVE_FUTIMESAT	config.h	592;"	d
HAVE_GAI_STRERROR	config.h	595;"	d
HAVE_GETADDRINFO_A	config.h	604;"	d
HAVE_GETDTABLESIZE	config.h	607;"	d
HAVE_GETEGID	config.h	610;"	d
HAVE_GETEUID	config.h	613;"	d
HAVE_GETGID	config.h	616;"	d
HAVE_GETGRENT	config.h	619;"	d
HAVE_GETHOSTNAME	config.h	625;"	d
HAVE_GETIFADDRS	config.h	628;"	d
HAVE_GETOPT_H	config.h	631;"	d
HAVE_GETOPT_LONG_ONLY	config.h	634;"	d
HAVE_GETPAGESIZE	config.h	637;"	d
HAVE_GETPT	config.h	640;"	d
HAVE_GETPWENT	config.h	643;"	d
HAVE_GETRLIMIT	config.h	646;"	d
HAVE_GETRUSAGE	config.h	649;"	d
HAVE_GETSOCKNAME	config.h	652;"	d
HAVE_GETTIMEOFDAY	config.h	655;"	d
HAVE_GETUID	config.h	658;"	d
HAVE_GET_CURRENT_DIR_NAME	config.h	661;"	d
HAVE_GHOSTSCRIPT	image.c	9420;"	d	file:
HAVE_GIF	config.h	667;"	d
HAVE_GIFERRORSTRING	image.c	7534;"	d	file:
HAVE_GLIB	config.h	670;"	d
HAVE_GNUTLS	config.h	673;"	d
HAVE_GNUTLS3	config.h	676;"	d
HAVE_GRANTPT	config.h	682;"	d
HAVE_GSETTINGS	config.h	685;"	d
HAVE_GTK3	config.h	688;"	d
HAVE_GTK_ADJUSTMENT_GET_PAGE_SIZE	config.h	691;"	d
HAVE_GTK_DIALOG_GET_ACTION_AREA	config.h	694;"	d
HAVE_GTK_HANDLE_BOX_NEW	config.h	700;"	d
HAVE_GTK_ORIENTABLE_SET_ORIENTATION	config.h	703;"	d
HAVE_GTK_TEAROFF_MENU_ITEM_NEW	config.h	706;"	d
HAVE_GTK_WIDGET_GET_MAPPED	config.h	709;"	d
HAVE_GTK_WIDGET_GET_SENSITIVE	config.h	712;"	d
HAVE_GTK_WIDGET_GET_WINDOW	config.h	715;"	d
HAVE_GTK_WIDGET_SET_HAS_WINDOW	config.h	718;"	d
HAVE_GTK_WINDOW_SET_HAS_RESIZE_GRIP	config.h	721;"	d
HAVE_IFADDRS_H	config.h	724;"	d
HAVE_INET_SOCKETS	config.h	730;"	d
HAVE_INOTIFY	config.h	733;"	d
HAVE_INTTYPES_H	config.h	736;"	d
HAVE_ITIMERSPEC	syssignal.h	48;"	d
HAVE_JPEG	config.h	742;"	d
HAVE_LANGINFO_CODESET	config.h	766;"	d
HAVE_LIBXML2	config.h	796;"	d
HAVE_LIMITS_H	config.h	799;"	d
HAVE_LINUX_FS_H	config.h	802;"	d
HAVE_LINUX_SYSINFO	config.h	805;"	d
HAVE_LOCALTIME_R	config.h	808;"	d
HAVE_LOCAL_SOCKETS	process.c	55;"	d	file:
HAVE_LOG2	config.h	811;"	d
HAVE_LONG_FILE_NAMES	config.h	814;"	d
HAVE_LONG_LONG_INT	config.h	817;"	d
HAVE_LRAND48	config.h	820;"	d
HAVE_LSTAT	config.h	823;"	d
HAVE_LUTIMES	config.h	826;"	d
HAVE_MALLOC_H	config.h	853;"	d
have_mask	xterm.h	/^  bool have_mask;$/;"	m	struct:x_bitmap_record	access:public
HAVE_MBSTATE_T	config.h	859;"	d
HAVE_MEMORY_H	config.h	862;"	d
HAVE_MEMRCHR	config.h	865;"	d
HAVE_MINMAX_IN_SYS_PARAM_H	config.h	871;"	d
HAVE_MMAP	config.h	874;"	d
HAVE_MODULES	alloc.c	/^enum { HAVE_MODULES = false };$/;"	e	enum:__anon11	file:
HAVE_MULTILINGUAL_MENU	xmenu.c	63;"	d	file:
HAVE_NATIVE_FS	nsterm.h	47;"	d
HAVE_NET_IF_H	config.h	889;"	d
HAVE_NEWLOCALE	config.h	892;"	d
HAVE_PERSONALITY_ADDR_NO_RANDOMIZE	config.h	908;"	d
HAVE_PIPE2	config.h	911;"	d
HAVE_PNG	config.h	914;"	d
HAVE_POSIX_OPENPT	config.h	920;"	d
HAVE_PRCTL	config.h	923;"	d
HAVE_PROCFS	config.h	926;"	d
HAVE_PSELECT	config.h	929;"	d
HAVE_PTHREAD	config.h	935;"	d
HAVE_PTHREAD_H	config.h	938;"	d
HAVE_PTHREAD_SIGMASK	config.h	941;"	d
HAVE_PTYS	config.h	944;"	d
HAVE_PTY_H	config.h	947;"	d
HAVE_PUTENV	config.h	950;"	d
HAVE_PWD_H	config.h	953;"	d
HAVE_RANDOM	config.h	956;"	d
HAVE_RANDOM	conf_post.h	128;"	d
HAVE_RANDOM	sysdep.c	2108;"	d	file:
HAVE_READLINK	config.h	959;"	d
HAVE_READLINKAT	config.h	962;"	d
HAVE_RECVFROM	config.h	965;"	d
HAVE_RINT	config.h	968;"	d
HAVE_RINT	conf_post.h	129;"	d
HAVE_SBRK	config.h	974;"	d
HAVE_SECURE_GETENV	config.h	977;"	d
HAVE_SELECT	config.h	980;"	d
HAVE_SENDTO	config.h	983;"	d
HAVE_SEQPACKET	process.c	229;"	d	file:
HAVE_SETITIMER	config.h	989;"	d
HAVE_SETLOCALE	config.h	992;"	d
HAVE_SETRLIMIT	config.h	995;"	d
HAVE_SHUTDOWN	config.h	998;"	d
HAVE_SIGSETJMP	config.h	1010;"	d
HAVE_SIGSET_T	config.h	1013;"	d
HAVE_SNPRINTF	config.h	1016;"	d
HAVE_SOCKETS	config.h	1019;"	d
HAVE_SOUND	config.h	1022;"	d
HAVE_STACK_OVERFLOW_HANDLING	config.h	1028;"	d
HAVE_STDINT_H	config.h	1034;"	d
HAVE_STDIO_EXT_H	config.h	1037;"	d
HAVE_STDLIB_H	config.h	1040;"	d
HAVE_STDLIB_H	image.c	6373;"	d	file:
HAVE_STPCPY	config.h	1043;"	d
HAVE_STRINGS_H	config.h	1046;"	d
HAVE_STRING_H	config.h	1049;"	d
HAVE_STRSIGNAL	config.h	1052;"	d
HAVE_STRTOIMAX	config.h	1055;"	d
HAVE_STRUCT_ATTRIBUTE_ALIGNED	config.h	1062;"	d
HAVE_STRUCT_ATTRIBUTE_ALIGNED	emacs-module.c	/^enum { HAVE_STRUCT_ATTRIBUTE_ALIGNED = 0 };$/;"	e	enum:__anon41	file:
HAVE_STRUCT_IFREQ_IFR_ADDR	config.h	1065;"	d
HAVE_STRUCT_IFREQ_IFR_BROADADDR	config.h	1071;"	d
HAVE_STRUCT_IFREQ_IFR_FLAGS	config.h	1074;"	d
HAVE_STRUCT_IFREQ_IFR_HWADDR	config.h	1077;"	d
HAVE_STRUCT_IFREQ_IFR_NETMASK	config.h	1080;"	d
HAVE_STRUCT_STAT_ST_ATIM_TV_NSEC	config.h	1095;"	d
HAVE_STRUCT_TM_TM_ZONE	config.h	1107;"	d
HAVE_STRUCT_UNIPAIR_UNICODE	config.h	1110;"	d
HAVE_SYMLINK	config.h	1116;"	d
HAVE_SYNC	config.h	1119;"	d
HAVE_SYS_CDEFS_H	config.h	1128;"	d
HAVE_SYS_PARAM_H	config.h	1137;"	d
HAVE_SYS_PRCTL_H	config.h	1140;"	d
HAVE_SYS_RESOURCE_H	config.h	1143;"	d
HAVE_SYS_SELECT_H	config.h	1146;"	d
HAVE_SYS_SOCKET_H	config.h	1149;"	d
HAVE_SYS_SOUNDCARD_H	config.h	1152;"	d
HAVE_SYS_STAT_H	config.h	1155;"	d
HAVE_SYS_SYSINFO_H	config.h	1158;"	d
HAVE_SYS_TIME_H	config.h	1164;"	d
HAVE_SYS_TYPES_H	config.h	1167;"	d
HAVE_SYS_UN_H	config.h	1170;"	d
HAVE_SYS_UTSNAME_H	config.h	1173;"	d
HAVE_SYS_WAIT_H	config.h	1179;"	d
HAVE_TERM_H	config.h	1182;"	d
HAVE_TIFF	config.h	1185;"	d
HAVE_TIMEGM	config.h	1188;"	d
HAVE_TIMERFD	config.h	1191;"	d
HAVE_TIMER_SETTIME	config.h	1194;"	d
HAVE_TM_GMTOFF	config.h	1200;"	d
HAVE_TM_GMTOFF	editfns.c	80;"	d	file:
HAVE_TM_ZONE	config.h	1204;"	d
HAVE_TRUNC	config.h	1210;"	d
HAVE_TZSET	config.h	1217;"	d
HAVE_UNISTD_H	config.h	1220;"	d
HAVE_UNSIGNED_LONG_LONG_INT	config.h	1223;"	d
HAVE_UTIMENSAT	config.h	1229;"	d
HAVE_UTMP_H	config.h	1232;"	d
HAVE_VFORK	config.h	1238;"	d
HAVE_WCHAR_H	config.h	1247;"	d
HAVE_WCHAR_T	config.h	1250;"	d
HAVE_WINDOW_SYSTEM	config.h	1253;"	d
HAVE_WORKING_FORK	config.h	1259;"	d
HAVE_WORKING_UTIMES	config.h	1266;"	d
HAVE_WORKING_VFORK	config.h	1269;"	d
HAVE_X11	config.h	1275;"	d
HAVE_X11R6	config.h	1278;"	d
HAVE_X11R6_XIM	config.h	1281;"	d
HAVE_XDBE	config.h	1290;"	d
HAVE_XFIXES	config.h	1293;"	d
HAVE_XFT	config.h	1296;"	d
HAVE_XIM	config.h	1299;"	d
HAVE_XINERAMA	config.h	1302;"	d
HAVE_XKB	config.h	1305;"	d
HAVE_XPM	config.h	1308;"	d
HAVE_XRANDR	config.h	1311;"	d
HAVE_XRMSETDATABASE	config.h	1314;"	d
HAVE_XSCREENNUMBEROFSCREEN	config.h	1317;"	d
HAVE_XSCREENRESOURCESTRING	config.h	1320;"	d
HAVE_X_I18N	config.h	1326;"	d
HAVE_X_SM	config.h	1329;"	d
HAVE_X_WINDOWS	config.h	1332;"	d
HAVE_ZLIB	config.h	1335;"	d
HAVE__SETJMP	config.h	1338;"	d
HAVE___BUILTIN_UNWIND_INIT	config.h	1341;"	d
HAVE___EXECUTABLE_START	config.h	1344;"	d
hBalloonIcon	w32fns.c	/^  HICON hBalloonIcon;$/;"	m	struct:MY_NOTIFYICONDATAW	file:	access:public
HBAR_CURSOR	dispextern.h	/^  HBAR_CURSOR$/;"	e	enum:text_cursor_kinds
hbox_widget	xterm.h	/^  GtkWidget *hbox_widget;$/;"	m	struct:x_output	access:public
hdc	dispextern.h	/^  HDC hdc;$/;"	m	struct:glyph_string	access:public
hdr	gmalloc.c	/^struct hdr$/;"	s	file:
hdr::magic	gmalloc.c	/^    size_t magic;	\/* Magic number to check header integrity.  *\/$/;"	m	struct:hdr	file:	access:public
hdr::size	gmalloc.c	/^    size_t size;	\/* Exact size requested by user.  *\/$/;"	m	struct:hdr	file:	access:public
hdrNil	unexelf.c	114;"	d	file:
HDRR	unexelf.c	/^} HDRR, *pHDRR;$/;"	t	typeref:struct:__anon123	file:
HDRR	unexelf.c	147;"	d	file:
HDRR	unexelf.c	153;"	d	file:
header	buffer.h	/^  struct vectorlike_header header;$/;"	m	struct:buffer	typeref:struct:buffer::vectorlike_header	access:public
header	font.h	/^  struct vectorlike_header header;$/;"	m	struct:font	typeref:struct:font::vectorlike_header	access:public
header	font.h	/^  struct vectorlike_header header;$/;"	m	struct:font_entity	typeref:struct:font_entity::vectorlike_header	access:public
header	font.h	/^  struct vectorlike_header header;$/;"	m	struct:font_spec	typeref:struct:font_spec::vectorlike_header	access:public
header	frame.h	/^  struct vectorlike_header header;$/;"	m	struct:frame	typeref:struct:frame::vectorlike_header	access:public
header	lisp.h	/^    struct vectorlike_header header;$/;"	m	struct:Lisp_Bool_Vector	typeref:struct:Lisp_Bool_Vector::vectorlike_header	access:public
header	lisp.h	/^    struct vectorlike_header header;$/;"	m	struct:Lisp_Char_Table	typeref:struct:Lisp_Char_Table::vectorlike_header	access:public
header	lisp.h	/^    struct vectorlike_header header;$/;"	m	struct:Lisp_Subr	typeref:struct:Lisp_Subr::vectorlike_header	access:public
header	lisp.h	/^    struct vectorlike_header header;$/;"	m	struct:Lisp_Sub_Char_Table	typeref:struct:Lisp_Sub_Char_Table::vectorlike_header	access:public
header	lisp.h	/^    struct vectorlike_header header;$/;"	m	struct:Lisp_Vector	typeref:struct:Lisp_Vector::vectorlike_header	access:public
header	lisp.h	/^  struct vectorlike_header header;$/;"	m	struct:Lisp_Hash_Table	typeref:struct:Lisp_Hash_Table::vectorlike_header	access:public
header	lisp.h	/^  struct vectorlike_header header;$/;"	m	struct:Lisp_Module_Function	typeref:struct:Lisp_Module_Function::vectorlike_header	access:public
header	process.h	/^    struct vectorlike_header header;$/;"	m	struct:Lisp_Process	typeref:struct:Lisp_Process::vectorlike_header	access:public
header	sound.c	/^  char *header;$/;"	m	struct:sound	file:	access:public
header	termhooks.h	/^  struct vectorlike_header header;$/;"	m	struct:terminal	typeref:struct:terminal::vectorlike_header	access:public
header	thread.h	/^  struct vectorlike_header header;$/;"	m	struct:Lisp_CondVar	typeref:struct:Lisp_CondVar::vectorlike_header	access:public
header	thread.h	/^  struct vectorlike_header header;$/;"	m	struct:Lisp_Mutex	typeref:struct:Lisp_Mutex::vectorlike_header	access:public
header	thread.h	/^  struct vectorlike_header header;$/;"	m	struct:thread_state	typeref:struct:thread_state::vectorlike_header	access:public
header	w32term.h	/^  struct vectorlike_header header;$/;"	m	struct:scroll_bar	typeref:struct:scroll_bar::vectorlike_header	access:public
header	window.c	/^    struct vectorlike_header header;$/;"	m	struct:save_window_data	typeref:struct:save_window_data::vectorlike_header	file:	access:public
header	window.c	/^  struct vectorlike_header header;$/;"	m	struct:saved_window	typeref:struct:saved_window::vectorlike_header	file:	access:public
header	window.h	/^    struct vectorlike_header header;$/;"	m	struct:window	typeref:struct:window::vectorlike_header	access:public
header	xterm.h	/^  struct vectorlike_header header;$/;"	m	struct:scroll_bar	typeref:struct:scroll_bar::vectorlike_header	access:public
header	xwidget.h	/^  struct vectorlike_header header;$/;"	m	struct:xwidget	typeref:struct:xwidget::vectorlike_header	access:public
header	xwidget.h	/^  struct vectorlike_header header;$/;"	m	struct:xwidget_view	typeref:struct:xwidget_view::vectorlike_header	access:public
HEADER_LINE_FACE_ID	dispextern.h	/^  HEADER_LINE_FACE_ID,$/;"	e	enum:face_id
header_line_format_	buffer.h	/^  Lisp_Object header_line_format_;$/;"	m	struct:buffer	access:public
header_line_height	window.h	/^    int header_line_height;$/;"	m	struct:window	access:public
header_line_p	dispextern.h	/^  bool_bf header_line_p : 1;$/;"	m	struct:glyph_matrix	access:public
header_line_p	dispextern.h	/^  bool_bf header_line_p : 1;$/;"	m	struct:it	access:public
header_size	lisp.h	/^    header_size = offsetof (struct Lisp_Vector, contents),$/;"	e	enum:__anon20
header_size	sound.c	/^  int header_size;$/;"	m	struct:sound	file:	access:public
HEAD_ADDR_VSTRING	regex.c	4188;"	d	file:
head_ascii	coding.h	/^  ptrdiff_t head_ascii;$/;"	m	struct:coding_system	access:public
head_table	keyboard.c	/^static const struct event_head head_table[] = {$/;"	v	typeref:struct:event_head	file:
HEAP	gmalloc.c	115;"	d	file:
heap	ralloc.c	/^  struct heap *heap; 		\/* Heap this bloc is in.  *\/$/;"	m	struct:bp	typeref:struct:bp::heap	file:	access:public
heap	ralloc.c	/^typedef struct heap$/;"	s	file:
heap	w32heap.c	/^HANDLE heap = NULL;$/;"	v
heap::bloc_start	ralloc.c	/^  void *bloc_start;$/;"	m	struct:heap	file:	access:public
heap::end	ralloc.c	/^  void *end;$/;"	m	struct:heap	file:	access:public
heap::first_bloc	ralloc.c	/^  struct bp *first_bloc;$/;"	m	struct:heap	typeref:struct:heap::bp	file:	access:public
heap::free	ralloc.c	/^  void *free;$/;"	m	struct:heap	file:	access:public
heap::last_bloc	ralloc.c	/^  struct bp *last_bloc;$/;"	m	struct:heap	typeref:struct:heap::bp	file:	access:public
heap::next	ralloc.c	/^  struct heap *next;$/;"	m	struct:heap	typeref:struct:heap::heap	file:	access:public
heap::prev	ralloc.c	/^  struct heap *prev;$/;"	m	struct:heap	typeref:struct:heap::heap	file:	access:public
heap::start	ralloc.c	/^  void *start;$/;"	m	struct:heap	file:	access:public
HeapCompatibilityInformation	w32heap.c	/^  HeapCompatibilityInformation$/;"	e	enum:_HEAP_INFORMATION_CLASS	file:
HeapSetInformation_Proc	w32heap.c	/^typedef WINBASEAPI BOOL (WINAPI * HeapSetInformation_Proc)(HANDLE,HEAP_INFORMATION_CLASS,PVOID,SIZE_T);$/;"	t	file:
heapsize	gmalloc.c	/^static size_t heapsize;$/;"	v	file:
heap_base	ralloc.c	/^static struct heap heap_base;$/;"	v	typeref:struct:heap	file:
heap_bss_diff	emacs.c	/^static uprintmax_t heap_bss_diff;$/;"	v	file:
HEAP_INFORMATION_CLASS	w32heap.c	/^} HEAP_INFORMATION_CLASS;$/;"	t	typeref:enum:_HEAP_INFORMATION_CLASS	file:
heap_ptr	ralloc.c	/^} *heap_ptr;$/;"	t	typeref:struct:heap	file:
height	dispextern.h	/^      unsigned height  : 16;$/;"	m	struct:glyph::__anon110::__anon112	access:public
height	dispextern.h	/^  int ascent, height;$/;"	m	struct:glyph_row	access:public
height	dispextern.h	/^  int height, nrows;$/;"	m	struct:run	access:public
height	dispextern.h	/^  int height;$/;"	m	struct:glyph_string	access:public
height	dispextern.h	/^  int width, height;$/;"	m	struct:image	access:public
height	dispextern.h	/^  Lisp_Object height;$/;"	m	struct:it_slice	access:public
height	dispextern.h	/^  unsigned height : 16;$/;"	m	struct:glyph_slice	access:public
height	dispnew.c	/^  int height;$/;"	m	struct:dim	file:	access:public
height	font.h	/^  int height;$/;"	m	struct:font	access:public
height	frame.c	/^  (Lisp_Object frame, Lisp_Object height, Lisp_Object pretend, Lisp_Object pixelwise)$/;"	v
height	frame.c	/^  (Lisp_Object frame, Lisp_Object width, Lisp_Object height, Lisp_Object pixelwise)$/;"	v
height	fringe.c	/^  (Lisp_Object bitmap, Lisp_Object bits, Lisp_Object height, Lisp_Object width, Lisp_Object align)$/;"	v
height	fringe.c	/^  unsigned height : 8;$/;"	m	struct:fringe_bitmap	file:	access:public
height	nsgui.h	/^      unsigned width, height;$/;"	m	struct:__anon46	access:public
height	nsgui.h	/^typedef struct _NSSize  { CGFloat width, height; } NSSize;$/;"	m	struct:_NSSize	access:public
height	nsterm.h	/^  float height;$/;"	m	struct:nsfont_info	access:public
height	nsterm.h	/^  int height, width, depth;$/;"	m	struct:ns_bitmap_record	access:public
height	process.c	/^  (Lisp_Object process, Lisp_Object height, Lisp_Object width)$/;"	v
height	w32gui.h	/^    unsigned width, height;$/;"	m	struct:__anon86	access:public
height	w32term.h	/^  int height, width, depth;$/;"	m	struct:w32_bitmap_record	access:public
height	w32term.h	/^  int top, left, width, height;$/;"	m	struct:scroll_bar	access:public
height	window.c	/^   Lisp_Object height, Lisp_Object horizontal_type)$/;"	v
height	xterm.h	/^  int height, width, depth;$/;"	m	struct:x_bitmap_record	access:public
height	xterm.h	/^  int top, left, width, height;$/;"	m	struct:scroll_bar	access:public
height	xwidget.c	/^   Lisp_Object title, Lisp_Object width, Lisp_Object height,$/;"	v
height	xwidget.h	/^  int height;$/;"	m	struct:xwidget	access:public
HeightValue	nsgui.h	180;"	d
HeightValue	w32gui.h	98;"	d
help	gtkutil.h	/^  Lisp_Object   help;$/;"	m	struct:xg_menu_item_cb_data_	access:public
help_char_p	keyboard.c	/^help_char_p (Lisp_Object c)$/;"	f	file:	signature:(Lisp_Object c)
help_char_p	keyboard.c	/^static bool help_char_p (Lisp_Object);$/;"	p	file:
help_echo_object	xdisp.c	/^Lisp_Object help_echo_object;$/;"	v
help_echo_pos	xdisp.c	/^ptrdiff_t help_echo_pos;$/;"	v
help_echo_showing_p	xdisp.c	/^bool help_echo_showing_p;$/;"	v
help_echo_string	xdisp.c	/^Lisp_Object help_echo_string;$/;"	v
help_echo_window	xdisp.c	/^Lisp_Object help_echo_window;$/;"	v
HELP_EVENT	termhooks.h	/^  HELP_EVENT,$/;"	e	enum:event_kind
help_form_saved_window_configs	keyboard.c	/^static Lisp_Object help_form_saved_window_configs;$/;"	v	file:
help_text	term.c	/^  const char **help_text;$/;"	m	struct:tty_menu_struct	file:	access:public
hexdigit	character.c	/^signed char HEXDIGIT_CONST hexdigit[UCHAR_MAX + 1] =$/;"	v
HEXDIGIT_CONST	character.h	704;"	d
HEXDIGIT_CONST	character.h	707;"	d
HEXDIGIT_IS_CONST	character.h	705;"	d
HEXDIGIT_IS_CONST	character.h	708;"	d
hfont	w32font.h	/^  HFONT hfont;$/;"	m	struct:w32font_info	access:public
hi	systime.h	/^  EMACS_INT hi;$/;"	m	struct:lisp_time	access:public
hIcon	w32fns.c	/^  HICON hIcon;$/;"	m	struct:MY_NOTIFYICONDATAW	file:	access:public
hidden	xwidget.h	/^  bool hidden;$/;"	m	struct:xwidget_view	access:public
hide_hourglass	dispextern.h	/^  void (*hide_hourglass) (struct frame *f);$/;"	m	struct:redisplay_interface	access:public
hierarchy_ch_cb	gtkutil.c	/^hierarchy_ch_cb (GtkWidget *widget,$/;"	f	file:	signature:(GtkWidget *widget, GtkWidget *previous_toplevel, gpointer user_data)
highlight_cb	gtkutil.h	/^  GCallback     highlight_cb;$/;"	m	struct:xg_menu_cb_data_	access:public
HIGHLIGHT_COLOR_DARK_BOOST_LIMIT	w32term.c	1506;"	d	file:
HIGHLIGHT_COLOR_DARK_BOOST_LIMIT	xterm.c	2540;"	d	file:
highlight_nonselected_windows	globals.h	949;"	d
highlight_trailing_whitespace	xdisp.c	/^highlight_trailing_whitespace (struct frame *f, struct glyph_row *row)$/;"	f	file:	signature:(struct frame *f, struct glyph_row *row)
hinst	w32fns.c	/^HINSTANCE hinst = NULL;$/;"	v
hinst	w32term.h	/^  HINSTANCE hinst; \/* Used to load the file *\/$/;"	m	struct:w32_bitmap_record	access:public
hinting	xsettings.c	/^  FcBool aa, hinting;$/;"	m	struct:xsettings	file:	access:public
hintstyle	xsettings.c	/^  int rgba, lcdfilter, hintstyle;$/;"	m	struct:xsettings	file:	access:public
hint_flags	xterm.h	/^  long hint_flags;$/;"	m	struct:x_output	access:public
hist	minibuf.c	/^  (Lisp_Object prompt, Lisp_Object collection, Lisp_Object predicate, Lisp_Object require_match, Lisp_Object initial_input, Lisp_Object hist, Lisp_Object def, Lisp_Object inherit_input_method)$/;"	v
hist	minibuf.c	/^  (Lisp_Object prompt, Lisp_Object initial_contents, Lisp_Object keymap, Lisp_Object read, Lisp_Object hist, Lisp_Object default_value, Lisp_Object inherit_input_method)$/;"	v
history	minibuf.c	/^  (Lisp_Object prompt, Lisp_Object initial_input, Lisp_Object history, Lisp_Object default_value, Lisp_Object inherit_input_method)$/;"	v
history_delete_duplicates	globals.h	951;"	d
history_idx	dispnew.c	/^static int history_idx;$/;"	v	file:
history_tick	dispnew.c	/^static uprintmax_t history_tick;$/;"	v	file:
hi_time	editfns.c	/^hi_time (time_t t)$/;"	f	file:	signature:(time_t t)
hl	dispextern.h	/^  enum draw_glyphs_face hl;$/;"	m	struct:glyph_string	typeref:enum:glyph_string::draw_glyphs_face	access:public
hMainThread	w32term.c	/^HANDLE hMainThread = NULL;$/;"	v
hmargin	dispextern.h	/^  int hmargin, vmargin;$/;"	m	struct:image	access:public
hmargin	gtkutil.c	/^  int hmargin, vmargin;$/;"	m	struct:xg_frame_tb_info	file:	access:public
HMONITOR	w32fns.c	/^DECLARE_HANDLE(HMONITOR);$/;"	v
hnd	w32.h	/^  HANDLE           hnd;$/;"	m	struct:__anon91	access:public
hold_keyboard_input	process.c	/^hold_keyboard_input (void)$/;"	f	signature:(void)
hold_keyboard_input	process.h	/^extern void hold_keyboard_input (void);$/;"	p	signature:(void)
HOLLOW_BOX_CURSOR	dispextern.h	/^  HOLLOW_BOX_CURSOR,$/;"	e	enum:text_cursor_kinds
hollow_rectangle_bits	fringe.c	/^static unsigned short hollow_rectangle_bits[] = {$/;"	v	file:
hollow_square_bits	fringe.c	/^static unsigned short hollow_square_bits[] = {$/;"	v	file:
Home	cm.h	114;"	d
HomeCost	cm.h	133;"	d
hook	w32fns.c	/^  HHOOK hook;     \/* hook handle *\/$/;"	m	struct:__anon74	file:	access:public
hook_count	w32fns.c	/^  int hook_count; \/* counter, if several windows are created *\/$/;"	m	struct:__anon74	file:	access:public
hook_w32_key	w32fns.c	/^hook_w32_key (int hook, int modifier, int vkey)$/;"	f	file:	signature:(int hook, int modifier, int vkey)
horizontal	frame.c	/^     (Lisp_Object frame, Lisp_Object horizontal,$/;"	v
horizontal	w32term.h	/^  bool horizontal;$/;"	m	struct:scroll_bar	access:public
horizontal	window.h	/^    bool_bf horizontal : 1;$/;"	m	struct:window	access:public
horizontal	xterm.h	/^  bool horizontal;$/;"	m	struct:scroll_bar	access:public
horizontal_action_hook_id	xterm.c	/^static XtActionHookId horizontal_action_hook_id;$/;"	v	file:
horizontal_bar_bits	fringe.c	/^static unsigned short horizontal_bar_bits[] = {$/;"	v	file:
horizontal_drag_cursor	nsterm.h	/^  Cursor horizontal_drag_cursor;$/;"	m	struct:ns_output	access:public
horizontal_drag_cursor	w32term.h	/^  Cursor horizontal_drag_cursor;$/;"	m	struct:w32_output	access:public
horizontal_drag_cursor	xterm.h	/^  Cursor horizontal_drag_cursor;$/;"	m	struct:x_output	access:public
horizontal_scroll_bar	window.h	/^    Lisp_Object horizontal_scroll_bar;$/;"	m	struct:window	access:public
horizontal_scroll_bars	frame.h	/^  bool_bf horizontal_scroll_bars : 1;$/;"	m	struct:frame	access:public
HORIZONTAL_SCROLL_BAR_BOTTOM_BORDER	w32term.h	568;"	d
HORIZONTAL_SCROLL_BAR_BOTTOM_BORDER	xterm.h	1019;"	d
HORIZONTAL_SCROLL_BAR_CLICK_EVENT	termhooks.h	/^  HORIZONTAL_SCROLL_BAR_CLICK_EVENT,	\/* .code gives the number of the mouse button$/;"	e	enum:event_kind
horizontal_scroll_bar_cursor	nsterm.h	/^  Cursor horizontal_scroll_bar_cursor;$/;"	m	struct:ns_display_info	access:public
horizontal_scroll_bar_cursor	w32term.h	/^  Cursor horizontal_scroll_bar_cursor;$/;"	m	struct:w32_display_info	access:public
horizontal_scroll_bar_cursor	xterm.h	/^  Cursor horizontal_scroll_bar_cursor;$/;"	m	struct:x_display_info	access:public
HORIZONTAL_SCROLL_BAR_INSIDE_HEIGHT	w32term.h	528;"	d
HORIZONTAL_SCROLL_BAR_INSIDE_HEIGHT	xterm.h	979;"	d
HORIZONTAL_SCROLL_BAR_INSIDE_WIDTH	w32term.h	545;"	d
HORIZONTAL_SCROLL_BAR_INSIDE_WIDTH	xterm.h	996;"	d
horizontal_scroll_bar_left_border	w32term.c	/^int horizontal_scroll_bar_left_border;$/;"	v
HORIZONTAL_SCROLL_BAR_LEFT_BORDER	w32term.h	565;"	d
HORIZONTAL_SCROLL_BAR_LEFT_BORDER	xterm.h	1016;"	d
HORIZONTAL_SCROLL_BAR_LEFT_RANGE	w32term.h	540;"	d
HORIZONTAL_SCROLL_BAR_LEFT_RANGE	xterm.h	991;"	d
horizontal_scroll_bar_min_handle	w32term.c	/^int horizontal_scroll_bar_min_handle;$/;"	v
HORIZONTAL_SCROLL_BAR_MIN_HANDLE	w32term.h	572;"	d
HORIZONTAL_SCROLL_BAR_MIN_HANDLE	xterm.h	1023;"	d
horizontal_scroll_bar_right_border	w32term.c	/^int horizontal_scroll_bar_right_border;$/;"	v
HORIZONTAL_SCROLL_BAR_RIGHT_BORDER	w32term.h	566;"	d
HORIZONTAL_SCROLL_BAR_RIGHT_BORDER	xterm.h	1017;"	d
HORIZONTAL_SCROLL_BAR_TOP_BORDER	w32term.h	567;"	d
HORIZONTAL_SCROLL_BAR_TOP_BORDER	xterm.h	1018;"	d
horizontal_scroll_bar_type	window.c	/^  Lisp_Object scroll_bar_height, horizontal_scroll_bar_type;$/;"	m	struct:saved_window	file:	access:public
horizontal_scroll_bar_type	window.h	/^    Lisp_Object horizontal_scroll_bar_type;$/;"	m	struct:window	access:public
horizontal_scroll_bar_type_	buffer.h	/^  Lisp_Object horizontal_scroll_bar_type_;$/;"	m	struct:buffer	access:public
HORIZ_WHEEL_EVENT	termhooks.h	/^  HORIZ_WHEEL_EVENT,            \/* A wheel event generated by a second$/;"	e	enum:event_kind
HOTKEY	w32fns.c	3114;"	d	file:
HOTKEY_ID	w32fns.c	3115;"	d	file:
HOTKEY_MODIFIERS	w32fns.c	3117;"	d	file:
HOTKEY_VK_CODE	w32fns.c	3116;"	d	file:
hourglass_atimer	xdisp.c	/^static struct atimer *hourglass_atimer;$/;"	v	typeref:struct:atimer	file:
hourglass_cursor	nsterm.h	/^  Cursor hourglass_cursor;$/;"	m	struct:ns_output	access:public
hourglass_cursor	w32term.h	/^  Cursor hourglass_cursor;$/;"	m	struct:w32_output	access:public
hourglass_cursor	xterm.h	/^  Cursor hourglass_cursor;$/;"	m	struct:x_output	access:public
hourglass_p	w32term.h	/^  unsigned hourglass_p : 1;$/;"	m	struct:w32_output	access:public
hourglass_p	xterm.h	/^  bool_bf hourglass_p : 1;$/;"	m	struct:x_output	access:public
hourglass_shown_p	xdisp.c	/^static bool hourglass_shown_p;$/;"	v	file:
hourglass_window	xterm.h	/^  Window hourglass_window;$/;"	m	struct:x_output	access:public
hpos	dispextern.h	/^  int hpos;$/;"	m	struct:it	access:public
hpos	indent.h	/^    EMACS_INT hpos;$/;"	m	struct:position	access:public
hpos	window.h	/^  int hpos, vpos;$/;"	m	struct:cursor_pos	access:public
hscroll	window.c	/^  Lisp_Object hscroll, min_hscroll, hscroll_whole, suspend_auto_hscroll;$/;"	m	struct:saved_window	file:	access:public
hscroll	window.h	/^    ptrdiff_t hscroll;$/;"	m	struct:window	access:public
hscrolling_current_line_p	xdisp.c	/^hscrolling_current_line_p (struct window *w)$/;"	f	file:	signature:(struct window *w)
hscroll_margin	globals.h	839;"	d
hscroll_whole	window.c	/^  Lisp_Object hscroll, min_hscroll, hscroll_whole, suspend_auto_hscroll;$/;"	m	struct:saved_window	file:	access:public
hscroll_whole	window.h	/^    ptrdiff_t hscroll_whole;$/;"	m	struct:window	access:public
hscroll_windows	xdisp.c	/^hscroll_windows (Lisp_Object window)$/;"	f	file:	signature:(Lisp_Object window)
hscroll_window_tree	xdisp.c	/^hscroll_window_tree (Lisp_Object window)$/;"	f	file:	signature:(Lisp_Object window)
htmlReadMemory	xml.c	53;"	d	file:
htmlReadMemory	xml.c	60;"	d	file:
htons	w32.c	225;"	d	file:
hWindowsThread	w32term.c	/^HANDLE hWindowsThread = NULL;$/;"	v
hwnd	w32.h	/^  HWND                hwnd;$/;"	m	struct:_child_process	access:public
hWnd	w32fns.c	/^  HWND hWnd;$/;"	m	struct:MY_NOTIFYICONDATAW	file:	access:public
hwndTrack	w32term.h	/^  HWND hwndTrack;$/;"	m	struct:tagTRACKMOUSEEVENT	access:public
hwparams	sound.c	/^  snd_pcm_hw_params_t *hwparams;$/;"	m	struct:alsa_params	file:	access:public
hybrid_aligned_alloc	gmalloc.c	/^hybrid_aligned_alloc (size_t alignment, size_t size)$/;"	f	signature:(size_t alignment, size_t size)
hybrid_calloc	gmalloc.c	/^hybrid_calloc (size_t nmemb, size_t size)$/;"	f	signature:(size_t nmemb, size_t size)
hybrid_free	gmalloc.c	/^hybrid_free (void *ptr)$/;"	f	signature:(void *ptr)
HYBRID_MALLOC	config.h	1356;"	d
hybrid_malloc	gmalloc.c	/^hybrid_malloc (size_t size)$/;"	f	signature:(size_t size)
HYBRID_MALLOC	Makefile	/^HYBRID_MALLOC = 1$/;"	m
hybrid_realloc	gmalloc.c	/^hybrid_realloc (void *ptr, size_t size)$/;"	f	signature:(void *ptr, size_t size)
hyper_modifier	termhooks.h	/^  hyper_modifier=  CHAR_HYPER,	\/* Under X, the XK_Hyper_[LR] keysyms.  *\/$/;"	e	enum:__anon72
hyper_mod_mask	xterm.h	/^  int alt_mod_mask, super_mod_mask, hyper_mod_mask;$/;"	m	struct:x_display_info	access:public
HYPHEN	character.h	/^  HYPHEN = 0x2010,$/;"	e	enum:__anon54
h_errno	w32.c	/^int h_errno = 0;$/;"	v
i	lisp.h	/^  double d; intmax_t i; void *p;$/;"	m	union:Aligned_Cons	access:public
i	lisp.h	/^  double d; intmax_t i; void *p;$/;"	m	union:Aligned_String	access:public
iauxMax	unexelf.c	/^	int iauxMax;$/;"	m	struct:__anon123	file:	access:public
ic	ccl.c	/^    int ic;			\/* Instruction Counter.  *\/$/;"	m	struct:ccl_prog_stack	file:	access:public
ic	ccl.h	/^  int ic;			\/* Instruction Counter (index for PROG).  *\/$/;"	m	struct:ccl_program	access:public
ice_connection_closed	xsmfns.c	/^ice_connection_closed (void)$/;"	f	file:	signature:(void)
ice_conn_watch_CB	xsmfns.c	/^ice_conn_watch_CB (IceConn iceConn, IcePointer clientData,$/;"	f	file:	signature:(IceConn iceConn, IcePointer clientData, int opening, IcePointer *watchData)
ice_error_handler	xsmfns.c	/^ice_error_handler (IceConn iceConn,$/;"	f	file:	signature:(IceConn iceConn, Bool swap, int offendingMinorOpcode, unsigned long offendingSequence, int errorClass, int severity, IcePointer values)
ice_fd	xsmfns.c	/^static int ice_fd = -1;$/;"	v	file:
ice_io_error_handler	xsmfns.c	/^ice_io_error_handler (IceConn iceConn)$/;"	f	file:	signature:(IceConn iceConn)
iconic	widgetprv.h	/^  Boolean	iconic;			\/* whether this frame is iconic *\/$/;"	m	struct:__anon98	access:public
iconified	frame.h	/^  bool_bf iconified : 1;$/;"	m	struct:frame	access:public
ICONIFY_EVENT	termhooks.h	/^  ICONIFY_EVENT,		\/* An X client iconified this window.  *\/$/;"	e	enum:event_kind
icon_bitmap	xterm.h	/^  ptrdiff_t icon_bitmap;$/;"	m	struct:x_output	access:public
icon_bitmap_id	w32term.h	/^  ptrdiff_t icon_bitmap_id;$/;"	m	struct:w32_display_info	access:public
icon_bitmap_id	xterm.h	/^  ptrdiff_t icon_bitmap_id;$/;"	m	struct:x_display_info	access:public
icon_desc	xterm.h	/^  Window icon_desc;$/;"	m	struct:x_output	access:public
icon_left	nsterm.h	/^  int icon_left;$/;"	m	struct:ns_output	access:public
icon_name	frame.h	/^  Lisp_Object icon_name;$/;"	m	struct:frame	access:public
icon_top	nsterm.h	/^  int icon_top;$/;"	m	struct:ns_output	access:public
id	charset.c	/^  int id;$/;"	m	struct:charset_sort_data	file:	access:public
id	charset.h	/^  int id;$/;"	m	struct:charset	access:public
id	coding.h	/^  ptrdiff_t id;$/;"	m	struct:coding_system	access:public
id	dispextern.h	/^      unsigned id    : 31;$/;"	m	struct:glyph::__anon110::__anon111	access:public
id	dispextern.h	/^  int id;$/;"	m	struct:face	access:public
id	dispextern.h	/^  ptrdiff_t id;$/;"	m	struct:composition_it	access:public
id	dispextern.h	/^  ptrdiff_t id;$/;"	m	struct:image	access:public
id	termhooks.h	/^  int id;$/;"	m	struct:terminal	access:public
id	xterm.h	/^  int id;$/;"	m	struct:x_output	access:public
IDC_HAND	w32fns.c	83;"	d	file:
identifier	xselect.c	/^  int identifier;$/;"	m	struct:prop_location	file:	access:public
idle	w32.c	/^  ULONGLONG idle;$/;"	m	struct:load_sample	file:	access:public
idnMax	unexelf.c	/^	int idnMax;$/;"	m	struct:__anon123	file:	access:public
idx	ccl.h	/^  ptrdiff_t idx;		\/* Index number of the CCL program.$/;"	m	struct:ccl_program	access:public
idx	data.c	/^  (register Lisp_Object array, Lisp_Object idx, Lisp_Object newelt)$/;"	v
idx	xdisp.c	/^  enum prop_idx idx;$/;"	m	struct:props	typeref:enum:props::prop_idx	file:	access:public
id_to_widget	gtkutil.c	/^} id_to_widget;$/;"	v	typeref:struct:__anon124	file:
ID_TO_WIDGET_INCR	gtkutil.c	3549;"	d	file:
ie	keyboard.h	/^  struct input_event ie;$/;"	m	union:buffered_input_event	typeref:struct:buffered_input_event::input_event	access:public
IEEE_FLOATING_POINT	lisp.h	/^    IEEE_FLOATING_POINT$/;"	e	enum:__anon28
iextMax	unexelf.c	/^	int iextMax;$/;"	m	struct:__anon123	file:	access:public
ifdMax	unexelf.c	/^	int ifdMax;$/;"	m	struct:__anon123	file:	access:public
ifflag_def	process.c	/^struct ifflag_def {$/;"	s	file:
ifflag_def::flag_bit	process.c	/^  int flag_bit;$/;"	m	struct:ifflag_def	file:	access:public
ifflag_def::flag_sym	process.c	/^  const char *flag_sym;$/;"	m	struct:ifflag_def	file:	access:public
ifflag_table	process.c	/^static const struct ifflag_def ifflag_table[] = {$/;"	v	typeref:struct:ifflag_def	file:
IF_DEBUG	dispextern.h	140;"	d
IF_DEBUG	dispextern.h	142;"	d
ignore	frame.c	/^      Lisp_Object ignore, Lisp_Object pixelwise)$/;"	v
IGNORE_DEFFACE_P	xfaces.c	266;"	d	file:
ignore_ime_char	w32fns.c	/^static int ignore_ime_char = 0;$/;"	v	file:
ignore_mouse_drag_p	keyboard.c	/^bool ignore_mouse_drag_p;$/;"	v
ignore_next_mouse_click_timeout	xterm.c	/^static Time ignore_next_mouse_click_timeout;$/;"	v	file:
ignore_overlay_strings_at_pos_p	dispextern.h	/^  bool_bf ignore_overlay_strings_at_pos_p : 1;$/;"	m	struct:it	access:public
ilineMax	unexelf.c	/^	int ilineMax;$/;"	m	struct:__anon123	file:	access:public
image	dispextern.h	/^      } image;$/;"	m	union:it::iterator_stack_entry::__anon117	typeref:struct:it::iterator_stack_entry::__anon117::__anon118	access:public
image	dispextern.h	/^struct image$/;"	s
image::ascent	dispextern.h	/^  int ascent;$/;"	m	struct:image	access:public
image::background	dispextern.h	/^  unsigned long background;$/;"	m	struct:image	access:public
image::background_transparent	dispextern.h	/^  bool_bf background_transparent : 1;$/;"	m	struct:image	access:public
image::background_transparent_valid	dispextern.h	/^  bool_bf background_valid : 1, background_transparent_valid : 1;$/;"	m	struct:image	access:public
image::background_valid	dispextern.h	/^  bool_bf background_valid : 1, background_transparent_valid : 1;$/;"	m	struct:image	access:public
image::colors	dispextern.h	/^  unsigned long *colors;$/;"	m	struct:image	access:public
image::corners	dispextern.h	/^  int corners[4];$/;"	m	struct:image	access:public
image::cr_data	dispextern.h	/^  void *cr_data;$/;"	m	struct:image	access:public
image::cr_data2	dispextern.h	/^  void *cr_data2;$/;"	m	struct:image	access:public
image::dependencies	dispextern.h	/^  Lisp_Object dependencies;$/;"	m	struct:image	access:public
image::frame_background	dispextern.h	/^  unsigned long frame_foreground, frame_background;$/;"	m	struct:image	access:public
image::frame_foreground	dispextern.h	/^  unsigned long frame_foreground, frame_background;$/;"	m	struct:image	access:public
image::hash	dispextern.h	/^  EMACS_UINT hash;$/;"	m	struct:image	access:public
image::height	dispextern.h	/^  int width, height;$/;"	m	struct:image	access:public
image::hmargin	dispextern.h	/^  int hmargin, vmargin;$/;"	m	struct:image	access:public
image::id	dispextern.h	/^  ptrdiff_t id;$/;"	m	struct:image	access:public
image::lisp_data	dispextern.h	/^  Lisp_Object lisp_data;$/;"	m	struct:image	access:public
image::load_failed_p	dispextern.h	/^  bool load_failed_p;$/;"	m	struct:image	access:public
image::mask	dispextern.h	/^  Pixmap pixmap, mask;$/;"	m	struct:image	access:public
image::mask_img	dispextern.h	/^  XImagePtr ximg, mask_img;$/;"	m	struct:image	access:public
image::ncolors	dispextern.h	/^  int ncolors;$/;"	m	struct:image	access:public
image::next	dispextern.h	/^  struct image *next, *prev;$/;"	m	struct:image	typeref:struct:image::image	access:public
image::pixmap	dispextern.h	/^  Pixmap pixmap, mask;$/;"	m	struct:image	access:public
image::prev	dispextern.h	/^  struct image *next, *prev;$/;"	m	struct:image	typeref:struct:image::	access:public
image::relief	dispextern.h	/^  int relief;$/;"	m	struct:image	access:public
image::spec	dispextern.h	/^  Lisp_Object spec;$/;"	m	struct:image	access:public
image::timestamp	dispextern.h	/^  struct timespec timestamp;$/;"	m	struct:image	typeref:struct:image::timespec	access:public
image::type	dispextern.h	/^  struct image_type *type;$/;"	m	struct:image	typeref:struct:image::image_type	access:public
image::vmargin	dispextern.h	/^  int hmargin, vmargin;$/;"	m	struct:image	access:public
image::width	dispextern.h	/^  int width, height;$/;"	m	struct:image	access:public
image::ximg	dispextern.h	/^  XImagePtr ximg, mask_img;$/;"	m	struct:image	access:public
IMAGEMAGICK_ALGORITHM	image.c	/^    IMAGEMAGICK_ALGORITHM,$/;"	e	enum:imagemagick_keyword_index	file:
IMAGEMAGICK_ASCENT	image.c	/^    IMAGEMAGICK_ASCENT,$/;"	e	enum:imagemagick_keyword_index	file:
IMAGEMAGICK_BACKGROUND	image.c	/^    IMAGEMAGICK_BACKGROUND,$/;"	e	enum:imagemagick_keyword_index	file:
IMAGEMAGICK_CFLAGS	Makefile	/^IMAGEMAGICK_CFLAGS= $/;"	m
imagemagick_clear_image	image.c	/^imagemagick_clear_image (struct frame *f,$/;"	f	file:	signature:(struct frame *f, struct image *img)
imagemagick_clear_image	image.c	/^static void imagemagick_clear_image (struct frame *, struct image *);$/;"	p	file:	signature:(struct frame *, struct image *)
imagemagick_compute_animated_image	image.c	/^imagemagick_compute_animated_image (MagickWand *super_wand, int ino)$/;"	f	file:	signature:(MagickWand *super_wand, int ino)
imagemagick_create_cache	image.c	/^imagemagick_create_cache (char *signature)$/;"	f	file:	signature:(char *signature)
IMAGEMAGICK_CROP	image.c	/^    IMAGEMAGICK_CROP,$/;"	e	enum:imagemagick_keyword_index	file:
IMAGEMAGICK_DATA	image.c	/^    IMAGEMAGICK_DATA,$/;"	e	enum:imagemagick_keyword_index	file:
imagemagick_error	image.c	/^imagemagick_error (MagickWand *wand)$/;"	f	file:	signature:(MagickWand *wand)
IMAGEMAGICK_FILE	image.c	/^    IMAGEMAGICK_FILE,$/;"	e	enum:imagemagick_keyword_index	file:
imagemagick_filename_hint	image.c	/^imagemagick_filename_hint (Lisp_Object spec, char hint_buffer[MaxTextExtent])$/;"	f	file:	signature:(Lisp_Object spec, char hint_buffer[MaxTextExtent])
IMAGEMAGICK_FORMAT	image.c	/^    IMAGEMAGICK_FORMAT,$/;"	e	enum:imagemagick_keyword_index	file:
imagemagick_format	image.c	/^static struct image_keyword imagemagick_format[IMAGEMAGICK_LAST] =$/;"	v	typeref:struct:image_keyword	file:
imagemagick_get_animation_cache	image.c	/^imagemagick_get_animation_cache (MagickWand *wand)$/;"	f	file:	signature:(MagickWand *wand)
IMAGEMAGICK_HEIGHT	image.c	/^    IMAGEMAGICK_HEIGHT,$/;"	e	enum:imagemagick_keyword_index	file:
IMAGEMAGICK_HEURISTIC_MASK	image.c	/^    IMAGEMAGICK_HEURISTIC_MASK,$/;"	e	enum:imagemagick_keyword_index	file:
imagemagick_image_p	image.c	/^imagemagick_image_p (Lisp_Object object)$/;"	f	file:	signature:(Lisp_Object object)
imagemagick_image_p	image.c	/^static bool imagemagick_image_p (Lisp_Object);$/;"	p	file:
imagemagick_keyword_index	image.c	/^enum imagemagick_keyword_index$/;"	g	file:
IMAGEMAGICK_LAST	image.c	/^    IMAGEMAGICK_LAST$/;"	e	enum:imagemagick_keyword_index	file:
IMAGEMAGICK_LIBS	Makefile	/^IMAGEMAGICK_LIBS= $/;"	m
imagemagick_load	image.c	/^imagemagick_load (struct frame *f, struct image *img)$/;"	f	file:	signature:(struct frame *f, struct image *img)
imagemagick_load	image.c	/^static bool imagemagick_load (struct frame *, struct image *);$/;"	p	file:	signature:(struct frame *, struct image *)
imagemagick_load_image	image.c	/^imagemagick_load_image (struct frame *f, struct image *img,$/;"	f	file:	signature:(struct frame *f, struct image *img, unsigned char *contents, unsigned int size, char *filename)
IMAGEMAGICK_MARGIN	image.c	/^    IMAGEMAGICK_MARGIN,$/;"	e	enum:imagemagick_keyword_index	file:
IMAGEMAGICK_MASK	image.c	/^    IMAGEMAGICK_MASK,$/;"	e	enum:imagemagick_keyword_index	file:
IMAGEMAGICK_MAX_HEIGHT	image.c	/^    IMAGEMAGICK_MAX_HEIGHT,$/;"	e	enum:imagemagick_keyword_index	file:
IMAGEMAGICK_MAX_WIDTH	image.c	/^    IMAGEMAGICK_MAX_WIDTH,$/;"	e	enum:imagemagick_keyword_index	file:
imagemagick_prune_animation_cache	image.c	/^imagemagick_prune_animation_cache (void)$/;"	f	file:	signature:(void)
IMAGEMAGICK_RELIEF	image.c	/^    IMAGEMAGICK_RELIEF,$/;"	e	enum:imagemagick_keyword_index	file:
imagemagick_render_type	globals.h	841;"	d
IMAGEMAGICK_ROTATION	image.c	/^    IMAGEMAGICK_ROTATION,$/;"	e	enum:imagemagick_keyword_index	file:
IMAGEMAGICK_TYPE	image.c	/^    IMAGEMAGICK_TYPE,$/;"	e	enum:imagemagick_keyword_index	file:
imagemagick_type	image.c	/^static struct image_type imagemagick_type =$/;"	v	typeref:struct:image_type	file:
IMAGEMAGICK_WIDTH	image.c	/^    IMAGEMAGICK_WIDTH,$/;"	e	enum:imagemagick_keyword_index	file:
IMAGEP	lisp.h	/^IMAGEP (Lisp_Object x)$/;"	f	signature:(Lisp_Object x)
images	dispextern.h	/^  struct image **images;$/;"	m	struct:image_cache	typeref:struct:image_cache::image	access:public
image_ascent	dispextern.h	/^int image_ascent (struct image *, struct face *, struct glyph_slice *);$/;"	p	signature:(struct image *, struct face *, struct glyph_slice *)
image_ascent	image.c	/^image_ascent (struct image *img, struct face *face, struct glyph_slice *slice)$/;"	f	signature:(struct image *img, struct face *face, struct glyph_slice *slice)
IMAGE_ASCENT_VALUE	image.c	/^  IMAGE_ASCENT_VALUE,$/;"	e	enum:image_value_type	file:
image_background	dispextern.h	/^RGB_PIXEL_COLOR image_background (struct image *, struct frame *,$/;"	p	signature:(struct image *, struct frame *, XImagePtr_or_DC ximg)
IMAGE_BACKGROUND	dispextern.h	3462;"	d
image_background	image.c	/^image_background (struct image *img, struct frame *f, XImagePtr_or_DC ximg)$/;"	f	signature:(struct image *img, struct frame *f, XImagePtr_or_DC ximg)
image_background_transparent	dispextern.h	/^int image_background_transparent (struct image *, struct frame *,$/;"	p	signature:(struct image *, struct frame *, XImagePtr_or_DC mask)
IMAGE_BACKGROUND_TRANSPARENT	dispextern.h	3471;"	d
image_background_transparent	image.c	/^image_background_transparent (struct image *img, struct frame *f, XImagePtr_or_DC mask)$/;"	f	signature:(struct image *img, struct frame *f, XImagePtr_or_DC mask)
IMAGE_BOOL_VALUE	image.c	/^  IMAGE_BOOL_VALUE$/;"	e	enum:image_value_type	file:
image_cache	dispextern.h	/^struct image_cache$/;"	s
image_cache	termhooks.h	/^  struct image_cache *image_cache;$/;"	m	struct:terminal	typeref:struct:terminal::image_cache	access:public
image_cache::buckets	dispextern.h	/^  struct image **buckets;$/;"	m	struct:image_cache	typeref:struct:image_cache::image	access:public
image_cache::images	dispextern.h	/^  struct image **images;$/;"	m	struct:image_cache	typeref:struct:image_cache::image	access:public
image_cache::refcount	dispextern.h	/^  ptrdiff_t refcount;$/;"	m	struct:image_cache	access:public
image_cache::size	dispextern.h	/^  ptrdiff_t size;$/;"	m	struct:image_cache	access:public
image_cache::used	dispextern.h	/^  ptrdiff_t used;$/;"	m	struct:image_cache	access:public
IMAGE_CACHE_BUCKETS_SIZE	dispextern.h	3095;"	d
image_cache_refcount	w32fns.c	/^static ptrdiff_t image_cache_refcount;$/;"	v	file:
image_cache_refcount	xfns.c	/^static ptrdiff_t image_cache_refcount;$/;"	v	file:
image_create_x_image_and_pixmap	image.c	/^image_create_x_image_and_pixmap (struct frame *f, struct image *img,$/;"	f	file:	signature:(struct frame *f, struct image *img, int width, int height, int depth, XImagePtr *ximg, bool mask_p)
IMAGE_DONT_CHECK_VALUE_TYPE	image.c	/^  IMAGE_DONT_CHECK_VALUE_TYPE,$/;"	e	enum:image_value_type	file:
image_error	image.c	/^image_error (const char *format, ...)$/;"	f	file:	signature:(const char *format, ...)
IMAGE_FROM_ID	dispextern.h	3081;"	d
IMAGE_FUNCTION_VALUE	image.c	/^  IMAGE_FUNCTION_VALUE,$/;"	e	enum:image_value_type	file:
image_get_x_image	image.c	/^image_get_x_image (struct frame *f, struct image *img, bool mask_p)$/;"	f	file:	signature:(struct frame *f, struct image *img, bool mask_p)
image_get_x_image	image.c	/^static XImagePtr image_get_x_image (struct frame *, struct image *, bool);$/;"	p	file:	signature:(struct frame *, struct image *, bool)
image_get_x_image_or_dc	image.c	/^image_get_x_image_or_dc (struct frame *f, struct image *img, bool mask_p,$/;"	f	file:	signature:(struct frame *f, struct image *img, bool mask_p, HGDIOBJ *prev)
image_get_x_image_or_dc	image.c	/^static XImagePtr_or_DC image_get_x_image_or_dc (struct frame *, struct image *,$/;"	p	file:	signature:(struct frame *, struct image *, bool, HGDIOBJ *)
image_get_x_image_or_dc	image.c	422;"	d	file:
IMAGE_GLYPH	dispextern.h	/^  IMAGE_GLYPH,$/;"	e	enum:glyph_type
image_id	dispextern.h	/^	ptrdiff_t image_id;$/;"	m	struct:it::iterator_stack_entry::__anon117::__anon118	access:public
image_id	dispextern.h	/^  ptrdiff_t image_id;$/;"	m	struct:it	access:public
IMAGE_INTEGER_VALUE	image.c	/^  IMAGE_INTEGER_VALUE,$/;"	e	enum:image_value_type	file:
image_keyword	image.c	/^struct image_keyword$/;"	s	file:
image_keyword::count	image.c	/^  int count;$/;"	m	struct:image_keyword	file:	access:public
image_keyword::mandatory_p	image.c	/^  bool mandatory_p;$/;"	m	struct:image_keyword	file:	access:public
image_keyword::name	image.c	/^  const char *name;$/;"	m	struct:image_keyword	file:	access:public
image_keyword::type	image.c	/^  enum image_value_type type;$/;"	m	struct:image_keyword	typeref:enum:image_keyword::image_value_type	file:	access:public
image_keyword::value	image.c	/^  Lisp_Object value;$/;"	m	struct:image_keyword	file:	access:public
IMAGE_NON_NEGATIVE_INTEGER_VALUE	image.c	/^  IMAGE_NON_NEGATIVE_INTEGER_VALUE,$/;"	e	enum:image_value_type	file:
IMAGE_NON_NEGATIVE_INTEGER_VALUE_OR_PAIR	image.c	/^  IMAGE_NON_NEGATIVE_INTEGER_VALUE_OR_PAIR,$/;"	e	enum:image_value_type	file:
IMAGE_NT_OPTIONAL_HDR32_MAGIC	w32proc.c	1526;"	d	file:
IMAGE_NUMBER_VALUE	image.c	/^  IMAGE_NUMBER_VALUE,$/;"	e	enum:image_value_type	file:
IMAGE_OPTIONAL_HEADER32	w32proc.c	1527;"	d	file:
IMAGE_OPT_FROM_ID	dispextern.h	3088;"	d
IMAGE_POSITIVE_INTEGER_VALUE	image.c	/^  IMAGE_POSITIVE_INTEGER_VALUE,$/;"	e	enum:image_value_type	file:
image_put_x_image	image.c	/^image_put_x_image (struct frame *f, struct image *img, XImagePtr ximg,$/;"	f	file:	signature:(struct frame *f, struct image *img, XImagePtr ximg, bool mask_p)
image_size_error	image.c	/^image_size_error (void)$/;"	f	file:	signature:(void)
image_spec_value	image.c	/^image_spec_value (Lisp_Object spec, Lisp_Object key, bool *found)$/;"	f	file:	signature:(Lisp_Object spec, Lisp_Object key, bool *found)
IMAGE_STRING_OR_NIL_VALUE	image.c	/^  IMAGE_STRING_OR_NIL_VALUE,$/;"	e	enum:image_value_type	file:
IMAGE_STRING_VALUE	image.c	/^  IMAGE_STRING_VALUE,$/;"	e	enum:image_value_type	file:
IMAGE_SYMBOL_VALUE	image.c	/^  IMAGE_SYMBOL_VALUE,$/;"	e	enum:image_value_type	file:
image_sync_to_pixmaps	image.c	/^image_sync_to_pixmaps (struct frame *f, struct image *img)$/;"	f	file:	signature:(struct frame *f, struct image *img)
image_sync_to_pixmaps	image.c	/^static void image_sync_to_pixmaps (struct frame *, struct image *);$/;"	p	file:	signature:(struct frame *, struct image *)
image_type	dispextern.h	/^struct image_type$/;"	s
image_type::free	dispextern.h	/^  void (* free) (struct frame *f, struct image *img);$/;"	m	struct:image_type	access:public
image_type::init	dispextern.h	/^  bool (* init) (void);$/;"	m	struct:image_type	access:public
image_type::load	dispextern.h	/^  bool (* load) (struct frame *f, struct image *img);$/;"	m	struct:image_type	access:public
image_type::next	dispextern.h	/^  struct image_type *next;$/;"	m	struct:image_type	typeref:struct:image_type::image_type	access:public
image_type::type	dispextern.h	/^  int type;$/;"	m	struct:image_type	access:public
image_type::valid_p	dispextern.h	/^  bool (* valid_p) (Lisp_Object spec);$/;"	m	struct:image_type	access:public
image_types	image.c	/^static struct image_type *image_types;$/;"	v	typeref:struct:image_type	file:
image_unget_x_image	image.c	/^image_unget_x_image (struct image *img, bool mask_p, XImagePtr ximg)$/;"	f	file:	signature:(struct image *img, bool mask_p, XImagePtr ximg)
image_unget_x_image	image.c	/^static void image_unget_x_image (struct image *, bool, XImagePtr);$/;"	p	file:	signature:(struct image *, bool, XImagePtr)
image_unget_x_image_or_dc	image.c	/^image_unget_x_image_or_dc (struct image *img, bool mask_p,$/;"	f	file:	signature:(struct image *img, bool mask_p, XImagePtr_or_DC ximg, HGDIOBJ prev)
image_unget_x_image_or_dc	image.c	/^static void image_unget_x_image_or_dc (struct image *, bool, XImagePtr_or_DC,$/;"	p	file:	signature:(struct image *, bool, XImagePtr_or_DC, HGDIOBJ)
image_unget_x_image_or_dc	image.c	424;"	d	file:
image_value_type	image.c	/^enum image_value_type$/;"	g	file:
img	dispextern.h	/^    struct glyph_slice img;$/;"	m	union:glyph::__anon107	typeref:struct:glyph::__anon107::glyph_slice	access:public
img	dispextern.h	/^  struct image *img;$/;"	m	struct:glyph_string	typeref:struct:glyph_string::image	access:public
img	nsterm.h	/^  EmacsImage *img;$/;"	m	struct:ns_bitmap_record	access:public
img	xterm.h	/^  void *img;$/;"	m	struct:x_bitmap_record	access:public
img_id	dispextern.h	/^    int img_id;$/;"	m	union:glyph::__anon110	access:public
immediate_echo	keyboard.h	/^    bool_bf immediate_echo : 1;$/;"	m	struct:kboard	access:public
ImmGetCompositionString_Proc	w32fns.c	/^typedef LONG (WINAPI * ImmGetCompositionString_Proc)$/;"	t	file:
ImmGetContext_Proc	w32fns.c	/^typedef HIMC (WINAPI * ImmGetContext_Proc) (IN HWND window);$/;"	t	file:
ImmReleaseContext_Proc	w32fns.c	/^typedef BOOL (WINAPI * ImmReleaseContext_Proc) (IN HWND wnd, IN HIMC context);$/;"	t	file:
ImmSetCompositionWindow_Proc	w32fns.c	/^typedef BOOL (WINAPI * ImmSetCompositionWindow_Proc) (IN HIMC context,$/;"	t	file:
ImpersonateSelf_Proc	w32.c	/^typedef BOOL (WINAPI * ImpersonateSelf_Proc) ($/;"	t	file:
impersonate_self	w32.c	/^impersonate_self (SECURITY_IMPERSONATION_LEVEL ImpersonationLevel)$/;"	f	file:	signature:(SECURITY_IMPERSONATION_LEVEL ImpersonationLevel)
inbuffer	casefiddle.c	/^  bool inbuffer;$/;"	m	struct:casing_context	file:	access:public
incomment	syntax.c	/^    EMACS_INT incomment; \/* -1 if in unnestable comment else comment nesting *\/$/;"	m	struct:lisp_parse_state	file:	access:public
increment_matrix_positions	dispextern.h	/^void increment_matrix_positions (struct glyph_matrix *,$/;"	p	signature:(struct glyph_matrix *, int, int, ptrdiff_t, ptrdiff_t)
increment_matrix_positions	dispnew.c	/^increment_matrix_positions (struct glyph_matrix *matrix, int start, int end,$/;"	f	signature:(struct glyph_matrix *matrix, int start, int end, ptrdiff_t delta, ptrdiff_t delta_bytes)
increment_row_positions	dispnew.c	/^increment_row_positions (struct glyph_row *row,$/;"	f	file:	signature:(struct glyph_row *row, ptrdiff_t delta, ptrdiff_t delta_bytes)
increment_row_positions	dispnew.c	/^static void increment_row_positions (struct glyph_row *, ptrdiff_t, ptrdiff_t);$/;"	p	file:	signature:(struct glyph_row *, ptrdiff_t, ptrdiff_t)
INC_BOTH	character.h	501;"	d
INC_FROM	syntax.c	3170;"	d	file:
INC_POS	character.h	473;"	d
INC_TEXT_POS	dispextern.h	197;"	d
indented_beyond_p	indent.c	/^indented_beyond_p (ptrdiff_t pos, ptrdiff_t pos_byte, EMACS_INT column)$/;"	f	signature:(ptrdiff_t pos, ptrdiff_t pos_byte, EMACS_INT column)
indented_beyond_p	lisp.h	/^extern bool indented_beyond_p (ptrdiff_t, ptrdiff_t, EMACS_INT);$/;"	p	signature:(ptrdiff_t, ptrdiff_t, EMACS_INT)
indent_tabs_mode	globals.h	953;"	d
index	ftcrfont.c	/^  int index;$/;"	m	struct:ftcrfont_info	file:	access:public
index	ftfont.c	/^  int index;$/;"	m	struct:ftfont_info	file:	access:public
index	image.c	/^  int index;$/;"	m	struct:animation_cache	file:	access:public
index	image.c	/^  ptrdiff_t index;		\/* Where are we?  *\/$/;"	m	struct:png_memory_storage	file:	access:public
index	image.c	/^  ptrdiff_t index;$/;"	m	struct:__anon84	file:	access:public
index	image.c	/^  ptrdiff_t index;$/;"	m	struct:__anon85	file:	access:public
index	lisp.h	/^  Lisp_Object index;$/;"	m	struct:Lisp_Hash_Table	access:public
index	xftfont.c	/^  int index;$/;"	m	struct:xftfont_info	file:	access:public
INDEX_SIZE_BOUND	fns.c	2605;"	d	file:
INDEX_TO_CODE_POINT	charset.c	129;"	d	file:
indicate_bob_p	dispextern.h	/^  bool_bf indicate_bob_p : 1;$/;"	m	struct:glyph_row	access:public
indicate_bottom_line_p	dispextern.h	/^  bool_bf indicate_bottom_line_p : 1;$/;"	m	struct:glyph_row	access:public
indicate_buffer_boundaries_	buffer.h	/^  Lisp_Object indicate_buffer_boundaries_;$/;"	m	struct:buffer	access:public
indicate_empty_lines_	buffer.h	/^  Lisp_Object indicate_empty_lines_;$/;"	m	struct:buffer	access:public
indicate_empty_line_p	dispextern.h	/^  bool_bf indicate_empty_line_p : 1;$/;"	m	struct:glyph_row	access:public
indicate_eob_p	dispextern.h	/^  bool_bf indicate_eob_p : 1;$/;"	m	struct:glyph_row	access:public
indicate_top_line_p	dispextern.h	/^  bool_bf indicate_top_line_p : 1;$/;"	m	struct:glyph_row	access:public
indirections	buffer.h	/^  int indirections;$/;"	m	struct:buffer	access:public
indirect_function	data.c	/^indirect_function (register Lisp_Object object)$/;"	f	signature:(register Lisp_Object object)
indirect_function	lisp.h	/^extern Lisp_Object indirect_function (Lisp_Object);$/;"	p	signature:(Lisp_Object)
indirect_variable	data.c	/^indirect_variable (struct Lisp_Symbol *symbol)$/;"	f	signature:(struct Lisp_Symbol *symbol)
indirect_variable	lisp.h	/^extern struct Lisp_Symbol *indirect_variable (struct Lisp_Symbol *);$/;"	p	signature:(struct Lisp_Symbol *)
inet_addr	w32.c	227;"	d	file:
infd	process.h	/^    int infd;$/;"	m	struct:Lisp_Process	access:public
infd	unexmacosx.c	/^static int infd, outfd;$/;"	v	file:
infile	lread.c	/^static struct infile$/;"	s	file:
infile	lread.c	/^} *infile;$/;"	v	typeref:struct:infile	file:
infile::buf	lread.c	/^  unsigned char buf[MAX_MULTIBYTE_LENGTH - 1];$/;"	m	struct:infile	file:	access:public
infile::lookahead	lread.c	/^  signed char lookahead;$/;"	m	struct:infile	file:	access:public
infile::stream	lread.c	/^  FILE *stream;$/;"	m	struct:infile	file:	access:public
infile_lc_highest_addr	unexmacosx.c	/^static vm_address_t infile_lc_highest_addr = 0;$/;"	v	file:
INFINITY	dispnew.c	4674;"	d	file:
INFINITY	scroll.c	35;"	d	file:
inflate	decompress.c	56;"	d	file:
inflate	decompress.c	60;"	d	file:
inflateEnd	decompress.c	57;"	d	file:
inflateEnd	decompress.c	61;"	d	file:
inflateInit2_	decompress.c	58;"	d	file:
inflateInit2_	decompress.c	62;"	d	file:
info	gmalloc.c	/^	  } info;$/;"	m	struct:__anon60::__anon61	typeref:union:__anon60::__anon61::__anon62	file:	access:public
info	w32gui.h	/^  BITMAPINFO info;$/;"	m	struct:_XImage	access:public
info_ptr	image.c	/^  png_info *info_ptr;$/;"	m	struct:png_load_context	file:	access:public
inherited_pgroup	sysdep.c	/^static pid_t inherited_pgroup;$/;"	v	file:
inherit_coding_system_flag	process.h	/^    bool_bf inherit_coding_system_flag : 1;$/;"	m	struct:Lisp_Process	access:public
inherit_input_method	lread.c	/^  (Lisp_Object prompt, Lisp_Object inherit_input_method, Lisp_Object seconds)$/;"	v
inherit_process_coding_system	globals.h	955;"	d
inhibit_bidi_mirroring	globals.h	957;"	d
inhibit_compacting_font_caches	globals.h	959;"	d
inhibit_eol_conversion	globals.h	961;"	d
inhibit_eval_during_redisplay	globals.h	963;"	d
inhibit_flag	coding.c	/^inhibit_flag (int encoded_flag, bool var)$/;"	f	file:	signature:(int encoded_flag, bool var)
inhibit_free_realized_faces	globals.h	965;"	d
inhibit_garbage_collection	alloc.c	/^inhibit_garbage_collection (void)$/;"	f	signature:(void)
inhibit_garbage_collection	lisp.h	/^extern ptrdiff_t inhibit_garbage_collection (void);$/;"	p	signature:(void)
inhibit_horizontal_resize	frame.h	/^  bool_bf inhibit_horizontal_resize : 1;$/;"	m	struct:frame	access:public
inhibit_ied	coding.h	/^  int inhibit_ied;$/;"	m	struct:undecided_spec	access:public
inhibit_iso_escape_detection	globals.h	967;"	d
inhibit_lisp_code	eval.c	/^Lisp_Object inhibit_lisp_code;$/;"	v
inhibit_load_charset_map	globals.h	969;"	d
inhibit_menubar_update	globals.h	971;"	d
inhibit_message	globals.h	973;"	d
inhibit_modification_hooks	globals.h	975;"	d
inhibit_nbd	coding.h	/^  int inhibit_nbd;$/;"	m	struct:undecided_spec	access:public
inhibit_null_byte_detection	globals.h	977;"	d
inhibit_sentinels	process.c	/^bool inhibit_sentinels;$/;"	v
inhibit_shrinking	buffer.h	/^    bool_bf inhibit_shrinking : 1;$/;"	m	struct:buffer_text	access:public
inhibit_try_cursor_movement	globals.h	979;"	d
inhibit_try_window_id	globals.h	981;"	d
inhibit_try_window_reusing	globals.h	983;"	d
inhibit_vertical_resize	frame.h	/^  bool_bf inhibit_vertical_resize : 1;$/;"	m	struct:frame	access:public
inhibit_window_system	emacs.c	/^bool inhibit_window_system;$/;"	v
inhibit_x_resources	globals.h	985;"	d
init	dispextern.h	/^  bool (* init) (void);$/;"	m	struct:image_type	access:public
init	w32.c	/^static int init = 0;$/;"	v	file:
initial	minibuf.c	/^  (Lisp_Object prompt, Lisp_Object initial, Lisp_Object inherit_input_method)$/;"	v
InitialCommit	w32heap.c	/^  SIZE_T InitialCommit;$/;"	m	struct:_RTL_HEAP_PARAMETERS	file:	access:public
initialized	emacs.c	/^bool initialized;$/;"	v
initialized	systhread.h	/^  bool initialized;$/;"	m	struct:__anon45	access:public
initialize_environment	emacs-module.c	/^initialize_environment (emacs_env *env, struct emacs_env_private *priv)$/;"	f	file:	signature:(emacs_env *env, struct emacs_env_private *priv)
initialize_environment	emacs-module.c	/^static emacs_env *initialize_environment (emacs_env *,$/;"	p	file:	signature:(emacs_env *, struct emacs_env_private *)
initialize_frame_menubar	w32menu.c	/^initialize_frame_menubar (struct frame *f)$/;"	f	signature:(struct frame *f)
initialize_frame_menubar	w32term.h	/^extern void initialize_frame_menubar (struct frame *);$/;"	p	signature:(struct frame *)
initialize_frame_menubar	xmenu.c	/^initialize_frame_menubar (struct frame *f)$/;"	f	signature:(struct frame *f)
initialize_frame_menubar	xterm.h	/^extern void initialize_frame_menubar (struct frame *);$/;"	p	signature:(struct frame *)
initialize_utc_base	w32.c	/^initialize_utc_base (void)$/;"	f	file:	signature:(void)
initialize_w32_display	w32console.c	/^initialize_w32_display (struct terminal *term, int *width, int *height)$/;"	f	signature:(struct terminal *term, int *width, int *height)
initialize_w32_display	w32term.h	/^extern void initialize_w32_display (struct terminal *, int *, int *);$/;"	p	signature:(struct terminal *, int *, int *)
InitialReserve	w32heap.c	/^  SIZE_T InitialReserve;$/;"	m	struct:_RTL_HEAP_PARAMETERS	file:	access:public
initial_argc	emacs.c	/^int initial_argc;$/;"	v
initial_argv	emacs.c	/^char **initial_argv;$/;"	v
initial_contents	minibuf.c	/^  (Lisp_Object prompt, Lisp_Object initial_contents, Lisp_Object keymap, Lisp_Object read, Lisp_Object hist, Lisp_Object default_value, Lisp_Object inherit_input_method)$/;"	v
initial_define_key	keymap.c	/^initial_define_key (Lisp_Object keymap, int key, const char *defname)$/;"	f	signature:(Lisp_Object keymap, int key, const char *defname)
initial_define_key	keymap.h	/^extern void initial_define_key (Lisp_Object, int, const char *);$/;"	p	signature:(Lisp_Object, int, const char *)
initial_define_lispy_key	keymap.c	/^initial_define_lispy_key (Lisp_Object keymap, const char *keyname, const char *defname)$/;"	f	signature:(Lisp_Object keymap, const char *keyname, const char *defname)
initial_define_lispy_key	keymap.h	/^extern void initial_define_lispy_key (Lisp_Object, const char *, const char *);$/;"	p	signature:(Lisp_Object, const char *, const char *)
initial_free_frame_resources	terminal.c	/^initial_free_frame_resources (struct frame *f)$/;"	f	file:	signature:(struct frame *f)
initial_input	minibuf.c	/^  (Lisp_Object prompt, Lisp_Object collection, Lisp_Object predicate, Lisp_Object require_match, Lisp_Object initial_input, Lisp_Object hist, Lisp_Object def, Lisp_Object inherit_input_method)$/;"	v
initial_input	minibuf.c	/^  (Lisp_Object prompt, Lisp_Object initial_input, Lisp_Object history, Lisp_Object default_value, Lisp_Object inherit_input_method)$/;"	v
initial_kboard	keyboard.c	/^KBOARD *initial_kboard;$/;"	v
initial_obarray	lread.c	/^static Lisp_Object initial_obarray;$/;"	v	file:
initial_set_up_x_back_buffer	xfns.c	/^initial_set_up_x_back_buffer (struct frame *f)$/;"	f	signature:(struct frame *f)
initial_set_up_x_back_buffer	xterm.h	/^extern void initial_set_up_x_back_buffer (struct frame *f);$/;"	p	signature:(struct frame *f)
initial_terminal	terminal.c	/^struct terminal *initial_terminal;$/;"	v	typeref:struct:terminal
init_alloc	alloc.c	/^init_alloc (void)$/;"	f	signature:(void)
init_alloc	lisp.h	/^extern void init_alloc (void);$/;"	p	signature:(void)
init_alloc_once	alloc.c	/^init_alloc_once (void)$/;"	f	signature:(void)
init_alloc_once	lisp.h	/^extern void init_alloc_once (void);$/;"	p	signature:(void)
init_all_sys_modes	lisp.h	/^extern void init_all_sys_modes (void);$/;"	p	signature:(void)
init_all_sys_modes	sysdep.c	/^init_all_sys_modes (void)$/;"	f	signature:(void)
init_and_cache_system_name	editfns.c	/^init_and_cache_system_name (void)$/;"	f	file:	signature:(void)
init_atimer	atimer.c	/^init_atimer (void)$/;"	f	signature:(void)
init_atimer	atimer.h	/^void init_atimer (void);$/;"	p	signature:(void)
init_baud_rate	dispextern.h	/^void init_baud_rate (int);$/;"	p	signature:(int)
init_baud_rate	sysdep.c	/^init_baud_rate (int fd)$/;"	f	signature:(int fd)
init_buffer	buffer.c	/^init_buffer (int initialized)$/;"	f	signature:(int initialized)
init_buffer	lisp.h	/^extern void init_buffer (int);$/;"	p	signature:(int)
init_buffer_once	buffer.c	/^init_buffer_once (void)$/;"	f	signature:(void)
init_buffer_once	lisp.h	/^extern void init_buffer_once (void);$/;"	p	signature:(void)
INIT_BUF_SIZE	regex.c	1605;"	d	file:
init_callproc	callproc.c	/^init_callproc (void)$/;"	f	signature:(void)
init_callproc	lisp.h	/^extern void init_callproc (void);$/;"	p	signature:(void)
init_callproc_1	callproc.c	/^init_callproc_1 (void)$/;"	f	signature:(void)
init_callproc_1	lisp.h	/^extern void init_callproc_1 (void);$/;"	p	signature:(void)
init_casetab_once	casetab.c	/^init_casetab_once (void)$/;"	f	signature:(void)
init_casetab_once	lisp.h	/^extern void init_casetab_once (void);$/;"	p	signature:(void)
init_category_once	category.c	/^init_category_once (void)$/;"	f	signature:(void)
init_category_once	lisp.h	/^extern void init_category_once (void);$/;"	p	signature:(void)
init_charset	charset.c	/^init_charset (void)$/;"	f	signature:(void)
init_charset	lisp.h	/^extern void init_charset (void);$/;"	p	signature:(void)
init_charset_once	charset.c	/^init_charset_once (void)$/;"	f	signature:(void)
init_charset_once	lisp.h	/^extern void init_charset_once (void);$/;"	p	signature:(void)
init_cmdargs	emacs.c	/^init_cmdargs (int argc, char **argv, int skip_args, char *original_pwd)$/;"	f	file:	signature:(int argc, char **argv, int skip_args, char *original_pwd)
init_coding	lisp.h	/^extern void init_coding (void);$/;"	p	signature:(void)
init_coding_once	coding.c	/^init_coding_once (void)$/;"	f	signature:(void)
init_coding_once	lisp.h	/^extern void init_coding_once (void);$/;"	p	signature:(void)
init_color_table	image.c	/^init_color_table (void)$/;"	f	file:	signature:(void)
init_color_table	image.c	/^static void init_color_table (void);$/;"	p	file:	signature:(void)
INIT_COMPILE_STACK_SIZE	regex.c	1719;"	d	file:
init_crit	w32term.h	/^extern void init_crit (void);$/;"	p	signature:(void)
init_crit	w32xfns.c	/^init_crit (void)$/;"	f	signature:(void)
init_dbusbind	dbusbind.c	/^init_dbusbind (void)$/;"	f	signature:(void)
init_dbusbind	lisp.h	/^void init_dbusbind (void);$/;"	p	signature:(void)
init_display	dispextern.h	/^void init_display (void);$/;"	p	signature:(void)
init_display	dispnew.c	/^init_display (void)$/;"	f	signature:(void)
init_editfns	editfns.c	/^init_editfns (bool dumping)$/;"	f	signature:(bool dumping)
init_editfns	lisp.h	/^extern void init_editfns (bool);$/;"	p	signature:(bool)
init_environment	w32.c	/^init_environment (char ** argv)$/;"	f	signature:(char ** argv)
init_environment	w32.h	/^extern void init_environment (char **);$/;"	p	signature:(char **)
init_eval	eval.c	/^init_eval (void)$/;"	f	signature:(void)
init_eval	lisp.h	/^extern void init_eval (void);$/;"	p	signature:(void)
init_eval_once	eval.c	/^init_eval_once (void)$/;"	f	signature:(void)
init_eval_once	lisp.h	/^extern void init_eval_once (void);$/;"	p	signature:(void)
INIT_FAILURE_ALLOC	regex.c	1251;"	d	file:
INIT_FAIL_STACK	regex.c	1293;"	d	file:
INIT_FAIL_STACK	regex.c	1307;"	d	file:
init_fileio	fileio.c	/^init_fileio (void)$/;"	f	signature:(void)
init_fileio	lisp.h	/^extern void init_fileio (void);$/;"	p	signature:(void)
init_finalizer_list	alloc.c	/^init_finalizer_list (struct Lisp_Finalizer *head)$/;"	f	file:	signature:(struct Lisp_Finalizer *head)
init_font	font.c	/^init_font (void)$/;"	f	signature:(void)
init_font	lisp.h	/^extern void init_font (void);$/;"	p	signature:(void)
init_foreground_group	lisp.h	/^extern void init_foreground_group (void);$/;"	p	signature:(void)
init_foreground_group	sysdep.c	/^init_foreground_group (void)$/;"	f	signature:(void)
init_frame_faces	dispextern.h	/^void init_frame_faces (struct frame *);$/;"	p	signature:(struct frame *)
init_frame_faces	xfaces.c	/^init_frame_faces (struct frame *f)$/;"	f	signature:(struct frame *f)
init_fringe	fringe.c	/^init_fringe (void)$/;"	f	signature:(void)
init_fringe	lisp.h	/^extern void init_fringe (void);$/;"	p	signature:(void)
init_fringe_bitmap	fringe.c	/^init_fringe_bitmap (int which, struct fringe_bitmap *fb, int once_p)$/;"	f	file:	signature:(int which, struct fringe_bitmap *fb, int once_p)
init_fringe_once	fringe.c	/^init_fringe_once (void)$/;"	f	signature:(void)
init_fringe_once	lisp.h	/^extern void init_fringe_once (void);$/;"	p	signature:(void)
init_from_display_pos	xdisp.c	/^init_from_display_pos (struct it *it, struct window *w, struct display_pos *pos)$/;"	f	file:	signature:(struct it *it, struct window *w, struct display_pos *pos)
init_gconf	xsettings.c	/^init_gconf (void)$/;"	f	file:	signature:(void)
init_gif_functions	image.c	/^init_gif_functions (void)$/;"	f	file:	signature:(void)
init_gif_functions	image.c	/^static bool init_gif_functions (void);$/;"	p	file:	signature:(void)
init_gif_functions	image.c	7452;"	d	file:
init_glyph_string	xdisp.c	/^init_glyph_string (struct glyph_string *s,$/;"	f	file:	signature:(struct glyph_string *s, OPTIONAL_HDC (hdc) XChar2b *char2b, struct window *w, struct glyph_row *row, enum glyph_row_area area, int start, enum draw_glyphs_face hl)
INIT_GLYPH_STRING	xdisp.c	26073;"	d	file:
INIT_GLYPH_STRING	xdisp.c	26076;"	d	file:
init_gnutls_functions	gnutls.c	/^init_gnutls_functions (void)$/;"	f	file:	signature:(void)
init_gsettings	xsettings.c	/^init_gsettings (void)$/;"	f	file:	signature:(void)
init_heap	w32heap.c	/^init_heap (void)$/;"	f	signature:(void)
init_heap	w32heap.h	/^extern void init_heap (void);$/;"	p	signature:(void)
init_imagemagick_functions	image.c	/^static bool init_imagemagick_functions (void);$/;"	p	file:	signature:(void)
init_imagemagick_functions	image.c	8225;"	d	file:
init_initial_terminal	dispextern.h	/^extern struct terminal *init_initial_terminal (void);$/;"	p	signature:(void)
init_initial_terminal	terminal.c	/^init_initial_terminal (void)$/;"	f	signature:(void)
init_iterator	dispextern.h	/^void init_iterator (struct it *, struct window *, ptrdiff_t,$/;"	p	signature:(struct it *, struct window *, ptrdiff_t, ptrdiff_t, struct glyph_row *, enum face_id)
init_iterator	xdisp.c	/^init_iterator (struct it *it, struct window *w,$/;"	f	signature:(struct it *it, struct window *w, ptrdiff_t charpos, ptrdiff_t bytepos, struct glyph_row *row, enum face_id base_face_id)
init_iterator_to_row_start	dispextern.h	/^void init_iterator_to_row_start (struct it *, struct window *,$/;"	p	signature:(struct it *, struct window *, struct glyph_row *)
init_jpeg_functions	image.c	/^init_jpeg_functions (void)$/;"	f	file:	signature:(void)
init_jpeg_functions	image.c	/^static bool init_jpeg_functions (void);$/;"	p	file:	signature:(void)
init_jpeg_functions	image.c	6335;"	d	file:
init_kboard	keyboard.c	/^init_kboard (KBOARD *kb, Lisp_Object type)$/;"	f	file:	signature:(KBOARD *kb, Lisp_Object type)
init_keyboard	keyboard.c	/^init_keyboard (void)$/;"	f	signature:(void)
init_keyboard	lisp.h	/^extern void init_keyboard (void);$/;"	p	signature:(void)
init_libxml2_functions	xml.c	/^init_libxml2_functions (void)$/;"	f	file:	signature:(void)
init_lread	lisp.h	/^extern void init_lread (void);$/;"	p	signature:(void)
init_lread	lread.c	/^init_lread (void)$/;"	f	signature:(void)
init_macros	lisp.h	/^extern void init_macros (void);$/;"	p	signature:(void)
init_macros	macros.c	/^init_macros (void)$/;"	f	signature:(void)
init_main_thread	thread.c	/^init_main_thread (void)$/;"	f	file:	signature:(void)
init_menu_items	menu.c	/^init_menu_items (void)$/;"	f	signature:(void)
init_menu_items	menu.h	/^extern void init_menu_items (void);$/;"	p	signature:(void)
init_minibuf_once	lisp.h	/^extern void init_minibuf_once (void);$/;"	p	signature:(void)
init_minibuf_once	minibuf.c	/^init_minibuf_once (void)$/;"	f	signature:(void)
init_module_assertions	emacs-module.c	/^init_module_assertions (bool enable)$/;"	f	signature:(bool enable)
init_module_assertions	lisp.h	/^extern void init_module_assertions (bool);$/;"	p	signature:(bool)
init_ntproc	w32.c	/^init_ntproc (int dumping)$/;"	f	signature:(int dumping)
init_ntproc	w32.h	/^extern void init_ntproc (int);$/;"	p	signature:(int)
init_obarray	lisp.h	/^extern void init_obarray (void);$/;"	p	signature:(void)
init_obarray	lread.c	/^init_obarray (void)$/;"	f	signature:(void)
init_png_functions	image.c	/^init_png_functions (void)$/;"	f	file:	signature:(void)
init_png_functions	image.c	/^static bool init_png_functions (void);$/;"	p	file:	signature:(void)
init_png_functions	image.c	5658;"	d	file:
init_print_once	lisp.h	/^extern void init_print_once (void);$/;"	p	signature:(void)
init_print_once	print.c	/^init_print_once (void)$/;"	f	signature:(void)
init_process_emacs	lisp.h	/^extern void init_process_emacs (int);$/;"	p	signature:(int)
init_process_emacs	process.c	/^init_process_emacs (int sockfd)$/;"	f	signature:(int sockfd)
init_random	lisp.h	/^extern void init_random (void);$/;"	p	signature:(void)
init_random	sysdep.c	/^init_random (void)$/;"	f	signature:(void)
init_sigio	dispextern.h	/^void init_sigio (int);$/;"	p	signature:(int)
init_sigio	sysdep.c	/^init_sigio (int fd)$/;"	f	signature:(int fd)
init_signals	sysdep.c	/^init_signals (bool dumping)$/;"	f	signature:(bool dumping)
init_signals	syssignal.h	/^extern void init_signals (bool);$/;"	p	signature:(bool)
init_sigsegv	sysdep.c	/^init_sigsegv (void)$/;"	f	file:	signature:(void)
init_standard_fds	lisp.h	/^extern void init_standard_fds (void);$/;"	p	signature:(void)
init_standard_fds	sysdep.c	/^init_standard_fds (void)$/;"	f	signature:(void)
init_strings	alloc.c	/^init_strings (void)$/;"	f	file:	signature:(void)
init_svg_functions	image.c	/^init_svg_functions (void)$/;"	f	file:	signature:(void)
init_svg_functions	image.c	/^static bool init_svg_functions (void);$/;"	p	file:	signature:(void)
init_svg_functions	image.c	9008;"	d	file:
init_symbol	alloc.c	/^init_symbol (Lisp_Object val, Lisp_Object name)$/;"	f	signature:(Lisp_Object val, Lisp_Object name)
init_symbol	lisp.h	/^extern void init_symbol (Lisp_Object, Lisp_Object);$/;"	p	signature:(Lisp_Object, Lisp_Object)
init_syntax_once	lisp.h	/^extern void init_syntax_once (void);$/;"	p	signature:(void)
init_syntax_once	regex.c	/^init_syntax_once (void)$/;"	f	file:	signature:(void)
init_syntax_once	syntax.c	/^init_syntax_once (void)$/;"	f	signature:(void)
init_system_name	lisp.h	/^extern void init_system_name (void);$/;"	p	signature:(void)
init_system_name	sysdep.c	/^init_system_name (void)$/;"	f	signature:(void)
init_sys_modes	lisp.h	/^extern void init_sys_modes (struct tty_display_info *);$/;"	p	signature:(struct tty_display_info *)
init_sys_modes	sysdep.c	/^init_sys_modes (struct tty_display_info *tty_out)$/;"	f	signature:(struct tty_display_info *tty_out)
init_threads	thread.c	/^init_threads (void)$/;"	f	signature:(void)
init_threads	thread.h	/^extern void init_threads (void);$/;"	p	signature:(void)
init_threads_once	thread.c	/^init_threads_once (void)$/;"	f	signature:(void)
init_threads_once	thread.h	/^extern void init_threads_once (void);$/;"	p	signature:(void)
init_tiff_functions	image.c	/^init_tiff_functions (void)$/;"	f	file:	signature:(void)
init_tiff_functions	image.c	/^static bool init_tiff_functions (void);$/;"	p	file:	signature:(void)
init_tiff_functions	image.c	6967;"	d	file:
init_timers	w32.h	/^extern void init_timers (void);$/;"	p	signature:(void)
init_timers	w32proc.c	/^init_timers (void)$/;"	f	signature:(void)
init_tool_bar_items	keyboard.c	/^init_tool_bar_items (Lisp_Object reuse)$/;"	f	file:	signature:(Lisp_Object reuse)
init_tool_bar_items	keyboard.c	/^static void init_tool_bar_items (Lisp_Object);$/;"	p	file:
init_to_row_end	xdisp.c	/^init_to_row_end (struct it *it, struct window *w, struct glyph_row *row)$/;"	f	file:	signature:(struct it *it, struct window *w, struct glyph_row *row)
init_to_row_start	xdisp.c	/^init_to_row_start (struct it *it, struct window *w, struct glyph_row *row)$/;"	f	file:	signature:(struct it *it, struct window *w, struct glyph_row *row)
init_tty	dispextern.h	/^extern struct terminal *init_tty (const char *, const char *, bool);$/;"	p	signature:(const char *, const char *, bool)
init_tty	term.c	/^init_tty (const char *name, const char *terminal_type, bool must_succeed)$/;"	f	signature:(const char *name, const char *terminal_type, bool must_succeed)
init_user_info	w32.c	/^init_user_info (void)$/;"	f	file:	signature:(void)
init_vectors	alloc.c	/^init_vectors (void)$/;"	f	file:	signature:(void)
init_window	window.c	/^init_window (void)$/;"	f	signature:(void)
init_window	window.h	/^extern void init_window (void);$/;"	p	signature:(void)
INIT_WINDOW_CLASS	w32fns.c	2256;"	d	file:
init_window_once	window.c	/^init_window_once (void)$/;"	f	signature:(void)
init_window_once	window.h	/^extern void init_window_once (void);$/;"	p	signature:(void)
init_winsock	w32.c	/^init_winsock (int load_now)$/;"	f	signature:(int load_now)
init_winsock	w32.h	/^extern BOOL init_winsock (int load_now);$/;"	p	signature:(int load_now)
init_xdisp	lisp.h	/^extern void init_xdisp (void);$/;"	p	signature:(void)
init_xdisp	xdisp.c	/^init_xdisp (void)$/;"	f	signature:(void)
init_xpm_functions	image.c	/^init_xpm_functions (void)$/;"	f	file:	signature:(void)
init_xpm_functions	image.c	/^static bool init_xpm_functions (void);$/;"	p	file:	signature:(void)
init_xpm_functions	image.c	3234;"	d	file:
init_xsettings	xsettings.c	/^init_xsettings (struct x_display_info *dpyinfo)$/;"	f	file:	signature:(struct x_display_info *dpyinfo)
init_xterm	lisp.h	/^extern void init_xterm (void);$/;"	p	signature:(void)
init_xterm	xterm.c	/^init_xterm (void)$/;"	f	signature:(void)
init_zlib_functions	decompress.c	/^init_zlib_functions (void)$/;"	f	file:	signature:(void)
INLINE	conf_post.h	314;"	d
INLINE	emacs.c	21;"	d	file:
INLINE_HEADER_BEGIN	conf_post.h	317;"	d
INLINE_HEADER_END	conf_post.h	318;"	d
inotifyevent_to_event	inotify.c	/^inotifyevent_to_event (Lisp_Object watch, struct inotify_event const *ev)$/;"	f	file:	signature:(Lisp_Object watch, struct inotify_event const *ev)
inotifyfd	inotify.c	/^static int inotifyfd = -1;$/;"	v	file:
inotify_callback	inotify.c	/^inotify_callback (int fd, void *_)$/;"	f	file:	signature:(int fd, void *_)
input	termchar.h	/^  FILE *input;                  \/* The stream to be used for terminal input.$/;"	m	struct:tty_display_info	access:public
input_available	w32xfns.c	/^HANDLE input_available = NULL;$/;"	v
input_available_clear_time	keyboard.c	/^struct timespec *input_available_clear_time;$/;"	v	typeref:struct:timespec
input_blocked_p	blockinput.h	/^input_blocked_p (void)$/;"	f	signature:(void)
input_event	termhooks.h	/^struct input_event$/;"	s
input_event::arg	termhooks.h	/^  Lisp_Object arg;$/;"	m	struct:input_event	access:public
input_event::code	termhooks.h	/^  unsigned code;$/;"	m	struct:input_event	access:public
input_event::frame_or_window	termhooks.h	/^  Lisp_Object frame_or_window;$/;"	m	struct:input_event	access:public
input_event::kind	termhooks.h	/^  ENUM_BF (event_kind) kind : EVENT_KIND_WIDTH;$/;"	m	struct:input_event	access:public
input_event::modifiers	termhooks.h	/^  unsigned modifiers;$/;"	m	struct:input_event	access:public
input_event::part	termhooks.h	/^  ENUM_BF (scroll_bar_part) part : 16;$/;"	m	struct:input_event	access:public
input_event::timestamp	termhooks.h	/^  Time timestamp;$/;"	m	struct:input_event	access:public
input_event::x	termhooks.h	/^  Lisp_Object x, y;$/;"	m	struct:input_event	access:public
input_event::y	termhooks.h	/^  Lisp_Object x, y;$/;"	m	struct:input_event	access:public
INPUT_EVENT_POS_MAX	keyboard.c	3605;"	d	file:
INPUT_EVENT_POS_MIN	keyboard.c	3608;"	d	file:
input_mode	xfns.c	/^    long input_mode;$/;"	m	struct:__anon39	file:	access:public
input_pending	keyboard.c	/^bool input_pending;$/;"	v
input_polling_used	keyboard.c	/^input_polling_used (void)$/;"	f	signature:(void)
input_polling_used	keyboard.h	/^extern bool input_polling_used (void);$/;"	p	signature:(void)
input_poll_signal	keyboard.h	/^extern void input_poll_signal (int);$/;"	p	signature:(int)
input_signal_count	w32term.c	/^static int volatile input_signal_count;$/;"	v	file:
input_was_pending	keyboard.c	/^static bool input_was_pending;$/;"	v	file:
insert	insdel.c	/^insert (const char *string, ptrdiff_t nbytes)$/;"	f	signature:(const char *string, ptrdiff_t nbytes)
insert	lisp.h	/^extern void insert (const char *, ptrdiff_t);$/;"	p	signature:(const char *, ptrdiff_t)
insert1	editfns.c	/^insert1 (Lisp_Object arg)$/;"	f	signature:(Lisp_Object arg)
insert1	lisp.h	/^extern void insert1 (Lisp_Object);$/;"	p	signature:(Lisp_Object)
insertcost	scroll.c	/^    int insertcost;$/;"	m	struct:matrix_elt	file:	access:public
insertcount	scroll.c	/^    unsigned char insertcount;$/;"	m	struct:matrix_elt	file:	access:public
insertion_type	lisp.h	/^  bool_bf insertion_type : 1;$/;"	m	struct:Lisp_Marker	access:public
insert_1_both	insdel.c	/^insert_1_both (const char *string,$/;"	f	signature:(const char *string, ptrdiff_t nchars, ptrdiff_t nbytes, bool inherit, bool prepare, bool before_markers)
insert_1_both	lisp.h	/^extern void insert_1_both (const char *, ptrdiff_t, ptrdiff_t,$/;"	p	signature:(const char *, ptrdiff_t, ptrdiff_t, bool, bool, bool)
insert_and_inherit	insdel.c	/^insert_and_inherit (const char *string, ptrdiff_t nbytes)$/;"	f	signature:(const char *string, ptrdiff_t nbytes)
insert_and_inherit	lisp.h	/^extern void insert_and_inherit (const char *, ptrdiff_t);$/;"	p	signature:(const char *, ptrdiff_t)
insert_before_markers	insdel.c	/^insert_before_markers (const char *string, ptrdiff_t nbytes)$/;"	f	signature:(const char *string, ptrdiff_t nbytes)
insert_before_markers	lisp.h	/^extern void insert_before_markers (const char *, ptrdiff_t);$/;"	p	signature:(const char *, ptrdiff_t)
insert_before_markers_and_inherit	insdel.c	/^insert_before_markers_and_inherit (const char *string,$/;"	f	signature:(const char *string, ptrdiff_t nbytes)
insert_before_markers_and_inherit	lisp.h	/^extern void insert_before_markers_and_inherit (const char *, ptrdiff_t);$/;"	p	signature:(const char *, ptrdiff_t)
insert_cache_boundary	region-cache.c	/^insert_cache_boundary (struct region_cache *c, ptrdiff_t i, ptrdiff_t pos,$/;"	f	file:	signature:(struct region_cache *c, ptrdiff_t i, ptrdiff_t pos, int value)
insert_char	insdel.c	/^insert_char (int c)$/;"	f	signature:(int c)
insert_char	lisp.h	/^extern void insert_char (int);$/;"	p	signature:(int)
insert_from_buffer	insdel.c	/^insert_from_buffer (struct buffer *buf,$/;"	f	signature:(struct buffer *buf, ptrdiff_t charpos, ptrdiff_t nchars, bool inherit)
insert_from_buffer	lisp.h	/^extern void insert_from_buffer (struct buffer *, ptrdiff_t, ptrdiff_t, bool);$/;"	p	signature:(struct buffer *, ptrdiff_t, ptrdiff_t, bool)
insert_from_buffer_1	insdel.c	/^insert_from_buffer_1 (struct buffer *buf,$/;"	f	file:	signature:(struct buffer *buf, ptrdiff_t from, ptrdiff_t nchars, bool inherit)
insert_from_buffer_1	insdel.c	/^static void insert_from_buffer_1 (struct buffer *, ptrdiff_t, ptrdiff_t, bool);$/;"	p	file:	signature:(struct buffer *, ptrdiff_t, ptrdiff_t, bool)
insert_from_gap	insdel.c	/^insert_from_gap (ptrdiff_t nchars, ptrdiff_t nbytes, bool text_at_gap_tail)$/;"	f	signature:(ptrdiff_t nchars, ptrdiff_t nbytes, bool text_at_gap_tail)
insert_from_gap	lisp.h	/^extern void insert_from_gap (ptrdiff_t, ptrdiff_t, bool text_at_gap_tail);$/;"	p	signature:(ptrdiff_t, ptrdiff_t, bool text_at_gap_tail)
insert_from_string	insdel.c	/^insert_from_string (Lisp_Object string, ptrdiff_t pos, ptrdiff_t pos_byte,$/;"	f	signature:(Lisp_Object string, ptrdiff_t pos, ptrdiff_t pos_byte, ptrdiff_t length, ptrdiff_t length_byte, bool inherit)
insert_from_string	lisp.h	/^extern void insert_from_string (Lisp_Object, ptrdiff_t, ptrdiff_t,$/;"	p	signature:(Lisp_Object, ptrdiff_t, ptrdiff_t, ptrdiff_t, ptrdiff_t, bool)
insert_from_string_1	insdel.c	/^insert_from_string_1 (Lisp_Object string, ptrdiff_t pos, ptrdiff_t pos_byte,$/;"	f	file:	signature:(Lisp_Object string, ptrdiff_t pos, ptrdiff_t pos_byte, ptrdiff_t nchars, ptrdiff_t nbytes, bool inherit, bool before_markers)
insert_from_string_1	insdel.c	/^static void insert_from_string_1 (Lisp_Object, ptrdiff_t, ptrdiff_t, ptrdiff_t,$/;"	p	file:
insert_from_string_before_markers	insdel.c	/^insert_from_string_before_markers (Lisp_Object string,$/;"	f	signature:(Lisp_Object string, ptrdiff_t pos, ptrdiff_t pos_byte, ptrdiff_t length, ptrdiff_t length_byte, bool inherit)
insert_from_string_before_markers	lisp.h	/^extern void insert_from_string_before_markers (Lisp_Object, ptrdiff_t,$/;"	p	signature:(Lisp_Object, ptrdiff_t, ptrdiff_t, ptrdiff_t, ptrdiff_t, bool)
insert_glyphs	dispextern.h	/^  void (*insert_glyphs) (struct window *w, struct glyph_row *row,$/;"	m	struct:redisplay_interface	access:public
insert_glyphs	dispextern.h	/^extern void insert_glyphs (struct frame *, struct glyph *, int);$/;"	p	signature:(struct frame *, struct glyph *, int)
insert_glyphs	terminal.c	/^insert_glyphs (struct frame *f, struct glyph *start, int len)$/;"	f	signature:(struct frame *f, struct glyph *start, int len)
insert_glyphs_hook	termhooks.h	/^  void (*insert_glyphs_hook) (struct frame *f, struct glyph *s, int n);$/;"	m	struct:terminal	access:public
INSERT_JUMP	regex.c	1639;"	d	file:
INSERT_JUMP2	regex.c	1643;"	d	file:
insert_left_trunc_glyphs	xdisp.c	/^insert_left_trunc_glyphs (struct it *it)$/;"	f	file:	signature:(struct it *it)
insert_line_cost	frame.h	/^  int *insert_line_cost;$/;"	m	struct:frame	access:public
insert_mode	termchar.h	/^  bool_bf insert_mode : 1;	\/* True when in insert mode.  *\/$/;"	m	struct:tty_display_info	access:public
insert_n_lines_cost	frame.h	/^  int *insert_n_lines_cost;$/;"	m	struct:frame	access:public
insert_op1	regex.c	/^insert_op1 (re_opcode_t op, unsigned char *loc, int arg, unsigned char *end)$/;"	f	file:	signature:(re_opcode_t op, unsigned char *loc, int arg, unsigned char *end)
insert_op1	regex.c	/^static void insert_op1 (re_opcode_t op, unsigned char *loc,$/;"	p	file:	signature:(re_opcode_t op, unsigned char *loc, int arg, unsigned char *end)
insert_op2	regex.c	/^insert_op2 (re_opcode_t op, unsigned char *loc, int arg1, int arg2, unsigned char *end)$/;"	f	file:	signature:(re_opcode_t op, unsigned char *loc, int arg1, int arg2, unsigned char *end)
insert_op2	regex.c	/^static void insert_op2 (re_opcode_t op, unsigned char *loc,$/;"	p	file:	signature:(re_opcode_t op, unsigned char *loc, int arg1, int arg2, unsigned char *end)
insert_string	insdel.c	/^insert_string (const char *s)$/;"	f	signature:(const char *s)
insert_string	lisp.h	/^extern void insert_string (const char *);$/;"	p	signature:(const char *)
INSTALL_CURSOR	xfns.c	1302;"	d	file:
INSTALL_CURSOR	xfns.c	1324;"	d	file:
instancetype	nsterm.h	/^typedef id instancetype;$/;"	t
instring	syntax.c	/^    int instring;  \/* -1 if not within string, else desired terminator.  *\/$/;"	m	struct:lisp_parse_state	file:	access:public
ins_del_costs	scroll.c	/^ins_del_costs (struct frame *frame,$/;"	f	file:	signature:(struct frame *frame, const char *one_line_string, const char *multi_string, const char *setup_string, const char *cleanup_string, int *costvec, int *ncostvec, int coefficient)
ins_del_lines	dispextern.h	/^extern void ins_del_lines (struct frame *, int, int);$/;"	p	signature:(struct frame *, int, int)
ins_del_lines	terminal.c	/^ins_del_lines (struct frame *f, int vpos, int n)$/;"	f	signature:(struct frame *f, int vpos, int n)
ins_del_lines_hook	termhooks.h	/^  void (*ins_del_lines_hook) (struct frame *f, int, int);$/;"	m	struct:terminal	access:public
intbig_to_lisp	data.c	/^intbig_to_lisp (intmax_t i)$/;"	f	signature:(intmax_t i)
INTBIG_TO_LISP	data.c	2050;"	d	file:
intbig_to_lisp	lisp.h	/^extern Lisp_Object intbig_to_lisp (intmax_t);$/;"	p	signature:(intmax_t)
integer	lisp.h	/^      ptrdiff_t integer;$/;"	m	union:Lisp_Save_Value::__anon26	access:public
integer	regex.c	/^  long integer;$/;"	m	union:fail_stack_elt	file:	access:public
INTEGERP	lisp.h	/^(INTEGERP) (Lisp_Object x)$/;"	f	signature:(Lisp_Object x)
INTEGERP	lisp.h	357;"	d
integers	search.c	/^  (Lisp_Object integers, Lisp_Object reuse, Lisp_Object reseat)$/;"	v
INTEGER_TO_CONS	lisp.h	3292;"	d
INTERACTIVE	commands.h	45;"	d
interactive	eval.c	/^  (Lisp_Object function, Lisp_Object file, Lisp_Object docstring, Lisp_Object interactive, Lisp_Object type)$/;"	v
interface	dbusbind.c	40;"	d	file:
interlace_increment	image.c	/^static const int interlace_increment[] = {8, 8, 4, 2};$/;"	v	file:
interlace_start	image.c	/^static const int interlace_start[] = {0, 4, 2, 1};$/;"	v	file:
interline	widgetprv.h	/^  int		interline;		\/* skips between lines *\/$/;"	m	struct:__anon98	access:public
intern	lisp.h	/^intern (const char *str)$/;"	f	signature:(const char *str)
internalize_parse_state	syntax.c	/^internalize_parse_state (Lisp_Object external, struct lisp_parse_state *state)$/;"	f	file:	signature:(Lisp_Object external, struct lisp_parse_state *state)
internalize_parse_state	syntax.c	/^static void internalize_parse_state (Lisp_Object, struct lisp_parse_state *);$/;"	p	file:	signature:(Lisp_Object, struct lisp_parse_state *)
INTERNAL_BORDER_BOTTOM_EDGE	frame.h	/^   INTERNAL_BORDER_BOTTOM_EDGE,$/;"	e	enum:internal_border_part
INTERNAL_BORDER_BOTTOM_LEFT_CORNER	frame.h	/^   INTERNAL_BORDER_BOTTOM_LEFT_CORNER,$/;"	e	enum:internal_border_part
INTERNAL_BORDER_BOTTOM_RIGHT_CORNER	frame.h	/^   INTERNAL_BORDER_BOTTOM_RIGHT_CORNER,$/;"	e	enum:internal_border_part
INTERNAL_BORDER_FACE_ID	dispextern.h	/^  INTERNAL_BORDER_FACE_ID,$/;"	e	enum:face_id
INTERNAL_BORDER_LEFT_EDGE	frame.h	/^   INTERNAL_BORDER_LEFT_EDGE,$/;"	e	enum:internal_border_part
INTERNAL_BORDER_NONE	frame.h	/^   INTERNAL_BORDER_NONE,$/;"	e	enum:internal_border_part
internal_border_part	frame.h	/^enum internal_border_part$/;"	g
internal_border_parts	keyboard.c	/^static short const internal_border_parts[] = {$/;"	v	file:
INTERNAL_BORDER_RIGHT_EDGE	frame.h	/^   INTERNAL_BORDER_RIGHT_EDGE,$/;"	e	enum:internal_border_part
INTERNAL_BORDER_TOP_EDGE	frame.h	/^   INTERNAL_BORDER_TOP_EDGE,$/;"	e	enum:internal_border_part
INTERNAL_BORDER_TOP_LEFT_CORNER	frame.h	/^   INTERNAL_BORDER_TOP_LEFT_CORNER,$/;"	e	enum:internal_border_part
INTERNAL_BORDER_TOP_RIGHT_CORNER	frame.h	/^   INTERNAL_BORDER_TOP_RIGHT_CORNER,$/;"	e	enum:internal_border_part
internal_border_width	frame.h	/^  int internal_border_width;$/;"	m	struct:frame	access:public
internal_border_width	widgetprv.h	/^  int		internal_border_width;	\/* internal borders *\/$/;"	m	struct:__anon98	access:public
internal_catch	eval.c	/^internal_catch (Lisp_Object tag,$/;"	f	signature:(Lisp_Object tag, Lisp_Object (*func) (Lisp_Object), Lisp_Object arg)
internal_catch	lisp.h	/^extern Lisp_Object internal_catch (Lisp_Object, Lisp_Object (*) (Lisp_Object), Lisp_Object);$/;"	p	signature:(Lisp_Object, Lisp_Object (*) (Lisp_Object), Lisp_Object)
internal_condition_case	eval.c	/^internal_condition_case (Lisp_Object (*bfun) (void), Lisp_Object handlers,$/;"	f	signature:(Lisp_Object (bfun) void), Lisp_Object handlers, Lisp_Object (*hfun) (Lisp_Object))
internal_condition_case	lisp.h	/^extern Lisp_Object internal_condition_case (Lisp_Object (*) (void), Lisp_Object, Lisp_Object (*) (Lisp_Object));$/;"	p	signature:(Lisp_Object () void), Lisp_Object, Lisp_Object (*) (Lisp_Object))
internal_condition_case_1	eval.c	/^internal_condition_case_1 (Lisp_Object (*bfun) (Lisp_Object), Lisp_Object arg,$/;"	f	signature:(Lisp_Object (bfun) Lisp_Object), Lisp_Object arg, Lisp_Object handlers, Lisp_Object (*hfun) (Lisp_Object))
internal_condition_case_1	lisp.h	/^extern Lisp_Object internal_condition_case_1 (Lisp_Object (*) (Lisp_Object), Lisp_Object, Lisp_Object, Lisp_Object (*) (Lisp_Object));$/;"	p	signature:(Lisp_Object () Lisp_Object), Lisp_Object, Lisp_Object, Lisp_Object (*) (Lisp_Object))
internal_condition_case_2	eval.c	/^internal_condition_case_2 (Lisp_Object (*bfun) (Lisp_Object, Lisp_Object),$/;"	f	signature:(Lisp_Object (bfun) Lisp_Object, Lisp_Object), Lisp_Object arg1, Lisp_Object arg2, Lisp_Object handlers, Lisp_Object (*hfun) (Lisp_Object))
internal_condition_case_2	lisp.h	/^extern Lisp_Object internal_condition_case_2 (Lisp_Object (*) (Lisp_Object, Lisp_Object), Lisp_Object, Lisp_Object, Lisp_Object, Lisp_Object (*) (Lisp_Object));$/;"	p	signature:(Lisp_Object () Lisp_Object, Lisp_Object), Lisp_Object, Lisp_Object, Lisp_Object, Lisp_Object (*) (Lisp_Object))
internal_condition_case_n	eval.c	/^internal_condition_case_n (Lisp_Object (*bfun) (ptrdiff_t, Lisp_Object *),$/;"	f	signature:(Lisp_Object (bfun) ptrdiff_t, Lisp_Object *), ptrdiff_t nargs, Lisp_Object *args, Lisp_Object handlers, Lisp_Object (*hfun) (Lisp_Object err, ptrdiff_t nargs, Lisp_Object *args))
internal_condition_case_n	lisp.h	/^extern Lisp_Object internal_condition_case_n$/;"	p	signature:(Lisp_Object () ptrdiff_t, Lisp_Object *), ptrdiff_t, Lisp_Object *, Lisp_Object, Lisp_Object (*) (Lisp_Object, ptrdiff_t, Lisp_Object *))
internal_delete_file	fileio.c	/^internal_delete_file (Lisp_Object filename)$/;"	f	signature:(Lisp_Object filename)
internal_delete_file	lisp.h	/^extern bool internal_delete_file (Lisp_Object);$/;"	p	signature:(Lisp_Object)
internal_delete_file_1	fileio.c	/^internal_delete_file_1 (Lisp_Object ignore)$/;"	f	file:	signature:(Lisp_Object ignore)
internal_equal	fns.c	/^bool internal_equal (Lisp_Object, Lisp_Object, enum equal_kind, int, Lisp_Object);$/;"	p	file:	signature:(Lisp_Object, Lisp_Object, enum equal_kind, int, Lisp_Object)
internal_equal	fns.c	/^internal_equal (Lisp_Object o1, Lisp_Object o2, enum equal_kind equal_kind,$/;"	f	signature:(Lisp_Object o1, Lisp_Object o2, enum equal_kind equal_kind, int depth, Lisp_Object ht)
internal_last_event_frame	keyboard.c	/^Lisp_Object internal_last_event_frame;$/;"	v
internal_lisp_condition_case	eval.c	/^internal_lisp_condition_case (Lisp_Object var, Lisp_Object bodyform,$/;"	f	signature:(Lisp_Object var, Lisp_Object bodyform, Lisp_Object handlers)
internal_lisp_condition_case	lisp.h	/^extern Lisp_Object internal_lisp_condition_case (Lisp_Object, Lisp_Object, Lisp_Object);$/;"	p	signature:(Lisp_Object, Lisp_Object, Lisp_Object)
internal_self_insert	cmds.c	/^internal_self_insert (int c, EMACS_INT n)$/;"	f	file:	signature:(int c, EMACS_INT n)
internal_self_insert	cmds.c	/^static int internal_self_insert (int, EMACS_INT);$/;"	p	file:	signature:(int, EMACS_INT)
internal_with_output_to_temp_buffer	lisp.h	/^extern Lisp_Object internal_with_output_to_temp_buffer$/;"	p	signature:(const char *, Lisp_Object (*) (Lisp_Object), Lisp_Object)
interned	lisp.h	/^  unsigned interned : 2;$/;"	m	struct:Lisp_Symbol	access:public
intern_1	lisp.h	/^extern Lisp_Object intern_1 (const char *, ptrdiff_t);$/;"	p	signature:(const char *, ptrdiff_t)
intern_1	lread.c	/^intern_1 (const char *str, ptrdiff_t len)$/;"	f	signature:(const char *str, ptrdiff_t len)
intern_c_string	lisp.h	/^intern_c_string (const char *str)$/;"	f	signature:(const char *str)
intern_c_string_1	lisp.h	/^extern Lisp_Object intern_c_string_1 (const char *, ptrdiff_t);$/;"	p	signature:(const char *, ptrdiff_t)
intern_c_string_1	lread.c	/^intern_c_string_1 (const char *str, ptrdiff_t len)$/;"	f	signature:(const char *str, ptrdiff_t len)
intern_driver	lisp.h	/^extern Lisp_Object intern_driver (Lisp_Object, Lisp_Object, Lisp_Object);$/;"	p	signature:(Lisp_Object, Lisp_Object, Lisp_Object)
intern_driver	lread.c	/^intern_driver (Lisp_Object string, Lisp_Object obarray, Lisp_Object index)$/;"	f	signature:(Lisp_Object string, Lisp_Object obarray, Lisp_Object index)
INTERN_FIELD	font.c	1049;"	d	file:
INTERN_FIELD_SYM	font.c	1050;"	d	file:
intern_font_name	w32font.c	/^intern_font_name (char * string)$/;"	f	signature:(char * string)
intern_font_name	w32font.h	/^Lisp_Object intern_font_name (char *);$/;"	p	signature:(char *)
intern_sym	lread.c	/^intern_sym (Lisp_Object sym, Lisp_Object obarray, Lisp_Object index)$/;"	f	file:	signature:(Lisp_Object sym, Lisp_Object obarray, Lisp_Object index)
interrupt	keyboard.c	/^  (Lisp_Object interrupt, Lisp_Object flow, Lisp_Object meta, Lisp_Object quit)$/;"	v
interrupts_deferred	keyboard.c	/^bool interrupts_deferred;$/;"	v
interrupt_handle	w32xfns.c	/^HANDLE interrupt_handle = NULL;$/;"	v
INTERRUPT_INPUT	config.h	1362;"	d
interrupt_input	keyboard.c	/^bool interrupt_input;$/;"	v
interrupt_input_blocked	keyboard.c	/^volatile int interrupt_input_blocked;$/;"	v
interrupt_input_blocked	lisp.h	/^  int interrupt_input_blocked;$/;"	m	struct:handler	access:public
interval	atimer.h	/^  struct timespec interval;$/;"	m	struct:atimer	typeref:struct:atimer::timespec	access:public
interval	intervals.h	/^    struct interval *interval;$/;"	m	union:interval::__anon142	typeref:struct:interval::__anon142::interval	access:public
interval	intervals.h	/^struct interval$/;"	s
INTERVAL	lisp.h	/^typedef struct interval *INTERVAL;$/;"	t	typeref:struct:interval
interval::front_sticky	intervals.h	/^  bool_bf front_sticky : 1;	    \/* True means text inserted just$/;"	m	struct:interval	access:public
interval::gcmarkbit	intervals.h	/^  bool_bf gcmarkbit : 1;$/;"	m	struct:interval	access:public
interval::left	intervals.h	/^  struct interval *left;	\/* Intervals which precede me.  *\/$/;"	m	struct:interval	typeref:struct:interval::interval	access:public
interval::plist	intervals.h	/^  Lisp_Object plist;		    \/* Other properties.  *\/$/;"	m	struct:interval	access:public
interval::position	intervals.h	/^  ptrdiff_t position;	        \/* Cache of interval's character position.  *\/$/;"	m	struct:interval	access:public
interval::rear_sticky	intervals.h	/^  bool_bf rear_sticky : 1;	    \/* Likewise for just after it.  *\/$/;"	m	struct:interval	access:public
interval::right	intervals.h	/^  struct interval *right;	\/* Intervals which succeed me.  *\/$/;"	m	struct:interval	typeref:struct:interval::interval	access:public
interval::total_length	intervals.h	/^  ptrdiff_t total_length;       \/* Length of myself and both children.  *\/$/;"	m	struct:interval	access:public
interval::up	intervals.h	/^  } up;$/;"	m	struct:interval	typeref:union:interval::__anon142	access:public
interval::up_obj	intervals.h	/^  bool_bf up_obj : 1;$/;"	m	struct:interval	access:public
interval::visible	intervals.h	/^  bool_bf visible : 1;		    \/* False means don't display.  *\/$/;"	m	struct:interval	access:public
interval::write_protect	intervals.h	/^  bool_bf write_protect : 1;	    \/* True means can't modify.  *\/$/;"	m	struct:interval	access:public
interval::__anon142::interval	intervals.h	/^    struct interval *interval;$/;"	m	union:interval::__anon142	typeref:struct:interval::__anon142::interval	access:public
interval::__anon142::obj	intervals.h	/^    Lisp_Object obj;$/;"	m	union:interval::__anon142	access:public
intervals	alloc.c	/^  struct interval intervals[INTERVAL_BLOCK_SIZE];$/;"	m	struct:interval_block	typeref:struct:interval_block::interval	file:	access:public
intervals	buffer.h	/^    INTERVAL intervals;$/;"	m	struct:buffer_text	access:public
intervals	lisp.h	/^    INTERVAL intervals;		\/* Text properties in this string.  *\/$/;"	m	struct:Lisp_String	access:public
INTERVALS_AT_ONCE	syntax.c	/^enum { INTERVALS_AT_ONCE = 10 };	\/* 1 + max-number of intervals$/;"	e	enum:__anon151	file:
intervals_consed	globals.h	843;"	d
intervals_equal	intervals.c	/^intervals_equal (INTERVAL i0, INTERVAL i1)$/;"	f	signature:(INTERVAL i0, INTERVAL i1)
intervals_equal	intervals.h	/^extern bool intervals_equal (INTERVAL, INTERVAL);$/;"	p	signature:(INTERVAL, INTERVAL)
INTERVALS_H	Makefile	/^INTERVALS_H = dispextern.h intervals.h composite.h$/;"	m
interval_block	alloc.c	/^static struct interval_block *interval_block;$/;"	v	typeref:struct:interval_block	file:
interval_block	alloc.c	/^struct interval_block$/;"	s	file:
interval_block::intervals	alloc.c	/^  struct interval intervals[INTERVAL_BLOCK_SIZE];$/;"	m	struct:interval_block	typeref:struct:interval_block::interval	file:	access:public
interval_block::next	alloc.c	/^  struct interval_block *next;$/;"	m	struct:interval_block	typeref:struct:interval_block::interval_block	file:	access:public
interval_block_index	alloc.c	/^static int interval_block_index = INTERVAL_BLOCK_SIZE;$/;"	v	file:
INTERVAL_BLOCK_SIZE	alloc.c	1478;"	d	file:
interval_deletion_adjustment	intervals.c	/^interval_deletion_adjustment (register INTERVAL tree, register ptrdiff_t from,$/;"	f	file:	signature:(register INTERVAL tree, register ptrdiff_t from, register ptrdiff_t amount)
interval_free_list	alloc.c	/^static INTERVAL interval_free_list;$/;"	v	file:
interval_has_all_properties	textprop.c	/^interval_has_all_properties (Lisp_Object plist, INTERVAL i)$/;"	f	file:	signature:(Lisp_Object plist, INTERVAL i)
INTERVAL_HAS_OBJECT	intervals.h	124;"	d
INTERVAL_HAS_PARENT	intervals.h	123;"	d
interval_has_some_properties	textprop.c	/^interval_has_some_properties (Lisp_Object plist, INTERVAL i)$/;"	f	file:	signature:(Lisp_Object plist, INTERVAL i)
interval_has_some_properties_list	textprop.c	/^interval_has_some_properties_list (Lisp_Object list, INTERVAL i)$/;"	f	file:	signature:(Lisp_Object list, INTERVAL i)
interval_insert_behind_hooks	textprop.c	/^static Lisp_Object interval_insert_behind_hooks;$/;"	v	file:
interval_insert_in_front_hooks	textprop.c	/^static Lisp_Object interval_insert_in_front_hooks;$/;"	v	file:
INTERVAL_LAST_POS	intervals.h	107;"	d
interval_of	intervals.h	/^extern INTERVAL interval_of (ptrdiff_t, Lisp_Object);$/;"	p	signature:(ptrdiff_t, Lisp_Object)
interval_of	textprop.c	/^interval_of (ptrdiff_t position, Lisp_Object object)$/;"	f	signature:(ptrdiff_t position, Lisp_Object object)
INTERVAL_PARENT	intervals.h	132;"	d
INTERVAL_PARENT_OR_NULL	intervals.h	164;"	d
interval_start_pos	intervals.c	/^interval_start_pos (INTERVAL source)$/;"	f	file:	signature:(INTERVAL source)
INTERVAL_VISIBLE_P	intervals.h	198;"	d
INTERVAL_WRITABLE_P	intervals.h	202;"	d
INTFWDP	data.c	/^INTFWDP (union Lisp_Fwd *a)$/;"	f	file:	signature:(union Lisp_Fwd *a)
intime	atimer.c	/^  int intime;$/;"	m	struct:atimer_result	file:	access:public
INTMASK	lisp.h	393;"	d
intspec	lisp.h	/^    const char *intspec;$/;"	m	struct:Lisp_Subr	access:public
INTTYPEBITS	lisp.h	/^    INTTYPEBITS = GCTYPEBITS - 1,$/;"	e	enum:Lisp_Bits
intvar	lisp.h	/^    EMACS_INT *intvar;$/;"	m	struct:Lisp_Intfwd	access:public
int_from_hex	w32proc.c	/^int_from_hex (char * s)$/;"	f	file:	signature:(char * s)
int_gtk_range_get_value	gtkutil.c	/^int_gtk_range_get_value (GtkRange *range)$/;"	f	file:	signature:(GtkRange *range)
int_msg	w32xfns.c	/^typedef struct int_msg$/;"	s	file:
int_msg	w32xfns.c	/^} int_msg;$/;"	t	typeref:struct:int_msg	file:
int_msg::lpNext	w32xfns.c	/^  struct int_msg *lpNext;$/;"	m	struct:int_msg	typeref:struct:int_msg::int_msg	file:	access:public
int_msg::w32msg	w32xfns.c	/^  W32Msg w32msg;$/;"	m	struct:int_msg	file:	access:public
invalidate_buffer_caches	insdel.c	/^invalidate_buffer_caches (struct buffer *buf, ptrdiff_t start, ptrdiff_t end)$/;"	f	signature:(struct buffer *buf, ptrdiff_t start, ptrdiff_t end)
invalidate_buffer_caches	lisp.h	/^extern void invalidate_buffer_caches (struct buffer *, ptrdiff_t, ptrdiff_t);$/;"	p	signature:(struct buffer *, ptrdiff_t, ptrdiff_t)
invalidate_current_column	indent.c	/^invalidate_current_column (void)$/;"	f	signature:(void)
invalidate_current_column	lisp.h	/^extern void invalidate_current_column (void);$/;"	p	signature:(void)
invalidate_region_cache	region-cache.c	/^invalidate_region_cache (struct buffer *buf, struct region_cache *c,$/;"	f	signature:(struct buffer *buf, struct region_cache *c, ptrdiff_t head, ptrdiff_t tail)
invalidate_region_cache	region-cache.h	/^extern void invalidate_region_cache (struct buffer *BUF,$/;"	p	signature:(struct buffer *BUF, struct region_cache *CACHE, ptrdiff_t HEAD, ptrdiff_t TAIL)
invalid_code	charset.h	/^  unsigned invalid_code;$/;"	m	struct:charset	access:public
invalid_eol_type	xdisp.c	/^static unsigned char invalid_eol_type[] = "(*invalid*)";$/;"	v	file:
invalid_isolates	dispextern.h	/^  ptrdiff_t invalid_isolates;	\/* how many PDIs to ignore *\/$/;"	m	struct:bidi_it	access:public
invalid_levels	dispextern.h	/^  ptrdiff_t invalid_levels;	\/* how many PDFs to ignore *\/$/;"	m	struct:bidi_it	access:public
invalid_syntax	lread.c	/^invalid_syntax (const char *s)$/;"	f	file:	signature:(const char *s)
invalid_time	editfns.c	/^invalid_time (void)$/;"	f	file:	signature:(void)
invalid_timespec	systime.h	/^invalid_timespec (void)$/;"	f	signature:(void)
inverse	window.c	/^  (Lisp_Object window, Lisp_Object first, Lisp_Object last, Lisp_Object body, Lisp_Object inverse, Lisp_Object left)$/;"	v
inverse_video	globals.h	987;"	d
invisibility_spec_	buffer.h	/^  Lisp_Object invisibility_spec_;$/;"	m	struct:buffer	access:public
invisible_cursor	xterm.h	/^  Cursor invisible_cursor;$/;"	m	struct:x_display_info	access:public
invisible_prop	intervals.h	/^extern int invisible_prop (Lisp_Object, Lisp_Object);$/;"	p	signature:(Lisp_Object, Lisp_Object)
invisible_prop	xdisp.c	/^invisible_prop (Lisp_Object propval, Lisp_Object list)$/;"	f	signature:(Lisp_Object propval, Lisp_Object list)
INVISIBLE_PROP_IDX	dispextern.h	/^  INVISIBLE_PROP_IDX,$/;"	e	enum:prop_idx
invoke_thread_function	thread.c	/^invoke_thread_function (void)$/;"	f	file:	signature:(void)
inword	casefiddle.c	/^  bool inword;$/;"	m	struct:casing_context	file:	access:public
in_2char_comment_start	syntax.c	/^in_2char_comment_start (struct lisp_parse_state *state,$/;"	f	file:	signature:(struct lisp_parse_state *state, int prev_from_syntax, ptrdiff_t prev_from, ptrdiff_t from_byte)
in_animation	nsterm.h	/^  int in_animation;$/;"	m	struct:ns_output	access:public
IN_BOUND	nsterm.h	1274;"	d
in_classes	syntax.c	/^in_classes (int c, Lisp_Object iso_classes)$/;"	f	file:	signature:(int c, Lisp_Object iso_classes)
in_classes	syntax.c	/^static bool in_classes (int, Lisp_Object);$/;"	p	file:	signature:(int, Lisp_Object)
in_current_thread	emacs-module.c	/^in_current_thread (void)$/;"	f	file:	signature:(void)
in_display_vector_p	dispextern.h	/^bool in_display_vector_p (struct it *);$/;"	p	signature:(struct it *)
in_display_vector_p	xdisp.c	/^in_display_vector_p (struct it *it)$/;"	f	signature:(struct it *it)
IN_DONT_FOLLOW	inotify.c	39;"	d	file:
in_dumped_exec	unexmacosx.c	/^static int in_dumped_exec = 0;$/;"	v	file:
in_ellipses_for_invisible_text_p	xdisp.c	/^in_ellipses_for_invisible_text_p (struct display_pos *pos, struct window *w)$/;"	f	file:	signature:(struct display_pos *pos, struct window *w)
IN_EXCL_UNLINK	inotify.c	36;"	d	file:
IN_INT_RANGE	ccl.c	749;"	d	file:
IN_ONLYDIR	inotify.c	42;"	d	file:
ioptMax	unexelf.c	/^	int ioptMax;$/;"	m	struct:__anon123	file:	access:public
io_info	w32notify.c	/^  OVERLAPPED *io_info;	\/* the OVERLAPPED structure for async I\/O *\/$/;"	m	struct:notification	file:	access:public
ipdMax	unexelf.c	/^	int ipdMax;$/;"	m	struct:__anon123	file:	access:public
iQabove	globals.h	1470;"	d
iQabove_handle	globals.h	1472;"	d
iQabove_suspended	globals.h	1474;"	d
iQaccess	globals.h	1476;"	d
iQaccess_file	globals.h	1478;"	d
iQactivate_input_method	globals.h	1480;"	d
iQactivate_menubar_hook	globals.h	1482;"	d
iQadd_name_to_file	globals.h	1484;"	d
iQadjust_frame_size_1	globals.h	1486;"	d
iQadjust_frame_size_2	globals.h	1488;"	d
iQadjust_frame_size_3	globals.h	1490;"	d
iQafter_change_functions	globals.h	1492;"	d
iQafter_handle	globals.h	1494;"	d
iQafter_insert_file_set_coding	globals.h	1496;"	d
iQafter_string	globals.h	1498;"	d
iQall_events	globals.h	1500;"	d
iQalpha	globals.h	1502;"	d
iQalt	globals.h	1504;"	d
iQand_optional	globals.h	1506;"	d
iQand_rest	globals.h	1508;"	d
iQappend	globals.h	1510;"	d
iQapply	globals.h	1512;"	d
iQargs	globals.h	1514;"	d
iQargs_out_of_range	globals.h	1516;"	d
iQarith_error	globals.h	1518;"	d
iQarrayp	globals.h	1520;"	d
iQarrow	globals.h	1522;"	d
iQascii	globals.h	1524;"	d
iQascii_0	globals.h	1526;"	d
iQascii_character	globals.h	1528;"	d
iQassq_delete_all	globals.h	1530;"	d
iQATOM	globals.h	1102;"	d
iQattrib	globals.h	1532;"	d
iQautoload	globals.h	1546;"	d
iQAutomatic_GC	globals.h	1104;"	d
iQauto_composed	globals.h	1534;"	d
iQauto_fill_chars	globals.h	1536;"	d
iQauto_hscroll_mode	globals.h	1538;"	d
iQauto_lower	globals.h	1540;"	d
iQauto_raise	globals.h	1542;"	d
iQauto_save_coding	globals.h	1544;"	d
iQbackground_color	globals.h	1548;"	d
iQbackground_mode	globals.h	1550;"	d
iQbackquote	globals.h	1552;"	d
iQbar	globals.h	1554;"	d
iQbefore_change_functions	globals.h	1556;"	d
iQbefore_handle	globals.h	1558;"	d
iQbefore_string	globals.h	1560;"	d
iQbeginning_of_buffer	globals.h	1562;"	d
iQbelow	globals.h	1564;"	d
iQbelow_handle	globals.h	1566;"	d
iQbig	globals.h	1568;"	d
iQbig5	globals.h	1570;"	d
iQbitmap_spec_p	globals.h	1572;"	d
iQbold	globals.h	1574;"	d
iQbool_vector	globals.h	1576;"	d
iQbool_vector_p	globals.h	1578;"	d
iQborder	globals.h	1580;"	d
iQborder_color	globals.h	1582;"	d
iQborder_width	globals.h	1584;"	d
iQboth	globals.h	1586;"	d
iQboth_horiz	globals.h	1588;"	d
iQbottom	globals.h	1590;"	d
iQbottom_divider	globals.h	1592;"	d
iQbottom_divider_width	globals.h	1594;"	d
iQbottom_edge	globals.h	1596;"	d
iQbottom_left_corner	globals.h	1598;"	d
iQbottom_margin	globals.h	1600;"	d
iQbottom_right_corner	globals.h	1602;"	d
iQboundary	globals.h	1604;"	d
iQbox	globals.h	1606;"	d
iQbuffer	globals.h	1608;"	d
iQbufferp	globals.h	1628;"	d
iQbuffers	globals.h	1630;"	d
iQbuffer_access_fontify_functions	globals.h	1610;"	d
iQbuffer_file_coding_system	globals.h	1612;"	d
iQbuffer_list	globals.h	1614;"	d
iQbuffer_list_update_hook	globals.h	1616;"	d
iQbuffer_name_history	globals.h	1618;"	d
iQbuffer_or_string_p	globals.h	1620;"	d
iQbuffer_position	globals.h	1622;"	d
iQbuffer_predicate	globals.h	1624;"	d
iQbuffer_read_only	globals.h	1626;"	d
iQburied_buffer_list	globals.h	1632;"	d
iQbyte_code_meter	globals.h	1634;"	d
iQc	globals.h	1636;"	d
iQCadstyle	globals.h	1112;"	d
iQCadvertised_binding	globals.h	1114;"	d
iQCalign_to	globals.h	1116;"	d
iQcall_process	globals.h	1638;"	d
iQcall_process_region	globals.h	1640;"	d
iQcancel_timer	globals.h	1642;"	d
iQCantialias	globals.h	1118;"	d
iQCarray	globals.h	1120;"	d
iQcar_less_than_car	globals.h	1644;"	d
iQCascent	globals.h	1122;"	d
iQCascii_compatible_p	globals.h	1124;"	d
iQcase_fold_search	globals.h	1646;"	d
iQcase_table	globals.h	1648;"	d
iQcase_table_p	globals.h	1650;"	d
iQcategory	globals.h	1652;"	d
iQcategoryp	globals.h	1658;"	d
iQcategorysetp	globals.h	1660;"	d
iQcategory_table	globals.h	1654;"	d
iQcategory_table_p	globals.h	1656;"	d
iQCautohint	globals.h	1126;"	d
iQCavgwidth	globals.h	1128;"	d
iQCbackground	globals.h	1130;"	d
iQCbold	globals.h	1132;"	d
iQCboolean	globals.h	1134;"	d
iQCbox	globals.h	1136;"	d
iQCbuffer	globals.h	1138;"	d
iQCbutton	globals.h	1140;"	d
iQCbyte	globals.h	1142;"	d
iQCbytesize	globals.h	1144;"	d
iQCcategory	globals.h	1146;"	d
iQccl	globals.h	1662;"	d
iQcclp	globals.h	1666;"	d
iQccl_program_idx	globals.h	1664;"	d
iQCcoding	globals.h	1148;"	d
iQCcolor	globals.h	1150;"	d
iQCcolor_adjustment	globals.h	1152;"	d
iQCcolor_symbols	globals.h	1154;"	d
iQCcombining_capability	globals.h	1156;"	d
iQCcommand	globals.h	1158;"	d
iQCcomplete_negotiation	globals.h	1160;"	d
iQCconnection_type	globals.h	1162;"	d
iQCconversion	globals.h	1164;"	d
iQCcrlfiles	globals.h	1166;"	d
iQCcrop	globals.h	1168;"	d
iQCdata	globals.h	1170;"	d
iQCdebug_on_exit	globals.h	1172;"	d
iQCdecode_translation_table	globals.h	1174;"	d
iQCdefault_char	globals.h	1176;"	d
iQCdevice	globals.h	1178;"	d
iQCdict_entry	globals.h	1180;"	d
iQCdistant_foreground	globals.h	1182;"	d
iQCdocumentation	globals.h	1184;"	d
iQCdouble	globals.h	1186;"	d
iQCdpi	globals.h	1188;"	d
iQcdr	globals.h	1668;"	d
iQceiling	globals.h	1670;"	d
iQCembolden	globals.h	1190;"	d
iQCenable	globals.h	1192;"	d
iQCencode_translation_table	globals.h	1194;"	d
iQcenter	globals.h	1672;"	d
iQCeval	globals.h	1196;"	d
iQCfamily	globals.h	1198;"	d
iQCfile	globals.h	1200;"	d
iQCfilter	globals.h	1202;"	d
iQCflowcontrol	globals.h	1204;"	d
iQCfont	globals.h	1206;"	d
iQCfontset	globals.h	1210;"	d
iQCfont_entity	globals.h	1208;"	d
iQCforeground	globals.h	1212;"	d
iQCfoundry	globals.h	1214;"	d
iQchange_frame_size	globals.h	1674;"	d
iQchange_major_mode_hook	globals.h	1676;"	d
iQchar	globals.h	1678;"	d
iQcharacterp	globals.h	1694;"	d
iQcharset	globals.h	1696;"	d
iQcharsetp	globals.h	1698;"	d
iQchar_code_property_table	globals.h	1680;"	d
iQchar_from_name	globals.h	1682;"	d
iQchar_or_string_p	globals.h	1684;"	d
iQchar_script_table	globals.h	1686;"	d
iQchar_table	globals.h	1688;"	d
iQchar_table_extra_slots	globals.h	1690;"	d
iQchar_table_p	globals.h	1692;"	d
iQCheight	globals.h	1216;"	d
iQChelp	globals.h	1218;"	d
iQCheuristic_mask	globals.h	1220;"	d
iQChinting	globals.h	1222;"	d
iQChintstyle	globals.h	1224;"	d
iQchoice	globals.h	1700;"	d
iQChost	globals.h	1226;"	d
iQChostname	globals.h	1228;"	d
iQCignore_defface	globals.h	1230;"	d
iQCimage	globals.h	1232;"	d
iQCindex	globals.h	1234;"	d
iQCinherit	globals.h	1236;"	d
iQCint16	globals.h	1238;"	d
iQCint32	globals.h	1240;"	d
iQCint64	globals.h	1242;"	d
iQCinverse_video	globals.h	1244;"	d
iQcircle	globals.h	1702;"	d
iQcircular_list	globals.h	1704;"	d
iQCitalic	globals.h	1246;"	d
iQCkeylist	globals.h	1250;"	d
iQCkeys	globals.h	1252;"	d
iQCkey_sequence	globals.h	1248;"	d
iQClabel	globals.h	1254;"	d
iQClang	globals.h	1256;"	d
iQClcdfilter	globals.h	1258;"	d
iQCline_width	globals.h	1260;"	d
iQCLIPBOARD	globals.h	1106;"	d
iQCLIPBOARD_MANAGER	globals.h	1108;"	d
iQCloader	globals.h	1262;"	d
iQClocal	globals.h	1264;"	d
iQClog	globals.h	1266;"	d
iQCloglevel	globals.h	1268;"	d
iQclone_of	globals.h	1706;"	d
iQclose	globals.h	1708;"	d
iQclosed	globals.h	1714;"	d
iQclose_nowrite	globals.h	1710;"	d
iQclose_write	globals.h	1712;"	d
iQclosure	globals.h	1716;"	d
iQcmajflt	globals.h	1718;"	d
iQCmap	globals.h	1270;"	d
iQCmargin	globals.h	1272;"	d
iQCmask	globals.h	1274;"	d
iQCmatrix	globals.h	1276;"	d
iQCmax_height	globals.h	1278;"	d
iQCmax_width	globals.h	1280;"	d
iQCmethod	globals.h	1282;"	d
iQcminflt	globals.h	1720;"	d
iQCmin_prime_bits	globals.h	1284;"	d
iQCmnemonic	globals.h	1286;"	d
iQCname	globals.h	1288;"	d
iQCnoquery	globals.h	1290;"	d
iQCnowait	globals.h	1292;"	d
iQCobject_path	globals.h	1294;"	d
iQcodeset	globals.h	1726;"	d
iQcode_conversion_map	globals.h	1722;"	d
iQcode_conversion_map_id	globals.h	1724;"	d
iQcoding_system_define_form	globals.h	1728;"	d
iQcoding_system_error	globals.h	1730;"	d
iQcoding_system_history	globals.h	1732;"	d
iQcoding_system_p	globals.h	1734;"	d
iQcomm	globals.h	1736;"	d
iQcomma	globals.h	1738;"	d
iQcommandp	globals.h	1748;"	d
iQcommand_debug_status	globals.h	1744;"	d
iQcommand_execute	globals.h	1746;"	d
iQcomma_at	globals.h	1740;"	d
iQcomma_dot	globals.h	1742;"	d
iQcomment_end_can_be_escaped	globals.h	1750;"	d
iQcompiled_function	globals.h	1752;"	d
iQcompletion_ignore_case	globals.h	1754;"	d
iQcomposition	globals.h	1756;"	d
iQCOMPOUND_TEXT	globals.h	1110;"	d
iQcompound_text	globals.h	1758;"	d
iQcondition_variable	globals.h	1760;"	d
iQcondition_variable_p	globals.h	1762;"	d
iQconfig_changed_event	globals.h	1764;"	d
iQconnect	globals.h	1766;"	d
iQcons	globals.h	1768;"	d
iQconses	globals.h	1770;"	d
iQconsp	globals.h	1772;"	d
iQcontinuation	globals.h	1774;"	d
iQcopy_directory	globals.h	1776;"	d
iQcopy_file	globals.h	1778;"	d
iQCotf	globals.h	1296;"	d
iQcount	globals.h	1780;"	d
iQCoverline	globals.h	1298;"	d
iQCparity	globals.h	1300;"	d
iQCplist	globals.h	1302;"	d
iQCpointer	globals.h	1304;"	d
iQCport	globals.h	1306;"	d
iQCpost_read_conversion	globals.h	1308;"	d
iQCpre_write_conversion	globals.h	1310;"	d
iQCpriority	globals.h	1312;"	d
iQCprocess	globals.h	1314;"	d
iQCpropertize	globals.h	1316;"	d
iQCpt_height	globals.h	1318;"	d
iQCpt_width	globals.h	1320;"	d
iQCpurecopy	globals.h	1322;"	d
iQCradio	globals.h	1324;"	d
iQcreate	globals.h	1782;"	d
iQCregistry	globals.h	1326;"	d
iQCrehash_size	globals.h	1328;"	d
iQCrehash_threshold	globals.h	1330;"	d
iQCrelative_height	globals.h	1332;"	d
iQCrelative_width	globals.h	1334;"	d
iQCrelief	globals.h	1336;"	d
iQCremote	globals.h	1338;"	d
iQCreverse_video	globals.h	1340;"	d
iQCrgba	globals.h	1342;"	d
iQCrotation	globals.h	1344;"	d
iQCrtl	globals.h	1346;"	d
iQCscalable	globals.h	1348;"	d
iQCscale	globals.h	1350;"	d
iQCscript	globals.h	1352;"	d
iQCsentinel	globals.h	1354;"	d
iQCserial	globals.h	1356;"	d
iQCserver	globals.h	1358;"	d
iQCservice	globals.h	1360;"	d
iQCsession	globals.h	1362;"	d
iQCsignal	globals.h	1364;"	d
iQCsignature	globals.h	1366;"	d
iQCsize	globals.h	1368;"	d
iQCslant	globals.h	1370;"	d
iQCspacing	globals.h	1372;"	d
iQCspeed	globals.h	1374;"	d
iQCstderr	globals.h	1376;"	d
iQcstime	globals.h	1784;"	d
iQCstipple	globals.h	1378;"	d
iQCstop	globals.h	1380;"	d
iQCstopbits	globals.h	1382;"	d
iQCstrike_through	globals.h	1384;"	d
iQCstring	globals.h	1386;"	d
iQCstruct	globals.h	1388;"	d
iQCstyle	globals.h	1390;"	d
iQCsummary	globals.h	1392;"	d
iQCsystem	globals.h	1394;"	d
iQCtest	globals.h	1396;"	d
iQctime	globals.h	1786;"	d
iQCtimeout	globals.h	1398;"	d
iQCtls_parameters	globals.h	1400;"	d
iQCtoggle	globals.h	1402;"	d
iQctrl	globals.h	1788;"	d
iQCtrustfiles	globals.h	1404;"	d
iQCtype	globals.h	1406;"	d
iQCuint16	globals.h	1408;"	d
iQCuint32	globals.h	1410;"	d
iQCuint64	globals.h	1412;"	d
iQCunderline	globals.h	1414;"	d
iQCunix_fd	globals.h	1416;"	d
iQcurrent_input_method	globals.h	1790;"	d
iQcurrent_line	globals.h	1792;"	d
iQcurrent_load_list	globals.h	1794;"	d
iQcursor	globals.h	1796;"	d
iQcursor_color	globals.h	1798;"	d
iQcursor_in_echo_area	globals.h	1800;"	d
iQcursor_type	globals.h	1802;"	d
iQCuser_spec	globals.h	1420;"	d
iQCuse_external_socket	globals.h	1418;"	d
iQcustom_variable_p	globals.h	1804;"	d
iQcutime	globals.h	1806;"	d
iQCvariant	globals.h	1422;"	d
iQCverify_error	globals.h	1424;"	d
iQCverify_flags	globals.h	1426;"	d
iQCvert_only	globals.h	1428;"	d
iQCvisible	globals.h	1430;"	d
iQCvolume	globals.h	1432;"	d
iQCweakness	globals.h	1434;"	d
iQCweight	globals.h	1436;"	d
iQCwidth	globals.h	1438;"	d
iQcyclic_function_indirection	globals.h	1808;"	d
iQcyclic_variable_indirection	globals.h	1810;"	d
iQd	globals.h	1812;"	d
iQdata	globals.h	1814;"	d
iQdatagram	globals.h	1816;"	d
iQdays	globals.h	1818;"	d
iQdbus_error	globals.h	1820;"	d
iQdbus_event	globals.h	1822;"	d
iQdbus_message_internal	globals.h	1824;"	d
iQdeactivate_mark	globals.h	1826;"	d
iQdebug	globals.h	1828;"	d
iQdebug_on_next_call	globals.h	1830;"	d
iQdecomposed_characters	globals.h	1832;"	d
iQdefalias_fset_function	globals.h	1834;"	d
iQdefault	globals.h	1836;"	d
iQdefault_directory	globals.h	1838;"	d
iQdeferred_action_function	globals.h	1840;"	d
iQdefun	globals.h	1842;"	d
iQdefvaralias	globals.h	1844;"	d
iQdelay	globals.h	1846;"	d
iQdelayed_warnings_hook	globals.h	1848;"	d
iQDELETE	globals.h	1440;"	d
iQdelete	globals.h	1850;"	d
iQdelete_before	globals.h	1852;"	d
iQdelete_by_moving_to_trash	globals.h	1854;"	d
iQdelete_directory	globals.h	1856;"	d
iQdelete_file	globals.h	1858;"	d
iQdelete_frame	globals.h	1860;"	d
iQdelete_frame_functions	globals.h	1862;"	d
iQdelete_self	globals.h	1864;"	d
iQdelete_terminal_functions	globals.h	1866;"	d
iQdelete_window	globals.h	1868;"	d
iQdirectory_files	globals.h	1874;"	d
iQdirectory_files_and_attributes	globals.h	1876;"	d
iQdirectory_file_name	globals.h	1872;"	d
iQdir_ok	globals.h	1870;"	d
iQdisabled	globals.h	1878;"	d
iQdisplay	globals.h	1880;"	d
iQdisplay_buffer	globals.h	1882;"	d
iQdisplay_line_numbers	globals.h	1884;"	d
iQdisplay_line_numbers_disable	globals.h	1886;"	d
iQdisplay_line_numbers_widen	globals.h	1888;"	d
iQdisplay_line_numbers_width	globals.h	1890;"	d
iQdisplay_monitor_attributes_list	globals.h	1892;"	d
iQdisplay_table	globals.h	1894;"	d
iQdisplay_type	globals.h	1896;"	d
iQdomain_error	globals.h	1900;"	d
iQdont_follow	globals.h	1902;"	d
iQdos	globals.h	1904;"	d
iQdown	globals.h	1906;"	d
iQdo_after_load_evaluation	globals.h	1898;"	d
iQdragging	globals.h	1912;"	d
iQdrag_internal_border	globals.h	1908;"	d
iQdrag_n_drop	globals.h	1910;"	d
iQecho_area_clear_hook	globals.h	1914;"	d
iQecho_keystrokes	globals.h	1916;"	d
iQedge_detection	globals.h	1918;"	d
iQegid	globals.h	1920;"	d
iQeight_bit	globals.h	1922;"	d
iQemacs	globals.h	1924;"	d
iQEmacsFrameResize	globals.h	1442;"	d
iQemacs_mule	globals.h	1926;"	d
iQemboss	globals.h	1928;"	d
iQempty_box	globals.h	1930;"	d
iQempty_line	globals.h	1932;"	d
iQenable_recursive_minibuffers	globals.h	1934;"	d
iQend_of_buffer	globals.h	1936;"	d
iQend_of_file	globals.h	1938;"	d
iQend_scroll	globals.h	1940;"	d
iQend_session	globals.h	1942;"	d
iQeq	globals.h	1944;"	d
iQeql	globals.h	1946;"	d
iQequal	globals.h	1948;"	d
iQerror	globals.h	1950;"	d
iQerror_conditions	globals.h	1952;"	d
iQerror_message	globals.h	1954;"	d
iQescape_glyph	globals.h	1956;"	d
iQetime	globals.h	1958;"	d
iQeuid	globals.h	1960;"	d
iQeval	globals.h	1962;"	d
iQeval_buffer_list	globals.h	1964;"	d
iQevaporate	globals.h	1966;"	d
iQeven	globals.h	1968;"	d
iQevent_kind	globals.h	1970;"	d
iQevent_symbol_elements	globals.h	1974;"	d
iQevent_symbol_element_mask	globals.h	1972;"	d
iQexcl	globals.h	1976;"	d
iQexit	globals.h	1978;"	d
iQexpand_abbrev	globals.h	1980;"	d
iQexpand_file_name	globals.h	1982;"	d
iQexplicit	globals.h	1984;"	d
iQexplicit_name	globals.h	1986;"	d
iQextension_data	globals.h	1988;"	d
iQexternal_border_size	globals.h	1990;"	d
iQexternal_debugging_output	globals.h	1992;"	d
iQextra_bold	globals.h	1994;"	d
iQextra_light	globals.h	1996;"	d
iQface	globals.h	1998;"	d
iQface_alias	globals.h	2000;"	d
iQface_no_inherit	globals.h	2002;"	d
iQface_set_after_frame_default	globals.h	2004;"	d
iQfailed	globals.h	2006;"	d
iQfboundp	globals.h	2008;"	d
iQfeatures	globals.h	2010;"	d
iQfield	globals.h	2012;"	d
iQfile_accessible_directory_p	globals.h	2014;"	d
iQfile_acl	globals.h	2016;"	d
iQfile_already_exists	globals.h	2018;"	d
iQfile_attributes	globals.h	2020;"	d
iQfile_attributes_lessp	globals.h	2022;"	d
iQfile_date_error	globals.h	2024;"	d
iQfile_directory_p	globals.h	2026;"	d
iQfile_error	globals.h	2028;"	d
iQfile_executable_p	globals.h	2030;"	d
iQfile_exists_p	globals.h	2032;"	d
iQfile_missing	globals.h	2034;"	d
iQfile_modes	globals.h	2036;"	d
iQfile_name_all_completions	globals.h	2038;"	d
iQfile_name_as_directory	globals.h	2040;"	d
iQfile_name_case_insensitive_p	globals.h	2042;"	d
iQfile_name_completion	globals.h	2044;"	d
iQfile_name_directory	globals.h	2046;"	d
iQfile_name_handler_alist	globals.h	2048;"	d
iQfile_name_history	globals.h	2050;"	d
iQfile_name_nondirectory	globals.h	2052;"	d
iQfile_newer_than_file_p	globals.h	2054;"	d
iQfile_notify	globals.h	2056;"	d
iQfile_notify_error	globals.h	2058;"	d
iQfile_readable_p	globals.h	2060;"	d
iQfile_regular_p	globals.h	2062;"	d
iQfile_selinux_context	globals.h	2064;"	d
iQfile_symlink_p	globals.h	2066;"	d
iQfile_truename	globals.h	2068;"	d
iQfile_writable_p	globals.h	2070;"	d
iQfinalizer	globals.h	2072;"	d
iQfirst_change_hook	globals.h	2074;"	d
iQfloat	globals.h	2076;"	d
iQfloatp	globals.h	2078;"	d
iQfloats	globals.h	2080;"	d
iQfloor	globals.h	2082;"	d
iQfocus_in	globals.h	2084;"	d
iQfocus_out	globals.h	2086;"	d
iQfont	globals.h	2088;"	d
iQfontification_functions	globals.h	2104;"	d
iQfontified	globals.h	2106;"	d
iQfontset	globals.h	2108;"	d
iQfontset_info	globals.h	2110;"	d
iQfont_backend	globals.h	2090;"	d
iQfont_entity	globals.h	2092;"	d
iQfont_name	globals.h	2094;"	d
iQfont_object	globals.h	2096;"	d
iQfont_parameter	globals.h	2098;"	d
iQfont_render	globals.h	2100;"	d
iQfont_spec	globals.h	2102;"	d
iQforeground_color	globals.h	2112;"	d
iQforeign_selection	globals.h	2114;"	d
iQformat	globals.h	2116;"	d
iQformat_annotate_function	globals.h	2118;"	d
iQformat_decode	globals.h	2120;"	d
iQfraction	globals.h	2122;"	d
iQframe	globals.h	2124;"	d
iQframep	globals.h	2138;"	d
iQframes	globals.h	2140;"	d
iQframe_edges	globals.h	2126;"	d
iQframe_inhibit_resize	globals.h	2128;"	d
iQframe_live_p	globals.h	2130;"	d
iQframe_monitor_workarea	globals.h	2132;"	d
iQframe_set_background_mode	globals.h	2134;"	d
iQframe_windows_min_size	globals.h	2136;"	d
iQfreetype	globals.h	2148;"	d
iQfree_frame_menubar_1	globals.h	2142;"	d
iQfree_frame_menubar_2	globals.h	2144;"	d
iQfree_frame_tool_bar	globals.h	2146;"	d
iQfringe	globals.h	2150;"	d
iQfront_sticky	globals.h	2152;"	d
iQftx	globals.h	2154;"	d
iQfullboth	globals.h	2156;"	d
iQfullheight	globals.h	2158;"	d
iQfullscreen	globals.h	2160;"	d
iQfullwidth	globals.h	2162;"	d
iQfuncall	globals.h	2164;"	d
iQfuncall_interactively	globals.h	2166;"	d
iQfunction	globals.h	2168;"	d
iQfunction_documentation	globals.h	2170;"	d
iQfunction_key	globals.h	2172;"	d
iQfundamental_mode	globals.h	2174;"	d
iQgc_cons_threshold	globals.h	2176;"	d
iQgdk_pixbuf	globals.h	2178;"	d
iQgeometry	globals.h	2180;"	d
iQget_buffer_window_list	globals.h	2182;"	d
iQget_emacs_mule_file_char	globals.h	2184;"	d
iQget_file_buffer	globals.h	2186;"	d
iQget_file_char	globals.h	2188;"	d
iQget_mru_window	globals.h	2190;"	d
iQgif	globals.h	2192;"	d
iQglib	globals.h	2194;"	d
iQglyphless_char	globals.h	2196;"	d
iQglyphless_char_display	globals.h	2198;"	d
iQgnutls_anon	globals.h	2200;"	d
iQgnutls_code	globals.h	2202;"	d
iQgnutls_e_again	globals.h	2204;"	d
iQgnutls_e_interrupted	globals.h	2206;"	d
iQgnutls_e_invalid_session	globals.h	2208;"	d
iQgnutls_e_not_ready_for_handshake	globals.h	2210;"	d
iQgnutls_x509pki	globals.h	2212;"	d
iQgobject	globals.h	2214;"	d
iQgrave	globals.h	2216;"	d
iQgroup	globals.h	2218;"	d
iQgrow_only	globals.h	2220;"	d
iQgui_set_selection	globals.h	2222;"	d
iQhand	globals.h	2224;"	d
iQhandle	globals.h	2226;"	d
iQhandle_select_window	globals.h	2228;"	d
iQhandle_shift_selection	globals.h	2230;"	d
iQhandle_switch_frame	globals.h	2232;"	d
iQhash_table	globals.h	2234;"	d
iQhash_table_p	globals.h	2236;"	d
iQhash_table_test	globals.h	2238;"	d
iQhbar	globals.h	2240;"	d
iQheader_line	globals.h	2242;"	d
iQheader_line_format	globals.h	2244;"	d
iQheap	globals.h	2246;"	d
iQheight	globals.h	2248;"	d
iQheight_only	globals.h	2250;"	d
iQhelp_echo	globals.h	2252;"	d
iQhelp_form_show	globals.h	2254;"	d
iQheuristic	globals.h	2256;"	d
iQhex_code	globals.h	2258;"	d
iQhistory_length	globals.h	2260;"	d
iQhollow	globals.h	2262;"	d
iQhollow_small	globals.h	2264;"	d
iQhorizontal_handle	globals.h	2266;"	d
iQhorizontal_scroll_bar	globals.h	2268;"	d
iQhorizontal_scroll_bars	globals.h	2270;"	d
iQhw	globals.h	2272;"	d
iQhyper	globals.h	2274;"	d
iQicon	globals.h	2276;"	d
iQiconify_frame	globals.h	2286;"	d
iQicon_left	globals.h	2278;"	d
iQicon_name	globals.h	2280;"	d
iQicon_top	globals.h	2282;"	d
iQicon_type	globals.h	2284;"	d
iQidentity	globals.h	2288;"	d
iQif	globals.h	2290;"	d
iQignored	globals.h	2292;"	d
iQimage	globals.h	2294;"	d
iQimagemagick	globals.h	2296;"	d
iQINCR	globals.h	1444;"	d
iQinhibit_changing_match_data	globals.h	2298;"	d
iQinhibit_debugger	globals.h	2300;"	d
iQinhibit_double_buffering	globals.h	2302;"	d
iQinhibit_eval_during_redisplay	globals.h	2304;"	d
iQinhibit_file_name_operation	globals.h	2306;"	d
iQinhibit_free_realized_faces	globals.h	2308;"	d
iQinhibit_menubar_update	globals.h	2310;"	d
iQinhibit_modification_hooks	globals.h	2312;"	d
iQinhibit_point_motion_hooks	globals.h	2314;"	d
iQinhibit_quit	globals.h	2316;"	d
iQinhibit_read_only	globals.h	2318;"	d
iQinhibit_redisplay	globals.h	2320;"	d
iQinner_edges	globals.h	2322;"	d
iQinput_method_exit_on_first_char	globals.h	2324;"	d
iQinput_method_use_echo_area	globals.h	2326;"	d
iQinsert_behind_hooks	globals.h	2328;"	d
iQinsert_file_contents	globals.h	2330;"	d
iQinsert_in_front_hooks	globals.h	2332;"	d
iQinsufficient_source	globals.h	2334;"	d
iQintangible	globals.h	2336;"	d
iQINTEGER	globals.h	1446;"	d
iQinteger	globals.h	2338;"	d
iQintegerp	globals.h	2342;"	d
iQinteger_or_marker_p	globals.h	2340;"	d
iQinteractive	globals.h	2344;"	d
iQinteractive_form	globals.h	2346;"	d
iQinternal_border	globals.h	2350;"	d
iQinternal_border_width	globals.h	2352;"	d
iQinternal_default_process_filter	globals.h	2354;"	d
iQinternal_default_process_sentinel	globals.h	2356;"	d
iQinternal_echo_keystrokes_prefix	globals.h	2358;"	d
iQinternal_interpreter_environment	globals.h	2360;"	d
iQinternal__syntax_propertize	globals.h	2348;"	d
iQinterrupted	globals.h	2362;"	d
iQintervals	globals.h	2364;"	d
iQinvalid_function	globals.h	2366;"	d
iQinvalid_read_syntax	globals.h	2368;"	d
iQinvalid_regexp	globals.h	2370;"	d
iQinvalid_source	globals.h	2372;"	d
iQinvisible	globals.h	2374;"	d
iQipv4	globals.h	2376;"	d
iQipv6	globals.h	2378;"	d
iQisdir	globals.h	2380;"	d
iQiso10646_1	globals.h	2382;"	d
iQiso8859_1	globals.h	2384;"	d
iQiso_2022	globals.h	2386;"	d
iQiso_8859_1	globals.h	2388;"	d
iQitalic	globals.h	2390;"	d
iQja	globals.h	2392;"	d
iQjpeg	globals.h	2394;"	d
iQkbd_macro_termination_hook	globals.h	2396;"	d
iQkeep_ratio	globals.h	2398;"	d
iQkey	globals.h	2400;"	d
iQkeymap	globals.h	2406;"	d
iQkeymapp	globals.h	2410;"	d
iQkeymap_canonicalize	globals.h	2408;"	d
iQkey_and_value	globals.h	2402;"	d
iQkey_or_value	globals.h	2404;"	d
iQkill_buffer_hook	globals.h	2412;"	d
iQkill_buffer_query_functions	globals.h	2414;"	d
iQkill_emacs	globals.h	2416;"	d
iQkill_emacs_hook	globals.h	2418;"	d
iQkill_forward_chars	globals.h	2420;"	d
iQko	globals.h	2422;"	d
iQlambda	globals.h	2424;"	d
iQlandscape	globals.h	2426;"	d
iQlanguage_change	globals.h	2428;"	d
iQlaplace	globals.h	2430;"	d
iQlast_arrow_position	globals.h	2432;"	d
iQlast_arrow_string	globals.h	2434;"	d
iQlast_nonmenu_event	globals.h	2436;"	d
iQlatin	globals.h	2438;"	d
iQlatin_1	globals.h	2440;"	d
iQleft	globals.h	2442;"	d
iQleftmost	globals.h	2454;"	d
iQleft_edge	globals.h	2444;"	d
iQleft_fringe	globals.h	2446;"	d
iQleft_margin	globals.h	2448;"	d
iQleft_only	globals.h	2450;"	d
iQleft_to_right	globals.h	2452;"	d
iQlet	globals.h	2456;"	d
iQletx	globals.h	2458;"	d
iQlexical_binding	globals.h	2460;"	d
iQlibgif_version	globals.h	2462;"	d
iQlibgnutls_version	globals.h	2464;"	d
iQlibjpeg_version	globals.h	2466;"	d
iQlibpng_version	globals.h	2468;"	d
iQlight	globals.h	2470;"	d
iQline	globals.h	2472;"	d
iQline_height	globals.h	2474;"	d
iQline_number	globals.h	2476;"	d
iQline_number_current_line	globals.h	2478;"	d
iQline_prefix	globals.h	2480;"	d
iQline_spacing	globals.h	2482;"	d
iQlist	globals.h	2484;"	d
iQlisten	globals.h	2486;"	d
iQlistp	globals.h	2488;"	d
iQlittle	globals.h	2490;"	d
iQload	globals.h	2492;"	d
iQload_file_name	globals.h	2494;"	d
iQload_force_doc_strings	globals.h	2496;"	d
iQload_in_progress	globals.h	2498;"	d
iQlocal	globals.h	2500;"	d
iQlocal_map	globals.h	2502;"	d
iQlread_old_style_backquotes	globals.h	2504;"	d
iQlread_unescaped_character_literals	globals.h	2506;"	d
iQlss	globals.h	2508;"	d
iQm	globals.h	2510;"	d
iQmac	globals.h	2512;"	d
iQmacro	globals.h	2514;"	d
iQmajflt	globals.h	2516;"	d
iQmake_directory	globals.h	2518;"	d
iQmake_directory_internal	globals.h	2520;"	d
iQmake_frame_visible	globals.h	2522;"	d
iQmake_symbolic_link	globals.h	2524;"	d
iQmakunbound	globals.h	2526;"	d
iQmany	globals.h	2528;"	d
iQmargin	globals.h	2530;"	d
iQmarker	globals.h	2536;"	d
iQmarkerp	globals.h	2538;"	d
iQmark_for_redisplay	globals.h	2532;"	d
iQmark_inactive	globals.h	2534;"	d
iQmaximized	globals.h	2540;"	d
iQmd5	globals.h	2542;"	d
iQmenu	globals.h	2544;"	d
iQmenu_bar	globals.h	2546;"	d
iQmenu_bar_external	globals.h	2548;"	d
iQmenu_bar_lines	globals.h	2550;"	d
iQmenu_bar_size	globals.h	2552;"	d
iQmenu_bar_update_hook	globals.h	2554;"	d
iQmenu_enable	globals.h	2556;"	d
iQmenu_item	globals.h	2558;"	d
iQmeta	globals.h	2560;"	d
iQmetadata	globals.h	2562;"	d
iQminflt	globals.h	2568;"	d
iQminibuffer	globals.h	2570;"	d
iQminibuffer_completion_table	globals.h	2572;"	d
iQminibuffer_default	globals.h	2574;"	d
iQminibuffer_exit	globals.h	2576;"	d
iQminibuffer_exit_hook	globals.h	2578;"	d
iQminibuffer_history	globals.h	2580;"	d
iQminibuffer_prompt	globals.h	2582;"	d
iQminibuffer_setup_hook	globals.h	2584;"	d
iQminus	globals.h	2586;"	d
iQmin_height	globals.h	2564;"	d
iQmin_width	globals.h	2566;"	d
iQmiscs	globals.h	2588;"	d
iQmm_size	globals.h	2590;"	d
iQmodeline	globals.h	2602;"	d
iQmode_class	globals.h	2592;"	d
iQmode_line	globals.h	2594;"	d
iQmode_line_default_help_echo	globals.h	2596;"	d
iQmode_line_format	globals.h	2598;"	d
iQmode_line_inactive	globals.h	2600;"	d
iQmodification_hooks	globals.h	2604;"	d
iQmodifier_cache	globals.h	2606;"	d
iQmodifier_value	globals.h	2608;"	d
iQmodify	globals.h	2610;"	d
iQmodule_function	globals.h	2612;"	d
iQmono	globals.h	2614;"	d
iQmonospace	globals.h	2616;"	d
iQmonospace_font_name	globals.h	2618;"	d
iQmonths	globals.h	2620;"	d
iQmouse	globals.h	2622;"	d
iQmouse_click	globals.h	2624;"	d
iQmouse_color	globals.h	2626;"	d
iQmouse_face	globals.h	2628;"	d
iQmouse_fixup_help_message	globals.h	2630;"	d
iQmouse_leave_buffer_hook	globals.h	2632;"	d
iQmouse_movement	globals.h	2634;"	d
iQmouse_wheel_frame	globals.h	2636;"	d
iQmove	globals.h	2638;"	d
iQmoved_from	globals.h	2646;"	d
iQmoved_to	globals.h	2648;"	d
iQmove_file_to_trash	globals.h	2640;"	d
iQmove_frame	globals.h	2642;"	d
iQmove_self	globals.h	2644;"	d
iQMULTIPLE	globals.h	1448;"	d
iQmutex	globals.h	2650;"	d
iQmutexp	globals.h	2652;"	d
iQname	globals.h	2654;"	d
iQnative_edges	globals.h	2656;"	d
iQnatnump	globals.h	2658;"	d
iQnetwork	globals.h	2660;"	d
iQnice	globals.h	2662;"	d
iQnil	globals.h	1100;"	d
iQnobreak_hyphen	globals.h	2676;"	d
iQnobreak_space	globals.h	2678;"	d
iQnoelisp	globals.h	2680;"	d
iQnone	globals.h	2684;"	d
iQnon_ascii	globals.h	2682;"	d
iQnormal	globals.h	2686;"	d
iQno_accept_focus	globals.h	2664;"	d
iQno_catch	globals.h	2666;"	d
iQno_conversion	globals.h	2668;"	d
iQno_focus_on_map	globals.h	2670;"	d
iQno_other_frame	globals.h	2672;"	d
iQno_special_glyphs	globals.h	2674;"	d
iQns	globals.h	2688;"	d
iQnsm_verify_connection	globals.h	2692;"	d
iQns_parse_geometry	globals.h	2690;"	d
iQNULL	globals.h	1450;"	d
iQnumberp	globals.h	2696;"	d
iQnumber_or_marker_p	globals.h	2694;"	d
iQobject	globals.h	2698;"	d
iQoblique	globals.h	2700;"	d
iQodd	globals.h	2702;"	d
iQonly	globals.h	2704;"	d
iQonlydir	globals.h	2706;"	d
iQopen	globals.h	2708;"	d
iQopentype	globals.h	2712;"	d
iQopen_network_stream	globals.h	2710;"	d
iQoperations	globals.h	2714;"	d
iQorientation	globals.h	2716;"	d
iQouter_border_width	globals.h	2718;"	d
iQouter_edges	globals.h	2720;"	d
iQouter_position	globals.h	2722;"	d
iQouter_size	globals.h	2724;"	d
iQouter_window_id	globals.h	2726;"	d
iQoverflow_error	globals.h	2728;"	d
iQoverlay	globals.h	2730;"	d
iQoverlayp	globals.h	2738;"	d
iQoverlay_arrow	globals.h	2732;"	d
iQoverlay_arrow_bitmap	globals.h	2734;"	d
iQoverlay_arrow_string	globals.h	2736;"	d
iQoverride_redirect	globals.h	2740;"	d
iQoverriding_local_map	globals.h	2742;"	d
iQoverriding_terminal_local_map	globals.h	2744;"	d
iQoverwrite_mode	globals.h	2746;"	d
iQoverwrite_mode_binary	globals.h	2748;"	d
iQp	globals.h	2750;"	d
iQpaper	globals.h	2752;"	d
iQparent_frame	globals.h	2754;"	d
iQparent_id	globals.h	2756;"	d
iQpbm	globals.h	2758;"	d
iQpc	globals.h	2760;"	d
iQpcpu	globals.h	2762;"	d
iQpdf	globals.h	2764;"	d
iQpermanent_local	globals.h	2766;"	d
iQpermanent_local_hook	globals.h	2768;"	d
iQpgrp	globals.h	2770;"	d
iQpipe	globals.h	2772;"	d
iQplay_sound_functions	globals.h	2774;"	d
iQplus	globals.h	2776;"	d
iQpmem	globals.h	2778;"	d
iQpng	globals.h	2780;"	d
iQpointer	globals.h	2786;"	d
iQpoint_entered	globals.h	2782;"	d
iQpoint_left	globals.h	2784;"	d
iQpolling_period	globals.h	2788;"	d
iQpoly	globals.h	2790;"	d
iQportrait	globals.h	2792;"	d
iQposition	globals.h	2794;"	d
iQpostscript	globals.h	2802;"	d
iQpost_command_hook	globals.h	2796;"	d
iQpost_gc_hook	globals.h	2798;"	d
iQpost_self_insert_hook	globals.h	2800;"	d
iQppid	globals.h	2804;"	d
iQpressed_button	globals.h	2808;"	d
iQpre_command_hook	globals.h	2806;"	d
iQpri	globals.h	2810;"	d
iQPRIMARY	globals.h	1452;"	d
iQprint_escape_control_characters	globals.h	2812;"	d
iQprint_escape_multibyte	globals.h	2814;"	d
iQprint_escape_newlines	globals.h	2816;"	d
iQprint_escape_nonascii	globals.h	2818;"	d
iQpriority	globals.h	2820;"	d
iQprocess	globals.h	2822;"	d
iQprocessp	globals.h	2824;"	d
iQprofiler_backtrace_equal	globals.h	2826;"	d
iQprogn	globals.h	2828;"	d
iQprotected_field	globals.h	2830;"	d
iQprovide	globals.h	2832;"	d
iQpty	globals.h	2834;"	d
iQpurecopy	globals.h	2836;"	d
iQquit	globals.h	2840;"	d
iQquote	globals.h	2842;"	d
iQq_overflow	globals.h	2838;"	d
iQraise	globals.h	2844;"	d
iQrange	globals.h	2846;"	d
iQrange_error	globals.h	2848;"	d
iQratio	globals.h	2850;"	d
iQraw_text	globals.h	2852;"	d
iQread	globals.h	2854;"	d
iQread_char	globals.h	2856;"	d
iQread_number	globals.h	2858;"	d
iQread_only	globals.h	2860;"	d
iQreal	globals.h	2862;"	d
iQrear_nonsticky	globals.h	2864;"	d
iQrecompute_lucid_menubar	globals.h	2866;"	d
iQrecord	globals.h	2868;"	d
iQrecordp	globals.h	2872;"	d
iQrecord_window_buffer	globals.h	2870;"	d
iQrect	globals.h	2874;"	d
iQredisplay_dont_pause	globals.h	2876;"	d
iQredisplay_end_trigger_functions	globals.h	2878;"	d
iQredisplay_internal_xC_functionx	globals.h	2880;"	d
iQregion_extract_function	globals.h	2882;"	d
iQrehash_size	globals.h	2884;"	d
iQrehash_threshold	globals.h	2886;"	d
iQrelative	globals.h	2888;"	d
iQreleased_button	globals.h	2890;"	d
iQremap	globals.h	2892;"	d
iQrename_file	globals.h	2894;"	d
iQreplace_buffer_in_windows	globals.h	2896;"	d
iQrequire	globals.h	2898;"	d
iQreverse_landscape	globals.h	2900;"	d
iQreverse_portrait	globals.h	2902;"	d
iQright	globals.h	2904;"	d
iQrightmost	globals.h	2918;"	d
iQright_divider	globals.h	2906;"	d
iQright_divider_width	globals.h	2908;"	d
iQright_edge	globals.h	2910;"	d
iQright_fringe	globals.h	2912;"	d
iQright_margin	globals.h	2914;"	d
iQright_to_left	globals.h	2916;"	d
iQrisky_local_variable	globals.h	2920;"	d
iQrss	globals.h	2922;"	d
iQrun	globals.h	2924;"	d
iQrun_hook_with_args	globals.h	2926;"	d
iQsafe	globals.h	2928;"	d
iQsans	globals.h	2930;"	d
iQsans_serif	globals.h	2934;"	d
iQsans__serif	globals.h	2932;"	d
iQsave_excursion	globals.h	2936;"	d
iQsave_session	globals.h	2938;"	d
iQSAVE_TARGETS	globals.h	1454;"	d
iQscan_error	globals.h	2940;"	d
iQscreen_gamma	globals.h	2942;"	d
iQscroll_bar	globals.h	2944;"	d
iQscroll_bar_background	globals.h	2946;"	d
iQscroll_bar_foreground	globals.h	2948;"	d
iQscroll_bar_height	globals.h	2950;"	d
iQscroll_bar_movement	globals.h	2952;"	d
iQscroll_bar_width	globals.h	2954;"	d
iQscroll_command	globals.h	2956;"	d
iQscroll_down	globals.h	2958;"	d
iQscroll_up	globals.h	2960;"	d
iQsearch_failed	globals.h	2962;"	d
iQSECONDARY	globals.h	1456;"	d
iQselection_request	globals.h	2966;"	d
iQselect_window	globals.h	2964;"	d
iQsemi_bold	globals.h	2968;"	d
iQsemi_light	globals.h	2970;"	d
iQseqpacket	globals.h	2972;"	d
iQsequencep	globals.h	2974;"	d
iQserial	globals.h	2976;"	d
iQsess	globals.h	2978;"	d
iQset	globals.h	2980;"	d
iQsetq	globals.h	2998;"	d
iQsetting_constant	globals.h	3000;"	d
iQset_default	globals.h	2982;"	d
iQset_file_acl	globals.h	2984;"	d
iQset_file_modes	globals.h	2986;"	d
iQset_file_selinux_context	globals.h	2988;"	d
iQset_file_times	globals.h	2990;"	d
iQset_frame_size	globals.h	2992;"	d
iQset_visited_file_modtime	globals.h	2994;"	d
iQset_window_configuration	globals.h	2996;"	d
iQsha1	globals.h	3002;"	d
iQsha224	globals.h	3004;"	d
iQsha256	globals.h	3006;"	d
iQsha384	globals.h	3008;"	d
iQsha512	globals.h	3010;"	d
iQshift_jis	globals.h	3012;"	d
iQsignal	globals.h	3014;"	d
iQsingularity_error	globals.h	3016;"	d
iQsize	globals.h	3018;"	d
iQskip_taskbar	globals.h	3020;"	d
iQslice	globals.h	3022;"	d
iQsound	globals.h	3024;"	d
iQsource	globals.h	3026;"	d
iQspace	globals.h	3028;"	d
iQspace_width	globals.h	3030;"	d
iQspecial_lowercase	globals.h	3032;"	d
iQspecial_titlecase	globals.h	3034;"	d
iQspecial_uppercase	globals.h	3036;"	d
iQstandard_input	globals.h	3038;"	d
iQstandard_output	globals.h	3040;"	d
iQstart	globals.h	3042;"	d
iQstart_process	globals.h	3044;"	d
iQstate	globals.h	3046;"	d
iQstderr	globals.h	3048;"	d
iQstdin	globals.h	3050;"	d
iQstdout	globals.h	3052;"	d
iQsticky	globals.h	3054;"	d
iQstime	globals.h	3056;"	d
iQstop	globals.h	3058;"	d
iQstraight	globals.h	3060;"	d
iQSTRING	globals.h	1458;"	d
iQstring	globals.h	3062;"	d
iQstringp	globals.h	3068;"	d
iQstrings	globals.h	3070;"	d
iQstring_bytes	globals.h	3064;"	d
iQstring_lessp	globals.h	3066;"	d
iQsubfeatures	globals.h	3072;"	d
iQsubr	globals.h	3074;"	d
iQsubrp	globals.h	3076;"	d
iQsubstitute_env_in_file_name	globals.h	3078;"	d
iQsubstitute_in_file_name	globals.h	3080;"	d
iQsuper	globals.h	3082;"	d
iQsvg	globals.h	3084;"	d
iQsw	globals.h	3086;"	d
iQswitch_frame	globals.h	3088;"	d
iQsymbol	globals.h	3090;"	d
iQsymbolp	globals.h	3092;"	d
iQsymbols	globals.h	3094;"	d
iQsyntax_table	globals.h	3096;"	d
iQsyntax_table_p	globals.h	3098;"	d
iQt	globals.h	3100;"	d
iQTARGETS	globals.h	1460;"	d
iQtarget_idx	globals.h	3102;"	d
iQtb_size_cb	globals.h	3104;"	d
iQtemp_buffer_setup_hook	globals.h	3106;"	d
iQtemp_buffer_show_hook	globals.h	3108;"	d
iQterminal	globals.h	3110;"	d
iQterminal_frame	globals.h	3112;"	d
iQterminal_live_p	globals.h	3114;"	d
iQtest	globals.h	3116;"	d
iQTEXT	globals.h	1462;"	d
iQtext	globals.h	3118;"	d
iQtext_image_horiz	globals.h	3120;"	d
iQtext_pixels	globals.h	3122;"	d
iQtext_read_only	globals.h	3124;"	d
iQthcount	globals.h	3126;"	d
iQthin_space	globals.h	3128;"	d
iQthread	globals.h	3130;"	d
iQthreadp	globals.h	3132;"	d
iQtiff	globals.h	3134;"	d
iQtime	globals.h	3136;"	d
iQtimer_event_handler	globals.h	3138;"	d
iQTIMESTAMP	globals.h	1464;"	d
iQtitle	globals.h	3140;"	d
iQtitlecase	globals.h	3144;"	d
iQtitle_bar_size	globals.h	3142;"	d
iQtooltip	globals.h	3158;"	d
iQtool_bar	globals.h	3146;"	d
iQtool_bar_external	globals.h	3148;"	d
iQtool_bar_lines	globals.h	3150;"	d
iQtool_bar_position	globals.h	3152;"	d
iQtool_bar_size	globals.h	3154;"	d
iQtool_bar_style	globals.h	3156;"	d
iQtop	globals.h	3160;"	d
iQtop_bottom	globals.h	3162;"	d
iQtop_edge	globals.h	3164;"	d
iQtop_left_corner	globals.h	3166;"	d
iQtop_level	globals.h	3168;"	d
iQtop_margin	globals.h	3170;"	d
iQtop_only	globals.h	3172;"	d
iQtop_right_corner	globals.h	3174;"	d
iQtpgid	globals.h	3176;"	d
iQtrailing_whitespace	globals.h	3178;"	d
iQtranslation_table	globals.h	3180;"	d
iQtranslation_table_id	globals.h	3182;"	d
iQtrapping_constant	globals.h	3184;"	d
iQtruncation	globals.h	3186;"	d
iQttname	globals.h	3188;"	d
iQtty	globals.h	3190;"	d
iQtty_color_alist	globals.h	3192;"	d
iQtty_color_by_index	globals.h	3194;"	d
iQtty_color_desc	globals.h	3196;"	d
iQtty_color_mode	globals.h	3198;"	d
iQtty_color_standard_values	globals.h	3200;"	d
iQtty_menu_exit	globals.h	3202;"	d
iQtty_menu_ignore	globals.h	3204;"	d
iQtty_menu_mouse_movement	globals.h	3206;"	d
iQtty_menu_navigation_map	globals.h	3208;"	d
iQtty_menu_next_item	globals.h	3210;"	d
iQtty_menu_next_menu	globals.h	3212;"	d
iQtty_menu_prev_item	globals.h	3214;"	d
iQtty_menu_prev_menu	globals.h	3216;"	d
iQtty_menu_select	globals.h	3218;"	d
iQtty_mode_reset_strings	globals.h	3220;"	d
iQtty_mode_set_strings	globals.h	3222;"	d
iQtty_type	globals.h	3224;"	d
iQultra_bold	globals.h	3226;"	d
iQunbound	globals.h	3228;"	d
iQundecided	globals.h	3230;"	d
iQundecorated	globals.h	3232;"	d
iQundefined	globals.h	3234;"	d
iQundefined_color	globals.h	3236;"	d
iQunderflow_error	globals.h	3238;"	d
iQundo_auto_amalgamate	globals.h	3250;"	d
iQundo_auto__add_boundary	globals.h	3240;"	d
iQundo_auto__last_boundary_cause	globals.h	3242;"	d
iQundo_auto__this_command_amalgamating	globals.h	3244;"	d
iQundo_auto__undoable_change	globals.h	3246;"	d
iQundo_auto__undoably_changed_buffers	globals.h	3248;"	d
iQunevalled	globals.h	3252;"	d
iQunhandled_file_name_directory	globals.h	3254;"	d
iQunicode	globals.h	3256;"	d
iQunicode_bmp	globals.h	3258;"	d
iQunix	globals.h	3260;"	d
iQunlet	globals.h	3262;"	d
iQunmount	globals.h	3264;"	d
iQunspecified	globals.h	3266;"	d
iQunsplittable	globals.h	3268;"	d
iQup	globals.h	3270;"	d
iQupdate_frame_menubar	globals.h	3272;"	d
iQupdate_frame_tool_bar	globals.h	3274;"	d
iQuser	globals.h	3276;"	d
iQuser_error	globals.h	3278;"	d
iQuser_position	globals.h	3280;"	d
iQuser_ptr	globals.h	3282;"	d
iQuser_ptrp	globals.h	3284;"	d
iQuser_search_failed	globals.h	3286;"	d
iQuser_size	globals.h	3288;"	d
iQUTF8_STRING	globals.h	1466;"	d
iQutf_16	globals.h	3290;"	d
iQutf_16le	globals.h	3292;"	d
iQutf_8	globals.h	3294;"	d
iQutf_8_emacs	globals.h	3296;"	d
iQutime	globals.h	3298;"	d
iQvalue	globals.h	3300;"	d
iQvariable_documentation	globals.h	3302;"	d
iQvector	globals.h	3304;"	d
iQvectorp	globals.h	3310;"	d
iQvectors	globals.h	3312;"	d
iQvector_or_char_table_p	globals.h	3306;"	d
iQvector_slots	globals.h	3308;"	d
iQvendor_specific_keysyms	globals.h	3314;"	d
iQverify_visited_file_modtime	globals.h	3316;"	d
iQvertical_border	globals.h	3318;"	d
iQvertical_line	globals.h	3320;"	d
iQvertical_scroll_bar	globals.h	3322;"	d
iQvertical_scroll_bars	globals.h	3324;"	d
iQvisibility	globals.h	3326;"	d
iQvisible	globals.h	3328;"	d
iQvisual	globals.h	3330;"	d
iQvoid_function	globals.h	3332;"	d
iQvoid_variable	globals.h	3334;"	d
iQvsize	globals.h	3336;"	d
iQw32	globals.h	3338;"	d
iQwait_for_wm	globals.h	3340;"	d
iQwall	globals.h	3342;"	d
iQwatchers	globals.h	3344;"	d
iQwave	globals.h	3346;"	d
iQweakness	globals.h	3348;"	d
iQwhen	globals.h	3350;"	d
iQwholenump	globals.h	3352;"	d
iQwidget_type	globals.h	3354;"	d
iQwidth	globals.h	3356;"	d
iQwidth_only	globals.h	3358;"	d
iQwindow	globals.h	3360;"	d
iQwindowp	globals.h	3396;"	d
iQwindow_configuration	globals.h	3370;"	d
iQwindow_configuration_change_hook	globals.h	3372;"	d
iQwindow_configuration_p	globals.h	3374;"	d
iQwindow_deletable_p	globals.h	3376;"	d
iQwindow_divider	globals.h	3378;"	d
iQwindow_divider_first_pixel	globals.h	3380;"	d
iQwindow_divider_last_pixel	globals.h	3382;"	d
iQwindow_id	globals.h	3384;"	d
iQwindow_live_p	globals.h	3386;"	d
iQwindow_point_insertion_type	globals.h	3388;"	d
iQwindow_scroll_functions	globals.h	3390;"	d
iQwindow_size	globals.h	3392;"	d
iQwindow_valid_p	globals.h	3394;"	d
iQwindow__pixel_to_total	globals.h	3362;"	d
iQwindow__resize_root_window	globals.h	3364;"	d
iQwindow__resize_root_window_vertically	globals.h	3366;"	d
iQwindow__sanitize_window_sizes	globals.h	3368;"	d
iQworkarea	globals.h	3398;"	d
iQwrap_prefix	globals.h	3400;"	d
iQwrite_region	globals.h	3402;"	d
iQwrite_region_annotate_functions	globals.h	3404;"	d
iQwrong_length_argument	globals.h	3406;"	d
iQwrong_number_of_arguments	globals.h	3408;"	d
iQwrong_type_argument	globals.h	3410;"	d
iQx	globals.h	3412;"	d
iQxbm	globals.h	3446;"	d
iQxft	globals.h	3448;"	d
iQxg_change_toolbar_position	globals.h	3450;"	d
iQxg_frame_resized	globals.h	3452;"	d
iQxg_frame_set_char_size	globals.h	3454;"	d
iQxg_frame_set_char_size_1	globals.h	3456;"	d
iQxg_frame_set_char_size_2	globals.h	3458;"	d
iQxg_frame_set_char_size_3	globals.h	3460;"	d
iQxpm	globals.h	3462;"	d
iQxwidget_event	globals.h	3464;"	d
iQx_check_fullscreen	globals.h	3414;"	d
iQx_create_frame_1	globals.h	3416;"	d
iQx_create_frame_2	globals.h	3418;"	d
iQx_frame_parameter	globals.h	3420;"	d
iQx_gtk_map_stock	globals.h	3422;"	d
iQx_handle_net_wm_state	globals.h	3424;"	d
iQx_lost_selection_functions	globals.h	3426;"	d
iQx_net_wm_state	globals.h	3428;"	d
iQx_resource_name	globals.h	3430;"	d
iQx_sent_selection_functions	globals.h	3432;"	d
iQx_set_frame_parameters	globals.h	3434;"	d
iQx_set_fullscreen	globals.h	3436;"	d
iQx_set_menu_bar_lines	globals.h	3438;"	d
iQx_set_window_size_1	globals.h	3440;"	d
iQx_set_window_size_2	globals.h	3442;"	d
iQx_set_window_size_3	globals.h	3444;"	d
iQyes_or_no_p_history	globals.h	3466;"	d
iQzero_width	globals.h	3470;"	d
iQz_group	globals.h	3468;"	d
iQ_EMACS_TMP_	globals.h	1468;"	d
ISALNUM	regex.c	325;"	d	file:
ISALNUM	regex.c	374;"	d	file:
ISALPHA	regex.c	331;"	d	file:
ISALPHA	regex.c	375;"	d	file:
ISBLANK	regex.c	313;"	d	file:
ISBLANK	regex.c	360;"	d	file:
ISBLANK	regex.c	362;"	d	file:
ISCNTRL	regex.c	308;"	d	file:
ISCNTRL	regex.c	376;"	d	file:
IsDebuggerPresent_Proc	w32fns.c	/^typedef BOOL (WINAPI *IsDebuggerPresent_Proc) (void);$/;"	t	file:
ISDIGIT	regex.c	307;"	d	file:
ISDIGIT	regex.c	373;"	d	file:
ISGRAPH	regex.c	317;"	d	file:
ISGRAPH	regex.c	365;"	d	file:
ISGRAPH	regex.c	367;"	d	file:
ISLOWER	regex.c	336;"	d	file:
ISLOWER	regex.c	377;"	d	file:
isnan	data.c	2246;"	d	file:
isolate_level	dispextern.h	/^  signed char isolate_level;	\/* count of isolate initiators unmatched by PDI *\/$/;"	m	struct:bidi_it	access:public
ISOLATE_STATUS	bidi.c	435;"	d	file:
ISO_0x20_or_0x7F	coding.c	/^    ISO_0x20_or_0x7F,		\/* Codes of the values 0x20 or 0x7F.  *\/$/;"	e	enum:iso_code_class_type	file:
ISO_0xA0_or_0xFF	coding.c	/^    ISO_0xA0_or_0xFF,		\/* Codes of the values 0xA0 or 0xFF.  *\/$/;"	e	enum:iso_code_class_type	file:
iso_2022	coding.h	/^      struct iso_2022_spec iso_2022;$/;"	m	union:coding_system::__anon152	typeref:struct:coding_system::__anon152::iso_2022_spec	access:public
iso_2022_spec	coding.h	/^struct iso_2022_spec$/;"	s
iso_2022_spec::bol	coding.h	/^  bool_bf bol : 1;$/;"	m	struct:iso_2022_spec	access:public
iso_2022_spec::cmp_status	coding.h	/^  struct composition_status cmp_status;$/;"	m	struct:iso_2022_spec	typeref:struct:iso_2022_spec::composition_status	access:public
iso_2022_spec::ctext_extended_segment_len	coding.h	/^  int ctext_extended_segment_len;$/;"	m	struct:iso_2022_spec	access:public
iso_2022_spec::current_designation	coding.h	/^  int current_designation[4];$/;"	m	struct:iso_2022_spec	access:public
iso_2022_spec::current_invocation	coding.h	/^  int current_invocation[2];$/;"	m	struct:iso_2022_spec	access:public
iso_2022_spec::embedded_utf_8	coding.h	/^  bool_bf embedded_utf_8 : 1;$/;"	m	struct:iso_2022_spec	access:public
iso_2022_spec::flags	coding.h	/^  unsigned flags;$/;"	m	struct:iso_2022_spec	access:public
iso_2022_spec::single_shifting	coding.h	/^  bool_bf single_shifting : 1;$/;"	m	struct:iso_2022_spec	access:public
iso_charset_table	charset.c	/^int iso_charset_table[ISO_MAX_DIMENSION][ISO_MAX_CHARS][ISO_MAX_FINAL];$/;"	v
ISO_CHARSET_TABLE	charset.h	477;"	d
iso_chars_96	charset.h	/^  bool_bf iso_chars_96 : 1;$/;"	m	struct:charset	access:public
iso_code_class	coding.c	/^static enum iso_code_class_type iso_code_class[256];$/;"	v	typeref:enum:iso_code_class_type	file:
iso_code_class_type	coding.c	/^enum iso_code_class_type$/;"	g	file:
ISO_CODE_CSI	coding.c	368;"	d	file:
ISO_CODE_ESC	coding.c	365;"	d	file:
ISO_CODE_SI	coding.c	363;"	d	file:
ISO_CODE_SO	coding.c	362;"	d	file:
ISO_CODE_SS2	coding.c	366;"	d	file:
ISO_CODE_SS2_7	coding.c	364;"	d	file:
ISO_CODE_SS3	coding.c	367;"	d	file:
ISO_control_0	coding.c	/^    ISO_control_0,		\/* Control codes in the range$/;"	e	enum:iso_code_class_type	file:
ISO_control_1	coding.c	/^    ISO_control_1,		\/* Control codes in the range$/;"	e	enum:iso_code_class_type	file:
ISO_control_sequence_introducer	coding.c	/^    ISO_control_sequence_introducer, \/* ISO_CODE_CSI (0x9B) *\/$/;"	e	enum:iso_code_class_type	file:
ISO_escape	coding.c	/^    ISO_escape,			\/* ISO_CODE_ESC (0x1B) *\/$/;"	e	enum:iso_code_class_type	file:
iso_final	charset.h	/^  int iso_final;$/;"	m	struct:charset	access:public
ISO_FUNCTION_KEY_OFFSET	keyboard.c	5071;"	d	file:
ISO_graphic_plane_0	coding.c	/^    ISO_graphic_plane_0,	\/* Graphic codes in the range 0x21..0x7E.  *\/$/;"	e	enum:iso_code_class_type	file:
ISO_graphic_plane_1	coding.c	/^    ISO_graphic_plane_1		\/* Graphic codes in the range 0xA1..0xFE.  *\/$/;"	e	enum:iso_code_class_type	file:
iso_lispy_function_keys	keyboard.c	/^static const char *const iso_lispy_function_keys[] =$/;"	v	file:
ISO_MAX_CHARS	charset.h	467;"	d
ISO_MAX_DIMENSION	charset.h	466;"	d
ISO_MAX_FINAL	charset.h	468;"	d
iso_revision	charset.h	/^  int iso_revision;$/;"	m	struct:charset	access:public
ISO_shift_in	coding.c	/^    ISO_shift_in,		\/* ISO_CODE_SI (0x0F) *\/$/;"	e	enum:iso_code_class_type	file:
ISO_shift_out	coding.c	/^    ISO_shift_out,		\/* ISO_CODE_SO (0x0E) *\/$/;"	e	enum:iso_code_class_type	file:
ISO_single_shift_2	coding.c	/^    ISO_single_shift_2,		\/* ISO_CODE_SS2 (0x8E) *\/$/;"	e	enum:iso_code_class_type	file:
ISO_single_shift_2_7	coding.c	/^    ISO_single_shift_2_7,	\/* ISO_CODE_SS2_7 (0x19) *\/$/;"	e	enum:iso_code_class_type	file:
ISO_single_shift_3	coding.c	/^    ISO_single_shift_3,		\/* ISO_CODE_SS3 (0x8F) *\/$/;"	e	enum:iso_code_class_type	file:
ISPRINT	regex.c	321;"	d	file:
ISPRINT	regex.c	371;"	d	file:
ISPRINT	regex.c	372;"	d	file:
ISPUNCT	regex.c	338;"	d	file:
ISPUNCT	regex.c	378;"	d	file:
issExtMax	unexelf.c	/^	int issExtMax;$/;"	m	struct:__anon123	file:	access:public
issMax	unexelf.c	/^	int issMax;$/;"	m	struct:__anon123	file:	access:public
ISSPACE	regex.c	345;"	d	file:
ISSPACE	regex.c	379;"	d	file:
ISUNIBYTE	regex.c	302;"	d	file:
ISUNIBYTE	regex.c	357;"	d	file:
ISUPPER	regex.c	347;"	d	file:
ISUPPER	regex.c	380;"	d	file:
IsValidSecurityDescriptor_Proc	w32.c	/^typedef BOOL (WINAPI *IsValidSecurityDescriptor_Proc) (PSECURITY_DESCRIPTOR);$/;"	t	file:
IsValidSid_Proc	w32.c	/^typedef BOOL (WINAPI * IsValidSid_Proc) ($/;"	t	file:
iswctype	regex.c	101;"	d	file:
ISWORD	regex.c	349;"	d	file:
ISWORD	regex.c	383;"	d	file:
ISXDIGIT	regex.c	309;"	d	file:
ISXDIGIT	regex.c	381;"	d	file:
isymMax	unexelf.c	/^	int isymMax;$/;"	m	struct:__anon123	file:	access:public
IS_ANY_SEP	config.h	1365;"	d
is_box_type	gtkutil.c	/^is_box_type (GtkWidget *vb, bool is_horizontal)$/;"	f	file:	signature:(GtkWidget *vb, bool is_horizontal)
IS_DAEMON	lisp.h	4129;"	d
IS_DAEMON	lisp.h	4133;"	d
IS_DEVICE_SEP	config.h	1368;"	d
IS_DIRECTORY_SEP	config.h	1371;"	d
IS_DRIVE	fileio.c	80;"	d	file:
is_exec	w32.c	/^is_exec (const char * name)$/;"	f	file:	signature:(const char * name)
is_fat_volume	w32.c	/^is_fat_volume (const char * name, const char ** pPath)$/;"	f	file:	signature:(const char * name, const char ** pPath)
is_metized	keymap.c	/^  bool is_metized;$/;"	m	struct:accessible_keymaps_data	file:	access:public
is_non_blocking_client	process.h	/^    bool_bf is_non_blocking_client : 1;$/;"	m	struct:Lisp_Process	access:public
IS_REAL_ASCII	regex.c	299;"	d	file:
IS_REAL_ASCII	regex.c	354;"	d	file:
is_server	process.h	/^    bool_bf is_server : 1;$/;"	m	struct:Lisp_Process	access:public
is_simple_dialog	w32menu.c	/^is_simple_dialog (Lisp_Object contents)$/;"	f	file:	signature:(Lisp_Object contents)
is_simple_dialog	w32menu.c	/^static bool is_simple_dialog (Lisp_Object);$/;"	p	file:
is_slow_fs	dired.c	/^extern int is_slow_fs (const char *);$/;"	p	file:	signature:(const char *)
is_slow_fs	w32.c	/^int is_slow_fs (const char *);$/;"	p	file:	signature:(const char *)
is_slow_fs	w32.c	/^is_slow_fs (const char *name)$/;"	f	signature:(const char *name)
is_symlink	w32.c	/^is_symlink (const char *filename)$/;"	f	file:	signature:(const char *filename)
is_symlink	w32.c	/^static int is_symlink (const char *);$/;"	p	file:	signature:(const char *)
is_unc_volume	w32.c	/^is_unc_volume (const char *filename)$/;"	f	file:	signature:(const char *filename)
is_valid_security_descriptor	w32.c	/^is_valid_security_descriptor (PSECURITY_DESCRIPTOR pSecurityDescriptor)$/;"	f	file:	signature:(PSECURITY_DESCRIPTOR pSecurityDescriptor)
is_valid_sid	w32.c	/^is_valid_sid (PSID sid)$/;"	f	file:	signature:(PSID sid)
is_windows_9x	w32.c	/^is_windows_9x (void)$/;"	f	file:	signature:(void)
it	dispextern.h	/^struct it$/;"	s
it::area	dispextern.h	/^  enum glyph_row_area area;$/;"	m	struct:it	typeref:enum:it::glyph_row_area	access:public
it::ascent	dispextern.h	/^  int ascent, descent, max_ascent, max_descent;$/;"	m	struct:it	access:public
it::avoid_cursor_p	dispextern.h	/^  bool_bf avoid_cursor_p : 1;$/;"	m	struct:it	access:public
it::base_face_id	dispextern.h	/^  int base_face_id;$/;"	m	struct:it	access:public
it::base_level_stop	dispextern.h	/^  ptrdiff_t base_level_stop;$/;"	m	struct:it	access:public
it::bidi_it	dispextern.h	/^  struct bidi_it bidi_it;$/;"	m	struct:it	typeref:struct:it::bidi_it	access:public
it::bidi_p	dispextern.h	/^  bool_bf bidi_p : 1;$/;"	m	struct:it	access:public
it::c	dispextern.h	/^  int c, len;$/;"	m	struct:it	access:public
it::char_to_display	dispextern.h	/^  int char_to_display;$/;"	m	struct:it	access:public
it::cmp_it	dispextern.h	/^  struct composition_it cmp_it;$/;"	m	struct:it	typeref:struct:it::composition_it	access:public
it::constrain_row_ascent_descent_p	dispextern.h	/^  bool_bf constrain_row_ascent_descent_p : 1;$/;"	m	struct:it	access:public
it::continuation_lines_width	dispextern.h	/^  int continuation_lines_width;$/;"	m	struct:it	access:public
it::continuation_pixel_width	dispextern.h	/^  short truncation_pixel_width, continuation_pixel_width;$/;"	m	struct:it	access:public
it::ctl_arrow_p	dispextern.h	/^  bool_bf ctl_arrow_p : 1;$/;"	m	struct:it	access:public
it::ctl_chars	dispextern.h	/^  Lisp_Object ctl_chars[16];$/;"	m	struct:it	access:public
it::current	dispextern.h	/^  struct display_pos current;$/;"	m	struct:it	typeref:struct:it::display_pos	access:public
it::current_x	dispextern.h	/^  int current_x;$/;"	m	struct:it	access:public
it::current_y	dispextern.h	/^  int current_y;$/;"	m	struct:it	access:public
it::descent	dispextern.h	/^  int ascent, descent, max_ascent, max_descent;$/;"	m	struct:it	access:public
it::dp	dispextern.h	/^  struct Lisp_Char_Table *dp;$/;"	m	struct:it	typeref:struct:it::Lisp_Char_Table	access:public
it::dpend	dispextern.h	/^  Lisp_Object *dpvec, *dpend;$/;"	m	struct:it	access:public
it::dpvec	dispextern.h	/^  Lisp_Object *dpvec, *dpend;$/;"	m	struct:it	access:public
it::dpvec_char_len	dispextern.h	/^  int dpvec_char_len;$/;"	m	struct:it	access:public
it::dpvec_face_id	dispextern.h	/^  int dpvec_face_id;$/;"	m	struct:it	access:public
it::ellipsis_p	dispextern.h	/^  bool_bf ellipsis_p : 1;$/;"	m	struct:it	access:public
it::end_charpos	dispextern.h	/^  ptrdiff_t end_charpos;$/;"	m	struct:it	access:public
it::end_of_box_run_p	dispextern.h	/^  bool_bf end_of_box_run_p : 1;$/;"	m	struct:it	access:public
it::eol_pos	dispextern.h	/^  struct text_pos eol_pos;$/;"	m	struct:it	typeref:struct:it::text_pos	access:public
it::extra_line_spacing	dispextern.h	/^  int extra_line_spacing;$/;"	m	struct:it	access:public
it::f	dispextern.h	/^  struct frame *f;$/;"	m	struct:it	typeref:struct:it::frame	access:public
it::face_before_selective_p	dispextern.h	/^  bool_bf face_before_selective_p : 1;$/;"	m	struct:it	access:public
it::face_box_p	dispextern.h	/^  bool_bf face_box_p : 1;$/;"	m	struct:it	access:public
it::face_id	dispextern.h	/^  int face_id;$/;"	m	struct:it	access:public
it::first_visible_x	dispextern.h	/^  int first_visible_x, last_visible_x;$/;"	m	struct:it	access:public
it::first_vpos	dispextern.h	/^  int first_vpos;$/;"	m	struct:it	access:public
it::font_height	dispextern.h	/^  Lisp_Object font_height;$/;"	m	struct:it	access:public
it::from_disp_prop_p	dispextern.h	/^  bool_bf from_disp_prop_p : 1;$/;"	m	struct:it	access:public
it::from_overlay	dispextern.h	/^  Lisp_Object from_overlay;$/;"	m	struct:it	access:public
it::glyphless_method	dispextern.h	/^  enum glyphless_display_method glyphless_method;$/;"	m	struct:it	typeref:enum:it::glyphless_display_method	access:public
it::glyph_not_available_p	dispextern.h	/^  bool_bf glyph_not_available_p : 1;$/;"	m	struct:it	access:public
it::glyph_row	dispextern.h	/^  struct glyph_row *glyph_row;$/;"	m	struct:it	typeref:struct:it::glyph_row	access:public
it::header_line_p	dispextern.h	/^  bool_bf header_line_p : 1;$/;"	m	struct:it	access:public
it::hpos	dispextern.h	/^  int hpos;$/;"	m	struct:it	access:public
it::ignore_overlay_strings_at_pos_p	dispextern.h	/^  bool_bf ignore_overlay_strings_at_pos_p : 1;$/;"	m	struct:it	access:public
it::image_id	dispextern.h	/^  ptrdiff_t image_id;$/;"	m	struct:it	access:public
it::iterator_stack_entry	dispextern.h	/^  struct iterator_stack_entry$/;"	s	struct:it	access:public
it::iterator_stack_entry::area	dispextern.h	/^    enum glyph_row_area area;$/;"	m	struct:it::iterator_stack_entry	typeref:enum:it::iterator_stack_entry::glyph_row_area	access:public
it::iterator_stack_entry::avoid_cursor_p	dispextern.h	/^    bool_bf avoid_cursor_p : 1;$/;"	m	struct:it::iterator_stack_entry	access:public
it::iterator_stack_entry::base_level_stop	dispextern.h	/^    ptrdiff_t base_level_stop;$/;"	m	struct:it::iterator_stack_entry	access:public
it::iterator_stack_entry::bidi_p	dispextern.h	/^    bool_bf bidi_p : 1;$/;"	m	struct:it::iterator_stack_entry	access:public
it::iterator_stack_entry::cmp_it	dispextern.h	/^    struct composition_it cmp_it;$/;"	m	struct:it::iterator_stack_entry	typeref:struct:it::iterator_stack_entry::composition_it	access:public
it::iterator_stack_entry::current	dispextern.h	/^    struct display_pos current;$/;"	m	struct:it::iterator_stack_entry	typeref:struct:it::iterator_stack_entry::display_pos	access:public
it::iterator_stack_entry::display_ellipsis_p	dispextern.h	/^    bool_bf display_ellipsis_p : 1;$/;"	m	struct:it::iterator_stack_entry	access:public
it::iterator_stack_entry::end_charpos	dispextern.h	/^    ptrdiff_t end_charpos;$/;"	m	struct:it::iterator_stack_entry	access:public
it::iterator_stack_entry::face_id	dispextern.h	/^    int face_id;$/;"	m	struct:it::iterator_stack_entry	access:public
it::iterator_stack_entry::font_height	dispextern.h	/^    Lisp_Object font_height;$/;"	m	struct:it::iterator_stack_entry	access:public
it::iterator_stack_entry::from_disp_prop_p	dispextern.h	/^    bool_bf from_disp_prop_p : 1;$/;"	m	struct:it::iterator_stack_entry	access:public
it::iterator_stack_entry::from_overlay	dispextern.h	/^    Lisp_Object from_overlay;$/;"	m	struct:it::iterator_stack_entry	access:public
it::iterator_stack_entry::line_wrap	dispextern.h	/^    enum line_wrap_method line_wrap;$/;"	m	struct:it::iterator_stack_entry	typeref:enum:it::iterator_stack_entry::line_wrap_method	access:public
it::iterator_stack_entry::method	dispextern.h	/^    enum it_method method;$/;"	m	struct:it::iterator_stack_entry	typeref:enum:it::iterator_stack_entry::it_method	access:public
it::iterator_stack_entry::multibyte_p	dispextern.h	/^    bool_bf multibyte_p : 1;$/;"	m	struct:it::iterator_stack_entry	access:public
it::iterator_stack_entry::paragraph_embedding	dispextern.h	/^    bidi_dir_t paragraph_embedding;$/;"	m	struct:it::iterator_stack_entry	access:public
it::iterator_stack_entry::position	dispextern.h	/^    struct text_pos position;$/;"	m	struct:it::iterator_stack_entry	typeref:struct:it::iterator_stack_entry::text_pos	access:public
it::iterator_stack_entry::prev_stop	dispextern.h	/^    ptrdiff_t prev_stop;$/;"	m	struct:it::iterator_stack_entry	access:public
it::iterator_stack_entry::space_width	dispextern.h	/^    Lisp_Object space_width;$/;"	m	struct:it::iterator_stack_entry	access:public
it::iterator_stack_entry::stop_charpos	dispextern.h	/^    ptrdiff_t stop_charpos;$/;"	m	struct:it::iterator_stack_entry	access:public
it::iterator_stack_entry::string	dispextern.h	/^    Lisp_Object string;$/;"	m	struct:it::iterator_stack_entry	access:public
it::iterator_stack_entry::string_from_display_prop_p	dispextern.h	/^    bool_bf string_from_display_prop_p : 1;$/;"	m	struct:it::iterator_stack_entry	access:public
it::iterator_stack_entry::string_from_prefix_prop_p	dispextern.h	/^    bool_bf string_from_prefix_prop_p : 1;$/;"	m	struct:it::iterator_stack_entry	access:public
it::iterator_stack_entry::string_nchars	dispextern.h	/^    int string_nchars;$/;"	m	struct:it::iterator_stack_entry	access:public
it::iterator_stack_entry::u	dispextern.h	/^    } u;$/;"	m	struct:it::iterator_stack_entry	typeref:union:it::iterator_stack_entry::__anon117	access:public
it::iterator_stack_entry::voffset	dispextern.h	/^    short voffset;$/;"	m	struct:it::iterator_stack_entry	access:public
it::iterator_stack_entry::__anon117::image	dispextern.h	/^      } image;$/;"	m	union:it::iterator_stack_entry::__anon117	typeref:struct:it::iterator_stack_entry::__anon117::__anon118	access:public
it::iterator_stack_entry::__anon117::stretch	dispextern.h	/^      } stretch;$/;"	m	union:it::iterator_stack_entry::__anon117	typeref:struct:it::iterator_stack_entry::__anon117::__anon119	access:public
it::iterator_stack_entry::__anon117::xwidget	dispextern.h	/^      } xwidget;$/;"	m	union:it::iterator_stack_entry::__anon117	typeref:struct:it::iterator_stack_entry::__anon117::__anon120	access:public
it::iterator_stack_entry::__anon117::__anon118::image_id	dispextern.h	/^	ptrdiff_t image_id;$/;"	m	struct:it::iterator_stack_entry::__anon117::__anon118	access:public
it::iterator_stack_entry::__anon117::__anon118::object	dispextern.h	/^	Lisp_Object object;$/;"	m	struct:it::iterator_stack_entry::__anon117::__anon118	access:public
it::iterator_stack_entry::__anon117::__anon118::slice	dispextern.h	/^	struct it_slice slice;$/;"	m	struct:it::iterator_stack_entry::__anon117::__anon118	typeref:struct:it::iterator_stack_entry::__anon117::__anon118::it_slice	access:public
it::iterator_stack_entry::__anon117::__anon119::object	dispextern.h	/^	Lisp_Object object;$/;"	m	struct:it::iterator_stack_entry::__anon117::__anon119	access:public
it::iterator_stack_entry::__anon117::__anon120::object	dispextern.h	/^	Lisp_Object object;$/;"	m	struct:it::iterator_stack_entry::__anon117::__anon120	access:public
it::last_visible_x	dispextern.h	/^  int first_visible_x, last_visible_x;$/;"	m	struct:it	access:public
it::last_visible_y	dispextern.h	/^  int last_visible_y;$/;"	m	struct:it	access:public
it::left_user_fringe_bitmap	dispextern.h	/^  unsigned left_user_fringe_bitmap : FRINGE_ID_BITS;$/;"	m	struct:it	access:public
it::left_user_fringe_face_id	dispextern.h	/^  unsigned left_user_fringe_face_id : FACE_ID_BITS;$/;"	m	struct:it	access:public
it::len	dispextern.h	/^  int c, len;$/;"	m	struct:it	access:public
it::line_wrap	dispextern.h	/^  enum line_wrap_method line_wrap;$/;"	m	struct:it	typeref:enum:it::line_wrap_method	access:public
it::lnum	dispextern.h	/^  ptrdiff_t lnum;$/;"	m	struct:it	access:public
it::lnum_bytepos	dispextern.h	/^  ptrdiff_t lnum_bytepos;$/;"	m	struct:it	access:public
it::lnum_pixel_width	dispextern.h	/^  int lnum_pixel_width;$/;"	m	struct:it	access:public
it::lnum_width	dispextern.h	/^  int lnum_width;$/;"	m	struct:it	access:public
it::max_ascent	dispextern.h	/^  int ascent, descent, max_ascent, max_descent;$/;"	m	struct:it	access:public
it::max_descent	dispextern.h	/^  int ascent, descent, max_ascent, max_descent;$/;"	m	struct:it	access:public
it::max_extra_line_spacing	dispextern.h	/^  int max_extra_line_spacing;$/;"	m	struct:it	access:public
it::max_phys_ascent	dispextern.h	/^  int phys_ascent, phys_descent, max_phys_ascent, max_phys_descent;$/;"	m	struct:it	access:public
it::max_phys_descent	dispextern.h	/^  int phys_ascent, phys_descent, max_phys_ascent, max_phys_descent;$/;"	m	struct:it	access:public
it::method	dispextern.h	/^  enum it_method method;$/;"	m	struct:it	typeref:enum:it::it_method	access:public
it::multibyte_p	dispextern.h	/^  bool_bf multibyte_p : 1;$/;"	m	struct:it	access:public
it::nglyphs	dispextern.h	/^  int nglyphs;$/;"	m	struct:it	access:public
it::n_overlay_strings	dispextern.h	/^  ptrdiff_t n_overlay_strings;$/;"	m	struct:it	access:public
it::object	dispextern.h	/^  Lisp_Object object;$/;"	m	struct:it	access:public
it::overlay_strings	dispextern.h	/^  Lisp_Object overlay_strings[OVERLAY_STRING_CHUNK_SIZE];$/;"	m	struct:it	access:public
it::overlay_strings_at_end_processed_p	dispextern.h	/^  bool_bf overlay_strings_at_end_processed_p : 1;$/;"	m	struct:it	access:public
it::overlay_strings_charpos	dispextern.h	/^  ptrdiff_t overlay_strings_charpos;$/;"	m	struct:it	access:public
it::override_ascent	dispextern.h	/^  int override_ascent, override_descent, override_boff;$/;"	m	struct:it	access:public
it::override_boff	dispextern.h	/^  int override_ascent, override_descent, override_boff;$/;"	m	struct:it	access:public
it::override_descent	dispextern.h	/^  int override_ascent, override_descent, override_boff;$/;"	m	struct:it	access:public
it::paragraph_embedding	dispextern.h	/^  bidi_dir_t paragraph_embedding;$/;"	m	struct:it	access:public
it::phys_ascent	dispextern.h	/^  int phys_ascent, phys_descent, max_phys_ascent, max_phys_descent;$/;"	m	struct:it	access:public
it::phys_descent	dispextern.h	/^  int phys_ascent, phys_descent, max_phys_ascent, max_phys_descent;$/;"	m	struct:it	access:public
it::pixel_width	dispextern.h	/^  int pixel_width;$/;"	m	struct:it	access:public
it::position	dispextern.h	/^  struct text_pos position;$/;"	m	struct:it	typeref:struct:it::text_pos	access:public
it::prev_stop	dispextern.h	/^  ptrdiff_t prev_stop;$/;"	m	struct:it	access:public
it::pt_lnum	dispextern.h	/^  ptrdiff_t pt_lnum;$/;"	m	struct:it	access:public
it::redisplay_end_trigger_charpos	dispextern.h	/^  ptrdiff_t redisplay_end_trigger_charpos;$/;"	m	struct:it	access:public
it::right_user_fringe_bitmap	dispextern.h	/^  unsigned right_user_fringe_bitmap : FRINGE_ID_BITS;$/;"	m	struct:it	access:public
it::right_user_fringe_face_id	dispextern.h	/^  unsigned right_user_fringe_face_id : FACE_ID_BITS;$/;"	m	struct:it	access:public
it::s	dispextern.h	/^  const unsigned char *s;$/;"	m	struct:it	access:public
it::saved_face_id	dispextern.h	/^  int saved_face_id;$/;"	m	struct:it	access:public
it::selective	dispextern.h	/^  ptrdiff_t selective;$/;"	m	struct:it	access:public
it::selective_display_ellipsis_p	dispextern.h	/^  bool_bf selective_display_ellipsis_p : 1;$/;"	m	struct:it	access:public
it::slice	dispextern.h	/^  struct it_slice slice;$/;"	m	struct:it	typeref:struct:it::it_slice	access:public
it::sp	dispextern.h	/^  int sp;$/;"	m	struct:it	access:public
it::space_width	dispextern.h	/^  Lisp_Object space_width;$/;"	m	struct:it	access:public
it::stack	dispextern.h	/^  stack[IT_STACK_SIZE];$/;"	m	struct:it	typeref:struct:it::iterator_stack_entry	access:public
it::start	dispextern.h	/^  struct display_pos start;$/;"	m	struct:it	typeref:struct:it::display_pos	access:public
it::starts_in_middle_of_char_p	dispextern.h	/^  bool_bf starts_in_middle_of_char_p : 1;$/;"	m	struct:it	access:public
it::start_of_box_run_p	dispextern.h	/^  bool_bf start_of_box_run_p : 1;$/;"	m	struct:it	access:public
it::stop_charpos	dispextern.h	/^  ptrdiff_t stop_charpos;$/;"	m	struct:it	access:public
it::string	dispextern.h	/^  Lisp_Object string;$/;"	m	struct:it	access:public
it::string_from_display_prop_p	dispextern.h	/^  bool_bf string_from_display_prop_p : 1;$/;"	m	struct:it	access:public
it::string_from_prefix_prop_p	dispextern.h	/^  bool_bf string_from_prefix_prop_p : 1;$/;"	m	struct:it	access:public
it::string_nchars	dispextern.h	/^  ptrdiff_t string_nchars;$/;"	m	struct:it	access:public
it::string_overlays	dispextern.h	/^  Lisp_Object string_overlays[OVERLAY_STRING_CHUNK_SIZE];$/;"	m	struct:it	access:public
it::tab_width	dispextern.h	/^  short tab_width;$/;"	m	struct:it	access:public
it::truncation_pixel_width	dispextern.h	/^  short truncation_pixel_width, continuation_pixel_width;$/;"	m	struct:it	access:public
it::voffset	dispextern.h	/^  short voffset;$/;"	m	struct:it	access:public
it::vpos	dispextern.h	/^  int vpos;$/;"	m	struct:it	access:public
it::w	dispextern.h	/^  struct window *w;$/;"	m	struct:it	typeref:struct:it::window	access:public
it::what	dispextern.h	/^  enum display_element_type what;$/;"	m	struct:it	typeref:enum:it::display_element_type	access:public
it::window	dispextern.h	/^  Lisp_Object window;$/;"	m	struct:it	access:public
it::xwidget	dispextern.h	/^  struct xwidget *xwidget;$/;"	m	struct:it	typeref:struct:it::xwidget	access:public
ital	nsterm.h	/^  char bold, ital;  \/* convenience flags *\/$/;"	m	struct:nsfont_info	access:public
items	nsterm.h	/^  void **items;$/;"	m	struct:ns_color_table	access:public
item_properties	keyboard.c	/^Lisp_Object item_properties;$/;"	v
ITEM_PROPERTY_DEF	keyboard.h	291;"	d
ITEM_PROPERTY_ENABLE	keyboard.h	305;"	d
ITEM_PROPERTY_HELP	keyboard.h	301;"	d
ITEM_PROPERTY_ITEM	keyboard.h	286;"	d
ITEM_PROPERTY_KEYEQ	keyboard.h	297;"	d
ITEM_PROPERTY_MAP	keyboard.h	293;"	d
ITEM_PROPERTY_NAME	keyboard.h	288;"	d
ITEM_PROPERTY_SELECTED	keyboard.h	299;"	d
ITEM_PROPERTY_TYPE	keyboard.h	295;"	d
iterate_out_of_display_property	xdisp.c	/^iterate_out_of_display_property (struct it *it)$/;"	f	file:	signature:(struct it *it)
iterate_out_of_display_property	xdisp.c	/^static void iterate_out_of_display_property (struct it *);$/;"	p	file:	signature:(struct it *)
ITERATOR_AT_END_OF_LINE_P	dispextern.h	2678;"	d
ITERATOR_AT_END_P	dispextern.h	2672;"	d
iterator_stack_entry	dispextern.h	/^  struct iterator_stack_entry$/;"	s	struct:it	access:public
itimer_data	w32proc.c	/^struct itimer_data {$/;"	s	file:
itimer_data::caller_thread	w32proc.c	/^  HANDLE caller_thread;$/;"	m	struct:itimer_data	file:	access:public
itimer_data::expire	w32proc.c	/^  volatile ULONGLONG expire;$/;"	m	struct:itimer_data	file:	access:public
itimer_data::reload	w32proc.c	/^  volatile ULONGLONG reload;$/;"	m	struct:itimer_data	file:	access:public
itimer_data::terminate	w32proc.c	/^  volatile int terminate;$/;"	m	struct:itimer_data	file:	access:public
itimer_data::timer_thread	w32proc.c	/^  HANDLE timer_thread;$/;"	m	struct:itimer_data	file:	access:public
itimer_data::type	w32proc.c	/^  int type;$/;"	m	struct:itimer_data	file:	access:public
IT_BYTEPOS	dispextern.h	2665;"	d
IT_CHARACTER	dispextern.h	/^  IT_CHARACTER,$/;"	e	enum:display_element_type
IT_CHARPOS	dispextern.h	2664;"	d
IT_COMPOSITION	dispextern.h	/^  IT_COMPOSITION,$/;"	e	enum:display_element_type
IT_CONTINUATION	dispextern.h	/^  IT_CONTINUATION,$/;"	e	enum:display_element_type
IT_DISPLAYING_WHITESPACE	xdisp.c	354;"	d	file:
IT_EOB	dispextern.h	/^  IT_EOB,$/;"	e	enum:display_element_type
IT_EXPAND_MATRIX_WIDTH	xdisp.c	26628;"	d	file:
IT_GLYPHLESS	dispextern.h	/^  IT_GLYPHLESS,$/;"	e	enum:display_element_type
IT_IMAGE	dispextern.h	/^  IT_IMAGE,$/;"	e	enum:display_element_type
it_method	dispextern.h	/^enum it_method {$/;"	g
IT_OVERFLOW_NEWLINE_INTO_FRINGE	xdisp.c	338;"	d	file:
IT_OVERFLOW_NEWLINE_INTO_FRINGE	xdisp.c	347;"	d	file:
IT_POS_VALID_AFTER_MOVE_P	xdisp.c	8569;"	d	file:
it_props	xdisp.c	/^static struct props it_props[] =$/;"	v	typeref:struct:props	file:
IT_RESET_X_ASCENT_DESCENT	xdisp.c	8688;"	d	file:
IT_RESET_X_ASCENT_DESCENT	xdisp.c	9186;"	d	file:
it_slice	dispextern.h	/^struct it_slice$/;"	s
it_slice::height	dispextern.h	/^  Lisp_Object height;$/;"	m	struct:it_slice	access:public
it_slice::width	dispextern.h	/^  Lisp_Object width;$/;"	m	struct:it_slice	access:public
it_slice::x	dispextern.h	/^  Lisp_Object x;$/;"	m	struct:it_slice	access:public
it_slice::y	dispextern.h	/^  Lisp_Object y;$/;"	m	struct:it_slice	access:public
IT_STACK_SIZE	dispextern.h	2162;"	d
IT_STRETCH	dispextern.h	/^  IT_STRETCH,$/;"	e	enum:display_element_type
IT_STRING_BYTEPOS	dispextern.h	2667;"	d
IT_STRING_CHARPOS	dispextern.h	2666;"	d
IT_TRUNCATION	dispextern.h	/^  IT_TRUNCATION,$/;"	e	enum:display_element_type
IT_XWIDGET	dispextern.h	/^  IT_XWIDGET$/;"	e	enum:display_element_type
ix	w32.c	/^static int ix = 3172, iy = 9814, iz = 20125;$/;"	v	file:
iy	w32.c	/^static int ix = 3172, iy = 9814, iz = 20125;$/;"	v	file:
iz	w32.c	/^static int ix = 3172, iy = 9814, iz = 20125;$/;"	v	file:
j	alloc.c	/^  sys_jmp_buf j;$/;"	m	union:__anon12	file:	access:public
JIS_TO_SJIS	coding.h	602;"	d
JIS_TO_SJIS2	coding.h	616;"	d
jmp	lisp.h	/^  sys_jmp_buf jmp;$/;"	m	struct:handler	access:public
JOHAB_CHARSET	w32font.c	52;"	d	file:
JPEG_ALGORITHM	image.c	/^  JPEG_ALGORITHM,$/;"	e	enum:jpeg_keyword_index	file:
JPEG_ASCENT	image.c	/^  JPEG_ASCENT,$/;"	e	enum:jpeg_keyword_index	file:
JPEG_BACKGROUND	image.c	/^  JPEG_BACKGROUND,$/;"	e	enum:jpeg_keyword_index	file:
jpeg_CreateDecompress	image.c	6435;"	d	file:
jpeg_CreateDecompress	image.c	6444;"	d	file:
JPEG_DATA	image.c	/^  JPEG_DATA,$/;"	e	enum:jpeg_keyword_index	file:
jpeg_destroy_decompress	image.c	6436;"	d	file:
jpeg_destroy_decompress	image.c	6445;"	d	file:
JPEG_FILE	image.c	/^  JPEG_FILE,$/;"	e	enum:jpeg_keyword_index	file:
jpeg_file_src	image.c	/^jpeg_file_src (j_decompress_ptr cinfo, FILE *fp)$/;"	f	file:	signature:(j_decompress_ptr cinfo, FILE *fp)
jpeg_finish_decompress	image.c	6437;"	d	file:
jpeg_finish_decompress	image.c	6446;"	d	file:
jpeg_format	image.c	/^static const struct image_keyword jpeg_format[JPEG_LAST] =$/;"	v	typeref:struct:image_keyword	file:
JPEG_HEURISTIC_MASK	image.c	/^  JPEG_HEURISTIC_MASK,$/;"	e	enum:jpeg_keyword_index	file:
jpeg_image_p	image.c	/^jpeg_image_p (Lisp_Object object)$/;"	f	file:	signature:(Lisp_Object object)
jpeg_image_p	image.c	/^static bool jpeg_image_p (Lisp_Object object);$/;"	p	file:	signature:(Lisp_Object object)
jpeg_keyword_index	image.c	/^enum jpeg_keyword_index$/;"	g	file:
JPEG_LAST	image.c	/^  JPEG_LAST$/;"	e	enum:jpeg_keyword_index	file:
jpeg_load	image.c	/^jpeg_load (struct frame *f, struct image *img)$/;"	f	file:	signature:(struct frame *f, struct image *img)
jpeg_load	image.c	/^static bool jpeg_load (struct frame *f, struct image *img);$/;"	p	file:	signature:(struct frame *f, struct image *img)
jpeg_load_body	image.c	/^jpeg_load_body (struct frame *f, struct image *img,$/;"	f	file:	signature:(struct frame *f, struct image *img, struct my_jpeg_error_mgr *mgr)
JPEG_MARGIN	image.c	/^  JPEG_MARGIN,$/;"	e	enum:jpeg_keyword_index	file:
JPEG_MASK	image.c	/^  JPEG_MASK,$/;"	e	enum:jpeg_keyword_index	file:
jpeg_memory_src	image.c	/^jpeg_memory_src (j_decompress_ptr cinfo, JOCTET *data, ptrdiff_t len)$/;"	f	file:	signature:(j_decompress_ptr cinfo, JOCTET *data, ptrdiff_t len)
jpeg_read_header	image.c	6438;"	d	file:
jpeg_read_header	image.c	6447;"	d	file:
jpeg_read_scanlines	image.c	6439;"	d	file:
jpeg_read_scanlines	image.c	6448;"	d	file:
JPEG_RELIEF	image.c	/^  JPEG_RELIEF,$/;"	e	enum:jpeg_keyword_index	file:
jpeg_resync_to_restart	image.c	6440;"	d	file:
jpeg_resync_to_restart	image.c	6449;"	d	file:
jpeg_resync_to_restart	image.c	6460;"	d	file:
jpeg_resync_to_restart	image.c	6461;"	d	file:
jpeg_resync_to_restart_wrapper	image.c	/^jpeg_resync_to_restart_wrapper (j_decompress_ptr cinfo, int desired)$/;"	f	file:	signature:(j_decompress_ptr cinfo, int desired)
jpeg_start_decompress	image.c	6441;"	d	file:
jpeg_start_decompress	image.c	6450;"	d	file:
JPEG_STDIO_BUFFER_SIZE	image.c	6589;"	d	file:
jpeg_stdio_mgr	image.c	/^struct jpeg_stdio_mgr$/;"	s	file:
jpeg_stdio_mgr::buffer	image.c	/^  JOCTET *buffer;$/;"	m	struct:jpeg_stdio_mgr	file:	access:public
jpeg_stdio_mgr::file	image.c	/^  FILE *file;$/;"	m	struct:jpeg_stdio_mgr	file:	access:public
jpeg_stdio_mgr::finished	image.c	/^  boolean finished;$/;"	m	struct:jpeg_stdio_mgr	file:	access:public
jpeg_stdio_mgr::mgr	image.c	/^  struct jpeg_source_mgr mgr;$/;"	m	struct:jpeg_stdio_mgr	typeref:struct:jpeg_stdio_mgr::jpeg_source_mgr	file:	access:public
jpeg_std_error	image.c	6442;"	d	file:
jpeg_std_error	image.c	6451;"	d	file:
JPEG_TYPE	image.c	/^  JPEG_TYPE,$/;"	e	enum:jpeg_keyword_index	file:
jpeg_type	image.c	/^static struct image_type jpeg_type =$/;"	v	typeref:struct:image_type	file:
judge_scroll_bars_hook	termhooks.h	/^  void (*judge_scroll_bars_hook) (struct frame *FRAME);$/;"	m	struct:terminal	access:public
jump	regex.c	/^  jump,$/;"	e	enum:__anon144	file:
jump_n	regex.c	/^  jump_n,$/;"	e	enum:__anon144	file:
kbdhook	w32fns.c	/^} kbdhook;$/;"	v	typeref:struct:__anon74	file:
kbd_buffer	keyboard.c	/^static union buffered_input_event kbd_buffer[KBD_BUFFER_SIZE];$/;"	v	typeref:union:buffered_input_event	file:
kbd_buffer_events_waiting	keyboard.c	/^kbd_buffer_events_waiting (void)$/;"	f	signature:(void)
kbd_buffer_events_waiting	keyboard.h	/^extern bool kbd_buffer_events_waiting (void);$/;"	p	signature:(void)
kbd_buffer_get_event	keyboard.c	/^kbd_buffer_get_event (KBOARD **kbp,$/;"	f	file:	signature:(KBOARD **kbp, bool *used_mouse_menu, struct timespec *end_time)
kbd_buffer_get_event	keyboard.c	/^static Lisp_Object kbd_buffer_get_event (KBOARD **kbp, bool *used_mouse_menu,$/;"	p	file:	signature:(KBOARD **kbp, bool *used_mouse_menu, struct timespec *end_time)
kbd_buffer_nr_stored	keyboard.c	/^kbd_buffer_nr_stored (void)$/;"	f	file:	signature:(void)
KBD_BUFFER_SIZE	keyboard.c	89;"	d	file:
kbd_buffer_store_buffered_event	keyboard.c	/^kbd_buffer_store_buffered_event (union buffered_input_event *event,$/;"	f	signature:(union buffered_input_event *event, struct input_event *hold_quit)
kbd_buffer_store_buffered_event	keyboard.h	/^extern void kbd_buffer_store_buffered_event (union buffered_input_event *,$/;"	p	signature:(union buffered_input_event *, struct input_event *)
kbd_buffer_store_event	keyboard.c	/^kbd_buffer_store_event (register struct input_event *event)$/;"	f	signature:(register struct input_event *event)
kbd_buffer_store_event	keyboard.h	/^extern void kbd_buffer_store_event (struct input_event *);$/;"	p	signature:(struct input_event *)
kbd_buffer_store_event_hold	keyboard.h	/^kbd_buffer_store_event_hold (struct input_event *event,$/;"	f	signature:(struct input_event *event, struct input_event *hold_quit)
kbd_buffer_store_help_event	keyboard.c	/^kbd_buffer_store_help_event (Lisp_Object frame, Lisp_Object help)$/;"	f	signature:(Lisp_Object frame, Lisp_Object help)
kbd_buffer_store_help_event	keyboard.h	/^extern void kbd_buffer_store_help_event (Lisp_Object, Lisp_Object);$/;"	p	signature:(Lisp_Object, Lisp_Object)
kbd_buffer_unget_event	keyboard.c	/^kbd_buffer_unget_event (struct selection_input_event *event)$/;"	f	signature:(struct selection_input_event *event)
kbd_buffer_unget_event	keyboard.h	/^extern void kbd_buffer_unget_event (struct selection_input_event *);$/;"	p	signature:(struct selection_input_event *)
kbd_fetch_ptr	keyboard.c	/^static union buffered_input_event *kbd_fetch_ptr;$/;"	v	typeref:union:buffered_input_event	file:
kbd_is_on_hold	process.c	/^static bool kbd_is_on_hold;$/;"	v	file:
kbd_macro_buffer	keyboard.h	/^    Lisp_Object *kbd_macro_buffer;$/;"	m	struct:kboard	access:public
kbd_macro_bufsize	keyboard.h	/^    ptrdiff_t kbd_macro_bufsize;$/;"	m	struct:kboard	access:public
kbd_macro_end	keyboard.h	/^    Lisp_Object *kbd_macro_end;$/;"	m	struct:kboard	access:public
kbd_macro_ptr	keyboard.h	/^    Lisp_Object *kbd_macro_ptr;$/;"	m	struct:kboard	access:public
kbd_on_hold_p	process.c	/^kbd_on_hold_p (void)$/;"	f	signature:(void)
kbd_on_hold_p	process.h	/^extern bool kbd_on_hold_p (void);$/;"	p	signature:(void)
kbd_queue_	keyboard.h	/^    Lisp_Object kbd_queue_;$/;"	m	struct:kboard	access:public
kbd_queue_has_data	keyboard.h	/^    bool_bf kbd_queue_has_data;$/;"	m	struct:kboard	access:public
kbd_store_ptr	keyboard.c	/^static union buffered_input_event *volatile kbd_store_ptr;$/;"	v	file:
kboard	keyboard.c	/^  KBOARD *kboard;$/;"	m	struct:kboard_stack	file:	access:public
kboard	keyboard.h	/^struct kboard$/;"	s
KBOARD	keyboard.h	/^typedef struct kboard KBOARD;$/;"	t	typeref:struct:kboard
kboard	termhooks.h	/^  struct kboard *kboard;$/;"	m	struct:terminal	typeref:struct:terminal::kboard	access:public
kboard::defining_kbd_macro_	keyboard.h	/^    Lisp_Object defining_kbd_macro_;$/;"	m	struct:kboard	access:public
kboard::echo_prompt_	keyboard.h	/^    Lisp_Object echo_prompt_;$/;"	m	struct:kboard	access:public
kboard::echo_string_	keyboard.h	/^    Lisp_Object echo_string_;$/;"	m	struct:kboard	access:public
kboard::immediate_echo	keyboard.h	/^    bool_bf immediate_echo : 1;$/;"	m	struct:kboard	access:public
kboard::kbd_macro_buffer	keyboard.h	/^    Lisp_Object *kbd_macro_buffer;$/;"	m	struct:kboard	access:public
kboard::kbd_macro_bufsize	keyboard.h	/^    ptrdiff_t kbd_macro_bufsize;$/;"	m	struct:kboard	access:public
kboard::kbd_macro_end	keyboard.h	/^    Lisp_Object *kbd_macro_end;$/;"	m	struct:kboard	access:public
kboard::kbd_macro_ptr	keyboard.h	/^    Lisp_Object *kbd_macro_ptr;$/;"	m	struct:kboard	access:public
kboard::kbd_queue_	keyboard.h	/^    Lisp_Object kbd_queue_;$/;"	m	struct:kboard	access:public
kboard::kbd_queue_has_data	keyboard.h	/^    bool_bf kbd_queue_has_data;$/;"	m	struct:kboard	access:public
kboard::next_kboard	keyboard.h	/^    KBOARD *next_kboard;$/;"	m	struct:kboard	access:public
kboard::reference_count	keyboard.h	/^    int reference_count;$/;"	m	struct:kboard	access:public
kboard::system_key_syms_	keyboard.h	/^    Lisp_Object system_key_syms_;$/;"	m	struct:kboard	access:public
kboard::Vdefault_minibuffer_frame_	keyboard.h	/^    Lisp_Object Vdefault_minibuffer_frame_;$/;"	m	struct:kboard	access:public
kboard::Vinput_decode_map_	keyboard.h	/^    Lisp_Object Vinput_decode_map_;$/;"	m	struct:kboard	access:public
kboard::Vkeyboard_translate_table_	keyboard.h	/^    Lisp_Object Vkeyboard_translate_table_;$/;"	m	struct:kboard	access:public
kboard::Vlast_command_	keyboard.h	/^    Lisp_Object Vlast_command_;$/;"	m	struct:kboard	access:public
kboard::Vlast_kbd_macro_	keyboard.h	/^    Lisp_Object Vlast_kbd_macro_;$/;"	m	struct:kboard	access:public
kboard::Vlast_prefix_arg_	keyboard.h	/^    Lisp_Object Vlast_prefix_arg_;$/;"	m	struct:kboard	access:public
kboard::Vlast_repeatable_command_	keyboard.h	/^    Lisp_Object Vlast_repeatable_command_;$/;"	m	struct:kboard	access:public
kboard::Vlocal_function_key_map_	keyboard.h	/^    Lisp_Object Vlocal_function_key_map_;$/;"	m	struct:kboard	access:public
kboard::Voverriding_terminal_local_map_	keyboard.h	/^    Lisp_Object Voverriding_terminal_local_map_;$/;"	m	struct:kboard	access:public
kboard::Vprefix_arg_	keyboard.h	/^    Lisp_Object Vprefix_arg_;$/;"	m	struct:kboard	access:public
kboard::Vreal_last_command_	keyboard.h	/^    Lisp_Object Vreal_last_command_;$/;"	m	struct:kboard	access:public
kboard::Vsystem_key_alist_	keyboard.h	/^    Lisp_Object Vsystem_key_alist_;$/;"	m	struct:kboard	access:public
kboard::Vwindow_system_	keyboard.h	/^    Lisp_Object Vwindow_system_;$/;"	m	struct:kboard	access:public
KBOARD_OBJFWDP	data.c	/^KBOARD_OBJFWDP (union Lisp_Fwd *a)$/;"	f	file:	signature:(union Lisp_Fwd *a)
kboard_stack	keyboard.c	/^static struct kboard_stack *kboard_stack;$/;"	v	typeref:struct:kboard_stack	file:
kboard_stack	keyboard.c	/^struct kboard_stack$/;"	s	file:
kboard_stack::kboard	keyboard.c	/^  KBOARD *kboard;$/;"	m	struct:kboard_stack	file:	access:public
kboard_stack::next	keyboard.c	/^  struct kboard_stack *next;$/;"	m	struct:kboard_stack	typeref:struct:kboard_stack::kboard_stack	file:	access:public
kCTCharacterCollectionAdobeJapan1	macfont.h	/^  kCTCharacterCollectionAdobeJapan1 = kCTAdobeJapan1CharacterCollection$/;"	e	enum:__anon128
kCTCharacterCollectionIdentityMapping	macfont.h	/^  kCTCharacterCollectionIdentityMapping = kCTIdentityMappingCharacterCollection,$/;"	e	enum:__anon128
kCTFontOrientationDefault	macfont.h	/^  kCTFontOrientationDefault = kCTFontDefaultOrientation$/;"	e	enum:__anon129
kCTFontTraitBold	macfont.h	/^  kCTFontTraitBold = kCTFontBoldTrait,$/;"	e	enum:__anon127
kCTFontTraitColorGlyphs	macfont.h	/^  kCTFontTraitColorGlyphs = kCTFontColorGlyphsTrait$/;"	e	enum:__anon127
kCTFontTraitItalic	macfont.h	/^  kCTFontTraitItalic = kCTFontItalicTrait,$/;"	e	enum:__anon127
kCTFontTraitMonoSpace	macfont.h	/^  kCTFontTraitMonoSpace = kCTFontMonoSpaceTrait,$/;"	e	enum:__anon127
kCTVersionNumber10_9	macfont.h	75;"	d
keep_ratio	frame.c	/^keep_ratio (struct frame *f, struct frame *p, int old_width, int old_height,$/;"	f	file:	signature:(struct frame *f, struct frame *p, int old_width, int old_height, int new_width, int new_height)
keep_time	fileio.c	/^   Lisp_Object keep_time, Lisp_Object preserve_uid_gid,$/;"	v
kernel	w32.c	/^  ULONGLONG kernel;$/;"	m	struct:load_sample	file:	access:public
key	fns.c	/^  (Lisp_Object key, Lisp_Object table)$/;"	v
key	fns.c	/^  (Lisp_Object key, Lisp_Object table, Lisp_Object dflt)$/;"	v
key	fns.c	/^  (Lisp_Object key, Lisp_Object value, Lisp_Object table)$/;"	v
key	font.c	/^  int key;$/;"	m	struct:__anon157	file:	access:public
key	keymap.c	/^  (Lisp_Object key, Lisp_Object accept_default)$/;"	v
key	keymap.c	/^  (Lisp_Object key, Lisp_Object accept_default, Lisp_Object no_remap, Lisp_Object position)$/;"	v
key	keymap.c	/^  (Lisp_Object key, Lisp_Object no_angles)$/;"	v
key	keymap.c	/^  (Lisp_Object keymap, Lisp_Object key, Lisp_Object accept_default)$/;"	v
key	keymap.c	/^  (Lisp_Object keymap, Lisp_Object key, Lisp_Object def)$/;"	v
key	minibuf.c	/^  (register Lisp_Object key, Lisp_Object list, Lisp_Object case_fold)$/;"	v
key	w32fns.c	/^  (Lisp_Object key, Lisp_Object new_state)$/;"	v
keyboard_bit_set	process.c	/^keyboard_bit_set (fd_set *mask)$/;"	f	file:	signature:(fd_set *mask)
keyboard_bit_set	process.c	/^static bool keyboard_bit_set (fd_set *);$/;"	p	file:	signature:(fd_set *)
keyboard_coding	termhooks.h	/^  struct coding_system *keyboard_coding;$/;"	m	struct:terminal	typeref:struct:terminal::coding_system	access:public
KEYBOARD_FD	process.c	/^  KEYBOARD_FD = 4,$/;"	e	enum:fd_bits	file:
keyboard_handle	w32console.c	/^HANDLE  keyboard_handle;$/;"	v
keyboard_init_hook	keyboard.c	/^static void (*keyboard_init_hook) (void);$/;"	v	file:
keymap	keymap.c	/^  (Lisp_Object definition, Lisp_Object keymap, Lisp_Object firstonly, Lisp_Object noindirect, Lisp_Object no_remap)$/;"	v
keymap	keymap.c	/^  (Lisp_Object function, Lisp_Object keymap, Lisp_Object sort_first)$/;"	v
keymap	keymap.c	/^  (Lisp_Object keymap, Lisp_Object key, Lisp_Object accept_default)$/;"	v
keymap	keymap.c	/^  (Lisp_Object keymap, Lisp_Object key, Lisp_Object def)$/;"	v
keymap	keymap.c	/^  (Lisp_Object keymap, Lisp_Object parent)$/;"	v
keymap	keymap.c	/^  (Lisp_Object keymap, Lisp_Object prefix)$/;"	v
keymap	minibuf.c	/^  (Lisp_Object prompt, Lisp_Object initial_contents, Lisp_Object keymap, Lisp_Object read, Lisp_Object hist, Lisp_Object default_value, Lisp_Object inherit_input_method)$/;"	v
KEYMAPP	keymap.h	34;"	d
keymap_	buffer.h	/^  Lisp_Object keymap_;$/;"	m	struct:buffer	access:public
KEYMAP_H	keymap.h	20;"	d
keymap_memberp	keymap.c	/^keymap_memberp (Lisp_Object map, Lisp_Object maps)$/;"	f	file:	signature:(Lisp_Object map, Lisp_Object maps)
keymap_panes	menu.c	/^keymap_panes (Lisp_Object *keymaps, ptrdiff_t nmaps)$/;"	f	file:	signature:(Lisp_Object *keymaps, ptrdiff_t nmaps)
keymap_parent	keymap.c	/^keymap_parent (Lisp_Object keymap, bool autoload)$/;"	f	file:	signature:(Lisp_Object keymap, bool autoload)
keyremap	keyboard.c	/^typedef struct keyremap$/;"	s	file:
keyremap	keyboard.c	/^} keyremap;$/;"	t	typeref:struct:keyremap	file:
keyremap::end	keyboard.c	/^  int start, end;$/;"	m	struct:keyremap	file:	access:public
keyremap::map	keyboard.c	/^  Lisp_Object map;$/;"	m	struct:keyremap	file:	access:public
keyremap::parent	keyboard.c	/^  Lisp_Object parent;$/;"	m	struct:keyremap	file:	access:public
keyremap::start	keyboard.c	/^  int start, end;$/;"	m	struct:keyremap	file:	access:public
keyremap_step	keyboard.c	/^keyremap_step (Lisp_Object *keybuf, int bufsize, volatile keyremap *fkey,$/;"	f	file:	signature:(Lisp_Object *keybuf, int bufsize, volatile keyremap *fkey, int input, bool doit, int *diff, Lisp_Object prompt)
keys	keymap.c	/^  (Lisp_Object keys, Lisp_Object accept_default)$/;"	v
keys	keymap.c	/^  (Lisp_Object keys, Lisp_Object prefix)$/;"	v
keys	term.c	/^static const struct fkey_table keys[] =$/;"	v	typeref:struct:fkey_table	file:
keys_of_buffer	buffer.c	/^keys_of_buffer (void)$/;"	f	signature:(void)
keys_of_buffer	lisp.h	/^extern void keys_of_buffer (void);$/;"	p	signature:(void)
keys_of_casefiddle	casefiddle.c	/^keys_of_casefiddle (void)$/;"	f	signature:(void)
keys_of_casefiddle	lisp.h	/^extern void keys_of_casefiddle (void);$/;"	p	signature:(void)
keys_of_cmds	cmds.c	/^keys_of_cmds (void)$/;"	f	signature:(void)
keys_of_cmds	lisp.h	/^extern void keys_of_cmds (void);$/;"	p	signature:(void)
keys_of_keyboard	keyboard.c	/^keys_of_keyboard (void)$/;"	f	signature:(void)
keys_of_keyboard	lisp.h	/^extern void keys_of_keyboard (void);$/;"	p	signature:(void)
keys_of_keymap	keymap.c	/^keys_of_keymap (void)$/;"	f	signature:(void)
keys_of_keymap	keymap.h	/^extern void keys_of_keymap (void);$/;"	p	signature:(void)
keys_of_window	window.c	/^keys_of_window (void)$/;"	f	signature:(void)
keys_of_window	window.h	/^extern void keys_of_window (void);$/;"	p	signature:(void)
keyword	xfaces.c	/^  (Lisp_Object symbol, Lisp_Object keyword, Lisp_Object frame)$/;"	v
key_and_value	lisp.h	/^  Lisp_Object key_and_value;$/;"	m	struct:Lisp_Hash_Table	access:public
KEY_DESCRIPTION_SIZE	keymap.h	32;"	d
key_event	w32inevt.c	/^key_event (KEY_EVENT_RECORD *event, struct input_event *emacs_ev, int *isdead)$/;"	f	file:	signature:(KEY_EVENT_RECORD *event, struct input_event *emacs_ev, int *isdead)
KEY_NS_CHANGE_FONT	nsterm.h	764;"	d
KEY_NS_NEW_FRAME	nsterm.h	769;"	d
KEY_NS_OPEN_FILE	nsterm.h	762;"	d
KEY_NS_OPEN_FILE_LINE	nsterm.h	765;"	d
KEY_NS_OPEN_TEMP_FILE	nsterm.h	763;"	d
KEY_NS_POWER_OFF	nsterm.h	761;"	d
KEY_NS_PUT_WORKING_TEXT	nsterm.h	766;"	d
KEY_NS_SHOW_PREFS	nsterm.h	771;"	d
KEY_NS_SPI_SERVICE_CALL	nsterm.h	768;"	d
KEY_NS_TOGGLE_TOOLBAR	nsterm.h	770;"	d
KEY_NS_UNPUT_WORKING_TEXT	nsterm.h	767;"	d
KEY_TO_CHAR	keyboard.c	6347;"	d	file:
kill	w32proc.c	48;"	d	file:
kill_buffer_processes	lisp.h	/^extern void kill_buffer_processes (Lisp_Object);$/;"	p	signature:(Lisp_Object)
kill_buffer_processes	process.c	/^kill_buffer_processes (Lisp_Object buffer)$/;"	f	signature:(Lisp_Object buffer)
kill_buffer_xwidgets	xwidget.c	/^kill_buffer_xwidgets (Lisp_Object buffer)$/;"	f	signature:(Lisp_Object buffer)
kill_buffer_xwidgets	xwidget.h	/^INLINE void kill_buffer_xwidgets (Lisp_Object buf) {}$/;"	f	signature:(Lisp_Object buf)
kill_buffer_xwidgets	xwidget.h	/^void kill_buffer_xwidgets (Lisp_Object);$/;"	p	signature:(Lisp_Object)
kill_without_query	process.h	/^    bool_bf kill_without_query : 1;$/;"	m	struct:Lisp_Process	access:public
kill_without_query	xwidget.h	/^  bool_bf kill_without_query : 1;$/;"	m	struct:xwidget	access:public
kind	keyboard.c	/^  short kind;$/;"	m	struct:event_head	file:	access:public
kind	lisp.h	/^      ENUM_BF (specbind_tag) kind : CHAR_BIT;$/;"	m	struct:specbinding::__anon29	access:public
kind	lisp.h	/^      ENUM_BF (specbind_tag) kind : CHAR_BIT;$/;"	m	struct:specbinding::__anon30	access:public
kind	lisp.h	/^      ENUM_BF (specbind_tag) kind : CHAR_BIT;$/;"	m	struct:specbinding::__anon31	access:public
kind	lisp.h	/^      ENUM_BF (specbind_tag) kind : CHAR_BIT;$/;"	m	struct:specbinding::__anon32	access:public
kind	lisp.h	/^      ENUM_BF (specbind_tag) kind : CHAR_BIT;$/;"	m	struct:specbinding::__anon33	access:public
kind	lisp.h	/^      ENUM_BF (specbind_tag) kind : CHAR_BIT;$/;"	m	struct:specbinding::__anon34	access:public
kind	termhooks.h	/^  ENUM_BF (event_kind) kind : EVENT_KIND_WIDTH;$/;"	m	struct:input_event	access:public
kind	xterm.h	/^  ENUM_BF (event_kind) kind : EVENT_KIND_WIDTH;$/;"	m	struct:selection_input_event	access:public
know_region_cache	region-cache.c	/^know_region_cache (struct buffer *buf, struct region_cache *c,$/;"	f	signature:(struct buffer *buf, struct region_cache *c, ptrdiff_t start, ptrdiff_t end)
know_region_cache	region-cache.h	/^extern void know_region_cache (struct buffer *BUF,$/;"	p	signature:(struct buffer *BUF, struct region_cache *CACHE, ptrdiff_t START, ptrdiff_t END)
kqueuefd	kqueue.c	/^static int kqueuefd = -1;$/;"	v	file:
kqueue_callback	kqueue.c	/^kqueue_callback (int fd, void *data)$/;"	f	file:	signature:(int fd, void *data)
kqueue_compare_dir_list	kqueue.c	/^kqueue_compare_dir_list (Lisp_Object watch_object)$/;"	f	file:	signature:(Lisp_Object watch_object)
kqueue_directory_listing	kqueue.c	/^kqueue_directory_listing (Lisp_Object directory_files)$/;"	f	file:	signature:(Lisp_Object directory_files)
kqueue_generate_event	kqueue.c	/^kqueue_generate_event (Lisp_Object watch_object, Lisp_Object actions,$/;"	f	file:	signature:(Lisp_Object watch_object, Lisp_Object actions, Lisp_Object file, Lisp_Object file1)
kset_default_minibuffer_frame	keyboard.h	/^kset_default_minibuffer_frame (struct kboard *kb, Lisp_Object val)$/;"	f	signature:(struct kboard *kb, Lisp_Object val)
kset_defining_kbd_macro	keyboard.h	/^kset_defining_kbd_macro (struct kboard *kb, Lisp_Object val)$/;"	f	signature:(struct kboard *kb, Lisp_Object val)
kset_echo_prompt	keyboard.c	/^kset_echo_prompt (struct kboard *kb, Lisp_Object val)$/;"	f	file:	signature:(struct kboard *kb, Lisp_Object val)
kset_echo_string	keyboard.c	/^kset_echo_string (struct kboard *kb, Lisp_Object val)$/;"	f	file:	signature:(struct kboard *kb, Lisp_Object val)
kset_input_decode_map	keyboard.h	/^kset_input_decode_map (struct kboard *kb, Lisp_Object val)$/;"	f	signature:(struct kboard *kb, Lisp_Object val)
kset_kbd_queue	keyboard.c	/^kset_kbd_queue (struct kboard *kb, Lisp_Object val)$/;"	f	file:	signature:(struct kboard *kb, Lisp_Object val)
kset_keyboard_translate_table	keyboard.c	/^kset_keyboard_translate_table (struct kboard *kb, Lisp_Object val)$/;"	f	file:	signature:(struct kboard *kb, Lisp_Object val)
kset_last_command	keyboard.h	/^kset_last_command (struct kboard *kb, Lisp_Object val)$/;"	f	signature:(struct kboard *kb, Lisp_Object val)
kset_last_kbd_macro	keyboard.h	/^kset_last_kbd_macro (struct kboard *kb, Lisp_Object val)$/;"	f	signature:(struct kboard *kb, Lisp_Object val)
kset_last_prefix_arg	keyboard.c	/^kset_last_prefix_arg (struct kboard *kb, Lisp_Object val)$/;"	f	file:	signature:(struct kboard *kb, Lisp_Object val)
kset_last_repeatable_command	keyboard.c	/^kset_last_repeatable_command (struct kboard *kb, Lisp_Object val)$/;"	f	file:	signature:(struct kboard *kb, Lisp_Object val)
kset_local_function_key_map	keyboard.c	/^kset_local_function_key_map (struct kboard *kb, Lisp_Object val)$/;"	f	file:	signature:(struct kboard *kb, Lisp_Object val)
kset_overriding_terminal_local_map	keyboard.c	/^kset_overriding_terminal_local_map (struct kboard *kb, Lisp_Object val)$/;"	f	file:	signature:(struct kboard *kb, Lisp_Object val)
kset_prefix_arg	keyboard.h	/^kset_prefix_arg (struct kboard *kb, Lisp_Object val)$/;"	f	signature:(struct kboard *kb, Lisp_Object val)
kset_real_last_command	keyboard.c	/^kset_real_last_command (struct kboard *kb, Lisp_Object val)$/;"	f	file:	signature:(struct kboard *kb, Lisp_Object val)
kset_system_key_alist	keyboard.h	/^kset_system_key_alist (struct kboard *kb, Lisp_Object val)$/;"	f	signature:(struct kboard *kb, Lisp_Object val)
kset_system_key_syms	keyboard.c	/^kset_system_key_syms (struct kboard *kb, Lisp_Object val)$/;"	f	file:	signature:(struct kboard *kb, Lisp_Object val)
kset_window_system	keyboard.h	/^kset_window_system (struct kboard *kb, Lisp_Object val)$/;"	f	signature:(struct kboard *kb, Lisp_Object val)
KVAR	keyboard.h	34;"	d
L2R	dispextern.h	/^typedef enum { NEUTRAL_DIR = 0, L2R, R2L } bidi_dir_t;$/;"	e	enum:__anon116
LABEL	bytecode.c	453;"	d	file:
laligned	alloc.c	/^laligned (void *p, size_t size)$/;"	f	file:	signature:(void *p, size_t size)
lambda_arity	eval.c	/^lambda_arity (Lisp_Object fun)$/;"	f	file:	signature:(Lisp_Object fun)
lambda_arity	eval.c	/^static Lisp_Object lambda_arity (Lisp_Object);$/;"	p	file:
lang	ftfont.c	/^  const char *lang;$/;"	m	struct:__anon125	file:	access:public
langsys_tag	ftfont.c	/^  unsigned int script_tag, langsys_tag;$/;"	m	struct:OpenTypeSpec	file:	access:public
LANGUAGE_CHANGE_EVENT	termhooks.h	/^  LANGUAGE_CHANGE_EVENT,	\/* A LANGUAGE_CHANGE_EVENT is$/;"	e	enum:event_kind
laplace_matrix	image.c	/^static int laplace_matrix[9] = {$/;"	v	file:
larger_vecalloc	fns.c	/^larger_vecalloc (Lisp_Object vec, ptrdiff_t incr_min, ptrdiff_t nitems_max)$/;"	f	file:	signature:(Lisp_Object vec, ptrdiff_t incr_min, ptrdiff_t nitems_max)
larger_vector	fns.c	/^larger_vector (Lisp_Object vec, ptrdiff_t incr_min, ptrdiff_t nitems_max)$/;"	f	signature:(Lisp_Object vec, ptrdiff_t incr_min, ptrdiff_t nitems_max)
larger_vector	lisp.h	/^extern Lisp_Object larger_vector (Lisp_Object, ptrdiff_t, ptrdiff_t);$/;"	p	signature:(Lisp_Object, ptrdiff_t, ptrdiff_t)
large_sblocks	alloc.c	/^static struct sblock *large_sblocks;$/;"	v	typeref:struct:sblock	file:
LARGE_STRING_BYTES	alloc.c	1604;"	d	file:
large_vector	alloc.c	/^struct large_vector$/;"	s	file:
large_vector::next	alloc.c	/^  struct large_vector *next;$/;"	m	struct:large_vector	typeref:struct:large_vector::large_vector	file:	access:public
large_vectors	alloc.c	/^static struct large_vector *large_vectors;$/;"	v	typeref:struct:large_vector	file:
large_vector_offset	alloc.c	/^  large_vector_offset = ROUNDUP (sizeof (struct large_vector), vector_alignment)$/;"	e	enum:__anon10	file:
large_vector_vec	alloc.c	/^large_vector_vec (struct large_vector *p)$/;"	f	file:	signature:(struct large_vector *p)
last	keymap.c	/^  Lisp_Object definition, this, last;$/;"	m	struct:where_is_internal_data	file:	access:public
last	window.c	/^  (Lisp_Object window, Lisp_Object first, Lisp_Object last, Lisp_Object body, Lisp_Object inverse, Lisp_Object left)$/;"	v
LastLine	cm.h	115;"	d
LastLineCost	cm.h	135;"	d
laststart_offset	regex.c	/^  pattern_offset_t laststart_offset;$/;"	m	struct:__anon146	file:	access:public
LAST_AREA	dispextern.h	/^  LAST_AREA$/;"	e	enum:glyph_row_area
last_auto_save	keyboard.c	/^static EMACS_INT last_auto_save;$/;"	v	file:
last_bloc	ralloc.c	/^  struct bp *last_bloc;$/;"	m	struct:heap	typeref:struct:heap::bp	file:	access:public
last_bloc	ralloc.c	/^static bloc_ptr first_bloc, last_bloc;$/;"	v	file:
last_block	ccl.h	/^  bool_bf last_block : 1;	\/* Set to true while processing the last$/;"	m	struct:ccl_program	access:public
last_command_event	globals.h	805;"	d
last_cursor_create_request	xfns.c	/^  int last_cursor_create_request;$/;"	m	struct:mouse_cursor_data	file:	access:public
last_cursor_off_p	window.h	/^    bool_bf last_cursor_off_p : 1;$/;"	m	struct:window	access:public
last_cursor_vpos	window.h	/^    int last_cursor_vpos;$/;"	m	struct:window	access:public
last_dir_find_data	w32.c	/^static int    last_dir_find_data = -1;$/;"	v	file:
last_escape_glyph_face_id	xdisp.c	/^static int last_escape_glyph_face_id = (1 << FACE_ID_BITS);$/;"	v	file:
last_escape_glyph_frame	xdisp.c	/^static struct frame *last_escape_glyph_frame = NULL;$/;"	v	typeref:struct:frame	file:
last_escape_glyph_merged_face_id	xdisp.c	/^static int last_escape_glyph_merged_face_id = 0;$/;"	v	file:
last_glyphless_glyph_face_id	xdisp.c	/^static int last_glyphless_glyph_face_id = (1 << FACE_ID_BITS);$/;"	v	file:
last_glyphless_glyph_frame	xdisp.c	/^static struct frame *last_glyphless_glyph_frame = NULL;$/;"	v	typeref:struct:frame	file:
last_glyphless_glyph_merged_face_id	xdisp.c	/^static int last_glyphless_glyph_merged_face_id = 0;$/;"	v	file:
last_had_star	window.h	/^    bool_bf last_had_star : 1;$/;"	m	struct:window	access:public
last_heap	ralloc.c	/^static heap_ptr first_heap, last_heap;$/;"	v	file:
last_heapinfo	gmalloc.c	/^static malloc_info *last_heapinfo;$/;"	v	file:
last_height	xdisp.c	/^static int last_height;$/;"	v	file:
last_idx	w32.c	/^static int first_idx = -1, last_idx = -1;$/;"	v	file:
last_input_event	globals.h	807;"	d
last_is_meta	keymap.c	/^  bool last_is_meta, noindirect;$/;"	m	struct:where_is_internal_data	file:	access:public
last_known_column	indent.c	/^static ptrdiff_t last_known_column;$/;"	v	file:
last_known_column_modified	indent.c	/^static EMACS_INT last_known_column_modified;$/;"	v	file:
last_known_column_point	indent.c	/^ptrdiff_t last_known_column_point;$/;"	v
last_marked_index	alloc.c	/^static int last_marked_index;$/;"	v	file:
LAST_MARKED_SIZE	alloc.c	6099;"	d	file:
last_minibuf_string	minibuf.c	/^Lisp_Object last_minibuf_string;$/;"	v
last_modified	window.h	/^    EMACS_INT last_modified;$/;"	m	struct:window	access:public
last_mousemove_x	w32term.c	/^static int last_mousemove_x = 0;$/;"	v	file:
last_mousemove_y	w32term.c	/^static int last_mousemove_y = 0;$/;"	v	file:
last_mouse_button	keyboard.c	/^static int last_mouse_button;$/;"	v	file:
last_mouse_frame	nsterm.h	/^  struct frame *last_mouse_frame;$/;"	m	struct:ns_display_info	typeref:struct:ns_display_info::frame	access:public
last_mouse_frame	w32term.h	/^  struct frame *last_mouse_frame;$/;"	m	struct:w32_display_info	typeref:struct:w32_display_info::frame	access:public
last_mouse_frame	xterm.h	/^  struct frame *last_mouse_frame;$/;"	m	struct:x_display_info	typeref:struct:x_display_info::frame	access:public
last_mouse_glyph	nsterm.h	/^  NSRect last_mouse_glyph;$/;"	m	struct:ns_display_info	access:public
last_mouse_glyph	w32term.h	/^  RECT last_mouse_glyph;$/;"	m	struct:w32_display_info	access:public
last_mouse_glyph	xterm.h	/^  XRectangle last_mouse_glyph;$/;"	m	struct:x_display_info	access:public
last_mouse_glyph_frame	w32term.h	/^  struct frame *last_mouse_glyph_frame;$/;"	m	struct:w32_display_info	typeref:struct:w32_display_info::frame	access:public
last_mouse_glyph_frame	xterm.h	/^  struct frame *last_mouse_glyph_frame;$/;"	m	struct:x_display_info	typeref:struct:x_display_info::frame	access:public
last_mouse_motion_frame	nsterm.h	/^  struct frame *last_mouse_motion_frame;$/;"	m	struct:ns_display_info	typeref:struct:ns_display_info::frame	access:public
last_mouse_motion_frame	w32term.h	/^  struct frame *last_mouse_motion_frame;$/;"	m	struct:w32_display_info	typeref:struct:w32_display_info::frame	access:public
last_mouse_motion_frame	xterm.h	/^  struct frame *last_mouse_motion_frame;$/;"	m	struct:x_display_info	typeref:struct:x_display_info::frame	access:public
last_mouse_motion_x	nsterm.h	/^  int last_mouse_motion_x;$/;"	m	struct:ns_display_info	access:public
last_mouse_motion_x	w32term.h	/^  int last_mouse_motion_x;$/;"	m	struct:w32_display_info	access:public
last_mouse_motion_x	xterm.h	/^  int last_mouse_motion_x;$/;"	m	struct:x_display_info	access:public
last_mouse_motion_y	nsterm.h	/^  int last_mouse_motion_y;$/;"	m	struct:ns_display_info	access:public
last_mouse_motion_y	w32term.h	/^  int last_mouse_motion_y;$/;"	m	struct:w32_display_info	access:public
last_mouse_motion_y	xterm.h	/^  int last_mouse_motion_y;$/;"	m	struct:x_display_info	access:public
last_mouse_movement_time	nsterm.h	/^  Time last_mouse_movement_time;$/;"	m	struct:ns_display_info	access:public
last_mouse_movement_time	w32term.h	/^  Time last_mouse_movement_time;$/;"	m	struct:w32_display_info	access:public
last_mouse_movement_time	xterm.h	/^  Time last_mouse_movement_time;$/;"	m	struct:x_display_info	access:public
last_mouse_scroll_bar	nsterm.h	/^  EmacsScroller *last_mouse_scroll_bar;$/;"	m	struct:ns_display_info	access:public
last_mouse_scroll_bar	nsterm.h	/^  void *last_mouse_scroll_bar;$/;"	m	struct:ns_display_info	access:public
last_mouse_scroll_bar	w32term.h	/^  struct scroll_bar *last_mouse_scroll_bar;$/;"	m	struct:w32_display_info	typeref:struct:w32_display_info::scroll_bar	access:public
last_mouse_scroll_bar	xterm.h	/^  struct scroll_bar *last_mouse_scroll_bar;$/;"	m	struct:x_display_info	typeref:struct:x_display_info::scroll_bar	access:public
last_mouse_scroll_bar_pos	w32term.h	/^  int last_mouse_scroll_bar_pos;$/;"	m	struct:w32_display_info	access:public
last_mouse_x	keyboard.c	/^static int last_mouse_x;$/;"	v	file:
last_mouse_x	term.c	/^static int last_mouse_x, last_mouse_y;$/;"	v	file:
last_mouse_y	keyboard.c	/^static int last_mouse_y;$/;"	v	file:
last_mouse_y	term.c	/^static int last_mouse_x, last_mouse_y;$/;"	v	file:
last_nonmenu_event	globals.h	809;"	d
last_nonminibuf_frame	frame.c	/^static struct frame *last_nonminibuf_frame;$/;"	v	typeref:struct:frame	file:
last_non_minibuf_size	keyboard.c	/^static ptrdiff_t last_non_minibuf_size;$/;"	v	file:
last_overlay_modification_hooks	buffer.c	/^static Lisp_Object last_overlay_modification_hooks;$/;"	v	file:
last_overlay_modification_hooks_used	buffer.c	/^static ptrdiff_t last_overlay_modification_hooks_used;$/;"	v	file:
last_overlay_modified	window.h	/^    EMACS_INT last_overlay_modified;$/;"	m	struct:window	access:public
last_per_buffer_idx	buffer.c	/^int last_per_buffer_idx;$/;"	v
last_point	window.h	/^    ptrdiff_t last_point;$/;"	m	struct:window	access:public
last_point_position	keyboard.c	/^static ptrdiff_t last_point_position;$/;"	v	file:
LAST_PROP_IDX	dispextern.h	/^  LAST_PROP_IDX$/;"	e	enum:prop_idx
last_scroll_bar_drag_pos	w32term.c	/^int last_scroll_bar_drag_pos;$/;"	v
last_seen_part	xterm.h	/^  enum scroll_bar_part last_seen_part;$/;"	m	struct:scroll_bar	typeref:enum:scroll_bar::scroll_bar_part	access:public
last_selected_window_	buffer.h	/^  Lisp_Object last_selected_window_;$/;"	m	struct:buffer	access:public
last_show_tip_args	w32fns.c	/^Lisp_Object last_show_tip_args;$/;"	v
last_show_tip_args	xfns.c	/^static Lisp_Object last_show_tip_args;$/;"	v	file:
last_state_size	gmalloc.c	/^static size_t last_state_size;$/;"	v	file:
last_strong	dispextern.h	/^  struct bidi_saved_info last_strong; \/* last-seen strong directional char *\/$/;"	m	struct:bidi_it	typeref:struct:bidi_it::bidi_saved_info	access:public
last_strong_type	dispextern.h	/^  unsigned last_strong_type : 3;$/;"	m	struct:bidi_stack	access:public
last_thing_searched	thread.h	40;"	d
last_thread_error	thread.c	/^static Lisp_Object last_thread_error;$/;"	v	file:
last_tool_bar	gtkutil.c	/^  Lisp_Object last_tool_bar;$/;"	m	struct:xg_frame_tb_info	file:	access:public
last_tool_bar_item	frame.h	/^  int last_tool_bar_item;$/;"	m	struct:frame	access:public
last_user_time	xterm.h	/^  Time last_user_time;$/;"	m	struct:x_display_info	access:public
last_visible_x	dispextern.h	/^  int first_visible_x, last_visible_x;$/;"	m	struct:it	access:public
last_visible_y	dispextern.h	/^  int last_visible_y;$/;"	m	struct:it	access:public
last_window_start	buffer.h	/^  ptrdiff_t last_window_start;$/;"	m	struct:buffer	access:public
lbearing	composite.h	/^  short lbearing, rbearing;$/;"	m	struct:composition	access:public
lbearing	font.h	/^  short lbearing, rbearing, width, ascent, descent;$/;"	m	struct:font_metrics	access:public
lbearing	nsgui.h	/^  int lbearing;$/;"	m	struct:_XCharStruct	access:public
lbearing	w32font.h	/^  short lbearing, rbearing, width, ascent, descent;$/;"	m	struct:w32_metric_cache	access:public
lca	unexmacosx.c	/^static struct load_command **lca;$/;"	v	typeref:struct:load_command	file:
lcdfilter	xsettings.c	/^  int rgba, lcdfilter, hintstyle;$/;"	m	struct:xsettings	file:	access:public
lcid	w32proc.c	/^  (Lisp_Object lcid, Lisp_Object longform)$/;"	v
LC_ALL	Makefile	/^	LC_ALL=C $(RUN_TEMACS) -batch $(BUILD_DETAILS) -l loadup dump$/;"	m
LC_COLLATE	sysdep.c	3789;"	d	file:
LC_COLLATE_MASK	sysdep.c	3792;"	d	file:
LC_CTYPE	sysdep.c	3795;"	d	file:
LC_CTYPE_MASK	sysdep.c	3798;"	d	file:
LC_DATA_IN_CODE	unexmacosx.c	124;"	d	file:
LC_SEGMENT	unexmacosx.c	134;"	d	file:
LC_SEGMENT	unexmacosx.c	135;"	d	file:
LDFLAGS	Makefile	/^LDFLAGS =   -L..\/.\/rust_src\/target\/${CARGO_BUILD_DIR}$/;"	m
LD_SWITCH_SYSTEM	Makefile	/^LD_SWITCH_SYSTEM=$/;"	m
LD_SWITCH_SYSTEM_TEMACS	Makefile	/^LD_SWITCH_SYSTEM_TEMACS=-Wl,-znocombreloc $(LD_SWITCH_X_SITE_RPATH) -no-pie$/;"	m
LD_SWITCH_X_SITE	Makefile	/^LD_SWITCH_X_SITE=$/;"	m
LD_SWITCH_X_SITE_RPATH	Makefile	/^LD_SWITCH_X_SITE_RPATH=$/;"	m
le2hl	sound.c	/^le2hl (u_int32_t value)$/;"	f	file:	signature:(u_int32_t value)
le2hs	sound.c	/^le2hs (u_int16_t value)$/;"	f	file:	signature:(u_int16_t value)
LEADING_CODE_P	character.h	228;"	d
LEAF_INTERVAL_P	intervals.h	85;"	d
leave_crit	w32term.h	701;"	d
left	alloc.c	/^  struct mem_node *left, *right;$/;"	m	struct:mem_node	typeref:struct:mem_node::mem_node	file:	access:public
Left	cm.h	108;"	d
left	font.h	/^  int left;$/;"	m	struct:font_bitmap	access:public
left	intervals.h	/^  struct interval *left;	\/* Intervals which precede me.  *\/$/;"	m	struct:interval	typeref:struct:interval::interval	access:public
LEFT	w32console.c	231;"	d	file:
LEFT	w32console.c	233;"	d	file:
left	w32term.h	/^  int top, left, width, height;$/;"	m	struct:scroll_bar	access:public
left	xterm.h	/^  int top, left, width, height;$/;"	m	struct:scroll_bar	access:public
LeftCost	cm.h	131;"	d
LEFT_ANGLE_BRACKET	character.h	/^  LEFT_ANGLE_BRACKET = 0x3008,$/;"	e	enum:__anon54
left_arrow_bits	fringe.c	/^static unsigned short left_arrow_bits[] = {$/;"	v	file:
left_box_line_p	dispextern.h	/^  bool_bf left_box_line_p : 1;$/;"	m	struct:glyph	access:public
left_bracket_bits	fringe.c	/^static unsigned short left_bracket_bits[] = {$/;"	v	file:
left_col	window.c	/^  Lisp_Object left_col, top_line, total_cols, total_lines;$/;"	m	struct:saved_window	file:	access:public
left_col	window.h	/^    int left_col;$/;"	m	struct:window	access:public
LEFT_CORNER	dispextern.h	3011;"	d
left_curly_arrow_bits	fringe.c	/^static unsigned short left_curly_arrow_bits[] = {$/;"	v	file:
left_edge_cursor	nsterm.h	/^  Cursor left_edge_cursor;$/;"	m	struct:ns_output	access:public
left_edge_cursor	w32term.h	/^  Cursor left_edge_cursor;$/;"	m	struct:w32_output	access:public
left_edge_cursor	xterm.h	/^  Cursor left_edge_cursor;$/;"	m	struct:x_output	access:public
LEFT_FRINGE	fringe.c	1032;"	d	file:
left_fringe_bitmap	dispextern.h	/^  unsigned left_fringe_bitmap : FRINGE_ID_BITS;$/;"	m	struct:glyph_row	access:public
left_fringe_face_id	dispextern.h	/^  unsigned left_fringe_face_id : FACE_ID_BITS;$/;"	m	struct:glyph_row	access:public
left_fringe_offset	dispextern.h	/^  signed left_fringe_offset : FRINGE_HEIGHT_BITS;$/;"	m	struct:glyph_row	access:public
left_fringe_width	frame.h	/^  int left_fringe_width, right_fringe_width;$/;"	m	struct:frame	access:public
left_fringe_width	window.c	/^  Lisp_Object left_fringe_width, right_fringe_width, fringes_outside_margins;$/;"	m	struct:saved_window	file:	access:public
left_fringe_width	window.h	/^    int left_fringe_width;$/;"	m	struct:window	access:public
left_fringe_width_	buffer.h	/^  Lisp_Object left_fringe_width_;$/;"	m	struct:buffer	access:public
left_margin_	buffer.h	/^  Lisp_Object left_margin_;$/;"	m	struct:buffer	access:public
LEFT_MARGIN_AREA	dispextern.h	/^  LEFT_MARGIN_AREA,$/;"	e	enum:glyph_row_area
left_margin_cols	window.c	/^  Lisp_Object left_margin_cols, right_margin_cols;$/;"	m	struct:saved_window	file:	access:public
left_margin_cols	window.h	/^    int left_margin_cols;$/;"	m	struct:window	access:public
left_margin_cols_	buffer.h	/^  Lisp_Object left_margin_cols_;$/;"	m	struct:buffer	access:public
left_margin_glyphs	dispextern.h	/^  int left_margin_glyphs, right_margin_glyphs;$/;"	m	struct:glyph_matrix	access:public
left_overhang	dispextern.h	/^  int left_overhang;$/;"	m	struct:glyph_string	access:public
left_overwriting	xdisp.c	/^left_overwriting (struct glyph_string *s)$/;"	f	file:	signature:(struct glyph_string *s)
left_overwritten	xdisp.c	/^left_overwritten (struct glyph_string *s)$/;"	f	file:	signature:(struct glyph_string *s)
LEFT_POINTING_ANGLE_BRACKET	character.h	/^  LEFT_POINTING_ANGLE_BRACKET = 0x2329,$/;"	e	enum:__anon54
left_pos	frame.h	/^  int left_pos, top_pos;$/;"	m	struct:frame	access:public
LEFT_SINGLE_QUOTATION_MARK	character.h	/^  LEFT_SINGLE_QUOTATION_MARK = 0x2018,$/;"	e	enum:__anon54
LEFT_TOTAL_LENGTH	intervals.h	110;"	d
left_triangle_bits	fringe.c	/^static unsigned short left_triangle_bits[] = {$/;"	v	file:
left_user_fringe_bitmap	dispextern.h	/^  unsigned left_user_fringe_bitmap : FRINGE_ID_BITS;$/;"	m	struct:glyph_row	access:public
left_user_fringe_bitmap	dispextern.h	/^  unsigned left_user_fringe_bitmap : FRINGE_ID_BITS;$/;"	m	struct:it	access:public
left_user_fringe_face_id	dispextern.h	/^  unsigned left_user_fringe_face_id : FACE_ID_BITS;$/;"	m	struct:glyph_row	access:public
left_user_fringe_face_id	dispextern.h	/^  unsigned left_user_fringe_face_id : FACE_ID_BITS;$/;"	m	struct:it	access:public
left_width	window.c	/^  (Lisp_Object window, Lisp_Object left_width, Lisp_Object right_width)$/;"	v
left_width	window.c	/^  (Lisp_Object window, Lisp_Object left_width,$/;"	v
LEFT_WIN_PRESSED	w32term.h	777;"	d
len	dispextern.h	/^      unsigned len : 4;$/;"	m	struct:glyph::__anon110::__anon113	access:public
len	dispextern.h	/^  int c, len;$/;"	m	struct:it	access:public
len	image.c	/^  ptrdiff_t len;		\/* How big is it? *\/$/;"	m	struct:png_memory_storage	file:	access:public
len	image.c	/^  ptrdiff_t len;$/;"	m	struct:__anon84	file:	access:public
len	image.c	/^  ptrdiff_t len;$/;"	m	struct:__anon85	file:	access:public
len	process.c	/^  ptrdiff_t len;$/;"	m	struct:sockaddr_and_len	file:	access:public
length	alloc.c	/^  (Lisp_Object length, Lisp_Object init)$/;"	v
length	coding.h	/^  int length;		  \/* number of elements produced in charbuf *\/$/;"	m	struct:composition_status	access:public
LENGTH	intervals.h	101;"	d
length	sound.c	/^  u_int32_t length;$/;"	m	struct:wav_header	file:	access:public
Length	w32heap.c	/^  ULONG Length;$/;"	m	struct:_RTL_HEAP_PARAMETERS	file:	access:public
len_bytes	casefiddle.c	/^  unsigned char len_bytes;$/;"	m	struct:casing_str_buf	file:	access:public
len_chars	casefiddle.c	/^  unsigned char len_chars;$/;"	m	struct:casing_str_buf	file:	access:public
let	lisp.h	/^    } let;$/;"	m	union:specbinding	typeref:struct:specbinding::__anon33	access:public
let_shadows_buffer_binding_p	eval.c	/^let_shadows_buffer_binding_p (struct Lisp_Symbol *symbol)$/;"	f	signature:(struct Lisp_Symbol *symbol)
let_shadows_buffer_binding_p	lisp.h	/^extern bool let_shadows_buffer_binding_p (struct Lisp_Symbol *symbol);$/;"	p	signature:(struct Lisp_Symbol *symbol)
level	dispextern.h	/^  unsigned char level;$/;"	m	struct:bidi_stack	access:public
level	eval.c	/^  (Lisp_Object level, Lisp_Object flag)$/;"	v
levelstarts	syntax.c	/^    Lisp_Object levelstarts; \/* Char numbers of starts-of-expression$/;"	m	struct:lisp_parse_state	file:	access:public
level_stack	dispextern.h	/^  struct bidi_stack level_stack[BIDI_MAXDEPTH+2+1]; \/* directional status stack *\/$/;"	m	struct:bidi_it	typeref:struct:bidi_it::bidi_stack	access:public
lface	dispextern.h	/^  Lisp_Object lface[LFACE_VECTOR_SIZE];$/;"	m	struct:face	access:public
LFACEP	xfaces.c	1627;"	d	file:
lface_attribute_index	dispextern.h	/^enum lface_attribute_index$/;"	g
LFACE_BACKGROUND	xfaces.c	1612;"	d	file:
LFACE_BACKGROUND_INDEX	dispextern.h	/^  LFACE_BACKGROUND_INDEX,$/;"	e	enum:lface_attribute_index
LFACE_BOX	xfaces.c	1617;"	d	file:
LFACE_BOX_INDEX	dispextern.h	/^  LFACE_BOX_INDEX,$/;"	e	enum:lface_attribute_index
LFACE_DISTANT_FOREGROUND	xfaces.c	1621;"	d	file:
LFACE_DISTANT_FOREGROUND_INDEX	dispextern.h	/^  LFACE_DISTANT_FOREGROUND_INDEX,$/;"	e	enum:lface_attribute_index
lface_equal_p	xfaces.c	/^lface_equal_p (Lisp_Object *v1, Lisp_Object *v2)$/;"	f	file:	signature:(Lisp_Object *v1, Lisp_Object *v2)
LFACE_FAMILY	xfaces.c	1604;"	d	file:
LFACE_FAMILY_INDEX	dispextern.h	/^  LFACE_FAMILY_INDEX = 1,$/;"	e	enum:lface_attribute_index
LFACE_FONT	xfaces.c	1618;"	d	file:
LFACE_FONTSET	xfaces.c	1620;"	d	file:
LFACE_FONTSET_INDEX	dispextern.h	/^  LFACE_FONTSET_INDEX,$/;"	e	enum:lface_attribute_index
LFACE_FONT_INDEX	dispextern.h	/^  LFACE_FONT_INDEX,$/;"	e	enum:lface_attribute_index
LFACE_FOREGROUND	xfaces.c	1611;"	d	file:
LFACE_FOREGROUND_INDEX	dispextern.h	/^  LFACE_FOREGROUND_INDEX,$/;"	e	enum:lface_attribute_index
LFACE_FOUNDRY	xfaces.c	1605;"	d	file:
LFACE_FOUNDRY_INDEX	dispextern.h	/^  LFACE_FOUNDRY_INDEX,$/;"	e	enum:lface_attribute_index
lface_from_face_name	xfaces.c	/^lface_from_face_name (struct frame *f, Lisp_Object face_name, bool signal_p)$/;"	f	file:	signature:(struct frame *f, Lisp_Object face_name, bool signal_p)
lface_from_face_name_no_resolve	xfaces.c	/^lface_from_face_name_no_resolve (struct frame *f, Lisp_Object face_name,$/;"	f	file:	signature:(struct frame *f, Lisp_Object face_name, bool signal_p)
lface_fully_specified_p	xfaces.c	/^lface_fully_specified_p (Lisp_Object attrs[LFACE_VECTOR_SIZE])$/;"	f	file:	signature:(Lisp_Object attrs[LFACE_VECTOR_SIZE])
lface_hash	xfaces.c	/^lface_hash (Lisp_Object *v)$/;"	f	file:	signature:(Lisp_Object *v)
LFACE_HEIGHT	xfaces.c	1606;"	d	file:
LFACE_HEIGHT_INDEX	dispextern.h	/^  LFACE_HEIGHT_INDEX,$/;"	e	enum:lface_attribute_index
lface_id_to_name	xfaces.c	/^static Lisp_Object *lface_id_to_name;$/;"	v	file:
lface_id_to_name_size	xfaces.c	/^static ptrdiff_t lface_id_to_name_size;$/;"	v	file:
LFACE_INHERIT	xfaces.c	1619;"	d	file:
LFACE_INHERIT_INDEX	dispextern.h	/^  LFACE_INHERIT_INDEX,$/;"	e	enum:lface_attribute_index
LFACE_INVERSE	xfaces.c	1610;"	d	file:
LFACE_INVERSE_INDEX	dispextern.h	/^  LFACE_INVERSE_INDEX,$/;"	e	enum:lface_attribute_index
LFACE_OVERLINE	xfaces.c	1615;"	d	file:
LFACE_OVERLINE_INDEX	dispextern.h	/^  LFACE_OVERLINE_INDEX,$/;"	e	enum:lface_attribute_index
lface_same_font_attributes_p	xfaces.c	/^lface_same_font_attributes_p (Lisp_Object *lface1, Lisp_Object *lface2)$/;"	f	file:	signature:(Lisp_Object *lface1, Lisp_Object *lface2)
LFACE_SLANT	xfaces.c	1608;"	d	file:
LFACE_SLANT_INDEX	dispextern.h	/^  LFACE_SLANT_INDEX,$/;"	e	enum:lface_attribute_index
LFACE_STIPPLE	xfaces.c	1613;"	d	file:
LFACE_STIPPLE_INDEX	dispextern.h	/^  LFACE_STIPPLE_INDEX,$/;"	e	enum:lface_attribute_index
LFACE_STRIKE_THROUGH	xfaces.c	1616;"	d	file:
LFACE_STRIKE_THROUGH_INDEX	dispextern.h	/^  LFACE_STRIKE_THROUGH_INDEX,$/;"	e	enum:lface_attribute_index
LFACE_SWIDTH	xfaces.c	1614;"	d	file:
LFACE_SWIDTH_INDEX	dispextern.h	/^  LFACE_SWIDTH_INDEX,$/;"	e	enum:lface_attribute_index
LFACE_UNDERLINE	xfaces.c	1609;"	d	file:
LFACE_UNDERLINE_INDEX	dispextern.h	/^  LFACE_UNDERLINE_INDEX,$/;"	e	enum:lface_attribute_index
LFACE_VECTOR_SIZE	dispextern.h	/^  LFACE_VECTOR_SIZE$/;"	e	enum:lface_attribute_index
LFACE_WEIGHT	xfaces.c	1607;"	d	file:
LFACE_WEIGHT_INDEX	dispextern.h	/^  LFACE_WEIGHT_INDEX,$/;"	e	enum:lface_attribute_index
LGLYPH_ADJUSTMENT	composite.h	290;"	d
LGLYPH_ASCENT	composite.h	288;"	d
LGLYPH_CHAR	composite.h	280;"	d
LGLYPH_CODE	composite.h	281;"	d
LGLYPH_DESCENT	composite.h	289;"	d
LGLYPH_FROM	composite.h	278;"	d
lglyph_indices	composite.h	/^enum lglyph_indices$/;"	g
LGLYPH_IX_ADJUSTMENT	composite.h	/^    LGLYPH_IX_ASCENT, LGLYPH_IX_DESCENT, LGLYPH_IX_ADJUSTMENT,$/;"	e	enum:lglyph_indices
LGLYPH_IX_ASCENT	composite.h	/^    LGLYPH_IX_ASCENT, LGLYPH_IX_DESCENT, LGLYPH_IX_ADJUSTMENT,$/;"	e	enum:lglyph_indices
LGLYPH_IX_CHAR	composite.h	/^    LGLYPH_IX_FROM, LGLYPH_IX_TO,  LGLYPH_IX_CHAR, LGLYPH_IX_CODE,$/;"	e	enum:lglyph_indices
LGLYPH_IX_CODE	composite.h	/^    LGLYPH_IX_FROM, LGLYPH_IX_TO,  LGLYPH_IX_CHAR, LGLYPH_IX_CODE,$/;"	e	enum:lglyph_indices
LGLYPH_IX_DESCENT	composite.h	/^    LGLYPH_IX_ASCENT, LGLYPH_IX_DESCENT, LGLYPH_IX_ADJUSTMENT,$/;"	e	enum:lglyph_indices
LGLYPH_IX_FROM	composite.h	/^    LGLYPH_IX_FROM, LGLYPH_IX_TO,  LGLYPH_IX_CHAR, LGLYPH_IX_CODE,$/;"	e	enum:lglyph_indices
LGLYPH_IX_LBEARING	composite.h	/^    LGLYPH_IX_WIDTH, LGLYPH_IX_LBEARING, LGLYPH_IX_RBEARING,$/;"	e	enum:lglyph_indices
LGLYPH_IX_RBEARING	composite.h	/^    LGLYPH_IX_WIDTH, LGLYPH_IX_LBEARING, LGLYPH_IX_RBEARING,$/;"	e	enum:lglyph_indices
LGLYPH_IX_TO	composite.h	/^    LGLYPH_IX_FROM, LGLYPH_IX_TO,  LGLYPH_IX_CHAR, LGLYPH_IX_CODE,$/;"	e	enum:lglyph_indices
LGLYPH_IX_WIDTH	composite.h	/^    LGLYPH_IX_WIDTH, LGLYPH_IX_LBEARING, LGLYPH_IX_RBEARING,$/;"	e	enum:lglyph_indices
LGLYPH_LBEARING	composite.h	286;"	d
LGLYPH_NEW	composite.h	277;"	d
LGLYPH_RBEARING	composite.h	287;"	d
LGLYPH_SET_ADJUSTMENT	composite.h	304;"	d
LGLYPH_SET_ASCENT	composite.h	302;"	d
LGLYPH_SET_CHAR	composite.h	293;"	d
LGLYPH_SET_CODE	composite.h	295;"	d
LGLYPH_SET_DESCENT	composite.h	303;"	d
LGLYPH_SET_FROM	composite.h	291;"	d
LGLYPH_SET_LBEARING	composite.h	300;"	d
LGLYPH_SET_RBEARING	composite.h	301;"	d
LGLYPH_SET_TO	composite.h	292;"	d
LGLYPH_SET_WIDTH	composite.h	299;"	d
LGLYPH_SIZE	composite.h	/^    LGLYPH_SIZE$/;"	e	enum:lglyph_indices
LGLYPH_TO	composite.h	279;"	d
LGLYPH_WADJUST	composite.h	310;"	d
LGLYPH_WIDTH	composite.h	285;"	d
LGLYPH_XOFF	composite.h	306;"	d
LGLYPH_YOFF	composite.h	308;"	d
LGSTRING_CHAR	composite.h	249;"	d
LGSTRING_CHAR_LEN	composite.h	250;"	d
LGSTRING_FONT	composite.h	248;"	d
LGSTRING_GLYPH	composite.h	259;"	d
lgstring_glyph_addr	composite.h	/^lgstring_glyph_addr (Lisp_Object lgs, ptrdiff_t idx)$/;"	f	signature:(Lisp_Object lgs, ptrdiff_t idx)
LGSTRING_GLYPH_LEN	composite.h	258;"	d
LGSTRING_HEADER	composite.h	245;"	d
LGSTRING_ID	composite.h	255;"	d
LGSTRING_SET_CHAR	composite.h	253;"	d
LGSTRING_SET_FONT	composite.h	252;"	d
LGSTRING_SET_GLYPH	composite.h	260;"	d
LGSTRING_SET_HEADER	composite.h	246;"	d
LGSTRING_SET_ID	composite.h	256;"	d
lib	Makefile	/^lib = ..\/lib$/;"	m
LIBEGNU_ARCHIVE	Makefile	/^LIBEGNU_ARCHIVE = $(lib)\/lib$(if $(HYBRID_MALLOC),e)gnu.a$/;"	m
LIBES	Makefile	/^LIBES = $(LIBS) $(W32_LIBS) $(LIBS_GNUSTEP) $(LIBX_BASE) $(LIBIMAGE) \\$/;"	m
LIBGNUTLS_CFLAGS	Makefile	/^LIBGNUTLS_CFLAGS = -isystem \/usr\/include\/p11-kit-1$/;"	m
LIBGNUTLS_LIBS	Makefile	/^LIBGNUTLS_LIBS = -lgnutls$/;"	m
LIBGPM	Makefile	/^LIBGPM = $/;"	m
LIBIMAGE	Makefile	/^LIBIMAGE=-ltiff -ljpeg -lpng16 -lgif -lXpm$/;"	m
LIBMODULES	Makefile	/^LIBMODULES = $/;"	m
LIBOBJS	Makefile	/^LIBOBJS = $/;"	m
LIBOTF_CFLAGS	Makefile	/^LIBOTF_CFLAGS = $/;"	m
LIBOTF_LIBS	Makefile	/^LIBOTF_LIBS = $/;"	m
libotf_positioning_type	ftfont.c	/^  unsigned int libotf_positioning_type;$/;"	m	struct:__anon126	file:	access:public
LIBREMACS_ARCHIVE	Makefile	/^LIBREMACS_ARCHIVE=$(rust_srcdir)\/target\/$(CARGO_BUILD_DIR)\/libremacs.a$/;"	m
LIBSELINUX_LIBS	Makefile	/^LIBSELINUX_LIBS = $/;"	m
LIBSOUND	Makefile	/^LIBSOUND= $/;"	m
libsrc	Makefile	/^libsrc = ..\/lib-src$/;"	m
LIBSYSTEMD_CFLAGS	Makefile	/^LIBSYSTEMD_CFLAGS = $/;"	m
LIBSYSTEMD_LIBS	Makefile	/^LIBSYSTEMD_LIBS = $/;"	m
LIBS_GNUSTEP	Makefile	/^LIBS_GNUSTEP=$(patsubst -specs=%-hardened-ld,,)$/;"	m
LIBS_SYSTEM	Makefile	/^LIBS_SYSTEM=$/;"	m
LIBS_TERMCAP	Makefile	/^LIBS_TERMCAP=-ltinfo$/;"	m
LIBXMENU	Makefile	/^LIBXMENU=$/;"	m
LIBXML2_CFLAGS	Makefile	/^LIBXML2_CFLAGS = -isystem \/usr\/include\/libxml2$/;"	m
LIBXML2_LIBS	Makefile	/^LIBXML2_LIBS = -lxml2$/;"	m
libxml2_loaded_p	xml.c	/^libxml2_loaded_p (void)$/;"	f	file:	signature:(void)
LIBXMU	Makefile	/^LIBXMU=$/;"	m
LIBXSM	Makefile	/^LIBXSM=-lSM -lICE$/;"	m
LIBXT	Makefile	/^LIBXT=$(TOOLKIT_LIBW) $(LIBXT_OTHER)$/;"	m
LIBXTR6	Makefile	/^LIBXTR6=$/;"	m
LIBXT_OTHER	Makefile	/^LIBXT_OTHER=$(LIBXSM)$/;"	m
LIBX_BASE	Makefile	/^LIBX_BASE=$(LIBXMENU) $(LD_SWITCH_X_SITE)$/;"	m
LIBX_EXTRA	Makefile	/^LIBX_EXTRA=-lX11 $(XCB_LIBS) $(XFT_LIBS)$/;"	m
LIBX_OTHER	Makefile	/^LIBX_OTHER=$(LIBXT) $(LIBX_EXTRA)$/;"	m
LIBZ	Makefile	/^LIBZ = -lz$/;"	m
LIB_ACL	Makefile	/^LIB_ACL=$/;"	m
lib_child_handler	process.c	/^static signal_handler_t volatile lib_child_handler;$/;"	v	file:
LIB_CLOCK_GETTIME	Makefile	/^LIB_CLOCK_GETTIME=$/;"	m
LIB_EACCESS	Makefile	/^LIB_EACCESS=$/;"	m
LIB_EXECINFO	Makefile	/^LIB_EXECINFO=$/;"	m
LIB_FDATASYNC	Makefile	/^LIB_FDATASYNC=$/;"	m
LIB_MATH	Makefile	/^LIB_MATH=-lm$/;"	m
LIB_PTHREAD	Makefile	/^LIB_PTHREAD=-lpthread$/;"	m
LIB_REMACS	Makefile	/^LIB_REMACS = -lremacs -ldl -lrt$/;"	m
LIB_TIMER_TIME	Makefile	/^LIB_TIMER_TIME=-lrt$/;"	m
limit	composite.c	/^  (Lisp_Object pos, Lisp_Object limit, Lisp_Object string, Lisp_Object detail_p)$/;"	v
lim_data	vm-limit.c	/^static size_t lim_data;$/;"	v	file:
line	window.c	/^  (Lisp_Object line, Lisp_Object window)$/;"	v
lines	indent.c	/^  (Lisp_Object lines, Lisp_Object window, Lisp_Object cur_col)$/;"	v
line_bottom_y	dispextern.h	/^int line_bottom_y (struct it *);$/;"	p	signature:(struct it *)
line_bottom_y	xdisp.c	/^line_bottom_y (struct it *it)$/;"	f	signature:(struct it *it)
line_draw_cost	dispnew.c	/^line_draw_cost (struct frame *f, struct glyph_matrix *matrix, int vpos)$/;"	f	file:	signature:(struct frame *f, struct glyph_matrix *matrix, int vpos)
line_hash_code	dispnew.c	/^line_hash_code (struct frame *f, struct glyph_row *row)$/;"	f	file:	signature:(struct frame *f, struct glyph_row *row)
line_height	frame.h	/^  int line_height;$/;"	m	struct:frame	access:public
line_ins_del	scroll.c	/^line_ins_del (struct frame *frame, int ov1, int pf1, int ovn, int pfn,$/;"	f	file:	signature:(struct frame *frame, int ov1, int pf1, int ovn, int pfn, int *ov, int *mf)
line_ins_del_ok	termchar.h	/^  bool_bf line_ins_del_ok : 1;$/;"	m	struct:tty_display_info	access:public
line_number_displayed	xdisp.c	/^static bool line_number_displayed;$/;"	v	file:
line_number_display_limit_width	globals.h	845;"	d
line_number_display_width	indent.c	/^line_number_display_width (struct window *w, int *width, int *pixel_width)$/;"	f	file:	signature:(struct window *w, int *width, int *pixel_width)
line_wrap	dispextern.h	/^    enum line_wrap_method line_wrap;$/;"	m	struct:it::iterator_stack_entry	typeref:enum:it::iterator_stack_entry::line_wrap_method	access:public
line_wrap	dispextern.h	/^  enum line_wrap_method line_wrap;$/;"	m	struct:it	typeref:enum:it::line_wrap_method	access:public
line_wrap_method	dispextern.h	/^enum line_wrap_method$/;"	g
LINGUISTIC_IGNORECASE	w32proc.c	3564;"	d	file:
link	w32.c	55;"	d	file:
linkname	fileio.c	/^  (Lisp_Object target, Lisp_Object linkname, Lisp_Object ok_if_already_exists)$/;"	v
LINKS_MIGHT_NOT_WORK	filelock.c	/^enum { LINKS_MIGHT_NOT_WORK = EPERM };$/;"	e	enum:__anon53	file:
LINUX_SYSINFO_UNIT	config.h	1380;"	d
lisp	Makefile	/^lisp = $(addprefix ${lispsource}\/,${shortlisp})$/;"	m
lispintdir	Makefile	/^lispintdir = ${lispsource}\/international$/;"	m
lispsource	Makefile	/^lispsource = $(top_srcdir)\/lisp$/;"	m
lispstpcpy	lisp.h	/^lispstpcpy (char *dest, Lisp_Object string)$/;"	f	signature:(char *dest, Lisp_Object string)
LISPSYM_INITIALLY	lisp.h	727;"	d
lispy_accent_codes	keyboard.c	/^static const int lispy_accent_codes[] =$/;"	v	file:
lispy_accent_keys	keyboard.c	/^static const char *const lispy_accent_keys[] =$/;"	v	file:
lispy_antialias_type	w32font.c	/^lispy_antialias_type (BYTE type)$/;"	f	file:	signature:(BYTE type)
lispy_antialias_type	w32font.c	/^static Lisp_Object lispy_antialias_type (BYTE);$/;"	p	file:
lispy_drag_n_drop_names	keyboard.c	/^static const char *const lispy_drag_n_drop_names[] =$/;"	v	file:
lispy_file_action	w32term.c	/^lispy_file_action (DWORD action)$/;"	f	signature:(DWORD action)
lispy_file_action	w32term.h	/^extern Lisp_Object lispy_file_action (DWORD);$/;"	p	signature:(DWORD)
lispy_function_keys	keyboard.c	/^const char *const lispy_function_keys[] =$/;"	v
lispy_function_keys	keyboard.c	/^static const char *const lispy_function_keys[] =$/;"	v	file:
lispy_modifier_list	keyboard.c	/^lispy_modifier_list (int modifiers)$/;"	f	file:	signature:(int modifiers)
lispy_multimedia_keys	keyboard.c	/^static const char *const lispy_multimedia_keys[] =$/;"	v	file:
lispy_wheel_names	keyboard.c	/^static const char *const lispy_wheel_names[] =$/;"	v	file:
lisp_align_free	alloc.c	/^lisp_align_free (void *block)$/;"	f	file:	signature:(void *block)
lisp_align_malloc	alloc.c	/^lisp_align_malloc (size_t nbytes, enum mem_type type)$/;"	f	file:	signature:(size_t nbytes, enum mem_type type)
Lisp_Bits	alloc.c	/^  enum Lisp_Bits Lisp_Bits;$/;"	m	union:__anon13	typeref:enum:__anon13::Lisp_Bits	file:	access:public
Lisp_Bits	lisp.h	/^enum Lisp_Bits$/;"	g
Lisp_Boolfwd	lisp.h	/^struct Lisp_Boolfwd$/;"	s
Lisp_Boolfwd::boolvar	lisp.h	/^    bool *boolvar;$/;"	m	struct:Lisp_Boolfwd	access:public
Lisp_Boolfwd::type	lisp.h	/^    enum Lisp_Fwd_Type type;	\/* = Lisp_Fwd_Bool *\/$/;"	m	struct:Lisp_Boolfwd	typeref:enum:Lisp_Boolfwd::Lisp_Fwd_Type	access:public
Lisp_Bool_Vector	lisp.h	/^struct Lisp_Bool_Vector$/;"	s
Lisp_Bool_Vector::data	lisp.h	/^    bits_word data[FLEXIBLE_ARRAY_MEMBER];$/;"	m	struct:Lisp_Bool_Vector	access:public
Lisp_Bool_Vector::header	lisp.h	/^    struct vectorlike_header header;$/;"	m	struct:Lisp_Bool_Vector	typeref:struct:Lisp_Bool_Vector::vectorlike_header	access:public
Lisp_Bool_Vector::size	lisp.h	/^    EMACS_INT size;$/;"	m	struct:Lisp_Bool_Vector	access:public
Lisp_Buffer_Local_Value	lisp.h	/^struct Lisp_Buffer_Local_Value$/;"	s
Lisp_Buffer_Local_Value::defcell	lisp.h	/^    Lisp_Object defcell;$/;"	m	struct:Lisp_Buffer_Local_Value	access:public
Lisp_Buffer_Local_Value::found	lisp.h	/^    bool_bf found : 1;$/;"	m	struct:Lisp_Buffer_Local_Value	access:public
Lisp_Buffer_Local_Value::fwd	lisp.h	/^    union Lisp_Fwd *fwd;	\/* Should never be (Buffer|Kboard)_Objfwd.  *\/$/;"	m	struct:Lisp_Buffer_Local_Value	typeref:union:Lisp_Buffer_Local_Value::Lisp_Fwd	access:public
Lisp_Buffer_Local_Value::local_if_set	lisp.h	/^    bool_bf local_if_set : 1;$/;"	m	struct:Lisp_Buffer_Local_Value	access:public
Lisp_Buffer_Local_Value::valcell	lisp.h	/^    Lisp_Object valcell;$/;"	m	struct:Lisp_Buffer_Local_Value	access:public
Lisp_Buffer_Local_Value::where	lisp.h	/^    Lisp_Object where;$/;"	m	struct:Lisp_Buffer_Local_Value	access:public
Lisp_Buffer_Objfwd	lisp.h	/^struct Lisp_Buffer_Objfwd$/;"	s
Lisp_Buffer_Objfwd::offset	lisp.h	/^    int offset;$/;"	m	struct:Lisp_Buffer_Objfwd	access:public
Lisp_Buffer_Objfwd::predicate	lisp.h	/^    Lisp_Object predicate;$/;"	m	struct:Lisp_Buffer_Objfwd	access:public
Lisp_Buffer_Objfwd::type	lisp.h	/^    enum Lisp_Fwd_Type type;	\/* = Lisp_Fwd_Buffer_Obj *\/$/;"	m	struct:Lisp_Buffer_Objfwd	typeref:enum:Lisp_Buffer_Objfwd::Lisp_Fwd_Type	access:public
Lisp_Char_Table	lisp.h	/^struct Lisp_Char_Table$/;"	s
Lisp_Char_Table::ascii	lisp.h	/^    Lisp_Object ascii;$/;"	m	struct:Lisp_Char_Table	access:public
Lisp_Char_Table::contents	lisp.h	/^    Lisp_Object contents[(1 << CHARTAB_SIZE_BITS_0)];$/;"	m	struct:Lisp_Char_Table	access:public
Lisp_Char_Table::defalt	lisp.h	/^    Lisp_Object defalt;$/;"	m	struct:Lisp_Char_Table	access:public
Lisp_Char_Table::extras	lisp.h	/^    Lisp_Object extras[FLEXIBLE_ARRAY_MEMBER];$/;"	m	struct:Lisp_Char_Table	access:public
Lisp_Char_Table::header	lisp.h	/^    struct vectorlike_header header;$/;"	m	struct:Lisp_Char_Table	typeref:struct:Lisp_Char_Table::vectorlike_header	access:public
Lisp_Char_Table::parent	lisp.h	/^    Lisp_Object parent;$/;"	m	struct:Lisp_Char_Table	access:public
Lisp_Char_Table::purpose	lisp.h	/^    Lisp_Object purpose;$/;"	m	struct:Lisp_Char_Table	access:public
Lisp_Compiled	alloc.c	/^  enum Lisp_Compiled Lisp_Compiled;$/;"	m	union:__anon13	typeref:enum:__anon13::Lisp_Compiled	file:	access:public
Lisp_Compiled	lisp.h	/^enum Lisp_Compiled$/;"	g
Lisp_CondVar	thread.h	/^struct Lisp_CondVar$/;"	s
Lisp_CondVar::cond	thread.h	/^  sys_cond_t cond;$/;"	m	struct:Lisp_CondVar	access:public
Lisp_CondVar::header	thread.h	/^  struct vectorlike_header header;$/;"	m	struct:Lisp_CondVar	typeref:struct:Lisp_CondVar::vectorlike_header	access:public
Lisp_CondVar::mutex	thread.h	/^  Lisp_Object mutex;$/;"	m	struct:Lisp_CondVar	access:public
Lisp_CondVar::name	thread.h	/^  Lisp_Object name;$/;"	m	struct:Lisp_CondVar	access:public
Lisp_Cons	lisp.h	/^    Lisp_Cons = USE_LSB_TAG ? 3 : 6,$/;"	e	enum:Lisp_Type
Lisp_Cons	lisp.h	/^struct GCALIGNED Lisp_Cons$/;"	s
Lisp_Cons::car	lisp.h	/^    Lisp_Object car;$/;"	m	struct:Lisp_Cons	access:public
Lisp_Cons::u	lisp.h	/^    } u;$/;"	m	struct:Lisp_Cons	typeref:union:Lisp_Cons::__anon19	access:public
Lisp_Cons::__anon19::cdr	lisp.h	/^      Lisp_Object cdr;$/;"	m	union:Lisp_Cons::__anon19	access:public
Lisp_Cons::__anon19::chain	lisp.h	/^      struct Lisp_Cons *chain;$/;"	m	union:Lisp_Cons::__anon19	typeref:struct:Lisp_Cons::__anon19::Lisp_Cons	access:public
lisp_data	dispextern.h	/^  Lisp_Object lisp_data;$/;"	m	struct:image	access:public
lisp_data_to_selection_data	xselect.c	/^lisp_data_to_selection_data (struct x_display_info *dpyinfo,$/;"	f	file:	signature:(struct x_display_info *dpyinfo, Lisp_Object obj, struct selection_data *cs)
lisp_data_to_selection_data	xselect.c	/^static void lisp_data_to_selection_data (struct x_display_info *, Lisp_Object,$/;"	p	file:	signature:(struct x_display_info *, Lisp_Object, struct selection_data *)
lisp_error_handler	w32select.c	/^lisp_error_handler (Lisp_Object error)$/;"	f	file:	signature:(Lisp_Object error)
lisp_error_handler	w32select.c	/^static Lisp_Object lisp_error_handler (Lisp_Object error);$/;"	p	file:	signature:(Lisp_Object error)
lisp_eval_depth	thread.h	96;"	d
lisp_file_lexically_bound_p	lread.c	/^lisp_file_lexically_bound_p (Lisp_Object readcharfun)$/;"	f	file:	signature:(Lisp_Object readcharfun)
Lisp_Finalizer	lisp.h	/^struct Lisp_Finalizer$/;"	s
Lisp_Finalizer::base	lisp.h	/^    struct Lisp_Misc_Any base;$/;"	m	struct:Lisp_Finalizer	typeref:struct:Lisp_Finalizer::Lisp_Misc_Any	access:public
Lisp_Finalizer::function	lisp.h	/^    Lisp_Object function;$/;"	m	struct:Lisp_Finalizer	access:public
Lisp_Finalizer::next	lisp.h	/^    struct Lisp_Finalizer *next;$/;"	m	struct:Lisp_Finalizer	typeref:struct:Lisp_Finalizer::Lisp_Finalizer	access:public
Lisp_Finalizer::prev	lisp.h	/^    struct Lisp_Finalizer *prev;$/;"	m	struct:Lisp_Finalizer	typeref:struct:Lisp_Finalizer::Lisp_Finalizer	access:public
Lisp_Float	lisp.h	/^    Lisp_Float = 7$/;"	e	enum:Lisp_Type
Lisp_Float	lisp.h	/^struct Lisp_Float$/;"	s
Lisp_Float::u	lisp.h	/^    } u;$/;"	m	struct:Lisp_Float	typeref:union:Lisp_Float::__anon27	access:public
Lisp_Float::__anon27::chain	lisp.h	/^      struct Lisp_Float *chain;$/;"	m	union:Lisp_Float::__anon27	typeref:struct:Lisp_Float::__anon27::Lisp_Float	access:public
Lisp_Float::__anon27::data	lisp.h	/^      double data;$/;"	m	union:Lisp_Float::__anon27	access:public
lisp_free	alloc.c	/^lisp_free (void *block)$/;"	f	file:	signature:(void *block)
Lisp_Free	lisp.h	/^struct Lisp_Free$/;"	s
Lisp_Free::chain	lisp.h	/^    union Lisp_Misc *chain;$/;"	m	struct:Lisp_Free	typeref:union:Lisp_Free::Lisp_Misc	access:public
Lisp_Free::gcmarkbit	lisp.h	/^    bool_bf gcmarkbit : 1;$/;"	m	struct:Lisp_Free	access:public
Lisp_Free::spacer	lisp.h	/^    unsigned spacer : 15;$/;"	m	struct:Lisp_Free	access:public
Lisp_Free::type	lisp.h	/^    ENUM_BF (Lisp_Misc_Type) type : 16;	\/* = Lisp_Misc_Free *\/$/;"	m	struct:Lisp_Free	access:public
Lisp_Fwd	lisp.h	/^union Lisp_Fwd$/;"	u
Lisp_Fwd::u_boolfwd	lisp.h	/^    struct Lisp_Boolfwd u_boolfwd;$/;"	m	union:Lisp_Fwd	typeref:struct:Lisp_Fwd::Lisp_Boolfwd	access:public
Lisp_Fwd::u_buffer_objfwd	lisp.h	/^    struct Lisp_Buffer_Objfwd u_buffer_objfwd;$/;"	m	union:Lisp_Fwd	typeref:struct:Lisp_Fwd::Lisp_Buffer_Objfwd	access:public
Lisp_Fwd::u_intfwd	lisp.h	/^    struct Lisp_Intfwd u_intfwd;$/;"	m	union:Lisp_Fwd	typeref:struct:Lisp_Fwd::Lisp_Intfwd	access:public
Lisp_Fwd::u_kboard_objfwd	lisp.h	/^    struct Lisp_Kboard_Objfwd u_kboard_objfwd;$/;"	m	union:Lisp_Fwd	typeref:struct:Lisp_Fwd::Lisp_Kboard_Objfwd	access:public
Lisp_Fwd::u_objfwd	lisp.h	/^    struct Lisp_Objfwd u_objfwd;$/;"	m	union:Lisp_Fwd	typeref:struct:Lisp_Fwd::Lisp_Objfwd	access:public
Lisp_Fwd_Bool	lisp.h	/^    Lisp_Fwd_Bool,		\/* Fwd to a C boolean var.  *\/$/;"	e	enum:Lisp_Fwd_Type
Lisp_Fwd_Buffer_Obj	lisp.h	/^    Lisp_Fwd_Buffer_Obj,	\/* Fwd to a Lisp_Object field of buffers.  *\/$/;"	e	enum:Lisp_Fwd_Type
Lisp_Fwd_Int	lisp.h	/^    Lisp_Fwd_Int,		\/* Fwd to a C `int' variable.  *\/$/;"	e	enum:Lisp_Fwd_Type
Lisp_Fwd_Kboard_Obj	lisp.h	/^    Lisp_Fwd_Kboard_Obj		\/* Fwd to a Lisp_Object field of kboards.  *\/$/;"	e	enum:Lisp_Fwd_Type
Lisp_Fwd_Obj	lisp.h	/^    Lisp_Fwd_Obj,		\/* Fwd to a C Lisp_Object variable.  *\/$/;"	e	enum:Lisp_Fwd_Type
Lisp_Fwd_Type	lisp.h	/^enum Lisp_Fwd_Type$/;"	g
Lisp_Hash_Table	lisp.h	/^struct Lisp_Hash_Table$/;"	s
Lisp_Hash_Table::count	lisp.h	/^  ptrdiff_t count;$/;"	m	struct:Lisp_Hash_Table	access:public
Lisp_Hash_Table::hash	lisp.h	/^  Lisp_Object hash;$/;"	m	struct:Lisp_Hash_Table	access:public
Lisp_Hash_Table::header	lisp.h	/^  struct vectorlike_header header;$/;"	m	struct:Lisp_Hash_Table	typeref:struct:Lisp_Hash_Table::vectorlike_header	access:public
Lisp_Hash_Table::index	lisp.h	/^  Lisp_Object index;$/;"	m	struct:Lisp_Hash_Table	access:public
Lisp_Hash_Table::key_and_value	lisp.h	/^  Lisp_Object key_and_value;$/;"	m	struct:Lisp_Hash_Table	access:public
Lisp_Hash_Table::next	lisp.h	/^  Lisp_Object next;$/;"	m	struct:Lisp_Hash_Table	access:public
Lisp_Hash_Table::next_free	lisp.h	/^  ptrdiff_t next_free;$/;"	m	struct:Lisp_Hash_Table	access:public
Lisp_Hash_Table::next_weak	lisp.h	/^  struct Lisp_Hash_Table *next_weak;$/;"	m	struct:Lisp_Hash_Table	typeref:struct:Lisp_Hash_Table::Lisp_Hash_Table	access:public
Lisp_Hash_Table::pure	lisp.h	/^  bool pure;$/;"	m	struct:Lisp_Hash_Table	access:public
Lisp_Hash_Table::rehash_size	lisp.h	/^  float rehash_size;$/;"	m	struct:Lisp_Hash_Table	access:public
Lisp_Hash_Table::rehash_threshold	lisp.h	/^  float rehash_threshold;$/;"	m	struct:Lisp_Hash_Table	access:public
Lisp_Hash_Table::test	lisp.h	/^  struct hash_table_test test;$/;"	m	struct:Lisp_Hash_Table	typeref:struct:Lisp_Hash_Table::hash_table_test	access:public
Lisp_Hash_Table::weak	lisp.h	/^  Lisp_Object weak;$/;"	m	struct:Lisp_Hash_Table	access:public
lisp_h_check_cons_list	lisp.h	320;"	d
lisp_h_CHECK_NUMBER	lisp.h	295;"	d
lisp_h_CHECK_SYMBOL	lisp.h	296;"	d
lisp_h_CHECK_TYPE	lisp.h	297;"	d
lisp_h_CONSP	lisp.h	299;"	d
lisp_h_EQ	lisp.h	300;"	d
lisp_h_FLOATP	lisp.h	301;"	d
lisp_h_INTEGERP	lisp.h	302;"	d
lisp_h_make_number	lisp.h	323;"	d
lisp_h_MARKERP	lisp.h	303;"	d
lisp_h_MISCP	lisp.h	304;"	d
lisp_h_NILP	lisp.h	305;"	d
lisp_h_SET_SYMBOL_VAL	lisp.h	306;"	d
lisp_h_SYMBOLP	lisp.h	312;"	d
lisp_h_SYMBOL_CONSTANT_P	lisp.h	308;"	d
lisp_h_SYMBOL_TRAPPED_WRITE_P	lisp.h	309;"	d
lisp_h_SYMBOL_VAL	lisp.h	310;"	d
lisp_h_VECTORLIKEP	lisp.h	313;"	d
lisp_h_XCAR	lisp.h	314;"	d
lisp_h_XCDR	lisp.h	315;"	d
lisp_h_XCONS	lisp.h	316;"	d
lisp_h_XFASTINT	lisp.h	325;"	d
lisp_h_XHASH	lisp.h	318;"	d
lisp_h_XIL	lisp.h	294;"	d
lisp_h_XINT	lisp.h	326;"	d
lisp_h_XLI	lisp.h	293;"	d
lisp_h_XSYMBOL	lisp.h	327;"	d
lisp_h_XTYPE	lisp.h	331;"	d
lisp_h_XUNTAG	lisp.h	332;"	d
LISP_INITIALLY	lisp.h	528;"	d
Lisp_Int0	lisp.h	/^    Lisp_Int0 = 2,$/;"	e	enum:Lisp_Type
Lisp_Int1	lisp.h	/^    Lisp_Int1 = USE_LSB_TAG ? 6 : 3,$/;"	e	enum:Lisp_Type
Lisp_Intfwd	lisp.h	/^struct Lisp_Intfwd$/;"	s
Lisp_Intfwd::intvar	lisp.h	/^    EMACS_INT *intvar;$/;"	m	struct:Lisp_Intfwd	access:public
Lisp_Intfwd::type	lisp.h	/^    enum Lisp_Fwd_Type type;	\/* = Lisp_Fwd_Int *\/$/;"	m	struct:Lisp_Intfwd	typeref:enum:Lisp_Intfwd::Lisp_Fwd_Type	access:public
Lisp_Kboard_Objfwd	lisp.h	/^struct Lisp_Kboard_Objfwd$/;"	s
Lisp_Kboard_Objfwd::offset	lisp.h	/^    int offset;$/;"	m	struct:Lisp_Kboard_Objfwd	access:public
Lisp_Kboard_Objfwd::type	lisp.h	/^    enum Lisp_Fwd_Type type;	\/* = Lisp_Fwd_Kboard_Obj *\/$/;"	m	struct:Lisp_Kboard_Objfwd	typeref:enum:Lisp_Kboard_Objfwd::Lisp_Fwd_Type	access:public
lisp_malloc	alloc.c	/^lisp_malloc (size_t nbytes, enum mem_type type)$/;"	f	file:	signature:(size_t nbytes, enum mem_type type)
Lisp_Marker	lisp.h	/^struct Lisp_Marker$/;"	s
Lisp_Marker::buffer	lisp.h	/^  struct buffer *buffer;$/;"	m	struct:Lisp_Marker	typeref:struct:Lisp_Marker::buffer	access:public
Lisp_Marker::bytepos	lisp.h	/^  ptrdiff_t bytepos;$/;"	m	struct:Lisp_Marker	access:public
Lisp_Marker::charpos	lisp.h	/^  ptrdiff_t charpos;$/;"	m	struct:Lisp_Marker	access:public
Lisp_Marker::gcmarkbit	lisp.h	/^  bool_bf gcmarkbit : 1;$/;"	m	struct:Lisp_Marker	access:public
Lisp_Marker::insertion_type	lisp.h	/^  bool_bf insertion_type : 1;$/;"	m	struct:Lisp_Marker	access:public
Lisp_Marker::need_adjustment	lisp.h	/^  bool_bf need_adjustment : 1;$/;"	m	struct:Lisp_Marker	access:public
Lisp_Marker::next	lisp.h	/^  struct Lisp_Marker *next;$/;"	m	struct:Lisp_Marker	typeref:struct:Lisp_Marker::Lisp_Marker	access:public
Lisp_Marker::spacer	lisp.h	/^  unsigned spacer : 13;$/;"	m	struct:Lisp_Marker	access:public
Lisp_Marker::type	lisp.h	/^  ENUM_BF (Lisp_Misc_Type) type : 16;		\/* = Lisp_Misc_Marker *\/$/;"	m	struct:Lisp_Marker	access:public
Lisp_Misc	lisp.h	/^    Lisp_Misc = 1,$/;"	e	enum:Lisp_Type
Lisp_Misc	lisp.h	/^union Lisp_Misc$/;"	u
Lisp_Misc::u_any	lisp.h	/^    struct Lisp_Misc_Any u_any;	   \/* Supertype of all Misc types.  *\/$/;"	m	union:Lisp_Misc	typeref:struct:Lisp_Misc::Lisp_Misc_Any	access:public
Lisp_Misc::u_finalizer	lisp.h	/^    struct Lisp_Finalizer u_finalizer;$/;"	m	union:Lisp_Misc	typeref:struct:Lisp_Misc::Lisp_Finalizer	access:public
Lisp_Misc::u_free	lisp.h	/^    struct Lisp_Free u_free;$/;"	m	union:Lisp_Misc	typeref:struct:Lisp_Misc::Lisp_Free	access:public
Lisp_Misc::u_marker	lisp.h	/^    struct Lisp_Marker u_marker;$/;"	m	union:Lisp_Misc	typeref:struct:Lisp_Misc::Lisp_Marker	access:public
Lisp_Misc::u_overlay	lisp.h	/^    struct Lisp_Overlay u_overlay;$/;"	m	union:Lisp_Misc	typeref:struct:Lisp_Misc::Lisp_Overlay	access:public
Lisp_Misc::u_save_value	lisp.h	/^    struct Lisp_Save_Value u_save_value;$/;"	m	union:Lisp_Misc	typeref:struct:Lisp_Misc::Lisp_Save_Value	access:public
Lisp_Misc::u_user_ptr	lisp.h	/^    struct Lisp_User_Ptr u_user_ptr;$/;"	m	union:Lisp_Misc	typeref:struct:Lisp_Misc::Lisp_User_Ptr	access:public
Lisp_Misc_Any	lisp.h	/^struct Lisp_Misc_Any		\/* Supertype of all Misc types.  *\/$/;"	s
Lisp_Misc_Any::gcmarkbit	lisp.h	/^  bool_bf gcmarkbit : 1;$/;"	m	struct:Lisp_Misc_Any	access:public
Lisp_Misc_Any::spacer	lisp.h	/^  unsigned spacer : 15;$/;"	m	struct:Lisp_Misc_Any	access:public
Lisp_Misc_Any::type	lisp.h	/^  ENUM_BF (Lisp_Misc_Type) type : 16;		\/* = Lisp_Misc_??? *\/$/;"	m	struct:Lisp_Misc_Any	access:public
Lisp_Misc_Finalizer	lisp.h	/^    Lisp_Misc_Finalizer,$/;"	e	enum:Lisp_Misc_Type
Lisp_Misc_Free	lisp.h	/^    Lisp_Misc_Free = 0x5eab,$/;"	e	enum:Lisp_Misc_Type
Lisp_Misc_Limit	lisp.h	/^    Lisp_Misc_Limit$/;"	e	enum:Lisp_Misc_Type
Lisp_Misc_Marker	lisp.h	/^    Lisp_Misc_Marker,$/;"	e	enum:Lisp_Misc_Type
Lisp_Misc_Overlay	lisp.h	/^    Lisp_Misc_Overlay,$/;"	e	enum:Lisp_Misc_Type
Lisp_Misc_Save_Value	lisp.h	/^    Lisp_Misc_Save_Value,$/;"	e	enum:Lisp_Misc_Type
Lisp_Misc_Type	lisp.h	/^enum Lisp_Misc_Type$/;"	g
Lisp_Misc_User_Ptr	lisp.h	/^    Lisp_Misc_User_Ptr,$/;"	e	enum:Lisp_Misc_Type
Lisp_Module_Function	lisp.h	/^struct Lisp_Module_Function$/;"	s
Lisp_Module_Function::data	lisp.h	/^  void *data;$/;"	m	struct:Lisp_Module_Function	access:public
Lisp_Module_Function::documentation	lisp.h	/^  Lisp_Object documentation;$/;"	m	struct:Lisp_Module_Function	access:public
Lisp_Module_Function::header	lisp.h	/^  struct vectorlike_header header;$/;"	m	struct:Lisp_Module_Function	typeref:struct:Lisp_Module_Function::vectorlike_header	access:public
Lisp_Module_Function::max_arity	lisp.h	/^  ptrdiff_t min_arity, max_arity;$/;"	m	struct:Lisp_Module_Function	access:public
Lisp_Module_Function::min_arity	lisp.h	/^  ptrdiff_t min_arity, max_arity;$/;"	m	struct:Lisp_Module_Function	access:public
Lisp_Module_Function::subr	lisp.h	/^  emacs_subr subr;$/;"	m	struct:Lisp_Module_Function	access:public
Lisp_Mutex	thread.h	/^struct Lisp_Mutex$/;"	s
Lisp_Mutex::header	thread.h	/^  struct vectorlike_header header;$/;"	m	struct:Lisp_Mutex	typeref:struct:Lisp_Mutex::vectorlike_header	access:public
Lisp_Mutex::mutex	thread.h	/^  lisp_mutex_t mutex;$/;"	m	struct:Lisp_Mutex	access:public
Lisp_Mutex::name	thread.h	/^  Lisp_Object name;$/;"	m	struct:Lisp_Mutex	access:public
lisp_mutex_destroy	thread.c	/^lisp_mutex_destroy (lisp_mutex_t *mutex)$/;"	f	file:	signature:(lisp_mutex_t *mutex)
lisp_mutex_init	thread.c	/^lisp_mutex_init (lisp_mutex_t *mutex)$/;"	f	file:	signature:(lisp_mutex_t *mutex)
lisp_mutex_lock	thread.c	/^lisp_mutex_lock (lisp_mutex_t *mutex, int new_count)$/;"	f	file:	signature:(lisp_mutex_t *mutex, int new_count)
lisp_mutex_lock_for_thread	thread.c	/^lisp_mutex_lock_for_thread (lisp_mutex_t *mutex, struct thread_state *locker,$/;"	f	file:	signature:(lisp_mutex_t *mutex, struct thread_state *locker, int new_count)
lisp_mutex_owned_p	thread.c	/^lisp_mutex_owned_p (lisp_mutex_t *mutex)$/;"	f	file:	signature:(lisp_mutex_t *mutex)
lisp_mutex_t	thread.h	/^} lisp_mutex_t;$/;"	t	typeref:struct:__anon103
lisp_mutex_unlock	thread.c	/^lisp_mutex_unlock (lisp_mutex_t *mutex)$/;"	f	file:	signature:(lisp_mutex_t *mutex)
lisp_mutex_unlock_for_wait	thread.c	/^lisp_mutex_unlock_for_wait (lisp_mutex_t *mutex)$/;"	f	file:	signature:(lisp_mutex_t *mutex)
Lisp_Object	lisp.h	/^typedef EMACS_INT Lisp_Object;$/;"	t
Lisp_Objfwd	lisp.h	/^struct Lisp_Objfwd$/;"	s
Lisp_Objfwd::objvar	lisp.h	/^    Lisp_Object *objvar;$/;"	m	struct:Lisp_Objfwd	access:public
Lisp_Objfwd::type	lisp.h	/^    enum Lisp_Fwd_Type type;	\/* = Lisp_Fwd_Obj *\/$/;"	m	struct:Lisp_Objfwd	typeref:enum:Lisp_Objfwd::Lisp_Fwd_Type	access:public
Lisp_Overlay	lisp.h	/^struct Lisp_Overlay$/;"	s
Lisp_Overlay::end	lisp.h	/^    Lisp_Object end;$/;"	m	struct:Lisp_Overlay	access:public
Lisp_Overlay::gcmarkbit	lisp.h	/^    bool_bf gcmarkbit : 1;$/;"	m	struct:Lisp_Overlay	access:public
Lisp_Overlay::next	lisp.h	/^    struct Lisp_Overlay *next;$/;"	m	struct:Lisp_Overlay	typeref:struct:Lisp_Overlay::Lisp_Overlay	access:public
Lisp_Overlay::plist	lisp.h	/^    Lisp_Object plist;$/;"	m	struct:Lisp_Overlay	access:public
Lisp_Overlay::spacer	lisp.h	/^    unsigned spacer : 15;$/;"	m	struct:Lisp_Overlay	access:public
Lisp_Overlay::start	lisp.h	/^    Lisp_Object start;$/;"	m	struct:Lisp_Overlay	access:public
Lisp_Overlay::type	lisp.h	/^    ENUM_BF (Lisp_Misc_Type) type : 16;	\/* = Lisp_Misc_Overlay *\/$/;"	m	struct:Lisp_Overlay	access:public
lisp_parse_state	syntax.c	/^struct lisp_parse_state$/;"	s	file:
lisp_parse_state::comstr_start	syntax.c	/^    ptrdiff_t comstr_start;  \/* Position of last comment\/string starter.  *\/$/;"	m	struct:lisp_parse_state	file:	access:public
lisp_parse_state::comstyle	syntax.c	/^    int comstyle;  \/* comment style a=0, or b=1, or ST_COMMENT_STYLE.  *\/$/;"	m	struct:lisp_parse_state	file:	access:public
lisp_parse_state::depth	syntax.c	/^    EMACS_INT depth;	\/* Depth at end of parsing.  *\/$/;"	m	struct:lisp_parse_state	file:	access:public
lisp_parse_state::incomment	syntax.c	/^    EMACS_INT incomment; \/* -1 if in unnestable comment else comment nesting *\/$/;"	m	struct:lisp_parse_state	file:	access:public
lisp_parse_state::instring	syntax.c	/^    int instring;  \/* -1 if not within string, else desired terminator.  *\/$/;"	m	struct:lisp_parse_state	file:	access:public
lisp_parse_state::levelstarts	syntax.c	/^    Lisp_Object levelstarts; \/* Char numbers of starts-of-expression$/;"	m	struct:lisp_parse_state	file:	access:public
lisp_parse_state::location	syntax.c	/^    ptrdiff_t location;	     \/* Char number at which parsing stopped.  *\/$/;"	m	struct:lisp_parse_state	file:	access:public
lisp_parse_state::location_byte	syntax.c	/^    ptrdiff_t location_byte; \/* Corresponding byte position.  *\/$/;"	m	struct:lisp_parse_state	file:	access:public
lisp_parse_state::mindepth	syntax.c	/^    EMACS_INT mindepth;	\/* Minimum depth seen while scanning.  *\/$/;"	m	struct:lisp_parse_state	file:	access:public
lisp_parse_state::prevlevelstart	syntax.c	/^    ptrdiff_t prevlevelstart;$/;"	m	struct:lisp_parse_state	file:	access:public
lisp_parse_state::prev_syntax	syntax.c	/^    int prev_syntax; \/* Syntax of previous position scanned, when$/;"	m	struct:lisp_parse_state	file:	access:public
lisp_parse_state::quoted	syntax.c	/^    bool quoted;   \/* True if just after an escape char at end of parsing.  *\/$/;"	m	struct:lisp_parse_state	file:	access:public
lisp_parse_state::thislevelstart	syntax.c	/^    ptrdiff_t thislevelstart;$/;"	m	struct:lisp_parse_state	file:	access:public
Lisp_Process	process.h	/^struct Lisp_Process$/;"	s
Lisp_Process::adaptive_read_buffering	process.h	/^    unsigned int adaptive_read_buffering : 2;$/;"	m	struct:Lisp_Process	access:public
Lisp_Process::alive	process.h	/^    bool_bf alive : 1;$/;"	m	struct:Lisp_Process	access:public
Lisp_Process::backlog	process.h	/^    int backlog;$/;"	m	struct:Lisp_Process	access:public
Lisp_Process::buffer	process.h	/^    Lisp_Object buffer;$/;"	m	struct:Lisp_Process	access:public
Lisp_Process::childp	process.h	/^    Lisp_Object childp;$/;"	m	struct:Lisp_Process	access:public
Lisp_Process::command	process.h	/^    Lisp_Object command;$/;"	m	struct:Lisp_Process	access:public
Lisp_Process::decode_coding_system	process.h	/^    Lisp_Object decode_coding_system;$/;"	m	struct:Lisp_Process	access:public
Lisp_Process::decoding_buf	process.h	/^    Lisp_Object decoding_buf;$/;"	m	struct:Lisp_Process	access:public
Lisp_Process::decoding_carryover	process.h	/^    int decoding_carryover;$/;"	m	struct:Lisp_Process	access:public
Lisp_Process::dns_request	process.h	/^    struct gaicb *dns_request;$/;"	m	struct:Lisp_Process	typeref:struct:Lisp_Process::gaicb	access:public
Lisp_Process::encode_coding_system	process.h	/^    Lisp_Object encode_coding_system;$/;"	m	struct:Lisp_Process	access:public
Lisp_Process::encoding_buf	process.h	/^    Lisp_Object encoding_buf;$/;"	m	struct:Lisp_Process	access:public
Lisp_Process::filter	process.h	/^    Lisp_Object filter;$/;"	m	struct:Lisp_Process	access:public
Lisp_Process::gnutls_anon_cred	process.h	/^    gnutls_anon_client_credentials_t gnutls_anon_cred;$/;"	m	struct:Lisp_Process	access:public
Lisp_Process::gnutls_boot_parameters	process.h	/^    Lisp_Object gnutls_boot_parameters;$/;"	m	struct:Lisp_Process	access:public
Lisp_Process::gnutls_certificate	process.h	/^    gnutls_x509_crt_t gnutls_certificate;$/;"	m	struct:Lisp_Process	access:public
Lisp_Process::gnutls_complete_negotiation_p	process.h	/^    bool_bf gnutls_complete_negotiation_p : 1;$/;"	m	struct:Lisp_Process	access:public
Lisp_Process::gnutls_cred_type	process.h	/^    Lisp_Object gnutls_cred_type;$/;"	m	struct:Lisp_Process	access:public
Lisp_Process::gnutls_extra_peer_verification	process.h	/^    unsigned int gnutls_extra_peer_verification;$/;"	m	struct:Lisp_Process	access:public
Lisp_Process::gnutls_handshakes_tried	process.h	/^    int gnutls_handshakes_tried;$/;"	m	struct:Lisp_Process	access:public
Lisp_Process::gnutls_initstage	process.h	/^    gnutls_initstage_t gnutls_initstage;$/;"	m	struct:Lisp_Process	access:public
Lisp_Process::gnutls_log_level	process.h	/^    int gnutls_log_level;$/;"	m	struct:Lisp_Process	access:public
Lisp_Process::gnutls_p	process.h	/^    bool_bf gnutls_p : 1;$/;"	m	struct:Lisp_Process	access:public
Lisp_Process::gnutls_peer_verification	process.h	/^    unsigned int gnutls_peer_verification;$/;"	m	struct:Lisp_Process	access:public
Lisp_Process::gnutls_state	process.h	/^    gnutls_session_t gnutls_state;$/;"	m	struct:Lisp_Process	access:public
Lisp_Process::gnutls_x509_cred	process.h	/^    gnutls_certificate_client_credentials gnutls_x509_cred;$/;"	m	struct:Lisp_Process	access:public
Lisp_Process::header	process.h	/^    struct vectorlike_header header;$/;"	m	struct:Lisp_Process	typeref:struct:Lisp_Process::vectorlike_header	access:public
Lisp_Process::infd	process.h	/^    int infd;$/;"	m	struct:Lisp_Process	access:public
Lisp_Process::inherit_coding_system_flag	process.h	/^    bool_bf inherit_coding_system_flag : 1;$/;"	m	struct:Lisp_Process	access:public
Lisp_Process::is_non_blocking_client	process.h	/^    bool_bf is_non_blocking_client : 1;$/;"	m	struct:Lisp_Process	access:public
Lisp_Process::is_server	process.h	/^    bool_bf is_server : 1;$/;"	m	struct:Lisp_Process	access:public
Lisp_Process::kill_without_query	process.h	/^    bool_bf kill_without_query : 1;$/;"	m	struct:Lisp_Process	access:public
Lisp_Process::log	process.h	/^    Lisp_Object log;$/;"	m	struct:Lisp_Process	access:public
Lisp_Process::mark	process.h	/^    Lisp_Object mark;$/;"	m	struct:Lisp_Process	access:public
Lisp_Process::name	process.h	/^    Lisp_Object name;$/;"	m	struct:Lisp_Process	access:public
Lisp_Process::open_fd	process.h	/^    int open_fd[PROCESS_OPEN_FDS];$/;"	m	struct:Lisp_Process	access:public
Lisp_Process::outfd	process.h	/^    int outfd;$/;"	m	struct:Lisp_Process	access:public
Lisp_Process::pid	process.h	/^    pid_t pid;$/;"	m	struct:Lisp_Process	access:public
Lisp_Process::plist	process.h	/^    Lisp_Object plist;$/;"	m	struct:Lisp_Process	access:public
Lisp_Process::port	process.h	/^    int port;$/;"	m	struct:Lisp_Process	access:public
Lisp_Process::pty_flag	process.h	/^    bool_bf pty_flag : 1;$/;"	m	struct:Lisp_Process	access:public
Lisp_Process::raw_status	process.h	/^    int raw_status;$/;"	m	struct:Lisp_Process	access:public
Lisp_Process::raw_status_new	process.h	/^    bool_bf raw_status_new : 1;$/;"	m	struct:Lisp_Process	access:public
Lisp_Process::read_output_delay	process.h	/^    int read_output_delay;$/;"	m	struct:Lisp_Process	access:public
Lisp_Process::read_output_skip	process.h	/^    bool_bf read_output_skip : 1;$/;"	m	struct:Lisp_Process	access:public
Lisp_Process::sentinel	process.h	/^    Lisp_Object sentinel;$/;"	m	struct:Lisp_Process	access:public
Lisp_Process::socktype	process.h	/^    int socktype;$/;"	m	struct:Lisp_Process	access:public
Lisp_Process::status	process.h	/^    Lisp_Object status;$/;"	m	struct:Lisp_Process	access:public
Lisp_Process::stderrproc	process.h	/^    Lisp_Object stderrproc;$/;"	m	struct:Lisp_Process	access:public
Lisp_Process::thread	process.h	/^    Lisp_Object thread;$/;"	m	struct:Lisp_Process	access:public
Lisp_Process::tick	process.h	/^    EMACS_INT tick;$/;"	m	struct:Lisp_Process	access:public
Lisp_Process::tty_name	process.h	/^    Lisp_Object tty_name;$/;"	m	struct:Lisp_Process	access:public
Lisp_Process::type	process.h	/^    Lisp_Object type;$/;"	m	struct:Lisp_Process	access:public
Lisp_Process::update_tick	process.h	/^    EMACS_INT update_tick;$/;"	m	struct:Lisp_Process	access:public
Lisp_Process::write_queue	process.h	/^    Lisp_Object write_queue;$/;"	m	struct:Lisp_Process	access:public
Lisp_Save_Type	lisp.h	/^enum Lisp_Save_Type$/;"	g
Lisp_Save_Value	lisp.h	/^struct Lisp_Save_Value$/;"	s
Lisp_Save_Value::data	lisp.h	/^    } data[SAVE_VALUE_SLOTS];$/;"	m	struct:Lisp_Save_Value	typeref:union:Lisp_Save_Value::__anon26	access:public
Lisp_Save_Value::gcmarkbit	lisp.h	/^    bool_bf gcmarkbit : 1;$/;"	m	struct:Lisp_Save_Value	access:public
Lisp_Save_Value::save_type	lisp.h	/^    ENUM_BF (Lisp_Save_Type) save_type : SAVE_TYPE_BITS;$/;"	m	struct:Lisp_Save_Value	access:public
Lisp_Save_Value::spacer	lisp.h	/^    unsigned spacer : 32 - (16 + 1 + SAVE_TYPE_BITS);$/;"	m	struct:Lisp_Save_Value	access:public
Lisp_Save_Value::type	lisp.h	/^    ENUM_BF (Lisp_Misc_Type) type : 16;	\/* = Lisp_Misc_Save_Value *\/$/;"	m	struct:Lisp_Save_Value	access:public
Lisp_Save_Value::__anon26::funcpointer	lisp.h	/^      voidfuncptr funcpointer;$/;"	m	union:Lisp_Save_Value::__anon26	access:public
Lisp_Save_Value::__anon26::integer	lisp.h	/^      ptrdiff_t integer;$/;"	m	union:Lisp_Save_Value::__anon26	access:public
Lisp_Save_Value::__anon26::object	lisp.h	/^      Lisp_Object object;$/;"	m	union:Lisp_Save_Value::__anon26	access:public
Lisp_Save_Value::__anon26::pointer	lisp.h	/^      void *pointer;$/;"	m	union:Lisp_Save_Value::__anon26	access:public
lisp_seconds_argument	editfns.c	/^lisp_seconds_argument (Lisp_Object specified_time)$/;"	f	file:	signature:(Lisp_Object specified_time)
Lisp_String	lisp.h	/^    Lisp_String = 4,$/;"	e	enum:Lisp_Type
Lisp_String	lisp.h	/^struct GCALIGNED Lisp_String$/;"	s
Lisp_String::data	lisp.h	/^    unsigned char *data;$/;"	m	struct:Lisp_String	access:public
Lisp_String::intervals	lisp.h	/^    INTERVAL intervals;		\/* Text properties in this string.  *\/$/;"	m	struct:Lisp_String	access:public
Lisp_String::size	lisp.h	/^    ptrdiff_t size;$/;"	m	struct:Lisp_String	access:public
Lisp_String::size_byte	lisp.h	/^    ptrdiff_t size_byte;$/;"	m	struct:Lisp_String	access:public
lisp_string_width	character.c	/^lisp_string_width (Lisp_Object string, ptrdiff_t precision,$/;"	f	signature:(Lisp_Object string, ptrdiff_t precision, ptrdiff_t *nchars, ptrdiff_t *nbytes)
lisp_string_width	character.h	/^extern ptrdiff_t lisp_string_width (Lisp_Object, ptrdiff_t,$/;"	p	signature:(Lisp_Object, ptrdiff_t, ptrdiff_t *, ptrdiff_t *)
Lisp_Subr	lisp.h	/^struct Lisp_Subr$/;"	s
Lisp_Subr::doc	lisp.h	/^    EMACS_INT doc;$/;"	m	struct:Lisp_Subr	access:public
Lisp_Subr::function	lisp.h	/^    } function;$/;"	m	struct:Lisp_Subr	typeref:union:Lisp_Subr::__anon22	access:public
Lisp_Subr::header	lisp.h	/^    struct vectorlike_header header;$/;"	m	struct:Lisp_Subr	typeref:struct:Lisp_Subr::vectorlike_header	access:public
Lisp_Subr::intspec	lisp.h	/^    const char *intspec;$/;"	m	struct:Lisp_Subr	access:public
Lisp_Subr::max_args	lisp.h	/^    short min_args, max_args;$/;"	m	struct:Lisp_Subr	access:public
Lisp_Subr::min_args	lisp.h	/^    short min_args, max_args;$/;"	m	struct:Lisp_Subr	access:public
Lisp_Subr::symbol_name	lisp.h	/^    const char *symbol_name;$/;"	m	struct:Lisp_Subr	access:public
Lisp_Subr::__anon22::a0	lisp.h	/^      Lisp_Object (*a0) (void);$/;"	m	union:Lisp_Subr::__anon22	access:public
Lisp_Subr::__anon22::a1	lisp.h	/^      Lisp_Object (*a1) (Lisp_Object);$/;"	m	union:Lisp_Subr::__anon22	access:public
Lisp_Subr::__anon22::a2	lisp.h	/^      Lisp_Object (*a2) (Lisp_Object, Lisp_Object);$/;"	m	union:Lisp_Subr::__anon22	access:public
Lisp_Subr::__anon22::a3	lisp.h	/^      Lisp_Object (*a3) (Lisp_Object, Lisp_Object, Lisp_Object);$/;"	m	union:Lisp_Subr::__anon22	access:public
Lisp_Subr::__anon22::a4	lisp.h	/^      Lisp_Object (*a4) (Lisp_Object, Lisp_Object, Lisp_Object, Lisp_Object);$/;"	m	union:Lisp_Subr::__anon22	access:public
Lisp_Subr::__anon22::a5	lisp.h	/^      Lisp_Object (*a5) (Lisp_Object, Lisp_Object, Lisp_Object, Lisp_Object, Lisp_Object);$/;"	m	union:Lisp_Subr::__anon22	access:public
Lisp_Subr::__anon22::a6	lisp.h	/^      Lisp_Object (*a6) (Lisp_Object, Lisp_Object, Lisp_Object, Lisp_Object, Lisp_Object, Lisp_Object);$/;"	m	union:Lisp_Subr::__anon22	access:public
Lisp_Subr::__anon22::a7	lisp.h	/^      Lisp_Object (*a7) (Lisp_Object, Lisp_Object, Lisp_Object, Lisp_Object, Lisp_Object, Lisp_Object, Lisp_Object);$/;"	m	union:Lisp_Subr::__anon22	access:public
Lisp_Subr::__anon22::a8	lisp.h	/^      Lisp_Object (*a8) (Lisp_Object, Lisp_Object, Lisp_Object, Lisp_Object, Lisp_Object, Lisp_Object, Lisp_Object, Lisp_Object);$/;"	m	union:Lisp_Subr::__anon22	access:public
Lisp_Subr::__anon22::aMANY	lisp.h	/^      Lisp_Object (*aMANY) (ptrdiff_t, Lisp_Object *);$/;"	m	union:Lisp_Subr::__anon22	access:public
Lisp_Subr::__anon22::aUNEVALLED	lisp.h	/^      Lisp_Object (*aUNEVALLED) (Lisp_Object args);$/;"	m	union:Lisp_Subr::__anon22	access:public
Lisp_Sub_Char_Table	lisp.h	/^struct Lisp_Sub_Char_Table$/;"	s
Lisp_Sub_Char_Table::contents	lisp.h	/^    Lisp_Object contents[FLEXIBLE_ARRAY_MEMBER];$/;"	m	struct:Lisp_Sub_Char_Table	access:public
Lisp_Sub_Char_Table::depth	lisp.h	/^    int depth;$/;"	m	struct:Lisp_Sub_Char_Table	access:public
Lisp_Sub_Char_Table::header	lisp.h	/^    struct vectorlike_header header;$/;"	m	struct:Lisp_Sub_Char_Table	typeref:struct:Lisp_Sub_Char_Table::vectorlike_header	access:public
Lisp_Sub_Char_Table::min_char	lisp.h	/^    int min_char;$/;"	m	struct:Lisp_Sub_Char_Table	access:public
Lisp_Symbol	lisp.h	/^    Lisp_Symbol = 0,$/;"	e	enum:Lisp_Type
Lisp_Symbol	lisp.h	/^struct Lisp_Symbol$/;"	s
Lisp_Symbol::declared_special	lisp.h	/^  bool_bf declared_special : 1;$/;"	m	struct:Lisp_Symbol	access:public
Lisp_Symbol::function	lisp.h	/^  Lisp_Object function;$/;"	m	struct:Lisp_Symbol	access:public
Lisp_Symbol::gcmarkbit	lisp.h	/^  bool_bf gcmarkbit : 1;$/;"	m	struct:Lisp_Symbol	access:public
Lisp_Symbol::interned	lisp.h	/^  unsigned interned : 2;$/;"	m	struct:Lisp_Symbol	access:public
Lisp_Symbol::name	lisp.h	/^  Lisp_Object name;$/;"	m	struct:Lisp_Symbol	access:public
Lisp_Symbol::next	lisp.h	/^  struct Lisp_Symbol *next;$/;"	m	struct:Lisp_Symbol	typeref:struct:Lisp_Symbol::Lisp_Symbol	access:public
Lisp_Symbol::pinned	lisp.h	/^  bool_bf pinned : 1;$/;"	m	struct:Lisp_Symbol	access:public
Lisp_Symbol::plist	lisp.h	/^  Lisp_Object plist;$/;"	m	struct:Lisp_Symbol	access:public
Lisp_Symbol::redirect	lisp.h	/^  ENUM_BF (symbol_redirect) redirect : 3;$/;"	m	struct:Lisp_Symbol	access:public
Lisp_Symbol::trapped_write	lisp.h	/^  ENUM_BF (symbol_trapped_write) trapped_write : 2;$/;"	m	struct:Lisp_Symbol	access:public
Lisp_Symbol::val	lisp.h	/^  } val;$/;"	m	struct:Lisp_Symbol	typeref:union:Lisp_Symbol::__anon18	access:public
Lisp_Symbol::__anon18::alias	lisp.h	/^    struct Lisp_Symbol *alias;$/;"	m	union:Lisp_Symbol::__anon18	typeref:struct:Lisp_Symbol::__anon18::Lisp_Symbol	access:public
Lisp_Symbol::__anon18::blv	lisp.h	/^    struct Lisp_Buffer_Local_Value *blv;$/;"	m	union:Lisp_Symbol::__anon18	typeref:struct:Lisp_Symbol::__anon18::Lisp_Buffer_Local_Value	access:public
Lisp_Symbol::__anon18::fwd	lisp.h	/^    union Lisp_Fwd *fwd;$/;"	m	union:Lisp_Symbol::__anon18	typeref:union:Lisp_Symbol::__anon18::Lisp_Fwd	access:public
Lisp_Symbol::__anon18::value	lisp.h	/^    Lisp_Object value;$/;"	m	union:Lisp_Symbol::__anon18	access:public
lisp_time	systime.h	/^struct lisp_time$/;"	s
lisp_time::hi	systime.h	/^  EMACS_INT hi;$/;"	m	struct:lisp_time	access:public
lisp_time::lo	systime.h	/^  int lo, us, ps;$/;"	m	struct:lisp_time	access:public
lisp_time::ps	systime.h	/^  int lo, us, ps;$/;"	m	struct:lisp_time	access:public
lisp_time::us	systime.h	/^  int lo, us, ps;$/;"	m	struct:lisp_time	access:public
lisp_time_argument	editfns.c	/^lisp_time_argument (Lisp_Object specified_time)$/;"	f	signature:(Lisp_Object specified_time)
lisp_time_argument	systime.h	/^extern struct timespec lisp_time_argument (Lisp_Object);$/;"	p	signature:(Lisp_Object)
lisp_time_struct	editfns.c	/^lisp_time_struct (Lisp_Object specified_time, int *plen)$/;"	f	file:	signature:(Lisp_Object specified_time, int *plen)
lisp_time_struct	editfns.c	/^static struct lisp_time lisp_time_struct (Lisp_Object, int *);$/;"	p	file:	signature:(Lisp_Object, int *)
lisp_to_timespec	editfns.c	/^lisp_to_timespec (struct lisp_time t)$/;"	f	signature:(struct lisp_time t)
lisp_to_timespec	systime.h	/^extern struct timespec lisp_to_timespec (struct lisp_time);$/;"	p	signature:(struct lisp_time)
lisp_to_value	emacs-module.c	/^lisp_to_value (emacs_env *env, Lisp_Object o)$/;"	f	file:	signature:(emacs_env *env, Lisp_Object o)
lisp_to_value	emacs-module.c	/^static emacs_value lisp_to_value (emacs_env *, Lisp_Object);$/;"	p	file:	signature:(emacs_env *, Lisp_Object)
lisp_to_value_bits	emacs-module.c	/^lisp_to_value_bits (Lisp_Object o)$/;"	f	file:	signature:(Lisp_Object o)
Lisp_Type	lisp.h	/^enum Lisp_Type$/;"	g
Lisp_User_Ptr	lisp.h	/^struct Lisp_User_Ptr$/;"	s
Lisp_User_Ptr::finalizer	lisp.h	/^  void (*finalizer) (void *);$/;"	m	struct:Lisp_User_Ptr	access:public
Lisp_User_Ptr::gcmarkbit	lisp.h	/^  bool_bf gcmarkbit : 1;$/;"	m	struct:Lisp_User_Ptr	access:public
Lisp_User_Ptr::p	lisp.h	/^  void *p;$/;"	m	struct:Lisp_User_Ptr	access:public
Lisp_User_Ptr::spacer	lisp.h	/^  unsigned spacer : 15;$/;"	m	struct:Lisp_User_Ptr	access:public
Lisp_User_Ptr::type	lisp.h	/^  ENUM_BF (Lisp_Misc_Type) type : 16;	     \/* = Lisp_Misc_User_Ptr *\/$/;"	m	struct:Lisp_User_Ptr	access:public
Lisp_Val_Fwd	data.c	/^union Lisp_Val_Fwd$/;"	u	file:
Lisp_Val_Fwd::fwd	data.c	/^    union Lisp_Fwd *fwd;$/;"	m	union:Lisp_Val_Fwd	typeref:union:Lisp_Val_Fwd::Lisp_Fwd	file:	access:public
Lisp_Val_Fwd::value	data.c	/^    Lisp_Object value;$/;"	m	union:Lisp_Val_Fwd	file:	access:public
Lisp_Vector	lisp.h	/^struct Lisp_Vector$/;"	s
Lisp_Vector::contents	lisp.h	/^    Lisp_Object contents[FLEXIBLE_ARRAY_MEMBER];$/;"	m	struct:Lisp_Vector	access:public
Lisp_Vector::header	lisp.h	/^    struct vectorlike_header header;$/;"	m	struct:Lisp_Vector	typeref:struct:Lisp_Vector::vectorlike_header	access:public
Lisp_Vectorlike	lisp.h	/^    Lisp_Vectorlike = 5,$/;"	e	enum:Lisp_Type
list	font.h	/^  Lisp_Object (*list) (struct frame *frame, Lisp_Object font_spec);$/;"	m	struct:font_driver	access:public
list	gmalloc.c	/^struct list$/;"	s	file:
list	minibuf.c	/^  (register Lisp_Object key, Lisp_Object list, Lisp_Object case_fold)$/;"	v
list	search.c	/^  (register Lisp_Object list, Lisp_Object reseat)$/;"	v
list	w32font.c	/^  Lisp_Object list;$/;"	m	struct:font_callback_data	file:	access:public
List	xrdb.c	/^typedef char **List;$/;"	t	file:
list1	alloc.c	/^list1 (Lisp_Object arg1)$/;"	f	signature:(Lisp_Object arg1)
list1	lisp.h	/^extern Lisp_Object list1 (Lisp_Object);$/;"	p	signature:(Lisp_Object)
list2	alloc.c	/^list2 (Lisp_Object arg1, Lisp_Object arg2)$/;"	f	signature:(Lisp_Object arg1, Lisp_Object arg2)
list2	lisp.h	/^extern Lisp_Object list2 (Lisp_Object, Lisp_Object);$/;"	p	signature:(Lisp_Object, Lisp_Object)
list2i	lisp.h	/^list2i (EMACS_INT x, EMACS_INT y)$/;"	f	signature:(EMACS_INT x, EMACS_INT y)
list3	alloc.c	/^list3 (Lisp_Object arg1, Lisp_Object arg2, Lisp_Object arg3)$/;"	f	signature:(Lisp_Object arg1, Lisp_Object arg2, Lisp_Object arg3)
list3	lisp.h	/^extern Lisp_Object list3 (Lisp_Object, Lisp_Object, Lisp_Object);$/;"	p	signature:(Lisp_Object, Lisp_Object, Lisp_Object)
list3i	lisp.h	/^list3i (EMACS_INT x, EMACS_INT y, EMACS_INT w)$/;"	f	signature:(EMACS_INT x, EMACS_INT y, EMACS_INT w)
list4	alloc.c	/^list4 (Lisp_Object arg1, Lisp_Object arg2, Lisp_Object arg3, Lisp_Object arg4)$/;"	f	signature:(Lisp_Object arg1, Lisp_Object arg2, Lisp_Object arg3, Lisp_Object arg4)
list4	lisp.h	/^extern Lisp_Object list4 (Lisp_Object, Lisp_Object, Lisp_Object, Lisp_Object);$/;"	p	signature:(Lisp_Object, Lisp_Object, Lisp_Object, Lisp_Object)
list4i	lisp.h	/^list4i (EMACS_INT x, EMACS_INT y, EMACS_INT w, EMACS_INT h)$/;"	f	signature:(EMACS_INT x, EMACS_INT y, EMACS_INT w, EMACS_INT h)
list5	alloc.c	/^list5 (Lisp_Object arg1, Lisp_Object arg2, Lisp_Object arg3, Lisp_Object arg4, Lisp_Object arg5)$/;"	f	signature:(Lisp_Object arg1, Lisp_Object arg2, Lisp_Object arg3, Lisp_Object arg4, Lisp_Object arg5)
list5	lisp.h	/^extern Lisp_Object list5 (Lisp_Object, Lisp_Object, Lisp_Object, Lisp_Object,$/;"	p	signature:(Lisp_Object, Lisp_Object, Lisp_Object, Lisp_Object, Lisp_Object)
list::next	gmalloc.c	/^    struct list *next;$/;"	m	struct:list	typeref:struct:list::list	file:	access:public
list::prev	gmalloc.c	/^    struct list *prev;$/;"	m	struct:list	typeref:struct:list::list	file:	access:public
listen	w32.c	234;"	d	file:
listn	alloc.c	/^listn (enum constype type, ptrdiff_t count, Lisp_Object arg, ...)$/;"	f	signature:(enum constype type, ptrdiff_t count, Lisp_Object arg, ...)
listn	lisp.h	/^extern Lisp_Object listn (enum constype, ptrdiff_t, Lisp_Object, ...);$/;"	p	signature:(enum constype, ptrdiff_t, Lisp_Object, ...)
list_all_matching_fonts	w32font.c	/^list_all_matching_fonts (struct font_callback_data *match_data)$/;"	f	file:	signature:(struct font_callback_data *match_data)
list_all_matching_fonts	w32font.c	/^static void list_all_matching_fonts (struct font_callback_data *);$/;"	p	file:	signature:(struct font_callback_data *)
list_family	font.h	/^  Lisp_Object (*list_family) (struct frame *f);$/;"	m	struct:font_driver	access:public
list_fontsets	fontset.c	/^list_fontsets (struct frame *f, Lisp_Object pattern, int size)$/;"	f	signature:(struct frame *f, Lisp_Object pattern, int size)
list_fontsets	fontset.h	/^extern Lisp_Object list_fontsets (struct frame *, Lisp_Object, int);$/;"	p	signature:(struct frame *, Lisp_Object, int)
list_of_error	xdisp.c	/^static Lisp_Object list_of_error;$/;"	v	file:
list_of_items	menu.c	/^list_of_items (Lisp_Object pane)$/;"	f	file:	signature:(Lisp_Object pane)
list_of_panes	menu.c	/^list_of_panes (Lisp_Object menu)$/;"	f	signature:(Lisp_Object menu)
list_of_panes	menu.h	/^extern void list_of_panes (Lisp_Object);$/;"	p	signature:(Lisp_Object)
list_of_properties	textprop.c	/^  (Lisp_Object start, Lisp_Object end, Lisp_Object list_of_properties, Lisp_Object object)$/;"	v
list_system_processes	process.h	/^extern Lisp_Object list_system_processes (void);$/;"	p	signature:(void)
list_system_processes	sysdep.c	/^list_system_processes (void)$/;"	f	signature:(void)
list_system_processes	w32.c	/^list_system_processes (void)$/;"	f	signature:(void)
literal	search.c	/^  (Lisp_Object newtext, Lisp_Object fixedcase, Lisp_Object literal, Lisp_Object string, Lisp_Object subexp)$/;"	v
live_buffer	marker.c	/^live_buffer (Lisp_Object buffer)$/;"	f	file:	signature:(Lisp_Object buffer)
live_buffer_p	alloc.c	/^live_buffer_p (struct mem_node *m, void *p)$/;"	f	file:	signature:(struct mem_node *m, void *p)
live_cons_p	alloc.c	/^live_cons_p (struct mem_node *m, void *p)$/;"	f	file:	signature:(struct mem_node *m, void *p)
live_float_p	alloc.c	/^live_float_p (struct mem_node *m, void *p)$/;"	f	file:	signature:(struct mem_node *m, void *p)
live_misc_p	alloc.c	/^live_misc_p (struct mem_node *m, void *p)$/;"	f	file:	signature:(struct mem_node *m, void *p)
live_string_p	alloc.c	/^live_string_p (struct mem_node *m, void *p)$/;"	f	file:	signature:(struct mem_node *m, void *p)
live_symbol_p	alloc.c	/^live_symbol_p (struct mem_node *m, void *p)$/;"	f	file:	signature:(struct mem_node *m, void *p)
live_vector_p	alloc.c	/^live_vector_p (struct mem_node *m, void *p)$/;"	f	file:	signature:(struct mem_node *m, void *p)
lmalloc	alloc.c	/^lmalloc (size_t size)$/;"	f	file:	signature:(size_t size)
LMOUSE	w32fns.c	91;"	d	file:
lname	w32proc.c	/^static char lname[3 * LOCALE_NAME_MAX_LENGTH + 1 + 1];$/;"	v	file:
lnnoptr	unexaix.c	/^static off_t lnnoptr;			\/* Pointer to line-number info within file *\/$/;"	v	file:
lnum	dispextern.h	/^  ptrdiff_t lnum;$/;"	m	struct:it	access:public
lnum_bytepos	dispextern.h	/^  ptrdiff_t lnum_bytepos;$/;"	m	struct:it	access:public
lnum_pixel_width	dispextern.h	/^  int lnum_pixel_width;$/;"	m	struct:it	access:public
lnum_width	dispextern.h	/^  int lnum_width;$/;"	m	struct:it	access:public
lo	systime.h	/^  int lo, us, ps;$/;"	m	struct:lisp_time	access:public
load	dispextern.h	/^  bool (* load) (struct frame *f, struct image *img);$/;"	m	struct:image_type	access:public
LOADHIST_ATTACH	lisp.h	/^LOADHIST_ATTACH (Lisp_Object x)$/;"	f	signature:(Lisp_Object x)
load_charset	charset.c	/^load_charset (struct charset *charset, int control_flag)$/;"	f	file:	signature:(struct charset *charset, int control_flag)
load_charset_map	charset.c	/^load_charset_map (struct charset *charset, struct charset_map_entries *entries, int n_entries, int control_flag)$/;"	f	file:	signature:(struct charset *charset, struct charset_map_entries *entries, int n_entries, int control_flag)
load_charset_map_from_file	charset.c	/^load_charset_map_from_file (struct charset *charset, Lisp_Object mapfile,$/;"	f	file:	signature:(struct charset *charset, Lisp_Object mapfile, int control_flag)
load_charset_map_from_vector	charset.c	/^load_charset_map_from_vector (struct charset *charset, Lisp_Object vec, int control_flag)$/;"	f	file:	signature:(struct charset *charset, Lisp_Object vec, int control_flag)
load_color	dispextern.h	/^unsigned long load_color (struct frame *, struct face *, Lisp_Object,$/;"	p	signature:(struct frame *, struct face *, Lisp_Object, enum lface_attribute_index)
load_color	xfaces.c	/^load_color (struct frame *f, struct face *face, Lisp_Object name,$/;"	f	signature:(struct frame *f, struct face *face, Lisp_Object name, enum lface_attribute_index target_index)
load_color2	xfaces.c	/^load_color2 (struct frame *f, struct face *face, Lisp_Object name,$/;"	f	file:	signature:(struct frame *f, struct face *face, Lisp_Object name, enum lface_attribute_index target_index, XColor *color)
load_convert_to_unibyte	globals.h	989;"	d
load_dangerous_libraries	globals.h	991;"	d
LOAD_DLL_FN	w32.h	246;"	d
load_dll_functions	xml.c	/^load_dll_functions (HMODULE library)$/;"	f	file:	signature:(HMODULE library)
load_error_handler	lread.c	/^load_error_handler (Lisp_Object data)$/;"	f	file:	signature:(Lisp_Object data)
load_face_colors	xfaces.c	/^load_face_colors (struct frame *f, struct face *face,$/;"	f	file:	signature:(struct frame *f, struct face *face, Lisp_Object attrs[LFACE_VECTOR_SIZE])
load_failed_p	dispextern.h	/^  bool load_failed_p;$/;"	m	struct:image	access:public
load_force_doc_strings	globals.h	993;"	d
load_in_progress	globals.h	995;"	d
load_overlay_strings	xdisp.c	/^load_overlay_strings (struct it *it, ptrdiff_t charpos)$/;"	f	file:	signature:(struct it *it, ptrdiff_t charpos)
load_overlay_strings	xdisp.c	/^static void load_overlay_strings (struct it *, ptrdiff_t);$/;"	p	file:	signature:(struct it *, ptrdiff_t)
load_path_check	lread.c	/^load_path_check (Lisp_Object lpath)$/;"	f	file:	signature:(Lisp_Object lpath)
load_path_default	lread.c	/^load_path_default (void)$/;"	f	file:	signature:(void)
load_pixmap	xfaces.c	/^load_pixmap (struct frame *f, Lisp_Object name)$/;"	f	file:	signature:(struct frame *f, Lisp_Object name)
load_prefer_newer	globals.h	997;"	d
LOAD_PROC	w32.c	7301;"	d	file:
LOAD_PROC	w32.c	7334;"	d	file:
LOAD_PROC	w32term.c	7267;"	d	file:
LOAD_PROC	w32term.c	7271;"	d	file:
load_sample	w32.c	/^struct load_sample {$/;"	s	file:
load_sample::idle	w32.c	/^  ULONGLONG idle;$/;"	m	struct:load_sample	file:	access:public
load_sample::kernel	w32.c	/^  ULONGLONG kernel;$/;"	m	struct:load_sample	file:	access:public
load_sample::sample_time	w32.c	/^  time_t sample_time;$/;"	m	struct:load_sample	file:	access:public
load_sample::user	w32.c	/^  ULONGLONG user;$/;"	m	struct:load_sample	file:	access:public
load_scnptr	unexaix.c	/^static off_t load_scnptr;$/;"	v	file:
load_warn_old_style_backquotes	lread.c	/^load_warn_old_style_backquotes (Lisp_Object file)$/;"	f	file:	signature:(Lisp_Object file)
load_warn_unescaped_character_literals	lread.c	/^load_warn_unescaped_character_literals (Lisp_Object file)$/;"	f	file:	signature:(Lisp_Object file)
locale	fns.c	/^  (Lisp_Object s1, Lisp_Object s2, Lisp_Object locale, Lisp_Object ignore_case)$/;"	v
LOCALE_ENUMPROCA	w32term.h	/^typedef BOOL (CALLBACK *LOCALE_ENUMPROCA)(LPSTR);$/;"	t
LOCALE_ENUMPROCW	w32term.h	/^typedef BOOL (CALLBACK *LOCALE_ENUMPROCW)(LPWSTR);$/;"	t
LOCALE_NAME_MAX_LENGTH	w32proc.c	3490;"	d	file:
locale_t	sysdep.c	/^typedef char const *locale_t;$/;"	t	file:
locale_t	sysdep.c	3803;"	d	file:
locale_t	sysdep.c	3808;"	d	file:
localtime	w32.c	71;"	d	file:
local_alloc	w32gui.h	27;"	d
local_flags	buffer.h	/^  char local_flags[MAX_PER_BUFFER_VARS];$/;"	m	struct:buffer	access:public
local_free	w32gui.h	28;"	d
local_heap	w32gui.h	26;"	d
local_if_set	lisp.h	/^    bool_bf local_if_set : 1;$/;"	m	struct:Lisp_Buffer_Local_Value	access:public
LOCAL_SELECTION	xselect.c	106;"	d	file:
local_tz	editfns.c	/^static timezone_t local_tz;$/;"	v	file:
local_var_alist_	buffer.h	/^  Lisp_Object local_var_alist_;$/;"	m	struct:buffer	access:public
location	insdel.c	/^  Lisp_Object *location;$/;"	m	struct:rvoe_arg	file:	access:public
location	syntax.c	/^    ptrdiff_t location;	     \/* Char number at which parsing stopped.  *\/$/;"	m	struct:lisp_parse_state	file:	access:public
location_byte	syntax.c	/^    ptrdiff_t location_byte; \/* Corresponding byte position.  *\/$/;"	m	struct:lisp_parse_state	file:	access:public
LOCK	gmalloc.c	211;"	d	file:
LOCK	gmalloc.c	232;"	d	file:
LockCount	systhread.h	/^  long LockCount;$/;"	m	struct:__anon43	access:public
lockname	fileio.c	/^   Lisp_Object visit, Lisp_Object lockname, Lisp_Object mustbenew)$/;"	v
LockSemaphore	systhread.h	/^  void *LockSemaphore;$/;"	m	struct:__anon43	access:public
LOCK_ALIGNED_BLOCKS	gmalloc.c	221;"	d	file:
LOCK_ALIGNED_BLOCKS	gmalloc.c	234;"	d	file:
lock_file	filelock.c	/^lock_file (Lisp_Object fn)$/;"	f	signature:(Lisp_Object fn)
lock_file	lisp.h	/^extern void lock_file (Lisp_Object);$/;"	p	signature:(Lisp_Object)
lock_file_1	filelock.c	/^lock_file_1 (char *lfname, bool force)$/;"	f	file:	signature:(char *lfname, bool force)
lock_if_free	filelock.c	/^lock_if_free (lock_info_type *clasher, char *lfname)$/;"	f	file:	signature:(lock_info_type *clasher, char *lfname)
lock_info_type	filelock.c	/^} lock_info_type;$/;"	t	typeref:struct:__anon52	file:
locus	xterm.c	/^  char *locus;$/;"	m	struct:record	file:	access:public
log	process.h	/^    Lisp_Object log;$/;"	m	struct:Lisp_Process	access:public
logfonts_match	w32font.c	/^logfonts_match (LOGFONT *font, LOGFONT *pattern)$/;"	f	file:	signature:(LOGFONT *font, LOGFONT *pattern)
logfont_to_fcname	w32font.c	/^logfont_to_fcname (LOGFONT* font, int pointsize, char *fcname, int size)$/;"	f	file:	signature:(LOGFONT* font, int pointsize, char *fcname, int size)
logon_network_drive	w32.c	/^logon_network_drive (const char *path)$/;"	f	file:	signature:(const char *path)
log_t	profiler.c	/^typedef struct Lisp_Hash_Table log_t;$/;"	t	typeref:struct:Lisp_Hash_Table	file:
longjmps_done	alloc.c	/^static int longjmps_done;$/;"	v	file:
longname	emacs.c	/^  const char *longname;$/;"	m	struct:standard_args	file:	access:public
lookahead	lread.c	/^  signed char lookahead;$/;"	m	struct:infile	file:	access:public
lookback	dispextern.h	/^  ptrdiff_t lookback;$/;"	m	struct:composition_it	access:public
looking_at_1	search.c	/^looking_at_1 (Lisp_Object string, bool posix)$/;"	f	file:	signature:(Lisp_Object string, bool posix)
LookupAccountSid_Name	w32.c	/^const char * const LookupAccountSid_Name = "LookupAccountSidA";$/;"	v
LookupAccountSid_Name	w32.c	/^const char * const LookupAccountSid_Name = "LookupAccountSidW";$/;"	v
LookupAccountSid_Proc	w32.c	/^typedef BOOL (WINAPI * LookupAccountSid_Proc) ($/;"	t	file:
lookup_account_sid	w32.c	/^lookup_account_sid (LPCTSTR lpSystemName,$/;"	f	file:	signature:(LPCTSTR lpSystemName, PSID Sid, LPTSTR Name, LPDWORD cbName, LPTSTR DomainName, LPDWORD cbDomainName, PSID_NAME_USE peUse)
lookup_basic_face	dispextern.h	/^int lookup_basic_face (struct frame *, int);$/;"	p	signature:(struct frame *, int)
lookup_basic_face	xfaces.c	/^lookup_basic_face (struct frame *f, int face_id)$/;"	f	signature:(struct frame *f, int face_id)
lookup_char_property	intervals.c	/^lookup_char_property (Lisp_Object plist, Lisp_Object prop, bool textprop)$/;"	f	signature:(Lisp_Object plist, Lisp_Object prop, bool textprop)
lookup_char_property	intervals.h	/^extern Lisp_Object lookup_char_property (Lisp_Object, Lisp_Object, bool);$/;"	p	signature:(Lisp_Object, Lisp_Object, bool)
lookup_derived_face	dispextern.h	/^int lookup_derived_face (struct frame *, Lisp_Object, int, bool);$/;"	p	signature:(struct frame *, Lisp_Object, int, bool)
lookup_derived_face	xfaces.c	/^lookup_derived_face (struct frame *f, Lisp_Object symbol, int face_id,$/;"	f	signature:(struct frame *f, Lisp_Object symbol, int face_id, bool signal_p)
lookup_face	xfaces.c	/^lookup_face (struct frame *f, Lisp_Object *attr)$/;"	f	file:	signature:(struct frame *f, Lisp_Object *attr)
lookup_fringe_bitmap	dispextern.h	/^int lookup_fringe_bitmap (Lisp_Object);$/;"	p	signature:(Lisp_Object)
lookup_fringe_bitmap	fringe.c	/^lookup_fringe_bitmap (Lisp_Object bitmap)$/;"	f	signature:(Lisp_Object bitmap)
lookup_glyphless_char_display	dispextern.h	/^extern Lisp_Object lookup_glyphless_char_display (int, struct it *);$/;"	p	signature:(int, struct it *)
lookup_glyphless_char_display	xdisp.c	/^lookup_glyphless_char_display (int c, struct it *it)$/;"	f	signature:(int c, struct it *it)
lookup_image	dispextern.h	/^ptrdiff_t lookup_image (struct frame *, Lisp_Object);$/;"	p	signature:(struct frame *, Lisp_Object)
lookup_image	image.c	/^lookup_image (struct frame *f, Lisp_Object spec)$/;"	f	signature:(struct frame *f, Lisp_Object spec)
lookup_image_type	image.c	/^lookup_image_type (Lisp_Object type)$/;"	f	file:	signature:(Lisp_Object type)
lookup_image_type	image.c	/^static struct image_type *lookup_image_type (Lisp_Object);$/;"	p	file:
lookup_named_face	dispextern.h	/^int lookup_named_face (struct frame *, Lisp_Object, bool);$/;"	p	signature:(struct frame *, Lisp_Object, bool)
lookup_named_face	xfaces.c	/^lookup_named_face (struct frame *f, Lisp_Object symbol, bool signal_p)$/;"	f	signature:(struct frame *f, Lisp_Object symbol, bool signal_p)
lookup_pixel_color	image.c	/^lookup_pixel_color (struct frame *f, unsigned long pixel)$/;"	f	file:	signature:(struct frame *f, unsigned long pixel)
lookup_rgb_color	image.c	/^lookup_rgb_color (struct frame *f, int r, int g, int b)$/;"	f	file:	signature:(struct frame *f, int r, int g, int b)
lookup_rgb_color	image.c	/^static unsigned long lookup_rgb_color (struct frame *f, int r, int g, int b);$/;"	p	file:	signature:(struct frame *f, int r, int g, int b)
LOOKUP_TRANSLATION_TABLE	coding.c	6930;"	d	file:
lookup_vk_code	w32fns.c	/^lookup_vk_code (char *key)$/;"	f	file:	signature:(char *key)
lookup_volume_info	w32.c	/^lookup_volume_info (char * root_dir)$/;"	f	file:	signature:(char * root_dir)
lookup_xwidget	xwidget.c	/^lookup_xwidget (Lisp_Object spec)$/;"	f	signature:(Lisp_Object spec)
lookup_xwidget	xwidget.h	/^INLINE struct xwidget *lookup_xwidget (Lisp_Object obj) { eassume (0); }$/;"	f	signature:(Lisp_Object obj)
lookup_xwidget	xwidget.h	/^struct xwidget *lookup_xwidget (Lisp_Object spec);$/;"	p	signature:(Lisp_Object spec)
loop	gtkutil.c	/^  GMainLoop *loop;$/;"	m	struct:xg_dialog_data	file:	access:public
losecursor	cm.h	158;"	d
lots_of_dashes	xdisp.c	/^static char lots_of_dashes[] = "--------------------------------------------------------------------------------------------------------------------------------------------";$/;"	v	file:
lowercasep	buffer.h	/^lowercasep (int c)$/;"	f	signature:(int c)
lower_xoff	dispextern.h	/^      short lower_xoff, lower_yoff;$/;"	m	struct:glyph::__anon107::__anon109	access:public
lower_yoff	dispextern.h	/^      short lower_xoff, lower_yoff;$/;"	m	struct:glyph::__anon107::__anon109	access:public
lo_time	editfns.c	/^lo_time (time_t t)$/;"	f	file:	signature:(time_t t)
LO_TIME_BITS	systime.h	/^enum { LO_TIME_BITS = 16 };$/;"	e	enum:__anon158
lpHead	w32xfns.c	/^int_msg *lpHead = NULL;$/;"	v
LPMEMORY_STATUS_EX	w32.c	/^} MEMORY_STATUS_EX,*LPMEMORY_STATUS_EX;$/;"	t	typeref:struct:_MEMORY_STATUS_EX	file:
lpNext	w32xfns.c	/^  struct int_msg *lpNext;$/;"	m	struct:int_msg	typeref:struct:int_msg::int_msg	file:	access:public
lpTail	w32xfns.c	/^int_msg *lpTail = NULL;$/;"	v
LRE	dispextern.h	/^  LRE,		\/* left-to-right embedding *\/$/;"	e	enum:__anon114
lrealloc	alloc.c	/^lrealloc (void *p, size_t size)$/;"	f	file:	signature:(void *p, size_t size)
lrealloc	alloc.c	/^static void *lrealloc (void *, size_t);$/;"	p	file:	signature:(void *, size_t)
LRI	dispextern.h	/^  LRI,		\/* left-to-right isolate *\/$/;"	e	enum:__anon114
LRO	dispextern.h	/^  LRO,		\/* left-to-right override *\/$/;"	e	enum:__anon114
lstat	w32.c	/^lstat (const char * path, struct stat * buf)$/;"	f	signature:(const char * path, struct stat * buf)
LSTAT_FOLLOWS_SLASHED_SYMLINK	config.h	1384;"	d
lstring	dispextern.h	/^  Lisp_Object lstring;		\/* Lisp string to reorder, or nil *\/$/;"	m	struct:bidi_string_data	access:public
ltime	w32.c	/^ltime (ULONGLONG time_100ns)$/;"	f	file:	signature:(ULONGLONG time_100ns)
ltime	w32.c	/^static Lisp_Object ltime (ULONGLONG);$/;"	p	file:
ltime_from_jiffies	sysdep.c	/^ltime_from_jiffies (unsigned long long tval, long hz)$/;"	f	file:	signature:(unsigned long long tval, long hz)
ltv_mark	emacs-module.c	/^static Lisp_Object ltv_mark;$/;"	v	file:
lucid_event_type_list_p	keyboard.c	/^lucid_event_type_list_p (Lisp_Object object)$/;"	f	signature:(Lisp_Object object)
lucid_event_type_list_p	keyboard.h	/^extern bool lucid_event_type_list_p (Lisp_Object);$/;"	p	signature:(Lisp_Object)
LWA_ALPHA	w32term.c	123;"	d	file:
lwindown	w32fns.c	/^  int lwindown;      \/* Left Windows key currently pressed (and hooked) *\/$/;"	m	struct:__anon74	file:	access:public
lwin_hooked	w32fns.c	/^  char lwin_hooked[256]; \/* hook left Win+[this key]? *\/$/;"	m	struct:__anon74	file:	access:public
lwlibdir	Makefile	/^lwlibdir = ..\/lwlib$/;"	m
m	alloc.c	/^  union Lisp_Misc m;$/;"	m	union:aligned_Lisp_Misc	typeref:union:aligned_Lisp_Misc::Lisp_Misc	file:	access:public
M	w32fns.c	3172;"	d	file:
M	w32fns.c	3203;"	d	file:
M17N_FLT_CFLAGS	Makefile	/^M17N_FLT_CFLAGS = $/;"	m
m17n_flt_initialized	ftfont.c	/^static bool m17n_flt_initialized;$/;"	v	file:
M17N_FLT_LIBS	Makefile	/^M17N_FLT_LIBS = $/;"	m
M17N_FLT_USE_NEW_FEATURE	ftfont.c	1485;"	d	file:
mabort	gmalloc.c	/^mabort (enum mcheck_status status)$/;"	f	file:	signature:(enum mcheck_status status)
macfont_get_nsctfont	macfont.h	/^extern void *macfont_get_nsctfont (struct font *font);$/;"	p	signature:(struct font *font)
macfont_update_antialias_threshold	macfont.h	/^extern void macfont_update_antialias_threshold (void);$/;"	p	signature:(void)
mach_header	unexmacosx.c	128;"	d	file:
macosx_alloc_dir	Makefile	/^macosx_alloc_dir=$(rust_srcdir)\/alloc_unexecmacosx$/;"	m
MACOSX_ALLOC_INPUTS	Makefile	/^MACOSX_ALLOC_INPUTS=$(macosx_alloc_dir)\/src\/** $(macosx_alloc_dir)\/Cargo.*$/;"	m
MACOSX_MALLOC_MULT16	unexmacosx.c	1295;"	d	file:
macro	macros.c	/^  (Lisp_Object macro, Lisp_Object count, Lisp_Object loopfunc)$/;"	v
macro_XPNTR	alloc.c	510;"	d	file:
macro_XPNTR_OR_SYMBOL_OFFSET	alloc.c	505;"	d	file:
MAC_FONT_CHARACTER_SET_STRING_ATTRIBUTE	macfont.h	77;"	d
mac_font_get_glyph_for_cid	macfont.h	71;"	d
mac_glyph_layout	macfont.h	/^struct mac_glyph_layout$/;"	s
mac_glyph_layout::advance	macfont.h	/^  CGFloat advance;$/;"	m	struct:mac_glyph_layout	access:public
mac_glyph_layout::advance_delta	macfont.h	/^  CGFloat advance_delta, baseline_delta;$/;"	m	struct:mac_glyph_layout	access:public
mac_glyph_layout::baseline_delta	macfont.h	/^  CGFloat advance_delta, baseline_delta;$/;"	m	struct:mac_glyph_layout	access:public
mac_glyph_layout::comp_range	macfont.h	/^  CFRange comp_range;$/;"	m	struct:mac_glyph_layout	access:public
mac_glyph_layout::glyph_id	macfont.h	/^  CGGlyph glyph_id;$/;"	m	struct:mac_glyph_layout	access:public
mac_glyph_layout::string_index	macfont.h	/^  CFIndex string_index;$/;"	m	struct:mac_glyph_layout	access:public
MAC_OS_X_VERSION_10_12	nsterm.h	43;"	d
MAC_OS_X_VERSION_10_6	nsterm.h	31;"	d
MAC_OS_X_VERSION_10_7	nsterm.h	34;"	d
MAC_OS_X_VERSION_10_8	nsterm.h	37;"	d
MAC_OS_X_VERSION_10_9	nsterm.h	40;"	d
mac_register_font_driver	macfont.h	/^extern void mac_register_font_driver (struct frame *f);$/;"	p	signature:(struct frame *f)
mac_uvs_table_adobe_japan1_bytes	macuvs.h	/^static const unsigned char mac_uvs_table_adobe_japan1_bytes[] =$/;"	v
magic	gmalloc.c	/^    size_t magic;	\/* Magic number to check header integrity.  *\/$/;"	m	struct:hdr	file:	access:public
magic	sound.c	/^  u_int32_t magic;$/;"	m	struct:wav_header	file:	access:public
magic	unexelf.c	/^	short magic;$/;"	m	struct:__anon123	file:	access:public
MAGICBYTE	gmalloc.c	1864;"	d	file:
MAGICFREE	gmalloc.c	1863;"	d	file:
MAGICWORD	gmalloc.c	1862;"	d	file:
MagicWrap	cm.h	124;"	d
magic_db	xrdb.c	/^magic_db (const char *string, ptrdiff_t string_len, const char *class,$/;"	f	file:	signature:(const char *string, ptrdiff_t string_len, const char *class, const char *escaped_suffix)
magic_number	sound.c	/^  u_int32_t magic_number;$/;"	m	struct:au_header	file:	access:public
MAIL_USE_FLOCK	config.h	1393;"	d
MAIL_USE_POP	config.h	1399;"	d
main	emacs.c	/^main (int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	firstfile.c	/^extern int main (int, char **);$/;"	p	file:	signature:(int, char **)
main	systty.h	/^  struct termios main;$/;"	m	struct:emacs_tty	typeref:struct:emacs_tty::termios	access:public
main	tparam.c	/^main (int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	xrdb.c	/^main (int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
mainCRTStartup	unexw32.c	/^extern void mainCRTStartup (void);$/;"	p	file:	signature:(void)
MAIN_PROGRAM	emacs.c	33;"	d	file:
main_thread	thread.c	/^static struct thread_state main_thread;$/;"	v	typeref:struct:thread_state	file:
main_thread_id	sysdep.c	/^pthread_t main_thread_id;$/;"	v
main_thread_p	thread.c	/^main_thread_p (void *ptr)$/;"	f	signature:(void *ptr)
main_thread_p	thread.h	/^extern bool main_thread_p (void *);$/;"	p	signature:(void *)
MAJOR	sysdep.c	3000;"	d	file:
major_mode_	buffer.h	/^  Lisp_Object major_mode_;$/;"	m	struct:buffer	access:public
make_blv	data.c	/^make_blv (struct Lisp_Symbol *sym, bool forwarded,$/;"	f	file:	signature:(struct Lisp_Symbol *sym, bool forwarded, union Lisp_Val_Fwd valcontents)
make_buffer_string	editfns.c	/^make_buffer_string (ptrdiff_t start, ptrdiff_t end, bool props)$/;"	f	signature:(ptrdiff_t start, ptrdiff_t end, bool props)
make_buffer_string	lisp.h	/^extern Lisp_Object make_buffer_string (ptrdiff_t, ptrdiff_t, bool);$/;"	p	signature:(ptrdiff_t, ptrdiff_t, bool)
make_buffer_string_both	editfns.c	/^make_buffer_string_both (ptrdiff_t start, ptrdiff_t start_byte,$/;"	f	signature:(ptrdiff_t start, ptrdiff_t start_byte, ptrdiff_t end, ptrdiff_t end_byte, bool props)
make_buffer_string_both	lisp.h	/^extern Lisp_Object make_buffer_string_both (ptrdiff_t, ptrdiff_t, ptrdiff_t,$/;"	p	signature:(ptrdiff_t, ptrdiff_t, ptrdiff_t, ptrdiff_t, bool)
make_byte_code	alloc.c	/^make_byte_code (struct Lisp_Vector *v)$/;"	f	signature:(struct Lisp_Vector *v)
make_byte_code	lisp.h	/^extern void make_byte_code (struct Lisp_Vector *);$/;"	p	signature:(struct Lisp_Vector *)
MAKE_CATEGORY_SET	category.h	71;"	d
MAKE_CHAR_MULTIBYTE	character.h	118;"	d
MAKE_CHAR_UNIBYTE	character.h	110;"	d
make_cl_data	gtkutil.c	/^make_cl_data (xg_menu_cb_data *cl_data, struct frame *f, GCallback highlight_cb)$/;"	f	file:	signature:(xg_menu_cb_data *cl_data, struct frame *f, GCallback highlight_cb)
make_composition_value_copy	composite.c	/^make_composition_value_copy (Lisp_Object list)$/;"	f	signature:(Lisp_Object list)
make_composition_value_copy	composite.h	/^extern void make_composition_value_copy (Lisp_Object);$/;"	p	signature:(Lisp_Object)
make_conversion_work_buffer	coding.c	/^make_conversion_work_buffer (bool multibyte)$/;"	f	file:	signature:(bool multibyte)
make_ctrl_char	keyboard.c	/^make_ctrl_char (int c)$/;"	f	signature:(int c)
make_current	dispnew.c	/^make_current (struct glyph_matrix *desired_matrix, struct glyph_matrix *current_matrix, int row)$/;"	f	file:	signature:(struct glyph_matrix *desired_matrix, struct glyph_matrix *current_matrix, int row)
make_cursor_line_fully_visible_p	globals.h	999;"	d
make_digest_string	fns.c	/^make_digest_string (Lisp_Object digest, int digest_size)$/;"	f	file:	signature:(Lisp_Object digest, int digest_size)
make_dom	xml.c	/^make_dom (xmlNode *node)$/;"	f	file:	signature:(xmlNode *node)
make_event_array	alloc.c	/^make_event_array (ptrdiff_t nargs, Lisp_Object *args)$/;"	f	signature:(ptrdiff_t nargs, Lisp_Object *args)
make_event_array	lisp.h	/^extern Lisp_Object make_event_array (ptrdiff_t, Lisp_Object *);$/;"	p	signature:(ptrdiff_t, Lisp_Object *)
make_face_cache	xfaces.c	/^make_face_cache (struct frame *f)$/;"	f	file:	signature:(struct frame *f)
make_face_cache	xfaces.c	/^static struct face_cache *make_face_cache (struct frame *);$/;"	p	file:	signature:(struct frame *)
make_fixnum_or_float	lisp.h	4440;"	d
make_float	alloc.c	/^make_float (double float_value)$/;"	f	signature:(double float_value)
make_float	lisp.h	/^extern Lisp_Object make_float (double);$/;"	p	signature:(double)
MAKE_FLOAT_PAGE_SETUP	gtkutil.c	4204;"	d	file:
MAKE_FLOAT_PAGE_SETUP	gtkutil.c	4217;"	d	file:
make_fontset	fontset.c	/^make_fontset (Lisp_Object frame, Lisp_Object name, Lisp_Object base)$/;"	f	file:	signature:(Lisp_Object frame, Lisp_Object name, Lisp_Object base)
make_fontset	fontset.c	/^static Lisp_Object make_fontset (Lisp_Object, Lisp_Object, Lisp_Object);$/;"	p	file:
make_fontset_for_ascii_face	fontset.c	/^make_fontset_for_ascii_face (struct frame *f, int base_fontset_id, struct face *face)$/;"	f	signature:(struct frame *f, int base_fontset_id, struct face *face)
make_fontset_for_ascii_face	fontset.h	/^extern int make_fontset_for_ascii_face (struct frame *, int, struct face *);$/;"	p	signature:(struct frame *, int, struct face *)
make_formatted_string	alloc.c	/^make_formatted_string (char *buf, const char *format, ...)$/;"	f	signature:(char *buf, const char *format, ...)
make_frame	frame.c	/^make_frame (bool mini_p)$/;"	f	signature:(bool mini_p)
make_frame	frame.h	/^extern struct frame *make_frame (bool);$/;"	p	signature:(bool)
make_frame_visible_1	frame.c	/^make_frame_visible_1 (Lisp_Object window)$/;"	f	file:	signature:(Lisp_Object window)
make_frame_visible_1	frame.c	/^static void make_frame_visible_1 (Lisp_Object);$/;"	p	file:
make_frame_without_minibuffer	frame.c	/^make_frame_without_minibuffer (Lisp_Object mini_window, KBOARD *kb,$/;"	f	signature:(Lisp_Object mini_window, KBOARD *kb, Lisp_Object display)
make_frame_without_minibuffer	frame.h	/^extern struct frame *make_frame_without_minibuffer (Lisp_Object,$/;"	p	signature:(Lisp_Object, struct kboard *, Lisp_Object)
make_gap	insdel.c	/^make_gap (ptrdiff_t nbytes_added)$/;"	f	signature:(ptrdiff_t nbytes_added)
make_gap	lisp.h	/^extern void make_gap (ptrdiff_t);$/;"	p	signature:(ptrdiff_t)
make_gap_1	insdel.c	/^make_gap_1 (struct buffer *b, ptrdiff_t nbytes)$/;"	f	signature:(struct buffer *b, ptrdiff_t nbytes)
make_gap_1	lisp.h	/^extern void make_gap_1 (struct buffer *, ptrdiff_t);$/;"	p	signature:(struct buffer *, ptrdiff_t)
make_gap_larger	insdel.c	/^make_gap_larger (ptrdiff_t nbytes_added)$/;"	f	file:	signature:(ptrdiff_t nbytes_added)
make_gap_smaller	insdel.c	/^make_gap_smaller (ptrdiff_t nbytes_removed)$/;"	f	file:	signature:(ptrdiff_t nbytes_removed)
make_hash_table	fns.c	/^make_hash_table (struct hash_table_test test, EMACS_INT size,$/;"	f	signature:(struct hash_table_test test, EMACS_INT size, float rehash_size, float rehash_threshold, Lisp_Object weak, bool pure)
make_hash_table	lisp.h	/^Lisp_Object make_hash_table (struct hash_table_test, EMACS_INT, float, float,$/;"	p	signature:(struct hash_table_test, EMACS_INT, float, float, Lisp_Object, bool)
make_hdr	unexaix.c	/^make_hdr (int new, int a_out,$/;"	f	file:	signature:(int new, int a_out, const char *a_name, const char *new_name)
make_hdr	unexaix.c	/^static int make_hdr (int, int, const char *, const char *);$/;"	p	file:	signature:(int, int, const char *, const char *)
make_image	image.c	/^make_image (Lisp_Object spec, EMACS_UINT hash)$/;"	f	file:	signature:(Lisp_Object spec, EMACS_UINT hash)
make_image_cache	dispextern.h	/^struct image_cache *make_image_cache (void);$/;"	p	signature:(void)
make_image_cache	image.c	/^make_image_cache (void)$/;"	f	signature:(void)
make_initial_frame	frame.c	/^make_initial_frame (void)$/;"	f	signature:(void)
make_initial_frame	frame.h	/^extern struct frame *make_initial_frame (void);$/;"	p	signature:(void)
make_interval	alloc.c	/^make_interval (void)$/;"	f	signature:(void)
make_interval	intervals.h	/^extern INTERVAL make_interval (void);$/;"	p	signature:(void)
make_invisible_cursor	xterm.c	/^make_invisible_cursor (struct x_display_info *dpyinfo)$/;"	f	file:	signature:(struct x_display_info *dpyinfo)
make_lispy_event	keyboard.c	/^make_lispy_event (struct input_event *event)$/;"	f	file:	signature:(struct input_event *event)
make_lispy_event	keyboard.c	/^static Lisp_Object make_lispy_event (struct input_event *);$/;"	p	file:	signature:(struct input_event *)
make_lispy_focus_in	keyboard.c	/^make_lispy_focus_in (Lisp_Object frame)$/;"	f	file:	signature:(Lisp_Object frame)
make_lispy_focus_in	keyboard.c	/^static Lisp_Object make_lispy_focus_in (Lisp_Object);$/;"	p	file:
make_lispy_focus_out	keyboard.c	/^make_lispy_focus_out (Lisp_Object frame)$/;"	f	file:	signature:(Lisp_Object frame)
make_lispy_focus_out	keyboard.c	/^static Lisp_Object make_lispy_focus_out (Lisp_Object);$/;"	p	file:
make_lispy_movement	keyboard.c	/^make_lispy_movement (struct frame *frame, Lisp_Object bar_window, enum scroll_bar_part part,$/;"	f	file:	signature:(struct frame *frame, Lisp_Object bar_window, enum scroll_bar_part part, Lisp_Object x, Lisp_Object y, Time t)
make_lispy_movement	keyboard.c	/^static Lisp_Object make_lispy_movement (struct frame *, Lisp_Object,$/;"	p	file:	signature:(struct frame *, Lisp_Object, enum scroll_bar_part, Lisp_Object, Lisp_Object, Time)
make_lispy_position	keyboard.c	/^make_lispy_position (struct frame *f, Lisp_Object x, Lisp_Object y,$/;"	f	file:	signature:(struct frame *f, Lisp_Object x, Lisp_Object y, Time t)
make_lispy_switch_frame	keyboard.c	/^make_lispy_switch_frame (Lisp_Object frame)$/;"	f	file:	signature:(Lisp_Object frame)
make_lispy_switch_frame	keyboard.c	/^static Lisp_Object make_lispy_switch_frame (Lisp_Object);$/;"	p	file:
make_lisp_proc	process.c	/^make_lisp_proc (struct Lisp_Process *p)$/;"	f	file:	signature:(struct Lisp_Process *p)
make_lisp_ptr	lisp.h	/^make_lisp_ptr (void *ptr, enum Lisp_Type type)$/;"	f	signature:(void *ptr, enum Lisp_Type type)
make_lisp_symbol	lisp.h	/^make_lisp_symbol (struct Lisp_Symbol *sym)$/;"	f	signature:(struct Lisp_Symbol *sym)
make_lisp_time	editfns.c	/^make_lisp_time (struct timespec t)$/;"	f	signature:(struct timespec t)
make_lisp_time	systime.h	/^extern Lisp_Object make_lisp_time (struct timespec);$/;"	p	signature:(struct timespec)
make_lisp_timeval	sysdep.c	/^make_lisp_timeval (struct timeval t)$/;"	f	file:	signature:(struct timeval t)
MAKE_LOCK_NAME	filelock.c	306;"	d	file:
make_log	profiler.c	/^make_log (EMACS_INT heap_size, EMACS_INT max_stack_depth)$/;"	f	file:	signature:(EMACS_INT heap_size, EMACS_INT max_stack_depth)
make_menu_item	gtkutil.c	/^make_menu_item (const char *utf8_label,$/;"	f	file:	signature:(const char *utf8_label, const char *utf8_key, widget_value *item, GSList **group)
make_minibuffer_frame	frame.c	/^make_minibuffer_frame (void)$/;"	f	signature:(void)
make_minibuffer_frame	frame.h	/^extern struct frame *make_minibuffer_frame (void);$/;"	p	signature:(void)
make_monitor_attribute_list	frame.c	/^make_monitor_attribute_list (struct MonitorInfo *monitors,$/;"	f	signature:(struct MonitorInfo *monitors, int n_monitors, int primary_monitor, Lisp_Object monitor_frames, const char *source)
make_monitor_attribute_list	frame.h	/^extern Lisp_Object make_monitor_attribute_list (struct MonitorInfo *monitors,$/;"	p	signature:(struct MonitorInfo *monitors, int n_monitors, int primary_monitor, Lisp_Object monitor_frames, const char *source)
make_multibyte_string	alloc.c	/^make_multibyte_string (const char *contents,$/;"	f	signature:(const char *contents, ptrdiff_t nchars, ptrdiff_t nbytes)
make_multibyte_string	lisp.h	/^extern Lisp_Object make_multibyte_string (const char *, ptrdiff_t, ptrdiff_t);$/;"	p	signature:(const char *, ptrdiff_t, ptrdiff_t)
make_natnum	lisp.h	/^make_natnum (EMACS_INT n)$/;"	f	signature:(EMACS_INT n)
make_number	lisp.h	/^(make_number) (EMACS_INT n)$/;"	f	signature:(EMACS_INT n)
make_number	lisp.h	/^make_number (EMACS_INT n)$/;"	f	signature:(EMACS_INT n)
make_number	lisp.h	375;"	d
make_parent_window	window.c	/^make_parent_window (Lisp_Object window, bool horflag)$/;"	f	file:	signature:(Lisp_Object window, bool horflag)
make_pointer_integer	lisp.h	/^make_pointer_integer (void *p)$/;"	f	signature:(void *p)
make_process	process.c	/^make_process (Lisp_Object name)$/;"	f	file:	signature:(Lisp_Object name)
make_pure_c_string	alloc.c	/^make_pure_c_string (const char *data, ptrdiff_t nchars)$/;"	f	signature:(const char *data, ptrdiff_t nchars)
make_pure_c_string	lisp.h	/^extern Lisp_Object make_pure_c_string (const char *, ptrdiff_t);$/;"	p	signature:(const char *, ptrdiff_t)
make_pure_float	alloc.c	/^make_pure_float (double num)$/;"	f	file:	signature:(double num)
make_pure_string	alloc.c	/^make_pure_string (const char *data,$/;"	f	signature:(const char *data, ptrdiff_t nchars, ptrdiff_t nbytes, bool multibyte)
make_pure_string	lisp.h	/^extern Lisp_Object make_pure_string (const char *, ptrdiff_t, ptrdiff_t, bool);$/;"	p	signature:(const char *, ptrdiff_t, ptrdiff_t, bool)
make_pure_vector	alloc.c	/^make_pure_vector (ptrdiff_t len)$/;"	f	file:	signature:(ptrdiff_t len)
make_pure_vector	alloc.c	/^static Lisp_Object make_pure_vector (ptrdiff_t);$/;"	p	file:
make_realized_face	xfaces.c	/^make_realized_face (Lisp_Object *attr)$/;"	f	file:	signature:(Lisp_Object *attr)
make_save_funcptr_ptr_obj	alloc.c	/^make_save_funcptr_ptr_obj (void (*a) (void), void *b, Lisp_Object c)$/;"	f	signature:(void (*a) (void), void *b, Lisp_Object c)
make_save_funcptr_ptr_obj	lisp.h	/^extern Lisp_Object make_save_funcptr_ptr_obj (void (*) (void), void *,$/;"	p	signature:(void (*) (void), void *, Lisp_Object)
make_save_int_int_int	alloc.c	/^make_save_int_int_int (ptrdiff_t a, ptrdiff_t b, ptrdiff_t c)$/;"	f	signature:(ptrdiff_t a, ptrdiff_t b, ptrdiff_t c)
make_save_int_int_int	lisp.h	/^extern Lisp_Object make_save_int_int_int (ptrdiff_t, ptrdiff_t, ptrdiff_t);$/;"	p	signature:(ptrdiff_t, ptrdiff_t, ptrdiff_t)
make_save_memory	alloc.c	/^make_save_memory (Lisp_Object *a, ptrdiff_t n)$/;"	f	signature:(Lisp_Object *a, ptrdiff_t n)
make_save_memory	lisp.h	/^extern Lisp_Object make_save_memory (Lisp_Object *, ptrdiff_t);$/;"	p	signature:(Lisp_Object *, ptrdiff_t)
make_save_obj_obj_obj_obj	alloc.c	/^make_save_obj_obj_obj_obj (Lisp_Object a, Lisp_Object b, Lisp_Object c,$/;"	f	signature:(Lisp_Object a, Lisp_Object b, Lisp_Object c, Lisp_Object d)
make_save_obj_obj_obj_obj	lisp.h	/^extern Lisp_Object make_save_obj_obj_obj_obj (Lisp_Object, Lisp_Object,$/;"	p	signature:(Lisp_Object, Lisp_Object, Lisp_Object, Lisp_Object)
make_save_ptr	alloc.c	/^make_save_ptr (void *a)$/;"	f	signature:(void *a)
make_save_ptr	lisp.h	/^extern Lisp_Object make_save_ptr (void *);$/;"	p	signature:(void *)
make_save_ptr_int	alloc.c	/^make_save_ptr_int (void *a, ptrdiff_t b)$/;"	f	signature:(void *a, ptrdiff_t b)
make_save_ptr_int	lisp.h	/^extern Lisp_Object make_save_ptr_int (void *, ptrdiff_t);$/;"	p	signature:(void *, ptrdiff_t)
make_save_ptr_ptr	alloc.c	/^make_save_ptr_ptr (void *a, void *b)$/;"	f	signature:(void *a, void *b)
make_save_ptr_ptr	lisp.h	/^extern Lisp_Object make_save_ptr_ptr (void *, void *);$/;"	p	signature:(void *, void *)
make_scroll_bar_position	keyboard.c	/^make_scroll_bar_position (struct input_event *ev, Lisp_Object type)$/;"	f	file:	signature:(struct input_event *ev, Lisp_Object type)
make_specified_string	alloc.c	/^make_specified_string (const char *contents,$/;"	f	signature:(const char *contents, ptrdiff_t nchars, ptrdiff_t nbytes, bool multibyte)
make_specified_string	lisp.h	/^extern Lisp_Object make_specified_string (const char *,$/;"	p	signature:(const char *, ptrdiff_t, ptrdiff_t, bool)
make_string	alloc.c	/^make_string (const char *contents, ptrdiff_t nbytes)$/;"	f	signature:(const char *contents, ptrdiff_t nbytes)
make_string	lisp.h	/^extern Lisp_Object make_string (const char *, ptrdiff_t);$/;"	p	signature:(const char *, ptrdiff_t)
make_string_from_bytes	alloc.c	/^make_string_from_bytes (const char *contents,$/;"	f	signature:(const char *contents, ptrdiff_t nchars, ptrdiff_t nbytes)
make_string_from_bytes	lisp.h	/^extern Lisp_Object make_string_from_bytes (const char *, ptrdiff_t, ptrdiff_t);$/;"	p	signature:(const char *, ptrdiff_t, ptrdiff_t)
make_subsidiaries	coding.c	/^make_subsidiaries (Lisp_Object base)$/;"	f	file:	signature:(Lisp_Object base)
make_sub_char_table	chartab.c	/^make_sub_char_table (int depth, int min_char, Lisp_Object defalt)$/;"	f	file:	signature:(int depth, int min_char, Lisp_Object defalt)
make_symbol_constant	lisp.h	/^make_symbol_constant (Lisp_Object sym)$/;"	f	signature:(Lisp_Object sym)
make_temp_name	fileio.c	/^make_temp_name (Lisp_Object prefix, bool base64_p)$/;"	f	signature:(Lisp_Object prefix, bool base64_p)
make_temp_name	lisp.h	/^extern Lisp_Object make_temp_name (Lisp_Object, bool);$/;"	p	signature:(Lisp_Object, bool)
make_temp_name_count	fileio.c	/^static unsigned make_temp_name_count, make_temp_name_count_initialized_p;$/;"	v	file:
make_temp_name_count_initialized_p	fileio.c	/^static unsigned make_temp_name_count, make_temp_name_count_initialized_p;$/;"	v	file:
make_temp_name_tbl	fileio.c	/^static const char make_temp_name_tbl[64] =$/;"	v	file:
make_terminal_frame	frame.c	/^make_terminal_frame (struct terminal *terminal)$/;"	f	file:	signature:(struct terminal *terminal)
make_timeval	sysdep.c	/^make_timeval (struct timespec t)$/;"	f	signature:(struct timespec t)
make_unibyte_string	alloc.c	/^make_unibyte_string (const char *contents, ptrdiff_t length)$/;"	f	signature:(const char *contents, ptrdiff_t length)
make_unibyte_string	lisp.h	/^extern Lisp_Object make_unibyte_string (const char *, ptrdiff_t);$/;"	p	signature:(const char *, ptrdiff_t)
make_uninit_bool_vector	alloc.c	/^make_uninit_bool_vector (EMACS_INT nbits)$/;"	f	signature:(EMACS_INT nbits)
make_uninit_bool_vector	lisp.h	/^extern Lisp_Object make_uninit_bool_vector (EMACS_INT);$/;"	p	signature:(EMACS_INT)
make_uninit_multibyte_string	alloc.c	/^make_uninit_multibyte_string (EMACS_INT nchars, EMACS_INT nbytes)$/;"	f	signature:(EMACS_INT nchars, EMACS_INT nbytes)
make_uninit_multibyte_string	lisp.h	/^extern Lisp_Object make_uninit_multibyte_string (EMACS_INT, EMACS_INT);$/;"	p	signature:(EMACS_INT, EMACS_INT)
make_uninit_string	alloc.c	/^make_uninit_string (EMACS_INT length)$/;"	f	signature:(EMACS_INT length)
make_uninit_string	lisp.h	/^extern Lisp_Object make_uninit_string (EMACS_INT);$/;"	p	signature:(EMACS_INT)
make_uninit_sub_char_table	lisp.h	/^make_uninit_sub_char_table (int depth, int min_char)$/;"	f	signature:(int depth, int min_char)
make_uninit_vector	lisp.h	/^make_uninit_vector (ptrdiff_t size)$/;"	f	signature:(ptrdiff_t size)
make_user_ptr	alloc.c	/^make_user_ptr (void (*finalizer) (void *), void *p)$/;"	f	signature:(void (*finalizer) (void *), void *p)
make_user_ptr	lisp.h	/^extern Lisp_Object make_user_ptr (void (*finalizer) (void *), void *p);$/;"	p	signature:(void (*finalizer) (void *), void *p)
make_widget_for_menu_item	gtkutil.c	/^make_widget_for_menu_item (const char *utf8_label, const char *utf8_key)$/;"	f	file:	signature:(const char *utf8_label, const char *utf8_key)
make_widget_value	menu.c	/^make_widget_value (const char *name, char *value,$/;"	f	signature:(const char *name, char *value, bool enabled, Lisp_Object help)
make_widget_value	menu.h	/^extern widget_value *make_widget_value (const char *, char *, bool, Lisp_Object);$/;"	p	signature:(const char *, char *, bool, Lisp_Object)
make_window	window.c	/^make_window (void)$/;"	f	signature:(void)
make_window	window.h	/^extern Lisp_Object make_window (void);$/;"	p	signature:(void)
malloc	alloc.c	788;"	d	file:
malloc	alloc.c	791;"	d	file:
malloc	conf_post.h	100;"	d
malloc	conf_post.h	112;"	d
malloc	gmalloc.c	/^extern void *malloc (size_t size);$/;"	p	file:	signature:(size_t size)
malloc	gmalloc.c	/^malloc (size_t size)$/;"	f	signature:(size_t size)
malloc	gmalloc.c	1691;"	d	file:
malloc	gmalloc.c	65;"	d	file:
malloc	gmalloc.c	70;"	d	file:
malloc	regex.c	142;"	d	file:
malloc	regex.c	144;"	d	file:
malloc	regex.c	246;"	d	file:
malloc	regex.c	248;"	d	file:
malloc	unexmacosx.c	92;"	d	file:
malloc	w32heap.c	325;"	d	file:
MALLOCFLOOD	gmalloc.c	1865;"	d	file:
mallochook	gmalloc.c	/^mallochook (size_t size)$/;"	f	file:	signature:(size_t size)
malloc_after_dump	w32heap.c	/^malloc_after_dump (size_t size)$/;"	f	signature:(size_t size)
malloc_after_dump_9x	w32heap.c	/^malloc_after_dump_9x (size_t size)$/;"	f	signature:(size_t size)
malloc_atfork_handler_child	gmalloc.c	/^malloc_atfork_handler_child (void)$/;"	f	file:	signature:(void)
malloc_atfork_handler_parent	gmalloc.c	/^malloc_atfork_handler_parent (void)$/;"	f	file:	signature:(void)
malloc_atfork_handler_prepare	gmalloc.c	/^malloc_atfork_handler_prepare (void)$/;"	f	file:	signature:(void)
malloc_before_dump	w32heap.c	/^malloc_before_dump (size_t size)$/;"	f	signature:(size_t size)
malloc_block_input	alloc.c	/^malloc_block_input (void)$/;"	f	file:	signature:(void)
MALLOC_BLOCK_INPUT	alloc.c	818;"	d	file:
MALLOC_BLOCK_INPUT	alloc.c	821;"	d	file:
malloc_enable_thread	gmalloc.c	/^malloc_enable_thread (void)$/;"	f	signature:(void)
malloc_enable_thread	lisp.h	/^extern void malloc_enable_thread (void);$/;"	p	signature:(void)
malloc_info	gmalloc.c	/^  } malloc_info;$/;"	t	typeref:union:__anon60	file:
malloc_info	gmalloc.c	75;"	d	file:
malloc_initialize_1	gmalloc.c	/^malloc_initialize_1 (void)$/;"	f	file:	signature:(void)
malloc_initialize_hook	alloc.c	/^malloc_initialize_hook (void)$/;"	f	file:	signature:(void)
MALLOC_IS_GC_ALIGNED	alloc.c	1407;"	d	file:
MALLOC_PROBE	alloc.c	825;"	d	file:
malloc_probe	lisp.h	/^extern void malloc_probe (size_t);$/;"	p	signature:(size_t)
malloc_probe	profiler.c	/^malloc_probe (size_t size)$/;"	f	signature:(size_t size)
malloc_state_ptr	alloc.c	/^static void *malloc_state_ptr;$/;"	v	file:
malloc_unblock_input	alloc.c	/^malloc_unblock_input (void)$/;"	f	file:	signature:(void)
MALLOC_UNBLOCK_INPUT	alloc.c	819;"	d	file:
MALLOC_UNBLOCK_INPUT	alloc.c	822;"	d	file:
malloc_warning	alloc.c	/^malloc_warning (const char *str)$/;"	f	signature:(const char *str)
malloc_warning	lisp.h	/^extern void malloc_warning (const char *);$/;"	p	signature:(const char *)
mandatory_p	image.c	/^  bool mandatory_p;$/;"	m	struct:image_keyword	file:	access:public
MANY	lisp.h	/^    MANY = -2,$/;"	e	enum:maxargs
map	keyboard.c	/^  Lisp_Object map;$/;"	m	struct:keyremap	file:	access:public
map	xdisp.c	/^  (Lisp_Object map, Lisp_Object x, Lisp_Object y)$/;"	v
mapatoms_1	lread.c	/^mapatoms_1 (Lisp_Object sym, Lisp_Object function)$/;"	f	file:	signature:(Lisp_Object sym, Lisp_Object function)
mapcar1	fns.c	/^mapcar1 (EMACS_INT leni, Lisp_Object *vals, Lisp_Object fn, Lisp_Object seq)$/;"	f	file:	signature:(EMACS_INT leni, Lisp_Object *vals, Lisp_Object fn, Lisp_Object seq)
mapping_stack	ccl.c	/^static tr_stack mapping_stack[MAX_MAP_SET_LEVEL];$/;"	v	file:
mapping_stack_pointer	ccl.c	/^static tr_stack *mapping_stack_pointer;$/;"	v	file:
maps	keymap.c	/^  Lisp_Object maps, tail, thisseq;$/;"	m	struct:accessible_keymaps_data	file:	access:public
mapvar	keymap.c	/^  (Lisp_Object command, Lisp_Object mapvar, Lisp_Object name)$/;"	v
MAP_ANON	buffer.c	4610;"	d	file:
MAP_ANON	buffer.c	4612;"	d	file:
MAP_ANON	unexelf.c	72;"	d	file:
MAP_ANON	unexelf.c	74;"	d	file:
map_charset_chars	charset.c	/^map_charset_chars (void (*c_function)(Lisp_Object, Lisp_Object), Lisp_Object function,$/;"	f	signature:(void (*c_function)(Lisp_Object, Lisp_Object), Lisp_Object function, Lisp_Object arg, struct charset *charset, unsigned from, unsigned to)
map_charset_chars	charset.h	/^extern void map_charset_chars (void (*) (Lisp_Object, Lisp_Object),$/;"	p	signature:(void (*) (Lisp_Object, Lisp_Object), Lisp_Object, Lisp_Object, struct charset *, unsigned, unsigned)
map_charset_for_dump	charset.c	/^map_charset_for_dump (void (*c_function) (Lisp_Object, Lisp_Object),$/;"	f	file:	signature:(void (*c_function) (Lisp_Object, Lisp_Object), Lisp_Object function, Lisp_Object arg, unsigned int from, unsigned int to)
map_char_table	chartab.c	/^map_char_table (void (*c_function) (Lisp_Object, Lisp_Object, Lisp_Object),$/;"	f	signature:(void (*c_function) (Lisp_Object, Lisp_Object, Lisp_Object), Lisp_Object function, Lisp_Object table, Lisp_Object arg)
map_char_table	lisp.h	/^extern void map_char_table (void (*) (Lisp_Object, Lisp_Object,$/;"	p	signature:(void (*) (Lisp_Object, Lisp_Object, Lisp_Object), Lisp_Object, Lisp_Object, Lisp_Object)
map_char_table_for_charset	chartab.c	/^map_char_table_for_charset (void (*c_function) (Lisp_Object, Lisp_Object),$/;"	f	signature:(void (*c_function) (Lisp_Object, Lisp_Object), Lisp_Object function, Lisp_Object table, Lisp_Object arg, struct charset *charset, unsigned from, unsigned to)
map_char_table_for_charset	lisp.h	/^extern void map_char_table_for_charset (void (*c_function) (Lisp_Object, Lisp_Object),$/;"	p	signature:(void (*c_function) (Lisp_Object, Lisp_Object), Lisp_Object, Lisp_Object, Lisp_Object, struct charset *, unsigned, unsigned)
MAP_FAILED	buffer.c	4617;"	d	file:
MAP_FAILED	unexelf.c	79;"	d	file:
map_keymap	keymap.c	/^map_keymap (Lisp_Object map, map_keymap_function_t fun, Lisp_Object args,$/;"	f	signature:(Lisp_Object map, map_keymap_function_t fun, Lisp_Object args, void *data, bool autoload)
map_keymap	keymap.h	/^extern void map_keymap (Lisp_Object, map_keymap_function_t, Lisp_Object,$/;"	p	signature:(Lisp_Object, map_keymap_function_t, Lisp_Object, void *, bool)
map_keymap_call	keymap.c	/^map_keymap_call (Lisp_Object key, Lisp_Object val, Lisp_Object fun, void *dummy)$/;"	f	file:	signature:(Lisp_Object key, Lisp_Object val, Lisp_Object fun, void *dummy)
map_keymap_canonical	keymap.c	/^map_keymap_canonical (Lisp_Object map, map_keymap_function_t fun, Lisp_Object args, void *data)$/;"	f	signature:(Lisp_Object map, map_keymap_function_t fun, Lisp_Object args, void *data)
map_keymap_canonical	keymap.h	/^extern void map_keymap_canonical (Lisp_Object map,$/;"	p	signature:(Lisp_Object map, map_keymap_function_t fun, Lisp_Object args, void *data)
map_keymap_char_table_item	keymap.c	/^map_keymap_char_table_item (Lisp_Object args, Lisp_Object key, Lisp_Object val)$/;"	f	file:	signature:(Lisp_Object args, Lisp_Object key, Lisp_Object val)
map_keymap_function_t	keymap.h	/^typedef void (*map_keymap_function_t)$/;"	t
map_keymap_internal	keymap.c	/^map_keymap_internal (Lisp_Object map,$/;"	f	file:	signature:(Lisp_Object map, map_keymap_function_t fun, Lisp_Object args, void *data)
map_keymap_item	keymap.c	/^map_keymap_item (map_keymap_function_t fun, Lisp_Object args, Lisp_Object key, Lisp_Object val, void *data)$/;"	f	file:	signature:(map_keymap_function_t fun, Lisp_Object args, Lisp_Object key, Lisp_Object val, void *data)
map_keypad_keys	w32fns.c	/^map_keypad_keys (unsigned int virt_key, unsigned int extended)$/;"	f	signature:(unsigned int virt_key, unsigned int extended)
map_keypad_keys	w32fns.c	/^unsigned int map_keypad_keys (unsigned int, unsigned int);$/;"	p	file:	signature:(unsigned int, unsigned int)
map_keypad_keys	w32inevt.c	/^extern unsigned int map_keypad_keys (unsigned int, unsigned int);$/;"	p	file:	signature:(unsigned int, unsigned int)
map_obarray	lisp.h	/^extern void map_obarray (Lisp_Object, void (*) (Lisp_Object, Lisp_Object),$/;"	p	signature:(Lisp_Object, void (*) (Lisp_Object, Lisp_Object), Lisp_Object)
map_obarray	lread.c	/^map_obarray (Lisp_Object obarray, void (*fn) (Lisp_Object, Lisp_Object), Lisp_Object arg)$/;"	f	signature:(Lisp_Object obarray, void (*fn) (Lisp_Object, Lisp_Object), Lisp_Object arg)
map_sub_char_table	chartab.c	/^map_sub_char_table (void (*c_function) (Lisp_Object, Lisp_Object, Lisp_Object),$/;"	f	file:	signature:(void (*c_function) (Lisp_Object, Lisp_Object, Lisp_Object), Lisp_Object function, Lisp_Object table, Lisp_Object arg, Lisp_Object val, Lisp_Object range, Lisp_Object top)
map_sub_char_table_for_charset	chartab.c	/^map_sub_char_table_for_charset (void (*c_function) (Lisp_Object, Lisp_Object),$/;"	f	file:	signature:(void (*c_function) (Lisp_Object, Lisp_Object), Lisp_Object function, Lisp_Object table, Lisp_Object arg, Lisp_Object range, struct charset *charset, unsigned from, unsigned to)
map_tool_bar_style	xsettings.c	/^map_tool_bar_style (const char *tool_bar_style)$/;"	f	file:	signature:(const char *tool_bar_style)
map_tty_color	xfaces.c	/^map_tty_color (struct frame *f, struct face *face,$/;"	f	file:	signature:(struct frame *f, struct face *face, enum lface_attribute_index idx, bool *defaulted)
map_w32_filename	w32.c	/^const char *map_w32_filename (const char *, const char **);$/;"	p	file:	signature:(const char *, const char **)
map_w32_filename	w32.c	/^map_w32_filename (const char * name, const char ** pPath)$/;"	f	signature:(const char * name, const char ** pPath)
map_w32_filename	w32fns.c	/^extern const char *map_w32_filename (const char *, const char **);$/;"	p	file:	signature:(const char *, const char **)
marginal_area_string	dispextern.h	/^extern Lisp_Object marginal_area_string (struct window *, enum window_part,$/;"	p	signature:(struct window *, enum window_part, int *, int *, ptrdiff_t *, Lisp_Object *, int *, int *, int *, int *)
marginal_area_string	dispnew.c	/^marginal_area_string (struct window *w, enum window_part part,$/;"	f	signature:(struct window *w, enum window_part part, int *x, int *y, ptrdiff_t *charpos, Lisp_Object *object, int *dx, int *dy, int *width, int *height)
margin_glyphs_to_reserve	dispnew.c	/^margin_glyphs_to_reserve (struct window *w, int total_glyphs, int margin)$/;"	f	file:	signature:(struct window *w, int total_glyphs, int margin)
MARGIN_IN_LINES	window.h	/^enum margin_unit { MARGIN_IN_LINES, MARGIN_IN_PIXELS };$/;"	e	enum:margin_unit
MARGIN_IN_PIXELS	window.h	/^enum margin_unit { MARGIN_IN_LINES, MARGIN_IN_PIXELS };$/;"	e	enum:margin_unit
margin_unit	window.h	/^enum margin_unit { MARGIN_IN_LINES, MARGIN_IN_PIXELS };$/;"	g
mark	process.h	/^    Lisp_Object mark;$/;"	m	struct:Lisp_Process	access:public
marker	marker.c	/^  (Lisp_Object marker, Lisp_Object position, Lisp_Object buffer)$/;"	v
marker	marker.c	/^  (Lisp_Object marker, Lisp_Object type)$/;"	v
marker	marker.c	/^  (register Lisp_Object marker, Lisp_Object type)$/;"	v
MARKERP	lisp.h	/^(MARKERP) (Lisp_Object x)$/;"	f	signature:(Lisp_Object x)
MARKERP	lisp.h	358;"	d
markers	alloc.c	/^  union aligned_Lisp_Misc markers[MARKER_BLOCK_SIZE];$/;"	m	struct:marker_block	typeref:union:marker_block::aligned_Lisp_Misc	file:	access:public
markers	buffer.h	/^    struct Lisp_Marker *markers;$/;"	m	struct:buffer_text	typeref:struct:buffer_text::Lisp_Marker	access:public
marker_block	alloc.c	/^static struct marker_block *marker_block;$/;"	v	typeref:struct:marker_block	file:
marker_block	alloc.c	/^struct marker_block$/;"	s	file:
marker_block::markers	alloc.c	/^  union aligned_Lisp_Misc markers[MARKER_BLOCK_SIZE];$/;"	m	struct:marker_block	typeref:union:marker_block::aligned_Lisp_Misc	file:	access:public
marker_block::next	alloc.c	/^  struct marker_block *next;$/;"	m	struct:marker_block	typeref:struct:marker_block::marker_block	file:	access:public
marker_block_index	alloc.c	/^static int marker_block_index = MARKER_BLOCK_SIZE;$/;"	v	file:
MARKER_BLOCK_SIZE	alloc.c	3615;"	d	file:
marker_byte_position	lisp.h	/^extern ptrdiff_t marker_byte_position (Lisp_Object);$/;"	p	signature:(Lisp_Object)
marker_byte_position	marker.c	/^marker_byte_position (Lisp_Object marker)$/;"	f	signature:(Lisp_Object marker)
marker_free_list	alloc.c	/^static union Lisp_Misc *marker_free_list;$/;"	v	typeref:union:Lisp_Misc	file:
marker_position	lisp.h	/^extern ptrdiff_t marker_position (Lisp_Object);$/;"	p	signature:(Lisp_Object)
marker_position	marker.c	/^marker_position (Lisp_Object marker)$/;"	f	signature:(Lisp_Object marker)
mark_	buffer.h	/^  Lisp_Object mark_;$/;"	m	struct:buffer	access:public
mark_active_	buffer.h	/^  Lisp_Object mark_active_;$/;"	m	struct:buffer	access:public
mark_buffer	alloc.c	/^mark_buffer (struct buffer *buffer)$/;"	f	file:	signature:(struct buffer *buffer)
mark_buffer	alloc.c	/^static void mark_buffer (struct buffer *);$/;"	p	file:	signature:(struct buffer *)
mark_char_table	alloc.c	/^mark_char_table (struct Lisp_Vector *ptr, enum pvec_type pvectype)$/;"	f	file:	signature:(struct Lisp_Vector *ptr, enum pvec_type pvectype)
mark_compiled	alloc.c	/^mark_compiled (struct Lisp_Vector *ptr)$/;"	f	file:	signature:(struct Lisp_Vector *ptr)
mark_discard_killed_buffers	alloc.c	/^mark_discard_killed_buffers (Lisp_Object list)$/;"	f	file:	signature:(Lisp_Object list)
mark_face_cache	alloc.c	/^mark_face_cache (struct face_cache *c)$/;"	f	file:	signature:(struct face_cache *c)
mark_finalizer_list	alloc.c	/^mark_finalizer_list (struct Lisp_Finalizer *head)$/;"	f	file:	signature:(struct Lisp_Finalizer *head)
mark_fringe_data	fringe.c	/^mark_fringe_data (void)$/;"	f	signature:(void)
mark_fringe_data	lisp.h	/^extern void mark_fringe_data (void);$/;"	p	signature:(void)
mark_glyph_matrix	alloc.c	/^mark_glyph_matrix (struct glyph_matrix *matrix)$/;"	f	file:	signature:(struct glyph_matrix *matrix)
mark_image	image.c	/^mark_image (struct image *img)$/;"	f	file:	signature:(struct image *img)
mark_image_cache	dispextern.h	/^void mark_image_cache (struct image_cache *);$/;"	p	signature:(struct image_cache *)
mark_image_cache	image.c	/^mark_image_cache (struct image_cache *c)$/;"	f	signature:(struct image_cache *c)
mark_interval	alloc.c	/^mark_interval (INTERVAL i, void *dummy)$/;"	f	file:	signature:(INTERVAL i, void *dummy)
MARK_INTERVAL_TREE	alloc.c	1563;"	d	file:
mark_kboards	keyboard.c	/^mark_kboards (void)$/;"	f	signature:(void)
mark_kboards	keyboard.h	/^extern void mark_kboards (void);$/;"	p	signature:(void)
mark_localized_symbol	alloc.c	/^mark_localized_symbol (struct Lisp_Symbol *ptr)$/;"	f	file:	signature:(struct Lisp_Symbol *ptr)
mark_maybe_object	alloc.c	/^mark_maybe_object (Lisp_Object obj)$/;"	f	file:	signature:(Lisp_Object obj)
mark_maybe_pointer	alloc.c	/^mark_maybe_pointer (void *p)$/;"	f	file:	signature:(void *p)
mark_memory	alloc.c	/^mark_memory (void *start, void *end)$/;"	f	file:	signature:(void *start, void *end)
mark_modules	emacs-module.c	/^mark_modules (void)$/;"	f	signature:(void)
mark_modules	lisp.h	/^extern void mark_modules (void);$/;"	p	signature:(void)
mark_object	alloc.c	/^mark_object (Lisp_Object arg)$/;"	f	signature:(Lisp_Object arg)
mark_object	lisp.h	/^extern void mark_object (Lisp_Object);$/;"	p	signature:(Lisp_Object)
mark_one_thread	thread.c	/^mark_one_thread (struct thread_state *thread)$/;"	f	file:	signature:(struct thread_state *thread)
mark_overlay	alloc.c	/^mark_overlay (struct Lisp_Overlay *ptr)$/;"	f	file:	signature:(struct Lisp_Overlay *ptr)
mark_pinned_objects	alloc.c	/^mark_pinned_objects (void)$/;"	f	file:	signature:(void)
mark_pinned_symbols	alloc.c	/^mark_pinned_symbols (void)$/;"	f	file:	signature:(void)
mark_save_value	alloc.c	/^mark_save_value (struct Lisp_Save_Value *ptr)$/;"	f	file:	signature:(struct Lisp_Save_Value *ptr)
mark_specpdl	eval.c	/^mark_specpdl (union specbinding *first, union specbinding *ptr)$/;"	f	signature:(union specbinding *first, union specbinding *ptr)
mark_specpdl	lisp.h	/^extern void mark_specpdl (union specbinding *first, union specbinding *ptr);$/;"	p	signature:(union specbinding *first, union specbinding *ptr)
mark_stack	alloc.c	/^mark_stack (char *bottom, char *end)$/;"	f	signature:(char *bottom, char *end)
mark_stack	lisp.h	/^extern void mark_stack (char *, char *);$/;"	p	signature:(char *, char *)
MARK_STRING	alloc.c	210;"	d	file:
mark_terminals	alloc.c	/^mark_terminals (void)$/;"	f	file:	signature:(void)
mark_terminals	alloc.c	/^static void mark_terminals (void);$/;"	p	file:	signature:(void)
mark_threads	lisp.h	/^extern void mark_threads (void);$/;"	p	signature:(void)
mark_threads	thread.c	/^mark_threads (void)$/;"	f	signature:(void)
mark_threads_callback	thread.c	/^mark_threads_callback (void *ignore)$/;"	f	file:	signature:(void *ignore)
mark_vectorlike	alloc.c	/^mark_vectorlike (struct Lisp_Vector *ptr)$/;"	f	file:	signature:(struct Lisp_Vector *ptr)
mark_window_cursors_off	window.c	/^mark_window_cursors_off (struct window *w)$/;"	f	signature:(struct window *w)
mark_window_cursors_off	window.h	/^extern void mark_window_cursors_off (struct window *);$/;"	p	signature:(struct window *)
mark_window_display_accurate	dispextern.h	/^void mark_window_display_accurate (Lisp_Object, bool);$/;"	p	signature:(Lisp_Object, bool)
mark_window_display_accurate	xdisp.c	/^mark_window_display_accurate (Lisp_Object window, bool accurate_p)$/;"	f	signature:(Lisp_Object window, bool accurate_p)
mark_window_display_accurate_1	xdisp.c	/^mark_window_display_accurate_1 (struct window *w, bool accurate_p)$/;"	f	file:	signature:(struct window *w, bool accurate_p)
mark_window_display_accurate_1	xdisp.c	/^static void mark_window_display_accurate_1 (struct window *, bool);$/;"	p	file:	signature:(struct window *, bool)
mark_x	unexaix.c	/^static void mark_x (const char *);$/;"	p	file:	signature:(const char *)
mask	dispextern.h	/^  Pixmap pixmap, mask;$/;"	m	struct:image	access:public
mask	xterm.h	/^  Pixmap mask;$/;"	m	struct:x_bitmap_record	access:public
MaskForeground	image.c	4988;"	d	file:
MASK_ANY	w32font.c	2196;"	d	file:
MASK_ANY	w32font.c	2348;"	d	file:
mask_img	dispextern.h	/^  XImagePtr ximg, mask_img;$/;"	m	struct:image	access:public
mask_to_aspects	inotify.c	/^mask_to_aspects (uint32_t mask)$/;"	f	file:	signature:(uint32_t mask)
match	dired.c	/^  (Lisp_Object directory, Lisp_Object full, Lisp_Object match, Lisp_Object nosort)$/;"	v
match	dired.c	/^  (Lisp_Object directory, Lisp_Object full, Lisp_Object match, Lisp_Object nosort, Lisp_Object id_format)$/;"	v
match	font.h	/^  Lisp_Object (*match) (struct frame *f, Lisp_Object spec);$/;"	m	struct:font_driver	access:public
match	image.c	2793;"	d	file:
match	image.c	2930;"	d	file:
match	image.c	4106;"	d	file:
match	image.c	4317;"	d	file:
matcher_overflow	search.c	/^matcher_overflow (void)$/;"	f	file:	signature:(void)
matching_prefix	ftfont.c	/^matching_prefix (char const *str, ptrdiff_t len, char const *pat)$/;"	f	file:	signature:(char const *str, ptrdiff_t len, char const *pat)
match_limit	search.c	/^match_limit (Lisp_Object num, bool beginningp)$/;"	f	file:	signature:(Lisp_Object num, bool beginningp)
MATCH_MAY_ALLOCATE	regex.c	1230;"	d	file:
MATCH_MAY_ALLOCATE	regex.c	1238;"	d	file:
matrix	ftcrfont.c	/^  FT_Matrix matrix;$/;"	m	struct:ftcrfont_info	file:	access:public
matrix	ftfont.c	/^  FT_Matrix *matrix;$/;"	m	struct:MFLTFontFT	file:	access:public
matrix	ftfont.c	/^  FT_Matrix matrix;$/;"	m	struct:ftfont_info	file:	access:public
matrix	xftfont.c	/^  FT_Matrix matrix;$/;"	m	struct:xftfont_info	file:	access:public
MATRIX_BOTTOM_TEXT_ROW	dispextern.h	1103;"	d
matrix_elt	scroll.c	/^struct matrix_elt$/;"	s	file:
matrix_elt::deletecost	scroll.c	/^    int deletecost;$/;"	m	struct:matrix_elt	file:	access:public
matrix_elt::deletecount	scroll.c	/^    unsigned char deletecount;$/;"	m	struct:matrix_elt	file:	access:public
matrix_elt::insertcost	scroll.c	/^    int insertcost;$/;"	m	struct:matrix_elt	file:	access:public
matrix_elt::insertcount	scroll.c	/^    unsigned char insertcount;$/;"	m	struct:matrix_elt	file:	access:public
matrix_elt::writecost	scroll.c	/^    int writecost;$/;"	m	struct:matrix_elt	file:	access:public
matrix_elt::writecount	scroll.c	/^    unsigned char writecount;$/;"	m	struct:matrix_elt	file:	access:public
MATRIX_FIRST_TEXT_ROW	dispextern.h	1063;"	d
matrix_h	dispextern.h	/^  int matrix_w, matrix_h;$/;"	m	struct:glyph_matrix	access:public
MATRIX_HEADER_LINE_HEIGHT	dispextern.h	1402;"	d
MATRIX_HEADER_LINE_ROW	dispextern.h	1059;"	d
MATRIX_MODE_LINE_HEIGHT	dispextern.h	1393;"	d
MATRIX_MODE_LINE_ROW	dispextern.h	1052;"	d
matrix_row	dispextern.h	/^struct glyph_row *matrix_row (struct glyph_matrix *, int);$/;"	p	signature:(struct glyph_matrix *, int)
MATRIX_ROW	dispextern.h	1044;"	d
MATRIX_ROW	dispextern.h	1046;"	d
matrix_row	dispnew.c	/^matrix_row (struct glyph_matrix *matrix, int row)$/;"	f	signature:(struct glyph_matrix *matrix, int row)
MATRIX_ROW_BOTTOM_Y	dispextern.h	1162;"	d
MATRIX_ROW_CONTINUATION_LINE_P	dispextern.h	1172;"	d
MATRIX_ROW_DISPLAYS_TEXT_P	dispextern.h	1124;"	d
MATRIX_ROW_ENABLED_P	dispextern.h	1118;"	d
MATRIX_ROW_ENDS_IN_MIDDLE_OF_CHAR_P	dispextern.h	1179;"	d
MATRIX_ROW_ENDS_IN_OVERLAY_STRING_P	dispextern.h	1186;"	d
MATRIX_ROW_END_BYTEPOS	dispextern.h	1093;"	d
MATRIX_ROW_END_CHARPOS	dispextern.h	1092;"	d
MATRIX_ROW_EXTENDS_FACE_P	dispextern.h	1111;"	d
MATRIX_ROW_GLYPH_START	dispextern.h	1070;"	d
MATRIX_ROW_LAST_VISIBLE_P	dispextern.h	1167;"	d
MATRIX_ROW_OVERLAPS_PRED_P	dispextern.h	1199;"	d
MATRIX_ROW_OVERLAPS_SUCC_P	dispextern.h	1204;"	d
MATRIX_ROW_PARTIALLY_VISIBLE_AT_BOTTOM_P	dispextern.h	1156;"	d
MATRIX_ROW_PARTIALLY_VISIBLE_AT_TOP_P	dispextern.h	1150;"	d
MATRIX_ROW_PARTIALLY_VISIBLE_P	dispextern.h	1141;"	d
MATRIX_ROW_STARTS_IN_MIDDLE_OF_CHAR_P	dispextern.h	1191;"	d
MATRIX_ROW_START_BYTEPOS	dispextern.h	1085;"	d
MATRIX_ROW_START_CHARPOS	dispextern.h	1084;"	d
MATRIX_ROW_USED	dispextern.h	1075;"	d
MATRIX_ROW_VPOS	dispextern.h	1097;"	d
matrix_w	dispextern.h	/^  int matrix_w, matrix_h;$/;"	m	struct:glyph_matrix	access:public
matrix_x	dispextern.h	/^  int matrix_x, matrix_y;$/;"	m	struct:glyph_matrix	access:public
matrix_y	dispextern.h	/^  int matrix_x, matrix_y;$/;"	m	struct:glyph_matrix	access:public
max	lisp.h	/^  intptr_t max, n;$/;"	m	struct:for_each_tail_internal	access:public
max	lisp.h	60;"	d
max	lisp.h	61;"	d
max	regex.c	515;"	d	file:
max	regex.c	517;"	d	file:
maxargs	alloc.c	/^  enum maxargs maxargs;$/;"	m	union:__anon13	typeref:enum:__anon13::maxargs	file:	access:public
maxargs	lisp.h	/^enum maxargs$/;"	g
MaxBlockSize	w32heap.c	161;"	d	file:
maxcomp	w32.c	/^  DWORD     maxcomp;$/;"	m	struct:volume_info_data	file:	access:public
maxcost	cm.h	/^    int mincost, maxcost;$/;"	m	struct:parmcap	access:public
maxdepth	menu.c	/^     int maxdepth;$/;"	m	struct:skp	file:	access:public
MAXDESC	w32.h	111;"	d
maximum	xfaces.c	/^   Lisp_Object maximum, Lisp_Object width)$/;"	v
MaximumAllocationSize	w32heap.c	/^  SIZE_T MaximumAllocationSize;$/;"	m	struct:_RTL_HEAP_PARAMETERS	file:	access:public
maxpos	dispextern.h	/^  struct text_pos minpos, maxpos;$/;"	m	struct:glyph_row	typeref:struct:glyph_row::	access:public
MAXREQUEST	xfns.c	114;"	d	file:
MAXTIMERS	atimer.c	469;"	d	file:
MAX_1_BYTE_CHAR	character.h	52;"	d
MAX_2_BYTE_CHAR	character.h	53;"	d
MAX_3_BYTE_CHAR	character.h	54;"	d
MAX_4_BYTE_CHAR	character.h	55;"	d
MAX_5_BYTE_CHAR	character.h	56;"	d
MAX_ALLOCA	alloc.c	/^  enum MAX_ALLOCA MAX_ALLOCA;$/;"	m	union:__anon13	typeref:enum:__anon13::MAX_ALLOCA	file:	access:public
MAX_ALLOCA	lisp.h	/^enum MAX_ALLOCA { MAX_ALLOCA = 16 * 1024 };$/;"	e	enum:MAX_ALLOCA
MAX_ALLOCA	lisp.h	/^enum MAX_ALLOCA { MAX_ALLOCA = 16 * 1024 };$/;"	g
MAX_ANNOTATION_LENGTH	coding.c	1093;"	d	file:
max_args	lisp.h	/^    short min_args, max_args;$/;"	m	struct:Lisp_Subr	access:public
max_arity	lisp.h	/^  ptrdiff_t min_arity, max_arity;$/;"	m	struct:Lisp_Module_Function	access:public
max_ascent	dispextern.h	/^  int ascent, descent, max_ascent, max_descent;$/;"	m	struct:it	access:public
MAX_AUTO_COMPOSITION_LOOKBACK	composite.c	154;"	d	file:
MAX_BITMAP_CACHE	fringe.c	949;"	d	file:
MAX_BLOCKS	w32heap.c	163;"	d	file:
max_bounds	nsterm.h	/^  XCharStruct max_bounds;$/;"	m	struct:nsfont_info	access:public
MAX_BPA_STACK	bidi.c	/^enum { MAX_BPA_STACK = max (1, ((MAX_ALLOCA - 2 * sizeof (struct bidi_it))$/;"	e	enum:__anon95	file:
max_bss_sbrk_ptr	sheap.c	/^char *max_bss_sbrk_ptr;$/;"	v
MAX_BUFFER_SIZE	w32heap.c	635;"	d	file:
MAX_BUF_SIZE	regex.c	1650;"	d	file:
MAX_CHAR	character.h	46;"	d
max_char	charset.c	/^  int min_char, max_char;$/;"	m	struct:__anon78	file:	access:public
max_char	charset.h	/^  int min_char, max_char;$/;"	m	struct:charset	access:public
MAX_CHARBUF_EXTRA_SIZE	coding.c	7258;"	d	file:
MAX_CHARBUF_SIZE	coding.c	7254;"	d	file:
max_charset_id	coding.h	/^  int max_charset_id;$/;"	m	struct:coding_system	access:public
MAX_CHILDREN	w32.h	112;"	d
MAX_CLIP_RECTS	xterm.h	154;"	d
max_code	charset.h	/^  unsigned min_code, max_code;$/;"	m	struct:charset	access:public
MAX_COMPOSITION_COMPONENTS	composite.h	49;"	d
max_desc	process.c	/^static int max_desc;$/;"	v	file:
max_descent	dispextern.h	/^  int ascent, descent, max_ascent, max_descent;$/;"	m	struct:it	access:public
MAX_DISP_SCAN	xdisp.c	3628;"	d	file:
MAX_ENCODED_BYTES	keyboard.c	2207;"	d	file:
MAX_EOL_CHECK_COUNT	coding.c	6370;"	d	file:
max_extra_line_spacing	dispextern.h	/^  int max_extra_line_spacing;$/;"	m	struct:it	access:public
MAX_FACE_ID	dispextern.h	1754;"	d
max_fds	thread.c	/^  int max_fds;$/;"	m	struct:select_args	file:	access:public
max_filename_mbslen	w32.c	/^max_filename_mbslen (void)$/;"	f	file:	signature:(void)
max_frame_cols	term.c	/^static int max_frame_cols;$/;"	v	file:
MAX_FRINGE_BITMAPS	dispextern.h	2014;"	d
max_fringe_bitmaps	fringe.c	/^static int max_fringe_bitmaps;$/;"	v	file:
max_fringe_bmp	w32term.c	/^static int max_fringe_bmp = 0;$/;"	v	file:
max_fringe_bmp	xterm.c	/^static int max_fringe_bmp = 0;$/;"	v	file:
max_heap_address	alloc.c	/^static void *min_heap_address, *max_heap_address;$/;"	v	file:
MAX_HEAP_BSS_DIFF	emacs.c	2099;"	d	file:
max_idx	w32.c	/^static int max_idx = ARRAYELTS (samples);$/;"	v	file:
MAX_IMAGE_SIZE	image.c	943;"	d	file:
MAX_LFINFO	filelock.c	/^enum { MAX_LFINFO = 8 * 1024 };$/;"	e	enum:__anon51	file:
max_lisp_eval_depth	globals.h	847;"	d
MAX_LOOKUP_MAX	coding.c	/^enum { MAX_LOOKUP_MAX = min (INT_MAX, MAX_ALLOCA \/ sizeof (int)) };$/;"	e	enum:__anon130	file:
MAX_MAP_SET_LEVEL	ccl.c	578;"	d	file:
MAX_MULTIBYTE_LEADING_CODE	character.h	61;"	d
MAX_MULTIBYTE_LENGTH	character.h	122;"	d
MAX_MULTIBYTE_LENGTH	regex.c	263;"	d	file:
MAX_PARAGRAPH_SEARCH	bidi.c	1517;"	d	file:
MAX_PER_BUFFER_VARS	buffer.h	811;"	d
max_phys_ascent	dispextern.h	/^  int phys_ascent, phys_descent, max_phys_ascent, max_phys_descent;$/;"	m	struct:it	access:public
max_phys_descent	dispextern.h	/^  int phys_ascent, phys_descent, max_phys_ascent, max_phys_descent;$/;"	m	struct:it	access:public
max_protection	unexmacosx.c	/^  vm_prot_t max_protection;$/;"	m	struct:region_t	file:	access:public
MAX_REGNUM	regex.c	1688;"	d	file:
MAX_RW_COUNT	sysdep.c	2449;"	d	file:
MAX_SAVE_STACK	alloc.c	323;"	d	file:
MAX_SCRATCH_GLYPHS	xdisp.c	533;"	d	file:
MAX_SECTIONS	unexaix.c	84;"	d	file:
MAX_SELECTION_QUANTUM	xselect.c	93;"	d	file:
MAX_SINGLE_SLEEP	w32proc.c	298;"	d	file:
max_size	gtkutil.c	/^  ptrdiff_t max_size;$/;"	m	struct:__anon124	file:	access:public
MAX_SOUND_HEADER_BYTES	sound.c	177;"	d	file:
max_specpdl_size	globals.h	849;"	d
MAX_STANDARD_FRINGE_BITMAPS	fringe.c	472;"	d	file:
MAX_STRONG_CHAR_SEARCH	bidi.c	1566;"	d	file:
MAX_UNEXEC_REGIONS	unexmacosx.c	432;"	d	file:
MAX_UNICODE_CHAR	character.h	49;"	d
max_used_fringe_bitmap	fringe.c	/^int max_used_fringe_bitmap = MAX_STANDARD_FRINGE_BITMAPS;$/;"	v
max_width	font.h	/^  int max_width;$/;"	m	struct:font	access:public
maybe_call_debugger	eval.c	/^maybe_call_debugger (Lisp_Object conditions, Lisp_Object sig, Lisp_Object data)$/;"	f	file:	signature:(Lisp_Object conditions, Lisp_Object sig, Lisp_Object data)
maybe_call_debugger	eval.c	/^static bool maybe_call_debugger (Lisp_Object conditions, Lisp_Object sig,$/;"	p	file:	signature:(Lisp_Object conditions, Lisp_Object sig, Lisp_Object data)
maybe_fatal	term.c	/^maybe_fatal (bool must_succeed, struct terminal *terminal,$/;"	f	file:	signature:(bool must_succeed, struct terminal *terminal, const char *str1, const char *str2, ...)
maybe_fatal_sig	sysdep.c	/^maybe_fatal_sig (int sig)$/;"	f	file:	signature:(int sig)
MAYBE_FINISH_COMPOSITION	coding.c	3383;"	d	file:
maybe_gc	lisp.h	/^maybe_gc (void)$/;"	f	signature:(void)
maybe_generate_resize_event	w32inevt.c	/^maybe_generate_resize_event (void)$/;"	f	file:	signature:(void)
maybe_lisp_pointer	alloc.c	/^maybe_lisp_pointer (void *p)$/;"	f	file:	signature:(void *p)
maybe_load_unicows_dll	w32.c	/^maybe_load_unicows_dll (void)$/;"	f	signature:(void)
maybe_load_unicows_dll	w32.h	/^extern HANDLE maybe_load_unicows_dll (void);$/;"	p	signature:(void)
maybe_move_gap	fileio.c	/^maybe_move_gap (struct buffer *b)$/;"	f	file:	signature:(struct buffer *b)
maybe_otf	ftcrfont.c	/^  bool maybe_otf;	  \/* Flag to tell if this may be OTF or not.  *\/$/;"	m	struct:ftcrfont_info	file:	access:public
maybe_otf	ftfont.c	/^  bool maybe_otf;	\/* Flag to tell if this may be OTF or not.  *\/$/;"	m	struct:ftfont_info	file:	access:public
maybe_otf	xftfont.c	/^  bool maybe_otf;	  \/* Flag to tell if this may be OTF or not.  *\/$/;"	m	struct:xftfont_info	file:	access:public
maybe_produce_line_number	xdisp.c	/^maybe_produce_line_number (struct it *it)$/;"	f	file:	signature:(struct it *it)
maybe_produce_line_number	xdisp.c	/^static void maybe_produce_line_number (struct it *);$/;"	p	file:	signature:(struct it *)
maybe_quit	eval.c	/^maybe_quit (void)$/;"	f	signature:(void)
maybe_quit	lisp.h	/^extern void maybe_quit (void);$/;"	p	signature:(void)
maybe_quit	regex.c	/^static void maybe_quit (void) {}$/;"	f	file:	signature:(void)
maybe_reacquire_global_lock	thread.c	/^maybe_reacquire_global_lock (void)$/;"	f	signature:(void)
maybe_reacquire_global_lock	thread.h	/^extern void maybe_reacquire_global_lock (void);$/;"	p	signature:(void)
maybe_resize_hash_table	fns.c	/^maybe_resize_hash_table (struct Lisp_Hash_Table *h)$/;"	f	file:	signature:(struct Lisp_Hash_Table *h)
maybe_unify_char	charset.c	/^maybe_unify_char (int c, Lisp_Object val)$/;"	f	file:	signature:(int c, Lisp_Object val)
MAY_USE_WITH_COLORS_P	term.c	1901;"	d	file:
MB_EMACS_SILENT	w32fns.c	248;"	d	file:
mcheck	gmalloc.c	/^extern int mcheck (void (*abortfunc) (enum mcheck_status));$/;"	p	file:	signature:(void (*abortfunc) (enum mcheck_status))
mcheck	gmalloc.c	/^mcheck (void (*func) (enum mcheck_status))$/;"	f	signature:(void (*func) (enum mcheck_status))
MCHECK_DISABLED	gmalloc.c	/^    MCHECK_DISABLED = -1,	\/* Consistency checking is not turned on.  *\/$/;"	e	enum:mcheck_status	file:
MCHECK_FREE	gmalloc.c	/^    MCHECK_FREE,		\/* Block freed twice.  *\/$/;"	e	enum:mcheck_status	file:
MCHECK_HEAD	gmalloc.c	/^    MCHECK_HEAD,		\/* Memory before the block was clobbered.  *\/$/;"	e	enum:mcheck_status	file:
MCHECK_OK	gmalloc.c	/^    MCHECK_OK,			\/* Block is fine.  *\/$/;"	e	enum:mcheck_status	file:
mcheck_status	gmalloc.c	/^enum mcheck_status$/;"	g	file:
MCHECK_TAIL	gmalloc.c	/^    MCHECK_TAIL			\/* Memory after the block was clobbered.  *\/$/;"	e	enum:mcheck_status	file:
mcheck_used	gmalloc.c	/^static int mcheck_used = 0;$/;"	v	file:
memalign	gmalloc.c	/^memalign (size_t alignment, size_t size)$/;"	f	signature:(size_t alignment, size_t size)
member	xrdb.c	/^member (char *elt, List list)$/;"	f	file:	signature:(char *elt, List list)
memclear	lisp.h	/^memclear (void *p, ptrdiff_t nbytes)$/;"	f	signature:(void *p, ptrdiff_t nbytes)
memory_below_frame	termchar.h	/^  bool_bf memory_below_frame : 1;$/;"	m	struct:tty_display_info	access:public
memory_full	alloc.c	/^memory_full (size_t nbytes)$/;"	f	signature:(size_t nbytes)
memory_full	lisp.h	/^extern _Noreturn void memory_full (size_t);$/;"	p	signature:(size_t)
memory_full_cons_threshold	alloc.c	/^EMACS_INT memory_full_cons_threshold;$/;"	v
memory_log	profiler.c	/^static Lisp_Object memory_log;$/;"	v	file:
MEMORY_STATUS_EX	w32.c	/^} MEMORY_STATUS_EX,*LPMEMORY_STATUS_EX;$/;"	t	typeref:struct:_MEMORY_STATUS_EX	file:
memory_warnings	lisp.h	/^extern void memory_warnings (void *, void (*warnfun) (const char *));$/;"	p	signature:(void *, void (*warnfun) (const char *))
memory_warnings	vm-limit.c	/^memory_warnings (void *start, void (*warnfun) (const char *))$/;"	f	signature:(void *start, void (*warnfun) (const char *))
memq_no_quit	w32font.c	/^memq_no_quit (Lisp_Object elt, Lisp_Object list)$/;"	f	file:	signature:(Lisp_Object elt, Lisp_Object list)
memq_no_quit	w32uniscribe.c	/^memq_no_quit (Lisp_Object elt, Lisp_Object list)$/;"	f	file:	signature:(Lisp_Object elt, Lisp_Object list)
MEM_ALIGN	buffer.c	4697;"	d	file:
MEM_ALIGN	ralloc.c	75;"	d	file:
MEM_BLACK	alloc.c	/^  enum {MEM_BLACK, MEM_RED} color;$/;"	e	enum:mem_node::__anon3	file:
mem_delete	alloc.c	/^mem_delete (struct mem_node *z)$/;"	f	file:	signature:(struct mem_node *z)
mem_delete	alloc.c	/^static void mem_delete (struct mem_node *);$/;"	p	file:	signature:(struct mem_node *)
mem_delete_fixup	alloc.c	/^mem_delete_fixup (struct mem_node *x)$/;"	f	file:	signature:(struct mem_node *x)
mem_delete_fixup	alloc.c	/^static void mem_delete_fixup (struct mem_node *);$/;"	p	file:	signature:(struct mem_node *)
mem_find	alloc.c	/^mem_find (void *start)$/;"	f	file:	signature:(void *start)
mem_find	alloc.c	/^static struct mem_node *mem_find (void *);$/;"	p	file:	signature:(void *)
mem_init	alloc.c	/^mem_init (void)$/;"	f	file:	signature:(void)
mem_insert	alloc.c	/^mem_insert (void *start, void *end, enum mem_type type)$/;"	f	file:	signature:(void *start, void *end, enum mem_type type)
mem_insert	alloc.c	/^static struct mem_node *mem_insert (void *, void *, enum mem_type);$/;"	p	file:	signature:(void *, void *, enum mem_type)
mem_insert_fixup	alloc.c	/^mem_insert_fixup (struct mem_node *x)$/;"	f	file:	signature:(struct mem_node *x)
mem_insert_fixup	alloc.c	/^static void mem_insert_fixup (struct mem_node *);$/;"	p	file:	signature:(struct mem_node *)
MEM_NIL	alloc.c	454;"	d	file:
mem_node	alloc.c	/^struct mem_node$/;"	s	file:
mem_node::color	alloc.c	/^  enum {MEM_BLACK, MEM_RED} color;$/;"	m	struct:mem_node	typeref:enum:mem_node::__anon3	file:	access:public
mem_node::end	alloc.c	/^  void *start, *end;$/;"	m	struct:mem_node	file:	access:public
mem_node::left	alloc.c	/^  struct mem_node *left, *right;$/;"	m	struct:mem_node	typeref:struct:mem_node::mem_node	file:	access:public
mem_node::MEM_BLACK	alloc.c	/^  enum {MEM_BLACK, MEM_RED} color;$/;"	e	enum:mem_node::__anon3	file:
mem_node::MEM_RED	alloc.c	/^  enum {MEM_BLACK, MEM_RED} color;$/;"	e	enum:mem_node::__anon3	file:
mem_node::parent	alloc.c	/^  struct mem_node *parent;$/;"	m	struct:mem_node	typeref:struct:mem_node::mem_node	file:	access:public
mem_node::right	alloc.c	/^  struct mem_node *left, *right;$/;"	m	struct:mem_node	typeref:struct:mem_node::	file:	access:public
mem_node::start	alloc.c	/^  void *start, *end;$/;"	m	struct:mem_node	file:	access:public
mem_node::type	alloc.c	/^  enum mem_type type;$/;"	m	struct:mem_node	typeref:enum:mem_node::mem_type	file:	access:public
MEM_RED	alloc.c	/^  enum {MEM_BLACK, MEM_RED} color;$/;"	e	enum:mem_node::__anon3	file:
mem_root	alloc.c	/^static struct mem_node *mem_root;$/;"	v	typeref:struct:mem_node	file:
mem_rotate_left	alloc.c	/^mem_rotate_left (struct mem_node *x)$/;"	f	file:	signature:(struct mem_node *x)
mem_rotate_left	alloc.c	/^static void mem_rotate_left (struct mem_node *);$/;"	p	file:	signature:(struct mem_node *)
mem_rotate_right	alloc.c	/^mem_rotate_right (struct mem_node *x)$/;"	f	file:	signature:(struct mem_node *x)
mem_rotate_right	alloc.c	/^static void mem_rotate_right (struct mem_node *);$/;"	p	file:	signature:(struct mem_node *)
MEM_ROUNDUP	ralloc.c	76;"	d	file:
mem_type	alloc.c	/^enum mem_type$/;"	g	file:
MEM_TYPE_BUFFER	alloc.c	/^  MEM_TYPE_BUFFER,$/;"	e	enum:mem_type	file:
MEM_TYPE_CONS	alloc.c	/^  MEM_TYPE_CONS,$/;"	e	enum:mem_type	file:
MEM_TYPE_FLOAT	alloc.c	/^  MEM_TYPE_FLOAT,$/;"	e	enum:mem_type	file:
MEM_TYPE_MISC	alloc.c	/^  MEM_TYPE_MISC,$/;"	e	enum:mem_type	file:
MEM_TYPE_NON_LISP	alloc.c	/^  MEM_TYPE_NON_LISP,$/;"	e	enum:mem_type	file:
MEM_TYPE_SPARE	alloc.c	/^  MEM_TYPE_SPARE$/;"	e	enum:mem_type	file:
MEM_TYPE_STRING	alloc.c	/^  MEM_TYPE_STRING,$/;"	e	enum:mem_type	file:
MEM_TYPE_SYMBOL	alloc.c	/^  MEM_TYPE_SYMBOL,$/;"	e	enum:mem_type	file:
MEM_TYPE_VECTORLIKE	alloc.c	/^  MEM_TYPE_VECTORLIKE,$/;"	e	enum:mem_type	file:
MEM_TYPE_VECTOR_BLOCK	alloc.c	/^  MEM_TYPE_VECTOR_BLOCK,$/;"	e	enum:mem_type	file:
mem_z	alloc.c	/^static struct mem_node mem_z;$/;"	v	typeref:struct:mem_node	file:
menu	term.c	/^  tty_menu *menu;$/;"	m	struct:tty_menu_state	file:	access:public
menubar_active	w32term.h	/^  unsigned menubar_active : 1;$/;"	m	struct:w32_output	access:public
menubar_height	xterm.h	/^  int menubar_height;$/;"	m	struct:x_output	access:public
menubar_id_to_frame	xmenu.c	/^menubar_id_to_frame (LWLIB_ID id)$/;"	f	file:	signature:(LWLIB_ID id)
menubar_in_use	w32fns.c	/^int menubar_in_use = 0;$/;"	v
menubar_map_cb	gtkutil.c	/^menubar_map_cb (GtkWidget *w, gpointer user_data)$/;"	f	file:	signature:(GtkWidget *w, gpointer user_data)
menubar_selection_callback	w32menu.c	/^menubar_selection_callback (struct frame *f, void * client_data)$/;"	f	signature:(struct frame *f, void * client_data)
menubar_selection_callback	w32menu.c	/^void menubar_selection_callback (struct frame *, void *);$/;"	p	file:	signature:(struct frame *, void *)
menubar_selection_callback	w32term.c	/^extern void menubar_selection_callback (struct frame *, void *);$/;"	p	file:	signature:(struct frame *, void *)
menubar_selection_callback	xmenu.c	/^menubar_selection_callback (GtkWidget *widget, gpointer client_data)$/;"	f	file:	signature:(GtkWidget *widget, gpointer client_data)
menubar_selection_callback	xmenu.c	/^menubar_selection_callback (Widget widget, LWLIB_ID id, XtPointer client_data)$/;"	f	file:	signature:(Widget widget, LWLIB_ID id, XtPointer client_data)
menubar_widget	w32term.h	/^  HMENU menubar_widget;$/;"	m	struct:w32_output	access:public
menubar_widget	xterm.h	/^  GtkWidget *menubar_widget;$/;"	m	struct:x_output	access:public
menubar_widget	xterm.h	/^  Widget menubar_widget;$/;"	m	struct:x_output	access:public
menuitem_destroy_callback	gtkutil.c	/^menuitem_destroy_callback (GtkWidget *w, gpointer client_data)$/;"	f	file:	signature:(GtkWidget *w, gpointer client_data)
menuitem_highlight_callback	gtkutil.c	/^menuitem_highlight_callback (GtkWidget *w,$/;"	f	file:	signature:(GtkWidget *w, GdkEventCrossing *event, gpointer client_data)
MENU_BAR_ACTIVATE_EVENT	termhooks.h	/^  MENU_BAR_ACTIVATE_EVENT,      \/* A button press in the menu bar$/;"	e	enum:event_kind
MENU_BAR_EVENT	termhooks.h	/^  MENU_BAR_EVENT,		\/* An event generated by the menu bar.$/;"	e	enum:event_kind
menu_bar_height	frame.h	/^  int menu_bar_height;$/;"	m	struct:frame	access:public
menu_bar_item	keyboard.c	/^menu_bar_item (Lisp_Object key, Lisp_Object item, Lisp_Object dummy1, void *dummy2)$/;"	f	file:	signature:(Lisp_Object key, Lisp_Object item, Lisp_Object dummy1, void *dummy2)
menu_bar_item	keyboard.c	/^static void menu_bar_item (Lisp_Object, Lisp_Object, Lisp_Object, void *);$/;"	p	file:	signature:(Lisp_Object, Lisp_Object, Lisp_Object, void *)
menu_bar_items	frame.h	/^  Lisp_Object menu_bar_items;$/;"	m	struct:frame	access:public
menu_bar_items	keyboard.c	/^menu_bar_items (Lisp_Object old)$/;"	f	signature:(Lisp_Object old)
menu_bar_items	lisp.h	/^extern Lisp_Object menu_bar_items (Lisp_Object);$/;"	p	signature:(Lisp_Object)
menu_bar_items_index	keyboard.c	/^static int menu_bar_items_index;$/;"	v	file:
menu_bar_items_used	frame.h	/^  int menu_bar_items_used;$/;"	m	struct:frame	access:public
menu_bar_items_used	gtkutil.h	/^  int           menu_bar_items_used;$/;"	m	struct:xg_menu_cb_data_	access:public
menu_bar_items_vector	keyboard.c	/^static Lisp_Object menu_bar_items_vector;$/;"	v	file:
menu_bar_lines	frame.h	/^  int menu_bar_lines;$/;"	m	struct:frame	access:public
menu_bar_one_keymap_changed_items	keyboard.c	/^static Lisp_Object menu_bar_one_keymap_changed_items;$/;"	v	file:
menu_bar_vector	frame.h	/^  Lisp_Object menu_bar_vector;$/;"	m	struct:frame	access:public
menu_bar_vector	gtkutil.h	/^  Lisp_Object   menu_bar_vector;$/;"	m	struct:xg_menu_cb_data_	access:public
menu_bar_window	frame.h	/^  Lisp_Object menu_bar_window;$/;"	m	struct:frame	access:public
menu_destroy_callback	gtkutil.c	/^menu_destroy_callback (GtkWidget *w, gpointer client_data)$/;"	f	file:	signature:(GtkWidget *w, gpointer client_data)
menu_face_changed_default	xfaces.c	/^static bool menu_face_changed_default;$/;"	v	file:
menu_face_changed_p	dispextern.h	/^  bool_bf menu_face_changed_p : 1;$/;"	m	struct:face_cache	access:public
MENU_FACE_ID	dispextern.h	/^  MENU_FACE_ID,$/;"	e	enum:face_id
MENU_FOR_CLICK	menu.h	/^  MENU_FOR_CLICK = 0x2,$/;"	e	enum:__anon138
MENU_FREE_DELAY	w32fns.c	203;"	d	file:
MENU_FREE_ID	w32fns.c	200;"	d	file:
menu_free_timer	w32fns.c	/^static unsigned menu_free_timer = 0;$/;"	v	file:
MENU_H	menu.h	20;"	d
menu_help_callback	xmenu.c	/^menu_help_callback (char const *help_string, int pane, int item)$/;"	f	file:	signature:(char const *help_string, int pane, int item)
menu_help_frame	xmenu.c	/^static struct frame *menu_help_frame;$/;"	v	typeref:struct:frame	file:
menu_help_itemno	term.c	/^static int menu_help_paneno, menu_help_itemno;$/;"	v	file:
menu_help_message	term.c	/^static const char *menu_help_message, *prev_menu_help_message;$/;"	v	file:
menu_help_paneno	term.c	/^static int menu_help_paneno, menu_help_itemno;$/;"	v	file:
menu_highlight_callback	xmenu.c	/^menu_highlight_callback (GtkWidget *widget, gpointer call_data)$/;"	f	file:	signature:(GtkWidget *widget, gpointer call_data)
menu_highlight_callback	xmenu.c	/^menu_highlight_callback (Widget widget, LWLIB_ID id, void *call_data)$/;"	f	file:	signature:(Widget widget, LWLIB_ID id, void *call_data)
menu_items	menu.c	/^Lisp_Object menu_items;$/;"	v
menu_items_allocated	menu.c	/^int menu_items_allocated;$/;"	v
menu_items_inuse	menu.c	/^Lisp_Object menu_items_inuse;$/;"	v
MENU_ITEMS_ITEM_DEFINITION	keyboard.h	/^  MENU_ITEMS_ITEM_DEFINITION,$/;"	e	enum:menu_item_idx
MENU_ITEMS_ITEM_ENABLE	keyboard.h	/^  MENU_ITEMS_ITEM_ENABLE,$/;"	e	enum:menu_item_idx
MENU_ITEMS_ITEM_EQUIV_KEY	keyboard.h	/^  MENU_ITEMS_ITEM_EQUIV_KEY,$/;"	e	enum:menu_item_idx
MENU_ITEMS_ITEM_HELP	keyboard.h	/^  MENU_ITEMS_ITEM_HELP,$/;"	e	enum:menu_item_idx
MENU_ITEMS_ITEM_LENGTH	keyboard.h	/^  MENU_ITEMS_ITEM_LENGTH$/;"	e	enum:menu_item_idx
MENU_ITEMS_ITEM_NAME	keyboard.h	/^  MENU_ITEMS_ITEM_NAME = 0,$/;"	e	enum:menu_item_idx
MENU_ITEMS_ITEM_SELECTED	keyboard.h	/^  MENU_ITEMS_ITEM_SELECTED,$/;"	e	enum:menu_item_idx
MENU_ITEMS_ITEM_TYPE	keyboard.h	/^  MENU_ITEMS_ITEM_TYPE,$/;"	e	enum:menu_item_idx
MENU_ITEMS_ITEM_VALUE	keyboard.h	/^  MENU_ITEMS_ITEM_VALUE,$/;"	e	enum:menu_item_idx
menu_items_n_panes	menu.c	/^int menu_items_n_panes;$/;"	v
MENU_ITEMS_PANE_LENGTH	keyboard.h	346;"	d
MENU_ITEMS_PANE_NAME	keyboard.h	344;"	d
MENU_ITEMS_PANE_PREFIX	keyboard.h	345;"	d
menu_items_submenu_depth	menu.c	/^static int menu_items_submenu_depth;$/;"	v	file:
menu_items_used	menu.c	/^int menu_items_used;$/;"	v
menu_item_eval_property	keyboard.c	/^menu_item_eval_property (Lisp_Object sexpr)$/;"	f	signature:(Lisp_Object sexpr)
menu_item_eval_property	keyboard.h	/^extern Lisp_Object menu_item_eval_property (Lisp_Object);$/;"	p	signature:(Lisp_Object)
menu_item_eval_property_1	keyboard.c	/^menu_item_eval_property_1 (Lisp_Object arg)$/;"	f	file:	signature:(Lisp_Object arg)
menu_item_idx	keyboard.h	/^enum menu_item_idx$/;"	g
MENU_ITEM_NAME	gtkutil.c	2283;"	d	file:
menu_item_selection	xmenu.c	/^static Lisp_Object *volatile menu_item_selection;$/;"	v	file:
menu_item_width	menu.c	/^menu_item_width (const unsigned char *str)$/;"	f	signature:(const unsigned char *str)
menu_item_width	menu.h	/^extern ptrdiff_t menu_item_width (const unsigned char *);$/;"	p	signature:(const unsigned char *)
MENU_KBD_NAVIGATION	menu.h	/^  MENU_KBD_NAVIGATION = 0x4$/;"	e	enum:__anon138
MENU_KEYMAPS	menu.h	/^  MENU_KEYMAPS = 0x1,$/;"	e	enum:__anon138
menu_position_func	xmenu.c	/^menu_position_func (GtkMenu *menu, gint *x, gint *y, gboolean *push_in, gpointer user_data)$/;"	f	file:	signature:(GtkMenu *menu, gint *x, gint *y, gboolean *push_in, gpointer user_data)
menu_prompting	globals.h	1001;"	d
menu_prompt_more_char	globals.h	811;"	d
menu_separator_name_p	keyboard.c	/^menu_separator_name_p (const char *label)$/;"	f	signature:(const char *label)
menu_separator_name_p	keyboard.h	/^extern bool menu_separator_name_p (const char *);$/;"	p	signature:(const char *)
menu_show_hook	termhooks.h	/^  Lisp_Object (*menu_show_hook) (struct frame *f, int x, int y, int menuflags,$/;"	m	struct:terminal	access:public
merge	lisp.h	/^extern Lisp_Object merge (Lisp_Object, Lisp_Object, Lisp_Object);$/;"	p	signature:(Lisp_Object, Lisp_Object, Lisp_Object)
merge_and_sort_env	w32proc.c	/^merge_and_sort_env (char **envp1, char **envp2, char **new_envp)$/;"	f	file:	signature:(char **envp1, char **envp2, char **new_envp)
merge_escape_glyph_face	xdisp.c	/^merge_escape_glyph_face (struct it *it)$/;"	f	file:	signature:(struct it *it)
merge_faces	dispextern.h	/^int merge_faces (struct frame *, Lisp_Object, int, int);$/;"	p	signature:(struct frame *, Lisp_Object, int, int)
merge_faces	xfaces.c	/^merge_faces (struct frame *f, Lisp_Object face_name, int face_id,$/;"	f	signature:(struct frame *f, Lisp_Object face_name, int face_id, int base_face_id)
merge_face_heights	xfaces.c	/^merge_face_heights (Lisp_Object from, Lisp_Object to, Lisp_Object invalid)$/;"	f	file:	signature:(Lisp_Object from, Lisp_Object to, Lisp_Object invalid)
merge_face_ref	xfaces.c	/^merge_face_ref (struct frame *f, Lisp_Object face_ref, Lisp_Object *to,$/;"	f	file:	signature:(struct frame *f, Lisp_Object face_ref, Lisp_Object *to, bool err_msgs, struct named_merge_point *named_merge_points)
merge_face_ref	xfaces.c	/^static bool merge_face_ref (struct frame *, Lisp_Object, Lisp_Object *,$/;"	p	file:	signature:(struct frame *, Lisp_Object, Lisp_Object *, bool, struct named_merge_point *)
merge_face_vectors	xfaces.c	/^merge_face_vectors (struct frame *f, Lisp_Object *from, Lisp_Object *to,$/;"	f	file:	signature:(struct frame *f, Lisp_Object *from, Lisp_Object *to, struct named_merge_point *named_merge_points)
merge_font_spec	font.c	/^merge_font_spec (Lisp_Object from, Lisp_Object to)$/;"	f	signature:(Lisp_Object from, Lisp_Object to)
merge_font_spec	font.h	/^extern Lisp_Object merge_font_spec (Lisp_Object, Lisp_Object);$/;"	p	signature:(Lisp_Object, Lisp_Object)
merge_glyphless_glyph_face	dispextern.h	/^extern int merge_glyphless_glyph_face (struct it *);$/;"	p	signature:(struct it *)
merge_glyphless_glyph_face	xdisp.c	/^merge_glyphless_glyph_face (struct it *it)$/;"	f	signature:(struct it *it)
MERGE_INTERVAL_CACHE	intervals.h	189;"	d
merge_interval_left	intervals.c	/^merge_interval_left (register INTERVAL i)$/;"	f	signature:(register INTERVAL i)
merge_interval_left	intervals.h	/^extern INTERVAL merge_interval_left (INTERVAL);$/;"	p	signature:(INTERVAL)
merge_interval_right	intervals.c	/^merge_interval_right (register INTERVAL i)$/;"	f	file:	signature:(register INTERVAL i)
merge_interval_right	intervals.c	/^static INTERVAL merge_interval_right (INTERVAL);$/;"	p	file:
merge_named_face	xfaces.c	/^merge_named_face (struct frame *f, Lisp_Object face_name, Lisp_Object *to,$/;"	f	file:	signature:(struct frame *f, Lisp_Object face_name, Lisp_Object *to, struct named_merge_point *named_merge_points)
merge_properties	intervals.c	/^merge_properties (register INTERVAL source, register INTERVAL target)$/;"	f	file:	signature:(register INTERVAL source, register INTERVAL target)
merge_properties_sticky	intervals.c	/^merge_properties_sticky (Lisp_Object pleft, Lisp_Object pright)$/;"	f	file:	signature:(Lisp_Object pleft, Lisp_Object pright)
merge_properties_sticky	intervals.c	/^static Lisp_Object merge_properties_sticky (Lisp_Object, Lisp_Object);$/;"	p	file:
message	xdisp.c	/^message (const char *m, ...)$/;"	f	signature:(const char *m, ...)
message1	lisp.h	/^extern void message1 (const char *);$/;"	p	signature:(const char *)
message1	xdisp.c	/^message1 (const char *m)$/;"	f	signature:(const char *m)
message1_nolog	lisp.h	/^extern void message1_nolog (const char *);$/;"	p	signature:(const char *)
message1_nolog	xdisp.c	/^message1_nolog (const char *m)$/;"	f	signature:(const char *m)
message3	lisp.h	/^extern void message3 (Lisp_Object);$/;"	p	signature:(Lisp_Object)
message3	xdisp.c	/^message3 (Lisp_Object m)$/;"	f	signature:(Lisp_Object m)
message3_nolog	lisp.h	/^extern void message3_nolog (Lisp_Object);$/;"	p	signature:(Lisp_Object)
message3_nolog	xdisp.c	/^message3_nolog (Lisp_Object m)$/;"	f	signature:(Lisp_Object m)
MessageBoxW_Proc	w32menu.c	/^typedef int (WINAPI * MessageBoxW_Proc) ($/;"	t	file:
message_buf_print	xdisp.c	/^static bool message_buf_print;$/;"	v	file:
message_cleared_p	xdisp.c	/^static bool message_cleared_p;$/;"	v	file:
message_dolog	lisp.h	/^extern void message_dolog (const char *, ptrdiff_t, bool, bool);$/;"	p	signature:(const char *, ptrdiff_t, bool, bool)
message_dolog	xdisp.c	/^message_dolog (const char *m, ptrdiff_t nbytes, bool nlflag, bool multibyte)$/;"	f	signature:(const char *m, ptrdiff_t nbytes, bool nlflag, bool multibyte)
message_dolog_marker1	xdisp.c	/^static Lisp_Object message_dolog_marker1;$/;"	v	file:
message_dolog_marker2	xdisp.c	/^static Lisp_Object message_dolog_marker2;$/;"	v	file:
message_dolog_marker3	xdisp.c	/^static Lisp_Object message_dolog_marker3;$/;"	v	file:
message_enable_multibyte	xdisp.c	/^static bool message_enable_multibyte;$/;"	v	file:
message_log_check_duplicate	xdisp.c	/^message_log_check_duplicate (ptrdiff_t prev_bol_byte, ptrdiff_t this_bol_byte)$/;"	f	file:	signature:(ptrdiff_t prev_bol_byte, ptrdiff_t this_bol_byte)
message_log_check_duplicate	xdisp.c	/^static intmax_t message_log_check_duplicate (ptrdiff_t, ptrdiff_t);$/;"	p	file:
message_log_maybe_newline	lisp.h	/^extern void message_log_maybe_newline (void);$/;"	p	signature:(void)
message_log_maybe_newline	xdisp.c	/^message_log_maybe_newline (void)$/;"	f	signature:(void)
message_log_need_newline	xdisp.c	/^static bool message_log_need_newline;$/;"	v	file:
message_to_stderr	xdisp.c	/^message_to_stderr (Lisp_Object m)$/;"	f	file:	signature:(Lisp_Object m)
message_truncate_lines	globals.h	1003;"	d
message_type	xselect.c	/^   Lisp_Object message_type, Lisp_Object format, Lisp_Object values)$/;"	v
message_with_string	lisp.h	/^extern void message_with_string (const char *, Lisp_Object, bool);$/;"	p	signature:(const char *, Lisp_Object, bool)
message_with_string	xdisp.c	/^message_with_string (const char *m, Lisp_Object string, bool log)$/;"	f	signature:(const char *m, Lisp_Object string, bool log)
meta	keyboard.c	/^  (Lisp_Object interrupt, Lisp_Object flow, Lisp_Object meta, Lisp_Object quit)$/;"	v
meta	keyboard.c	/^  (Lisp_Object meta, Lisp_Object terminal)$/;"	v
meta_key	termchar.h	/^  int meta_key;$/;"	m	struct:tty_display_info	access:public
meta_map	keymap.c	/^Lisp_Object meta_map;		\/* The keymap used for globally bound$/;"	v
meta_modifier	termhooks.h	/^  meta_modifier	=  CHAR_META	\/* Under X, the XK_Meta_[LR] keysyms.  *\/$/;"	e	enum:__anon72
meta_mod_mask	xterm.h	/^  int meta_mod_mask, shift_lock_mask;$/;"	m	struct:x_display_info	access:public
meta_prefix_char	globals.h	813;"	d
METER_1	bytecode.c	59;"	d	file:
METER_2	bytecode.c	57;"	d	file:
METER_CODE	bytecode.c	61;"	d	file:
method	charset.h	/^  enum charset_method method;$/;"	m	struct:charset	typeref:enum:charset::charset_method	access:public
method	coding.h	/^  enum composition_method method;$/;"	m	struct:composition_status	typeref:enum:composition_status::composition_method	access:public
method	composite.h	/^  enum composition_method method;$/;"	m	struct:composition	typeref:enum:composition::composition_method	access:public
method	dispextern.h	/^      unsigned method : 2;$/;"	m	struct:glyph::__anon110::__anon113	access:public
method	dispextern.h	/^    enum it_method method;$/;"	m	struct:it::iterator_stack_entry	typeref:enum:it::iterator_stack_entry::it_method	access:public
method	dispextern.h	/^  char method[512];$/;"	m	struct:glyph_matrix	access:public
method	dispextern.h	/^  enum it_method method;$/;"	m	struct:it	typeref:enum:it::it_method	access:public
METHOD_BUFFERED	w32.c	205;"	d	file:
metrics	ftcrfont.c	/^  struct font_metrics **metrics;$/;"	m	struct:ftcrfont_info	typeref:struct:ftcrfont_info::font_metrics	file:	access:public
metrics	nsterm.h	/^  struct font_metrics **metrics;$/;"	m	struct:nsfont_info	typeref:struct:nsfont_info::font_metrics	access:public
metrics	w32font.h	/^  TEXTMETRICW metrics;$/;"	m	struct:w32font_info	access:public
METRICS_INVALID	ftcrfont.c	/^    METRICS_INVALID = -1,    \/* metrics entry is invalid *\/$/;"	e	enum:metrics_status	file:
METRICS_NCOLS_PER_ROW	ftcrfont.c	57;"	d	file:
metrics_nrows	ftcrfont.c	/^  short metrics_nrows;$/;"	m	struct:ftcrfont_info	file:	access:public
METRICS_SET_STATUS	ftcrfont.c	65;"	d	file:
metrics_status	ftcrfont.c	/^enum metrics_status$/;"	g	file:
METRICS_STATUS	ftcrfont.c	64;"	d	file:
MFLTFontFT	ftfont.c	/^struct MFLTFontFT$/;"	s	file:
MFLTFontFT::flt_font	ftfont.c	/^  MFLTFont flt_font;$/;"	m	struct:MFLTFontFT	file:	access:public
MFLTFontFT::font	ftfont.c	/^  struct font *font;$/;"	m	struct:MFLTFontFT	typeref:struct:MFLTFontFT::font	file:	access:public
MFLTFontFT::ft_face	ftfont.c	/^  FT_Face ft_face;$/;"	m	struct:MFLTFontFT	file:	access:public
MFLTFontFT::matrix	ftfont.c	/^  FT_Matrix *matrix;$/;"	m	struct:MFLTFontFT	file:	access:public
MFLTFontFT::otf	ftfont.c	/^  OTF *otf;$/;"	m	struct:MFLTFontFT	file:	access:public
MFLTGlyphFT	ftfont.c	/^} MFLTGlyphFT;$/;"	t	typeref:struct:__anon126	file:
mgr	image.c	/^  struct jpeg_source_mgr mgr;$/;"	m	struct:jpeg_stdio_mgr	typeref:struct:jpeg_stdio_mgr::jpeg_source_mgr	file:	access:public
mh	unexmacosx.c	/^static struct mach_header mh;$/;"	v	typeref:struct:mach_header	file:
MH_MAGIC	unexmacosx.c	138;"	d	file:
MH_MAGIC	unexmacosx.c	139;"	d	file:
might_dump	emacs.c	/^bool might_dump;$/;"	v	file:
might_dump	lisp.h	/^enum { might_dump = false };$/;"	e	enum:__anon17
millisec	process.c	/^  (Lisp_Object process, Lisp_Object seconds, Lisp_Object millisec,$/;"	v
MIME_LINE_LENGTH	fns.c	2191;"	d	file:
min	gmalloc.c	1280;"	d	file:
min	lisp.h	59;"	d
min	lisp.h	62;"	d
min	regex.c	516;"	d	file:
min	regex.c	518;"	d	file:
mincost	cm.h	/^    int mincost, maxcost;$/;"	m	struct:parmcap	access:public
mindepth	syntax.c	/^    EMACS_INT mindepth;	\/* Minimum depth seen while scanning.  *\/$/;"	m	struct:lisp_parse_state	file:	access:public
MINGW_STATIC	image.c	7154;"	d	file:
MINGW_STATIC	image.c	7156;"	d	file:
MINGW_STATIC	image.c	7176;"	d	file:
MINHEIGHT	nsterm.h	1260;"	d
mini	window.h	/^    bool_bf mini : 1;$/;"	m	struct:window	access:public
minibuf	window.c	/^  (Lisp_Object frame, Lisp_Object minibuf, Lisp_Object window)$/;"	v
minibuf	window.c	/^  (Lisp_Object window, Lisp_Object minibuf, Lisp_Object all_frames)$/;"	v
minibuffer	widgetprv.h	/^  int		minibuffer;	\/* 0: normal frames with minibuffers.$/;"	m	struct:__anon98	access:public
minibuffer_allow_text_properties	globals.h	1005;"	d
minibuffer_auto_raise	globals.h	1007;"	d
minibuffer_window	frame.h	/^  Lisp_Object minibuffer_window;$/;"	m	struct:frame	access:public
minibuf_conform_representation	minibuf.c	/^minibuf_conform_representation (Lisp_Object string, Lisp_Object basis)$/;"	f	file:	signature:(Lisp_Object string, Lisp_Object basis)
minibuf_level	minibuf.c	/^EMACS_INT minibuf_level;$/;"	v
minibuf_prompt	minibuf.c	/^static Lisp_Object minibuf_prompt;$/;"	v	file:
minibuf_prompt_width	minibuf.c	/^static ptrdiff_t minibuf_prompt_width;$/;"	v	file:
minibuf_save_list	minibuf.c	/^static Lisp_Object minibuf_save_list;$/;"	v	file:
minibuf_scroll_window	window.c	/^    Lisp_Object minibuf_scroll_window;$/;"	m	struct:save_window_data	file:	access:public
minibuf_selected_window	window.c	/^    Lisp_Object minibuf_selected_window;$/;"	m	struct:save_window_data	file:	access:public
minibuf_selected_window	window.c	/^Lisp_Object minibuf_selected_window;$/;"	v
minibuf_window	window.c	/^Lisp_Object minibuf_window;$/;"	v
miniimage	nsterm.h	/^  id miniimage;$/;"	m	struct:ns_output	access:public
minimize_tool_bar_window_p	frame.h	/^  bool_bf minimize_tool_bar_window_p : 1;$/;"	m	struct:frame	access:public
MINI_NON_ONLY_WINDOW_P	window.h	487;"	d
MINI_ONLY_WINDOW_P	window.h	491;"	d
MINI_WINDOW_P	window.h	483;"	d
MINOR	sysdep.c	3001;"	d	file:
minor_modes_	buffer.h	/^  Lisp_Object minor_modes_;$/;"	m	struct:buffer	access:public
minpos	dispextern.h	/^  struct text_pos minpos, maxpos;$/;"	m	struct:glyph_row	typeref:struct:glyph_row::text_pos	access:public
MINWIDTH	nsterm.h	1259;"	d
min_args	lisp.h	/^    short min_args, max_args;$/;"	m	struct:Lisp_Subr	access:public
min_arity	lisp.h	/^  ptrdiff_t min_arity, max_arity;$/;"	m	struct:Lisp_Module_Function	access:public
min_char	charset.c	/^  int min_char, max_char;$/;"	m	struct:__anon78	file:	access:public
min_char	charset.h	/^  int min_char, max_char;$/;"	m	struct:charset	access:public
min_char	lisp.h	/^    int min_char;$/;"	m	struct:Lisp_Sub_Char_Table	access:public
min_code	charset.h	/^  unsigned min_code, max_code;$/;"	m	struct:charset	access:public
min_heap_address	alloc.c	/^static void *min_heap_address, *max_heap_address;$/;"	v	file:
min_hscroll	window.c	/^  Lisp_Object hscroll, min_hscroll, hscroll_whole, suspend_auto_hscroll;$/;"	m	struct:saved_window	file:	access:public
min_hscroll	window.h	/^    ptrdiff_t min_hscroll;$/;"	m	struct:window	access:public
MIN_MULTIBYTE_LEADING_CODE	character.h	59;"	d
MIN_SAFE_WINDOW_HEIGHT	window.h	584;"	d
MIN_SAFE_WINDOW_PIXEL_HEIGHT	window.h	586;"	d
MIN_SAFE_WINDOW_PIXEL_WIDTH	window.h	581;"	d
MIN_SAFE_WINDOW_WIDTH	window.h	579;"	d
min_width	font.h	/^  int min_width;$/;"	m	struct:font	access:public
mirrored_line_dance	dispextern.h	/^void mirrored_line_dance (struct glyph_matrix *, int, int, int *, char *);$/;"	p	signature:(struct glyph_matrix *, int, int, int *, char *)
mirrored_line_dance	dispnew.c	/^mirrored_line_dance (struct glyph_matrix *matrix, int unchanged_at_top, int nlines,$/;"	f	signature:(struct glyph_matrix *matrix, int unchanged_at_top, int nlines, int *copy_from, char *retained_p)
mirror_line_dance	dispnew.c	/^mirror_line_dance (struct window *w, int unchanged_at_top, int nlines, int *copy_from, char *retained_p)$/;"	f	file:	signature:(struct window *w, int unchanged_at_top, int nlines, int *copy_from, char *retained_p)
mirror_line_dance	dispnew.c	/^static void mirror_line_dance (struct window *, int, int, int *, char *);$/;"	p	file:	signature:(struct window *, int, int, int *, char *)
mirror_make_current	dispnew.c	/^mirror_make_current (struct window *w, int frame_row)$/;"	f	file:	signature:(struct window *w, int frame_row)
mirror_make_current	dispnew.c	/^static void mirror_make_current (struct window *, int);$/;"	p	file:	signature:(struct window *, int)
MISCP	lisp.h	/^(MISCP) (Lisp_Object x)$/;"	f	signature:(Lisp_Object x)
MISCP	lisp.h	359;"	d
misc_objects_consed	globals.h	851;"	d
MI_CONTINUE	term.c	/^  MI_CONTINUE       = 0,$/;"	e	enum:__anon14	file:
MI_ITEM_SELECTED	term.c	/^  MI_ITEM_SELECTED  = 1,$/;"	e	enum:__anon14	file:
MI_NEXT_ITEM	term.c	/^  MI_NEXT_ITEM      = 2,$/;"	e	enum:__anon14	file:
MI_PREV_ITEM	term.c	/^  MI_PREV_ITEM      = 3,$/;"	e	enum:__anon14	file:
MI_QUIT_MENU	term.c	/^  MI_QUIT_MENU      = -1,$/;"	e	enum:__anon14	file:
mi_result	term.c	/^} mi_result;$/;"	t	typeref:enum:__anon14	file:
MI_SCROLL_BACK	term.c	/^  MI_SCROLL_BACK    = 5$/;"	e	enum:__anon14	file:
MI_SCROLL_FORWARD	term.c	/^  MI_SCROLL_FORWARD = 4,$/;"	e	enum:__anon14	file:
mkdir	w32.c	56;"	d	file:
MKDIR_P	Makefile	/^MKDIR_P = \/bin\/mkdir -p$/;"	m
mmap_alloc	buffer.c	/^mmap_alloc (void **var, size_t nbytes)$/;"	f	file:	signature:(void **var, size_t nbytes)
mmap_alloc	w32heap.c	/^mmap_alloc (void **var, size_t nbytes)$/;"	f	signature:(void **var, size_t nbytes)
mmap_alloc	w32heap.h	/^extern void *mmap_alloc (void **, size_t);$/;"	p	signature:(void **, size_t)
MMAP_ALLOCATED_P	buffer.c	4708;"	d	file:
mmap_enlarge	buffer.c	/^mmap_enlarge (struct mmap_region *r, int npages)$/;"	f	file:	signature:(struct mmap_region *r, int npages)
mmap_fd	buffer.c	/^static int mmap_fd;$/;"	v	file:
mmap_free	buffer.c	/^mmap_free (void **var)$/;"	f	file:	signature:(void **var)
mmap_free	w32heap.c	/^mmap_free (void **var)$/;"	f	signature:(void **var)
mmap_free	w32heap.h	/^extern void  mmap_free (void **);$/;"	p	signature:(void **)
mmap_free_1	buffer.c	/^mmap_free_1 (struct mmap_region *r)$/;"	f	file:	signature:(struct mmap_region *r)
mmap_init	buffer.c	/^mmap_init (void)$/;"	f	file:	signature:(void)
mmap_initialized_p	buffer.c	/^static bool mmap_initialized_p;$/;"	v	file:
mmap_lisp_allowed_p	alloc.c	/^mmap_lisp_allowed_p (void)$/;"	f	file:	signature:(void)
MMAP_MAX_AREAS	alloc.c	119;"	d	file:
mmap_page_size	buffer.c	/^static int mmap_page_size;$/;"	v	file:
mmap_realloc	buffer.c	/^mmap_realloc (void **var, size_t nbytes)$/;"	f	file:	signature:(void **var, size_t nbytes)
mmap_realloc	w32heap.c	/^mmap_realloc (void **var, size_t nbytes)$/;"	f	signature:(void **var, size_t nbytes)
mmap_realloc	w32heap.h	/^extern void *mmap_realloc (void **, size_t);$/;"	p	signature:(void **, size_t)
mmap_region	buffer.c	/^struct mmap_region$/;"	s	file:
MMAP_REGION	buffer.c	4688;"	d	file:
mmap_region::nbytes_mapped	buffer.c	/^  size_t nbytes_mapped;$/;"	m	struct:mmap_region	file:	access:public
mmap_region::nbytes_specified	buffer.c	/^  size_t nbytes_specified;$/;"	m	struct:mmap_region	file:	access:public
mmap_region::next	buffer.c	/^  struct mmap_region *next, *prev;$/;"	m	struct:mmap_region	typeref:struct:mmap_region::mmap_region	file:	access:public
mmap_region::prev	buffer.c	/^  struct mmap_region *next, *prev;$/;"	m	struct:mmap_region	typeref:struct:mmap_region::	file:	access:public
mmap_region::var	buffer.c	/^  void **var;$/;"	m	struct:mmap_region	file:	access:public
mmap_regions	buffer.c	/^static struct mmap_region *mmap_regions;$/;"	v	typeref:struct:mmap_region	file:
MMAP_REGION_STRUCT_SIZE	buffer.c	4682;"	d	file:
mmap_set_vars	buffer.h	/^extern void mmap_set_vars (bool);$/;"	p	signature:(bool)
MMAP_USER_AREA	buffer.c	4694;"	d	file:
MMOUSE	w32fns.c	92;"	d	file:
mm_height	frame.h	/^  int mm_width, mm_height;$/;"	m	struct:MonitorInfo	access:public
mm_width	frame.h	/^  int mm_width, mm_height;$/;"	m	struct:MonitorInfo	access:public
mode	coding.h	/^  unsigned mode : 5;$/;"	m	struct:coding_system	access:public
model	xwidget.h	/^  Lisp_Object model;$/;"	m	struct:xwidget_view	access:public
modeline_cursor	nsterm.h	/^  Cursor modeline_cursor;$/;"	m	struct:ns_output	access:public
modeline_cursor	w32term.h	/^  Cursor modeline_cursor;$/;"	m	struct:w32_output	access:public
modeline_cursor	xterm.h	/^  Cursor modeline_cursor;$/;"	m	struct:x_output	access:public
MODE_LINE_DISPLAY	xdisp.c	/^  MODE_LINE_DISPLAY = 0,$/;"	e	enum:__anon135	file:
MODE_LINE_FACE_ID	dispextern.h	/^  MODE_LINE_FACE_ID,$/;"	e	enum:face_id
mode_line_format_	buffer.h	/^  Lisp_Object mode_line_format_;$/;"	m	struct:buffer	access:public
mode_line_height	window.h	/^    int mode_line_height;$/;"	m	struct:window	access:public
MODE_LINE_INACTIVE_FACE_ID	dispextern.h	/^  MODE_LINE_INACTIVE_FACE_ID,$/;"	e	enum:face_id
mode_line_in_non_selected_windows	globals.h	1009;"	d
MODE_LINE_NOPROP	xdisp.c	/^  MODE_LINE_NOPROP,$/;"	e	enum:__anon135	file:
mode_line_noprop_buf	xdisp.c	/^static char *mode_line_noprop_buf;$/;"	v	file:
mode_line_noprop_buf_end	xdisp.c	/^static char *mode_line_noprop_buf_end;$/;"	v	file:
MODE_LINE_NOPROP_LEN	xdisp.c	11632;"	d	file:
mode_line_noprop_ptr	xdisp.c	/^static char *mode_line_noprop_ptr;$/;"	v	file:
mode_line_p	dispextern.h	/^  bool_bf mode_line_p : 1;$/;"	m	struct:glyph_row	access:public
mode_line_proptrans_alist	xdisp.c	/^static Lisp_Object mode_line_proptrans_alist;$/;"	v	file:
mode_line_string	dispextern.h	/^extern Lisp_Object mode_line_string (struct window *, enum window_part,$/;"	p	signature:(struct window *, enum window_part, int *, int *, ptrdiff_t *, Lisp_Object *, int *, int *, int *, int *)
mode_line_string	dispnew.c	/^mode_line_string (struct window *w, enum window_part part,$/;"	f	signature:(struct window *w, enum window_part part, int *x, int *y, ptrdiff_t *charpos, Lisp_Object *object, int *dx, int *dy, int *width, int *height)
MODE_LINE_STRING	xdisp.c	/^  MODE_LINE_STRING$/;"	e	enum:__anon135	file:
mode_line_string_face	xdisp.c	/^static Lisp_Object mode_line_string_face;$/;"	v	file:
mode_line_string_face_prop	xdisp.c	/^static Lisp_Object mode_line_string_face_prop;$/;"	v	file:
mode_line_string_list	xdisp.c	/^static Lisp_Object mode_line_string_list;$/;"	v	file:
mode_line_target	xdisp.c	/^} mode_line_target;$/;"	v	typeref:enum:__anon135	file:
MODE_LINE_TITLE	xdisp.c	/^  MODE_LINE_TITLE,$/;"	e	enum:__anon135	file:
mode_line_update_needed	xdisp.c	/^mode_line_update_needed (struct window *w)$/;"	f	file:	signature:(struct window *w)
mode_name_	buffer.h	/^  Lisp_Object mode_name_;$/;"	m	struct:buffer	access:public
modiff	buffer.h	/^    EMACS_INT modiff;		\/* This counts buffer-modification events$/;"	m	struct:buffer_text	access:public
MODIFF	buffer.h	89;"	d
modifiers	termhooks.h	/^  unsigned modifiers;$/;"	m	struct:input_event	access:public
modifiers	w32fns.c	/^static int modifiers[4];$/;"	v	file:
modifiers_recorded	w32fns.c	/^static int modifiers_recorded;$/;"	v	file:
modifier_key_support_tested	w32fns.c	/^static int modifier_key_support_tested;$/;"	v	file:
modifier_names	keyboard.c	/^static const char *const modifier_names[] =$/;"	v	file:
modifier_set	w32fns.c	/^modifier_set (int vkey)$/;"	f	file:	signature:(int vkey)
modifier_symbols	keyboard.c	/^static Lisp_Object modifier_symbols;$/;"	v	file:
modifying_clipboard	w32select.c	/^static int modifying_clipboard = 0;$/;"	v	file:
modify_event_symbol	keyboard.c	/^modify_event_symbol (ptrdiff_t symbol_num, int modifiers, Lisp_Object symbol_kind,$/;"	f	file:	signature:(ptrdiff_t symbol_num, int modifiers, Lisp_Object symbol_kind, Lisp_Object name_alist_or_stem, const char *const *name_table, Lisp_Object *symbol_table, ptrdiff_t table_size)
modify_event_symbol	keyboard.c	/^static Lisp_Object modify_event_symbol (ptrdiff_t, int, Lisp_Object,$/;"	p	file:	signature:(ptrdiff_t, int, Lisp_Object, Lisp_Object, const char *const *, Lisp_Object *, ptrdiff_t)
modify_overlay	buffer.c	/^modify_overlay (struct buffer *buf, ptrdiff_t start, ptrdiff_t end)$/;"	f	file:	signature:(struct buffer *buf, ptrdiff_t start, ptrdiff_t end)
modify_overlay	buffer.c	/^static void modify_overlay (struct buffer *, ptrdiff_t, ptrdiff_t);$/;"	p	file:	signature:(struct buffer *, ptrdiff_t, ptrdiff_t)
modify_text	insdel.c	/^modify_text (ptrdiff_t start, ptrdiff_t end)$/;"	f	signature:(ptrdiff_t start, ptrdiff_t end)
modify_text	lisp.h	/^extern void modify_text (ptrdiff_t, ptrdiff_t);$/;"	p	signature:(ptrdiff_t, ptrdiff_t)
modify_text_properties	textprop.c	/^modify_text_properties (Lisp_Object buffer, Lisp_Object start, Lisp_Object end)$/;"	f	file:	signature:(Lisp_Object buffer, Lisp_Object start, Lisp_Object end)
modtime	buffer.h	/^  struct timespec modtime;$/;"	m	struct:buffer	typeref:struct:buffer::timespec	access:public
modtime_size	buffer.h	/^  off_t modtime_size;$/;"	m	struct:buffer	access:public
MODULES_OBJ	Makefile	/^MODULES_OBJ = $/;"	m
module_abort	emacs-module.c	/^module_abort (const char *format, ...)$/;"	f	signature:(const char *format, ...)
module_assertions	emacs-module.c	/^static bool module_assertions = false;$/;"	v	file:
module_assert_env	emacs-module.c	/^module_assert_env (emacs_env *env)$/;"	f	file:	signature:(emacs_env *env)
module_assert_env	emacs-module.c	/^static void module_assert_env (emacs_env *);$/;"	p	file:	signature:(emacs_env *)
module_assert_runtime	emacs-module.c	/^module_assert_runtime (struct emacs_runtime *ert)$/;"	f	file:	signature:(struct emacs_runtime *ert)
module_assert_runtime	emacs-module.c	/^static void module_assert_runtime (struct emacs_runtime *);$/;"	p	file:	signature:(struct emacs_runtime *)
module_assert_thread	emacs-module.c	/^module_assert_thread (void)$/;"	f	file:	signature:(void)
module_assert_thread	emacs-module.c	/^static void module_assert_thread (void);$/;"	p	file:	signature:(void)
module_copy_string_contents	emacs-module.c	/^module_copy_string_contents (emacs_env *env, emacs_value value, char *buffer,$/;"	f	file:	signature:(emacs_env *env, emacs_value value, char *buffer, ptrdiff_t *length)
module_eq	emacs-module.c	/^module_eq (emacs_env *env, emacs_value a, emacs_value b)$/;"	f	file:	signature:(emacs_env *env, emacs_value a, emacs_value b)
module_extract_float	emacs-module.c	/^module_extract_float (emacs_env *env, emacs_value f)$/;"	f	file:	signature:(emacs_env *env, emacs_value f)
module_extract_integer	emacs-module.c	/^module_extract_integer (emacs_env *env, emacs_value n)$/;"	f	file:	signature:(emacs_env *env, emacs_value n)
module_free_global_ref	emacs-module.c	/^module_free_global_ref (emacs_env *env, emacs_value ref)$/;"	f	file:	signature:(emacs_env *env, emacs_value ref)
module_funcall	emacs-module.c	/^module_funcall (emacs_env *env, emacs_value fun, ptrdiff_t nargs,$/;"	f	file:	signature:(emacs_env *env, emacs_value fun, ptrdiff_t nargs, emacs_value args[])
MODULE_FUNCTIONP	lisp.h	/^MODULE_FUNCTIONP (Lisp_Object o)$/;"	f	signature:(Lisp_Object o)
module_function_arity	emacs-module.c	/^module_function_arity (const struct Lisp_Module_Function *const function)$/;"	f	signature:(const struct Lisp_Module_Function *const function)
module_function_arity	lisp.h	/^extern Lisp_Object module_function_arity (const struct Lisp_Module_Function *);$/;"	p	signature:(const struct Lisp_Module_Function *)
MODULE_FUNCTION_BEGIN	emacs-module.c	258;"	d	file:
MODULE_FUNCTION_BEGIN_NO_CATCH	emacs-module.c	246;"	d	file:
module_get_environment	emacs-module.c	/^module_get_environment (struct emacs_runtime *ert)$/;"	f	file:	signature:(struct emacs_runtime *ert)
module_get_user_finalizer	emacs-module.c	/^module_get_user_finalizer (emacs_env *env, emacs_value uptr)$/;"	f	file:	signature:(emacs_env *env, emacs_value uptr)
module_get_user_ptr	emacs-module.c	/^module_get_user_ptr (emacs_env *env, emacs_value uptr)$/;"	f	file:	signature:(emacs_env *env, emacs_value uptr)
MODULE_HANDLE_NONLOCAL_EXIT	emacs-module.c	164;"	d	file:
module_handle_signal	emacs-module.c	/^module_handle_signal (emacs_env *env, Lisp_Object err)$/;"	f	file:	signature:(emacs_env *env, Lisp_Object err)
module_handle_signal	emacs-module.c	/^static void module_handle_signal (emacs_env *, Lisp_Object);$/;"	p	file:	signature:(emacs_env *, Lisp_Object)
module_handle_throw	emacs-module.c	/^module_handle_throw (emacs_env *env, Lisp_Object tag_val)$/;"	f	file:	signature:(emacs_env *env, Lisp_Object tag_val)
module_handle_throw	emacs-module.c	/^static void module_handle_throw (emacs_env *, Lisp_Object);$/;"	p	file:	signature:(emacs_env *, Lisp_Object)
module_intern	emacs-module.c	/^module_intern (emacs_env *env, const char *name)$/;"	f	file:	signature:(emacs_env *env, const char *name)
module_is_not_nil	emacs-module.c	/^module_is_not_nil (emacs_env *env, emacs_value value)$/;"	f	file:	signature:(emacs_env *env, emacs_value value)
module_make_float	emacs-module.c	/^module_make_float (emacs_env *env, double d)$/;"	f	file:	signature:(emacs_env *env, double d)
module_make_function	emacs-module.c	/^module_make_function (emacs_env *env, ptrdiff_t min_arity, ptrdiff_t max_arity,$/;"	f	file:	signature:(emacs_env *env, ptrdiff_t min_arity, ptrdiff_t max_arity, emacs_subr subr, const char *documentation, void *data)
module_make_global_ref	emacs-module.c	/^module_make_global_ref (emacs_env *env, emacs_value ref)$/;"	f	file:	signature:(emacs_env *env, emacs_value ref)
module_make_integer	emacs-module.c	/^module_make_integer (emacs_env *env, intmax_t n)$/;"	f	file:	signature:(emacs_env *env, intmax_t n)
module_make_string	emacs-module.c	/^module_make_string (emacs_env *env, const char *str, ptrdiff_t length)$/;"	f	file:	signature:(emacs_env *env, const char *str, ptrdiff_t length)
module_make_user_ptr	emacs-module.c	/^module_make_user_ptr (emacs_env *env, emacs_finalizer_function fin, void *ptr)$/;"	f	file:	signature:(emacs_env *env, emacs_finalizer_function fin, void *ptr)
module_nil	emacs-module.c	/^static emacs_value const module_nil = 0;$/;"	v	file:
module_non_local_exit_check	emacs-module.c	/^module_non_local_exit_check (emacs_env *env)$/;"	f	file:	signature:(emacs_env *env)
module_non_local_exit_check	emacs-module.c	/^static enum emacs_funcall_exit module_non_local_exit_check (emacs_env *);$/;"	p	file:	signature:(emacs_env *)
module_non_local_exit_clear	emacs-module.c	/^module_non_local_exit_clear (emacs_env *env)$/;"	f	file:	signature:(emacs_env *env)
module_non_local_exit_get	emacs-module.c	/^module_non_local_exit_get (emacs_env *env, emacs_value *sym, emacs_value *data)$/;"	f	file:	signature:(emacs_env *env, emacs_value *sym, emacs_value *data)
module_non_local_exit_signal	emacs-module.c	/^module_non_local_exit_signal (emacs_env *env, emacs_value sym, emacs_value data)$/;"	f	file:	signature:(emacs_env *env, emacs_value sym, emacs_value data)
module_non_local_exit_signal_1	emacs-module.c	/^module_non_local_exit_signal_1 (emacs_env *env, Lisp_Object sym,$/;"	f	file:	signature:(emacs_env *env, Lisp_Object sym, Lisp_Object data)
module_non_local_exit_signal_1	emacs-module.c	/^static void module_non_local_exit_signal_1 (emacs_env *,$/;"	p	file:	signature:(emacs_env *, Lisp_Object, Lisp_Object)
module_non_local_exit_throw	emacs-module.c	/^module_non_local_exit_throw (emacs_env *env, emacs_value tag, emacs_value value)$/;"	f	file:	signature:(emacs_env *env, emacs_value tag, emacs_value value)
module_non_local_exit_throw_1	emacs-module.c	/^module_non_local_exit_throw_1 (emacs_env *env, Lisp_Object tag,$/;"	f	file:	signature:(emacs_env *env, Lisp_Object tag, Lisp_Object value)
module_non_local_exit_throw_1	emacs-module.c	/^static void module_non_local_exit_throw_1 (emacs_env *,$/;"	p	file:	signature:(emacs_env *, Lisp_Object, Lisp_Object)
module_out_of_memory	emacs-module.c	/^module_out_of_memory (emacs_env *env)$/;"	f	file:	signature:(emacs_env *env)
module_out_of_memory	emacs-module.c	/^static void module_out_of_memory (emacs_env *);$/;"	p	file:	signature:(emacs_env *)
module_reset_handlerlist	emacs-module.c	/^module_reset_handlerlist (struct handler **phandlerlist)$/;"	f	file:	signature:(struct handler **phandlerlist)
module_reset_handlerlist	emacs-module.c	/^static void module_reset_handlerlist (struct handler **);$/;"	p	file:	signature:(struct handler **)
MODULE_SETJMP	emacs-module.c	168;"	d	file:
MODULE_SETJMP_1	emacs-module.c	189;"	d	file:
module_set_user_finalizer	emacs-module.c	/^module_set_user_finalizer (emacs_env *env, emacs_value uptr,$/;"	f	file:	signature:(emacs_env *env, emacs_value uptr, emacs_finalizer_function fin)
module_set_user_ptr	emacs-module.c	/^module_set_user_ptr (emacs_env *env, emacs_value uptr, void *ptr)$/;"	f	file:	signature:(emacs_env *env, emacs_value uptr, void *ptr)
module_should_quit	emacs-module.c	/^module_should_quit (emacs_env *env)$/;"	f	file:	signature:(emacs_env *env)
module_signal_or_throw	emacs-module.c	/^module_signal_or_throw (struct emacs_env_private *env)$/;"	f	file:	signature:(struct emacs_env_private *env)
module_type_of	emacs-module.c	/^module_type_of (emacs_env *env, emacs_value value)$/;"	f	file:	signature:(emacs_env *env, emacs_value value)
module_vec_get	emacs-module.c	/^module_vec_get (emacs_env *env, emacs_value vec, ptrdiff_t i)$/;"	f	file:	signature:(emacs_env *env, emacs_value vec, ptrdiff_t i)
module_vec_set	emacs-module.c	/^module_vec_set (emacs_env *env, emacs_value vec, ptrdiff_t i, emacs_value val)$/;"	f	file:	signature:(emacs_env *env, emacs_value vec, ptrdiff_t i, emacs_value val)
module_vec_size	emacs-module.c	/^module_vec_size (emacs_env *env, emacs_value vec)$/;"	f	file:	signature:(emacs_env *env, emacs_value vec)
MOD_ALT	w32fns.c	8570;"	d	file:
MOD_CONTROL	w32fns.c	8571;"	d	file:
MOD_SHIFT	w32fns.c	8572;"	d	file:
MOD_WIN	w32fns.c	8573;"	d	file:
moncontrol	emacs.c	/^extern void moncontrol (int mode);$/;"	p	file:	signature:(int mode)
MonitorEnum_Proc	w32fns.c	/^typedef BOOL CALLBACK (* MonitorEnum_Proc)$/;"	t	file:
MonitorFromPoint_Proc	w32fns.c	/^typedef HMONITOR (WINAPI * MonitorFromPoint_Proc) (IN POINT pt, IN DWORD flags);$/;"	t	file:
MonitorFromWindow_Proc	w32fns.c	/^typedef HMONITOR (WINAPI * MonitorFromWindow_Proc)$/;"	t	file:
MonitorInfo	frame.h	/^struct MonitorInfo {$/;"	s
MonitorInfo::geom	frame.h	/^  XRectangle geom, work;$/;"	m	struct:MonitorInfo	access:public
MonitorInfo::mm_height	frame.h	/^  int mm_width, mm_height;$/;"	m	struct:MonitorInfo	access:public
MonitorInfo::mm_width	frame.h	/^  int mm_width, mm_height;$/;"	m	struct:MonitorInfo	access:public
MonitorInfo::name	frame.h	/^  char *name;$/;"	m	struct:MonitorInfo	access:public
MonitorInfo::work	frame.h	/^  XRectangle geom, work;$/;"	m	struct:MonitorInfo	access:public
MONITORINFOF_PRIMARY	w32fns.c	110;"	d	file:
MONITOR_DEFAULT_TO_NEAREST	w32fns.c	107;"	d	file:
monitor_from_point_fn	w32fns.c	/^MonitorFromPoint_Proc monitor_from_point_fn = NULL;$/;"	v
monitor_from_window_fn	w32fns.c	/^MonitorFromWindow_Proc monitor_from_window_fn = NULL;$/;"	v
MONITOR_INFO	w32fns.c	/^struct MONITOR_INFO$/;"	s	file:
MONITOR_INFO::cbSize	w32fns.c	/^    DWORD   cbSize;$/;"	m	struct:MONITOR_INFO	file:	access:public
MONITOR_INFO::dwFlags	w32fns.c	/^    DWORD   dwFlags;$/;"	m	struct:MONITOR_INFO	file:	access:public
MONITOR_INFO::rcMonitor	w32fns.c	/^    RECT    rcMonitor;$/;"	m	struct:MONITOR_INFO	file:	access:public
MONITOR_INFO::rcWork	w32fns.c	/^    RECT    rcWork;$/;"	m	struct:MONITOR_INFO	file:	access:public
MONITOR_INFO_EX	w32fns.c	/^struct MONITOR_INFO_EX$/;"	s	file:
MONITOR_INFO_EX::cbSize	w32fns.c	/^    DWORD   cbSize;$/;"	m	struct:MONITOR_INFO_EX	file:	access:public
MONITOR_INFO_EX::dwFlags	w32fns.c	/^    DWORD   dwFlags;$/;"	m	struct:MONITOR_INFO_EX	file:	access:public
MONITOR_INFO_EX::rcMonitor	w32fns.c	/^    RECT    rcMonitor;$/;"	m	struct:MONITOR_INFO_EX	file:	access:public
MONITOR_INFO_EX::rcWork	w32fns.c	/^    RECT    rcWork;$/;"	m	struct:MONITOR_INFO_EX	file:	access:public
MONITOR_INFO_EX::szDevice	w32fns.c	/^    char    szDevice[CCHDEVICENAME];$/;"	m	struct:MONITOR_INFO_EX	file:	access:public
morecore_nolock	gmalloc.c	/^morecore_nolock (size_t size)$/;"	f	file:	signature:(size_t size)
morecore_recursing	gmalloc.c	/^static int morecore_recursing;$/;"	v	file:
More_Lisp_Bits	alloc.c	/^  enum More_Lisp_Bits More_Lisp_Bits;$/;"	m	union:__anon13	typeref:enum:__anon13::More_Lisp_Bits	file:	access:public
More_Lisp_Bits	lisp.h	/^enum More_Lisp_Bits$/;"	g
MOST_NEGATIVE_FIXNUM	lisp.h	893;"	d
MOST_POSITIVE_FIXNUM	lisp.h	892;"	d
MountPointReparseBuffer	w32.c	/^        } MountPointReparseBuffer;$/;"	m	union:_REPARSE_DATA_BUFFER::__anon66	typeref:struct:_REPARSE_DATA_BUFFER::__anon66::__anon68	file:	access:public
MOUSE_BUTTON_ID	w32fns.c	198;"	d	file:
mouse_button_timer	w32fns.c	/^static unsigned mouse_button_timer = 0;	\/* non-zero when timer is active *\/$/;"	v	file:
MOUSE_CLICK_EVENT	termhooks.h	/^  MOUSE_CLICK_EVENT,		\/* The button number is in .code; it must$/;"	e	enum:event_kind
mouse_cursor	xfns.c	/^enum mouse_cursor {$/;"	g	file:
mouse_cursor_bottom_edge	xfns.c	/^  mouse_cursor_bottom_edge,$/;"	e	enum:mouse_cursor	file:
mouse_cursor_bottom_left_corner	xfns.c	/^  mouse_cursor_bottom_left_corner,$/;"	e	enum:mouse_cursor	file:
mouse_cursor_bottom_right_corner	xfns.c	/^  mouse_cursor_bottom_right_corner,$/;"	e	enum:mouse_cursor	file:
mouse_cursor_data	xfns.c	/^struct mouse_cursor_data {$/;"	s	file:
mouse_cursor_data::cursor	xfns.c	/^  Cursor cursor[mouse_cursor_max];$/;"	m	struct:mouse_cursor_data	file:	access:public
mouse_cursor_data::cursor_num	xfns.c	/^  unsigned int cursor_num[mouse_cursor_max];$/;"	m	struct:mouse_cursor_data	file:	access:public
mouse_cursor_data::error_cursor	xfns.c	/^  int error_cursor;$/;"	m	struct:mouse_cursor_data	file:	access:public
mouse_cursor_data::error_string	xfns.c	/^  char *error_string;$/;"	m	struct:mouse_cursor_data	file:	access:public
mouse_cursor_data::last_cursor_create_request	xfns.c	/^  int last_cursor_create_request;$/;"	m	struct:mouse_cursor_data	file:	access:public
mouse_cursor_data::x_request_serial	xfns.c	/^  unsigned long x_request_serial[mouse_cursor_max];$/;"	m	struct:mouse_cursor_data	file:	access:public
mouse_cursor_hand	xfns.c	/^  mouse_cursor_hand,$/;"	e	enum:mouse_cursor	file:
mouse_cursor_horizontal_drag	xfns.c	/^  mouse_cursor_horizontal_drag,$/;"	e	enum:mouse_cursor	file:
mouse_cursor_hourglass	xfns.c	/^  mouse_cursor_hourglass,$/;"	e	enum:mouse_cursor	file:
mouse_cursor_left_edge	xfns.c	/^  mouse_cursor_left_edge,$/;"	e	enum:mouse_cursor	file:
mouse_cursor_max	xfns.c	/^  mouse_cursor_max$/;"	e	enum:mouse_cursor	file:
mouse_cursor_mode	xfns.c	/^  mouse_cursor_mode,$/;"	e	enum:mouse_cursor	file:
mouse_cursor_nontext	xfns.c	/^  mouse_cursor_nontext,$/;"	e	enum:mouse_cursor	file:
mouse_cursor_right_edge	xfns.c	/^  mouse_cursor_right_edge,$/;"	e	enum:mouse_cursor	file:
mouse_cursor_text	xfns.c	/^  mouse_cursor_text,$/;"	e	enum:mouse_cursor	file:
mouse_cursor_top_edge	xfns.c	/^  mouse_cursor_top_edge,$/;"	e	enum:mouse_cursor	file:
mouse_cursor_top_left_corner	xfns.c	/^  mouse_cursor_top_left_corner,$/;"	e	enum:mouse_cursor	file:
mouse_cursor_top_right_corner	xfns.c	/^  mouse_cursor_top_right_corner,$/;"	e	enum:mouse_cursor	file:
mouse_cursor_types	xfns.c	/^static const struct mouse_cursor_types mouse_cursor_types[] = {$/;"	v	typeref:struct:mouse_cursor_types	file:
mouse_cursor_types	xfns.c	/^struct mouse_cursor_types {$/;"	s	file:
mouse_cursor_types::default_shape	xfns.c	/^  int default_shape;$/;"	m	struct:mouse_cursor_types	file:	access:public
mouse_cursor_types::name	xfns.c	/^  const char *name;$/;"	m	struct:mouse_cursor_types	file:	access:public
mouse_cursor_types::shape_var_ptr	xfns.c	/^  Lisp_Object *shape_var_ptr;$/;"	m	struct:mouse_cursor_types	file:	access:public
mouse_cursor_vertical_drag	xfns.c	/^  mouse_cursor_vertical_drag,$/;"	e	enum:mouse_cursor	file:
mouse_face_beg_col	dispextern.h	/^  int mouse_face_beg_row, mouse_face_beg_col, mouse_face_beg_x;$/;"	m	struct:__anon121	access:public
mouse_face_beg_row	dispextern.h	/^  int mouse_face_beg_row, mouse_face_beg_col, mouse_face_beg_x;$/;"	m	struct:__anon121	access:public
mouse_face_beg_x	dispextern.h	/^  int mouse_face_beg_row, mouse_face_beg_col, mouse_face_beg_x;$/;"	m	struct:__anon121	access:public
mouse_face_defer	dispextern.h	/^  bool_bf mouse_face_defer : 1;$/;"	m	struct:__anon121	access:public
mouse_face_end_col	dispextern.h	/^  int mouse_face_end_row, mouse_face_end_col, mouse_face_end_x;$/;"	m	struct:__anon121	access:public
mouse_face_end_row	dispextern.h	/^  int mouse_face_end_row, mouse_face_end_col, mouse_face_end_x;$/;"	m	struct:__anon121	access:public
mouse_face_end_x	dispextern.h	/^  int mouse_face_end_row, mouse_face_end_col, mouse_face_end_x;$/;"	m	struct:__anon121	access:public
mouse_face_face_id	dispextern.h	/^  int mouse_face_face_id;$/;"	m	struct:__anon121	access:public
mouse_face_from_buffer_pos	xdisp.c	/^mouse_face_from_buffer_pos (Lisp_Object window,$/;"	f	file:	signature:(Lisp_Object window, Mouse_HLInfo *hlinfo, ptrdiff_t mouse_charpos, ptrdiff_t start_charpos, ptrdiff_t end_charpos, Lisp_Object before_string, Lisp_Object after_string, Lisp_Object disp_string)
mouse_face_from_string_pos	xdisp.c	/^mouse_face_from_string_pos (struct window *w, Mouse_HLInfo *hlinfo,$/;"	f	file:	signature:(struct window *w, Mouse_HLInfo *hlinfo, Lisp_Object object, ptrdiff_t startpos, ptrdiff_t endpos)
mouse_face_hidden	dispextern.h	/^  bool_bf mouse_face_hidden : 1;$/;"	m	struct:__anon121	access:public
MOUSE_FACE_ID	dispextern.h	/^  MOUSE_FACE_ID,$/;"	e	enum:face_id
mouse_face_mouse_frame	dispextern.h	/^  struct frame *mouse_face_mouse_frame;$/;"	m	struct:__anon121	typeref:struct:__anon121::frame	access:public
mouse_face_mouse_x	dispextern.h	/^  int mouse_face_mouse_x, mouse_face_mouse_y;$/;"	m	struct:__anon121	access:public
mouse_face_mouse_y	dispextern.h	/^  int mouse_face_mouse_x, mouse_face_mouse_y;$/;"	m	struct:__anon121	access:public
mouse_face_overlay	dispextern.h	/^  Lisp_Object mouse_face_overlay;$/;"	m	struct:__anon121	access:public
mouse_face_overlay_overlaps	buffer.c	/^mouse_face_overlay_overlaps (Lisp_Object overlay)$/;"	f	signature:(Lisp_Object overlay)
mouse_face_overlay_overlaps	lisp.h	/^extern bool mouse_face_overlay_overlaps (Lisp_Object);$/;"	p	signature:(Lisp_Object)
mouse_face_p	dispextern.h	/^  bool_bf mouse_face_p : 1;$/;"	m	struct:glyph_row	access:public
mouse_face_past_end	dispextern.h	/^  bool_bf mouse_face_past_end : 1;$/;"	m	struct:__anon121	access:public
mouse_face_window	dispextern.h	/^  Lisp_Object mouse_face_window;$/;"	m	struct:__anon121	access:public
mouse_get_xy	term.c	/^mouse_get_xy (int *x, int *y)$/;"	f	file:	signature:(int *x, int *y)
mouse_highlight	nsterm.h	/^  Mouse_HLInfo mouse_highlight;$/;"	m	struct:ns_display_info	access:public
mouse_highlight	termchar.h	/^  Mouse_HLInfo mouse_highlight;$/;"	m	struct:tty_display_info	access:public
mouse_highlight	w32term.h	/^  Mouse_HLInfo mouse_highlight;$/;"	m	struct:w32_display_info	access:public
mouse_highlight	xterm.h	/^  Mouse_HLInfo mouse_highlight;$/;"	m	struct:x_display_info	access:public
Mouse_HLInfo	dispextern.h	/^} Mouse_HLInfo;$/;"	t	typeref:struct:__anon121
MOUSE_HL_INFO	frame.h	774;"	d
MOUSE_HL_INFO	frame.h	779;"	d
MOUSE_HWHEELED	w32inevt.c	34;"	d	file:
mouse_moved	frame.h	/^  bool_bf mouse_moved : 1;$/;"	m	struct:frame	access:public
MOUSE_MOVED	w32inevt.c	31;"	d	file:
mouse_moved_to	w32inevt.c	/^mouse_moved_to (int x, int y)$/;"	f	file:	signature:(int x, int y)
MOUSE_MOVE_ID	w32fns.c	199;"	d	file:
mouse_move_timer	w32fns.c	/^static unsigned mouse_move_timer = 0;$/;"	v	file:
mouse_pixel	w32term.h	/^  COLORREF mouse_pixel;$/;"	m	struct:w32_output	access:public
mouse_pixel	xterm.h	/^  unsigned long mouse_pixel;$/;"	m	struct:x_output	access:public
mouse_position_hook	termhooks.h	/^  void (*mouse_position_hook) (struct frame **f, int,$/;"	m	struct:terminal	access:public
mouse_syms	keyboard.c	/^static Lisp_Object mouse_syms;$/;"	v	file:
movement_pos	w32inevt.c	/^static COORD movement_pos;$/;"	v	file:
movement_time	w32inevt.c	/^static Time movement_time;$/;"	v	file:
move_cache_gap	region-cache.c	/^move_cache_gap (struct region_cache *c, ptrdiff_t pos, ptrdiff_t min_size)$/;"	f	file:	signature:(struct region_cache *c, ptrdiff_t pos, ptrdiff_t min_size)
move_elt_to_front	xdisp.c	/^move_elt_to_front (Lisp_Object elt, Lisp_Object list)$/;"	f	file:	signature:(Lisp_Object elt, Lisp_Object list)
MOVE_FRAME_EVENT	termhooks.h	/^  MOVE_FRAME_EVENT,$/;"	e	enum:event_kind
move_gap_both	insdel.c	/^move_gap_both (ptrdiff_t charpos, ptrdiff_t bytepos)$/;"	f	signature:(ptrdiff_t charpos, ptrdiff_t bytepos)
move_gap_both	lisp.h	/^extern void move_gap_both (ptrdiff_t, ptrdiff_t);$/;"	p	signature:(ptrdiff_t, ptrdiff_t)
move_if_not_intangible	intervals.c	/^move_if_not_intangible (ptrdiff_t position)$/;"	f	signature:(ptrdiff_t position)
move_if_not_intangible	intervals.h	/^extern void move_if_not_intangible (ptrdiff_t);$/;"	p	signature:(ptrdiff_t)
move_it_by_lines	dispextern.h	/^void move_it_by_lines (struct it *, ptrdiff_t);$/;"	p	signature:(struct it *, ptrdiff_t)
move_it_by_lines	xdisp.c	/^move_it_by_lines (struct it *it, ptrdiff_t dvpos)$/;"	f	signature:(struct it *it, ptrdiff_t dvpos)
move_it_in_display_line	dispextern.h	/^void move_it_in_display_line (struct it *it,$/;"	p	signature:(struct it *it, ptrdiff_t to_charpos, int to_x, enum move_operation_enum op)
move_it_in_display_line	xdisp.c	/^move_it_in_display_line (struct it *it,$/;"	f	signature:(struct it *it, ptrdiff_t to_charpos, int to_x, enum move_operation_enum op)
move_it_in_display_line_to	xdisp.c	/^       move_it_in_display_line_to (struct it *, ptrdiff_t, int,$/;"	p	file:	signature:(struct it *, ptrdiff_t, int, enum move_operation_enum)
move_it_in_display_line_to	xdisp.c	/^move_it_in_display_line_to (struct it *it,$/;"	f	file:	signature:(struct it *it, ptrdiff_t to_charpos, int to_x, enum move_operation_enum op)
move_it_past_eol	dispextern.h	/^void move_it_past_eol (struct it *);$/;"	p	signature:(struct it *)
move_it_past_eol	xdisp.c	/^move_it_past_eol (struct it *it)$/;"	f	signature:(struct it *it)
move_it_result	xdisp.c	/^enum move_it_result$/;"	g	file:
move_it_to	dispextern.h	/^int move_it_to (struct it *, ptrdiff_t, int, int, int, int);$/;"	p	signature:(struct it *, ptrdiff_t, int, int, int, int)
move_it_to	xdisp.c	/^move_it_to (struct it *it, ptrdiff_t to_charpos, int to_x, int to_y, int to_vpos, int op)$/;"	f	signature:(struct it *it, ptrdiff_t to_charpos, int to_x, int to_y, int to_vpos, int op)
move_it_vertically	dispextern.h	/^void move_it_vertically (struct it *, int);$/;"	p	signature:(struct it *, int)
move_it_vertically	xdisp.c	/^move_it_vertically (struct it *it, int dy)$/;"	f	signature:(struct it *it, int dy)
move_it_vertically_backward	dispextern.h	/^void move_it_vertically_backward (struct it *, int);$/;"	p	signature:(struct it *, int)
move_it_vertically_backward	xdisp.c	/^move_it_vertically_backward (struct it *it, int dy)$/;"	f	signature:(struct it *it, int dy)
MOVE_LINE_CONTINUED	xdisp.c	/^  MOVE_LINE_CONTINUED,$/;"	e	enum:move_it_result	file:
MOVE_LINE_TRUNCATED	xdisp.c	/^  MOVE_LINE_TRUNCATED,$/;"	e	enum:move_it_result	file:
MOVE_NEWLINE_OR_CR	xdisp.c	/^  MOVE_NEWLINE_OR_CR$/;"	e	enum:move_it_result	file:
move_offset_left	xterm.h	/^  int move_offset_left;$/;"	m	struct:x_output	access:public
move_offset_top	xterm.h	/^  int move_offset_top;$/;"	m	struct:x_output	access:public
move_operation_enum	dispextern.h	/^enum move_operation_enum$/;"	g
move_point	cmds.c	/^move_point (Lisp_Object n, bool forward)$/;"	f	file:	signature:(Lisp_Object n, bool forward)
MOVE_POS_MATCH_OR_ZV	xdisp.c	/^  MOVE_POS_MATCH_OR_ZV,$/;"	e	enum:move_it_result	file:
MOVE_TO_POS	dispextern.h	/^  MOVE_TO_POS = 0x08$/;"	e	enum:move_operation_enum
MOVE_TO_VPOS	dispextern.h	/^  MOVE_TO_VPOS = 0x04,$/;"	e	enum:move_operation_enum
MOVE_TO_X	dispextern.h	/^  MOVE_TO_X = 0x01,$/;"	e	enum:move_operation_enum
MOVE_TO_Y	dispextern.h	/^  MOVE_TO_Y = 0x02,$/;"	e	enum:move_operation_enum
MOVE_UNDEFINED	xdisp.c	/^  MOVE_UNDEFINED,$/;"	e	enum:move_it_result	file:
MOVE_X_REACHED	xdisp.c	/^  MOVE_X_REACHED,$/;"	e	enum:move_it_result	file:
mprobe	gmalloc.c	/^extern enum mcheck_status mprobe (void *ptr);$/;"	p	file:	signature:(void *ptr)
mprobe	gmalloc.c	/^mprobe (void *ptr)$/;"	f	signature:(void *ptr)
MR_PARTIALLY_VISIBLE	dispextern.h	1129;"	d
MR_PARTIALLY_VISIBLE_AT_BOTTOM	dispextern.h	1135;"	d
MR_PARTIALLY_VISIBLE_AT_TOP	dispextern.h	1132;"	d
msg	w32.c	/^  const char * msg;$/;"	m	struct:__anon70	file:	access:public
msg	w32term.h	/^    MSG msg;$/;"	m	struct:W32Msg	access:public
msh_mousewheel	w32fns.c	/^unsigned int msh_mousewheel = 0;$/;"	v
MSH_MOUSEWHEEL	w32term.h	610;"	d
mstats	gmalloc.c	/^extern struct mstats mstats (void);$/;"	p	file:	signature:(void)
mstats	gmalloc.c	/^struct mstats$/;"	s	file:
mstats::bytes_free	gmalloc.c	/^    size_t bytes_free;	\/* Byte total of chunks in the free list. *\/$/;"	m	struct:mstats	file:	access:public
mstats::bytes_total	gmalloc.c	/^    size_t bytes_total;	\/* Total size of the heap. *\/$/;"	m	struct:mstats	file:	access:public
mstats::bytes_used	gmalloc.c	/^    size_t bytes_used;	\/* Byte total of user-allocated chunks. *\/$/;"	m	struct:mstats	file:	access:public
mstats::chunks_free	gmalloc.c	/^    size_t chunks_free;	\/* Chunks in the free list. *\/$/;"	m	struct:mstats	file:	access:public
mstats::chunks_used	gmalloc.c	/^    size_t chunks_used;	\/* Chunks allocated by the user. *\/$/;"	m	struct:mstats	file:	access:public
mtrace	gmalloc.c	/^extern void mtrace (void);$/;"	p	file:	signature:(void)
multibyte	regex.h	/^  unsigned multibyte : 1;$/;"	m	struct:re_pattern_buffer	access:public
multiByteToWideCharFlags	w32.c	/^DWORD multiByteToWideCharFlags;$/;"	v
MultiByteToWideChar_Proc	w32.h	/^typedef int (WINAPI *MultiByteToWideChar_Proc)(UINT,DWORD,LPCSTR,int,LPWSTR,int);$/;"	t
MULTIBYTE_BYTES_WIDTH	indent.c	287;"	d	file:
multibyte_chars_in_text	lisp.h	/^extern ptrdiff_t multibyte_chars_in_text (const unsigned char *, ptrdiff_t);$/;"	p	signature:(const unsigned char *, ptrdiff_t)
MULTIBYTE_CHAR_KEYSTROKE_EVENT	termhooks.h	/^  MULTIBYTE_CHAR_KEYSTROKE_EVENT,	\/* The multibyte char code is in .code,$/;"	e	enum:event_kind
MULTIBYTE_LENGTH	character.h	255;"	d
MULTIBYTE_LENGTH_NO_CHECK	character.h	272;"	d
multibyte_p	dispextern.h	/^    bool_bf multibyte_p : 1;$/;"	m	struct:it::iterator_stack_entry	access:public
multibyte_p	dispextern.h	/^  bool_bf multibyte_p : 1;$/;"	m	struct:glyph	access:public
multibyte_p	dispextern.h	/^  bool_bf multibyte_p : 1;$/;"	m	struct:it	access:public
multibyte_syntax_as_symbol	globals.h	1011;"	d
MultiDown	cm.h	120;"	d
MultiDownCost	cm.h	142;"	d
MultiLeft	cm.h	121;"	d
MultiLeftCost	cm.h	143;"	d
MULTIMEDIA_KEY_EVENT	termhooks.h	/^  , MULTIMEDIA_KEY_EVENT$/;"	e	enum:event_kind
multiple_frames	globals.h	1013;"	d
MultiRight	cm.h	122;"	d
MultiRightCost	cm.h	144;"	d
MultiUp	cm.h	119;"	d
MultiUpCost	cm.h	141;"	d
MULTI_LETTER_MOD	keyboard.c	6200;"	d	file:
MULTI_LETTER_MOD	keyboard.c	6221;"	d	file:
MULTI_LETTER_MOD	keyboard.c	6703;"	d	file:
MULTI_LETTER_MOD	keyboard.c	6766;"	d	file:
muntrace	gmalloc.c	/^extern void muntrace (void);$/;"	p	file:	signature:(void)
mustmatch	w32fns.c	/^  (Lisp_Object prompt, Lisp_Object dir, Lisp_Object default_filename, Lisp_Object mustmatch, Lisp_Object only_dir_p)$/;"	v
mustmatch	xfns.c	/^   Lisp_Object mustmatch, Lisp_Object only_dir_p)$/;"	v
mustmatch	xfns.c	/^  (Lisp_Object prompt, Lisp_Object dir, Lisp_Object default_filename, Lisp_Object mustmatch, Lisp_Object only_dir_p)$/;"	v
must_be_updated_p	window.h	/^    bool_bf must_be_updated_p : 1;$/;"	m	struct:window	access:public
must_write_spaces	termchar.h	/^  bool_bf must_write_spaces : 1;$/;"	m	struct:tty_display_info	access:public
mutex	thread.c	/^  (Lisp_Object mutex, Lisp_Object name)$/;"	v
mutex	thread.h	/^  lisp_mutex_t mutex;$/;"	m	struct:Lisp_Mutex	access:public
mutex	thread.h	/^  Lisp_Object mutex;$/;"	m	struct:Lisp_CondVar	access:public
MUTEXP	thread.h	/^MUTEXP (Lisp_Object a)$/;"	f	signature:(Lisp_Object a)
mutex_lock_callback	thread.c	/^mutex_lock_callback (void *arg)$/;"	f	file:	signature:(void *arg)
mutex_unlock_callback	thread.c	/^mutex_unlock_callback (void *arg)$/;"	f	file:	signature:(void *arg)
mutually_exclusive_p	regex.c	/^mutually_exclusive_p (struct re_pattern_buffer *bufp, const_re_char *p1,$/;"	f	file:	signature:(struct re_pattern_buffer *bufp, const_re_char *p1, const_re_char *p2)
MWM_DECOR_ALL	xfns.c	128;"	d	file:
MWM_HINTS_DECORATIONS	xfns.c	124;"	d	file:
myalloc	w32xfns.c	30;"	d	file:
myfree	w32xfns.c	31;"	d	file:
MYNOTIFYICONDATAW_V1_SIZE	w32fns.c	9880;"	d	file:
MYNOTIFYICONDATAW_V2_SIZE	w32fns.c	9881;"	d	file:
MYNOTIFYICONDATAW_V3_SIZE	w32fns.c	9882;"	d	file:
my_begbss	firstfile.c	/^char my_begbss[1];  \/* Do not initialize this variable.  *\/$/;"	v
my_begbss_static	firstfile.c	/^char * my_begbss_static = _my_begbss;$/;"	v
my_begdata	firstfile.c	/^char my_begdata[] = "Beginning of Emacs initialized data";$/;"	v
my_bring_window_to_top	w32term.c	/^my_bring_window_to_top (HWND hwnd)$/;"	f	file:	signature:(HWND hwnd)
my_create_hscrollbar	w32term.c	/^my_create_hscrollbar (struct frame * f, struct scroll_bar * bar)$/;"	f	file:	signature:(struct frame * f, struct scroll_bar * bar)
my_create_tip_window	w32fns.c	/^my_create_tip_window (struct frame *f)$/;"	f	file:	signature:(struct frame *f)
my_create_tip_window	w32fns.c	/^static void my_create_tip_window (struct frame *);$/;"	p	file:	signature:(struct frame *)
my_create_vscrollbar	w32term.c	/^my_create_vscrollbar (struct frame * f, struct scroll_bar * bar)$/;"	f	file:	signature:(struct frame * f, struct scroll_bar * bar)
my_create_window	w32fns.c	/^my_create_window (struct frame * f)$/;"	f	file:	signature:(struct frame * f)
my_create_window	w32fns.c	/^static void my_create_window (struct frame *);$/;"	p	file:	signature:(struct frame *)
my_destroy_window	w32term.c	/^my_destroy_window (struct frame * f, HWND hwnd)$/;"	f	file:	signature:(struct frame * f, HWND hwnd)
my_destroy_window	w32term.c	/^static void my_destroy_window (struct frame *, HWND);$/;"	p	file:	signature:(struct frame *, HWND)
my_edata	lastfile.c	/^char my_edata[] = "End of Emacs initialized data";$/;"	v
my_endbss	lastfile.c	/^char my_endbss[1];$/;"	v
my_endbss_static	lastfile.c	/^char * my_endbss_static = _my_endbss;$/;"	v
my_error_exit	image.c	/^my_error_exit (j_common_ptr cinfo)$/;"	f	file:	signature:(j_common_ptr cinfo)
my_exception_handler	w32fns.c	/^my_exception_handler (EXCEPTION_POINTERS * exception_data)$/;"	f	file:	signature:(EXCEPTION_POINTERS * exception_data)
my_exception_handler	w32fns.c	/^static LONG CALLBACK my_exception_handler (EXCEPTION_POINTERS *);$/;"	p	file:	signature:(EXCEPTION_POINTERS *)
my_heap_start	alloc.c	/^my_heap_start (void)$/;"	f	signature:(void)
my_heap_start	lisp.h	/^extern void *my_heap_start (void);$/;"	p	signature:(void)
MY_JPEG_CANNOT_CREATE_X	image.c	/^      MY_JPEG_CANNOT_CREATE_X$/;"	e	enum:my_jpeg_error_mgr::__anon83	file:
MY_JPEG_ERROR_EXIT	image.c	/^      MY_JPEG_ERROR_EXIT,$/;"	e	enum:my_jpeg_error_mgr::__anon83	file:
my_jpeg_error_mgr	image.c	/^struct my_jpeg_error_mgr$/;"	s	file:
my_jpeg_error_mgr::cinfo	image.c	/^  struct jpeg_decompress_struct cinfo;$/;"	m	struct:my_jpeg_error_mgr	typeref:struct:my_jpeg_error_mgr::jpeg_decompress_struct	file:	access:public
my_jpeg_error_mgr::failure_code	image.c	/^    } failure_code;$/;"	m	struct:my_jpeg_error_mgr	typeref:enum:my_jpeg_error_mgr::__anon83	file:	access:public
my_jpeg_error_mgr::MY_JPEG_CANNOT_CREATE_X	image.c	/^      MY_JPEG_CANNOT_CREATE_X$/;"	e	enum:my_jpeg_error_mgr::__anon83	file:
my_jpeg_error_mgr::MY_JPEG_ERROR_EXIT	image.c	/^      MY_JPEG_ERROR_EXIT,$/;"	e	enum:my_jpeg_error_mgr::__anon83	file:
my_jpeg_error_mgr::MY_JPEG_INVALID_IMAGE_SIZE	image.c	/^      MY_JPEG_INVALID_IMAGE_SIZE,$/;"	e	enum:my_jpeg_error_mgr::__anon83	file:
my_jpeg_error_mgr::pub	image.c	/^  struct jpeg_error_mgr pub;$/;"	m	struct:my_jpeg_error_mgr	typeref:struct:my_jpeg_error_mgr::jpeg_error_mgr	file:	access:public
my_jpeg_error_mgr::setjmp_buffer	image.c	/^  sys_jmp_buf setjmp_buffer;$/;"	m	struct:my_jpeg_error_mgr	file:	access:public
MY_JPEG_INVALID_IMAGE_SIZE	image.c	/^      MY_JPEG_INVALID_IMAGE_SIZE,$/;"	e	enum:my_jpeg_error_mgr::__anon83	file:
my_log_handler	gtkutil.c	/^my_log_handler (const gchar *log_domain, GLogLevelFlags log_level,$/;"	f	file:	signature:(const gchar *log_domain, GLogLevelFlags log_level, const gchar *msg, gpointer user_data)
my_log_handler	xterm.c	/^my_log_handler (const gchar *log_domain, GLogLevelFlags log_level,$/;"	f	file:	signature:(const gchar *log_domain, GLogLevelFlags log_level, const gchar *msg, gpointer user_data)
MY_NOTIFYICONDATAW	w32fns.c	/^typedef struct MY_NOTIFYICONDATAW {$/;"	s	file:
MY_NOTIFYICONDATAW	w32fns.c	/^} MY_NOTIFYICONDATAW;$/;"	t	typeref:struct:MY_NOTIFYICONDATAW	file:
MY_NOTIFYICONDATAW::cbSize	w32fns.c	/^  DWORD cbSize;$/;"	m	struct:MY_NOTIFYICONDATAW	file:	access:public
MY_NOTIFYICONDATAW::DUMMYUNIONNAME	w32fns.c	/^  } DUMMYUNIONNAME;$/;"	m	struct:MY_NOTIFYICONDATAW	typeref:union:MY_NOTIFYICONDATAW::__anon75	file:	access:public
MY_NOTIFYICONDATAW::dwInfoFlags	w32fns.c	/^  DWORD dwInfoFlags;$/;"	m	struct:MY_NOTIFYICONDATAW	file:	access:public
MY_NOTIFYICONDATAW::dwState	w32fns.c	/^  DWORD dwState;$/;"	m	struct:MY_NOTIFYICONDATAW	file:	access:public
MY_NOTIFYICONDATAW::dwStateMask	w32fns.c	/^  DWORD dwStateMask;$/;"	m	struct:MY_NOTIFYICONDATAW	file:	access:public
MY_NOTIFYICONDATAW::guidItem	w32fns.c	/^  GUID guidItem;$/;"	m	struct:MY_NOTIFYICONDATAW	file:	access:public
MY_NOTIFYICONDATAW::hBalloonIcon	w32fns.c	/^  HICON hBalloonIcon;$/;"	m	struct:MY_NOTIFYICONDATAW	file:	access:public
MY_NOTIFYICONDATAW::hIcon	w32fns.c	/^  HICON hIcon;$/;"	m	struct:MY_NOTIFYICONDATAW	file:	access:public
MY_NOTIFYICONDATAW::hWnd	w32fns.c	/^  HWND hWnd;$/;"	m	struct:MY_NOTIFYICONDATAW	file:	access:public
MY_NOTIFYICONDATAW::szInfo	w32fns.c	/^  WCHAR szInfo[256];$/;"	m	struct:MY_NOTIFYICONDATAW	file:	access:public
MY_NOTIFYICONDATAW::szInfoTitle	w32fns.c	/^  WCHAR szInfoTitle[64];$/;"	m	struct:MY_NOTIFYICONDATAW	file:	access:public
MY_NOTIFYICONDATAW::szTip	w32fns.c	/^  WCHAR szTip[128];$/;"	m	struct:MY_NOTIFYICONDATAW	file:	access:public
MY_NOTIFYICONDATAW::uCallbackMessage	w32fns.c	/^  UINT uCallbackMessage;$/;"	m	struct:MY_NOTIFYICONDATAW	file:	access:public
MY_NOTIFYICONDATAW::uFlags	w32fns.c	/^  UINT uFlags;$/;"	m	struct:MY_NOTIFYICONDATAW	file:	access:public
MY_NOTIFYICONDATAW::uID	w32fns.c	/^  UINT uID;$/;"	m	struct:MY_NOTIFYICONDATAW	file:	access:public
MY_NOTIFYICONDATAW::__anon75::uTimeout	w32fns.c	/^    UINT uTimeout;$/;"	m	union:MY_NOTIFYICONDATAW::__anon75	file:	access:public
MY_NOTIFYICONDATAW::__anon75::uVersion	w32fns.c	/^    UINT uVersion;$/;"	m	union:MY_NOTIFYICONDATAW::__anon75	file:	access:public
my_png_error	image.c	/^my_png_error (png_struct *png_ptr, const char *msg)$/;"	f	file:	signature:(png_struct *png_ptr, const char *msg)
my_png_warning	image.c	/^my_png_warning (png_struct *png_ptr, const char *msg)$/;"	f	file:	signature:(png_struct *png_ptr, const char *msg)
my_post_msg	w32fns.c	/^my_post_msg (W32Msg * wmsg, HWND hwnd, UINT msg, WPARAM wParam, LPARAM lParam)$/;"	f	file:	signature:(W32Msg * wmsg, HWND hwnd, UINT msg, WPARAM wParam, LPARAM lParam)
my_set_foreground_window	w32term.c	/^my_set_foreground_window (HWND hwnd)$/;"	f	file:	signature:(HWND hwnd)
my_set_foreground_window	w32term.c	/^static void my_set_foreground_window (HWND);$/;"	p	file:
my_set_window_pos	w32term.c	/^my_set_window_pos (HWND hwnd, HWND hwndAfter,$/;"	f	file:	signature:(HWND hwnd, HWND hwndAfter, int x, int y, int cx, int cy, UINT flags)
my_set_window_pos	w32term.c	/^static void my_set_window_pos (HWND, HWND, int, int, int, int, UINT);$/;"	p	file:	signature:(HWND, HWND, int, int, int, int, UINT)
my_show_window	w32term.c	/^my_show_window (struct frame *f, HWND hwnd, int how)$/;"	f	file:	signature:(struct frame *f, HWND hwnd, int how)
my_show_window	w32term.c	/^static BOOL my_show_window (struct frame *, HWND, int);$/;"	p	file:	signature:(struct frame *, HWND, int)
my_strftime	config.h	1939;"	d
m_catchlist	thread.h	/^  struct catchtag *m_catchlist;$/;"	m	struct:thread_state	typeref:struct:thread_state::catchtag	access:public
m_current_buffer	thread.h	/^  struct buffer *m_current_buffer;$/;"	m	struct:thread_state	typeref:struct:thread_state::buffer	access:public
m_handlerlist	thread.h	/^  struct handler *m_handlerlist;$/;"	m	struct:thread_state	typeref:struct:thread_state::handler	access:public
m_handlerlist_sentinel	thread.h	/^  struct handler *m_handlerlist_sentinel;$/;"	m	struct:thread_state	typeref:struct:thread_state::handler	access:public
m_last_thing_searched	thread.h	/^  Lisp_Object m_last_thing_searched;$/;"	m	struct:thread_state	access:public
m_lisp_eval_depth	thread.h	/^  EMACS_INT m_lisp_eval_depth;$/;"	m	struct:thread_state	access:public
m_re_match_object	thread.h	/^  Lisp_Object m_re_match_object;$/;"	m	struct:thread_state	access:public
m_saved_last_thing_searched	thread.h	/^  Lisp_Object m_saved_last_thing_searched;$/;"	m	struct:thread_state	access:public
m_saved_search_regs	thread.h	/^  struct re_registers m_saved_search_regs;$/;"	m	struct:thread_state	typeref:struct:thread_state::re_registers	access:public
m_search_regs	thread.h	/^  struct re_registers m_search_regs;$/;"	m	struct:thread_state	typeref:struct:thread_state::re_registers	access:public
m_search_regs_saved	thread.h	/^  bool m_search_regs_saved;$/;"	m	struct:thread_state	access:public
m_specpdl	thread.h	/^  union specbinding *m_specpdl;$/;"	m	struct:thread_state	typeref:union:thread_state::specbinding	access:public
m_specpdl_ptr	thread.h	/^  union specbinding *m_specpdl_ptr;$/;"	m	struct:thread_state	typeref:union:thread_state::specbinding	access:public
m_specpdl_size	thread.h	/^  ptrdiff_t m_specpdl_size;$/;"	m	struct:thread_state	access:public
m_stack_bottom	thread.h	/^  char *m_stack_bottom;$/;"	m	struct:thread_state	access:public
m_waiting_for_input	thread.h	/^  bool m_waiting_for_input;$/;"	m	struct:thread_state	access:public
m_waiting_for_user_input_p	thread.h	/^  int m_waiting_for_user_input_p;$/;"	m	struct:thread_state	access:public
n	alloc.c	/^  } n;$/;"	m	union:__anon6	typeref:struct:__anon6::__anon7	file:	access:public
n	character.c	/^  (ptrdiff_t n, Lisp_Object *args)$/;"	v
n	chartab.c	/^  (Lisp_Object char_table, Lisp_Object n, Lisp_Object value)$/;"	v
n	cmds.c	/^  (Lisp_Object n, Lisp_Object killflag)$/;"	v
n	lisp.h	/^  intptr_t max, n;$/;"	m	struct:for_each_tail_internal	access:public
name	buffer.c	/^  (Lisp_Object base_buffer, Lisp_Object name, Lisp_Object clone)$/;"	v
name	buffer.c	/^  (Lisp_Object name, Lisp_Object ignore)$/;"	v
name	ccl.c	/^     (Lisp_Object name, Lisp_Object ccl_prog)$/;"	v
name	emacs.c	/^  const char *name;$/;"	m	struct:standard_args	file:	access:public
name	fileio.c	/^  (Lisp_Object name, Lisp_Object default_directory)$/;"	v
name	fns.c	/^  (Lisp_Object name, Lisp_Object test, Lisp_Object hash)$/;"	v
name	font.c	/^  (Lisp_Object name, Lisp_Object frame)$/;"	v
name	fontset.c	/^  (Lisp_Object name, Lisp_Object ch, Lisp_Object all)$/;"	v
name	fontset.c	/^  (Lisp_Object name, Lisp_Object fontlist)$/;"	v
name	fontset.c	/^  (Lisp_Object name, Lisp_Object target, Lisp_Object font_spec, Lisp_Object frame, Lisp_Object add)$/;"	v
name	frame.c	/^  const char *name;$/;"	m	struct:frame_parm_table	file:	access:public
name	frame.h	/^  char *name;$/;"	m	struct:MonitorInfo	access:public
name	frame.h	/^  Lisp_Object name;$/;"	m	struct:frame	access:public
name	ftfont.c	/^  const char *name;$/;"	m	struct:__anon125	file:	access:public
name	image.c	/^  char name[FLEXIBLE_ARRAY_MEMBER];$/;"	m	struct:xpm_cached_color	file:	access:public
name	image.c	/^  const char *name;$/;"	m	struct:image_keyword	file:	access:public
name	keyboard.c	/^  char *name;$/;"	m	struct:user_signal_info	file:	access:public
name	lisp.h	/^  Lisp_Object name;$/;"	m	struct:hash_table_test	access:public
name	lisp.h	/^  Lisp_Object name;$/;"	m	struct:Lisp_Symbol	access:public
name	lread.c	/^  (Lisp_Object name, Lisp_Object obarray)$/;"	v
name	nsterm.h	/^  char *name;  \/* PostScript name, uniquely identifies on NS systems *\/$/;"	m	struct:nsfont_info	access:public
name	process.c	/^  const char *name;$/;"	m	struct:socket_options	file:	access:public
name	process.h	/^    Lisp_Object name;$/;"	m	struct:Lisp_Process	access:public
name	term.c	/^  const char *cap, *name;$/;"	m	struct:fkey_table	file:	access:public
name	termchar.h	/^  char *name;                   \/* The name of the device file or 0 if$/;"	m	struct:tty_display_info	access:public
name	termhooks.h	/^  char *name;$/;"	m	struct:terminal	access:public
name	thread.h	/^  Lisp_Object name;$/;"	m	struct:Lisp_CondVar	access:public
name	thread.h	/^  Lisp_Object name;$/;"	m	struct:Lisp_Mutex	access:public
name	thread.h	/^  Lisp_Object name;$/;"	m	struct:thread_state	access:public
name	w32.c	/^  char *    name;$/;"	m	struct:volume_info_data	file:	access:public
name	w32.c	/^  char name[GNLEN+1];$/;"	m	struct:w32_id	file:	access:public
name	w32fns.c	/^  const char *name;$/;"	m	struct:colormap_t	file:	access:public
name	w32heap.h	/^    char          *name;$/;"	m	struct:file_data	access:public
name	xdisp.c	/^  short name;$/;"	m	struct:props	file:	access:public
name	xfns.c	/^  const char *name;$/;"	m	struct:mouse_cursor_types	file:	access:public
name	xfns.c	/^  const char *name;$/;"	m	struct:visual_class	file:	access:public
name	xterm.h	/^  char *name;$/;"	m	struct:color_name_cache_entry	access:public
namebuf	frame.h	/^  char *namebuf;$/;"	m	struct:frame	access:public
named_merge_point	xfaces.c	/^struct named_merge_point$/;"	s	file:
named_merge_point::face_name	xfaces.c	/^  Lisp_Object face_name;$/;"	m	struct:named_merge_point	file:	access:public
named_merge_point::named_merge_point_kind	xfaces.c	/^  enum named_merge_point_kind named_merge_point_kind;$/;"	m	struct:named_merge_point	typeref:enum:named_merge_point::named_merge_point_kind	file:	access:public
named_merge_point::prev	xfaces.c	/^  struct named_merge_point *prev;$/;"	m	struct:named_merge_point	typeref:struct:named_merge_point::named_merge_point	file:	access:public
named_merge_point_kind	xfaces.c	/^  enum named_merge_point_kind named_merge_point_kind;$/;"	m	struct:named_merge_point	typeref:enum:named_merge_point::named_merge_point_kind	file:	access:public
named_merge_point_kind	xfaces.c	/^enum named_merge_point_kind$/;"	g	file:
NAMED_MERGE_POINT_NORMAL	xfaces.c	/^  NAMED_MERGE_POINT_NORMAL,$/;"	e	enum:named_merge_point_kind	file:
NAMED_MERGE_POINT_REMAP	xfaces.c	/^  NAMED_MERGE_POINT_REMAP$/;"	e	enum:named_merge_point_kind	file:
names	font.c	/^  const char *names[5];$/;"	m	struct:table_entry	file:	access:public
name_	buffer.h	/^  Lisp_Object name_;$/;"	m	struct:buffer	access:public
name_list_element	nsterm.h	/^  Lisp_Object name_list_element;$/;"	m	struct:ns_display_info	access:public
name_list_element	w32term.h	/^  Lisp_Object name_list_element;$/;"	m	struct:w32_display_info	access:public
name_list_element	xterm.h	/^  Lisp_Object name_list_element;$/;"	m	struct:x_display_info	access:public
name_match	termcap.c	/^name_match (char *line, char *name)$/;"	f	file:	signature:(char *line, char *name)
name_match	termcap.c	/^static bool name_match (char *, char *);$/;"	p	file:	signature:(char *, char *)
nargs	alloc.c	/^  (ptrdiff_t nargs, Lisp_Object *args)$/;"	v
nargs	callint.c	/^     (ptrdiff_t nargs, Lisp_Object *args)$/;"	v
nargs	callproc.c	/^  (ptrdiff_t nargs, Lisp_Object *args)$/;"	v
nargs	charset.c	/^  (ptrdiff_t nargs, Lisp_Object *args)$/;"	v
nargs	coding.c	/^  (ptrdiff_t nargs, Lisp_Object *args)$/;"	v
nargs	dbusbind.c	/^  (ptrdiff_t nargs, Lisp_Object *args)$/;"	v
nargs	editfns.c	/^  (ptrdiff_t nargs, Lisp_Object *args)$/;"	v
nargs	emacs.c	/^  int nargs;$/;"	m	struct:standard_args	file:	access:public
nargs	eval.c	/^     (ptrdiff_t nargs, Lisp_Object *args)$/;"	v
nargs	eval.c	/^  (ptrdiff_t nargs, Lisp_Object *args)$/;"	v
nargs	fns.c	/^  (ptrdiff_t nargs, Lisp_Object *args)$/;"	v
nargs	font.c	/^  (ptrdiff_t nargs, Lisp_Object *args)$/;"	v
nargs	lisp.h	/^      ptrdiff_t nargs;$/;"	m	struct:specbinding::__anon34	access:public
nargs	process.c	/^  (ptrdiff_t nargs, Lisp_Object *args)$/;"	v
nargs	w32fns.c	/^  (ptrdiff_t nargs, Lisp_Object *args)$/;"	v
nargs	xdisp.c	/^  (ptrdiff_t nargs, Lisp_Object *args)$/;"	v
NARROWPROTO	config.h	1412;"	d
narrow_foreground_group	sysdep.c	/^narrow_foreground_group (int fd)$/;"	f	file:	signature:(int fd)
NativeRectangle	dispextern.h	61;"	d
NativeRectangle	dispextern.h	90;"	d
NativeRectangle	nsgui.h	140;"	d
NativeRectangle	w32gui.h	120;"	d
NATNUMP	lisp.h	/^NATNUMP (Lisp_Object x)$/;"	f	signature:(Lisp_Object x)
nbytes	alloc.c	/^    ptrdiff_t nbytes;$/;"	m	struct:__anon6::__anon7	file:	access:public
nbytes	alloc.c	/^  ptrdiff_t nbytes;$/;"	m	struct:sdata	file:	access:public
nbytes	decompress.c	/^  ptrdiff_t old_point, start, nbytes;$/;"	m	struct:decompress_unwind_data	file:	access:public
nbytes	dispextern.h	/^  int nchars, nbytes;$/;"	m	struct:composition_it	access:public
nbytes_mapped	buffer.c	/^  size_t nbytes_mapped;$/;"	m	struct:mmap_region	file:	access:public
nbytes_specified	buffer.c	/^  size_t nbytes_specified;$/;"	m	struct:mmap_region	file:	access:public
nchars	coding.h	/^  int nchars;		  \/* number of characters composed *\/$/;"	m	struct:composition_status	access:public
nchars	dispextern.h	/^  int nchars, nbytes;$/;"	m	struct:composition_it	access:public
nchars	dispextern.h	/^  int nchars;$/;"	m	struct:glyph_string	access:public
nchars	dispextern.h	/^  ptrdiff_t nchars;		\/* its "length", usually 1; it's > 1 for a run$/;"	m	struct:bidi_it	access:public
ncolors	dispextern.h	/^  int ncolors;$/;"	m	struct:image	access:public
ncolors_allocated	xfaces.c	/^static int ncolors_allocated;$/;"	v	file:
ncolor_cells	xterm.h	/^  int ncolor_cells;$/;"	m	struct:x_display_info	access:public
ncols_scale_factor	window.h	/^    int nrows_scale_factor, ncols_scale_factor;$/;"	m	struct:window	access:public
ncolumns	dispextern.h	/^  int nrows, ncolumns;$/;"	m	struct:glyph_pool	access:public
ncomps	coding.h	/^  int ncomps;		  \/* number of composition components *\/$/;"	m	struct:composition_status	access:public
nconc2	fns.c	/^nconc2 (Lisp_Object s1, Lisp_Object s2)$/;"	f	signature:(Lisp_Object s1, Lisp_Object s2)
nconc2	lisp.h	/^extern Lisp_Object nconc2 (Lisp_Object, Lisp_Object);$/;"	p	signature:(Lisp_Object, Lisp_Object)
NC_BOLD	term.c	/^  NC_BOLD	 = 1 << 5,$/;"	e	enum:no_color_bit	file:
NC_DIM	term.c	/^  NC_DIM	 = 1 << 4,$/;"	e	enum:no_color_bit	file:
NC_INVIS	term.c	/^  NC_INVIS	 = 1 << 6,$/;"	e	enum:no_color_bit	file:
NC_ITALIC	term.c	/^  NC_ITALIC	 = 1 << 3,$/;"	e	enum:no_color_bit	file:
NC_PROTECT	term.c	/^  NC_PROTECT	 = 1 << 7$/;"	e	enum:no_color_bit	file:
NC_REVERSE	term.c	/^  NC_REVERSE	 = 1 << 2,$/;"	e	enum:no_color_bit	file:
NC_STANDOUT	term.c	/^  NC_STANDOUT	 = 1 << 0,$/;"	e	enum:no_color_bit	file:
NC_UNDERLINE	term.c	/^  NC_UNDERLINE	 = 1 << 1,$/;"	e	enum:no_color_bit	file:
near_C_stack_top	eval.c	/^near_C_stack_top (void)$/;"	f	signature:(void)
near_C_stack_top	lisp.h	/^extern void *near_C_stack_top (void);$/;"	p	signature:(void)
NEAR_SAME_COLOR_THRESHOLD	xfaces.c	1149;"	d	file:
need_adjustment	lisp.h	/^  bool_bf need_adjustment : 1;$/;"	m	struct:Lisp_Marker	access:public
need_buffer_flip	xterm.h	/^  bool need_buffer_flip;$/;"	m	struct:x_output	access:public
NETCONN1_P	process.c	204;"	d	file:
NETCONN_P	process.c	203;"	d	file:
network_interface_get_info	w32.c	/^network_interface_get_info (Lisp_Object ifname)$/;"	f	file:	signature:(Lisp_Object ifname)
network_interface_info	process.c	/^network_interface_info (Lisp_Object ifname)$/;"	f	file:	signature:(Lisp_Object ifname)
network_interface_info	process.h	/^extern Lisp_Object network_interface_info (Lisp_Object);$/;"	p	signature:(Lisp_Object)
network_interface_info	w32.c	/^network_interface_info (Lisp_Object ifname)$/;"	f	signature:(Lisp_Object ifname)
network_interface_list	process.c	/^network_interface_list (void)$/;"	f	file:	signature:(void)
network_interface_list	process.h	/^extern Lisp_Object network_interface_list (void);$/;"	p	signature:(void)
network_interface_list	w32.c	/^network_interface_list (void)$/;"	f	signature:(void)
net_supported_atoms	xterm.h	/^  Atom *net_supported_atoms;$/;"	m	struct:x_display_info	access:public
net_supported_window	xterm.h	/^  Window net_supported_window;$/;"	m	struct:x_display_info	access:public
NEUTRAL	bidi.c	/^  NEUTRAL,$/;"	e	enum:__anon92	file:
NEUTRAL_B	dispextern.h	/^  NEUTRAL_B,	\/* paragraph separator *\/$/;"	e	enum:__anon114
NEUTRAL_DIR	dispextern.h	/^typedef enum { NEUTRAL_DIR = 0, L2R, R2L } bidi_dir_t;$/;"	e	enum:__anon116
NEUTRAL_ON	dispextern.h	/^  NEUTRAL_ON	\/* other neutrals *\/$/;"	e	enum:__anon114
NEUTRAL_S	dispextern.h	/^  NEUTRAL_S,	\/* segment separator *\/$/;"	e	enum:__anon114
NEUTRAL_WS	dispextern.h	/^  NEUTRAL_WS,	\/* whitespace *\/$/;"	e	enum:__anon114
newentry	syntax.c	/^  (Lisp_Object c, Lisp_Object newentry, Lisp_Object syntax_table)$/;"	v
newline_cache	buffer.h	/^  struct region_cache *newline_cache;$/;"	m	struct:buffer	typeref:struct:buffer::region_cache	access:public
newline_cache_on_off	search.c	/^newline_cache_on_off (struct buffer *buf)$/;"	f	file:	signature:(struct buffer *buf)
newlocale	sysdep.c	/^newlocale (int category_mask, char const *locale, locale_t loc)$/;"	f	file:	signature:(int category_mask, char const *locale, locale_t loc)
newlocale	sysdep.c	3804;"	d	file:
newlocale	sysdep.c	3809;"	d	file:
newname	buffer.c	/^  (register Lisp_Object newname, Lisp_Object unique)$/;"	v
newname	fileio.c	/^  (Lisp_Object file, Lisp_Object newname, Lisp_Object ok_if_already_exists)$/;"	v
newname	fileio.c	/^  (Lisp_Object file, Lisp_Object newname, Lisp_Object ok_if_already_exists,$/;"	v
newtext	search.c	/^  (Lisp_Object newtext, Lisp_Object fixedcase, Lisp_Object literal, Lisp_Object string, Lisp_Object subexp)$/;"	v
newval	xdisp.c	/^  (Lisp_Object symbol, Lisp_Object newval, Lisp_Object op, Lisp_Object where)$/;"	v
new_alias	eval.c	/^  (Lisp_Object new_alias, Lisp_Object base_variable, Lisp_Object docstring)$/;"	v
new_backquote_flag	lread.c	/^static bool new_backquote_flag;$/;"	v	file:
new_backquote_output	print.c	/^static ptrdiff_t new_backquote_output;$/;"	v	file:
NEW_CACHE_GAP	region-cache.c	117;"	d	file:
new_child	w32.h	/^extern child_process * new_child (void);$/;"	p	signature:(void)
new_child	w32proc.c	/^new_child (void)$/;"	f	signature:(void)
new_data	ralloc.c	/^  void *new_data;		\/* temporarily used for relocation *\/$/;"	m	struct:bp	file:	access:public
new_glyph_matrix	dispnew.c	/^new_glyph_matrix (struct glyph_pool *pool)$/;"	f	file:	signature:(struct glyph_pool *pool)
new_glyph_pool	dispnew.c	/^new_glyph_pool (void)$/;"	f	file:	signature:(void)
new_height	frame.h	/^  int new_width, new_height;$/;"	m	struct:frame	access:public
NEW_LEAF_MATRIX	dispnew.c	1573;"	d	file:
new_lines	dispnew.c	/^static struct row_entry **old_lines, **new_lines;$/;"	v	typeref:struct:	file:
new_lines_size	dispnew.c	/^static ptrdiff_t old_lines_size, new_lines_size;$/;"	v	file:
new_line_number	dispnew.c	/^  int new_line_number;$/;"	m	struct:row_entry	file:	access:public
new_normal	window.h	/^    Lisp_Object new_normal;$/;"	m	struct:window	access:public
new_paragraph	dispextern.h	/^  bool_bf new_paragraph : 1;	\/* if true, we expect a new paragraph *\/$/;"	m	struct:bidi_it	access:public
new_pixel	window.h	/^    Lisp_Object new_pixel;$/;"	m	struct:window	access:public
new_pixelwise	frame.h	/^  bool_bf new_pixelwise : 1;$/;"	m	struct:frame	access:public
new_pos	editfns.c	/^  (Lisp_Object new_pos, Lisp_Object old_pos, Lisp_Object escape_from_edge,$/;"	v
new_region_cache	region-cache.c	/^new_region_cache (void)$/;"	f	signature:(void)
new_region_cache	region-cache.h	/^struct region_cache *new_region_cache (void);$/;"	p	signature:(void)
NEW_SECTION_H	unexelf.c	204;"	d	file:
new_total	window.h	/^    Lisp_Object new_total;$/;"	m	struct:window	access:public
new_uses	dispnew.c	/^  int old_uses, new_uses;$/;"	m	struct:row_entry	file:	access:public
new_width	frame.h	/^  int new_width, new_height;$/;"	m	struct:frame	access:public
new_width	xwidget.c	/^  (Lisp_Object xwidget, Lisp_Object new_width, Lisp_Object new_height)$/;"	v
next	alloc.c	/^  struct cons_block *next;$/;"	m	struct:cons_block	typeref:struct:cons_block::cons_block	file:	access:public
next	alloc.c	/^  struct float_block *next;$/;"	m	struct:float_block	typeref:struct:float_block::float_block	file:	access:public
next	alloc.c	/^  struct interval_block *next;$/;"	m	struct:interval_block	typeref:struct:interval_block::interval_block	file:	access:public
next	alloc.c	/^  struct large_vector *next;$/;"	m	struct:large_vector	typeref:struct:large_vector::large_vector	file:	access:public
next	alloc.c	/^  struct marker_block *next;$/;"	m	struct:marker_block	typeref:struct:marker_block::marker_block	file:	access:public
next	alloc.c	/^  struct pinned_object *next;$/;"	m	struct:pinned_object	typeref:struct:pinned_object::pinned_object	file:	access:public
next	alloc.c	/^  struct sblock *next;$/;"	m	struct:sblock	typeref:struct:sblock::sblock	file:	access:public
next	alloc.c	/^  struct string_block *next;$/;"	m	struct:string_block	typeref:struct:string_block::string_block	file:	access:public
next	alloc.c	/^  struct symbol_block *next;$/;"	m	struct:symbol_block	typeref:struct:symbol_block::symbol_block	file:	access:public
next	alloc.c	/^  struct vector_block *next;$/;"	m	struct:vector_block	typeref:struct:vector_block::vector_block	file:	access:public
next	atimer.h	/^  struct atimer *next;$/;"	m	struct:atimer	typeref:struct:atimer::atimer	access:public
next	buffer.c	/^  struct mmap_region *next, *prev;$/;"	m	struct:mmap_region	typeref:struct:mmap_region::mmap_region	file:	access:public
next	buffer.h	/^  struct buffer *next;$/;"	m	struct:buffer	typeref:struct:buffer::buffer	access:public
NEXT	bytecode.c	427;"	d	file:
next	charset.c	/^  struct charset_map_entries *next;$/;"	m	struct:charset_map_entries	typeref:struct:charset_map_entries::charset_map_entries	file:	access:public
next	dispextern.h	/^  struct face *next, *prev;$/;"	m	struct:face	typeref:struct:face::face	access:public
next	dispextern.h	/^  struct glyph_string *next, *prev;$/;"	m	struct:glyph_string	typeref:struct:glyph_string::glyph_string	access:public
next	dispextern.h	/^  struct image *next, *prev;$/;"	m	struct:image	typeref:struct:image::image	access:public
next	dispextern.h	/^  struct image_type *next;$/;"	m	struct:image_type	typeref:struct:image_type::image_type	access:public
next	dispnew.c	/^  struct row_entry *next;$/;"	m	struct:row_entry	typeref:struct:row_entry::row_entry	file:	access:public
next	font.h	/^  struct font_driver_list *next;$/;"	m	struct:font_driver_list	typeref:struct:font_driver_list::font_driver_list	access:public
next	ftxfont.c	/^  struct ftxfont_frame_data *next;$/;"	m	struct:ftxfont_frame_data	typeref:struct:ftxfont_frame_data::ftxfont_frame_data	file:	access:public
next	gmalloc.c	/^	size_t next;	\/* Index of next free cluster.  *\/$/;"	m	struct:__anon60::__anon64	file:	access:public
next	gmalloc.c	/^    struct alignlist *next;$/;"	m	struct:alignlist	typeref:struct:alignlist::alignlist	file:	access:public
next	gmalloc.c	/^    struct list *next;$/;"	m	struct:list	typeref:struct:list::list	file:	access:public
next	gtkutil.h	/^  struct xg_list_node_ *next;$/;"	m	struct:xg_list_node_	typeref:struct:xg_list_node_::xg_list_node_	access:public
next	image.c	/^  struct animation_cache *next;$/;"	m	struct:animation_cache	typeref:struct:animation_cache::animation_cache	file:	access:public
next	image.c	/^  struct ct_color *next;$/;"	m	struct:ct_color	typeref:struct:ct_color::ct_color	file:	access:public
next	image.c	/^  struct xpm_cached_color *next;$/;"	m	struct:xpm_cached_color	typeref:struct:xpm_cached_color::xpm_cached_color	file:	access:public
next	keyboard.c	/^  struct kboard_stack *next;$/;"	m	struct:kboard_stack	typeref:struct:kboard_stack::kboard_stack	file:	access:public
next	keyboard.c	/^  struct user_signal_info *next;$/;"	m	struct:user_signal_info	typeref:struct:user_signal_info::user_signal_info	file:	access:public
next	lisp.h	/^    struct Lisp_Finalizer *next;$/;"	m	struct:Lisp_Finalizer	typeref:struct:Lisp_Finalizer::Lisp_Finalizer	access:public
next	lisp.h	/^    struct Lisp_Overlay *next;$/;"	m	struct:Lisp_Overlay	typeref:struct:Lisp_Overlay::Lisp_Overlay	access:public
next	lisp.h	/^  Lisp_Object next;$/;"	m	struct:Lisp_Hash_Table	access:public
next	lisp.h	/^  struct handler *next;$/;"	m	struct:handler	typeref:struct:handler::handler	access:public
next	lisp.h	/^  struct Lisp_Marker *next;$/;"	m	struct:Lisp_Marker	typeref:struct:Lisp_Marker::Lisp_Marker	access:public
next	lisp.h	/^  struct Lisp_Symbol *next;$/;"	m	struct:Lisp_Symbol	typeref:struct:Lisp_Symbol::Lisp_Symbol	access:public
next	nsterm.h	/^  struct ns_display_info *next;$/;"	m	struct:ns_display_info	typeref:struct:ns_display_info::ns_display_info	access:public
next	ralloc.c	/^  struct bp *next;$/;"	m	struct:bp	typeref:struct:bp::bp	file:	access:public
next	ralloc.c	/^  struct heap *next;$/;"	m	struct:heap	typeref:struct:heap::heap	file:	access:public
next	search.c	/^  struct regexp_cache *next;$/;"	m	struct:regexp_cache	typeref:struct:regexp_cache::regexp_cache	file:	access:public
next	termchar.h	/^  struct tty_display_info *next; \/* Chain of all tty devices. *\/$/;"	m	struct:tty_display_info	typeref:struct:tty_display_info::tty_display_info	access:public
next	unexmacosx.c	/^  struct region_t *next;$/;"	m	struct:region_t	typeref:struct:region_t::region_t	file:	access:public
next	w32.c	/^  struct volume_info_data * next;$/;"	m	struct:volume_info_data	typeref:struct:volume_info_data::volume_info_data	file:	access:public
next	w32.c	/^  struct w32_id *next;$/;"	m	struct:w32_id	typeref:struct:w32_id::w32_id	file:	access:public
next	w32term.h	/^  Lisp_Object next, prev;$/;"	m	struct:scroll_bar	access:public
next	w32term.h	/^  struct deferred_msg * next;$/;"	m	struct:deferred_msg	typeref:struct:deferred_msg::deferred_msg	access:public
next	w32term.h	/^  struct notifications_set *next;$/;"	m	struct:notifications_set	typeref:struct:notifications_set::notifications_set	access:public
next	w32term.h	/^  struct w32_display_info *next;$/;"	m	struct:w32_display_info	typeref:struct:w32_display_info::w32_display_info	access:public
next	w32term.h	/^  struct w32_palette_entry * next;$/;"	m	struct:w32_palette_entry	typeref:struct:w32_palette_entry::w32_palette_entry	access:public
next	window.h	/^    Lisp_Object next;$/;"	m	struct:window	access:public
next	xselect.c	/^    struct selection_event_queue *next;$/;"	m	struct:selection_event_queue	typeref:struct:selection_event_queue::selection_event_queue	file:	access:public
next	xselect.c	/^  struct prop_location *next;$/;"	m	struct:prop_location	typeref:struct:prop_location::prop_location	file:	access:public
next	xselect.c	/^  struct selection_data *next;$/;"	m	struct:selection_data	typeref:struct:selection_data::selection_data	file:	access:public
next	xterm.h	/^  Lisp_Object next, prev;$/;"	m	struct:scroll_bar	access:public
next	xterm.h	/^  struct color_name_cache_entry *next;$/;"	m	struct:color_name_cache_entry	typeref:struct:color_name_cache_entry::color_name_cache_entry	access:public
next	xterm.h	/^  struct x_display_info *next;$/;"	m	struct:x_display_info	typeref:struct:x_display_info::x_display_info	access:public
nextfree	lisp.h	/^  struct handler *nextfree;$/;"	m	struct:handler	typeref:struct:handler::handler	access:public
next_almost_prime	fns.c	/^next_almost_prime (EMACS_INT n)$/;"	f	signature:(EMACS_INT n)
NEXT_ALMOST_PRIME_LIMIT	lisp.h	/^enum { NEXT_ALMOST_PRIME_LIMIT = 11 };$/;"	e	enum:__anon35
next_buffers	window.h	/^    Lisp_Object next_buffers;$/;"	m	struct:window	access:public
NEXT_CHAR_BOUNDARY	character.h	288;"	d
next_element_from_buffer	xdisp.c	/^next_element_from_buffer (struct it *it)$/;"	f	file:	signature:(struct it *it)
next_element_from_buffer	xdisp.c	/^static bool next_element_from_buffer (struct it *);$/;"	p	file:	signature:(struct it *)
next_element_from_composition	xdisp.c	/^next_element_from_composition (struct it *it)$/;"	f	file:	signature:(struct it *it)
next_element_from_composition	xdisp.c	/^static bool next_element_from_composition (struct it *);$/;"	p	file:	signature:(struct it *)
next_element_from_c_string	xdisp.c	/^next_element_from_c_string (struct it *it)$/;"	f	file:	signature:(struct it *it)
next_element_from_c_string	xdisp.c	/^static bool next_element_from_c_string (struct it *);$/;"	p	file:	signature:(struct it *)
next_element_from_display_vector	xdisp.c	/^next_element_from_display_vector (struct it *it)$/;"	f	file:	signature:(struct it *it)
next_element_from_display_vector	xdisp.c	/^static bool next_element_from_display_vector (struct it *);$/;"	p	file:	signature:(struct it *)
next_element_from_ellipsis	xdisp.c	/^next_element_from_ellipsis (struct it *it)$/;"	f	file:	signature:(struct it *it)
next_element_from_image	xdisp.c	/^next_element_from_image (struct it *it)$/;"	f	file:	signature:(struct it *it)
next_element_from_image	xdisp.c	/^static bool next_element_from_image (struct it *);$/;"	p	file:	signature:(struct it *)
next_element_from_stretch	xdisp.c	/^next_element_from_stretch (struct it *it)$/;"	f	file:	signature:(struct it *it)
next_element_from_stretch	xdisp.c	/^static bool next_element_from_stretch (struct it *);$/;"	p	file:	signature:(struct it *)
next_element_from_string	xdisp.c	/^next_element_from_string (struct it *it)$/;"	f	file:	signature:(struct it *it)
next_element_from_string	xdisp.c	/^static bool next_element_from_string (struct it *);$/;"	p	file:	signature:(struct it *)
next_element_from_xwidget	xdisp.c	/^next_element_from_xwidget (struct it *it)$/;"	f	file:	signature:(struct it *it)
next_element_from_xwidget	xdisp.c	/^static bool next_element_from_xwidget (struct it *);$/;"	p	file:	signature:(struct it *)
next_element_function	xdisp.c	/^typedef bool (*next_element_function) (struct it *);$/;"	t	file:
next_en_pos	dispextern.h	/^  ptrdiff_t next_en_pos;	\/* pos. of next char for determining ET type *\/$/;"	m	struct:bidi_it	access:public
next_en_type	dispextern.h	/^  bidi_type_t next_en_type;	\/* type of char at next_en_pos *\/$/;"	m	struct:bidi_it	access:public
NEXT_FAILURE_HANDLE	regex.c	1374;"	d	file:
next_fontset_id	fontset.c	/^static int next_fontset_id;$/;"	v	file:
next_for_neutral	dispextern.h	/^  struct bidi_saved_info next_for_neutral; \/* surrounding characters for... *\/$/;"	m	struct:bidi_it	typeref:struct:bidi_it::bidi_saved_info	access:public
next_for_neutral_pos	dispextern.h	/^  ptrdiff_t next_for_neutral_pos;$/;"	m	struct:bidi_stack	access:public
next_for_neutral_type	dispextern.h	/^  unsigned next_for_neutral_type : 3;$/;"	m	struct:bidi_stack	access:public
next_for_ws	dispextern.h	/^  struct bidi_saved_info next_for_ws; \/* character after sequence of ws *\/$/;"	m	struct:bidi_it	typeref:struct:bidi_it::bidi_saved_info	access:public
next_frame	frame.c	/^next_frame (Lisp_Object frame, Lisp_Object minibuf)$/;"	f	file:	signature:(Lisp_Object frame, Lisp_Object minibuf)
next_free	alloc.c	/^    struct ablock *next_free;$/;"	m	union:ablock::__anon5	typeref:struct:ablock::__anon5::ablock	file:	access:public
next_free	alloc.c	/^  sdata *next_free;$/;"	m	struct:sblock	file:	access:public
next_free	lisp.h	/^  ptrdiff_t next_free;$/;"	m	struct:Lisp_Hash_Table	access:public
NEXT_FREE_LISP_STRING	alloc.c	1729;"	d	file:
next_interval	intervals.c	/^next_interval (register INTERVAL interval)$/;"	f	signature:(register INTERVAL interval)
next_interval	intervals.h	/^extern INTERVAL next_interval (INTERVAL);$/;"	p	signature:(INTERVAL)
next_kboard	keyboard.h	/^    KBOARD *next_kboard;$/;"	m	struct:kboard	access:public
next_lface_id	xfaces.c	/^static int next_lface_id;$/;"	v	file:
next_menubar_widget_id	xmenu.c	/^static LWLIB_ID next_menubar_widget_id;$/;"	v	file:
next_noop_dpyinfo	xterm.c	/^static struct x_display_info *next_noop_dpyinfo;$/;"	v	typeref:struct:x_display_info	file:
next_overlay_change	xdisp.c	/^next_overlay_change (ptrdiff_t pos)$/;"	f	file:	signature:(ptrdiff_t pos)
next_overlay_change	xdisp.c	/^static ptrdiff_t next_overlay_change (ptrdiff_t);$/;"	p	file:
next_overlay_string	xdisp.c	/^next_overlay_string (struct it *it)$/;"	f	file:	signature:(struct it *it)
next_overlay_string	xdisp.c	/^static void next_overlay_string (struct it *);$/;"	p	file:	signature:(struct it *)
next_popup_x_y	xmenu.c	/^struct next_popup_x_y$/;"	s	file:
next_popup_x_y::f	xmenu.c	/^  struct frame *f;$/;"	m	struct:next_popup_x_y	typeref:struct:next_popup_x_y::frame	file:	access:public
next_popup_x_y::x	xmenu.c	/^  int x;$/;"	m	struct:next_popup_x_y	file:	access:public
next_popup_x_y::y	xmenu.c	/^  int y;$/;"	m	struct:next_popup_x_y	file:	access:public
next_screen_context_lines	globals.h	853;"	d
next_terminal	termhooks.h	/^  struct terminal *next_terminal;$/;"	m	struct:terminal	typeref:struct:terminal::terminal	access:public
next_terminal_id	terminal.c	/^static int next_terminal_id;$/;"	v	file:
next_thread	thread.h	/^  struct thread_state *next_thread;$/;"	m	struct:thread_state	typeref:struct:thread_state::thread_state	access:public
next_vector	alloc.c	/^next_vector (struct Lisp_Vector *v)$/;"	f	file:	signature:(struct Lisp_Vector *v)
next_weak	lisp.h	/^  struct Lisp_Hash_Table *next_weak;$/;"	m	struct:Lisp_Hash_Table	typeref:struct:Lisp_Hash_Table::Lisp_Hash_Table	access:public
next_window	window.c	/^next_window (Lisp_Object window, Lisp_Object minibuf, Lisp_Object all_frames,$/;"	f	file:	signature:(Lisp_Object window, Lisp_Object minibuf, Lisp_Object all_frames, bool next_p)
nfeatures	ftfont.c	/^  int nfeatures[2];$/;"	m	struct:OpenTypeSpec	file:	access:public
nframes	eval.c	/^     (Lisp_Object exp, Lisp_Object nframes, Lisp_Object base)$/;"	v
nframes	eval.c	/^     (Lisp_Object function, Lisp_Object nframes, Lisp_Object base)$/;"	v
nframes	eval.c	/^  (Lisp_Object nframes, Lisp_Object base)$/;"	v
nfree	gmalloc.c	/^		size_t nfree; \/* Free frags in a fragmented block.  *\/$/;"	m	struct:__anon60::__anon61::__anon62::__anon63	file:	access:public
ngcs	xfaces.c	/^static int ngcs;$/;"	v	file:
nglyphs	dispextern.h	/^  int nglyphs;$/;"	m	struct:composition_it	access:public
nglyphs	dispextern.h	/^  int nglyphs;$/;"	m	struct:it	access:public
nglyphs	dispextern.h	/^  ptrdiff_t nglyphs;$/;"	m	struct:glyph_pool	access:public
NIF_INFO	w32fns.c	9884;"	d	file:
NIIF_ERROR	w32fns.c	9896;"	d	file:
NIIF_INFO	w32fns.c	9890;"	d	file:
NIIF_NONE	w32fns.c	9887;"	d	file:
NIIF_WARNING	w32fns.c	9893;"	d	file:
NIL	xrdb.c	599;"	d	file:
NILP	lisp.h	/^(NILP) (Lisp_Object x)$/;"	f	signature:(Lisp_Object x)
NILP	lisp.h	360;"	d
NIL_BLOC	ralloc.c	159;"	d	file:
NIL_HEAP	ralloc.c	128;"	d	file:
NIL_IS_ZERO	emacs-module.c	/^verify (NIL_IS_ZERO);$/;"	v
NIL_IS_ZERO	lisp.h	/^enum { NIL_IS_ZERO = XLI_BUILTIN_LISPSYM (iQnil) == 0 };$/;"	e	enum:__anon21
Ni_Err	w32fns.c	/^  Ni_Err$/;"	e	enum:NI_Severity	file:
Ni_Info	w32fns.c	/^  Ni_Info,$/;"	e	enum:NI_Severity	file:
Ni_None	w32fns.c	/^  Ni_None,$/;"	e	enum:NI_Severity	file:
NI_Severity	w32fns.c	/^enum NI_Severity {$/;"	g	file:
Ni_Warn	w32fns.c	/^  Ni_Warn,$/;"	e	enum:NI_Severity	file:
nlc	unexmacosx.c	/^static int nlc;$/;"	v	file:
nl_langinfo	w32proc.c	/^nl_langinfo (nl_item item)$/;"	f	signature:(nl_item item)
nocopy	coding.c	/^  (Lisp_Object string, Lisp_Object coding_system, Lisp_Object nocopy, Lisp_Object buffer)$/;"	v
noerror	lread.c	/^  (Lisp_Object file, Lisp_Object noerror, Lisp_Object nomessage,$/;"	v
noerror	search.c	/^  (Lisp_Object regexp, Lisp_Object bound, Lisp_Object noerror, Lisp_Object count)$/;"	v
noerror	search.c	/^  (Lisp_Object string, Lisp_Object bound, Lisp_Object noerror, Lisp_Object count)$/;"	v
nofile_limit	process.c	/^static struct rlimit nofile_limit;$/;"	v	typeref:struct:rlimit	file:
nofree	xselect.c	/^  bool nofree;$/;"	m	struct:selection_data	file:	access:public
noindirect	keymap.c	/^  (Lisp_Object definition, Lisp_Object keymap, Lisp_Object firstonly, Lisp_Object noindirect, Lisp_Object no_remap)$/;"	v
noindirect	keymap.c	/^  bool last_is_meta, noindirect;$/;"	m	struct:where_is_internal_data	file:	access:public
noinline	conf_post.h	276;"	d
nomessage	lread.c	/^  (Lisp_Object file, Lisp_Object noerror, Lisp_Object nomessage,$/;"	v
NOMINMAX	fileio.c	65;"	d	file:
NOMINMAX	fileio.c	69;"	d	file:
NONEXISTENT_MODTIME_NSECS	buffer.h	819;"	d
noninteractive	emacs.c	/^bool noninteractive;$/;"	v
noninteractive1	globals.h	1017;"	d
noninteractive_need_newline	xdisp.c	/^bool noninteractive_need_newline;$/;"	v
nontext_cursor	nsterm.h	/^  Cursor nontext_cursor;$/;"	m	struct:ns_output	access:public
nontext_cursor	w32term.h	/^  Cursor nontext_cursor;$/;"	m	struct:w32_output	access:public
nontext_cursor	xterm.h	/^  Cursor nontext_cursor;$/;"	m	struct:x_output	access:public
NON_ASCII_KEYSTROKE_EVENT	termhooks.h	/^  NON_ASCII_KEYSTROKE_EVENT,	\/* .code is a number identifying the$/;"	e	enum:event_kind
NON_BLOCKING_CONNECT_FD	process.c	/^  NON_BLOCKING_CONNECT_FD = 16$/;"	e	enum:fd_bits	file:
NON_BREAKING_HYPHEN	character.h	/^  NON_BREAKING_HYPHEN = 0x2011,$/;"	e	enum:__anon54
non_local_exit_data	emacs-module.c	/^  Lisp_Object non_local_exit_symbol, non_local_exit_data;$/;"	m	struct:emacs_env_private	file:	access:public
non_local_exit_symbol	emacs-module.c	/^  Lisp_Object non_local_exit_symbol, non_local_exit_data;$/;"	m	struct:emacs_env_private	file:	access:public
NON_OBJC_CFLAGS	Makefile	/^NON_OBJC_CFLAGS = -Wignored-attributes -Wignored-qualifiers -Wopenmp-simd$/;"	m
normalize_filename	w32.c	/^normalize_filename (register char *fp, char path_sep)$/;"	f	file:	signature:(register char *fp, char path_sep)
normal_char_ascent_descent	xdisp.c	/^normal_char_ascent_descent (struct font *font, int c, int *ascent, int *descent)$/;"	f	file:	signature:(struct font *font, int c, int *ascent, int *descent)
normal_char_ascent_descent	xdisp.c	/^static void normal_char_ascent_descent (struct font *, int, int *, int *);$/;"	p	file:	signature:(struct font *, int, int *, int *)
normal_char_height	xdisp.c	/^normal_char_height (struct font *font, int c)$/;"	f	file:	signature:(struct font *font, int c)
normal_char_height	xdisp.c	/^static int  normal_char_height (struct font *, int);$/;"	p	file:	signature:(struct font *, int)
normal_cols	window.c	/^  Lisp_Object normal_cols, normal_lines;$/;"	m	struct:saved_window	file:	access:public
normal_cols	window.h	/^    Lisp_Object normal_cols;$/;"	m	struct:window	access:public
normal_gc	xterm.h	/^  GC normal_gc;				\/* Normal video *\/$/;"	m	struct:x_output	access:public
normal_lines	window.c	/^  Lisp_Object normal_cols, normal_lines;$/;"	m	struct:saved_window	file:	access:public
normal_lines	window.h	/^    Lisp_Object normal_lines;$/;"	m	struct:window	access:public
normal_placement	w32term.h	/^  WINDOWPLACEMENT normal_placement;$/;"	m	struct:w32_output	access:public
NorthEastGravity	nsgui.h	167;"	d
NorthEastGravity	w32gui.h	85;"	d
NorthGravity	nsgui.h	166;"	d
NorthGravity	w32gui.h	84;"	d
NorthWestGravity	nsgui.h	165;"	d
NorthWestGravity	w32gui.h	83;"	d
nosort	dired.c	/^  (Lisp_Object directory, Lisp_Object full, Lisp_Object match, Lisp_Object nosort, Lisp_Object id_format)$/;"	v
NOSPLASH_OPT	xsmfns.c	/^static char NOSPLASH_OPT[] = "--no-splash";$/;"	v	file:
nosuffix	lread.c	/^   Lisp_Object nosuffix, Lisp_Object must_suffix)$/;"	v
notbuttons	menu.c	/^     int notbuttons;$/;"	m	struct:skp	file:	access:public
notcategoryspec	regex.c	/^  notcategoryspec$/;"	e	enum:__anon144	file:
NOTE_DELETE	editfns.c	3123;"	d	file:
NOTE_INSERT	editfns.c	3124;"	d	file:
note_mode_line_or_margin_highlight	xdisp.c	/^note_mode_line_or_margin_highlight (Lisp_Object window, int x, int y,$/;"	f	file:	signature:(Lisp_Object window, int x, int y, enum window_part area)
note_mouse_highlight	dispextern.h	/^extern void note_mouse_highlight (struct frame *, int, int);$/;"	p	signature:(struct frame *, int, int)
note_mouse_highlight	xdisp.c	/^note_mouse_highlight (struct frame *f, int x, int y)$/;"	f	signature:(struct frame *f, int x, int y)
note_mouse_movement	w32term.c	/^note_mouse_movement (struct frame *frame, MSG *msg)$/;"	f	file:	signature:(struct frame *frame, MSG *msg)
note_mouse_movement	xterm.c	/^note_mouse_movement (struct frame *frame, const XMotionEvent *event)$/;"	f	file:	signature:(struct frame *frame, const XMotionEvent *event)
note_suspicious_free	alloc.c	/^note_suspicious_free (void *ptr)$/;"	f	file:	signature:(void *ptr)
note_tool_bar_highlight	xdisp.c	/^note_tool_bar_highlight (struct frame *f, int x, int y)$/;"	f	file:	signature:(struct frame *f, int x, int y)
nothing	frame.h	/^    intptr_t nothing;$/;"	m	union:frame::output_data	access:public
notice_overwritten_cursor	xdisp.c	/^notice_overwritten_cursor (struct window *w, enum glyph_row_area area,$/;"	f	file:	signature:(struct window *w, enum glyph_row_area area, int x0, int x1, int y0, int y1)
notice_overwritten_cursor	xdisp.c	/^static void notice_overwritten_cursor (struct window *,$/;"	p	file:	signature:(struct window *, enum glyph_row_area, int, int, int, int)
notification	w32notify.c	/^struct notification {$/;"	s	file:
notification::buf	w32notify.c	/^  BYTE *buf;		\/* buffer for ReadDirectoryChangesW *\/$/;"	m	struct:notification	file:	access:public
notification::dir	w32notify.c	/^  HANDLE dir;		\/* handle to the watched directory *\/$/;"	m	struct:notification	file:	access:public
notification::filter	w32notify.c	/^  DWORD filter;		\/* bit mask for events to watch *\/$/;"	m	struct:notification	file:	access:public
notification::io_info	w32notify.c	/^  OVERLAPPED *io_info;	\/* the OVERLAPPED structure for async I\/O *\/$/;"	m	struct:notification	file:	access:public
notification::signature	w32notify.c	/^  unsigned signature;$/;"	m	struct:notification	file:	access:public
notification::subtree	w32notify.c	/^  BOOL subtree;		\/* whether to watch subdirectories *\/$/;"	m	struct:notification	file:	access:public
notification::terminate	w32notify.c	/^  HANDLE terminate;     \/* event signaling the thread to terminate *\/$/;"	m	struct:notification	file:	access:public
notification::thr	w32notify.c	/^  HANDLE thr;		\/* handle to the thread that watches *\/$/;"	m	struct:notification	file:	access:public
notification::watchee	w32notify.c	/^  char *watchee;	\/* the file we are interested in, UTF-8 encoded *\/$/;"	m	struct:notification	file:	access:public
notifications	w32term.h	/^  LPBYTE notifications;$/;"	m	struct:notifications_set	access:public
notifications_set	w32term.h	/^struct notifications_set {$/;"	s
notifications_set::desc	w32term.h	/^  void *desc;$/;"	m	struct:notifications_set	access:public
notifications_set::next	w32term.h	/^  struct notifications_set *next;$/;"	m	struct:notifications_set	typeref:struct:notifications_set::notifications_set	access:public
notifications_set::notifications	w32term.h	/^  LPBYTE notifications;$/;"	m	struct:notifications_set	access:public
notifications_set::prev	w32term.h	/^  struct notifications_set *prev;$/;"	m	struct:notifications_set	typeref:struct:notifications_set::notifications_set	access:public
notifications_set::size	w32term.h	/^  DWORD size;$/;"	m	struct:notifications_set	access:public
notifications_set_head	w32notify.c	/^struct notifications_set *notifications_set_head;$/;"	v	typeref:struct:notifications_set
notify_args	thread.c	/^struct notify_args$/;"	s	file:
notify_args::all	thread.c	/^  int all;$/;"	m	struct:notify_args	file:	access:public
notify_args::cvar	thread.c	/^  struct Lisp_CondVar *cvar;$/;"	m	struct:notify_args	typeref:struct:notify_args::Lisp_CondVar	file:	access:public
NOTIFY_CFLAGS	Makefile	/^NOTIFY_CFLAGS = $/;"	m
NOTIFY_LIBS	Makefile	/^NOTIFY_LIBS = $/;"	m
notify_msg_ready	w32xfns.c	/^notify_msg_ready (void)$/;"	f	file:	signature:(void)
NOTIFY_OBJ	Makefile	/^NOTIFY_OBJ = inotify.o$/;"	m
notify_variable_watchers	data.c	/^notify_variable_watchers (Lisp_Object symbol,$/;"	f	signature:(Lisp_Object symbol, Lisp_Object newval, Lisp_Object operation, Lisp_Object where)
notify_variable_watchers	lisp.h	/^extern void notify_variable_watchers (Lisp_Object, Lisp_Object,$/;"	p	signature:(Lisp_Object, Lisp_Object, Lisp_Object, Lisp_Object)
notsyntaxspec	regex.c	/^  notsyntaxspec$/;"	e	enum:__anon144	file:
notwordbound	regex.c	/^  notwordbound,	\/* Succeeds if not at a word boundary.  *\/$/;"	e	enum:__anon144	file:
not_bol	regex.h	/^  unsigned not_bol : 1;$/;"	m	struct:re_pattern_buffer	access:public
not_eol	regex.h	/^  unsigned not_eol : 1;$/;"	m	struct:re_pattern_buffer	access:public
not_holding_lock	thread.h	/^  int not_holding_lock;$/;"	m	struct:thread_state	access:public
NOT_RUNNING	profiler.c	/^  { NOT_RUNNING,$/;"	e	enum:profiler_cpu_running	file:
not_single_kboard_state	keyboard.c	/^not_single_kboard_state (KBOARD *kboard)$/;"	f	signature:(KBOARD *kboard)
not_single_kboard_state	keyboard.h	/^extern void not_single_kboard_state (KBOARD *);$/;"	p	signature:(KBOARD *)
not_warned	vm-limit.c	/^enum warnlevel { not_warned, warned_75, warned_85, warned_95 };$/;"	e	enum:warnlevel	file:
NoValue	nsgui.h	176;"	d
NoValue	w32gui.h	94;"	d
no_accept_focus	frame.h	/^  bool_bf no_accept_focus : 1;$/;"	m	struct:frame	access:public
NO_BREAK_SPACE	character.h	/^  NO_BREAK_SPACE = 0x00A0,$/;"	e	enum:__anon54
no_color_bit	term.c	/^enum no_color_bit$/;"	g	file:
NO_CURSOR	dispextern.h	/^  NO_CURSOR = -1,$/;"	e	enum:text_cursor_kinds
No_Cursor	dispextern.h	86;"	d
No_Cursor	nsgui.h	108;"	d
No_Cursor	w32gui.h	53;"	d
No_Cursor	xterm.h	741;"	d
NO_EVENT	termhooks.h	/^  NO_EVENT,			\/* nothing happened.  This should never$/;"	e	enum:event_kind
no_focus_on_map	frame.h	/^  bool_bf no_focus_on_map : 1;$/;"	m	struct:frame	access:public
NO_FRINGE_BITMAP	fringe.c	470;"	d	file:
NO_INLINE	conf_post.h	179;"	d
NO_INLINE	conf_post.h	181;"	d
no_message	fileio.c	/^  (Lisp_Object no_message, Lisp_Object current_only)$/;"	v
no_op	regex.c	/^  no_op = 0,$/;"	e	enum:__anon144	file:
NO_PIXMAP	image.c	70;"	d	file:
NO_PIXMAP	image.c	85;"	d	file:
NO_PIXMAP	image.c	98;"	d	file:
no_redraw_on_reenter	globals.h	1015;"	d
no_remap	keymap.c	/^  (Lisp_Object key, Lisp_Object accept_default, Lisp_Object no_remap, Lisp_Object position)$/;"	v
no_sanitize_memcpy	alloc.c	/^no_sanitize_memcpy (void *dest, void const *src, size_t size)$/;"	f	file:	signature:(void *dest, void const *src, size_t size)
no_scrolling_p	dispextern.h	/^  bool_bf no_scrolling_p : 1;$/;"	m	struct:glyph_matrix	access:public
no_site_lisp	emacs.c	/^bool no_site_lisp;$/;"	v
no_special_glyphs	frame.h	/^  bool_bf no_special_glyphs : 1;$/;"	m	struct:frame	access:public
no_split	frame.h	/^  bool_bf no_split : 1;$/;"	m	struct:frame	access:public
no_sub	regex.h	/^  unsigned no_sub : 1;$/;"	m	struct:re_pattern_buffer	access:public
npending	keyboard.c	/^  int npending;$/;"	m	struct:user_signal_info	file:	access:public
npixmaps_allocated	xfaces.c	/^static int npixmaps_allocated;$/;"	v	file:
nQueue	w32xfns.c	/^int nQueue = 0;$/;"	v
nrows	dispextern.h	/^  int height, nrows;$/;"	m	struct:run	access:public
nrows	dispextern.h	/^  int nrows, ncolumns;$/;"	m	struct:glyph_pool	access:public
nrows	dispextern.h	/^  int nrows;$/;"	m	struct:glyph_matrix	access:public
nrows_scale_factor	window.h	/^    int nrows_scale_factor, ncols_scale_factor;$/;"	m	struct:window	access:public
nr_net_supported_atoms	xterm.h	/^  int nr_net_supported_atoms;$/;"	m	struct:x_display_info	access:public
NR_PROPS	xsmfns.c	161;"	d	file:
ns	frame.h	/^    struct ns_output *ns;       \/* From nsterm.h.  *\/$/;"	m	union:frame::output_data	typeref:struct:frame::output_data::ns_output	access:public
ns	termhooks.h	/^    struct ns_display_info *ns;       \/* nsterm.h *\/$/;"	m	union:terminal::display_info	typeref:struct:terminal::display_info::ns_display_info	access:public
NSAlertStyleCritical	nsterm.h	1313;"	d
NSAPP_DATA2_RUNASSCRIPT	nsterm.h	1191;"	d
NSAPP_DATA2_RUNFILEDIALOG	nsterm.h	1194;"	d
nsberror	buffer.c	/^nsberror (Lisp_Object spec)$/;"	f	signature:(Lisp_Object spec)
nsberror	lisp.h	/^extern _Noreturn void nsberror (Lisp_Object);$/;"	p	signature:(Lisp_Object)
NSCompositingOperationSourceOver	nsterm.h	1287;"	d
NSControlSizeRegular	nsterm.h	1314;"	d
NSEventMaskAny	nsterm.h	1305;"	d
NSEventMaskApplicationDefined	nsterm.h	1288;"	d
NSEventModifierFlagCommand	nsterm.h	1281;"	d
NSEventModifierFlagControl	nsterm.h	1282;"	d
NSEventModifierFlagHelp	nsterm.h	1283;"	d
NSEventModifierFlagNumericPad	nsterm.h	1284;"	d
NSEventModifierFlagOption	nsterm.h	1285;"	d
NSEventModifierFlagShift	nsterm.h	1286;"	d
NSEventTypeApplicationDefined	nsterm.h	1289;"	d
NSEventTypeCursorUpdate	nsterm.h	1290;"	d
NSEventTypeFlagsChanged	nsterm.h	1304;"	d
NSEventTypeKeyDown	nsterm.h	1302;"	d
NSEventTypeKeyUp	nsterm.h	1303;"	d
NSEventTypeLeftMouseDown	nsterm.h	1292;"	d
NSEventTypeLeftMouseDragged	nsterm.h	1298;"	d
NSEventTypeLeftMouseUp	nsterm.h	1295;"	d
NSEventTypeMouseMoved	nsterm.h	1291;"	d
NSEventTypeOtherMouseDown	nsterm.h	1294;"	d
NSEventTypeOtherMouseDragged	nsterm.h	1300;"	d
NSEventTypeOtherMouseUp	nsterm.h	1297;"	d
NSEventTypeRightMouseDown	nsterm.h	1293;"	d
NSEventTypeRightMouseDragged	nsterm.h	1299;"	d
NSEventTypeRightMouseUp	nsterm.h	1296;"	d
NSEventTypeScrollWheel	nsterm.h	1301;"	d
nsfont	nsterm.h	/^  NSFont *nsfont;$/;"	m	struct:nsfont_info	access:public
nsfont	nsterm.h	/^  void *nsfont;$/;"	m	struct:nsfont_info	access:public
nsfont_info	nsterm.h	/^struct nsfont_info$/;"	s
nsfont_info::bold	nsterm.h	/^  char bold, ital;  \/* convenience flags *\/$/;"	m	struct:nsfont_info	access:public
nsfont_info::cgfont	nsterm.h	/^  CGFontRef cgfont;$/;"	m	struct:nsfont_info	access:public
nsfont_info::cgfont	nsterm.h	/^  void *cgfont;$/;"	m	struct:nsfont_info	access:public
nsfont_info::font	nsterm.h	/^  struct font font;$/;"	m	struct:nsfont_info	typeref:struct:nsfont_info::font	access:public
nsfont_info::glyphs	nsterm.h	/^  unsigned short **glyphs; \/* map Unicode index to glyph *\/$/;"	m	struct:nsfont_info	access:public
nsfont_info::height	nsterm.h	/^  float height;$/;"	m	struct:nsfont_info	access:public
nsfont_info::ital	nsterm.h	/^  char bold, ital;  \/* convenience flags *\/$/;"	m	struct:nsfont_info	access:public
nsfont_info::max_bounds	nsterm.h	/^  XCharStruct max_bounds;$/;"	m	struct:nsfont_info	access:public
nsfont_info::metrics	nsterm.h	/^  struct font_metrics **metrics;$/;"	m	struct:nsfont_info	typeref:struct:nsfont_info::font_metrics	access:public
nsfont_info::name	nsterm.h	/^  char *name;  \/* PostScript name, uniquely identifies on NS systems *\/$/;"	m	struct:nsfont_info	access:public
nsfont_info::nsfont	nsterm.h	/^  NSFont *nsfont;$/;"	m	struct:nsfont_info	access:public
nsfont_info::nsfont	nsterm.h	/^  void *nsfont;$/;"	m	struct:nsfont_info	access:public
nsfont_info::size	nsterm.h	/^  float size;$/;"	m	struct:nsfont_info	access:public
nsfont_info::synthItal	nsterm.h	/^  char synthItal;$/;"	m	struct:nsfont_info	access:public
nsfont_info::underpos	nsterm.h	/^  float underpos;$/;"	m	struct:nsfont_info	access:public
nsfont_info::underwidth	nsterm.h	/^  float underwidth;$/;"	m	struct:nsfont_info	access:public
nsfont_info::width	nsterm.h	/^  float width;  \/* Maximum advance for the font.  *\/$/;"	m	struct:nsfont_info	access:public
nsfont_make_fontset_for_font	nsterm.h	/^extern void nsfont_make_fontset_for_font (Lisp_Object name,$/;"	p	signature:(Lisp_Object name, Lisp_Object font_object)
NSIG	syssignal.h	64;"	d
NSIG	syssignal.h	65;"	d
NSPoint	nsgui.h	/^typedef struct _NSPoint { CGFloat x, y; } NSPoint;$/;"	t	typeref:struct:_NSPoint
NSRect	nsgui.h	/^typedef struct _NSRect  { NSPoint origin; NSSize size; } NSRect;$/;"	t	typeref:struct:_NSRect
NSSize	nsgui.h	/^typedef struct _NSSize  { CGFloat width, height; } NSSize;$/;"	t	typeref:struct:_NSSize
NSTATICS	alloc.c	/^enum { NSTATICS = 2048 };$/;"	e	enum:__anon4	file:
NSTRACE	nsterm.h	310;"	d
NSTRACE_ALL_GROUPS	nsterm.h	162;"	d
NSTRACE_ARG_FSTYPE	nsterm.h	232;"	d
NSTRACE_ARG_POINT	nsterm.h	225;"	d
NSTRACE_ARG_RECT	nsterm.h	228;"	d
NSTRACE_ARG_SIZE	nsterm.h	222;"	d
NSTRACE_ENABLED	nsterm.h	156;"	d
NSTRACE_FMT_FSTYPE	nsterm.h	231;"	d
NSTRACE_FMT_POINT	nsterm.h	224;"	d
NSTRACE_FMT_RECT	nsterm.h	227;"	d
NSTRACE_FMT_RETURN	nsterm.h	265;"	d
NSTRACE_FMT_SIZE	nsterm.h	221;"	d
NSTRACE_FSTYPE	nsterm.h	249;"	d
NSTRACE_FSTYPE	nsterm.h	335;"	d
nstrace_fullscreen_type_name	nsterm.h	/^char const * nstrace_fullscreen_type_name (int);$/;"	p	signature:(int)
NSTRACE_GROUP_COLOR	nsterm.h	178;"	d
NSTRACE_GROUP_EVENTS	nsterm.h	166;"	d
NSTRACE_GROUP_FOCUS	nsterm.h	186;"	d
NSTRACE_GROUP_FRINGE	nsterm.h	174;"	d
NSTRACE_GROUP_GLYPHS	nsterm.h	182;"	d
NSTRACE_GROUP_UPDATES	nsterm.h	170;"	d
nstrace_leave	nsterm.h	/^void nstrace_leave(int *);$/;"	p	signature:(int *)
NSTRACE_MSG	nsterm.h	212;"	d
NSTRACE_MSG	nsterm.h	319;"	d
NSTRACE_MSG_NO_DASHES	nsterm.h	198;"	d
NSTRACE_POINT	nsterm.h	241;"	d
NSTRACE_POINT	nsterm.h	327;"	d
NSTRACE_RECT	nsterm.h	245;"	d
NSTRACE_RECT	nsterm.h	331;"	d
nstrace_restore_global_trace_state	nsterm.h	/^void nstrace_restore_global_trace_state(int *);$/;"	p	signature:(int *)
NSTRACE_RETURN	nsterm.h	267;"	d
NSTRACE_RETURN_FSTYPE	nsterm.h	351;"	d
NSTRACE_RETURN_POINT	nsterm.h	273;"	d
NSTRACE_RETURN_POINT	nsterm.h	343;"	d
NSTRACE_RETURN_RECT	nsterm.h	276;"	d
NSTRACE_RETURN_RECT	nsterm.h	347;"	d
NSTRACE_RETURN_SIZE	nsterm.h	270;"	d
NSTRACE_RETURN_SIZE	nsterm.h	339;"	d
NSTRACE_SIZE	nsterm.h	237;"	d
NSTRACE_SIZE	nsterm.h	323;"	d
NSTRACE_UNLESS	nsterm.h	311;"	d
NSTRACE_UNSILENCE	nsterm.h	306;"	d
NSTRACE_UNSILENCE	nsterm.h	355;"	d
NSTRACE_WHEN	nsterm.h	293;"	d
NSTRACE_WHEN	nsterm.h	315;"	d
NSWindowStyleMask	nsterm.h	/^typedef NSUInteger NSWindowStyleMask;$/;"	t
NSWindowStyleMaskBorderless	nsterm.h	1306;"	d
NSWindowStyleMaskClosable	nsterm.h	1307;"	d
NSWindowStyleMaskFullScreen	nsterm.h	1308;"	d
NSWindowStyleMaskMiniaturizable	nsterm.h	1309;"	d
NSWindowStyleMaskResizable	nsterm.h	1310;"	d
NSWindowStyleMaskTitled	nsterm.h	1311;"	d
NSWindowStyleMaskUtilityWindow	nsterm.h	1312;"	d
ns_alloc_autorelease_pool	nsterm.h	/^extern void *ns_alloc_autorelease_pool (void);$/;"	p	signature:(void)
ns_bitmap_record	nsterm.h	/^struct ns_bitmap_record$/;"	s
ns_bitmap_record::depth	nsterm.h	/^  int height, width, depth;$/;"	m	struct:ns_bitmap_record	access:public
ns_bitmap_record::file	nsterm.h	/^  char *file;$/;"	m	struct:ns_bitmap_record	access:public
ns_bitmap_record::height	nsterm.h	/^  int height, width, depth;$/;"	m	struct:ns_bitmap_record	access:public
ns_bitmap_record::img	nsterm.h	/^  EmacsImage *img;$/;"	m	struct:ns_bitmap_record	access:public
ns_bitmap_record::refcount	nsterm.h	/^  int refcount;$/;"	m	struct:ns_bitmap_record	access:public
ns_bitmap_record::width	nsterm.h	/^  int height, width, depth;$/;"	m	struct:ns_bitmap_record	access:public
ns_check_menu_open	nsterm.h	/^extern void ns_check_menu_open (NSMenu *menu);$/;"	p	signature:(NSMenu *menu)
ns_check_pending_open_menu	nsterm.h	/^extern void ns_check_pending_open_menu (void);$/;"	p	signature:(void)
ns_clear_frame	nsterm.h	/^extern void ns_clear_frame (struct frame *f);$/;"	p	signature:(struct frame *f)
NS_COLOR_CAPACITY	nsterm.h	800;"	d
ns_color_table	nsterm.h	/^struct ns_color_table$/;"	s
ns_color_table::avail	nsterm.h	/^  ptrdiff_t avail;$/;"	m	struct:ns_color_table	access:public
ns_color_table::availIndices	nsterm.h	/^  void *availIndices;$/;"	m	struct:ns_color_table	access:public
ns_color_table::colors	nsterm.h	/^  NSColor **colors;$/;"	m	struct:ns_color_table	access:public
ns_color_table::empty_indices	nsterm.h	/^  NSMutableSet *empty_indices;$/;"	m	struct:ns_color_table	access:public
ns_color_table::items	nsterm.h	/^  void **items;$/;"	m	struct:ns_color_table	access:public
ns_color_table::size	nsterm.h	/^  ptrdiff_t size;$/;"	m	struct:ns_color_table	access:public
ns_defined_color	nsterm.h	/^ns_defined_color (struct frame *f,$/;"	p	signature:(struct frame *f, const char *name, XColor *color_def, bool alloc, bool makeIndex)
ns_display_info	nsterm.h	/^struct ns_display_info$/;"	s
ns_display_info::bitmaps	nsterm.h	/^  struct ns_bitmap_record *bitmaps;$/;"	m	struct:ns_display_info	typeref:struct:ns_display_info::ns_bitmap_record	access:public
ns_display_info::bitmaps_last	nsterm.h	/^  ptrdiff_t bitmaps_last;$/;"	m	struct:ns_display_info	access:public
ns_display_info::bitmaps_size	nsterm.h	/^  ptrdiff_t bitmaps_size;$/;"	m	struct:ns_display_info	access:public
ns_display_info::color_p	nsterm.h	/^  int color_p;$/;"	m	struct:ns_display_info	access:public
ns_display_info::color_table	nsterm.h	/^  struct ns_color_table *color_table;$/;"	m	struct:ns_display_info	typeref:struct:ns_display_info::ns_color_table	access:public
ns_display_info::grabbed	nsterm.h	/^  int grabbed;$/;"	m	struct:ns_display_info	access:public
ns_display_info::horizontal_scroll_bar_cursor	nsterm.h	/^  Cursor horizontal_scroll_bar_cursor;$/;"	m	struct:ns_display_info	access:public
ns_display_info::last_mouse_frame	nsterm.h	/^  struct frame *last_mouse_frame;$/;"	m	struct:ns_display_info	typeref:struct:ns_display_info::frame	access:public
ns_display_info::last_mouse_glyph	nsterm.h	/^  NSRect last_mouse_glyph;$/;"	m	struct:ns_display_info	access:public
ns_display_info::last_mouse_motion_frame	nsterm.h	/^  struct frame *last_mouse_motion_frame;$/;"	m	struct:ns_display_info	typeref:struct:ns_display_info::frame	access:public
ns_display_info::last_mouse_motion_x	nsterm.h	/^  int last_mouse_motion_x;$/;"	m	struct:ns_display_info	access:public
ns_display_info::last_mouse_motion_y	nsterm.h	/^  int last_mouse_motion_y;$/;"	m	struct:ns_display_info	access:public
ns_display_info::last_mouse_movement_time	nsterm.h	/^  Time last_mouse_movement_time;$/;"	m	struct:ns_display_info	access:public
ns_display_info::last_mouse_scroll_bar	nsterm.h	/^  EmacsScroller *last_mouse_scroll_bar;$/;"	m	struct:ns_display_info	access:public
ns_display_info::last_mouse_scroll_bar	nsterm.h	/^  void *last_mouse_scroll_bar;$/;"	m	struct:ns_display_info	access:public
ns_display_info::mouse_highlight	nsterm.h	/^  Mouse_HLInfo mouse_highlight;$/;"	m	struct:ns_display_info	access:public
ns_display_info::name_list_element	nsterm.h	/^  Lisp_Object name_list_element;$/;"	m	struct:ns_display_info	access:public
ns_display_info::next	nsterm.h	/^  struct ns_display_info *next;$/;"	m	struct:ns_display_info	typeref:struct:ns_display_info::ns_display_info	access:public
ns_display_info::n_fonts	nsterm.h	/^  int n_fonts;$/;"	m	struct:ns_display_info	access:public
ns_display_info::n_planes	nsterm.h	/^  int n_planes;$/;"	m	struct:ns_display_info	access:public
ns_display_info::resx	nsterm.h	/^  double resx, resy;$/;"	m	struct:ns_display_info	access:public
ns_display_info::resy	nsterm.h	/^  double resx, resy;$/;"	m	struct:ns_display_info	access:public
ns_display_info::root_window	nsterm.h	/^  Window root_window;$/;"	m	struct:ns_display_info	access:public
ns_display_info::smallest_char_width	nsterm.h	/^  int smallest_char_width;$/;"	m	struct:ns_display_info	access:public
ns_display_info::smallest_font_height	nsterm.h	/^  int smallest_font_height;$/;"	m	struct:ns_display_info	access:public
ns_display_info::terminal	nsterm.h	/^  struct terminal *terminal;$/;"	m	struct:ns_display_info	typeref:struct:ns_display_info::terminal	access:public
ns_display_info::vertical_scroll_bar_cursor	nsterm.h	/^  Cursor vertical_scroll_bar_cursor;$/;"	m	struct:ns_display_info	access:public
ns_display_info::xrdb	nsterm.h	/^  XrmDatabase xrdb;$/;"	m	struct:ns_display_info	access:public
ns_display_info::x_focus_frame	nsterm.h	/^  struct frame *x_focus_frame;$/;"	m	struct:ns_display_info	typeref:struct:ns_display_info::frame	access:public
ns_display_info::x_highlight_frame	nsterm.h	/^  struct frame *x_highlight_frame;$/;"	m	struct:ns_display_info	typeref:struct:ns_display_info::frame	access:public
NS_DUMPGLYPH_CURSOR	nsterm.h	1125;"	d
NS_DUMPGLYPH_FOREGROUND	nsterm.h	1126;"	d
NS_DUMPGLYPH_MOUSEFACE	nsterm.h	1127;"	d
NS_DUMPGLYPH_NORMAL	nsterm.h	1124;"	d
ns_etc_directory	nsterm.h	/^extern const char *ns_etc_directory (void);$/;"	p	signature:(void)
ns_exec_path	nsterm.h	/^extern const char *ns_exec_path (void);$/;"	p	signature:(void)
NS_FACE_BACKGROUND	nsterm.h	1029;"	d
NS_FACE_FOREGROUND	nsterm.h	1028;"	d
ns_finish_events	nsterm.h	/^extern void ns_finish_events (void);$/;"	p	signature:(void)
ns_get_defaults_value	nsterm.h	/^extern const char *ns_get_defaults_value (const char *key);$/;"	p	signature:(const char *key)
ns_get_local_selection	nsterm.h	/^extern Lisp_Object ns_get_local_selection (Lisp_Object selection_name,$/;"	p	signature:(Lisp_Object selection_name, Lisp_Object target_type)
ns_get_pending_menu_title	nsterm.h	/^extern const char *ns_get_pending_menu_title (void);$/;"	p	signature:(void)
ns_get_pixel	nsterm.h	/^extern unsigned long ns_get_pixel (void *img, int x, int y);$/;"	p	signature:(void *img, int x, int y)
ns_get_rgb_color	nsterm.h	/^extern unsigned long ns_get_rgb_color (struct frame *f,$/;"	p	signature:(struct frame *f, float r, float g, float b, float a)
ns_image_for_XPM	nsterm.h	/^extern void *ns_image_for_XPM (int width, int height, int depth);$/;"	p	signature:(int width, int height, int depth)
ns_image_from_file	nsterm.h	/^extern void *ns_image_from_file (Lisp_Object file);$/;"	p	signature:(Lisp_Object file)
ns_image_from_XBM	nsterm.h	/^extern void *ns_image_from_XBM (char *bits, int width, int height,$/;"	p	signature:(char *bits, int width, int height, unsigned long fg, unsigned long bg)
ns_image_height	nsterm.h	/^extern int ns_image_height (void *img);$/;"	p	signature:(void *img)
ns_image_width	nsterm.h	/^extern int ns_image_width (void *img);$/;"	p	signature:(void *img)
ns_index_color	nsterm.h	/^extern unsigned long ns_index_color (NSColor *color, struct frame *f);$/;"	p	signature:(NSColor *color, struct frame *f)
ns_init_events	nsterm.h	/^extern void ns_init_events (struct input_event *);$/;"	p	signature:(struct input_event *)
ns_init_locale	nsterm.h	/^extern void ns_init_locale (void);$/;"	p	signature:(void)
ns_lisp_to_color	nsterm.h	/^extern int ns_lisp_to_color (Lisp_Object color, NSColor **col);$/;"	p	signature:(Lisp_Object color, NSColor **col)
ns_list_fonts	nsterm.h	/^extern Lisp_Object ns_list_fonts (struct frame *f, Lisp_Object pattern,$/;"	p	signature:(struct frame *f, Lisp_Object pattern, int size, int maxnames)
ns_load_image	nsterm.h	/^extern bool ns_load_image (struct frame *f, struct image *img,$/;"	p	signature:(struct frame *f, struct image *img, Lisp_Object spec_file, Lisp_Object spec_data)
ns_load_path	nsterm.h	/^extern const char *ns_load_path (void);$/;"	p	signature:(void)
ns_lookup_indexed_color	nsterm.h	/^extern NSColor *ns_lookup_indexed_color (unsigned long idx, struct frame *f);$/;"	p	signature:(unsigned long idx, struct frame *f)
ns_map_event_to_object	nsterm.h	/^extern Lisp_Object ns_map_event_to_object (void);$/;"	p	signature:(void)
ns_menu_show	menu.h	/^extern Lisp_Object ns_menu_show (struct frame *, int, int, int,$/;"	p	signature:(struct frame *, int, int, int, Lisp_Object, const char **)
NS_NONKEY_EVENT	termhooks.h	/^  , NS_NONKEY_EVENT$/;"	e	enum:event_kind
NS_OBJ	Makefile	/^NS_OBJ=$/;"	m
NS_OBJC_OBJ	Makefile	/^NS_OBJC_OBJ=$/;"	m
ns_output	nsterm.h	/^struct ns_output$/;"	s
ns_output::background_color	nsterm.h	/^  NSColor *background_color;$/;"	m	struct:ns_output	access:public
ns_output::baseline_offset	nsterm.h	/^  int baseline_offset;$/;"	m	struct:ns_output	access:public
ns_output::bottom_edge_cursor	nsterm.h	/^  Cursor bottom_edge_cursor;$/;"	m	struct:ns_output	access:public
ns_output::bottom_left_corner_cursor	nsterm.h	/^  Cursor bottom_left_corner_cursor;$/;"	m	struct:ns_output	access:public
ns_output::bottom_right_corner_cursor	nsterm.h	/^  Cursor bottom_right_corner_cursor;$/;"	m	struct:ns_output	access:public
ns_output::current_pointer	nsterm.h	/^  Cursor current_pointer;$/;"	m	struct:ns_output	access:public
ns_output::cursor_color	nsterm.h	/^  NSColor *cursor_color;$/;"	m	struct:ns_output	access:public
ns_output::display_info	nsterm.h	/^  struct ns_display_info *display_info;$/;"	m	struct:ns_output	typeref:struct:ns_output::ns_display_info	access:public
ns_output::explicit_parent	nsterm.h	/^  char explicit_parent;$/;"	m	struct:ns_output	access:public
ns_output::font	nsterm.h	/^  struct font *font;$/;"	m	struct:ns_output	typeref:struct:ns_output::font	access:public
ns_output::fontset	nsterm.h	/^  int fontset; \/* only used with font_backend *\/$/;"	m	struct:ns_output	access:public
ns_output::foreground_color	nsterm.h	/^  NSColor *foreground_color;$/;"	m	struct:ns_output	access:public
ns_output::hand_cursor	nsterm.h	/^  Cursor hand_cursor;$/;"	m	struct:ns_output	access:public
ns_output::horizontal_drag_cursor	nsterm.h	/^  Cursor horizontal_drag_cursor;$/;"	m	struct:ns_output	access:public
ns_output::hourglass_cursor	nsterm.h	/^  Cursor hourglass_cursor;$/;"	m	struct:ns_output	access:public
ns_output::icon_left	nsterm.h	/^  int icon_left;$/;"	m	struct:ns_output	access:public
ns_output::icon_top	nsterm.h	/^  int icon_top;$/;"	m	struct:ns_output	access:public
ns_output::in_animation	nsterm.h	/^  int in_animation;$/;"	m	struct:ns_output	access:public
ns_output::left_edge_cursor	nsterm.h	/^  Cursor left_edge_cursor;$/;"	m	struct:ns_output	access:public
ns_output::miniimage	nsterm.h	/^  id miniimage;$/;"	m	struct:ns_output	access:public
ns_output::modeline_cursor	nsterm.h	/^  Cursor modeline_cursor;$/;"	m	struct:ns_output	access:public
ns_output::nontext_cursor	nsterm.h	/^  Cursor nontext_cursor;$/;"	m	struct:ns_output	access:public
ns_output::parent_desc	nsterm.h	/^  Window window_desc, parent_desc;$/;"	m	struct:ns_output	access:public
ns_output::right_edge_cursor	nsterm.h	/^  Cursor right_edge_cursor;$/;"	m	struct:ns_output	access:public
ns_output::text_cursor	nsterm.h	/^  Cursor text_cursor;$/;"	m	struct:ns_output	access:public
ns_output::titlebar_height	nsterm.h	/^  int titlebar_height;$/;"	m	struct:ns_output	access:public
ns_output::toolbar	nsterm.h	/^  EmacsToolbar *toolbar;$/;"	m	struct:ns_output	access:public
ns_output::toolbar_height	nsterm.h	/^  int toolbar_height;$/;"	m	struct:ns_output	access:public
ns_output::top_edge_cursor	nsterm.h	/^  Cursor top_edge_cursor;$/;"	m	struct:ns_output	access:public
ns_output::top_left_corner_cursor	nsterm.h	/^  Cursor top_left_corner_cursor;$/;"	m	struct:ns_output	access:public
ns_output::top_right_corner_cursor	nsterm.h	/^  Cursor top_right_corner_cursor;$/;"	m	struct:ns_output	access:public
ns_output::vertical_drag_cursor	nsterm.h	/^  Cursor vertical_drag_cursor;$/;"	m	struct:ns_output	access:public
ns_output::vertical_scroll_bar_extra	nsterm.h	/^  int vertical_scroll_bar_extra;$/;"	m	struct:ns_output	access:public
ns_output::view	nsterm.h	/^  EmacsView *view;$/;"	m	struct:ns_output	access:public
ns_output::window_desc	nsterm.h	/^  Window window_desc, parent_desc;$/;"	m	struct:ns_output	access:public
ns_output::zooming	nsterm.h	/^  int zooming;$/;"	m	struct:ns_output	access:public
NS_PARENT_WINDOW_LEFT_POS	nsterm.h	1096;"	d
NS_PARENT_WINDOW_TOP_POS	nsterm.h	1099;"	d
ns_pool	emacs.c	/^static void *ns_pool;$/;"	v	file:
ns_popup_dialog	nsterm.h	/^extern Lisp_Object ns_popup_dialog (struct frame *, Lisp_Object header,$/;"	p	signature:(struct frame *, Lisp_Object header, Lisp_Object contents)
ns_put_pixel	nsterm.h	/^extern void ns_put_pixel (void *img, int x, int y, unsigned long argb);$/;"	p	signature:(void *img, int x, int y, unsigned long argb)
ns_query_color	nsterm.h	/^ns_query_color (void *col, XColor *color_def, int setPixel);$/;"	p	signature:(void *col, XColor *color_def, int setPixel)
ns_release_autorelease_pool	nsterm.h	/^extern void ns_release_autorelease_pool (void *);$/;"	p	signature:(void *)
ns_release_object	nsterm.h	/^extern void  ns_release_object (void *obj);$/;"	p	signature:(void *obj)
ns_retain_object	nsterm.h	/^extern void  ns_retain_object (void *obj);$/;"	p	signature:(void *obj)
ns_run_ascript	nsterm.h	/^extern void ns_run_ascript (void);$/;"	p	signature:(void)
ns_run_file_dialog	nsterm.h	/^extern void ns_run_file_dialog (void);$/;"	p	signature:(void)
ns_run_loop_break	nsterm.h	/^extern void ns_run_loop_break (void);$/;"	p	signature:(void)
NS_SCROLL_BAR_ADJUST	nsterm.h	1082;"	d
NS_SCROLL_BAR_ADJUST_HORIZONTALLY	nsterm.h	1089;"	d
NS_SCROLL_BAR_HEIGHT	nsterm.h	1073;"	d
NS_SCROLL_BAR_HEIGHT_DEFAULT	nsterm.h	1267;"	d
NS_SCROLL_BAR_WIDTH	nsterm.h	1065;"	d
NS_SCROLL_BAR_WIDTH_DEFAULT	nsterm.h	1266;"	d
ns_select	nsterm.h	/^extern int ns_select (int nfds, fd_set *readfds, fd_set *writefds,$/;"	p	signature:(int nfds, fd_set *readfds, fd_set *writefds, fd_set *exceptfds, struct timespec *timeout, sigset_t *sigmask)
NS_SELECTION_BG_COLOR_DEFAULT	nsterm.h	1269;"	d
NS_SELECTION_FG_COLOR_DEFAULT	nsterm.h	1270;"	d
ns_set_alpha	nsterm.h	/^extern void ns_set_alpha (void *img, int x, int y, unsigned char a);$/;"	p	signature:(void *img, int x, int y, unsigned char a)
ns_set_doc_edited	nsterm.h	/^extern void ns_set_doc_edited (void);$/;"	p	signature:(void)
ns_set_represented_filename	nsterm.h	/^ns_set_represented_filename (NSString *fstr, struct frame *f);$/;"	p	signature:(NSString *fstr, struct frame *f)
ns_string_from_pasteboard	nsterm.h	/^extern Lisp_Object ns_string_from_pasteboard (id pb);$/;"	p	signature:(id pb)
ns_string_to_pasteboard	nsterm.h	/^extern void ns_string_to_pasteboard (id pb, Lisp_Object str);$/;"	p	signature:(id pb, Lisp_Object str)
ns_term_init	nsterm.h	/^extern struct ns_display_info *ns_term_init (Lisp_Object display_name);$/;"	p	signature:(Lisp_Object display_name)
ns_term_shutdown	nsterm.h	/^extern void ns_term_shutdown (int sig);$/;"	p	signature:(int sig)
NS_TEXT_EVENT	termhooks.h	/^  , NS_TEXT_EVENT$/;"	e	enum:event_kind
ns_xlfd_to_fontname	nsterm.h	/^extern const char *ns_xlfd_to_fontname (const char *xlfd);$/;"	p	signature:(const char *xlfd)
ntgui_encode_system	w32fns.c	/^ntgui_encode_system (Lisp_Object str)$/;"	f	signature:(Lisp_Object str)
ntgui_encode_system	w32term.h	/^extern Lisp_Object ntgui_encode_system (Lisp_Object str);$/;"	p	signature:(Lisp_Object str)
NTGUI_UNICODE	conf_post.h	156;"	d
NTHEAP_H_	w32heap.h	23;"	d
NTMFLAGS_OPENTYPE	w32font.h	36;"	d
NTM_PS_OPENTYPE	w32font.h	27;"	d
NTM_TT_OPENTYPE	w32font.h	30;"	d
NTM_TYPE1	w32font.h	33;"	d
ntohs	w32.c	226;"	d	file:
ntool_bar_items	keyboard.c	/^static int ntool_bar_items;$/;"	v	file:
NTSTATUS	w32heap.c	/^typedef LONG NTSTATUS;$/;"	t	file:
NULL_DEVICE	config.h	1441;"	d
NULL_GLYPH	disptab.h	96;"	d
null_glyph_slice	xdisp.c	/^static struct glyph_slice null_glyph_slice = { 0, 0, 0, 0 };$/;"	v	typeref:struct:glyph_slice	file:
NULL_LEFT_CHILD	intervals.h	71;"	d
NULL_PARENT	intervals.h	74;"	d
NULL_RIGHT_CHILD	intervals.h	68;"	d
num	font.c	/^  (Lisp_Object font_spec, Lisp_Object frame, Lisp_Object num, Lisp_Object prefer)$/;"	v
NUMBERP	lisp.h	/^NUMBERP (Lisp_Object x)$/;"	f	signature:(Lisp_Object x)
number_of_chars	xdisp.c	/^number_of_chars (const char *s, bool multibyte_p)$/;"	f	file:	signature:(const char *s, bool multibyte_p)
numeric	font.c	/^  int numeric;$/;"	m	struct:table_entry	file:	access:public
NUMVAL	frame.h	/^NUMVAL (Lisp_Object x)$/;"	f	signature:(Lisp_Object x)
NUM_ARGV	xterm.c	12278;"	d	file:
num_auto_fontsets	fontset.c	/^static ptrdiff_t num_auto_fontsets;$/;"	v	file:
num_clips	dispextern.h	/^  int num_clips;$/;"	m	struct:glyph_string	access:public
num_colors	w32term.h	/^  unsigned num_colors;$/;"	m	struct:w32_display_info	access:public
num_font_drivers	font.c	/^static int num_font_drivers;$/;"	v	file:
num_input_events	keyboard.c	/^uintmax_t num_input_events;$/;"	v
num_input_keys	globals.h	855;"	d
NUM_IT_METHODS	dispextern.h	/^  NUM_IT_METHODS$/;"	e	enum:it_method
NUM_MOD_NAMES	keyboard.c	6319;"	d	file:
num_nonmacro_input_events	globals.h	857;"	d
NUM_NONREG_ITEMS	regex.c	1369;"	d	file:
num_of_processors	w32.c	/^static unsigned num_of_processors;$/;"	v	file:
num_pending_connects	process.c	/^static int num_pending_connects;$/;"	v	file:
NUM_RECENT_KEYS	keyboard.c	98;"	d	file:
num_regs	regex.h	/^  unsigned num_regs;$/;"	m	struct:re_registers	access:public
NUM_TRANSLATED_MOUSE_BUTTONS	w32inevt.c	458;"	d	file:
num_unexec_regions	unexmacosx.c	/^static int num_unexec_regions;$/;"	v	file:
nx	dispextern.h	/^  int bx, nx, by, ny;$/;"	m	struct:draw_fringe_bitmap_params	access:public
nxatoms_of_nsselect	nsterm.h	/^extern void nxatoms_of_nsselect (void);$/;"	p	signature:(void)
ny	dispextern.h	/^  int bx, nx, by, ny;$/;"	m	struct:draw_fringe_bitmap_params	access:public
n_cache_blocks	w32font.h	/^  int n_cache_blocks;$/;"	m	struct:w32font_info	access:public
n_cbits	w32term.h	/^  int n_cbits;$/;"	m	struct:w32_display_info	access:public
n_clip_rects	xterm.h	/^  int n_clip_rects;$/;"	m	struct:x_gc_ext_data	access:public
n_compositions	composite.c	/^ptrdiff_t n_compositions;$/;"	v
N_ENV_VARS	w32.c	2706;"	d	file:
n_fonts	nsterm.h	/^  int n_fonts;$/;"	m	struct:ns_display_info	access:public
n_fonts	w32term.h	/^  int n_fonts;$/;"	m	struct:w32_display_info	access:public
n_fonts	xterm.h	/^  int n_fonts;$/;"	m	struct:x_display_info	access:public
n_last_items	gtkutil.c	/^  int n_last_items;$/;"	m	struct:xg_frame_tb_info	file:	access:public
n_overlay_strings	dispextern.h	/^  ptrdiff_t n_overlay_strings;$/;"	m	struct:it	access:public
n_planes	nsterm.h	/^  int n_planes;$/;"	m	struct:ns_display_info	access:public
n_planes	w32term.h	/^  int n_planes;$/;"	m	struct:w32_display_info	access:public
n_planes	xterm.h	/^  int n_planes;$/;"	m	struct:x_display_info	access:public
n_tool_bar_items	frame.h	/^  int n_tool_bar_items;$/;"	m	struct:frame	access:public
n_tool_bar_rows	frame.h	/^  int n_tool_bar_rows;$/;"	m	struct:frame	access:public
o	alloc.c	/^  max_align_t o;$/;"	m	union:__anon12	file:	access:public
OBARRAY_SIZE	lread.c	4291;"	d	file:
obj	intervals.h	/^    Lisp_Object obj;$/;"	m	union:interval::__anon142	access:public
obj	Makefile	/^obj = $(base_obj) $(NS_OBJC_OBJ)$/;"	m
object	alloc.c	/^  Lisp_Object object;$/;"	m	struct:pinned_object	file:	access:public
object	data.c	/^  (register Lisp_Object object, Lisp_Object noerror)$/;"	v
object	dispextern.h	/^	Lisp_Object object;$/;"	m	struct:it::iterator_stack_entry::__anon117::__anon118	access:public
object	dispextern.h	/^	Lisp_Object object;$/;"	m	struct:it::iterator_stack_entry::__anon117::__anon119	access:public
object	dispextern.h	/^	Lisp_Object object;$/;"	m	struct:it::iterator_stack_entry::__anon117::__anon120	access:public
object	dispextern.h	/^  Lisp_Object object;$/;"	m	struct:glyph	access:public
object	dispextern.h	/^  Lisp_Object object;$/;"	m	struct:it	access:public
object	fns.c	/^  (Lisp_Object algorithm, Lisp_Object object, Lisp_Object start, Lisp_Object end, Lisp_Object binary)$/;"	v
object	fns.c	/^  (Lisp_Object object, Lisp_Object start, Lisp_Object end, Lisp_Object coding_system, Lisp_Object noerror)$/;"	v
object	font.c	/^  (Lisp_Object object, Lisp_Object extra_type)$/;"	v
object	lisp.h	/^      Lisp_Object object;$/;"	m	union:Lisp_Save_Value::__anon26	access:public
object	lread.c	/^  (Lisp_Object object, Lisp_Object placeholder, Lisp_Object completed)$/;"	v
object	lread.c	/^  Lisp_Object object;$/;"	m	struct:subst	file:	access:public
object	print.c	/^  (Lisp_Object object, Lisp_Object noescape)$/;"	v
object	print.c	/^  (Lisp_Object object, Lisp_Object printcharfun)$/;"	v
object	syntax.h	/^  Lisp_Object object;			\/* The object we are scanning.  *\/$/;"	m	struct:gl_state_s	access:public
object	textprop.c	/^  (Lisp_Object position, Lisp_Object object, Lisp_Object limit)$/;"	v
object	textprop.c	/^  (Lisp_Object position, Lisp_Object prop, Lisp_Object object, Lisp_Object limit)$/;"	v
OBJECT_REPLACEMENT_CHARACTER	character.h	/^  OBJECT_REPLACEMENT_CHARACTER = 0xFFFC,$/;"	e	enum:__anon54
OBJFWDP	data.c	/^OBJFWDP (union Lisp_Fwd *a)$/;"	f	file:	signature:(union Lisp_Fwd *a)
objvar	lisp.h	/^    Lisp_Object *objvar;$/;"	m	struct:Lisp_Objfwd	access:public
oblookup	lisp.h	/^extern Lisp_Object oblookup (Lisp_Object, const char *, ptrdiff_t, ptrdiff_t);$/;"	p	signature:(Lisp_Object, const char *, ptrdiff_t, ptrdiff_t)
oblookup	lread.c	/^oblookup (Lisp_Object obarray, register const char *ptr, ptrdiff_t size, ptrdiff_t size_byte)$/;"	f	signature:(Lisp_Object obarray, register const char *ptr, ptrdiff_t size, ptrdiff_t size_byte)
oblookup_last_bucket_number	lread.c	/^static size_t oblookup_last_bucket_number;$/;"	v	file:
obtain	ralloc.c	/^obtain (void *address, size_t size)$/;"	f	file:	signature:(void *address, size_t size)
occupied	w32heap.c	/^  DWORD occupied;$/;"	m	struct:__anon139	file:	access:public
OEMCP	w32select.c	/^static UINT ANSICP, OEMCP;$/;"	v	file:
offscreen_damage_event	xwidget.c	/^offscreen_damage_event (GtkWidget *widget, GdkEvent *event,$/;"	f	file:	signature:(GtkWidget *widget, GdkEvent *event, gpointer xv_widget)
OFFSET	editfns.c	3112;"	d	file:
offset	lisp.h	/^    int offset;$/;"	m	struct:Lisp_Buffer_Objfwd	access:public
offset	lisp.h	/^    int offset;$/;"	m	struct:Lisp_Kboard_Objfwd	access:public
offset	syntax.h	/^  ptrdiff_t offset;$/;"	m	struct:gl_state_s	access:public
offset	widget.c	57;"	d	file:
offset	widget.c	91;"	d	file:
offsets	composite.h	/^  short *offsets;$/;"	m	struct:composition	access:public
offsets	indent.c	/^   Lisp_Object width, Lisp_Object offsets, Lisp_Object window)$/;"	v
offset_intervals	intervals.c	/^offset_intervals (struct buffer *buffer, ptrdiff_t start, ptrdiff_t length)$/;"	f	signature:(struct buffer *buffer, ptrdiff_t start, ptrdiff_t length)
offset_intervals	intervals.h	/^extern void offset_intervals (struct buffer *, ptrdiff_t, ptrdiff_t);$/;"	p	signature:(struct buffer *, ptrdiff_t, ptrdiff_t)
OFFSET_TO_PTR	unexw32.c	322;"	d	file:
OK_ALIGN_TO	xdisp.c	25077;"	d	file:
ok_if_already_exists	fileio.c	/^  (Lisp_Object file, Lisp_Object newname, Lisp_Object ok_if_already_exists,$/;"	v
OK_PIXELS	xdisp.c	25076;"	d	file:
ok_to_echo_at_next_pause	keyboard.c	/^static struct kboard *ok_to_echo_at_next_pause;$/;"	v	typeref:struct:kboard	file:
old	window.c	/^  (Lisp_Object old, Lisp_Object pixel_size, Lisp_Object side, Lisp_Object normal_size)$/;"	v
oldest_sblock	alloc.c	/^static struct sblock *oldest_sblock, *current_sblock;$/;"	v	typeref:struct:sblock	file:
oldstate	syntax.c	/^   Lisp_Object stopbefore, Lisp_Object oldstate, Lisp_Object commentstop)$/;"	v
oldXMenudir	Makefile	/^oldXMenudir = ..\/oldXMenu$/;"	m
old_fcntl_flags	sysdep.c	/^static int old_fcntl_flags[FD_SETSIZE];$/;"	v	file:
old_fcntl_owner	sysdep.c	/^static int old_fcntl_owner[FD_SETSIZE];$/;"	v	file:
old_form	coding.h	/^  bool old_form;	  \/* true if pre-21 form *\/$/;"	m	struct:composition_status	access:public
old_free_hook	gmalloc.c	/^static void (*old_free_hook) (void *ptr);$/;"	v	file:
old_lines	dispnew.c	/^static struct row_entry **old_lines, **new_lines;$/;"	v	typeref:struct:row_entry	file:
old_lines_size	dispnew.c	/^static ptrdiff_t old_lines_size, new_lines_size;$/;"	v	file:
old_malloc_hook	gmalloc.c	/^static void *(*old_malloc_hook) (size_t size);$/;"	v	file:
old_palette	w32term.h	/^  HPALETTE old_palette;$/;"	m	struct:w32_output	access:public
old_point	decompress.c	/^  ptrdiff_t old_point, start, nbytes;$/;"	m	struct:decompress_unwind_data	file:	access:public
old_pointm	window.c	/^  Lisp_Object window, buffer, start, pointm, old_pointm;$/;"	m	struct:saved_window	file:	access:public
old_pointm	window.h	/^    Lisp_Object old_pointm;$/;"	m	struct:window	access:public
old_pos	editfns.c	/^  (Lisp_Object new_pos, Lisp_Object old_pos, Lisp_Object escape_from_edge,$/;"	v
OLD_PROGRAM_H	unexelf.c	206;"	d	file:
old_prop	syntax.h	/^  Lisp_Object old_prop;			\/* Syntax-table prop at prev pos.  *\/$/;"	m	struct:gl_state_s	access:public
old_realloc_hook	gmalloc.c	/^static void *(*old_realloc_hook) (void *ptr, size_t size);$/;"	v	file:
OLD_SECTION_H	unexelf.c	202;"	d	file:
old_tty	termchar.h	/^  struct emacs_tty *old_tty;    \/* The initial tty mode bits *\/$/;"	m	struct:tty_display_info	typeref:struct:tty_display_info::emacs_tty	access:public
old_uses	dispnew.c	/^  int old_uses, new_uses;$/;"	m	struct:row_entry	file:	access:public
old_value	lisp.h	/^      Lisp_Object symbol, old_value, where;$/;"	m	struct:specbinding::__anon33	access:public
olp	keymap.c	/^  (Lisp_Object olp, Lisp_Object position)$/;"	v
on	font.h	/^  bool on;$/;"	m	struct:font_driver_list	access:public
on	w32fns.c	/^  (Lisp_Object on, Lisp_Object display)$/;"	v
on	xfns.c	/^  (Lisp_Object on, Lisp_Object terminal)$/;"	v
ONE_MORE_BYTE	coding.c	655;"	d	file:
one_w32_display_info	w32term.c	/^struct w32_display_info one_w32_display_info;$/;"	v	typeref:struct:w32_display_info
ONLY_INTERVAL_P	intervals.h	91;"	d
only_in_line	editfns.c	/^   Lisp_Object only_in_line, Lisp_Object inhibit_capture_property)$/;"	v
ONTRACE	w32select.c	135;"	d	file:
ONTRACE	w32select.c	137;"	d	file:
ON_BOTTOM_DIVIDER	dispextern.h	/^  ON_BOTTOM_DIVIDER$/;"	e	enum:window_part
on_failure_jump	regex.c	/^  on_failure_jump,$/;"	e	enum:__anon144	file:
on_failure_jump_loop	regex.c	/^  on_failure_jump_loop,$/;"	e	enum:__anon144	file:
on_failure_jump_nastyloop	regex.c	/^  on_failure_jump_nastyloop,$/;"	e	enum:__anon144	file:
on_failure_jump_smart	regex.c	/^  on_failure_jump_smart,$/;"	e	enum:__anon144	file:
on_failure_keep_string_jump	regex.c	/^  on_failure_keep_string_jump,$/;"	e	enum:__anon144	file:
ON_HEADER_LINE	dispextern.h	/^  ON_HEADER_LINE,$/;"	e	enum:window_part
ON_HORIZONTAL_SCROLL_BAR	dispextern.h	/^  ON_HORIZONTAL_SCROLL_BAR,$/;"	e	enum:window_part
on_hot_spot_p	xdisp.c	/^on_hot_spot_p (Lisp_Object hot_spot, int x, int y)$/;"	f	file:	signature:(Lisp_Object hot_spot, int x, int y)
ON_LEFT_FRINGE	dispextern.h	/^  ON_LEFT_FRINGE,$/;"	e	enum:window_part
ON_LEFT_MARGIN	dispextern.h	/^  ON_LEFT_MARGIN,$/;"	e	enum:window_part
ON_MODE_LINE	dispextern.h	/^  ON_MODE_LINE,$/;"	e	enum:window_part
ON_NOTHING	dispextern.h	/^  ON_NOTHING,$/;"	e	enum:window_part
ON_RIGHT_DIVIDER	dispextern.h	/^  ON_RIGHT_DIVIDER,$/;"	e	enum:window_part
ON_RIGHT_FRINGE	dispextern.h	/^  ON_RIGHT_FRINGE,$/;"	e	enum:window_part
ON_RIGHT_MARGIN	dispextern.h	/^  ON_RIGHT_MARGIN,$/;"	e	enum:window_part
ON_TEXT	dispextern.h	/^  ON_TEXT,$/;"	e	enum:window_part
ON_VERTICAL_BORDER	dispextern.h	/^  ON_VERTICAL_BORDER,$/;"	e	enum:window_part
ON_VERTICAL_SCROLL_BAR	dispextern.h	/^  ON_VERTICAL_SCROLL_BAR,$/;"	e	enum:window_part
op	xdisp.c	/^  (Lisp_Object symbol, Lisp_Object newval, Lisp_Object op, Lisp_Object where)$/;"	v
OPAQUE	xterm.c	909;"	d	file:
OPAQUE_FRAME	w32term.c	440;"	d	file:
open	font.h	/^  Lisp_Object (*open) (struct frame *f, Lisp_Object font_entity,$/;"	m	struct:font_driver	access:public
open	sound.c	/^  void (* open) (struct sound_device *sd);$/;"	m	struct:sound_device	file:	access:public
open	w32.c	57;"	d	file:
openp	lisp.h	/^extern int openp (Lisp_Object, Lisp_Object, Lisp_Object,$/;"	p	signature:(Lisp_Object, Lisp_Object, Lisp_Object, Lisp_Object *, Lisp_Object, bool)
openp	lread.c	/^openp (Lisp_Object path, Lisp_Object str, Lisp_Object suffixes,$/;"	f	signature:(Lisp_Object path, Lisp_Object str, Lisp_Object suffixes, Lisp_Object *storeptr, Lisp_Object predicate, bool newer)
OpenProcessToken_Proc	w32.c	/^typedef BOOL (WINAPI * OpenProcessToken_Proc) ($/;"	t	file:
OpenThreadToken_Proc	w32.c	/^typedef BOOL (WINAPI * OpenThreadToken_Proc) ($/;"	t	file:
OpenTypeSpec	ftfont.c	/^struct OpenTypeSpec$/;"	s	file:
OpenTypeSpec::features	ftfont.c	/^  unsigned int *features[2];$/;"	m	struct:OpenTypeSpec	file:	access:public
OpenTypeSpec::langsys_tag	ftfont.c	/^  unsigned int script_tag, langsys_tag;$/;"	m	struct:OpenTypeSpec	file:	access:public
OpenTypeSpec::nfeatures	ftfont.c	/^  int nfeatures[2];$/;"	m	struct:OpenTypeSpec	file:	access:public
OpenTypeSpec::script	ftfont.c	/^  Lisp_Object script;$/;"	m	struct:OpenTypeSpec	file:	access:public
OpenTypeSpec::script_tag	ftfont.c	/^  unsigned int script_tag, langsys_tag;$/;"	m	struct:OpenTypeSpec	file:	access:public
opentype_only	w32font.c	/^  bool opentype_only;$/;"	m	struct:font_callback_data	file:	access:public
open_bracket_idx	bidi.c	/^  int open_bracket_idx;$/;"	m	struct:bpa_stack_entry	file:	access:public
open_bracket_pos	bidi.c	/^  ptrdiff_t open_bracket_pos;$/;"	m	struct:bpa_stack_entry	file:	access:public
open_directory	dired.c	/^open_directory (Lisp_Object dirname, int *fdp)$/;"	f	file:	signature:(Lisp_Object dirname, int *fdp)
open_fd	process.h	/^    int open_fd[PROCESS_OPEN_FDS];$/;"	m	struct:Lisp_Process	access:public
open_input_file	unexw32.c	/^open_input_file (file_data *p_file, char *filename)$/;"	f	signature:(file_data *p_file, char *filename)
open_input_file	w32heap.h	/^int open_input_file (file_data *p_file, char *name);$/;"	p	signature:(file_data *p_file, char *name)
open_output_file	unexw32.c	/^open_output_file (file_data *p_file, char *filename, unsigned long size)$/;"	f	signature:(file_data *p_file, char *filename, unsigned long size)
open_output_file	w32heap.h	/^int open_output_file (file_data *p_file, char *name, unsigned long size);$/;"	p	signature:(file_data *p_file, char *name, unsigned long size)
open_paren_in_column_0_is_defun_start	globals.h	1019;"	d
open_process_token	w32.c	/^open_process_token (HANDLE ProcessHandle,$/;"	f	file:	signature:(HANDLE ProcessHandle, DWORD DesiredAccess, PHANDLE TokenHandle)
open_thread_token	w32.c	/^open_thread_token (HANDLE ThreadHandle,$/;"	f	file:	signature:(HANDLE ThreadHandle, DWORD DesiredAccess, BOOL OpenAsSelf, PHANDLE TokenHandle)
open_unc_volume	w32.c	/^open_unc_volume (const char *path)$/;"	f	file:	signature:(const char *path)
open_unc_volume	w32.c	/^static HANDLE open_unc_volume (const char *);$/;"	p	file:	signature:(const char *)
operation	w32fns.c	/^  (Lisp_Object operation, Lisp_Object document, Lisp_Object parameters, Lisp_Object show_flag)$/;"	v
OPIX_MISC	process.c	/^  enum { OPIX_NONE = 0, OPIX_MISC = 1, OPIX_REUSEADDR = 2 } optbit;$/;"	e	enum:socket_options::__anon50	file:
OPIX_NONE	process.c	/^  enum { OPIX_NONE = 0, OPIX_MISC = 1, OPIX_REUSEADDR = 2 } optbit;$/;"	e	enum:socket_options::__anon50	file:
OPIX_REUSEADDR	process.c	/^  enum { OPIX_NONE = 0, OPIX_MISC = 1, OPIX_REUSEADDR = 2 } optbit;$/;"	e	enum:socket_options::__anon50	file:
optbit	process.c	/^  enum { OPIX_NONE = 0, OPIX_MISC = 1, OPIX_REUSEADDR = 2 } optbit;$/;"	m	struct:socket_options	typeref:enum:socket_options::__anon50	file:	access:public
optimize_sub_char_table	chartab.c	/^optimize_sub_char_table (Lisp_Object table, Lisp_Object test)$/;"	f	file:	signature:(Lisp_Object table, Lisp_Object test)
option	process.c	/^  (Lisp_Object process, Lisp_Object option, Lisp_Object value, Lisp_Object no_error)$/;"	v
OPTIONAL_HDC	xdisp.c	25300;"	d	file:
OPTIONAL_HDC	xdisp.c	25307;"	d	file:
optional_new_start	window.h	/^    bool_bf optional_new_start : 1;$/;"	m	struct:window	access:public
optlevel	process.c	/^  int optlevel;$/;"	m	struct:socket_options	file:	access:public
optnum	process.c	/^  int optnum;$/;"	m	struct:socket_options	file:	access:public
opttype	process.c	/^  enum { SOPT_UNKNOWN, SOPT_BOOL, SOPT_INT, SOPT_IFNAME, SOPT_LINGER } opttype;$/;"	m	struct:socket_options	typeref:enum:socket_options::__anon49	file:	access:public
origin	nsgui.h	/^typedef struct _NSRect  { NSPoint origin; NSSize size; } NSRect;$/;"	m	struct:_NSRect	access:public
orig_data_scnptr	unexaix.c	/^static off_t orig_data_scnptr;$/;"	v	file:
orig_font_spec	w32font.c	/^  Lisp_Object orig_font_spec;$/;"	m	struct:font_callback_data	file:	access:public
orig_load_scnptr	unexaix.c	/^static off_t orig_load_scnptr;$/;"	v	file:
orig_type	dispextern.h	/^  bidi_type_t orig_type;	\/* bidi type as we found it in the buffer *\/$/;"	m	struct:bidi_saved_info	access:public
orig_type	dispextern.h	/^  bidi_type_t orig_type;	\/* original bidi type, as found in the buffer *\/$/;"	m	struct:bidi_it	access:public
orig_val	ccl.c	/^  int orig_val;$/;"	m	struct:__anon81	file:	access:public
osinfo_cache	w32fns.c	/^OSVERSIONINFO osinfo_cache;$/;"	v
OS_9X	w32common.h	/^  OS_9X = 1,$/;"	e	enum:__anon148
OS_NT	w32common.h	/^  OS_NT$/;"	e	enum:__anon148
os_subtype	w32fns.c	/^int os_subtype;$/;"	v
otf	ftcrfont.c	/^  OTF *otf;$/;"	m	struct:ftcrfont_info	file:	access:public
otf	ftfont.c	/^  OTF *otf;$/;"	m	struct:ftfont_info	file:	access:public
otf	ftfont.c	/^  OTF *otf;$/;"	m	struct:MFLTFontFT	file:	access:public
otf	xftfont.c	/^  OTF *otf;$/;"	m	struct:xftfont_info	file:	access:public
otf_capability	font.h	/^  Lisp_Object (*otf_capability) (struct font *font);$/;"	m	struct:font_driver	access:public
otf_drive	font.h	/^  int (*otf_drive) (struct font *font, Lisp_Object features,$/;"	m	struct:font_driver	access:public
OTF_DWORDTAG_VAL	w32uniscribe.c	688;"	d	file:
otf_features	w32uniscribe.c	/^otf_features (HDC context, const char *table)$/;"	f	file:	signature:(HDC context, const char *table)
otf_features	w32uniscribe.c	/^static Lisp_Object otf_features (HDC context, const char *table);$/;"	p	file:	signature:(HDC context, const char *table)
otf_gstring	ftfont.c	/^static OTF_GlyphString otf_gstring;$/;"	v	file:
OTF_INT16_VAL	w32uniscribe.c	1138;"	d	file:
OTF_INT16_VAL	w32uniscribe.c	677;"	d	file:
OTF_SYM_TAG	ftfont.c	537;"	d	file:
OTF_TAG	w32uniscribe.c	1140;"	d	file:
OTF_TAG	w32uniscribe.c	674;"	d	file:
OTF_TAG_STR	ftfont.c	543;"	d	file:
OTF_TAG_SYM	ftfont.c	553;"	d	file:
OTF_TAG_VAL	w32uniscribe.c	1139;"	d	file:
OTF_TAG_VAL	w32uniscribe.c	694;"	d	file:
otherobj	Makefile	/^otherobj= $(TERMCAP_OBJ) $(PRE_ALLOC_OBJ) $(GMALLOC_OBJ) $(RALLOC_OBJ) \\$/;"	m
other_buffer_safely	buffer.c	/^other_buffer_safely (Lisp_Object buffer)$/;"	f	signature:(Lisp_Object buffer)
other_buffer_safely	lisp.h	/^extern Lisp_Object other_buffer_safely (Lisp_Object);$/;"	p	signature:(Lisp_Object)
OTHER_FILES	Makefile	/^OTHER_FILES = $/;"	m
other_frames	frame.c	/^other_frames (struct frame *f, bool invisible, bool force)$/;"	f	file:	signature:(struct frame *f, bool invisible, bool force)
our_common_init_source	image.c	/^our_common_init_source (j_decompress_ptr cinfo)$/;"	f	file:	signature:(j_decompress_ptr cinfo)
our_common_term_source	image.c	/^our_common_term_source (j_decompress_ptr cinfo)$/;"	f	file:	signature:(j_decompress_ptr cinfo)
our_memory_buffer	image.c	/^static JOCTET our_memory_buffer[2];$/;"	v	file:
our_memory_fill_input_buffer	image.c	/^our_memory_fill_input_buffer (j_decompress_ptr cinfo)$/;"	f	file:	signature:(j_decompress_ptr cinfo)
our_memory_skip_input_data	image.c	/^our_memory_skip_input_data (j_decompress_ptr cinfo, long int num_bytes)$/;"	f	file:	signature:(j_decompress_ptr cinfo, long int num_bytes)
our_stdio_fill_input_buffer	image.c	/^our_stdio_fill_input_buffer (j_decompress_ptr cinfo)$/;"	f	file:	signature:(j_decompress_ptr cinfo)
our_stdio_skip_input_data	image.c	/^our_stdio_skip_input_data (j_decompress_ptr cinfo, long int num_bytes)$/;"	f	file:	signature:(j_decompress_ptr cinfo, long int num_bytes)
outfd	process.h	/^    int outfd;$/;"	m	struct:Lisp_Process	access:public
outfd	unexmacosx.c	/^static int infd, outfd;$/;"	v	file:
OUTPUT	term.c	79;"	d	file:
output	termchar.h	/^  FILE *output;                 \/* The stream to be used for terminal output.$/;"	m	struct:tty_display_info	access:public
OUTPUT1	term.c	84;"	d	file:
OUTPUT1_IF	term.c	93;"	d	file:
OUTPUTL	term.c	85;"	d	file:
output_cursor	window.h	/^    struct cursor_pos output_cursor;$/;"	m	struct:window	typeref:struct:window::cursor_pos	access:public
output_cursor_to	window.h	/^output_cursor_to (struct window *w, int vpos, int hpos, int y, int x)$/;"	f	signature:(struct window *w, int vpos, int hpos, int y, int x)
output_data	frame.h	/^  output_data;$/;"	m	struct:frame	typeref:union:frame::output_data	access:public
output_data	frame.h	/^  union output_data$/;"	u	struct:frame	access:public
OUTPUT_IF	term.c	87;"	d	file:
output_initial	termhooks.h	/^  output_initial,$/;"	e	enum:output_method
output_method	frame.h	/^  ENUM_BF (output_method) output_method : 3;$/;"	m	struct:frame	access:public
output_method	termhooks.h	/^enum output_method$/;"	g
output_msdos_raw	termhooks.h	/^  output_msdos_raw,$/;"	e	enum:output_method
output_ns	termhooks.h	/^  output_ns$/;"	e	enum:output_method
output_termcap	termhooks.h	/^  output_termcap,$/;"	e	enum:output_method
output_w32	termhooks.h	/^  output_w32,$/;"	e	enum:output_method
output_x_window	termhooks.h	/^  output_x_window,$/;"	e	enum:output_method
overlapped_p	dispextern.h	/^  bool_bf overlapped_p : 1;$/;"	m	struct:glyph_row	access:public
overlapping_p	dispextern.h	/^  bool_bf overlapping_p : 1;$/;"	m	struct:glyph_row	access:public
OVERLAPS_BOTH	dispextern.h	1325;"	d
OVERLAPS_ERASED_CURSOR	dispextern.h	1326;"	d
OVERLAPS_PRED	dispextern.h	1323;"	d
OVERLAPS_SUCC	dispextern.h	1324;"	d
overlaps_vertically_p	dispextern.h	/^  bool_bf overlaps_vertically_p : 1;$/;"	m	struct:glyph	access:public
overlay	buffer.c	/^  (Lisp_Object overlay, Lisp_Object beg, Lisp_Object end, Lisp_Object buffer)$/;"	v
overlay	buffer.c	/^  (Lisp_Object overlay, Lisp_Object prop)$/;"	v
overlay	buffer.c	/^  (Lisp_Object overlay, Lisp_Object prop, Lisp_Object value)$/;"	v
overlay	buffer.c	/^  Lisp_Object overlay;$/;"	m	struct:sortvec	file:	access:public
overlay	xdisp.c	/^  Lisp_Object overlay;$/;"	m	struct:overlay_entry	file:	access:public
OVERLAYP	lisp.h	/^OVERLAYP (Lisp_Object x)$/;"	f	signature:(Lisp_Object x)
overlays_after	buffer.h	/^  struct Lisp_Overlay *overlays_after;$/;"	m	struct:buffer	typeref:struct:buffer::Lisp_Overlay	access:public
overlays_around	editfns.c	/^overlays_around (EMACS_INT pos, Lisp_Object *vec, ptrdiff_t len)$/;"	f	file:	signature:(EMACS_INT pos, Lisp_Object *vec, ptrdiff_t len)
overlays_at	buffer.c	/^overlays_at (EMACS_INT pos, bool extend, Lisp_Object **vec_ptr,$/;"	f	signature:(EMACS_INT pos, bool extend, Lisp_Object **vec_ptr, ptrdiff_t *len_ptr, ptrdiff_t *next_ptr, ptrdiff_t *prev_ptr, bool change_req)
overlays_at	buffer.h	/^extern ptrdiff_t overlays_at (EMACS_INT, bool, Lisp_Object **,$/;"	p	signature:(EMACS_INT, bool, Lisp_Object **, ptrdiff_t *, ptrdiff_t *, ptrdiff_t *, bool)
overlays_before	buffer.h	/^  struct Lisp_Overlay *overlays_before;$/;"	m	struct:buffer	typeref:struct:buffer::Lisp_Overlay	access:public
overlays_in	buffer.c	/^overlays_in (EMACS_INT beg, EMACS_INT end, bool extend,$/;"	f	file:	signature:(EMACS_INT beg, EMACS_INT end, bool extend, Lisp_Object **vec_ptr, ptrdiff_t *len_ptr, ptrdiff_t *next_ptr, ptrdiff_t *prev_ptr)
overlay_arrows_changed_p	xdisp.c	/^overlay_arrows_changed_p (bool set_redisplay)$/;"	f	file:	signature:(bool set_redisplay)
overlay_arrow_at_row	xdisp.c	/^overlay_arrow_at_row (struct it *it, struct glyph_row *row)$/;"	f	file:	signature:(struct it *it, struct glyph_row *row)
overlay_arrow_bitmap	dispextern.h	/^  int overlay_arrow_bitmap;$/;"	m	struct:glyph_row	access:public
overlay_arrow_in_current_buffer_p	xdisp.c	/^overlay_arrow_in_current_buffer_p (void)$/;"	f	file:	signature:(void)
overlay_arrow_seen	xdisp.c	/^static bool overlay_arrow_seen;$/;"	v	file:
overlay_arrow_string_or_property	xdisp.c	/^overlay_arrow_string_or_property (Lisp_Object var)$/;"	f	file:	signature:(Lisp_Object var)
overlay_center	buffer.h	/^  ptrdiff_t overlay_center;$/;"	m	struct:buffer	access:public
OVERLAY_COUNT_MAX	buffer.c	96;"	d	file:
OVERLAY_END	buffer.h	1251;"	d
overlay_entry	xdisp.c	/^struct overlay_entry$/;"	s	file:
overlay_entry::after_string_p	xdisp.c	/^  bool after_string_p;$/;"	m	struct:overlay_entry	file:	access:public
overlay_entry::overlay	xdisp.c	/^  Lisp_Object overlay;$/;"	m	struct:overlay_entry	file:	access:public
overlay_entry::priority	xdisp.c	/^  EMACS_INT priority;$/;"	m	struct:overlay_entry	file:	access:public
overlay_entry::string	xdisp.c	/^  Lisp_Object string;$/;"	m	struct:overlay_entry	file:	access:public
overlay_heads	buffer.c	/^static struct sortstrlist overlay_heads, overlay_tails;$/;"	v	typeref:struct:sortstrlist	file:
overlay_modiff	buffer.h	/^    EMACS_INT overlay_modiff;	\/* Counts modifications to overlays.  *\/$/;"	m	struct:buffer_text	access:public
OVERLAY_MODIFF	buffer.h	95;"	d
overlay_p	dispextern.h	/^  bool_bf overlay_p : 1;$/;"	m	struct:draw_fringe_bitmap_params	access:public
OVERLAY_PLIST	buffer.h	1255;"	d
OVERLAY_POSITION	buffer.h	1260;"	d
OVERLAY_PROP_IDX	dispextern.h	/^  OVERLAY_PROP_IDX,$/;"	e	enum:prop_idx
OVERLAY_START	buffer.h	1247;"	d
overlay_strings	buffer.c	/^overlay_strings (ptrdiff_t pos, struct window *w, unsigned char **pstr)$/;"	f	signature:(ptrdiff_t pos, struct window *w, unsigned char **pstr)
overlay_strings	buffer.h	/^extern ptrdiff_t overlay_strings (ptrdiff_t, struct window *, unsigned char **);$/;"	p	signature:(ptrdiff_t, struct window *, unsigned char **)
overlay_strings	dispextern.h	/^  Lisp_Object overlay_strings[OVERLAY_STRING_CHUNK_SIZE];$/;"	m	struct:it	access:public
overlay_strings_at_end_processed_p	dispextern.h	/^  bool_bf overlay_strings_at_end_processed_p : 1;$/;"	m	struct:it	access:public
overlay_strings_charpos	dispextern.h	/^  ptrdiff_t overlay_strings_charpos;$/;"	m	struct:it	access:public
OVERLAY_STRING_CHUNK_SIZE	dispextern.h	2332;"	d
overlay_string_index	dispextern.h	/^  ptrdiff_t overlay_string_index;$/;"	m	struct:display_pos	access:public
overlay_str_buf	buffer.c	/^static unsigned char *overlay_str_buf;$/;"	v	file:
overlay_str_len	buffer.c	/^static ptrdiff_t overlay_str_len;$/;"	v	file:
overlay_tails	buffer.c	/^static struct sortstrlist overlay_heads, overlay_tails;$/;"	v	typeref:struct:	file:
overlay_touches_p	buffer.c	/^overlay_touches_p (ptrdiff_t pos)$/;"	f	signature:(ptrdiff_t pos)
overlay_touches_p	lisp.h	/^extern bool overlay_touches_p (ptrdiff_t);$/;"	p	signature:(ptrdiff_t)
overlay_unchanged_modified	buffer.h	/^    EMACS_INT overlay_unchanged_modified;$/;"	m	struct:buffer_text	access:public
OVERLAY_UNCHANGED_MODIFIED	buffer.h	208;"	d
overline_color	dispextern.h	/^  unsigned long overline_color;$/;"	m	struct:face	access:public
overline_color_defaulted_p	dispextern.h	/^  bool_bf overline_color_defaulted_p : 1;$/;"	m	struct:face	access:public
overline_margin	globals.h	859;"	d
overline_p	dispextern.h	/^  bool_bf overline_p : 1;$/;"	m	struct:face	access:public
OVERRIDE	bidi.c	436;"	d	file:
override_ascent	dispextern.h	/^  int override_ascent, override_descent, override_boff;$/;"	m	struct:it	access:public
override_boff	dispextern.h	/^  int override_ascent, override_descent, override_boff;$/;"	m	struct:it	access:public
override_descent	dispextern.h	/^  int override_ascent, override_descent, override_boff;$/;"	m	struct:it	access:public
override_redirect	frame.h	/^  bool_bf override_redirect : 1;$/;"	m	struct:frame	access:public
overrun_check_free	alloc.c	/^overrun_check_free (void *block)$/;"	f	file:	signature:(void *block)
overrun_check_malloc	alloc.c	/^overrun_check_malloc (size_t size)$/;"	f	file:	signature:(size_t size)
overrun_check_realloc	alloc.c	/^overrun_check_realloc (void *block, size_t size)$/;"	f	file:	signature:(void *block, size_t size)
overstrike	dispextern.h	/^  bool_bf overstrike : 1;$/;"	m	struct:face	access:public
overwrite_mode_	buffer.h	/^  Lisp_Object overwrite_mode_;$/;"	m	struct:buffer	access:public
ovl_read	w32.h	/^  OVERLAPPED          ovl_read;$/;"	m	struct:_child_process	access:public
ovl_write	w32.h	/^  OVERLAPPED          ovl_write;$/;"	m	struct:_child_process	access:public
owner	thread.h	/^  struct thread_state *owner;$/;"	m	struct:__anon103	typeref:struct:__anon103::thread_state	access:public
owner_callback	w32select.c	/^owner_callback (HWND win, UINT msg, WPARAM wp, LPARAM lp)$/;"	f	file:	signature:(HWND win, UINT msg, WPARAM wp, LPARAM lp)
owner_callback	w32select.c	/^static LRESULT CALLBACK ALIGN_STACK owner_callback (HWND win, UINT msg,$/;"	p	file:	signature:(HWND win, UINT msg, WPARAM wp, LPARAM lp)
OwningThread	systhread.h	/^  void *OwningThread;$/;"	m	struct:__anon43	access:public
own_text	buffer.h	/^  struct buffer_text own_text;$/;"	m	struct:buffer	typeref:struct:buffer::buffer_text	access:public
p	composite.c	/^  unsigned char *p;$/;"	m	struct:position_record	file:	access:public
p	lisp.h	/^  double d; intmax_t i; void *p;$/;"	m	union:Aligned_Cons	access:public
p	lisp.h	/^  double d; intmax_t i; void *p;$/;"	m	union:Aligned_String	access:public
p	lisp.h	/^  void *p;$/;"	m	struct:Lisp_User_Ptr	access:public
PACKAGE_BUGREPORT	config.h	1447;"	d
PACKAGE_NAME	config.h	1450;"	d
PACKAGE_STRING	config.h	1453;"	d
PACKAGE_TARNAME	config.h	1456;"	d
PACKAGE_URL	config.h	1459;"	d
PACKAGE_VERSION	config.h	1462;"	d
PACK_OTF_TAG	ftfont.c	1717;"	d	file:
pad	dispextern.h	/^  char pad;$/;"	m	struct:__anon104	access:public
PAD	xsettings.c	338;"	d	file:
padding	alloc.c	/^  char padding[BLOCK_PADDING];$/;"	m	struct:ablock	file:	access:public
padding_p	dispextern.h	/^  bool_bf padding_p : 1;$/;"	m	struct:glyph	access:public
padding_p	dispextern.h	/^  bool_bf padding_p : 1;$/;"	m	struct:glyph_string	access:public
PAGE	ralloc.c	71;"	d	file:
PageFaultCount	w32.c	/^  DWORD  PageFaultCount;$/;"	m	struct:_PROCESS_MEMORY_COUNTERS_EX	file:	access:public
PagefileUsage	w32.c	/^  SIZE_T PagefileUsage;$/;"	m	struct:_PROCESS_MEMORY_COUNTERS_EX	file:	access:public
pagemask	unexaix.c	/^static int pagemask;$/;"	v	file:
pagesize	gmalloc.c	/^static size_t pagesize;$/;"	v	file:
pagesize	unexmacosx.c	/^static unsigned long pagesize;$/;"	v	file:
PAGE_ROUNDUP	ralloc.c	72;"	d	file:
page_setup	gtkutil.c	/^static GtkPageSetup *page_setup = NULL;$/;"	v	file:
page_size	ralloc.c	/^static int page_size;$/;"	v	file:
PAGE_SIZE	w32heap.c	160;"	d	file:
palette	w32term.h	/^  HPALETTE palette;$/;"	m	struct:w32_display_info	access:public
pane	term.c	/^  int pane;$/;"	m	struct:tty_menu_state	file:	access:public
panecount	term.c	/^  int panecount;$/;"	m	struct:tty_menu_struct	file:	access:public
panenumber	term.c	/^  int *panenumber; \/* Also used as enabled flag.  *\/$/;"	m	struct:tty_menu_struct	file:	access:public
paragraph_dir	dispextern.h	/^  bidi_dir_t paragraph_dir;	\/* current paragraph direction *\/$/;"	m	struct:bidi_it	access:public
paragraph_embedding	dispextern.h	/^    bidi_dir_t paragraph_embedding;$/;"	m	struct:it::iterator_stack_entry	access:public
paragraph_embedding	dispextern.h	/^  bidi_dir_t paragraph_embedding;$/;"	m	struct:it	access:public
paragraph_separate_re	bidi.c	/^static Lisp_Object paragraph_start_re, paragraph_separate_re;$/;"	v	file:
PARAGRAPH_SEPARATOR	character.h	/^  PARAGRAPH_SEPARATOR = 0x2029,$/;"	e	enum:__anon54
paragraph_start_re	bidi.c	/^static Lisp_Object paragraph_start_re, paragraph_separate_re;$/;"	v	file:
parameter	terminal.c	/^  (Lisp_Object terminal, Lisp_Object parameter, Lisp_Object value)$/;"	v
parameter	window.c	/^  (Lisp_Object window, Lisp_Object parameter, Lisp_Object value)$/;"	v
parameters	w32fns.c	/^  (Lisp_Object operation, Lisp_Object document, Lisp_Object parameters, Lisp_Object show_flag)$/;"	v
param_alist	frame.h	/^  Lisp_Object param_alist;$/;"	m	struct:frame	access:public
param_alist	termhooks.h	/^  Lisp_Object param_alist;$/;"	m	struct:terminal	access:public
parent	alloc.c	/^  struct mem_node *parent;$/;"	m	struct:mem_node	typeref:struct:mem_node::mem_node	file:	access:public
parent	keyboard.c	/^  Lisp_Object parent;$/;"	m	struct:keyremap	file:	access:public
parent	lisp.h	/^    Lisp_Object parent;$/;"	m	struct:Lisp_Char_Table	access:public
parent	window.c	/^  Lisp_Object parent, prev;$/;"	m	struct:saved_window	file:	access:public
parent	window.h	/^    Lisp_Object parent;$/;"	m	struct:window	access:public
parent_class	emacsgtkfixed.h	/^  GtkFixedClass parent_class;$/;"	m	struct:_EmacsFixedClass	access:public
parent_desc	nsterm.h	/^  Window window_desc, parent_desc;$/;"	m	struct:ns_output	access:public
parent_desc	w32term.h	/^  Window parent_desc;$/;"	m	struct:w32_output	access:public
parent_desc	xterm.h	/^  Window parent_desc;$/;"	m	struct:x_output	access:public
parent_frame	frame.h	/^  Lisp_Object parent_frame;$/;"	m	struct:frame	access:public
parmcap	cm.h	/^struct parmcap$/;"	s
parmcap::maxcost	cm.h	/^    int mincost, maxcost;$/;"	m	struct:parmcap	access:public
parmcap::mincost	cm.h	/^    int mincost, maxcost;$/;"	m	struct:parmcap	access:public
parms	w32fns.c	/^  (Lisp_Object string, Lisp_Object frame, Lisp_Object parms, Lisp_Object timeout, Lisp_Object dx, Lisp_Object dy)$/;"	v
parms	xfns.c	/^  (Lisp_Object string, Lisp_Object frame, Lisp_Object parms, Lisp_Object timeout, Lisp_Object dx, Lisp_Object dy)$/;"	v
parse_button	w32term.c	/^parse_button (int message, int xbutton, int * pbutton, int * pup)$/;"	f	signature:(int message, int xbutton, int * pbutton, int * pup)
parse_button	w32term.h	/^extern BOOL parse_button (int, int, int *, int *);$/;"	p	signature:(int, int, int *, int *)
parse_image_spec	image.c	/^parse_image_spec (Lisp_Object spec, struct image_keyword *keywords,$/;"	f	file:	signature:(Lisp_Object spec, struct image_keyword *keywords, int nkeywords, Lisp_Object type)
parse_matrix	font.c	/^parse_matrix (const char *p)$/;"	f	file:	signature:(const char *p)
parse_matrix	font.c	/^static int parse_matrix (const char *);$/;"	p	file:	signature:(const char *)
parse_menu_item	keyboard.c	/^parse_menu_item (Lisp_Object item, int inmenubar)$/;"	f	signature:(Lisp_Object item, int inmenubar)
parse_menu_item	keyboard.h	/^extern bool parse_menu_item (Lisp_Object, int);$/;"	p	signature:(Lisp_Object, int)
parse_modifiers	keyboard.c	/^parse_modifiers (Lisp_Object symbol)$/;"	f	signature:(Lisp_Object symbol)
parse_modifiers	keyboard.h	/^extern Lisp_Object parse_modifiers (Lisp_Object);$/;"	p	signature:(Lisp_Object)
parse_modifiers_uncached	keyboard.c	/^parse_modifiers_uncached (Lisp_Object symbol, ptrdiff_t *modifier_end)$/;"	f	file:	signature:(Lisp_Object symbol, ptrdiff_t *modifier_end)
parse_region	xml.c	/^parse_region (Lisp_Object start, Lisp_Object end, Lisp_Object base_url,$/;"	f	file:	signature:(Lisp_Object start, Lisp_Object end, Lisp_Object base_url, Lisp_Object discard_comments, bool htmlp)
parse_rgb_list	xfaces.c	/^parse_rgb_list (Lisp_Object rgb_list, XColor *color)$/;"	f	file:	signature:(Lisp_Object rgb_list, XColor *color)
PARSE_RGB_LIST_FIELD	xfaces.c	815;"	d	file:
parse_root	w32.c	/^parse_root (const char * name, const char ** pPath)$/;"	f	file:	signature:(const char * name, const char ** pPath)
parse_settings	xsettings.c	/^parse_settings (unsigned char *prop,$/;"	f	file:	signature:(unsigned char *prop, unsigned long bytes, struct xsettings *settings)
parse_sexp_ignore_comments	globals.h	1021;"	d
parse_sexp_lookup_properties	globals.h	1023;"	d
parse_sexp_propertize	syntax.c	/^parse_sexp_propertize (ptrdiff_t charpos)$/;"	f	file:	signature:(ptrdiff_t charpos)
parse_sexp_propertize	syntax.c	/^static void parse_sexp_propertize (ptrdiff_t charpos);$/;"	p	file:	signature:(ptrdiff_t charpos)
parse_single_submenu	menu.c	/^parse_single_submenu (Lisp_Object item_key, Lisp_Object item_name,$/;"	f	signature:(Lisp_Object item_key, Lisp_Object item_name, Lisp_Object maps)
parse_single_submenu	menu.h	/^extern bool parse_single_submenu (Lisp_Object, Lisp_Object, Lisp_Object);$/;"	p	signature:(Lisp_Object, Lisp_Object, Lisp_Object)
parse_solitary_modifier	keyboard.c	/^parse_solitary_modifier (Lisp_Object symbol)$/;"	f	signature:(Lisp_Object symbol)
parse_solitary_modifier	keyboard.h	/^extern int parse_solitary_modifier (Lisp_Object symbol);$/;"	p	signature:(Lisp_Object symbol)
parse_sound	sound.c	/^parse_sound (Lisp_Object sound, Lisp_Object *attrs)$/;"	f	file:	signature:(Lisp_Object sound, Lisp_Object *attrs)
parse_str_as_multibyte	lisp.h	/^extern void parse_str_as_multibyte (const unsigned char *, ptrdiff_t,$/;"	p	signature:(const unsigned char *, ptrdiff_t, ptrdiff_t *, ptrdiff_t *)
parse_tool_bar_item	keyboard.c	/^parse_tool_bar_item (Lisp_Object key, Lisp_Object item)$/;"	f	file:	signature:(Lisp_Object key, Lisp_Object item)
parse_tool_bar_item	keyboard.c	/^static bool parse_tool_bar_item (Lisp_Object, Lisp_Object);$/;"	p	file:
part	termhooks.h	/^  ENUM_BF (scroll_bar_part) part : 16;$/;"	m	struct:input_event	access:public
part	window.c	/^  enum window_part *part;$/;"	m	struct:check_window_data	typeref:enum:check_window_data::window_part	file:	access:public
partial_line_height	dispextern.h	/^int partial_line_height (struct it *it_origin);$/;"	p	signature:(struct it *it_origin)
partial_line_height	xdisp.c	/^partial_line_height (struct it *it_origin)$/;"	f	signature:(struct it *it_origin)
PAspect	nsgui.h	193;"	d
PAspect	w32gui.h	111;"	d
PASSWD_FIELD_SIZE	w32.c	1910;"	d	file:
PATFETCH	regex.c	1583;"	d	file:
path	lread.c	/^  (Lisp_Object filename, Lisp_Object path, Lisp_Object suffixes, Lisp_Object predicate)$/;"	v
PathBuffer	w32.c	/^            WCHAR PathBuffer[1];$/;"	m	struct:_REPARSE_DATA_BUFFER::__anon66::__anon67	file:	access:public
PathBuffer	w32.c	/^            WCHAR PathBuffer[1];$/;"	m	struct:_REPARSE_DATA_BUFFER::__anon66::__anon68	file:	access:public
PATH_BITMAPS	epaths.h	62;"	d
PATH_DATA	epaths.h	58;"	d
PATH_DOC	epaths.h	66;"	d
PATH_DUMPLOADSEARCH	epaths.h	46;"	d
PATH_EXEC	epaths.h	53;"	d
PATH_GAME	epaths.h	74;"	d
PATH_INFO	epaths.h	71;"	d
PATH_LOADSEARCH	epaths.h	28;"	d
PATH_SITELOADSEARCH	epaths.h	39;"	d
PATH_X_DEFAULTS	epaths.h	77;"	d
pattern	fontset.c	/^  (Lisp_Object pattern, Lisp_Object regexpp)$/;"	v
pattern	w32font.c	/^  LOGFONT pattern;$/;"	m	struct:font_callback_data	file:	access:public
pattern	xfaces.c	/^  (Lisp_Object pattern, Lisp_Object face, Lisp_Object frame,$/;"	v
pattern_offset_t	regex.c	/^typedef long pattern_offset_t;$/;"	t	file:
PAXCTL	Makefile	/^PAXCTL = $/;"	m
PAXCTL_dumped	Makefile	/^PAXCTL_dumped = $/;"	m
PAXCTL_notdumped	Makefile	/^PAXCTL_notdumped = $/;"	m
payload	alloc.c	/^    char payload[BLOCK_BYTES];$/;"	m	union:ablock::__anon5	file:	access:public
PBaseSize	nsgui.h	194;"	d
PBaseSize	w32gui.h	112;"	d
PBM_ALGORITHM	image.c	/^  PBM_ALGORITHM,$/;"	e	enum:pbm_keyword_index	file:
PBM_ASCENT	image.c	/^  PBM_ASCENT,$/;"	e	enum:pbm_keyword_index	file:
PBM_BACKGROUND	image.c	/^  PBM_BACKGROUND,$/;"	e	enum:pbm_keyword_index	file:
PBM_DATA	image.c	/^  PBM_DATA,$/;"	e	enum:pbm_keyword_index	file:
PBM_FILE	image.c	/^  PBM_FILE,$/;"	e	enum:pbm_keyword_index	file:
PBM_FOREGROUND	image.c	/^  PBM_FOREGROUND,$/;"	e	enum:pbm_keyword_index	file:
pbm_format	image.c	/^static const struct image_keyword pbm_format[PBM_LAST] =$/;"	v	typeref:struct:image_keyword	file:
PBM_HEURISTIC_MASK	image.c	/^  PBM_HEURISTIC_MASK,$/;"	e	enum:pbm_keyword_index	file:
pbm_image_p	image.c	/^pbm_image_p (Lisp_Object object)$/;"	f	file:	signature:(Lisp_Object object)
pbm_image_p	image.c	/^static bool pbm_image_p (Lisp_Object object);$/;"	p	file:	signature:(Lisp_Object object)
pbm_keyword_index	image.c	/^enum pbm_keyword_index$/;"	g	file:
PBM_LAST	image.c	/^  PBM_LAST$/;"	e	enum:pbm_keyword_index	file:
pbm_load	image.c	/^pbm_load (struct frame *f, struct image *img)$/;"	f	file:	signature:(struct frame *f, struct image *img)
pbm_load	image.c	/^static bool pbm_load (struct frame *f, struct image *img);$/;"	p	file:	signature:(struct frame *f, struct image *img)
PBM_MARGIN	image.c	/^  PBM_MARGIN,$/;"	e	enum:pbm_keyword_index	file:
PBM_MASK	image.c	/^  PBM_MASK,$/;"	e	enum:pbm_keyword_index	file:
pbm_next_char	image.c	/^pbm_next_char (char **s, char *end)$/;"	f	file:	signature:(char **s, char *end)
PBM_RELIEF	image.c	/^  PBM_RELIEF,$/;"	e	enum:pbm_keyword_index	file:
pbm_scan_number	image.c	/^pbm_scan_number (char **s, char *end)$/;"	f	file:	signature:(char **s, char *end)
PBM_TYPE	image.c	/^  PBM_TYPE,$/;"	e	enum:pbm_keyword_index	file:
pbm_type	image.c	/^static struct image_type pbm_type =$/;"	v	typeref:struct:image_type	file:
PC	termcap.c	/^char PC;$/;"	v
PC	terminfo.c	/^char *UP, *BC, PC;$/;"	v
pD	lisp.h	144;"	d
pD	lisp.h	146;"	d
pD	lisp.h	148;"	d
pD	lisp.h	150;"	d
PDF	dispextern.h	/^  PDF,		\/* pop directional format *\/$/;"	e	enum:__anon114
PDI	dispextern.h	/^  PDI,		\/* pop directional isolate *\/$/;"	e	enum:__anon114
pdlcount	lisp.h	/^  ptrdiff_t pdlcount;$/;"	m	struct:handler	access:public
PeakPagefileUsage	w32.c	/^  SIZE_T PeakPagefileUsage;$/;"	m	struct:_PROCESS_MEMORY_COUNTERS_EX	file:	access:public
PeakWorkingSetSize	w32.c	/^  SIZE_T PeakWorkingSetSize;$/;"	m	struct:_PROCESS_MEMORY_COUNTERS_EX	file:	access:public
pending_boundary	undo.c	/^static Lisp_Object pending_boundary;$/;"	v	file:
pending_funcalls	keyboard.c	/^Lisp_Object pending_funcalls;$/;"	v
pending_malloc_warning	alloc.c	/^const char *pending_malloc_warning;$/;"	v
pending_maps	menu.c	/^     Lisp_Object pending_maps;$/;"	m	struct:skp	file:	access:public
pending_non_local_exit	emacs-module.c	/^  enum emacs_funcall_exit pending_non_local_exit;$/;"	m	struct:emacs_env_private	typeref:enum:emacs_env_private::emacs_funcall_exit	file:	access:public
pending_signals	keyboard.c	/^volatile bool pending_signals;$/;"	v
percent99	xdisp.c	/^percent99 (ptrdiff_t n, ptrdiff_t d)$/;"	f	file:	signature:(ptrdiff_t n, ptrdiff_t d)
period	fringe.c	/^  unsigned period : 8;$/;"	m	struct:fringe_bitmap	file:	access:public
period_size	sound.c	/^  ptrdiff_t (* period_size) (struct sound_device *sd);$/;"	m	struct:sound_device	file:	access:public
period_size	sound.c	/^  snd_pcm_uframes_t period_size;$/;"	m	struct:alsa_params	file:	access:public
PERROR	unexaix.c	47;"	d	file:
per_buffer_default	buffer.h	/^per_buffer_default (int offset)$/;"	f	signature:(int offset)
PER_BUFFER_IDX	buffer.h	1335;"	d
PER_BUFFER_SYMBOL	buffer.c	92;"	d	file:
per_buffer_value	buffer.h	/^per_buffer_value (struct buffer *b, int offset)$/;"	f	signature:(struct buffer *b, int offset)
PER_BUFFER_VALUE_P	buffer.h	1299;"	d
PER_BUFFER_VAR_IDX	buffer.h	1293;"	d
PER_BUFFER_VAR_OFFSET	buffer.h	1275;"	d
per_line_cost	dispextern.h	/^extern int per_line_cost (const char *);$/;"	p	signature:(const char *)
per_line_cost	term.c	/^per_line_cost (const char *str)$/;"	f	signature:(const char *str)
pfnCheckSumMappedFile	unexw32.c	/^PIMAGE_NT_HEADERS (__stdcall * pfnCheckSumMappedFile) (LPVOID BaseAddress,$/;"	v
pfnSetLayeredWindowAttributes	w32term.c	/^BOOL (WINAPI *pfnSetLayeredWindowAttributes) (HWND, COLORREF, BYTE, DWORD);$/;"	v
pfn_accept	w32.c	/^SOCKET (PASCAL *pfn_accept) (SOCKET s, struct sockaddr * addr, int * addrlen);$/;"	v
pfn_bind	w32.c	/^int (PASCAL *pfn_bind) (SOCKET s, const struct sockaddr *addr, int namelen);$/;"	v
pfn_closesocket	w32.c	/^int (PASCAL *pfn_closesocket) (SOCKET s);$/;"	v
pfn_connect	w32.c	/^int (PASCAL *pfn_connect) (SOCKET s, const struct sockaddr *addr, int namelen);$/;"	v
pfn_freeaddrinfo	w32.c	/^void (PASCAL *pfn_freeaddrinfo) (struct addrinfo *);$/;"	v
pfn_getaddrinfo	w32.c	/^int (PASCAL *pfn_getaddrinfo) (const char *, const char *,$/;"	v
pfn_gethostbyname	w32.c	/^struct hostent * (PASCAL *pfn_gethostbyname) (const char * name);$/;"	v	typeref:struct:pfn_gethostbyname
pfn_gethostname	w32.c	/^int (PASCAL *pfn_gethostname) (char * name, int namelen);$/;"	v
pfn_getpeername	w32.c	/^int (PASCAL *pfn_getpeername) (SOCKET s, struct sockaddr *addr, int * namelen);$/;"	v
pfn_getservbyname	w32.c	/^struct servent * (PASCAL *pfn_getservbyname) (const char * name, const char * proto);$/;"	v	typeref:struct:pfn_getservbyname
pfn_getsockname	w32.c	/^int (PASCAL *pfn_getsockname) (SOCKET s, struct sockaddr * name,$/;"	v
pfn_htons	w32.c	/^u_short (PASCAL *pfn_htons) (u_short hostshort);$/;"	v
pfn_inet_addr	w32.c	/^unsigned long (PASCAL *pfn_inet_addr) (const char * cp);$/;"	v
pfn_ioctlsocket	w32.c	/^int (PASCAL *pfn_ioctlsocket) (SOCKET s, long cmd, u_long *argp);$/;"	v
pfn_listen	w32.c	/^int (PASCAL *pfn_listen) (SOCKET s, int backlog);$/;"	v
pfn_ntohs	w32.c	/^u_short (PASCAL *pfn_ntohs) (u_short netshort);$/;"	v
pfn_recv	w32.c	/^int (PASCAL *pfn_recv) (SOCKET s, char * buf, int len, int flags);$/;"	v
pfn_recvfrom	w32.c	/^int (PASCAL *pfn_recvfrom) (SOCKET s, char * buf, int len, int flags,$/;"	v
pfn_send	w32.c	/^int (PASCAL *pfn_send) (SOCKET s, const char * buf, int len, int flags);$/;"	v
pfn_sendto	w32.c	/^int (PASCAL *pfn_sendto) (SOCKET s, const char * buf, int len, int flags,$/;"	v
pfn_SetHandleInformation	w32.c	/^BOOL (WINAPI *pfn_SetHandleInformation) (HANDLE object, DWORD mask, DWORD flags);$/;"	v
pfn_setsockopt	w32.c	/^int (PASCAL *pfn_setsockopt) (SOCKET s, int level, int optname,$/;"	v
pfn_shutdown	w32.c	/^int (PASCAL *pfn_shutdown) (SOCKET s, int how);$/;"	v
pfn_socket	w32.c	/^int (PASCAL *pfn_socket) (int af, int type, int protocol);$/;"	v
pfn_WSACleanup	w32.c	/^int (PASCAL *pfn_WSACleanup) (void);$/;"	v
pfn_WSACloseEvent	w32.c	/^int (PASCAL *pfn_WSACloseEvent) (HANDLE hEvent);$/;"	v
pfn_WSACreateEvent	w32.c	/^HANDLE (PASCAL *pfn_WSACreateEvent) (void);$/;"	v
pfn_WSAEnumNetworkEvents	w32.c	/^int (PASCAL *pfn_WSAEnumNetworkEvents) (SOCKET s, HANDLE hEventObject,$/;"	v
pfn_WSAEventSelect	w32.c	/^int (PASCAL *pfn_WSAEventSelect) (SOCKET s, HANDLE hEventObject, long lNetworkEvents);$/;"	v
pfn_WSAGetLastError	w32.c	/^int (PASCAL *pfn_WSAGetLastError) (void);$/;"	v
pfn_WSASetLastError	w32.c	/^void (PASCAL *pfn_WSASetLastError) (int iError);$/;"	v
pfn_WSAStartup	w32.c	/^int (PASCAL *pfn_WSAStartup) (WORD wVersionRequired, LPWSADATA lpWSAData);$/;"	v
pHDRR	unexelf.c	/^} HDRR, *pHDRR;$/;"	t	typeref:struct:__anon123	file:
pHDRR	unexelf.c	148;"	d	file:
phys_ascent	dispextern.h	/^  int phys_ascent, phys_descent, max_phys_ascent, max_phys_descent;$/;"	m	struct:it	access:public
phys_ascent	dispextern.h	/^  int phys_ascent, phys_height;$/;"	m	struct:glyph_row	access:public
phys_cursor	window.h	/^    struct cursor_pos phys_cursor;$/;"	m	struct:window	typeref:struct:window::cursor_pos	access:public
phys_cursor_ascent	window.h	/^    int phys_cursor_ascent, phys_cursor_height;$/;"	m	struct:window	access:public
phys_cursor_height	window.h	/^    int phys_cursor_ascent, phys_cursor_height;$/;"	m	struct:window	access:public
phys_cursor_in_rect_p	xdisp.c	/^phys_cursor_in_rect_p (struct window *w, XRectangle *r)$/;"	f	file:	signature:(struct window *w, XRectangle *r)
phys_cursor_on_p	window.h	/^    bool_bf phys_cursor_on_p : 1;$/;"	m	struct:window	access:public
phys_cursor_type	window.h	/^    enum text_cursor_kinds phys_cursor_type;$/;"	m	struct:window	typeref:enum:window::text_cursor_kinds	access:public
phys_cursor_width	window.h	/^    int phys_cursor_width;$/;"	m	struct:window	access:public
phys_descent	dispextern.h	/^  int phys_ascent, phys_descent, max_phys_ascent, max_phys_descent;$/;"	m	struct:it	access:public
phys_height	dispextern.h	/^  int phys_ascent, phys_height;$/;"	m	struct:glyph_row	access:public
pid	process.h	/^    pid_t pid;$/;"	m	struct:Lisp_Process	access:public
pid	w32.h	/^  int                 pid;$/;"	m	struct:_child_process	access:public
pinned	lisp.h	/^  bool_bf pinned : 1;$/;"	m	struct:Lisp_Symbol	access:public
pinned_object	alloc.c	/^static struct pinned_object$/;"	s	file:
pinned_object::next	alloc.c	/^  struct pinned_object *next;$/;"	m	struct:pinned_object	typeref:struct:pinned_object::pinned_object	file:	access:public
pinned_object::object	alloc.c	/^  Lisp_Object object;$/;"	m	struct:pinned_object	file:	access:public
pinned_objects	alloc.c	/^} *pinned_objects;$/;"	v	typeref:struct:pinned_object	file:
pint2hrstr	xdisp.c	/^pint2hrstr (char *buf, int width, ptrdiff_t d)$/;"	f	file:	signature:(char *buf, int width, ptrdiff_t d)
pint2str	xdisp.c	/^pint2str (register char *buf, register int width, register ptrdiff_t d)$/;"	f	file:	signature:(register char *buf, register int width, register ptrdiff_t d)
pint2str	xdisp.c	/^static void pint2str (register char *, register int, register ptrdiff_t);$/;"	p	file:	signature:(register char *, register int, register ptrdiff_t)
pipe	w32.c	65;"	d	file:
pipe2	w32.c	/^pipe2 (int * phandles, int pipe2_flags)$/;"	f	signature:(int * phandles, int pipe2_flags)
pipe2	w32.h	/^extern int pipe2 (int *, int);$/;"	p	signature:(int *, int)
PIPECONN1_P	process.c	208;"	d	file:
PIPECONN_P	process.c	207;"	d	file:
pitch	font.h	/^  int pitch;$/;"	m	struct:font_bitmap	access:public
pixel	dispextern.h	/^  unsigned long pixel;$/;"	m	struct:__anon104	access:public
pixel	image.c	/^  unsigned long pixel;$/;"	m	struct:ct_color	file:	access:public
pixel	w32term.h	/^    unsigned long pixel;$/;"	m	struct:w32_output::relief	access:public
pixel	xterm.h	/^    unsigned long pixel;$/;"	m	struct:x_output::relief	access:public
pixels	image.c	/^  (Lisp_Object spec, Lisp_Object pixels, Lisp_Object frame)$/;"	v
pixels	image.c	/^  png_byte *pixels;$/;"	m	struct:png_load_context	file:	access:public
pixel_height	frame.h	/^  int pixel_width, pixel_height;$/;"	m	struct:frame	access:public
pixel_height	window.c	/^  Lisp_Object pixel_left, pixel_top, pixel_height, pixel_width;$/;"	m	struct:saved_window	file:	access:public
pixel_height	window.h	/^    int pixel_height;$/;"	m	struct:window	access:public
pixel_height_before_size_change	window.c	/^  Lisp_Object pixel_height_before_size_change, pixel_width_before_size_change;$/;"	m	struct:saved_window	file:	access:public
pixel_height_before_size_change	window.h	/^    int pixel_height_before_size_change;$/;"	m	struct:window	access:public
pixel_left	window.c	/^  Lisp_Object pixel_left, pixel_top, pixel_height, pixel_width;$/;"	m	struct:saved_window	file:	access:public
pixel_left	window.h	/^    int pixel_left;$/;"	m	struct:window	access:public
pixel_size	font.h	/^  int pixel_size;$/;"	m	struct:font	access:public
pixel_size	window.c	/^  (Lisp_Object old, Lisp_Object pixel_size, Lisp_Object side, Lisp_Object normal_size)$/;"	v
pixel_top	window.c	/^  Lisp_Object pixel_left, pixel_top, pixel_height, pixel_width;$/;"	m	struct:saved_window	file:	access:public
pixel_top	window.h	/^    int pixel_top;$/;"	m	struct:window	access:public
pixel_to_char_size	widget.c	/^pixel_to_char_size (EmacsFrame ew, Dimension pixel_width, Dimension pixel_height, int *char_width, int *char_height)$/;"	f	file:	signature:(EmacsFrame ew, Dimension pixel_width, Dimension pixel_height, int *char_width, int *char_height)
pixel_to_glyph_coords	dispextern.h	/^void pixel_to_glyph_coords (struct frame *, int, int, int *, int *,$/;"	p	signature:(struct frame *, int, int, int *, int *, NativeRectangle *, bool)
pixel_to_glyph_coords	xdisp.c	/^pixel_to_glyph_coords (struct frame *f, int pix_x, int pix_y, int *x, int *y,$/;"	f	signature:(struct frame *f, int pix_x, int pix_y, int *x, int *y, NativeRectangle *bounds, bool noclip)
PIXEL_TO_POINT	font.h	552;"	d
pixel_to_text_size	widget.c	/^pixel_to_text_size (EmacsFrame ew, Dimension pixel_width, Dimension pixel_height, int *text_width, int *text_height)$/;"	f	file:	signature:(EmacsFrame ew, Dimension pixel_width, Dimension pixel_height, int *text_width, int *text_height)
pixel_width	composite.h	/^  short pixel_width, ascent, descent;$/;"	m	struct:composition	access:public
pixel_width	dispextern.h	/^  int pixel_width;$/;"	m	struct:glyph_row	access:public
pixel_width	dispextern.h	/^  int pixel_width;$/;"	m	struct:it	access:public
pixel_width	dispextern.h	/^  short pixel_width;$/;"	m	struct:glyph	access:public
pixel_width	frame.h	/^  int pixel_width, pixel_height;$/;"	m	struct:frame	access:public
pixel_width	window.c	/^  Lisp_Object pixel_left, pixel_top, pixel_height, pixel_width;$/;"	m	struct:saved_window	file:	access:public
pixel_width	window.h	/^    int pixel_width;$/;"	m	struct:window	access:public
pixel_width_before_size_change	window.c	/^  Lisp_Object pixel_height_before_size_change, pixel_width_before_size_change;$/;"	m	struct:saved_window	file:	access:public
pixel_width_before_size_change	window.h	/^    int pixel_width_before_size_change;$/;"	m	struct:window	access:public
pixmap	dispextern.h	/^  Pixmap pixmap, mask;$/;"	m	struct:image	access:public
Pixmap	nsgui.h	/^typedef id Pixmap;$/;"	t
Pixmap	nsgui.h	/^typedef void *Pixmap;$/;"	t
Pixmap	w32gui.h	/^typedef HBITMAP Pixmap;$/;"	t
pixmap	w32term.h	/^  Pixmap pixmap;$/;"	m	struct:w32_bitmap_record	access:public
pixmap	xterm.h	/^  Pixmap pixmap;$/;"	m	struct:x_bitmap_record	access:public
PIX_MASK_DRAW	image.c	73;"	d	file:
PIX_MASK_DRAW	image.c	88;"	d	file:
PIX_MASK_RETAIN	image.c	100;"	d	file:
PIX_MASK_RETAIN	image.c	72;"	d	file:
PIX_MASK_RETAIN	image.c	87;"	d	file:
PIX_TYPE	w32term.h	260;"	d
placeholder	lread.c	/^  (Lisp_Object object, Lisp_Object placeholder, Lisp_Object completed)$/;"	v
placeholder	lread.c	/^  Lisp_Object placeholder;$/;"	m	struct:subst	file:	access:public
plain_values	emacs-module.c	/^    plain_values$/;"	e	enum:__anon40	file:
play	sound.c	/^  void (* play) (struct sound *s, struct sound_device *sd);$/;"	m	struct:sound	file:	access:public
plist	intervals.h	/^  Lisp_Object plist;		    \/* Other properties.  *\/$/;"	m	struct:interval	access:public
plist	lisp.h	/^    Lisp_Object plist;$/;"	m	struct:Lisp_Overlay	access:public
plist	lisp.h	/^  Lisp_Object plist;$/;"	m	struct:Lisp_Symbol	access:public
plist	process.h	/^    Lisp_Object plist;$/;"	m	struct:Lisp_Process	access:public
plist	xwidget.h	/^  Lisp_Object plist;$/;"	m	struct:xwidget	access:public
PLIST_ELT_P	textprop.c	57;"	d	file:
PMaxSize	nsgui.h	191;"	d
PMaxSize	w32gui.h	109;"	d
pMd	lisp.h	129;"	d
pMd	lisp.h	134;"	d
PMinSize	nsgui.h	190;"	d
PMinSize	w32gui.h	108;"	d
pMu	lisp.h	130;"	d
pMu	lisp.h	135;"	d
pMultiByteToWideChar	w32.c	/^int (WINAPI *pMultiByteToWideChar)(UINT,DWORD,LPCSTR,int,LPWSTR,int);$/;"	v
PNG_ALGORITHM	image.c	/^  PNG_ALGORITHM,$/;"	e	enum:png_keyword_index	file:
PNG_ASCENT	image.c	/^  PNG_ASCENT,$/;"	e	enum:png_keyword_index	file:
PNG_BACKGROUND	image.c	/^  PNG_BACKGROUND,$/;"	e	enum:png_keyword_index	file:
PNG_CFLAGS	Makefile	/^PNG_CFLAGS=-isystem \/usr\/include\/libpng16$/;"	m
png_create_info_struct	image.c	5768;"	d	file:
png_create_info_struct	image.c	5792;"	d	file:
png_create_read_struct	image.c	5769;"	d	file:
png_create_read_struct	image.c	5793;"	d	file:
PNG_DATA	image.c	/^  PNG_DATA,$/;"	e	enum:png_keyword_index	file:
png_destroy_read_struct	image.c	5770;"	d	file:
png_destroy_read_struct	image.c	5794;"	d	file:
png_error	image.c	5771;"	d	file:
png_error	image.c	5795;"	d	file:
PNG_FILE	image.c	/^  PNG_FILE,$/;"	e	enum:png_keyword_index	file:
png_format	image.c	/^static const struct image_keyword png_format[PNG_LAST] =$/;"	v	typeref:struct:image_keyword	file:
png_get_bKGD	image.c	5772;"	d	file:
png_get_bKGD	image.c	5796;"	d	file:
png_get_channels	image.c	5773;"	d	file:
png_get_channels	image.c	5797;"	d	file:
png_get_IHDR	image.c	5774;"	d	file:
png_get_IHDR	image.c	5798;"	d	file:
png_get_io_ptr	image.c	5775;"	d	file:
png_get_io_ptr	image.c	5799;"	d	file:
png_get_rowbytes	image.c	5776;"	d	file:
png_get_rowbytes	image.c	5800;"	d	file:
png_get_valid	image.c	5777;"	d	file:
png_get_valid	image.c	5801;"	d	file:
PNG_HEURISTIC_MASK	image.c	/^  PNG_HEURISTIC_MASK,$/;"	e	enum:png_keyword_index	file:
png_image_p	image.c	/^png_image_p (Lisp_Object object)$/;"	f	file:	signature:(Lisp_Object object)
png_image_p	image.c	/^static bool png_image_p (Lisp_Object object);$/;"	p	file:	signature:(Lisp_Object object)
PNG_JMPBUF	image.c	5832;"	d	file:
PNG_JMPBUF	image.c	5836;"	d	file:
png_keyword_index	image.c	/^enum png_keyword_index$/;"	g	file:
PNG_LAST	image.c	/^  PNG_LAST$/;"	e	enum:png_keyword_index	file:
png_load	image.c	/^png_load (struct frame *f, struct image *img)$/;"	f	file:	signature:(struct frame *f, struct image *img)
png_load	image.c	/^static bool png_load (struct frame *f, struct image *img);$/;"	p	file:	signature:(struct frame *f, struct image *img)
png_load_body	image.c	/^png_load_body (struct frame *f, struct image *img, struct png_load_context *c)$/;"	f	file:	signature:(struct frame *f, struct image *img, struct png_load_context *c)
png_load_context	image.c	/^struct png_load_context$/;"	s	file:
png_load_context::end_info	image.c	/^  png_info *end_info;$/;"	m	struct:png_load_context	file:	access:public
png_load_context::fp	image.c	/^  FILE *fp;$/;"	m	struct:png_load_context	file:	access:public
png_load_context::info_ptr	image.c	/^  png_info *info_ptr;$/;"	m	struct:png_load_context	file:	access:public
png_load_context::pixels	image.c	/^  png_byte *pixels;$/;"	m	struct:png_load_context	file:	access:public
png_load_context::png_ptr	image.c	/^  png_struct *png_ptr;$/;"	m	struct:png_load_context	file:	access:public
png_load_context::rows	image.c	/^  png_byte **rows;$/;"	m	struct:png_load_context	file:	access:public
png_longjmp	image.c	5778;"	d	file:
png_longjmp	image.c	5802;"	d	file:
PNG_LONGJMP	image.c	5831;"	d	file:
PNG_LONGJMP	image.c	5835;"	d	file:
PNG_MARGIN	image.c	/^  PNG_MARGIN,$/;"	e	enum:png_keyword_index	file:
PNG_MASK	image.c	/^  PNG_MASK,$/;"	e	enum:png_keyword_index	file:
png_memory_storage	image.c	/^struct png_memory_storage$/;"	s	file:
png_memory_storage::bytes	image.c	/^  unsigned char *bytes;		\/* The data       *\/$/;"	m	struct:png_memory_storage	file:	access:public
png_memory_storage::index	image.c	/^  ptrdiff_t index;		\/* Where are we?  *\/$/;"	m	struct:png_memory_storage	file:	access:public
png_memory_storage::len	image.c	/^  ptrdiff_t len;		\/* How big is it? *\/$/;"	m	struct:png_memory_storage	file:	access:public
png_ptr	image.c	/^  png_struct *png_ptr;$/;"	m	struct:png_load_context	file:	access:public
png_read_end	image.c	5779;"	d	file:
png_read_end	image.c	5803;"	d	file:
png_read_from_file	image.c	/^png_read_from_file (png_structp png_ptr, png_bytep data, png_size_t length)$/;"	f	file:	signature:(png_structp png_ptr, png_bytep data, png_size_t length)
png_read_from_memory	image.c	/^png_read_from_memory (png_structp png_ptr, png_bytep data, png_size_t length)$/;"	f	file:	signature:(png_structp png_ptr, png_bytep data, png_size_t length)
png_read_image	image.c	5780;"	d	file:
png_read_image	image.c	5804;"	d	file:
png_read_info	image.c	5781;"	d	file:
png_read_info	image.c	5805;"	d	file:
png_read_update_info	image.c	5782;"	d	file:
png_read_update_info	image.c	5806;"	d	file:
PNG_RELIEF	image.c	/^  PNG_RELIEF,$/;"	e	enum:png_keyword_index	file:
png_set_background	image.c	5783;"	d	file:
png_set_background	image.c	5807;"	d	file:
png_set_expand	image.c	5784;"	d	file:
png_set_expand	image.c	5808;"	d	file:
png_set_gray_to_rgb	image.c	5785;"	d	file:
png_set_gray_to_rgb	image.c	5809;"	d	file:
png_set_longjmp_fn	image.c	5786;"	d	file:
png_set_longjmp_fn	image.c	5810;"	d	file:
png_set_read_fn	image.c	5787;"	d	file:
png_set_read_fn	image.c	5811;"	d	file:
png_set_sig_bytes	image.c	5788;"	d	file:
png_set_sig_bytes	image.c	5812;"	d	file:
png_set_strip_16	image.c	5789;"	d	file:
png_set_strip_16	image.c	5813;"	d	file:
png_sig_cmp	image.c	5790;"	d	file:
png_sig_cmp	image.c	5814;"	d	file:
PNG_TYPE	image.c	/^  PNG_TYPE,$/;"	e	enum:png_keyword_index	file:
png_type	image.c	/^static struct image_type png_type =$/;"	v	typeref:struct:image_type	file:
pointer	lisp.h	/^      void *pointer;$/;"	m	union:Lisp_Save_Value::__anon26	access:public
pointer	regex.c	/^  re_char *pointer;$/;"	m	union:fail_stack_elt	file:	access:public
pointers_fit_in_lispobj_p	alloc.c	/^pointers_fit_in_lispobj_p (void)$/;"	f	file:	signature:(void)
pointer_align	alloc.c	/^pointer_align (void *ptr, int alignment)$/;"	f	file:	signature:(void *ptr, int alignment)
pointer_invisible	frame.h	/^  bool_bf pointer_invisible : 1;$/;"	m	struct:frame	access:public
POINTER_TO_OFFSET	regex.c	4466;"	d	file:
pointm	window.c	/^  Lisp_Object window, buffer, start, pointm, old_pointm;$/;"	m	struct:saved_window	file:	access:public
pointm	window.h	/^    Lisp_Object pointm;$/;"	m	struct:window	access:public
point_before_last_command_or_undo	keyboard.c	/^ptrdiff_t point_before_last_command_or_undo;$/;"	v
point_before_scroll_	buffer.h	/^  Lisp_Object point_before_scroll_;$/;"	m	struct:buffer	access:public
point_marker	callint.c	/^static Lisp_Object point_marker;$/;"	v	file:
POINT_TO_PIXEL	font.h	545;"	d
polling_period	globals.h	861;"	d
POLL_FOR_INPUT	config.h	1470;"	d
poll_for_input	keyboard.c	/^poll_for_input (struct atimer *timer)$/;"	f	file:	signature:(struct atimer *timer)
poll_for_input_1	keyboard.c	/^poll_for_input_1 (void)$/;"	f	signature:(void)
poll_for_input_1	keyboard.h	/^extern void poll_for_input_1 (void);$/;"	p	signature:(void)
poll_suppress_count	keyboard.c	/^int poll_suppress_count;$/;"	v
poll_suppress_count	lisp.h	/^  int poll_suppress_count;$/;"	m	struct:handler	access:public
poll_timer	keyboard.c	/^static struct atimer *poll_timer;$/;"	v	typeref:struct:atimer	file:
pool	dispextern.h	/^  struct glyph_pool *pool;$/;"	m	struct:glyph_matrix	typeref:struct:glyph_matrix::glyph_pool	access:public
POP	bytecode.c	302;"	d	file:
popup_activated	dispextern.h	/^int popup_activated (void);$/;"	p	signature:(void)
popup_activated	xmenu.c	/^popup_activated (void)$/;"	f	signature:(void)
popup_activated_flag	xmenu.c	/^static int popup_activated_flag;$/;"	v	file:
popup_activate_callback	xmenu.c	/^popup_activate_callback (Widget widget, LWLIB_ID id, XtPointer client_data)$/;"	f	file:	signature:(Widget widget, LWLIB_ID id, XtPointer client_data)
popup_deactivate_callback	xmenu.c	/^popup_deactivate_callback ($/;"	f	file:	signature:( GtkWidget *widget, gpointer client_data )
popup_dialog_hook	termhooks.h	/^  Lisp_Object (*popup_dialog_hook) (struct frame *f, Lisp_Object header,$/;"	m	struct:terminal	access:public
popup_get_selection	xmenu.c	/^popup_get_selection (XEvent *initial_event, struct x_display_info *dpyinfo,$/;"	f	file:	signature:(XEvent *initial_event, struct x_display_info *dpyinfo, LWLIB_ID id, bool do_timers)
popup_selection_callback	xmenu.c	/^popup_selection_callback (GtkWidget *widget, gpointer client_data)$/;"	f	file:	signature:(GtkWidget *widget, gpointer client_data)
popup_selection_callback	xmenu.c	/^popup_selection_callback (Widget widget, LWLIB_ID id, XtPointer client_data)$/;"	f	file:	signature:(Widget widget, LWLIB_ID id, XtPointer client_data)
popup_widget_loop	xmenu.c	/^popup_widget_loop (bool do_timers, GtkWidget *widget)$/;"	f	file:	signature:(bool do_timers, GtkWidget *widget)
pop_down_dialog	gtkutil.c	/^pop_down_dialog (void *arg)$/;"	f	file:	signature:(void *arg)
pop_down_menu	xmenu.c	/^pop_down_menu (int id)$/;"	f	file:	signature:(int id)
pop_down_menu	xmenu.c	/^pop_down_menu (Lisp_Object arg)$/;"	f	file:	signature:(Lisp_Object arg)
pop_down_menu	xmenu.c	/^pop_down_menu (void *arg)$/;"	f	file:	signature:(void *arg)
POP_FAILURE_INT	regex.c	1366;"	d	file:
POP_FAILURE_POINT	regex.c	1518;"	d	file:
POP_FAILURE_POINTER	regex.c	1365;"	d	file:
POP_FAILURE_REG_OR_COUNT	regex.c	1415;"	d	file:
pop_it	xdisp.c	/^pop_it (struct it *it)$/;"	f	file:	signature:(struct it *it)
pop_it	xdisp.c	/^static void pop_it (struct it *);$/;"	p	file:	signature:(struct it *)
pop_kbd_macro	macros.c	/^pop_kbd_macro (Lisp_Object info)$/;"	f	file:	signature:(Lisp_Object info)
pop_kboard	keyboard.c	/^pop_kboard (void)$/;"	f	signature:(void)
pop_kboard	keyboard.h	/^extern void pop_kboard (void);$/;"	p	signature:(void)
POP_MAPPING_STACK	ccl.c	602;"	d	file:
pop_message_unwind	lisp.h	/^extern void pop_message_unwind (void);$/;"	p	signature:(void)
pop_message_unwind	xdisp.c	/^pop_message_unwind (void)$/;"	f	signature:(void)
POP_SCRIPT_RANGE	fontset.c	1416;"	d	file:
port	process.h	/^    int port;$/;"	m	struct:Lisp_Process	access:public
pos	buffer.c	/^  (Lisp_Object pos, Lisp_Object sorted)$/;"	v
pos	composite.c	/^  (Lisp_Object pos, Lisp_Object limit, Lisp_Object string, Lisp_Object detail_p)$/;"	v
pos	composite.c	/^  ptrdiff_t pos, pos_byte;$/;"	m	struct:position_record	file:	access:public
pos	dispextern.h	/^  struct text_pos pos;$/;"	m	struct:display_pos	typeref:struct:display_pos::text_pos	access:public
pos	editfns.c	/^  (Lisp_Object pos, Lisp_Object escape_from_edge, Lisp_Object limit)$/;"	v
pos	fringe.c	/^  (Lisp_Object pos, Lisp_Object window)$/;"	v
pos	keyboard.c	/^  (Lisp_Object pos, Lisp_Object window)$/;"	v
pos	region-cache.c	/^  ptrdiff_t pos;$/;"	m	struct:boundary	file:	access:public
pos	window.c	/^  (Lisp_Object pos, Lisp_Object window, Lisp_Object partially)$/;"	v
pos	window.c	/^  (Lisp_Object window, Lisp_Object pos, Lisp_Object noforce)$/;"	v
position	character.c	/^  (Lisp_Object position, Lisp_Object string)$/;"	v
position	dispextern.h	/^    struct text_pos position;$/;"	m	struct:it::iterator_stack_entry	typeref:struct:it::iterator_stack_entry::text_pos	access:public
position	dispextern.h	/^  struct text_pos position;$/;"	m	struct:it	typeref:struct:it::text_pos	access:public
position	editfns.c	/^  (Lisp_Object position, register Lisp_Object prop, Lisp_Object object)$/;"	v
position	font.c	/^  (Lisp_Object position, Lisp_Object ch)$/;"	v
position	font.c	/^  (Lisp_Object position, Lisp_Object window, Lisp_Object string)$/;"	v
position	indent.h	/^struct position$/;"	s
position	intervals.h	/^  ptrdiff_t position;	        \/* Cache of interval's character position.  *\/$/;"	m	struct:interval	access:public
position	keymap.c	/^  (Lisp_Object command, Lisp_Object position, Lisp_Object keymaps)$/;"	v
position	marker.c	/^  (Lisp_Object marker, Lisp_Object position, Lisp_Object buffer)$/;"	v
position	menu.c	/^  (Lisp_Object position, Lisp_Object contents, Lisp_Object header)$/;"	v
position	menu.c	/^  (Lisp_Object position, Lisp_Object menu)$/;"	v
position	textprop.c	/^  (Lisp_Object position, Lisp_Object limit)$/;"	v
position	textprop.c	/^  (Lisp_Object position, Lisp_Object object)$/;"	v
position	textprop.c	/^  (Lisp_Object position, Lisp_Object object, Lisp_Object limit)$/;"	v
position	textprop.c	/^  (Lisp_Object position, Lisp_Object prop, Lisp_Object object)$/;"	v
position	textprop.c	/^  (Lisp_Object position, Lisp_Object prop, Lisp_Object object, Lisp_Object limit)$/;"	v
position::bufpos	indent.h	/^    ptrdiff_t bufpos;$/;"	m	struct:position	access:public
position::bytepos	indent.h	/^    ptrdiff_t bytepos;$/;"	m	struct:position	access:public
position::contin	indent.h	/^    int contin;$/;"	m	struct:position	access:public
position::hpos	indent.h	/^    EMACS_INT hpos;$/;"	m	struct:position	access:public
position::prevhpos	indent.h	/^    EMACS_INT prevhpos;$/;"	m	struct:position	access:public
position::vpos	indent.h	/^    EMACS_INT vpos;$/;"	m	struct:position	access:public
position_indentation	indent.c	/^position_indentation (ptrdiff_t pos_byte)$/;"	f	file:	signature:(ptrdiff_t pos_byte)
position_indentation	indent.c	/^static ptrdiff_t position_indentation (ptrdiff_t);$/;"	p	file:
position_record	composite.c	/^struct position_record$/;"	s	file:
position_record::p	composite.c	/^  unsigned char *p;$/;"	m	struct:position_record	file:	access:public
position_record::pos	composite.c	/^  ptrdiff_t pos, pos_byte;$/;"	m	struct:position_record	file:	access:public
position_record::pos_byte	composite.c	/^  ptrdiff_t pos, pos_byte;$/;"	m	struct:position_record	file:	access:public
position_to_Time	keyboard.c	/^position_to_Time (ptrdiff_t pos)$/;"	f	file:	signature:(ptrdiff_t pos)
posix	search.c	/^  bool posix;$/;"	m	struct:regexp_cache	file:	access:public
posix_close	sysdep.c	/^posix_close (int fd, int flag)$/;"	f	file:	signature:(int fd, int flag)
POSIX_CLOSE_RESTART	sysdep.c	2391;"	d	file:
posix_memalign	gmalloc.c	/^extern int posix_memalign (void **memptr, size_t alignment, size_t size);$/;"	p	file:	signature:(void **memptr, size_t alignment, size_t size)
posix_memalign	gmalloc.c	/^posix_memalign (void **memptr, size_t alignment, size_t size)$/;"	f	signature:(void **memptr, size_t alignment, size_t size)
POSN_BUFFER_POSN	keyboard.h	412;"	d
POSN_INBUFFER_P	keyboard.h	411;"	d
POSN_POSN	keyboard.h	398;"	d
POSN_SCROLLBAR_PART	keyboard.h	402;"	d
POSN_SET_POSN	keyboard.h	399;"	d
POSN_STRING	keyboard.h	407;"	d
POSN_TIMESTAMP	keyboard.h	401;"	d
POSN_WINDOW	keyboard.h	397;"	d
POSN_WINDOW_POSN	keyboard.h	400;"	d
postprocess_image	image.c	/^postprocess_image (struct frame *f, struct image *img)$/;"	f	file:	signature:(struct frame *f, struct image *img)
post_acquire_global_lock	thread.c	/^post_acquire_global_lock (struct thread_state *self)$/;"	f	file:	signature:(struct thread_state *self)
POST_ALLOC_OBJ	Makefile	/^POST_ALLOC_OBJ=$/;"	m
post_character_message	w32fns.c	/^post_character_message (HWND hwnd, UINT msg,$/;"	f	file:	signature:(HWND hwnd, UINT msg, WPARAM wParam, LPARAM lParam, DWORD modifiers)
post_msg	w32term.h	/^extern BOOL post_msg (W32Msg *);$/;"	p	signature:(W32Msg *)
post_msg	w32xfns.c	/^post_msg (W32Msg * lpmsg)$/;"	f	signature:(W32Msg * lpmsg)
POS_ADDR_VSTRING	regex.c	4192;"	d	file:
POS_AS_IN_BUFFER	regex.c	158;"	d	file:
pos_byte	composite.c	/^  ptrdiff_t pos, pos_byte;$/;"	m	struct:position_record	file:	access:public
pos_visible_p	lisp.h	/^extern bool pos_visible_p (struct window *, ptrdiff_t, int *,$/;"	p	signature:(struct window *, ptrdiff_t, int *, int *, int *, int *, int *, int *)
pos_visible_p	xdisp.c	/^pos_visible_p (struct window *w, ptrdiff_t charpos, int *x, int *y,$/;"	f	signature:(struct window *w, ptrdiff_t charpos, int *x, int *y, int *rtop, int *rbot, int *rowh, int *vpos)
power_letter	xdisp.c	/^static const char power_letter[] =$/;"	v	file:
POWER_OF_2	alloc.c	/^verify (POWER_OF_2 (BLOCK_ALIGN));$/;"	p	file:
POWER_OF_2	alloc.c	482;"	d	file:
PPosition	nsgui.h	188;"	d
PPosition	w32gui.h	106;"	d
PPROCESS_MEMORY_COUNTERS_EX	w32.c	/^} PROCESS_MEMORY_COUNTERS_EX,*PPROCESS_MEMORY_COUNTERS_EX;$/;"	t	typeref:struct:_PROCESS_MEMORY_COUNTERS_EX	file:
pp_cache	region-cache.c	/^pp_cache (struct region_cache *c)$/;"	f	signature:(struct region_cache *c)
precision	sound.c	/^  u_int16_t precision;$/;"	m	struct:wav_header	file:	access:public
predicate	lisp.h	/^    Lisp_Object predicate;$/;"	m	struct:Lisp_Buffer_Objfwd	access:public
predicate	minibuf.c	/^  (Lisp_Object prompt, Lisp_Object collection, Lisp_Object predicate, Lisp_Object require_match, Lisp_Object initial_input, Lisp_Object hist, Lisp_Object def, Lisp_Object inherit_input_method)$/;"	v
predicate	minibuf.c	/^  (Lisp_Object string, Lisp_Object collection, Lisp_Object predicate, Lisp_Object hide_spaces)$/;"	v
predicate	minibuf.c	/^  (Lisp_Object string, Lisp_Object predicate, Lisp_Object flag)$/;"	v
preferred_coding_system	coding.c	/^preferred_coding_system (void)$/;"	f	signature:(void)
preferred_coding_system	coding.h	/^extern Lisp_Object preferred_coding_system (void);$/;"	p	signature:(void)
preferred_sequence_p	keymap.c	/^preferred_sequence_p (Lisp_Object seq)$/;"	f	file:	signature:(Lisp_Object seq)
prefer_utf_8	coding.h	/^  bool prefer_utf_8;$/;"	m	struct:undecided_spec	access:public
PREFETCH	regex.c	4475;"	d	file:
PREFETCH_NOLIMIT	regex.c	4490;"	d	file:
prefix	keymap.c	/^  (Lisp_Object buffer, Lisp_Object prefix, Lisp_Object menus)$/;"	v
prefix	macros.c	/^  (Lisp_Object prefix, Lisp_Object loopfunc)$/;"	v
prepare_casing_context	casefiddle.c	/^prepare_casing_context (struct casing_context *ctx,$/;"	f	file:	signature:(struct casing_context *ctx, enum case_action flag, bool inbuffer)
prepare_desired_row	dispextern.h	/^void prepare_desired_row (struct window *, struct glyph_row *, bool);$/;"	p	signature:(struct window *, struct glyph_row *, bool)
prepare_desired_row	dispnew.c	/^prepare_desired_row (struct window *w, struct glyph_row *row, bool mode_line_p)$/;"	f	signature:(struct window *w, struct glyph_row *row, bool mode_line_p)
prepare_face	font.h	/^  void (*prepare_face) (struct frame *f, struct face *face);$/;"	m	struct:font_driver	access:public
prepare_face_for_display	dispextern.h	/^void prepare_face_for_display (struct frame *, struct face *);$/;"	p	signature:(struct frame *, struct face *)
prepare_face_for_display	xfaces.c	/^prepare_face_for_display (struct frame *f, struct face *face)$/;"	f	signature:(struct frame *f, struct face *face)
prepare_image_for_display	dispextern.h	/^void prepare_image_for_display (struct frame *, struct image *);$/;"	p	signature:(struct frame *, struct image *)
prepare_image_for_display	image.c	/^prepare_image_for_display (struct frame *f, struct image *img)$/;"	f	signature:(struct frame *f, struct image *img)
prepare_menu_bars	xdisp.c	/^prepare_menu_bars (void)$/;"	f	file:	signature:(void)
prepare_record	undo.c	/^prepare_record (void)$/;"	f	file:	signature:(void)
prepare_standard_handles	w32.h	/^extern void prepare_standard_handles (int in, int out,$/;"	p	signature:(int in, int out, int err, HANDLE handles[4])
prepare_standard_handles	w32proc.c	/^prepare_standard_handles (int in, int out, int err, HANDLE handles[3])$/;"	f	signature:(int in, int out, int err, HANDLE handles[3])
prepare_to_modify_buffer	insdel.c	/^prepare_to_modify_buffer (ptrdiff_t start, ptrdiff_t end,$/;"	f	signature:(ptrdiff_t start, ptrdiff_t end, ptrdiff_t *preserve_ptr)
prepare_to_modify_buffer	lisp.h	/^extern void prepare_to_modify_buffer (ptrdiff_t, ptrdiff_t, ptrdiff_t *);$/;"	p	signature:(ptrdiff_t, ptrdiff_t, ptrdiff_t *)
prepare_to_modify_buffer_1	insdel.c	/^prepare_to_modify_buffer_1 (ptrdiff_t start, ptrdiff_t end,$/;"	f	signature:(ptrdiff_t start, ptrdiff_t end, ptrdiff_t *preserve_ptr)
prepare_to_modify_buffer_1	lisp.h	/^extern void prepare_to_modify_buffer_1 (ptrdiff_t, ptrdiff_t, ptrdiff_t *);$/;"	p	signature:(ptrdiff_t, ptrdiff_t, ptrdiff_t *)
PREPARSE_DATA_BUFFER	w32.c	/^} REPARSE_DATA_BUFFER, *PREPARSE_DATA_BUFFER;$/;"	t	typeref:struct:_REPARSE_DATA_BUFFER	file:
prepend_glyph_string_lists	xdisp.c	/^prepend_glyph_string_lists (struct glyph_string **head, struct glyph_string **tail,$/;"	f	file:	signature:(struct glyph_string **head, struct glyph_string **tail, struct glyph_string *h, struct glyph_string *t)
prepend_msg	w32term.h	/^extern BOOL prepend_msg (W32Msg *lpmsg);$/;"	p	signature:(W32Msg *lpmsg)
prepend_msg	w32xfns.c	/^prepend_msg (W32Msg *lpmsg)$/;"	f	signature:(W32Msg *lpmsg)
preserved_fns	callint.c	/^static Lisp_Object preserved_fns;$/;"	v	file:
PRESERVE_START_END	insdel.c	2058;"	d	file:
PRESERVE_THRESHOLD	region-cache.c	123;"	d	file:
preserve_uid_gid	fileio.c	/^   Lisp_Object keep_time, Lisp_Object preserve_uid_gid,$/;"	v
PRESERVE_VALUE	insdel.c	2047;"	d	file:
PResizeInc	nsgui.h	192;"	d
PResizeInc	w32gui.h	110;"	d
pretend	frame.c	/^  (Lisp_Object frame, Lisp_Object height, Lisp_Object pretend, Lisp_Object pixelwise)$/;"	v
pretend	frame.c	/^  (Lisp_Object frame, Lisp_Object width, Lisp_Object pretend, Lisp_Object pixelwise)$/;"	v
prev	buffer.c	/^  struct mmap_region *next, *prev;$/;"	m	struct:mmap_region	typeref:struct:mmap_region::	file:	access:public
prev	dispextern.h	/^  struct bidi_saved_info prev;	\/* info about previous character *\/$/;"	m	struct:bidi_it	typeref:struct:bidi_it::bidi_saved_info	access:public
prev	dispextern.h	/^  struct face *next, *prev;$/;"	m	struct:face	typeref:struct:face::	access:public
prev	dispextern.h	/^  struct glyph_string *next, *prev;$/;"	m	struct:glyph_string	typeref:struct:glyph_string::	access:public
prev	dispextern.h	/^  struct image *next, *prev;$/;"	m	struct:image	typeref:struct:image::	access:public
prev	gmalloc.c	/^	size_t prev;	\/* Index of previous free cluster.  *\/$/;"	m	struct:__anon60::__anon64	file:	access:public
prev	gmalloc.c	/^    struct list *prev;$/;"	m	struct:list	typeref:struct:list::list	file:	access:public
prev	gtkutil.h	/^  struct xg_list_node_ *prev;$/;"	m	struct:xg_list_node_	typeref:struct:xg_list_node_::xg_list_node_	access:public
prev	lisp.h	/^    struct Lisp_Finalizer *prev;$/;"	m	struct:Lisp_Finalizer	typeref:struct:Lisp_Finalizer::Lisp_Finalizer	access:public
prev	ralloc.c	/^  struct bp *prev;$/;"	m	struct:bp	typeref:struct:bp::bp	file:	access:public
prev	ralloc.c	/^  struct heap *prev;$/;"	m	struct:heap	typeref:struct:heap::heap	file:	access:public
prev	w32term.h	/^  Lisp_Object next, prev;$/;"	m	struct:scroll_bar	access:public
prev	w32term.h	/^  struct notifications_set *prev;$/;"	m	struct:notifications_set	typeref:struct:notifications_set::notifications_set	access:public
prev	window.c	/^  Lisp_Object parent, prev;$/;"	m	struct:saved_window	file:	access:public
prev	window.h	/^    Lisp_Object prev;$/;"	m	struct:window	access:public
prev	xfaces.c	/^  struct named_merge_point *prev;$/;"	m	struct:named_merge_point	typeref:struct:named_merge_point::named_merge_point	file:	access:public
prev	xterm.c	/^  struct x_error_message_stack *prev;$/;"	m	struct:x_error_message_stack	typeref:struct:x_error_message_stack::x_error_message_stack	file:	access:public
prev	xterm.h	/^  Lisp_Object next, prev;$/;"	m	struct:scroll_bar	access:public
prevent_redisplay_optimizations_p	buffer.h	/^  bool_bf prevent_redisplay_optimizations_p : 1;$/;"	m	struct:buffer	access:public
prevhpos	indent.h	/^    EMACS_INT prevhpos;$/;"	m	struct:position	access:public
previous_color_mode	termchar.h	/^  int previous_color_mode;$/;"	m	struct:tty_display_info	access:public
previous_description_column	keymap.c	/^static int previous_description_column;$/;"	v	file:
previous_frame	termchar.h	/^  struct frame *previous_frame;$/;"	m	struct:tty_display_info	typeref:struct:tty_display_info::frame	access:public
previous_help_echo_string	xdisp.c	/^Lisp_Object previous_help_echo_string;$/;"	v
previous_interval	intervals.c	/^previous_interval (register INTERVAL interval)$/;"	f	signature:(register INTERVAL interval)
previous_interval	intervals.h	/^extern INTERVAL previous_interval (INTERVAL);$/;"	p	signature:(INTERVAL)
prevlevelstart	syntax.c	/^    ptrdiff_t prevlevelstart;$/;"	m	struct:lisp_parse_state	file:	access:public
prev_buffers	window.h	/^    Lisp_Object prev_buffers;$/;"	m	struct:window	access:public
PREV_CHAR_BOUNDARY	character.h	299;"	d
PREV_CHAR_BOUNDARY	regex.c	268;"	d	file:
prev_char_comend_first	syntax.c	/^prev_char_comend_first (ptrdiff_t pos, ptrdiff_t pos_byte)$/;"	f	file:	signature:(ptrdiff_t pos, ptrdiff_t pos_byte)
prev_console_cursor	w32console.c	/^static CONSOLE_CURSOR_INFO prev_console_cursor;$/;"	v	file:
prev_console_mode	w32console.c	/^static DWORD	prev_console_mode;$/;"	v	file:
prev_exception_handler	w32fns.c	/^static LPTOP_LEVEL_EXCEPTION_FILTER prev_exception_handler;$/;"	v	file:
prev_for_neutral	dispextern.h	/^  struct bidi_saved_info prev_for_neutral; \/* ...resolving neutrals *\/$/;"	m	struct:bidi_it	typeref:struct:bidi_it::bidi_saved_info	access:public
prev_for_neutral_type	dispextern.h	/^  unsigned prev_for_neutral_type : 3;$/;"	m	struct:bidi_stack	access:public
prev_frame	frame.c	/^prev_frame (Lisp_Object frame, Lisp_Object minibuf)$/;"	f	file:	signature:(Lisp_Object frame, Lisp_Object minibuf)
prev_fsmode	w32term.h	/^  int prev_fsmode;$/;"	m	struct:w32_output	access:public
prev_menu_help_message	term.c	/^static const char *menu_help_message, *prev_menu_help_message;$/;"	v	file:
prev_saved_doc_string	lread.c	/^static char *prev_saved_doc_string;$/;"	v	file:
prev_saved_doc_string_length	lread.c	/^static ptrdiff_t prev_saved_doc_string_length;$/;"	v	file:
prev_saved_doc_string_position	lread.c	/^static file_offset prev_saved_doc_string_position;$/;"	v	file:
prev_saved_doc_string_size	lread.c	/^static ptrdiff_t prev_saved_doc_string_size;$/;"	v	file:
prev_screen	w32console.c	/^static HANDLE	prev_screen, cur_screen;$/;"	v	file:
prev_stop	dispextern.h	/^    ptrdiff_t prev_stop;$/;"	m	struct:it::iterator_stack_entry	access:public
prev_stop	dispextern.h	/^  ptrdiff_t prev_stop;$/;"	m	struct:it	access:public
prev_syntax	syntax.c	/^    int prev_syntax; \/* Syntax of previous position scanned, when$/;"	m	struct:lisp_parse_state	file:	access:public
PRE_ALLOC_OBJ	Makefile	/^PRE_ALLOC_OBJ=lastfile.o$/;"	m
print	print.c	/^print (Lisp_Object obj, Lisp_Object printcharfun, bool escapeflag)$/;"	f	file:	signature:(Lisp_Object obj, Lisp_Object printcharfun, bool escapeflag)
print	print.c	/^static void print (Lisp_Object, Lisp_Object, bool);$/;"	p	file:
printablep	character.c	/^printablep (int c)$/;"	f	signature:(int c)
printablep	character.h	/^extern bool printablep (int);$/;"	p	signature:(int)
printchar	print.c	/^printchar (unsigned int ch, Lisp_Object fun)$/;"	f	file:	signature:(unsigned int ch, Lisp_Object fun)
printcharfun	print.c	/^  (Lisp_Object printcharfun, Lisp_Object ensure)$/;"	v
printchar_stdout_last	print.c	/^static unsigned int printchar_stdout_last;$/;"	v	file:
printchar_to_stream	print.c	/^printchar_to_stream (unsigned int ch, FILE *stream)$/;"	f	file:	signature:(unsigned int ch, FILE *stream)
PRINTFINISH	print.c	159;"	d	file:
printflag	lread.c	/^  (Lisp_Object buffer, Lisp_Object printflag, Lisp_Object filename, Lisp_Object unibyte, Lisp_Object do_allow_print)$/;"	v
printflag	lread.c	/^  (Lisp_Object start, Lisp_Object end, Lisp_Object printflag, Lisp_Object read_function)$/;"	v
PRINTF_ARCHETYPE	conf_post.h	203;"	d
PRINTF_ARCHETYPE	conf_post.h	205;"	d
PRINTF_ARCHETYPE	conf_post.h	207;"	d
printmax_t	lisp.h	/^typedef EMACS_INT printmax_t;$/;"	t
printmax_t	lisp.h	/^typedef intmax_t printmax_t;$/;"	t
PrintNameLength	w32.c	/^            USHORT PrintNameLength;$/;"	m	struct:_REPARSE_DATA_BUFFER::__anon66::__anon67	file:	access:public
PrintNameLength	w32.c	/^            USHORT PrintNameLength;$/;"	m	struct:_REPARSE_DATA_BUFFER::__anon66::__anon68	file:	access:public
PrintNameOffset	w32.c	/^            USHORT PrintNameOffset;$/;"	m	struct:_REPARSE_DATA_BUFFER::__anon66::__anon67	file:	access:public
PrintNameOffset	w32.c	/^            USHORT PrintNameOffset;$/;"	m	struct:_REPARSE_DATA_BUFFER::__anon66::__anon68	file:	access:public
PRINTPREPARE	print.c	95;"	d	file:
print_buffer	print.c	/^static char *print_buffer;$/;"	v	file:
print_buffer_pos	print.c	/^static ptrdiff_t print_buffer_pos;$/;"	v	file:
print_buffer_pos_byte	print.c	/^static ptrdiff_t print_buffer_pos_byte;$/;"	v	file:
print_buffer_size	print.c	/^static ptrdiff_t print_buffer_size;$/;"	v	file:
print_check_string_charset_prop	print.c	/^print_check_string_charset_prop (INTERVAL interval, Lisp_Object string)$/;"	f	file:	signature:(INTERVAL interval, Lisp_Object string)
print_check_string_charset_prop	print.c	/^static void print_check_string_charset_prop (INTERVAL interval, Lisp_Object string);$/;"	p	file:	signature:(INTERVAL interval, Lisp_Object string)
print_check_string_result	print.c	/^static int print_check_string_result;$/;"	v	file:
PRINT_CIRCLE	print.c	55;"	d	file:
PRINT_CIRCLE_CANDIDATE_P	print.c	1134;"	d	file:
print_compiled_pattern	regex.c	/^print_compiled_pattern (struct re_pattern_buffer *bufp)$/;"	f	file:	signature:(struct re_pattern_buffer *bufp)
print_c_string	print.c	/^print_c_string (char const *string, Lisp_Object printcharfun)$/;"	f	file:	signature:(char const *string, Lisp_Object printcharfun)
print_depth	print.c	/^static ptrdiff_t print_depth;$/;"	v	file:
print_double_string	regex.c	/^print_double_string (re_char *where, re_char *string1, ssize_t size1,$/;"	f	file:	signature:(re_char *where, re_char *string1, ssize_t size1, re_char *string2, ssize_t size2)
print_error_message	lisp.h	/^extern void print_error_message (Lisp_Object, Lisp_Object, const char *,$/;"	p	signature:(Lisp_Object, Lisp_Object, const char *, Lisp_Object)
print_error_message	print.c	/^print_error_message (Lisp_Object data, Lisp_Object stream, const char *context,$/;"	f	signature:(Lisp_Object data, Lisp_Object stream, const char *context, Lisp_Object caller)
print_escape_control_characters	globals.h	1025;"	d
print_escape_multibyte	globals.h	1027;"	d
print_escape_newlines	globals.h	1029;"	d
print_escape_nonascii	globals.h	1031;"	d
print_fastmap	regex.c	/^print_fastmap (char *fastmap)$/;"	f	file:	signature:(char *fastmap)
print_fontset_result	xfns.c	/^print_fontset_result (XFontSet xfs, char *name, char **missing_list,$/;"	f	file:	signature:(XFontSet xfs, char *name, char **missing_list, int missing_count)
print_interval	print.c	/^print_interval (INTERVAL interval, Lisp_Object printcharfun)$/;"	f	file:	signature:(INTERVAL interval, Lisp_Object printcharfun)
print_interval	print.c	/^static void print_interval (INTERVAL interval, Lisp_Object printcharfun);$/;"	p	file:	signature:(INTERVAL interval, Lisp_Object printcharfun)
print_load_command	unexmacosx.c	/^print_load_command (struct load_command *lc)$/;"	f	file:	signature:(struct load_command *lc)
print_load_command_name	unexmacosx.c	/^print_load_command_name (int lc)$/;"	f	file:	signature:(int lc)
print_number_index	print.c	/^static ptrdiff_t print_number_index;$/;"	v	file:
print_object	print.c	/^print_object (Lisp_Object obj, Lisp_Object printcharfun, bool escapeflag)$/;"	f	file:	signature:(Lisp_Object obj, Lisp_Object printcharfun, bool escapeflag)
print_object	print.c	/^static void print_object (Lisp_Object, Lisp_Object, bool);$/;"	p	file:
print_partial_compiled_pattern	regex.c	/^print_partial_compiled_pattern (re_char *start, re_char *end)$/;"	f	file:	signature:(re_char *start, re_char *end)
print_preprocess	print.c	/^print_preprocess (Lisp_Object obj)$/;"	f	file:	signature:(Lisp_Object obj)
print_preprocess	print.c	/^static void print_preprocess (Lisp_Object);$/;"	p	file:
print_preprocess_string	print.c	/^print_preprocess_string (INTERVAL interval, void *arg)$/;"	f	file:	signature:(INTERVAL interval, void *arg)
print_preprocess_string	print.c	/^static void print_preprocess_string (INTERVAL, void *);$/;"	p	file:	signature:(INTERVAL, void *)
print_prot	unexmacosx.c	/^print_prot (vm_prot_t prot)$/;"	f	file:	signature:(vm_prot_t prot)
print_prune_charset_plist	print.c	/^static Lisp_Object print_prune_charset_plist;$/;"	v	file:
print_prune_string_charset	print.c	/^print_prune_string_charset (Lisp_Object string)$/;"	f	file:	signature:(Lisp_Object string)
print_quoted	globals.h	1033;"	d
print_region	unexmacosx.c	/^print_region (vm_address_t address, vm_size_t size, vm_prot_t prot,$/;"	f	file:	signature:(vm_address_t address, vm_size_t size, vm_prot_t prot, vm_prot_t max_prot)
print_region_list	unexmacosx.c	/^print_region_list (void)$/;"	f	file:	signature:(void)
print_settings	gtkutil.c	/^static GtkPrintSettings *print_settings = NULL;$/;"	v	file:
print_string	print.c	/^print_string (Lisp_Object string, Lisp_Object printcharfun)$/;"	f	file:	signature:(Lisp_Object string, Lisp_Object printcharfun)
PRINT_STRING_NON_CHARSET_FOUND	print.c	1273;"	d	file:
PRINT_STRING_UNSAFE_CHARSET_FOUND	print.c	1274;"	d	file:
print_unwind	print.c	/^print_unwind (Lisp_Object saved_text)$/;"	f	file:	signature:(Lisp_Object saved_text)
print_vectorlike	print.c	/^print_vectorlike (Lisp_Object obj, Lisp_Object printcharfun, bool escapeflag,$/;"	f	file:	signature:(Lisp_Object obj, Lisp_Object printcharfun, bool escapeflag, char *buf)
priority	buffer.c	/^  EMACS_INT priority;$/;"	m	struct:sortstr	file:	access:public
priority	buffer.c	/^  EMACS_INT priority;$/;"	m	struct:sortvec	file:	access:public
priority	charset.c	/^  ptrdiff_t priority;$/;"	m	struct:charset_sort_data	file:	access:public
priority	emacs.c	/^  int priority;$/;"	m	struct:standard_args	file:	access:public
priority	xdisp.c	/^  EMACS_INT priority;$/;"	m	struct:overlay_entry	file:	access:public
priv	emacsgtkfixed.h	/^  EmacsFixedPrivate *priv;$/;"	m	struct:_EmacsFixed	access:public
PrivateUsage	w32.c	/^  SIZE_T PrivateUsage;$/;"	m	struct:_PROCESS_MEMORY_COUNTERS_EX	file:	access:public
private_members	emacs-module.h	/^  struct emacs_env_private *private_members;$/;"	m	struct:emacs_env_25	typeref:struct:emacs_env_25::emacs_env_private	access:public
private_members	emacs-module.h	/^  struct emacs_env_private *private_members;$/;"	m	struct:emacs_env_26	typeref:struct:emacs_env_26::emacs_env_private	access:public
private_members	emacs-module.h	/^  struct emacs_runtime_private *private_members;$/;"	m	struct:emacs_runtime	typeref:struct:emacs_runtime::emacs_runtime_private	access:public
private_members	module-env-25.h	/^  struct emacs_env_private *private_members;$/;"	v	typeref:struct:emacs_env_private
proc	gnutls.c	/^    (Lisp_Object proc, Lisp_Object cont)$/;"	v
proc	gnutls.c	/^  (Lisp_Object proc, Lisp_Object params)$/;"	v
proc	gnutls.c	/^  (Lisp_Object proc, Lisp_Object type, Lisp_Object proplist)$/;"	v
proc	process.c	/^     (Lisp_Object proc, Lisp_Object msg)$/;"	v
proc	process.c	/^  (Lisp_Object proc, Lisp_Object text)$/;"	v
process	process.c	/^  (Lisp_Object process, Lisp_Object address)$/;"	v
process	process.c	/^  (Lisp_Object process, Lisp_Object current_group)$/;"	v
process	process.c	/^  (Lisp_Object process, Lisp_Object decoding, Lisp_Object encoding)$/;"	v
process	process.c	/^  (Lisp_Object process, Lisp_Object filter)$/;"	v
process	process.c	/^  (Lisp_Object process, Lisp_Object flag)$/;"	v
process	process.c	/^  (Lisp_Object process, Lisp_Object height, Lisp_Object width)$/;"	v
process	process.c	/^  (Lisp_Object process, Lisp_Object key)$/;"	v
process	process.c	/^  (Lisp_Object process, Lisp_Object option, Lisp_Object value, Lisp_Object no_error)$/;"	v
process	process.c	/^  (Lisp_Object process, Lisp_Object plist)$/;"	v
process	process.c	/^  (Lisp_Object process, Lisp_Object seconds, Lisp_Object millisec,$/;"	v
process	process.c	/^  (Lisp_Object process, Lisp_Object sigcode)$/;"	v
process	process.c	/^  (Lisp_Object process, Lisp_Object start, Lisp_Object end)$/;"	v
process	process.c	/^  (Lisp_Object process, Lisp_Object string)$/;"	v
process	process.c	/^  (Lisp_Object process, Lisp_Object thread)$/;"	v
process	process.c	/^  (register Lisp_Object process, Lisp_Object buffer)$/;"	v
process	process.c	/^  (register Lisp_Object process, Lisp_Object flag)$/;"	v
process	process.c	/^  (register Lisp_Object process, Lisp_Object sentinel)$/;"	v
process	w32proc.c	/^  (Lisp_Object process, Lisp_Object priority)$/;"	v
Process32First_Proc	w32.c	/^typedef BOOL (WINAPI * Process32First_Proc) ($/;"	t	file:
Process32Next_Proc	w32.c	/^typedef BOOL (WINAPI * Process32Next_Proc) ($/;"	t	file:
process32_first	w32.c	/^process32_first (HANDLE hSnapshot, LPPROCESSENTRY32 lppe)$/;"	f	file:	signature:(HANDLE hSnapshot, LPPROCESSENTRY32 lppe)
process32_next	w32.c	/^process32_next (HANDLE hSnapshot, LPPROCESSENTRY32 lppe)$/;"	f	file:	signature:(HANDLE hSnapshot, LPPROCESSENTRY32 lppe)
PROCESSP	process.h	/^PROCESSP (Lisp_Object a)$/;"	f	signature:(Lisp_Object a)
process_dir	w32proc.c	/^static char * process_dir;$/;"	v	file:
process_fatal_action	sysdep.c	/^static struct sigaction process_fatal_action;$/;"	v	typeref:struct:sigaction	file:
PROCESS_FD	process.c	/^  PROCESS_FD = 8,$/;"	e	enum:fd_bits	file:
PROCESS_MEMORY_COUNTERS_EX	w32.c	/^} PROCESS_MEMORY_COUNTERS_EX,*PPROCESS_MEMORY_COUNTERS_EX;$/;"	t	typeref:struct:_PROCESS_MEMORY_COUNTERS_EX	file:
PROCESS_OPEN_FDS	process.h	/^enum { PROCESS_OPEN_FDS = 6 };$/;"	e	enum:__anon132
process_output_delay_count	process.c	/^static int process_output_delay_count;$/;"	v	file:
process_output_skip	process.c	/^static bool process_output_skip;$/;"	v	file:
process_pending_signals	keyboard.c	/^process_pending_signals (void)$/;"	f	signature:(void)
process_pending_signals	keyboard.h	/^extern void process_pending_signals (void);$/;"	p	signature:(void)
process_quit_flag	eval.c	/^process_quit_flag (void)$/;"	f	file:	signature:(void)
process_send_signal	process.c	/^process_send_signal (Lisp_Object process, int signo, Lisp_Object current_group,$/;"	f	file:	signature:(Lisp_Object process, int signo, Lisp_Object current_group, bool nomsg)
process_socket	process.c	/^process_socket (int domain, int type, int protocol)$/;"	f	file:	signature:(int domain, int type, int protocol)
process_special_events	keyboard.c	/^process_special_events (void)$/;"	f	file:	signature:(void)
process_tick	process.c	/^static EMACS_INT process_tick;$/;"	v	file:
process_times	w32.c	/^process_times (HANDLE h_proc, Lisp_Object *ctime, Lisp_Object *etime,$/;"	f	file:	signature:(HANDLE h_proc, Lisp_Object *ctime, Lisp_Object *etime, Lisp_Object *stime, Lisp_Object *utime, Lisp_Object *ttime, double *pcpu)
process_tool_bar_item	keyboard.c	/^process_tool_bar_item (Lisp_Object key, Lisp_Object def, Lisp_Object data, void *args)$/;"	f	file:	signature:(Lisp_Object key, Lisp_Object def, Lisp_Object data, void *args)
process_tool_bar_item	keyboard.c	/^static void process_tool_bar_item (Lisp_Object, Lisp_Object, Lisp_Object,$/;"	p	file:	signature:(Lisp_Object, Lisp_Object, Lisp_Object, void *)
PROCFS_FILE_OFFSET_BITS_HACK	sysdep.c	3320;"	d	file:
PROCFS_FILE_OFFSET_BITS_HACK	sysdep.c	3323;"	d	file:
procfs_get_total_memory	sysdep.c	/^procfs_get_total_memory (void)$/;"	f	file:	signature:(void)
procfs_ttyname	sysdep.c	/^procfs_ttyname (int rdev)$/;"	f	file:	signature:(int rdev)
procinfo	w32.h	/^  PROCESS_INFORMATION procinfo;$/;"	m	struct:_child_process	access:public
proc_buffered_char	process.c	/^static int proc_buffered_char[FD_SETSIZE];$/;"	v	file:
proc_decode_coding_system	process.c	/^static struct coding_system *proc_decode_coding_system[FD_SETSIZE];$/;"	v	typeref:struct:coding_system	file:
proc_encode_coding_system	process.c	/^static struct coding_system *proc_encode_coding_system[FD_SETSIZE];$/;"	v	typeref:struct:coding_system	file:
produced	ccl.h	/^  int produced;$/;"	m	struct:ccl_program	access:public
produced	coding.h	/^  ptrdiff_t produced, produced_char, consumed, consumed_char;$/;"	m	struct:coding_system	access:public
produced_char	coding.h	/^  ptrdiff_t produced, produced_char, consumed, consumed_char;$/;"	m	struct:coding_system	access:public
produce_annotation	coding.c	/^produce_annotation (struct coding_system *coding, ptrdiff_t pos)$/;"	f	file:	signature:(struct coding_system *coding, ptrdiff_t pos)
produce_chars	coding.c	/^produce_chars (struct coding_system *coding, Lisp_Object translation_table,$/;"	f	file:	signature:(struct coding_system *coding, Lisp_Object translation_table, bool last_block)
produce_charset	coding.c	/^produce_charset (struct coding_system *coding, int *charbuf, ptrdiff_t pos)$/;"	f	file:	signature:(struct coding_system *coding, int *charbuf, ptrdiff_t pos)
produce_composite_glyph	term.c	/^produce_composite_glyph (struct it *it)$/;"	f	file:	signature:(struct it *it)
produce_composite_glyph	term.c	/^static void produce_composite_glyph (struct it *);$/;"	p	file:	signature:(struct it *)
produce_composition	coding.c	/^produce_composition (struct coding_system *coding, int *charbuf, ptrdiff_t pos)$/;"	f	file:	signature:(struct coding_system *coding, int *charbuf, ptrdiff_t pos)
produce_glyphless_glyph	term.c	/^produce_glyphless_glyph (struct it *it, Lisp_Object acronym)$/;"	f	file:	signature:(struct it *it, Lisp_Object acronym)
produce_glyphless_glyph	term.c	/^static void produce_glyphless_glyph (struct it *, Lisp_Object);$/;"	p	file:	signature:(struct it *, Lisp_Object)
produce_glyphless_glyph	xdisp.c	/^produce_glyphless_glyph (struct it *it, bool for_no_font, Lisp_Object acronym)$/;"	f	file:	signature:(struct it *it, bool for_no_font, Lisp_Object acronym)
produce_glyphs	dispextern.h	/^  void (*produce_glyphs) (struct it *it);$/;"	m	struct:redisplay_interface	access:public
produce_glyphs	dispextern.h	/^extern void produce_glyphs (struct it *);$/;"	p	signature:(struct it *)
PRODUCE_GLYPHS	dispextern.h	2686;"	d
produce_glyphs	term.c	/^produce_glyphs (struct it *it)$/;"	f	signature:(struct it *it)
produce_image_glyph	xdisp.c	/^produce_image_glyph (struct it *it)$/;"	f	file:	signature:(struct it *it)
produce_special_glyphs	xdisp.c	/^produce_special_glyphs (struct it *it, enum display_element_type what)$/;"	f	file:	signature:(struct it *it, enum display_element_type what)
produce_special_glyphs	xdisp.c	/^static void produce_special_glyphs (struct it *, enum display_element_type);$/;"	p	file:	signature:(struct it *, enum display_element_type)
produce_stretch_glyph	dispextern.h	/^extern void produce_stretch_glyph (struct it *);$/;"	p	signature:(struct it *)
produce_stretch_glyph	xdisp.c	/^produce_stretch_glyph (struct it *it)$/;"	f	signature:(struct it *it)
produce_xwidget_glyph	xdisp.c	/^produce_xwidget_glyph (struct it *it)$/;"	f	file:	signature:(struct it *it)
profiler_cpu_running	profiler.c	/^  profiler_cpu_running;$/;"	v	typeref:enum:profiler_cpu_running	file:
profiler_cpu_running	profiler.c	/^static enum profiler_cpu_running$/;"	g	file:
PROFILER_CPU_SUPPORT	syssignal.h	53;"	d
profiler_log_size	globals.h	863;"	d
profiler_max_stack_depth	globals.h	865;"	d
profiler_memory_running	profiler.c	/^bool profiler_memory_running;$/;"	v
profiler_timer	profiler.c	/^static timer_t profiler_timer;$/;"	v	file:
profiler_timer_ok	profiler.c	/^static bool profiler_timer_ok;$/;"	v	file:
PROFILING_CFLAGS	Makefile	/^PROFILING_CFLAGS = $/;"	m
prof_itimer	w32proc.c	/^static struct itimer_data real_itimer, prof_itimer;$/;"	v	typeref:struct:	file:
prog	ccl.h	/^  Lisp_Object *prog;		\/* Pointer into the compiled code.  *\/$/;"	m	struct:ccl_program	access:public
prog_ignore	eval.c	/^prog_ignore (Lisp_Object body)$/;"	f	signature:(Lisp_Object body)
prog_ignore	lisp.h	/^extern void prog_ignore (Lisp_Object);$/;"	p	signature:(Lisp_Object)
prompt	coding.c	/^  (Lisp_Object prompt, Lisp_Object default_coding_system)$/;"	v
prompt	keyboard.c	/^  (Lisp_Object prompt, Lisp_Object continue_echo, Lisp_Object dont_downcase_last, Lisp_Object can_return_switch_frame, Lisp_Object cmd_loop)$/;"	v
prompt	lread.c	/^  (Lisp_Object prompt, Lisp_Object inherit_input_method, Lisp_Object seconds)$/;"	v
prompt	minibuf.c	/^  (Lisp_Object prompt, Lisp_Object collection, Lisp_Object predicate, Lisp_Object require_match, Lisp_Object initial_input, Lisp_Object hist, Lisp_Object def, Lisp_Object inherit_input_method)$/;"	v
prompt	minibuf.c	/^  (Lisp_Object prompt, Lisp_Object def, Lisp_Object require_match,$/;"	v
prompt	minibuf.c	/^  (Lisp_Object prompt, Lisp_Object default_value)$/;"	v
prompt	minibuf.c	/^  (Lisp_Object prompt, Lisp_Object initial, Lisp_Object inherit_input_method)$/;"	v
prompt	minibuf.c	/^  (Lisp_Object prompt, Lisp_Object initial_contents, Lisp_Object keymap, Lisp_Object read, Lisp_Object hist, Lisp_Object default_value, Lisp_Object inherit_input_method)$/;"	v
prompt	minibuf.c	/^  (Lisp_Object prompt, Lisp_Object initial_input, Lisp_Object history, Lisp_Object default_value, Lisp_Object inherit_input_method)$/;"	v
prompt	w32fns.c	/^  (Lisp_Object prompt, Lisp_Object dir, Lisp_Object default_filename, Lisp_Object mustmatch, Lisp_Object only_dir_p)$/;"	v
prompt	xfns.c	/^  (Lisp_Object prompt, Lisp_Object dir, Lisp_Object default_filename, Lisp_Object mustmatch, Lisp_Object only_dir_p)$/;"	v
prompt	xfns.c	/^  (Lisp_Object prompt, Lisp_Object dir, Lisp_Object default_filename,$/;"	v
prop	buffer.c	/^  (Lisp_Object overlay, Lisp_Object prop, Lisp_Object value)$/;"	v
prop	coding.c	/^  (Lisp_Object coding_system, Lisp_Object prop, Lisp_Object val)$/;"	v
prop	doc.c	/^  (Lisp_Object symbol, Lisp_Object prop, Lisp_Object raw)$/;"	v
prop	editfns.c	/^  (Lisp_Object position, register Lisp_Object prop, Lisp_Object object)$/;"	v
prop	font.c	/^  (Lisp_Object font, Lisp_Object prop, Lisp_Object val)$/;"	v
PROP	gtkutil.c	4536;"	d	file:
PROP	gtkutil.c	5072;"	d	file:
PROP	keyboard.c	8081;"	d	file:
PROP	keyboard.c	8348;"	d	file:
prop	textprop.c	/^  (Lisp_Object position, Lisp_Object prop, Lisp_Object object)$/;"	v
prop	textprop.c	/^  (Lisp_Object position, Lisp_Object prop, Lisp_Object object, Lisp_Object limit)$/;"	v
PROP	xdisp.c	12288;"	d	file:
PROP	xdisp.c	12403;"	d	file:
prop	xfns.c	/^  (Lisp_Object prop, Lisp_Object frame)$/;"	v
prop	xfns.c	/^  (Lisp_Object prop, Lisp_Object frame, Lisp_Object source)$/;"	v
prop	xfns.c	/^  (Lisp_Object prop, Lisp_Object frame, Lisp_Object type,$/;"	v
prop	xfns.c	/^  (Lisp_Object prop, Lisp_Object value, Lisp_Object frame,$/;"	v
propagate_buffer_redisplay	xdisp.c	/^propagate_buffer_redisplay (void)$/;"	f	file:	signature:(void)
properties	textprop.c	/^  (Lisp_Object start, Lisp_Object end, Lisp_Object properties, Lisp_Object object)$/;"	v
properties	textprop.c	/^  (Lisp_Object start, Lisp_Object end, Lisp_Object properties,$/;"	v
property	fns.c	/^  (Lisp_Object widget, Lisp_Object property, Lisp_Object value)$/;"	v
property	textprop.c	/^  (Lisp_Object start, Lisp_Object end, Lisp_Object property, Lisp_Object value, Lisp_Object object)$/;"	v
property	textprop.c	/^  (Lisp_Object start, Lisp_Object end, Lisp_Object property,$/;"	v
property	xselect.c	/^  Atom property;$/;"	m	struct:prop_location	file:	access:public
property	xselect.c	/^  Atom property;$/;"	m	struct:selection_data	file:	access:public
property	xterm.h	/^  Atom selection, target, property;$/;"	m	struct:selection_input_event	access:public
property_change_reply	xselect.c	/^static Lisp_Object property_change_reply;$/;"	v	file:
property_change_reply_object	xselect.c	/^static struct prop_location *property_change_reply_object;$/;"	v	typeref:struct:prop_location	file:
property_change_wait_list	xselect.c	/^static struct prop_location *property_change_wait_list;$/;"	v	typeref:struct:prop_location	file:
property_set_type	textprop.c	/^enum property_set_type$/;"	g	file:
property_value	textprop.c	/^property_value (Lisp_Object plist, Lisp_Object prop)$/;"	f	file:	signature:(Lisp_Object plist, Lisp_Object prop)
PropMotifWmHints	xfns.c	/^} PropMotifWmHints;$/;"	t	typeref:struct:__anon39	file:
props	font.h	/^  Lisp_Object props[FONT_ENTITY_MAX];$/;"	m	struct:font_entity	access:public
props	font.h	/^  Lisp_Object props[FONT_OBJECT_MAX];$/;"	m	struct:font	access:public
props	font.h	/^  Lisp_Object props[FONT_SPEC_MAX];$/;"	m	struct:font_spec	access:public
props	xdisp.c	/^struct props$/;"	s	file:
props::handler	xdisp.c	/^  enum prop_handled (*handler) (struct it *it);$/;"	m	struct:props	typeref:enum:props::handler	file:	access:public
props::idx	xdisp.c	/^  enum prop_idx idx;$/;"	m	struct:props	typeref:enum:props::prop_idx	file:	access:public
props::name	xdisp.c	/^  short name;$/;"	m	struct:props	file:	access:public
prop_handled	xdisp.c	/^enum prop_handled$/;"	g	file:
prop_idx	dispextern.h	/^enum prop_idx$/;"	g
prop_location	xselect.c	/^struct prop_location$/;"	s	file:
prop_location::arrived	xselect.c	/^  bool arrived;$/;"	m	struct:prop_location	file:	access:public
prop_location::desired_state	xselect.c	/^  int desired_state;$/;"	m	struct:prop_location	file:	access:public
prop_location::display	xselect.c	/^  Display *display;$/;"	m	struct:prop_location	file:	access:public
prop_location::identifier	xselect.c	/^  int identifier;$/;"	m	struct:prop_location	file:	access:public
prop_location::next	xselect.c	/^  struct prop_location *next;$/;"	m	struct:prop_location	typeref:struct:prop_location::prop_location	file:	access:public
prop_location::property	xselect.c	/^  Atom property;$/;"	m	struct:prop_location	file:	access:public
prop_location::window	xselect.c	/^  Window window;$/;"	m	struct:prop_location	file:	access:public
prop_location_identifier	xselect.c	/^static int prop_location_identifier;$/;"	v	file:
PROP_MATCH	font.c	1444;"	d	file:
PROP_MATCH	font.c	1466;"	d	file:
PROP_MATCH	font.c	1543;"	d	file:
PROP_MATCH	font.c	1576;"	d	file:
PROP_MOTIF_WM_HINTS_ELEMENTS	xfns.c	146;"	d	file:
PROP_SAVE	font.c	1546;"	d	file:
PROP_SAVE	font.c	1577;"	d	file:
protection	unexmacosx.c	/^  vm_prot_t protection;$/;"	m	struct:region_t	file:	access:public
protect_malloc_state	gmalloc.c	/^protect_malloc_state (int protect_p)$/;"	f	signature:(int protect_p)
PROTECT_MALLOC_STATE	gmalloc.c	406;"	d	file:
PROTECT_MALLOC_STATE	gmalloc.c	409;"	d	file:
PRTL_HEAP_COMMIT_ROUTINE	w32heap.c	/^typedef NTSTATUS (NTAPI *PRTL_HEAP_COMMIT_ROUTINE) ($/;"	t	file:
PRTL_HEAP_PARAMETERS	w32heap.c	/^} RTL_HEAP_PARAMETERS, *PRTL_HEAP_PARAMETERS;$/;"	t	typeref:struct:_RTL_HEAP_PARAMETERS	file:
ps	systime.h	/^  int lo, us, ps;$/;"	m	struct:lisp_time	access:public
pset_buffer	process.c	/^pset_buffer (struct Lisp_Process *p, Lisp_Object val)$/;"	f	file:	signature:(struct Lisp_Process *p, Lisp_Object val)
pset_childp	process.h	/^pset_childp (struct Lisp_Process *p, Lisp_Object val)$/;"	f	signature:(struct Lisp_Process *p, Lisp_Object val)
pset_command	process.c	/^pset_command (struct Lisp_Process *p, Lisp_Object val)$/;"	f	file:	signature:(struct Lisp_Process *p, Lisp_Object val)
pset_decode_coding_system	process.c	/^pset_decode_coding_system (struct Lisp_Process *p, Lisp_Object val)$/;"	f	file:	signature:(struct Lisp_Process *p, Lisp_Object val)
pset_decoding_buf	process.c	/^pset_decoding_buf (struct Lisp_Process *p, Lisp_Object val)$/;"	f	file:	signature:(struct Lisp_Process *p, Lisp_Object val)
pset_encode_coding_system	process.c	/^pset_encode_coding_system (struct Lisp_Process *p, Lisp_Object val)$/;"	f	file:	signature:(struct Lisp_Process *p, Lisp_Object val)
pset_encoding_buf	process.c	/^pset_encoding_buf (struct Lisp_Process *p, Lisp_Object val)$/;"	f	file:	signature:(struct Lisp_Process *p, Lisp_Object val)
pset_filter	process.c	/^pset_filter (struct Lisp_Process *p, Lisp_Object val)$/;"	f	file:	signature:(struct Lisp_Process *p, Lisp_Object val)
pset_gnutls_cred_type	process.h	/^pset_gnutls_cred_type (struct Lisp_Process *p, Lisp_Object val)$/;"	f	signature:(struct Lisp_Process *p, Lisp_Object val)
pset_log	process.c	/^pset_log (struct Lisp_Process *p, Lisp_Object val)$/;"	f	file:	signature:(struct Lisp_Process *p, Lisp_Object val)
pset_mark	process.c	/^pset_mark (struct Lisp_Process *p, Lisp_Object val)$/;"	f	file:	signature:(struct Lisp_Process *p, Lisp_Object val)
pset_name	process.c	/^pset_name (struct Lisp_Process *p, Lisp_Object val)$/;"	f	file:	signature:(struct Lisp_Process *p, Lisp_Object val)
pset_plist	process.c	/^pset_plist (struct Lisp_Process *p, Lisp_Object val)$/;"	f	file:	signature:(struct Lisp_Process *p, Lisp_Object val)
pset_sentinel	process.c	/^pset_sentinel (struct Lisp_Process *p, Lisp_Object val)$/;"	f	file:	signature:(struct Lisp_Process *p, Lisp_Object val)
pset_status	process.h	/^pset_status (struct Lisp_Process *p, Lisp_Object val)$/;"	f	signature:(struct Lisp_Process *p, Lisp_Object val)
pset_stderrproc	process.c	/^pset_stderrproc (struct Lisp_Process *p, Lisp_Object val)$/;"	f	file:	signature:(struct Lisp_Process *p, Lisp_Object val)
pset_thread	process.c	/^pset_thread (struct Lisp_Process *p, Lisp_Object val)$/;"	f	file:	signature:(struct Lisp_Process *p, Lisp_Object val)
pset_tty_name	process.c	/^pset_tty_name (struct Lisp_Process *p, Lisp_Object val)$/;"	f	file:	signature:(struct Lisp_Process *p, Lisp_Object val)
pset_type	process.c	/^pset_type (struct Lisp_Process *p, Lisp_Object val)$/;"	f	file:	signature:(struct Lisp_Process *p, Lisp_Object val)
pset_write_queue	process.c	/^pset_write_queue (struct Lisp_Process *p, Lisp_Object val)$/;"	f	file:	signature:(struct Lisp_Process *p, Lisp_Object val)
PSEUDOVECSIZE	lisp.h	1611;"	d
PSEUDOVECTORP	lisp.h	/^PSEUDOVECTORP (Lisp_Object a, int code)$/;"	f	signature:(Lisp_Object a, int code)
PSEUDOVECTOR_AREA_BITS	lisp.h	/^    PSEUDOVECTOR_AREA_BITS = PSEUDOVECTOR_SIZE_BITS + PSEUDOVECTOR_REST_BITS,$/;"	e	enum:More_Lisp_Bits
PSEUDOVECTOR_FLAG	lisp.h	829;"	d
PSEUDOVECTOR_REST_BITS	lisp.h	/^    PSEUDOVECTOR_REST_BITS = 12,$/;"	e	enum:More_Lisp_Bits
PSEUDOVECTOR_REST_MASK	lisp.h	/^    PSEUDOVECTOR_REST_MASK = (((1 << PSEUDOVECTOR_REST_BITS) - 1)$/;"	e	enum:More_Lisp_Bits
PSEUDOVECTOR_SIZE_BITS	lisp.h	/^    PSEUDOVECTOR_SIZE_BITS = 12,$/;"	e	enum:More_Lisp_Bits
PSEUDOVECTOR_SIZE_MASK	lisp.h	/^    PSEUDOVECTOR_SIZE_MASK = (1 << PSEUDOVECTOR_SIZE_BITS) - 1,$/;"	e	enum:More_Lisp_Bits
PSEUDOVECTOR_TYPE	lisp.h	/^PSEUDOVECTOR_TYPE (struct Lisp_Vector *v)$/;"	f	signature:(struct Lisp_Vector *v)
PSEUDOVECTOR_TYPEP	lisp.h	/^PSEUDOVECTOR_TYPEP (struct vectorlike_header *a, enum pvec_type code)$/;"	f	signature:(struct vectorlike_header *a, enum pvec_type code)
pseudo_window_p	window.h	/^    bool_bf pseudo_window_p : 1;$/;"	m	struct:window	access:public
PSize	nsgui.h	189;"	d
PSize	w32gui.h	107;"	d
pt	buffer.h	/^  ptrdiff_t pt;$/;"	m	struct:buffer	access:public
PT	buffer.h	47;"	d
pthread_sigmask	w32proc.c	/^pthread_sigmask (int how, const sigset_t *set, sigset_t *oset)$/;"	f	signature:(int how, const sigset_t *set, sigset_t *oset)
PTITLEBAR_INFO	w32fns.c	/^} TITLEBAR_INFO, *PTITLEBAR_INFO;$/;"	t	typeref:struct:__anon73	file:
ptr	termcap.c	/^    char *ptr;$/;"	m	struct:termcap_buffer	file:	access:public
ptrs	gtkutil.h	/^  xg_list_node  ptrs;$/;"	m	struct:xg_menu_cb_data_	access:public
ptrs	gtkutil.h	/^  xg_list_node  ptrs;$/;"	m	struct:xg_menu_item_cb_data_	access:public
PTR_BYTE_POS	buffer.h	354;"	d
ptr_in_unexec_regions	unexmacosx.c	/^ptr_in_unexec_regions (void *ptr)$/;"	f	signature:(void *ptr)
ptr_in_unexec_regions	unexmacosx.c	1307;"	d	file:
PTR_TO_OFFSET	regex.c	155;"	d	file:
PTR_TO_OFFSET	unexw32.c	319;"	d	file:
PTR_TO_RVA	unexw32.c	317;"	d	file:
pty_flag	process.h	/^    bool_bf pty_flag : 1;$/;"	m	struct:Lisp_Process	access:public
PTY_ITERATION	config.h	1487;"	d
PTY_NAME_SIZE	process.c	/^enum { PTY_NAME_SIZE = 24 };$/;"	e	enum:__anon47	file:
PTY_NAME_SPRINTF	config.h	1490;"	d
PTY_OPEN	config.h	1493;"	d
PTY_TTY_NAME_SPRINTF	config.h	1496;"	d
PT_ADDR	buffer.h	71;"	d
pt_byte	buffer.h	/^  ptrdiff_t pt_byte;$/;"	m	struct:buffer	access:public
PT_BYTE	buffer.h	48;"	d
pt_lnum	dispextern.h	/^  ptrdiff_t pt_lnum;$/;"	m	struct:it	access:public
PT_LOAD	unexelf.c	129;"	d	file:
pt_marker_	buffer.h	/^  Lisp_Object pt_marker_;$/;"	m	struct:buffer	access:public
PT_PER_INCH	font.h	541;"	d
pub	image.c	/^  struct jpeg_error_mgr pub;$/;"	m	struct:my_jpeg_error_mgr	typeref:struct:my_jpeg_error_mgr::jpeg_error_mgr	file:	access:public
pure	alloc.c	/^EMACS_INT pure[(PURESIZE + sizeof (EMACS_INT) - 1) \/ sizeof (EMACS_INT)] = {1,};$/;"	v
pure	lisp.h	/^  bool pure;$/;"	m	struct:Lisp_Hash_Table	access:public
purebeg	alloc.c	/^static char *purebeg;$/;"	v	file:
PUREBEG	alloc.c	266;"	d	file:
purecopy	alloc.c	/^purecopy (Lisp_Object obj)$/;"	f	file:	signature:(Lisp_Object obj)
purecopy	alloc.c	/^static Lisp_Object purecopy (Lisp_Object obj);$/;"	p	file:	signature:(Lisp_Object obj)
purecopy_hash_table	alloc.c	/^purecopy_hash_table (struct Lisp_Hash_Table *table)$/;"	f	file:	signature:(struct Lisp_Hash_Table *table)
PURESIZE	puresize.h	77;"	d
PURESIZE_CHECKING_RATIO	puresize.h	70;"	d
puresize_h_CHECK_IMPURE	puresize.h	99;"	d
puresize_h_PURE_P	puresize.h	88;"	d
PURESIZE_RATIO	puresize.h	57;"	d
pure_alloc	alloc.c	/^pure_alloc (size_t size, int type)$/;"	f	file:	signature:(size_t size, int type)
pure_alloc	alloc.c	/^static void *pure_alloc (size_t, int);$/;"	p	file:	signature:(size_t, int)
pure_bytes_used	globals.h	867;"	d
pure_bytes_used_before_overflow	alloc.c	/^static ptrdiff_t pure_bytes_used_before_overflow;$/;"	v	file:
pure_bytes_used_lisp	alloc.c	/^static ptrdiff_t pure_bytes_used_lisp;$/;"	v	file:
pure_bytes_used_non_lisp	alloc.c	/^static ptrdiff_t pure_bytes_used_non_lisp;$/;"	v	file:
pure_cons	alloc.c	/^pure_cons (Lisp_Object car, Lisp_Object cdr)$/;"	f	signature:(Lisp_Object car, Lisp_Object cdr)
pure_cons	lisp.h	/^extern Lisp_Object pure_cons (Lisp_Object, Lisp_Object);$/;"	p	signature:(Lisp_Object, Lisp_Object)
PURE_P	puresize.h	/^PURE_P (void *ptr)$/;"	f	signature:(void *ptr)
PURE_P	puresize.h	109;"	d
pure_size	alloc.c	/^static ptrdiff_t pure_size;$/;"	v	file:
pure_write_error	data.c	/^pure_write_error (Lisp_Object obj)$/;"	f	signature:(Lisp_Object obj)
pure_write_error	puresize.h	/^extern _Noreturn void pure_write_error (Lisp_Object);$/;"	p	signature:(Lisp_Object)
purpose	chartab.c	/^  (register Lisp_Object purpose, Lisp_Object init)$/;"	v
purpose	lisp.h	/^    Lisp_Object purpose;$/;"	m	struct:Lisp_Char_Table	access:public
PUSH	bytecode.c	298;"	d	file:
PUSH_BPA_STACK	bidi.c	2517;"	d	file:
PUSH_C_STR	keyboard.c	8496;"	d	file:
PUSH_FAILURE_INT	regex.c	1360;"	d	file:
PUSH_FAILURE_POINT	regex.c	1467;"	d	file:
PUSH_FAILURE_POINTER	regex.c	1354;"	d	file:
PUSH_FAILURE_REG	regex.c	1387;"	d	file:
push_frame_kboard	keyboard.h	/^extern void push_frame_kboard (struct frame *);$/;"	p	signature:(struct frame *)
push_handler	eval.c	/^push_handler (Lisp_Object tag_ch_val, enum handlertype handlertype)$/;"	f	signature:(Lisp_Object tag_ch_val, enum handlertype handlertype)
push_handler	lisp.h	/^extern struct handler *push_handler (Lisp_Object, enum handlertype);$/;"	p	signature:(Lisp_Object, enum handlertype)
push_handler_nosignal	eval.c	/^push_handler_nosignal (Lisp_Object tag_ch_val, enum handlertype handlertype)$/;"	f	signature:(Lisp_Object tag_ch_val, enum handlertype handlertype)
push_handler_nosignal	lisp.h	/^extern struct handler *push_handler_nosignal (Lisp_Object, enum handlertype);$/;"	p	signature:(Lisp_Object, enum handlertype)
push_it	xdisp.c	/^push_it (struct it *it, struct text_pos *position)$/;"	f	file:	signature:(struct it *it, struct text_pos *position)
push_it	xdisp.c	/^static void push_it (struct it *, struct text_pos *);$/;"	p	file:	signature:(struct it *, struct text_pos *)
push_kboard	keyboard.c	/^push_kboard (struct kboard *k)$/;"	f	signature:(struct kboard *k)
push_kboard	keyboard.h	/^extern void push_kboard (struct kboard *);$/;"	p	signature:(struct kboard *)
push_key_description	keymap.c	/^push_key_description (EMACS_INT ch, char *p)$/;"	f	signature:(EMACS_INT ch, char *p)
push_key_description	keymap.h	/^extern char *push_key_description (EMACS_INT, char *);$/;"	p	signature:(EMACS_INT, char *)
push_left_right_boundary	menu.c	/^push_left_right_boundary (void)$/;"	f	file:	signature:(void)
PUSH_MAPPING_STACK	ccl.c	593;"	d	file:
push_menu_item	menu.c	/^push_menu_item (Lisp_Object name, Lisp_Object enable, Lisp_Object key, Lisp_Object def, Lisp_Object equiv, Lisp_Object type, Lisp_Object selected, Lisp_Object help)$/;"	f	file:	signature:(Lisp_Object name, Lisp_Object enable, Lisp_Object key, Lisp_Object def, Lisp_Object equiv, Lisp_Object type, Lisp_Object selected, Lisp_Object help)
push_menu_pane	menu.c	/^push_menu_pane (Lisp_Object name, Lisp_Object prefix_vec)$/;"	f	file:	signature:(Lisp_Object name, Lisp_Object prefix_vec)
push_message	lisp.h	/^extern bool push_message (void);$/;"	p	signature:(void)
push_message	xdisp.c	/^push_message (void)$/;"	f	signature:(void)
push_named_merge_point	xfaces.c	/^push_named_merge_point (struct named_merge_point *new_named_merge_point,$/;"	f	file:	signature:(struct named_merge_point *new_named_merge_point, Lisp_Object face_name, enum named_merge_point_kind named_merge_point_kind, struct named_merge_point **named_merge_points)
PUSH_NUMBER	regex.c	1401;"	d	file:
push_prefix_prop	xdisp.c	/^push_prefix_prop (struct it *it, Lisp_Object prop)$/;"	f	file:	signature:(struct it *it, Lisp_Object prop)
push_submenu_end	menu.c	/^push_submenu_end (void)$/;"	f	file:	signature:(void)
push_submenu_start	menu.c	/^push_submenu_start (void)$/;"	f	file:	signature:(void)
push_text_char_description	keymap.c	/^push_text_char_description (register unsigned int c, register char *p)$/;"	f	file:	signature:(register unsigned int c, register char *p)
putchar_unlocked	sysstdio.h	74;"	d
putc_unlocked	sysstdio.h	71;"	d
PUT_ERROR	data.c	2779;"	d	file:
PVEC_BOOL_VECTOR	lisp.h	/^  PVEC_BOOL_VECTOR,$/;"	e	enum:pvec_type
PVEC_BUFFER	lisp.h	/^  PVEC_BUFFER,$/;"	e	enum:pvec_type
PVEC_CHAR_TABLE	lisp.h	/^  PVEC_CHAR_TABLE,$/;"	e	enum:pvec_type
PVEC_COMPILED	lisp.h	/^  PVEC_COMPILED,$/;"	e	enum:pvec_type
PVEC_CONDVAR	lisp.h	/^  PVEC_CONDVAR,$/;"	e	enum:pvec_type
PVEC_FONT	lisp.h	/^  PVEC_FONT \/* Should be last because it's used for range checking.  *\/$/;"	e	enum:pvec_type
PVEC_FRAME	lisp.h	/^  PVEC_FRAME,$/;"	e	enum:pvec_type
PVEC_FREE	lisp.h	/^  PVEC_FREE,$/;"	e	enum:pvec_type
PVEC_HASH_TABLE	lisp.h	/^  PVEC_HASH_TABLE,$/;"	e	enum:pvec_type
PVEC_MODULE_FUNCTION	lisp.h	/^  PVEC_MODULE_FUNCTION,$/;"	e	enum:pvec_type
PVEC_MUTEX	lisp.h	/^  PVEC_MUTEX,$/;"	e	enum:pvec_type
PVEC_NORMAL_VECTOR	lisp.h	/^  PVEC_NORMAL_VECTOR,$/;"	e	enum:pvec_type
PVEC_OTHER	lisp.h	/^  PVEC_OTHER,            \/* Should never be visible to Elisp code.  *\/$/;"	e	enum:pvec_type
PVEC_PROCESS	lisp.h	/^  PVEC_PROCESS,$/;"	e	enum:pvec_type
PVEC_RECORD	lisp.h	/^  PVEC_RECORD,$/;"	e	enum:pvec_type
PVEC_SUBR	lisp.h	/^  PVEC_SUBR,$/;"	e	enum:pvec_type
PVEC_SUB_CHAR_TABLE	lisp.h	/^  PVEC_SUB_CHAR_TABLE,$/;"	e	enum:pvec_type
PVEC_TERMINAL	lisp.h	/^  PVEC_TERMINAL,$/;"	e	enum:pvec_type
PVEC_THREAD	lisp.h	/^  PVEC_THREAD,$/;"	e	enum:pvec_type
pvec_type	alloc.c	/^  enum pvec_type pvec_type;$/;"	m	union:__anon13	typeref:enum:__anon13::pvec_type	file:	access:public
pvec_type	lisp.h	/^enum pvec_type$/;"	g
PVEC_TYPE_MASK	lisp.h	/^    PVEC_TYPE_MASK = 0x3f << PSEUDOVECTOR_AREA_BITS$/;"	e	enum:More_Lisp_Bits
PVEC_WINDOW	lisp.h	/^  PVEC_WINDOW,$/;"	e	enum:pvec_type
PVEC_WINDOW_CONFIGURATION	lisp.h	/^  PVEC_WINDOW_CONFIGURATION,$/;"	e	enum:pvec_type
PVEC_XWIDGET	lisp.h	/^  PVEC_XWIDGET,$/;"	e	enum:pvec_type
PVEC_XWIDGET_VIEW	lisp.h	/^  PVEC_XWIDGET_VIEW,$/;"	e	enum:pvec_type
PVSIZE	lisp.h	/^PVSIZE (Lisp_Object pv)$/;"	f	signature:(Lisp_Object pv)
pWideCharToMultiByte	w32.c	/^int (WINAPI *pWideCharToMultiByte)(UINT,DWORD,LPCWSTR,int,LPSTR,int,LPCSTR,LPBOOL);$/;"	v
PWinGravity	nsgui.h	195;"	d
PWinGravity	w32gui.h	113;"	d
q	lisp.h	/^  unsigned short int q;$/;"	m	struct:for_each_tail_internal	access:public
Qabove	globals.h	6120;"	d
Qabove_handle	globals.h	6121;"	d
Qabove_suspended	globals.h	6122;"	d
Qaccess	globals.h	6123;"	d
Qaccess_file	globals.h	6124;"	d
Qactivate_input_method	globals.h	6125;"	d
Qactivate_menubar_hook	globals.h	6126;"	d
Qadd_name_to_file	globals.h	6127;"	d
Qadjust_frame_size_1	globals.h	6128;"	d
Qadjust_frame_size_2	globals.h	6129;"	d
Qadjust_frame_size_3	globals.h	6130;"	d
Qafter_change_functions	globals.h	6131;"	d
Qafter_handle	globals.h	6132;"	d
Qafter_insert_file_set_coding	globals.h	6133;"	d
Qafter_string	globals.h	6134;"	d
Qall_events	globals.h	6135;"	d
Qalpha	globals.h	6136;"	d
Qalt	globals.h	6137;"	d
Qand_optional	globals.h	6138;"	d
Qand_rest	globals.h	6139;"	d
QANSICP	w32select.c	/^static Lisp_Object QANSICP, QOEMCP;$/;"	v	file:
Qappend	globals.h	6140;"	d
Qapply	globals.h	6141;"	d
Qargs	globals.h	6142;"	d
Qargs_out_of_range	globals.h	6143;"	d
Qarith_error	globals.h	6144;"	d
Qarrayp	globals.h	6145;"	d
Qarrow	globals.h	6146;"	d
Qascii	globals.h	6147;"	d
Qascii_0	globals.h	6148;"	d
Qascii_character	globals.h	6149;"	d
Qassq_delete_all	globals.h	6150;"	d
QATOM	globals.h	5936;"	d
Qattrib	globals.h	6151;"	d
Qautoload	globals.h	6158;"	d
QAutomatic_GC	globals.h	5937;"	d
Qauto_composed	globals.h	6152;"	d
Qauto_fill_chars	globals.h	6153;"	d
Qauto_hscroll_mode	globals.h	6154;"	d
Qauto_lower	globals.h	6155;"	d
Qauto_raise	globals.h	6156;"	d
Qauto_save_coding	globals.h	6157;"	d
Qbackground_color	globals.h	6159;"	d
Qbackground_mode	globals.h	6160;"	d
Qbackquote	globals.h	6161;"	d
Qbar	globals.h	6162;"	d
Qbefore_change_functions	globals.h	6163;"	d
Qbefore_handle	globals.h	6164;"	d
Qbefore_string	globals.h	6165;"	d
Qbeginning_of_buffer	globals.h	6166;"	d
Qbelow	globals.h	6167;"	d
Qbelow_handle	globals.h	6168;"	d
Qbig	globals.h	6169;"	d
Qbig5	globals.h	6170;"	d
Qbitmap_spec_p	globals.h	6171;"	d
Qbold	globals.h	6172;"	d
Qbool_vector	globals.h	6173;"	d
Qbool_vector_p	globals.h	6174;"	d
Qborder	globals.h	6175;"	d
Qborder_color	globals.h	6176;"	d
Qborder_width	globals.h	6177;"	d
Qboth	globals.h	6178;"	d
Qboth_horiz	globals.h	6179;"	d
Qbottom	globals.h	6180;"	d
Qbottom_divider	globals.h	6181;"	d
Qbottom_divider_width	globals.h	6182;"	d
Qbottom_edge	globals.h	6183;"	d
Qbottom_left_corner	globals.h	6184;"	d
Qbottom_margin	globals.h	6185;"	d
Qbottom_right_corner	globals.h	6186;"	d
Qboundary	globals.h	6187;"	d
Qbox	globals.h	6188;"	d
Qbuffer	globals.h	6189;"	d
Qbufferp	globals.h	6199;"	d
Qbuffers	globals.h	6200;"	d
Qbuffer_access_fontify_functions	globals.h	6190;"	d
Qbuffer_file_coding_system	globals.h	6191;"	d
Qbuffer_list	globals.h	6192;"	d
Qbuffer_list_update_hook	globals.h	6193;"	d
Qbuffer_name_history	globals.h	6194;"	d
Qbuffer_or_string_p	globals.h	6195;"	d
Qbuffer_position	globals.h	6196;"	d
Qbuffer_predicate	globals.h	6197;"	d
Qbuffer_read_only	globals.h	6198;"	d
Qburied_buffer_list	globals.h	6201;"	d
Qbyte_code_meter	globals.h	6202;"	d
Qc	globals.h	6203;"	d
QCadstyle	globals.h	5941;"	d
QCadvertised_binding	globals.h	5942;"	d
QCalign_to	globals.h	5943;"	d
Qcall_process	globals.h	6204;"	d
Qcall_process_region	globals.h	6205;"	d
Qcancel_timer	globals.h	6206;"	d
QCantialias	globals.h	5944;"	d
QCarray	globals.h	5945;"	d
Qcar_less_than_car	globals.h	6207;"	d
QCascent	globals.h	5946;"	d
QCascii_compatible_p	globals.h	5947;"	d
Qcase_fold_search	globals.h	6208;"	d
Qcase_table	globals.h	6209;"	d
Qcase_table_p	globals.h	6210;"	d
Qcategory	globals.h	6211;"	d
Qcategoryp	globals.h	6214;"	d
Qcategorysetp	globals.h	6215;"	d
Qcategory_table	globals.h	6212;"	d
Qcategory_table_p	globals.h	6213;"	d
QCautohint	globals.h	5948;"	d
QCavgwidth	globals.h	5949;"	d
QCbackground	globals.h	5950;"	d
QCbold	globals.h	5951;"	d
QCboolean	globals.h	5952;"	d
QCbox	globals.h	5953;"	d
QCbuffer	globals.h	5954;"	d
QCbutton	globals.h	5955;"	d
QCbyte	globals.h	5956;"	d
QCbytesize	globals.h	5957;"	d
QCcategory	globals.h	5958;"	d
Qccl	globals.h	6216;"	d
Qcclp	globals.h	6218;"	d
Qccl_program_idx	globals.h	6217;"	d
QCcoding	globals.h	5959;"	d
QCcolor	globals.h	5960;"	d
QCcolor_adjustment	globals.h	5961;"	d
QCcolor_symbols	globals.h	5962;"	d
QCcombining_capability	globals.h	5963;"	d
QCcommand	globals.h	5964;"	d
QCcomplete_negotiation	globals.h	5965;"	d
QCconnection_type	globals.h	5966;"	d
QCconversion	globals.h	5967;"	d
QCcrlfiles	globals.h	5968;"	d
QCcrop	globals.h	5969;"	d
QCdata	globals.h	5970;"	d
QCdebug_on_exit	globals.h	5971;"	d
QCdecode_translation_table	globals.h	5972;"	d
QCdefault_char	globals.h	5973;"	d
QCdevice	globals.h	5974;"	d
QCdict_entry	globals.h	5975;"	d
QCdistant_foreground	globals.h	5976;"	d
QCdocumentation	globals.h	5977;"	d
QCdouble	globals.h	5978;"	d
QCdpi	globals.h	5979;"	d
Qcdr	globals.h	6219;"	d
Qceiling	globals.h	6220;"	d
QCembolden	globals.h	5980;"	d
QCenable	globals.h	5981;"	d
QCencode_translation_table	globals.h	5982;"	d
Qcenter	globals.h	6221;"	d
QCeval	globals.h	5983;"	d
QCfamily	globals.h	5984;"	d
QCfile	globals.h	5985;"	d
QCfilter	globals.h	5986;"	d
QCflowcontrol	globals.h	5987;"	d
QCfont	globals.h	5988;"	d
QCfontset	globals.h	5990;"	d
QCfont_entity	globals.h	5989;"	d
QCforeground	globals.h	5991;"	d
QCfoundry	globals.h	5992;"	d
Qchange_frame_size	globals.h	6222;"	d
Qchange_major_mode_hook	globals.h	6223;"	d
Qchar	globals.h	6224;"	d
Qcharacterp	globals.h	6232;"	d
Qcharset	globals.h	6233;"	d
Qcharsetp	globals.h	6234;"	d
Qchar_code_property_table	globals.h	6225;"	d
Qchar_from_name	globals.h	6226;"	d
Qchar_or_string_p	globals.h	6227;"	d
Qchar_script_table	globals.h	6228;"	d
Qchar_table	globals.h	6229;"	d
Qchar_table_extra_slots	globals.h	6230;"	d
Qchar_table_p	globals.h	6231;"	d
QCheight	globals.h	5993;"	d
QChelp	globals.h	5994;"	d
QCheuristic_mask	globals.h	5995;"	d
QChinting	globals.h	5996;"	d
QChintstyle	globals.h	5997;"	d
Qchoice	globals.h	6235;"	d
QChost	globals.h	5998;"	d
QChostname	globals.h	5999;"	d
QCignore_defface	globals.h	6000;"	d
QCimage	globals.h	6001;"	d
QCindex	globals.h	6002;"	d
QCinherit	globals.h	6003;"	d
QCint16	globals.h	6004;"	d
QCint32	globals.h	6005;"	d
QCint64	globals.h	6006;"	d
QCinverse_video	globals.h	6007;"	d
Qcircle	globals.h	6236;"	d
Qcircular_list	globals.h	6237;"	d
QCitalic	globals.h	6008;"	d
QCkeylist	globals.h	6010;"	d
QCkeys	globals.h	6011;"	d
QCkey_sequence	globals.h	6009;"	d
QClabel	globals.h	6012;"	d
QClang	globals.h	6013;"	d
QClcdfilter	globals.h	6014;"	d
QCline_width	globals.h	6015;"	d
QCLIPBOARD	globals.h	5938;"	d
QCLIPBOARD_MANAGER	globals.h	5939;"	d
QCloader	globals.h	6016;"	d
QClocal	globals.h	6017;"	d
QClog	globals.h	6018;"	d
QCloglevel	globals.h	6019;"	d
Qclone_of	globals.h	6238;"	d
Qclose	globals.h	6239;"	d
Qclosed	globals.h	6242;"	d
Qclose_nowrite	globals.h	6240;"	d
Qclose_write	globals.h	6241;"	d
Qclosure	globals.h	6243;"	d
Qcmajflt	globals.h	6244;"	d
QCmap	globals.h	6020;"	d
QCmargin	globals.h	6021;"	d
QCmask	globals.h	6022;"	d
QCmatrix	globals.h	6023;"	d
QCmax_height	globals.h	6024;"	d
QCmax_width	globals.h	6025;"	d
QCmethod	globals.h	6026;"	d
Qcminflt	globals.h	6245;"	d
QCmin_prime_bits	globals.h	6027;"	d
QCmnemonic	globals.h	6028;"	d
QCname	globals.h	6029;"	d
QCnoquery	globals.h	6030;"	d
QCnowait	globals.h	6031;"	d
QCobject_path	globals.h	6032;"	d
Qcodeset	globals.h	6248;"	d
Qcode_conversion_map	globals.h	6246;"	d
Qcode_conversion_map_id	globals.h	6247;"	d
Qcoding_system_define_form	globals.h	6249;"	d
Qcoding_system_error	globals.h	6250;"	d
Qcoding_system_history	globals.h	6251;"	d
Qcoding_system_p	globals.h	6252;"	d
Qcomm	globals.h	6253;"	d
Qcomma	globals.h	6254;"	d
Qcommandp	globals.h	6259;"	d
Qcommand_debug_status	globals.h	6257;"	d
Qcommand_execute	globals.h	6258;"	d
Qcomma_at	globals.h	6255;"	d
Qcomma_dot	globals.h	6256;"	d
Qcomment_end_can_be_escaped	globals.h	6260;"	d
Qcompiled_function	globals.h	6261;"	d
Qcompletion_ignore_case	globals.h	6262;"	d
Qcomposition	globals.h	6263;"	d
QCOMPOUND_TEXT	globals.h	5940;"	d
Qcompound_text	globals.h	6264;"	d
Qcondition_variable	globals.h	6265;"	d
Qcondition_variable_p	globals.h	6266;"	d
Qconfig_changed_event	globals.h	6267;"	d
Qconnect	globals.h	6268;"	d
Qcons	globals.h	6269;"	d
Qconses	globals.h	6270;"	d
Qconsp	globals.h	6271;"	d
Qcontinuation	globals.h	6272;"	d
Qcopy_directory	globals.h	6273;"	d
Qcopy_file	globals.h	6274;"	d
QCotf	globals.h	6033;"	d
Qcount	globals.h	6275;"	d
QCoverline	globals.h	6034;"	d
QCparity	globals.h	6035;"	d
QCplist	globals.h	6036;"	d
QCpointer	globals.h	6037;"	d
QCport	globals.h	6038;"	d
QCpost_read_conversion	globals.h	6039;"	d
QCpre_write_conversion	globals.h	6040;"	d
QCpriority	globals.h	6041;"	d
QCprocess	globals.h	6042;"	d
QCpropertize	globals.h	6043;"	d
QCpt_height	globals.h	6044;"	d
QCpt_width	globals.h	6045;"	d
QCpurecopy	globals.h	6046;"	d
QCradio	globals.h	6047;"	d
Qcreate	globals.h	6276;"	d
QCregistry	globals.h	6048;"	d
QCrehash_size	globals.h	6049;"	d
QCrehash_threshold	globals.h	6050;"	d
QCrelative_height	globals.h	6051;"	d
QCrelative_width	globals.h	6052;"	d
QCrelief	globals.h	6053;"	d
QCremote	globals.h	6054;"	d
QCreverse_video	globals.h	6055;"	d
QCrgba	globals.h	6056;"	d
QCrotation	globals.h	6057;"	d
QCrtl	globals.h	6058;"	d
QCscalable	globals.h	6059;"	d
QCscale	globals.h	6060;"	d
QCscript	globals.h	6061;"	d
QCsentinel	globals.h	6062;"	d
QCserial	globals.h	6063;"	d
QCserver	globals.h	6064;"	d
QCservice	globals.h	6065;"	d
QCsession	globals.h	6066;"	d
QCsignal	globals.h	6067;"	d
QCsignature	globals.h	6068;"	d
QCsize	globals.h	6069;"	d
QCslant	globals.h	6070;"	d
QCspacing	globals.h	6071;"	d
QCspeed	globals.h	6072;"	d
QCstderr	globals.h	6073;"	d
Qcstime	globals.h	6277;"	d
QCstipple	globals.h	6074;"	d
QCstop	globals.h	6075;"	d
QCstopbits	globals.h	6076;"	d
QCstrike_through	globals.h	6077;"	d
QCstring	globals.h	6078;"	d
QCstruct	globals.h	6079;"	d
QCstyle	globals.h	6080;"	d
QCsummary	globals.h	6081;"	d
QCsystem	globals.h	6082;"	d
QCtest	globals.h	6083;"	d
Qctime	globals.h	6278;"	d
QCtimeout	globals.h	6084;"	d
QCtls_parameters	globals.h	6085;"	d
QCtoggle	globals.h	6086;"	d
Qctrl	globals.h	6279;"	d
QCtrustfiles	globals.h	6087;"	d
QCtype	globals.h	6088;"	d
QCuint16	globals.h	6089;"	d
QCuint32	globals.h	6090;"	d
QCuint64	globals.h	6091;"	d
QCunderline	globals.h	6092;"	d
QCunix_fd	globals.h	6093;"	d
Qcurrent_input_method	globals.h	6280;"	d
Qcurrent_line	globals.h	6281;"	d
Qcurrent_load_list	globals.h	6282;"	d
Qcursor	globals.h	6283;"	d
Qcursor_color	globals.h	6284;"	d
Qcursor_in_echo_area	globals.h	6285;"	d
Qcursor_type	globals.h	6286;"	d
QCuser_spec	globals.h	6095;"	d
QCuse_external_socket	globals.h	6094;"	d
Qcustom_variable_p	globals.h	6287;"	d
Qcutime	globals.h	6288;"	d
QCvariant	globals.h	6096;"	d
QCverify_error	globals.h	6097;"	d
QCverify_flags	globals.h	6098;"	d
QCvert_only	globals.h	6099;"	d
QCvisible	globals.h	6100;"	d
QCvolume	globals.h	6101;"	d
QCweakness	globals.h	6102;"	d
QCweight	globals.h	6103;"	d
QCwidth	globals.h	6104;"	d
Qcyclic_function_indirection	globals.h	6289;"	d
Qcyclic_variable_indirection	globals.h	6290;"	d
Qd	globals.h	6291;"	d
Qdata	globals.h	6292;"	d
Qdatagram	globals.h	6293;"	d
Qdays	globals.h	6294;"	d
Qdbus_error	globals.h	6295;"	d
Qdbus_event	globals.h	6296;"	d
Qdbus_message_internal	globals.h	6297;"	d
Qdeactivate_mark	globals.h	6298;"	d
Qdebug	globals.h	6299;"	d
Qdebug_on_next_call	globals.h	6300;"	d
Qdecomposed_characters	globals.h	6301;"	d
Qdefalias_fset_function	globals.h	6302;"	d
Qdefault	globals.h	6303;"	d
Qdefault_directory	globals.h	6304;"	d
Qdeferred_action_function	globals.h	6305;"	d
Qdefun	globals.h	6306;"	d
Qdefvaralias	globals.h	6307;"	d
Qdelay	globals.h	6308;"	d
Qdelayed_warnings_hook	globals.h	6309;"	d
QDELETE	globals.h	6105;"	d
Qdelete	globals.h	6310;"	d
Qdelete_before	globals.h	6311;"	d
Qdelete_by_moving_to_trash	globals.h	6312;"	d
Qdelete_directory	globals.h	6313;"	d
Qdelete_file	globals.h	6314;"	d
Qdelete_frame	globals.h	6315;"	d
Qdelete_frame_functions	globals.h	6316;"	d
Qdelete_self	globals.h	6317;"	d
Qdelete_terminal_functions	globals.h	6318;"	d
Qdelete_window	globals.h	6319;"	d
Qdirectory_files	globals.h	6322;"	d
Qdirectory_files_and_attributes	globals.h	6323;"	d
Qdirectory_file_name	globals.h	6321;"	d
Qdir_ok	globals.h	6320;"	d
Qdisabled	globals.h	6324;"	d
Qdisplay	globals.h	6325;"	d
Qdisplay_buffer	globals.h	6326;"	d
Qdisplay_line_numbers	globals.h	6327;"	d
Qdisplay_line_numbers_disable	globals.h	6328;"	d
Qdisplay_line_numbers_widen	globals.h	6329;"	d
Qdisplay_line_numbers_width	globals.h	6330;"	d
Qdisplay_monitor_attributes_list	globals.h	6331;"	d
Qdisplay_table	globals.h	6332;"	d
Qdisplay_type	globals.h	6333;"	d
Qdomain_error	globals.h	6335;"	d
Qdont_follow	globals.h	6336;"	d
Qdos	globals.h	6337;"	d
Qdown	globals.h	6338;"	d
Qdo_after_load_evaluation	globals.h	6334;"	d
Qdragging	globals.h	6341;"	d
Qdrag_internal_border	globals.h	6339;"	d
Qdrag_n_drop	globals.h	6340;"	d
Qecho_area_clear_hook	globals.h	6342;"	d
Qecho_keystrokes	globals.h	6343;"	d
Qedge_detection	globals.h	6344;"	d
Qegid	globals.h	6345;"	d
Qeight_bit	globals.h	6346;"	d
Qemacs	globals.h	6347;"	d
QEmacsFrameResize	globals.h	6106;"	d
Qemacs_mule	globals.h	6348;"	d
Qemboss	globals.h	6349;"	d
Qempty_box	globals.h	6350;"	d
Qempty_line	globals.h	6351;"	d
Qenable_recursive_minibuffers	globals.h	6352;"	d
Qend_of_buffer	globals.h	6353;"	d
Qend_of_file	globals.h	6354;"	d
Qend_scroll	globals.h	6355;"	d
Qend_session	globals.h	6356;"	d
Qeq	globals.h	6357;"	d
Qeql	globals.h	6358;"	d
Qequal	globals.h	6359;"	d
Qerror	globals.h	6360;"	d
Qerror_conditions	globals.h	6361;"	d
Qerror_message	globals.h	6362;"	d
Qescape_glyph	globals.h	6363;"	d
Qetime	globals.h	6364;"	d
Qeuid	globals.h	6365;"	d
Qeval	globals.h	6366;"	d
Qeval_buffer_list	globals.h	6367;"	d
Qevaporate	globals.h	6368;"	d
Qeven	globals.h	6369;"	d
Qevent_kind	globals.h	6370;"	d
Qevent_symbol_elements	globals.h	6372;"	d
Qevent_symbol_element_mask	globals.h	6371;"	d
Qexcl	globals.h	6373;"	d
Qexit	globals.h	6374;"	d
Qexpand_abbrev	globals.h	6375;"	d
Qexpand_file_name	globals.h	6376;"	d
Qexplicit	globals.h	6377;"	d
Qexplicit_name	globals.h	6378;"	d
Qextension_data	globals.h	6379;"	d
Qexternal_border_size	globals.h	6380;"	d
Qexternal_debugging_output	globals.h	6381;"	d
Qextra_bold	globals.h	6382;"	d
Qextra_light	globals.h	6383;"	d
Qface	globals.h	6384;"	d
Qface_alias	globals.h	6385;"	d
Qface_no_inherit	globals.h	6386;"	d
Qface_set_after_frame_default	globals.h	6387;"	d
Qfailed	globals.h	6388;"	d
Qfboundp	globals.h	6389;"	d
Qfeatures	globals.h	6390;"	d
Qfield	globals.h	6391;"	d
Qfile_accessible_directory_p	globals.h	6392;"	d
Qfile_acl	globals.h	6393;"	d
Qfile_already_exists	globals.h	6394;"	d
Qfile_attributes	globals.h	6395;"	d
Qfile_attributes_lessp	globals.h	6396;"	d
Qfile_date_error	globals.h	6397;"	d
Qfile_directory_p	globals.h	6398;"	d
Qfile_error	globals.h	6399;"	d
Qfile_executable_p	globals.h	6400;"	d
Qfile_exists_p	globals.h	6401;"	d
Qfile_missing	globals.h	6402;"	d
Qfile_modes	globals.h	6403;"	d
Qfile_name_all_completions	globals.h	6404;"	d
Qfile_name_as_directory	globals.h	6405;"	d
Qfile_name_case_insensitive_p	globals.h	6406;"	d
Qfile_name_completion	globals.h	6407;"	d
Qfile_name_directory	globals.h	6408;"	d
Qfile_name_handler_alist	globals.h	6409;"	d
Qfile_name_history	globals.h	6410;"	d
Qfile_name_nondirectory	globals.h	6411;"	d
Qfile_newer_than_file_p	globals.h	6412;"	d
Qfile_notify	globals.h	6413;"	d
Qfile_notify_error	globals.h	6414;"	d
Qfile_readable_p	globals.h	6415;"	d
Qfile_regular_p	globals.h	6416;"	d
Qfile_selinux_context	globals.h	6417;"	d
Qfile_symlink_p	globals.h	6418;"	d
Qfile_truename	globals.h	6419;"	d
Qfile_writable_p	globals.h	6420;"	d
Qfinalizer	globals.h	6421;"	d
Qfirst_change_hook	globals.h	6422;"	d
Qfloat	globals.h	6423;"	d
Qfloatp	globals.h	6424;"	d
Qfloats	globals.h	6425;"	d
Qfloor	globals.h	6426;"	d
Qfocus_in	globals.h	6427;"	d
Qfocus_out	globals.h	6428;"	d
Qfont	globals.h	6429;"	d
Qfontification_functions	globals.h	6437;"	d
Qfontified	globals.h	6438;"	d
Qfontset	globals.h	6439;"	d
Qfontset_info	globals.h	6440;"	d
Qfont_backend	globals.h	6430;"	d
Qfont_entity	globals.h	6431;"	d
Qfont_name	globals.h	6432;"	d
Qfont_object	globals.h	6433;"	d
Qfont_parameter	globals.h	6434;"	d
Qfont_render	globals.h	6435;"	d
Qfont_spec	globals.h	6436;"	d
Qforeground_color	globals.h	6441;"	d
Qforeign_selection	globals.h	6442;"	d
Qformat	globals.h	6443;"	d
Qformat_annotate_function	globals.h	6444;"	d
Qformat_decode	globals.h	6445;"	d
Qfraction	globals.h	6446;"	d
Qframe	globals.h	6447;"	d
Qframep	globals.h	6454;"	d
Qframes	globals.h	6455;"	d
Qframe_edges	globals.h	6448;"	d
Qframe_inhibit_resize	globals.h	6449;"	d
Qframe_live_p	globals.h	6450;"	d
Qframe_monitor_workarea	globals.h	6451;"	d
Qframe_set_background_mode	globals.h	6452;"	d
Qframe_windows_min_size	globals.h	6453;"	d
Qfreetype	globals.h	6459;"	d
Qfree_frame_menubar_1	globals.h	6456;"	d
Qfree_frame_menubar_2	globals.h	6457;"	d
Qfree_frame_tool_bar	globals.h	6458;"	d
Qfringe	globals.h	6460;"	d
Qfront_sticky	globals.h	6461;"	d
Qftx	globals.h	6462;"	d
Qfullboth	globals.h	6463;"	d
Qfullheight	globals.h	6464;"	d
Qfullscreen	globals.h	6465;"	d
Qfullwidth	globals.h	6466;"	d
Qfuncall	globals.h	6467;"	d
Qfuncall_interactively	globals.h	6468;"	d
Qfunction	globals.h	6469;"	d
Qfunction_documentation	globals.h	6470;"	d
Qfunction_key	globals.h	6471;"	d
Qfundamental_mode	globals.h	6472;"	d
Qgc_cons_threshold	globals.h	6473;"	d
Qgdk_pixbuf	globals.h	6474;"	d
Qgeometry	globals.h	6475;"	d
Qget_buffer_window_list	globals.h	6476;"	d
Qget_emacs_mule_file_char	globals.h	6477;"	d
Qget_file_buffer	globals.h	6478;"	d
Qget_file_char	globals.h	6479;"	d
Qget_mru_window	globals.h	6480;"	d
Qgif	globals.h	6481;"	d
Qglib	globals.h	6482;"	d
Qglyphless_char	globals.h	6483;"	d
Qglyphless_char_display	globals.h	6484;"	d
Qgnutls_anon	globals.h	6485;"	d
Qgnutls_code	globals.h	6486;"	d
Qgnutls_e_again	globals.h	6487;"	d
Qgnutls_e_interrupted	globals.h	6488;"	d
Qgnutls_e_invalid_session	globals.h	6489;"	d
Qgnutls_e_not_ready_for_handshake	globals.h	6490;"	d
Qgnutls_x509pki	globals.h	6491;"	d
Qgobject	globals.h	6492;"	d
Qgrave	globals.h	6493;"	d
Qgroup	globals.h	6494;"	d
Qgrow_only	globals.h	6495;"	d
Qgui_set_selection	globals.h	6496;"	d
Qhand	globals.h	6497;"	d
Qhandle	globals.h	6498;"	d
Qhandle_select_window	globals.h	6499;"	d
Qhandle_shift_selection	globals.h	6500;"	d
Qhandle_switch_frame	globals.h	6501;"	d
Qhash_table	globals.h	6502;"	d
Qhash_table_p	globals.h	6503;"	d
Qhash_table_test	globals.h	6504;"	d
Qhbar	globals.h	6505;"	d
Qheader_line	globals.h	6506;"	d
Qheader_line_format	globals.h	6507;"	d
Qheap	globals.h	6508;"	d
Qheight	globals.h	6509;"	d
Qheight_only	globals.h	6510;"	d
Qhelp_echo	globals.h	6511;"	d
Qhelp_form_show	globals.h	6512;"	d
Qheuristic	globals.h	6513;"	d
Qhex_code	globals.h	6514;"	d
Qhistory_length	globals.h	6515;"	d
Qhollow	globals.h	6516;"	d
Qhollow_small	globals.h	6517;"	d
Qhorizontal_handle	globals.h	6518;"	d
Qhorizontal_scroll_bar	globals.h	6519;"	d
Qhorizontal_scroll_bars	globals.h	6520;"	d
Qhw	globals.h	6521;"	d
Qhyper	globals.h	6522;"	d
Qicon	globals.h	6523;"	d
Qiconify_frame	globals.h	6528;"	d
Qicon_left	globals.h	6524;"	d
Qicon_name	globals.h	6525;"	d
Qicon_top	globals.h	6526;"	d
Qicon_type	globals.h	6527;"	d
Qidentity	globals.h	6529;"	d
Qif	globals.h	6530;"	d
Qignored	globals.h	6531;"	d
Qimage	globals.h	6532;"	d
Qimagemagick	globals.h	6533;"	d
QINCR	globals.h	6107;"	d
Qinhibit_changing_match_data	globals.h	6534;"	d
Qinhibit_debugger	globals.h	6535;"	d
Qinhibit_double_buffering	globals.h	6536;"	d
Qinhibit_eval_during_redisplay	globals.h	6537;"	d
Qinhibit_file_name_operation	globals.h	6538;"	d
Qinhibit_free_realized_faces	globals.h	6539;"	d
Qinhibit_menubar_update	globals.h	6540;"	d
Qinhibit_modification_hooks	globals.h	6541;"	d
Qinhibit_point_motion_hooks	globals.h	6542;"	d
Qinhibit_quit	globals.h	6543;"	d
Qinhibit_read_only	globals.h	6544;"	d
Qinhibit_redisplay	globals.h	6545;"	d
Qinner_edges	globals.h	6546;"	d
Qinput_method_exit_on_first_char	globals.h	6547;"	d
Qinput_method_use_echo_area	globals.h	6548;"	d
Qinsert_behind_hooks	globals.h	6549;"	d
Qinsert_file_contents	globals.h	6550;"	d
Qinsert_in_front_hooks	globals.h	6551;"	d
Qinsufficient_source	globals.h	6552;"	d
Qintangible	globals.h	6553;"	d
QINTEGER	globals.h	6108;"	d
Qinteger	globals.h	6554;"	d
Qintegerp	globals.h	6556;"	d
Qinteger_or_marker_p	globals.h	6555;"	d
Qinteractive	globals.h	6557;"	d
Qinteractive_form	globals.h	6558;"	d
Qinternal_border	globals.h	6560;"	d
Qinternal_border_width	globals.h	6561;"	d
Qinternal_default_process_filter	globals.h	6562;"	d
Qinternal_default_process_sentinel	globals.h	6563;"	d
Qinternal_echo_keystrokes_prefix	globals.h	6564;"	d
Qinternal_interpreter_environment	globals.h	6565;"	d
Qinternal__syntax_propertize	globals.h	6559;"	d
Qinterrupted	globals.h	6566;"	d
Qintervals	globals.h	6567;"	d
Qinvalid_function	globals.h	6568;"	d
Qinvalid_read_syntax	globals.h	6569;"	d
Qinvalid_regexp	globals.h	6570;"	d
Qinvalid_source	globals.h	6571;"	d
Qinvisible	globals.h	6572;"	d
Qipv4	globals.h	6573;"	d
Qipv6	globals.h	6574;"	d
Qisdir	globals.h	6575;"	d
Qiso10646_1	globals.h	6576;"	d
Qiso8859_1	globals.h	6577;"	d
Qiso_2022	globals.h	6578;"	d
Qiso_8859_1	globals.h	6579;"	d
Qitalic	globals.h	6580;"	d
Qja	globals.h	6581;"	d
Qjpeg	globals.h	6582;"	d
Qkbd_macro_termination_hook	globals.h	6583;"	d
Qkeep_ratio	globals.h	6584;"	d
Qkey	globals.h	6585;"	d
Qkeymap	globals.h	6588;"	d
Qkeymapp	globals.h	6590;"	d
Qkeymap_canonicalize	globals.h	6589;"	d
Qkey_and_value	globals.h	6586;"	d
Qkey_or_value	globals.h	6587;"	d
Qkill_buffer_hook	globals.h	6591;"	d
Qkill_buffer_query_functions	globals.h	6592;"	d
Qkill_emacs	globals.h	6593;"	d
Qkill_emacs_hook	globals.h	6594;"	d
Qkill_forward_chars	globals.h	6595;"	d
Qko	globals.h	6596;"	d
Qlambda	globals.h	6597;"	d
Qlandscape	globals.h	6598;"	d
Qlanguage_change	globals.h	6599;"	d
Qlaplace	globals.h	6600;"	d
Qlast_arrow_position	globals.h	6601;"	d
Qlast_arrow_string	globals.h	6602;"	d
Qlast_nonmenu_event	globals.h	6603;"	d
Qlatin	globals.h	6604;"	d
Qlatin_1	globals.h	6605;"	d
Qleft	globals.h	6606;"	d
Qleftmost	globals.h	6612;"	d
Qleft_edge	globals.h	6607;"	d
Qleft_fringe	globals.h	6608;"	d
Qleft_margin	globals.h	6609;"	d
Qleft_only	globals.h	6610;"	d
Qleft_to_right	globals.h	6611;"	d
Qlet	globals.h	6613;"	d
Qletx	globals.h	6614;"	d
Qlexical_binding	globals.h	6615;"	d
Qlibgif_version	globals.h	6616;"	d
Qlibgnutls_version	globals.h	6617;"	d
Qlibjpeg_version	globals.h	6618;"	d
Qlibpng_version	globals.h	6619;"	d
Qlight	globals.h	6620;"	d
Qline	globals.h	6621;"	d
Qline_height	globals.h	6622;"	d
Qline_number	globals.h	6623;"	d
Qline_number_current_line	globals.h	6624;"	d
Qline_prefix	globals.h	6625;"	d
Qline_spacing	globals.h	6626;"	d
Qlist	globals.h	6627;"	d
Qlisten	globals.h	6628;"	d
Qlistp	globals.h	6629;"	d
Qlittle	globals.h	6630;"	d
Qload	globals.h	6631;"	d
Qload_file_name	globals.h	6632;"	d
Qload_force_doc_strings	globals.h	6633;"	d
Qload_in_progress	globals.h	6634;"	d
Qlocal	globals.h	6635;"	d
Qlocal_map	globals.h	6636;"	d
Qlread_old_style_backquotes	globals.h	6637;"	d
Qlread_unescaped_character_literals	globals.h	6638;"	d
Qlss	globals.h	6639;"	d
Qm	globals.h	6640;"	d
Qmac	globals.h	6641;"	d
Qmacro	globals.h	6642;"	d
Qmajflt	globals.h	6643;"	d
Qmake_directory	globals.h	6644;"	d
Qmake_directory_internal	globals.h	6645;"	d
Qmake_frame_visible	globals.h	6646;"	d
Qmake_symbolic_link	globals.h	6647;"	d
Qmakunbound	globals.h	6648;"	d
Qmany	globals.h	6649;"	d
Qmargin	globals.h	6650;"	d
Qmarker	globals.h	6653;"	d
Qmarkerp	globals.h	6654;"	d
Qmark_for_redisplay	globals.h	6651;"	d
Qmark_inactive	globals.h	6652;"	d
Qmaximized	globals.h	6655;"	d
Qmd5	globals.h	6656;"	d
Qmenu	globals.h	6657;"	d
Qmenu_bar	globals.h	6658;"	d
Qmenu_bar_external	globals.h	6659;"	d
Qmenu_bar_lines	globals.h	6660;"	d
Qmenu_bar_size	globals.h	6661;"	d
Qmenu_bar_update_hook	globals.h	6662;"	d
Qmenu_enable	globals.h	6663;"	d
Qmenu_item	globals.h	6664;"	d
Qmeta	globals.h	6665;"	d
Qmetadata	globals.h	6666;"	d
Qminflt	globals.h	6669;"	d
Qminibuffer	globals.h	6670;"	d
Qminibuffer_completion_table	globals.h	6671;"	d
Qminibuffer_default	globals.h	6672;"	d
Qminibuffer_exit	globals.h	6673;"	d
Qminibuffer_exit_hook	globals.h	6674;"	d
Qminibuffer_history	globals.h	6675;"	d
Qminibuffer_prompt	globals.h	6676;"	d
Qminibuffer_setup_hook	globals.h	6677;"	d
Qminus	globals.h	6678;"	d
Qmin_height	globals.h	6667;"	d
Qmin_width	globals.h	6668;"	d
Qmiscs	globals.h	6679;"	d
Qmm_size	globals.h	6680;"	d
Qmodeline	globals.h	6686;"	d
Qmode_class	globals.h	6681;"	d
Qmode_line	globals.h	6682;"	d
Qmode_line_default_help_echo	globals.h	6683;"	d
Qmode_line_format	globals.h	6684;"	d
Qmode_line_inactive	globals.h	6685;"	d
Qmodification_hooks	globals.h	6687;"	d
Qmodifier_cache	globals.h	6688;"	d
Qmodifier_value	globals.h	6689;"	d
Qmodify	globals.h	6690;"	d
Qmodule_function	globals.h	6691;"	d
Qmono	globals.h	6692;"	d
Qmonospace	globals.h	6693;"	d
Qmonospace_font_name	globals.h	6694;"	d
Qmonths	globals.h	6695;"	d
Qmouse	globals.h	6696;"	d
Qmouse_click	globals.h	6697;"	d
Qmouse_color	globals.h	6698;"	d
Qmouse_face	globals.h	6699;"	d
Qmouse_fixup_help_message	globals.h	6700;"	d
Qmouse_leave_buffer_hook	globals.h	6701;"	d
Qmouse_movement	globals.h	6702;"	d
Qmouse_wheel_frame	globals.h	6703;"	d
Qmove	globals.h	6704;"	d
Qmoved_from	globals.h	6708;"	d
Qmoved_to	globals.h	6709;"	d
Qmove_file_to_trash	globals.h	6705;"	d
Qmove_frame	globals.h	6706;"	d
Qmove_self	globals.h	6707;"	d
QMULTIPLE	globals.h	6109;"	d
Qmutex	globals.h	6710;"	d
Qmutexp	globals.h	6711;"	d
Qname	globals.h	6712;"	d
Qnative_edges	globals.h	6713;"	d
Qnatnump	globals.h	6714;"	d
Qnetwork	globals.h	6715;"	d
Qnice	globals.h	6716;"	d
Qnil	globals.h	5934;"	d
Qnobreak_hyphen	globals.h	6723;"	d
Qnobreak_space	globals.h	6724;"	d
Qnoelisp	globals.h	6725;"	d
Qnone	globals.h	6727;"	d
Qnon_ascii	globals.h	6726;"	d
Qnormal	globals.h	6728;"	d
Qno_accept_focus	globals.h	6717;"	d
Qno_catch	globals.h	6718;"	d
Qno_conversion	globals.h	6719;"	d
Qno_focus_on_map	globals.h	6720;"	d
Qno_other_frame	globals.h	6721;"	d
Qno_special_glyphs	globals.h	6722;"	d
Qns	globals.h	6729;"	d
Qnsm_verify_connection	globals.h	6731;"	d
Qns_parse_geometry	globals.h	6730;"	d
QNULL	globals.h	6110;"	d
Qnumberp	globals.h	6733;"	d
Qnumber_or_marker_p	globals.h	6732;"	d
Qobject	globals.h	6734;"	d
Qoblique	globals.h	6735;"	d
Qodd	globals.h	6736;"	d
QOEMCP	w32select.c	/^static Lisp_Object QANSICP, QOEMCP;$/;"	v	file:
Qonly	globals.h	6737;"	d
Qonlydir	globals.h	6738;"	d
Qopen	globals.h	6739;"	d
Qopentype	globals.h	6741;"	d
Qopen_network_stream	globals.h	6740;"	d
Qoperations	globals.h	6742;"	d
Qorientation	globals.h	6743;"	d
Qouter_border_width	globals.h	6744;"	d
Qouter_edges	globals.h	6745;"	d
Qouter_position	globals.h	6746;"	d
Qouter_size	globals.h	6747;"	d
Qouter_window_id	globals.h	6748;"	d
Qoverflow_error	globals.h	6749;"	d
Qoverlay	globals.h	6750;"	d
Qoverlayp	globals.h	6754;"	d
Qoverlay_arrow	globals.h	6751;"	d
Qoverlay_arrow_bitmap	globals.h	6752;"	d
Qoverlay_arrow_string	globals.h	6753;"	d
Qoverride_redirect	globals.h	6755;"	d
Qoverriding_local_map	globals.h	6756;"	d
Qoverriding_terminal_local_map	globals.h	6757;"	d
Qoverwrite_mode	globals.h	6758;"	d
Qoverwrite_mode_binary	globals.h	6759;"	d
Qp	globals.h	6760;"	d
Qpaper	globals.h	6761;"	d
Qparent_frame	globals.h	6762;"	d
Qparent_id	globals.h	6763;"	d
Qpbm	globals.h	6764;"	d
Qpc	globals.h	6765;"	d
Qpcpu	globals.h	6766;"	d
Qpdf	globals.h	6767;"	d
Qpermanent_local	globals.h	6768;"	d
Qpermanent_local_hook	globals.h	6769;"	d
Qpgrp	globals.h	6770;"	d
Qpipe	globals.h	6771;"	d
Qplay_sound_functions	globals.h	6772;"	d
Qplus	globals.h	6773;"	d
Qpmem	globals.h	6774;"	d
Qpng	globals.h	6775;"	d
Qpointer	globals.h	6778;"	d
Qpoint_entered	globals.h	6776;"	d
Qpoint_left	globals.h	6777;"	d
Qpolling_period	globals.h	6779;"	d
Qpoly	globals.h	6780;"	d
Qportrait	globals.h	6781;"	d
Qposition	globals.h	6782;"	d
Qpostscript	globals.h	6786;"	d
Qpost_command_hook	globals.h	6783;"	d
Qpost_gc_hook	globals.h	6784;"	d
Qpost_self_insert_hook	globals.h	6785;"	d
Qppid	globals.h	6787;"	d
Qpressed_button	globals.h	6789;"	d
Qpre_command_hook	globals.h	6788;"	d
Qpri	globals.h	6790;"	d
QPRIMARY	globals.h	6111;"	d
Qprint_escape_control_characters	globals.h	6791;"	d
Qprint_escape_multibyte	globals.h	6792;"	d
Qprint_escape_newlines	globals.h	6793;"	d
Qprint_escape_nonascii	globals.h	6794;"	d
Qpriority	globals.h	6795;"	d
Qprocess	globals.h	6796;"	d
Qprocessp	globals.h	6797;"	d
Qprofiler_backtrace_equal	globals.h	6798;"	d
Qprogn	globals.h	6799;"	d
Qprotected_field	globals.h	6800;"	d
Qprovide	globals.h	6801;"	d
Qpty	globals.h	6802;"	d
Qpurecopy	globals.h	6803;"	d
Qquit	globals.h	6805;"	d
Qquote	globals.h	6806;"	d
Qq_overflow	globals.h	6804;"	d
Qraise	globals.h	6807;"	d
Qrange	globals.h	6808;"	d
Qrange_error	globals.h	6809;"	d
Qratio	globals.h	6810;"	d
Qraw_text	globals.h	6811;"	d
Qread	globals.h	6812;"	d
Qread_char	globals.h	6813;"	d
Qread_number	globals.h	6814;"	d
Qread_only	globals.h	6815;"	d
Qreal	globals.h	6816;"	d
Qrear_nonsticky	globals.h	6817;"	d
Qrecompute_lucid_menubar	globals.h	6818;"	d
Qrecord	globals.h	6819;"	d
Qrecordp	globals.h	6821;"	d
Qrecord_window_buffer	globals.h	6820;"	d
Qrect	globals.h	6822;"	d
Qredisplay_dont_pause	globals.h	6823;"	d
Qredisplay_end_trigger_functions	globals.h	6824;"	d
Qredisplay_internal_xC_functionx	globals.h	6825;"	d
Qregion_extract_function	globals.h	6826;"	d
Qrehash_size	globals.h	6827;"	d
Qrehash_threshold	globals.h	6828;"	d
Qrelative	globals.h	6829;"	d
Qreleased_button	globals.h	6830;"	d
Qremap	globals.h	6831;"	d
Qrename_file	globals.h	6832;"	d
Qreplace_buffer_in_windows	globals.h	6833;"	d
Qrequire	globals.h	6834;"	d
Qreverse_landscape	globals.h	6835;"	d
Qreverse_portrait	globals.h	6836;"	d
Qright	globals.h	6837;"	d
Qrightmost	globals.h	6844;"	d
Qright_divider	globals.h	6838;"	d
Qright_divider_width	globals.h	6839;"	d
Qright_edge	globals.h	6840;"	d
Qright_fringe	globals.h	6841;"	d
Qright_margin	globals.h	6842;"	d
Qright_to_left	globals.h	6843;"	d
Qrisky_local_variable	globals.h	6845;"	d
Qrss	globals.h	6846;"	d
Qrun	globals.h	6847;"	d
Qrun_hook_with_args	globals.h	6848;"	d
Qsafe	globals.h	6849;"	d
Qsans	globals.h	6850;"	d
Qsans_serif	globals.h	6852;"	d
Qsans__serif	globals.h	6851;"	d
Qsave_excursion	globals.h	6853;"	d
Qsave_session	globals.h	6854;"	d
QSAVE_TARGETS	globals.h	6112;"	d
Qscan_error	globals.h	6855;"	d
Qscreen_gamma	globals.h	6856;"	d
Qscroll_bar	globals.h	6857;"	d
Qscroll_bar_background	globals.h	6858;"	d
Qscroll_bar_foreground	globals.h	6859;"	d
Qscroll_bar_height	globals.h	6860;"	d
Qscroll_bar_movement	globals.h	6861;"	d
Qscroll_bar_width	globals.h	6862;"	d
Qscroll_command	globals.h	6863;"	d
Qscroll_down	globals.h	6864;"	d
Qscroll_up	globals.h	6865;"	d
Qsearch_failed	globals.h	6866;"	d
QSECONDARY	globals.h	6113;"	d
Qselection_request	globals.h	6868;"	d
Qselect_window	globals.h	6867;"	d
Qsemi_bold	globals.h	6869;"	d
Qsemi_light	globals.h	6870;"	d
Qseqpacket	globals.h	6871;"	d
Qsequencep	globals.h	6872;"	d
Qserial	globals.h	6873;"	d
Qsess	globals.h	6874;"	d
Qset	globals.h	6875;"	d
Qsetq	globals.h	6884;"	d
Qsetting_constant	globals.h	6885;"	d
Qset_default	globals.h	6876;"	d
Qset_file_acl	globals.h	6877;"	d
Qset_file_modes	globals.h	6878;"	d
Qset_file_selinux_context	globals.h	6879;"	d
Qset_file_times	globals.h	6880;"	d
Qset_frame_size	globals.h	6881;"	d
Qset_visited_file_modtime	globals.h	6882;"	d
Qset_window_configuration	globals.h	6883;"	d
QSFundamental	buffer.c	/^static Lisp_Object QSFundamental;	\/* A string "Fundamental".  *\/$/;"	v	file:
Qsha1	globals.h	6886;"	d
Qsha224	globals.h	6887;"	d
Qsha256	globals.h	6888;"	d
Qsha384	globals.h	6889;"	d
Qsha512	globals.h	6890;"	d
Qshift_jis	globals.h	6891;"	d
Qsignal	globals.h	6892;"	d
Qsingularity_error	globals.h	6893;"	d
Qsize	globals.h	6894;"	d
Qskip_taskbar	globals.h	6895;"	d
Qslice	globals.h	6896;"	d
Qsound	globals.h	6897;"	d
Qsource	globals.h	6898;"	d
Qspace	globals.h	6899;"	d
Qspace_width	globals.h	6900;"	d
Qspecial_lowercase	globals.h	6901;"	d
Qspecial_titlecase	globals.h	6902;"	d
Qspecial_uppercase	globals.h	6903;"	d
Qstandard_input	globals.h	6904;"	d
Qstandard_output	globals.h	6905;"	d
Qstart	globals.h	6906;"	d
Qstart_process	globals.h	6907;"	d
Qstate	globals.h	6908;"	d
Qstderr	globals.h	6909;"	d
Qstdin	globals.h	6910;"	d
Qstdout	globals.h	6911;"	d
Qsticky	globals.h	6912;"	d
Qstime	globals.h	6913;"	d
Qstop	globals.h	6914;"	d
Qstraight	globals.h	6915;"	d
QSTRING	globals.h	6114;"	d
Qstring	globals.h	6916;"	d
Qstringp	globals.h	6919;"	d
Qstrings	globals.h	6920;"	d
Qstring_bytes	globals.h	6917;"	d
Qstring_lessp	globals.h	6918;"	d
Qsubfeatures	globals.h	6921;"	d
Qsubr	globals.h	6922;"	d
Qsubrp	globals.h	6923;"	d
Qsubstitute_env_in_file_name	globals.h	6924;"	d
Qsubstitute_in_file_name	globals.h	6925;"	d
Qsuper	globals.h	6926;"	d
Qsvg	globals.h	6927;"	d
Qsw	globals.h	6928;"	d
Qswitch_frame	globals.h	6929;"	d
Qsymbol	globals.h	6930;"	d
Qsymbolp	globals.h	6931;"	d
Qsymbols	globals.h	6932;"	d
Qsyntax_table	globals.h	6933;"	d
Qsyntax_table_p	globals.h	6934;"	d
Qt	globals.h	6935;"	d
QTARGETS	globals.h	6115;"	d
Qtarget_idx	globals.h	6936;"	d
Qtb_size_cb	globals.h	6937;"	d
Qtemp_buffer_setup_hook	globals.h	6938;"	d
Qtemp_buffer_show_hook	globals.h	6939;"	d
Qterminal	globals.h	6940;"	d
Qterminal_frame	globals.h	6941;"	d
Qterminal_live_p	globals.h	6942;"	d
Qtest	globals.h	6943;"	d
QTEXT	globals.h	6116;"	d
Qtext	globals.h	6944;"	d
Qtext_image_horiz	globals.h	6945;"	d
Qtext_pixels	globals.h	6946;"	d
Qtext_read_only	globals.h	6947;"	d
Qthcount	globals.h	6948;"	d
Qthin_space	globals.h	6949;"	d
Qthread	globals.h	6950;"	d
Qthreadp	globals.h	6951;"	d
Qtiff	globals.h	6952;"	d
Qtime	globals.h	6953;"	d
Qtimer_event_handler	globals.h	6954;"	d
QTIMESTAMP	globals.h	6117;"	d
Qtitle	globals.h	6955;"	d
Qtitlecase	globals.h	6957;"	d
Qtitle_bar_size	globals.h	6956;"	d
Qtooltip	globals.h	6964;"	d
Qtool_bar	globals.h	6958;"	d
Qtool_bar_external	globals.h	6959;"	d
Qtool_bar_lines	globals.h	6960;"	d
Qtool_bar_position	globals.h	6961;"	d
Qtool_bar_size	globals.h	6962;"	d
Qtool_bar_style	globals.h	6963;"	d
Qtop	globals.h	6965;"	d
Qtop_bottom	globals.h	6966;"	d
Qtop_edge	globals.h	6967;"	d
Qtop_left_corner	globals.h	6968;"	d
Qtop_level	globals.h	6969;"	d
Qtop_margin	globals.h	6970;"	d
Qtop_only	globals.h	6971;"	d
Qtop_right_corner	globals.h	6972;"	d
Qtpgid	globals.h	6973;"	d
Qtrailing_whitespace	globals.h	6974;"	d
Qtranslation_table	globals.h	6975;"	d
Qtranslation_table_id	globals.h	6976;"	d
Qtrapping_constant	globals.h	6977;"	d
Qtruncation	globals.h	6978;"	d
qttip_cb	gtkutil.c	/^qttip_cb (GtkWidget  *widget,$/;"	f	file:	signature:(GtkWidget *widget, gint xpos, gint ypos, gboolean keyboard_mode, GtkTooltip *tooltip, gpointer user_data)
Qttname	globals.h	6979;"	d
Qtty	globals.h	6980;"	d
Qtty_color_alist	globals.h	6981;"	d
Qtty_color_by_index	globals.h	6982;"	d
Qtty_color_desc	globals.h	6983;"	d
Qtty_color_mode	globals.h	6984;"	d
Qtty_color_standard_values	globals.h	6985;"	d
Qtty_menu_exit	globals.h	6986;"	d
Qtty_menu_ignore	globals.h	6987;"	d
Qtty_menu_mouse_movement	globals.h	6988;"	d
Qtty_menu_navigation_map	globals.h	6989;"	d
Qtty_menu_next_item	globals.h	6990;"	d
Qtty_menu_next_menu	globals.h	6991;"	d
Qtty_menu_prev_item	globals.h	6992;"	d
Qtty_menu_prev_menu	globals.h	6993;"	d
Qtty_menu_select	globals.h	6994;"	d
Qtty_mode_reset_strings	globals.h	6995;"	d
Qtty_mode_set_strings	globals.h	6996;"	d
Qtty_type	globals.h	6997;"	d
question_mark_bits	fringe.c	/^static unsigned short question_mark_bits[] = {$/;"	v	file:
queue_doomed_finalizers	alloc.c	/^queue_doomed_finalizers (struct Lisp_Finalizer *dest,$/;"	f	file:	signature:(struct Lisp_Finalizer *dest, struct Lisp_Finalizer *src)
queue_end	w32inevt.c	/^static INPUT_RECORD *queue_ptr = event_queue, *queue_end = event_queue;$/;"	v	file:
queue_notifications	w32term.c	/^queue_notifications (struct input_event *event, W32Msg *msg, struct frame *f,$/;"	f	file:	signature:(struct input_event *event, W32Msg *msg, struct frame *f, int *evcount)
queue_ptr	w32inevt.c	/^static INPUT_RECORD *queue_ptr = event_queue, *queue_end = event_queue;$/;"	v	file:
quit	eval.c	/^quit (void)$/;"	f	signature:(void)
quit	lisp.h	/^extern Lisp_Object quit (void);$/;"	p	signature:(void)
QUITP	lisp.h	3127;"	d
quit_char	keyboard.c	/^int quit_char;$/;"	v
quit_silently	ccl.h	/^  bool_bf quit_silently : 1;	\/* If true, don't append "CCL:$/;"	m	struct:ccl_program	access:public
quit_throw_to_read_char	keyboard.c	/^quit_throw_to_read_char (bool from_signal)$/;"	f	file:	signature:(bool from_signal)
quit_throw_to_read_char	keyboard.c	/^static _Noreturn void quit_throw_to_read_char (bool);$/;"	p	file:
Qultra_bold	globals.h	6998;"	d
Qunbound	globals.h	6999;"	d
Qundecided	globals.h	7000;"	d
Qundecorated	globals.h	7001;"	d
Qundefined	globals.h	7002;"	d
Qundefined_color	globals.h	7003;"	d
Qunderflow_error	globals.h	7004;"	d
Qundo_auto_amalgamate	globals.h	7010;"	d
Qundo_auto__add_boundary	globals.h	7005;"	d
Qundo_auto__last_boundary_cause	globals.h	7006;"	d
Qundo_auto__this_command_amalgamating	globals.h	7007;"	d
Qundo_auto__undoable_change	globals.h	7008;"	d
Qundo_auto__undoably_changed_buffers	globals.h	7009;"	d
Qunevalled	globals.h	7011;"	d
Qunhandled_file_name_directory	globals.h	7012;"	d
Qunicode	globals.h	7013;"	d
Qunicode_bmp	globals.h	7014;"	d
Qunix	globals.h	7015;"	d
Qunlet	globals.h	7016;"	d
Qunmount	globals.h	7017;"	d
Qunspecified	globals.h	7018;"	d
Qunsplittable	globals.h	7019;"	d
QuotaNonPagedPoolUsage	w32.c	/^  SIZE_T QuotaNonPagedPoolUsage;$/;"	m	struct:_PROCESS_MEMORY_COUNTERS_EX	file:	access:public
QuotaPagedPoolUsage	w32.c	/^  SIZE_T QuotaPagedPoolUsage;$/;"	m	struct:_PROCESS_MEMORY_COUNTERS_EX	file:	access:public
QuotaPeakNonPagedPoolUsage	w32.c	/^  SIZE_T QuotaPeakNonPagedPoolUsage;$/;"	m	struct:_PROCESS_MEMORY_COUNTERS_EX	file:	access:public
QuotaPeakPagedPoolUsage	w32.c	/^  SIZE_T QuotaPeakPagedPoolUsage;$/;"	m	struct:_PROCESS_MEMORY_COUNTERS_EX	file:	access:public
quoted	syntax.c	/^    bool quoted;   \/* True if just after an escape char at end of parsing.  *\/$/;"	m	struct:lisp_parse_state	file:	access:public
quotify_arg	callint.c	/^quotify_arg (register Lisp_Object exp)$/;"	f	file:	signature:(register Lisp_Object exp)
quotify_args	callint.c	/^quotify_args (Lisp_Object exp)$/;"	f	file:	signature:(Lisp_Object exp)
Qup	globals.h	7020;"	d
Qupdate_frame_menubar	globals.h	7021;"	d
Qupdate_frame_tool_bar	globals.h	7022;"	d
Quser	globals.h	7023;"	d
Quser_error	globals.h	7024;"	d
Quser_position	globals.h	7025;"	d
Quser_ptr	globals.h	7026;"	d
Quser_ptrp	globals.h	7027;"	d
Quser_search_failed	globals.h	7028;"	d
Quser_size	globals.h	7029;"	d
QUTF8_STRING	globals.h	6118;"	d
Qutf_16	globals.h	7030;"	d
Qutf_16le	globals.h	7031;"	d
Qutf_8	globals.h	7032;"	d
Qutf_8_emacs	globals.h	7033;"	d
Qutime	globals.h	7034;"	d
Qvalue	globals.h	7035;"	d
Qvariable_documentation	globals.h	7036;"	d
Qvector	globals.h	7037;"	d
Qvectorp	globals.h	7040;"	d
Qvectors	globals.h	7041;"	d
Qvector_or_char_table_p	globals.h	7038;"	d
Qvector_slots	globals.h	7039;"	d
Qvendor_specific_keysyms	globals.h	7042;"	d
Qverify_visited_file_modtime	globals.h	7043;"	d
Qvertical_border	globals.h	7044;"	d
Qvertical_line	globals.h	7045;"	d
Qvertical_scroll_bar	globals.h	7046;"	d
Qvertical_scroll_bars	globals.h	7047;"	d
Qvisibility	globals.h	7048;"	d
Qvisible	globals.h	7049;"	d
Qvisual	globals.h	7050;"	d
Qvoid_function	globals.h	7051;"	d
Qvoid_variable	globals.h	7052;"	d
Qvsize	globals.h	7053;"	d
Qw32	globals.h	7054;"	d
Qwait_for_wm	globals.h	7055;"	d
Qwall	globals.h	7056;"	d
Qwatchers	globals.h	7057;"	d
Qwave	globals.h	7058;"	d
Qweakness	globals.h	7059;"	d
Qwhen	globals.h	7060;"	d
Qwholenump	globals.h	7061;"	d
Qwidget_type	globals.h	7062;"	d
Qwidth	globals.h	7063;"	d
Qwidth_only	globals.h	7064;"	d
Qwindow	globals.h	7065;"	d
Qwindowp	globals.h	7083;"	d
Qwindow_configuration	globals.h	7070;"	d
Qwindow_configuration_change_hook	globals.h	7071;"	d
Qwindow_configuration_p	globals.h	7072;"	d
Qwindow_deletable_p	globals.h	7073;"	d
Qwindow_divider	globals.h	7074;"	d
Qwindow_divider_first_pixel	globals.h	7075;"	d
Qwindow_divider_last_pixel	globals.h	7076;"	d
Qwindow_id	globals.h	7077;"	d
Qwindow_live_p	globals.h	7078;"	d
Qwindow_point_insertion_type	globals.h	7079;"	d
Qwindow_scroll_functions	globals.h	7080;"	d
Qwindow_size	globals.h	7081;"	d
Qwindow_valid_p	globals.h	7082;"	d
Qwindow__pixel_to_total	globals.h	7066;"	d
Qwindow__resize_root_window	globals.h	7067;"	d
Qwindow__resize_root_window_vertically	globals.h	7068;"	d
Qwindow__sanitize_window_sizes	globals.h	7069;"	d
Qworkarea	globals.h	7084;"	d
Qwrap_prefix	globals.h	7085;"	d
Qwrite_region	globals.h	7086;"	d
Qwrite_region_annotate_functions	globals.h	7087;"	d
Qwrong_length_argument	globals.h	7088;"	d
Qwrong_number_of_arguments	globals.h	7089;"	d
Qwrong_type_argument	globals.h	7090;"	d
Qx	globals.h	7091;"	d
Qxbm	globals.h	7108;"	d
Qxft	globals.h	7109;"	d
Qxg_change_toolbar_position	globals.h	7110;"	d
Qxg_frame_resized	globals.h	7111;"	d
Qxg_frame_set_char_size	globals.h	7112;"	d
Qxg_frame_set_char_size_1	globals.h	7113;"	d
Qxg_frame_set_char_size_2	globals.h	7114;"	d
Qxg_frame_set_char_size_3	globals.h	7115;"	d
Qxpm	globals.h	7116;"	d
Qxwidget_event	globals.h	7117;"	d
Qx_check_fullscreen	globals.h	7092;"	d
Qx_create_frame_1	globals.h	7093;"	d
Qx_create_frame_2	globals.h	7094;"	d
Qx_frame_parameter	globals.h	7095;"	d
Qx_gtk_map_stock	globals.h	7096;"	d
Qx_handle_net_wm_state	globals.h	7097;"	d
Qx_lost_selection_functions	globals.h	7098;"	d
Qx_net_wm_state	globals.h	7099;"	d
Qx_resource_name	globals.h	7100;"	d
Qx_sent_selection_functions	globals.h	7101;"	d
Qx_set_frame_parameters	globals.h	7102;"	d
Qx_set_fullscreen	globals.h	7103;"	d
Qx_set_menu_bar_lines	globals.h	7104;"	d
Qx_set_window_size_1	globals.h	7105;"	d
Qx_set_window_size_2	globals.h	7106;"	d
Qx_set_window_size_3	globals.h	7107;"	d
Qyes_or_no_p_history	globals.h	7118;"	d
Qzero_width	globals.h	7120;"	d
Qz_group	globals.h	7119;"	d
Q_EMACS_TMP_	globals.h	6119;"	d
r	image.c	/^  int r, g, b;$/;"	m	struct:ct_color	file:	access:public
R2L	dispextern.h	/^typedef enum { NEUTRAL_DIR = 0, L2R, R2L } bidi_dir_t;$/;"	e	enum:__anon116
RALLOC_OBJ	Makefile	/^RALLOC_OBJ=$/;"	m
random	conf_post.h	127;"	d
random	sysdep.c	2123;"	d	file:
random	sysdep.c	2127;"	d	file:
random	sysdep.c	2130;"	d	file:
random	sysdep.c	2133;"	d	file:
random	sysdep.c	2135;"	d	file:
random	w32.c	/^random (void)$/;"	f	signature:(void)
random	w32.h	/^extern int random (void);$/;"	p	signature:(void)
random_seed	sysdep.c	/^typedef unsigned int random_seed;$/;"	t	file:
random_seed	sysdep.c	/^typedef unsigned long int random_seed;$/;"	t	file:
RANDR13_LIBRARY	xfns.c	4721;"	d	file:
rand_as183	w32.c	/^rand_as183 (void)$/;"	f	file:	signature:(void)
RAND_BITS	sysdep.c	2119;"	d	file:
RAND_BITS	sysdep.c	2122;"	d	file:
RAND_BITS	sysdep.c	2125;"	d	file:
RAND_MAX_X	w32.c	2163;"	d	file:
RAND_MAX_Y	w32.c	2164;"	d	file:
RAND_MAX_Z	w32.c	2165;"	d	file:
range	chartab.c	/^  (Lisp_Object char_table, Lisp_Object range, Lisp_Object value)$/;"	v
range	unexmacosx.c	/^  vm_range_t range;$/;"	m	struct:__anon76	file:	access:public
RANGED_INTEGERP	lisp.h	/^RANGED_INTEGERP (intmax_t lo, Lisp_Object x, intmax_t hi)$/;"	f	signature:(intmax_t lo, Lisp_Object x, intmax_t hi)
ranges	w32term.c	/^  WCRANGE ranges[1];$/;"	m	struct:tagGLYPHSET	file:	access:public
range_table_work_area	regex.c	/^struct range_table_work_area$/;"	s	file:
range_table_work_area::allocated	regex.c	/^  int allocated;		\/* allocated size for work area in bytes.  *\/$/;"	m	struct:range_table_work_area	file:	access:public
range_table_work_area::bits	regex.c	/^  int bits;			\/* flag to record character classes *\/$/;"	m	struct:range_table_work_area	file:	access:public
range_table_work_area::table	regex.c	/^  int *table;			\/* actual work area.  *\/$/;"	m	struct:range_table_work_area	file:	access:public
range_table_work_area::used	regex.c	/^  int used;			\/* actually used size in words.  *\/$/;"	m	struct:range_table_work_area	file:	access:public
RANGE_TABLE_WORK_BITS	regex.c	1781;"	d	file:
RANGE_TABLE_WORK_ELT	regex.c	1782;"	d	file:
RANGE_TABLE_WORK_USED	regex.c	1780;"	d	file:
rarely_quit	lisp.h	/^rarely_quit (unsigned short int count)$/;"	f	signature:(unsigned short int count)
raw_cursor_to	dispextern.h	/^extern void raw_cursor_to (struct frame *, int, int);$/;"	p	signature:(struct frame *, int, int)
raw_cursor_to	terminal.c	/^raw_cursor_to (struct frame *f, int row, int col)$/;"	f	signature:(struct frame *f, int row, int col)
raw_cursor_to_hook	termhooks.h	/^  void (*raw_cursor_to_hook) (struct frame *, int, int);$/;"	m	struct:terminal	access:public
raw_destination	coding.h	/^  bool_bf raw_destination : 1;$/;"	m	struct:coding_system	access:public
RAW_HOTKEY_ID	w32fns.c	3119;"	d	file:
RAW_HOTKEY_MODIFIERS	w32fns.c	3121;"	d	file:
RAW_HOTKEY_VK_CODE	w32fns.c	3120;"	d	file:
raw_keybuf	keyboard.c	/^static Lisp_Object raw_keybuf;$/;"	v	file:
raw_keybuf_count	keyboard.c	/^static int raw_keybuf_count;$/;"	v	file:
raw_status	process.h	/^    int raw_status;$/;"	m	struct:Lisp_Process	access:public
raw_status_new	process.h	/^    bool_bf raw_status_new : 1;$/;"	m	struct:Lisp_Process	access:public
raw_text_coding_system	coding.c	/^raw_text_coding_system (Lisp_Object coding_system)$/;"	f	signature:(Lisp_Object coding_system)
raw_text_coding_system	coding.h	/^extern Lisp_Object raw_text_coding_system (Lisp_Object);$/;"	p	signature:(Lisp_Object)
raw_text_coding_system_p	coding.c	/^raw_text_coding_system_p (struct coding_system *coding)$/;"	f	signature:(struct coding_system *coding)
raw_text_coding_system_p	coding.h	/^extern bool raw_text_coding_system_p (struct coding_system *);$/;"	p	signature:(struct coding_system *)
rbearing	composite.h	/^  short lbearing, rbearing;$/;"	m	struct:composition	access:public
rbearing	font.h	/^  short lbearing, rbearing, width, ascent, descent;$/;"	m	struct:font_metrics	access:public
rbearing	nsgui.h	/^  int rbearing;$/;"	m	struct:_XCharStruct	access:public
rbearing	w32font.h	/^  short lbearing, rbearing, width, ascent, descent;$/;"	m	struct:w32_metric_cache	access:public
rcMonitor	w32fns.c	/^    RECT    rcMonitor;$/;"	m	struct:MONITOR_INFO	file:	access:public
rcMonitor	w32fns.c	/^    RECT    rcMonitor;$/;"	m	struct:MONITOR_INFO_EX	file:	access:public
rcTitleBar	w32fns.c	/^  RECT  rcTitleBar;$/;"	m	struct:__anon73	file:	access:public
rcWork	w32fns.c	/^    RECT    rcWork;$/;"	m	struct:MONITOR_INFO	file:	access:public
rcWork	w32fns.c	/^    RECT    rcWork;$/;"	m	struct:MONITOR_INFO_EX	file:	access:public
read	minibuf.c	/^  (Lisp_Object prompt, Lisp_Object initial_contents, Lisp_Object keymap, Lisp_Object read, Lisp_Object hist, Lisp_Object default_value, Lisp_Object inherit_input_method)$/;"	v
read	sysdep.c	60;"	d	file:
read	w32.c	66;"	d	file:
read0	lread.c	/^read0 (Lisp_Object readcharfun)$/;"	f	file:	signature:(Lisp_Object readcharfun)
read0	lread.c	/^static Lisp_Object read0 (Lisp_Object);$/;"	p	file:
read1	lread.c	/^read1 (Lisp_Object readcharfun, int *pch, bool first_in_list)$/;"	f	file:	signature:(Lisp_Object readcharfun, int *pch, bool first_in_list)
read1	lread.c	/^static Lisp_Object read1 (Lisp_Object, int *, bool);$/;"	p	file:	signature:(Lisp_Object, int *, bool)
readable_events	keyboard.c	/^readable_events (int flags)$/;"	f	file:	signature:(int flags)
readable_events	keyboard.c	/^static bool readable_events (int);$/;"	p	file:	signature:(int)
READABLE_EVENTS_DO_TIMERS_NOW	keyboard.c	339;"	d	file:
READABLE_EVENTS_FILTER_EVENTS	keyboard.c	340;"	d	file:
READABLE_EVENTS_IGNORE_SQUEEZABLES	keyboard.c	341;"	d	file:
readbyte_for_lambda	lread.c	/^readbyte_for_lambda (int c, Lisp_Object readcharfun)$/;"	f	file:	signature:(int c, Lisp_Object readcharfun)
readbyte_for_lambda	lread.c	/^static int readbyte_for_lambda (int, Lisp_Object);$/;"	p	file:	signature:(int, Lisp_Object)
readbyte_from_file	lread.c	/^readbyte_from_file (int c, Lisp_Object readcharfun)$/;"	f	file:	signature:(int c, Lisp_Object readcharfun)
readbyte_from_file	lread.c	/^static int readbyte_from_file (int, Lisp_Object);$/;"	p	file:	signature:(int, Lisp_Object)
readbyte_from_stdio	lread.c	/^readbyte_from_stdio (void)$/;"	f	file:	signature:(void)
readbyte_from_string	lread.c	/^readbyte_from_string (int c, Lisp_Object readcharfun)$/;"	f	file:	signature:(int c, Lisp_Object readcharfun)
readbyte_from_string	lread.c	/^static int readbyte_from_string (int, Lisp_Object);$/;"	p	file:	signature:(int, Lisp_Object)
readchar	lread.c	/^readchar (Lisp_Object readcharfun, bool *multibyte)$/;"	f	file:	signature:(Lisp_Object readcharfun, bool *multibyte)
READCHAR	lread.c	176;"	d	file:
readchar_count	lread.c	/^static EMACS_INT readchar_count;$/;"	v	file:
READCHAR_REPORT_MULTIBYTE	lread.c	180;"	d	file:
reader_thread	w32proc.c	/^reader_thread (void *arg)$/;"	f	file:	signature:(void *arg)
reader_thread	w32proc.c	/^static DWORD WINAPI reader_thread (void *arg);$/;"	p	file:	signature:(void *arg)
readevalloop	lread.c	/^readevalloop (Lisp_Object readcharfun,$/;"	f	file:	signature:(Lisp_Object readcharfun, struct infile *infile0, Lisp_Object sourcename, bool printflag, Lisp_Object unibyte, Lisp_Object readfun, Lisp_Object start, Lisp_Object end)
readevalloop	lread.c	/^static void readevalloop (Lisp_Object, struct infile *, Lisp_Object, bool,$/;"	p	file:	signature:(Lisp_Object, struct infile *, Lisp_Object, bool, Lisp_Object, Lisp_Object, Lisp_Object, Lisp_Object)
readevalloop_1	lread.c	/^readevalloop_1 (int old)$/;"	f	file:	signature:(int old)
readevalloop_eager_expand_eval	lread.c	/^readevalloop_eager_expand_eval (Lisp_Object val, Lisp_Object macroexpand)$/;"	f	file:	signature:(Lisp_Object val, Lisp_Object macroexpand)
reading_selection_reply	xselect.c	/^static Lisp_Object reading_selection_reply;$/;"	v	file:
reading_selection_window	xselect.c	/^static Window reading_selection_window;$/;"	v	file:
reading_which_selection	xselect.c	/^static Atom reading_which_selection;$/;"	v	file:
readlink	w32.c	/^readlink (const char *name, char *buf, size_t buf_size)$/;"	f	signature:(const char *name, char *buf, size_t buf_size)
readlinkat	w32.c	/^readlinkat (int fd, char const *name, char *buffer,$/;"	f	signature:(int fd, char const *name, char *buffer, size_t buffer_size)
read_and_apply_settings	xsettings.c	/^read_and_apply_settings (struct x_display_info *dpyinfo, bool send_event_p)$/;"	f	file:	signature:(struct x_display_info *dpyinfo, bool send_event_p)
read_and_dispose_of_process_output	process.c	/^read_and_dispose_of_process_output (struct Lisp_Process *p, char *chars,$/;"	f	file:	signature:(struct Lisp_Process *p, char *chars, ssize_t nbytes, struct coding_system *coding)
read_and_dispose_of_process_output	process.c	/^read_and_dispose_of_process_output (struct Lisp_Process *p, char *chars,$/;"	p	file:	signature:(struct Lisp_Process *p, char *chars, ssize_t nbytes, struct coding_system *coding)
read_buffer_completion_ignore_case	globals.h	1035;"	d
READ_BUF_SIZE	fileio.c	/^enum { READ_BUF_SIZE = MAX_ALLOCA };$/;"	e	enum:__anon101	file:
read_bytecode_char	doc.c	/^read_bytecode_char (bool unreadflag)$/;"	f	signature:(bool unreadflag)
read_bytecode_char	lisp.h	/^extern int read_bytecode_char (bool);$/;"	p	signature:(bool)
read_bytecode_pointer	doc.c	/^static unsigned char *read_bytecode_pointer;$/;"	v	file:
read_char	keyboard.c	/^read_char (int commandflag, Lisp_Object map,$/;"	f	signature:(int commandflag, Lisp_Object map, Lisp_Object prev_event, bool *used_mouse_menu, struct timespec *end_time)
read_char	keyboard.h	/^extern Lisp_Object read_char (int, Lisp_Object, Lisp_Object,$/;"	p	signature:(int, Lisp_Object, Lisp_Object, bool *, struct timespec *)
read_char_help_form_unwind	keyboard.c	/^read_char_help_form_unwind (void)$/;"	f	file:	signature:(void)
read_char_minibuf_menu_prompt	keyboard.c	/^read_char_minibuf_menu_prompt (int commandflag,$/;"	f	file:	signature:(int commandflag, Lisp_Object map)
read_char_minibuf_menu_prompt	keyboard.c	/^static Lisp_Object read_char_minibuf_menu_prompt (int, Lisp_Object);$/;"	p	file:	signature:(int, Lisp_Object)
read_char_x_menu_prompt	keyboard.c	/^read_char_x_menu_prompt (Lisp_Object map,$/;"	f	file:	signature:(Lisp_Object map, Lisp_Object prev_event, bool *used_mouse_menu)
read_char_x_menu_prompt	keyboard.c	/^static Lisp_Object read_char_x_menu_prompt (Lisp_Object,$/;"	p	file:	signature:(Lisp_Object, Lisp_Object, bool *)
read_decoded_event_from_main_queue	keyboard.c	/^read_decoded_event_from_main_queue (struct timespec *end_time,$/;"	f	file:	signature:(struct timespec *end_time, sys_jmp_buf local_getcjmp, Lisp_Object prev_event, bool *used_mouse_menu)
read_dirent	dired.c	/^read_dirent (DIR *dir, Lisp_Object dirname)$/;"	f	file:	signature:(DIR *dir, Lisp_Object dirname)
read_doc_string	doc.c	/^read_doc_string (Lisp_Object filepos)$/;"	f	signature:(Lisp_Object filepos)
read_doc_string	lisp.h	/^extern Lisp_Object read_doc_string (Lisp_Object);$/;"	p	signature:(Lisp_Object)
read_emacs_mule_char	lread.c	/^read_emacs_mule_char (int c, int (*readbyte) (int, Lisp_Object), Lisp_Object readcharfun)$/;"	f	file:	signature:(int c, int (*readbyte) (int, Lisp_Object), Lisp_Object readcharfun)
read_emacs_mule_char	lread.c	/^static int read_emacs_mule_char (int, int (*) (int, Lisp_Object),$/;"	p	file:	signature:(int, int (*) (int, Lisp_Object), Lisp_Object)
read_escape	lread.c	/^read_escape (Lisp_Object readcharfun, bool stringp)$/;"	f	file:	signature:(Lisp_Object readcharfun, bool stringp)
read_event_from_main_queue	keyboard.c	/^read_event_from_main_queue (struct timespec *end_time,$/;"	f	file:	signature:(struct timespec *end_time, sys_jmp_buf local_getcjmp, bool *used_mouse_menu)
read_exe_header	unexcw.c	/^read_exe_header (int fd, exe_header_t * exe_header_buffer)$/;"	f	file:	signature:(int fd, exe_header_t * exe_header_buffer)
read_file_name	callint.c	/^read_file_name (Lisp_Object default_filename, Lisp_Object mustmatch,$/;"	f	file:	signature:(Lisp_Object default_filename, Lisp_Object mustmatch, Lisp_Object initial, Lisp_Object predicate)
read_filtered_event	lread.c	/^read_filtered_event (bool no_switch_frame, bool ascii_required,$/;"	f	file:	signature:(bool no_switch_frame, bool ascii_required, bool error_nonascii, bool input_method, Lisp_Object seconds)
READ_FROM_EXEC_MONITOR	process.c	/^    READ_FROM_EXEC_MONITOR,$/;"	e	enum:__anon48	file:
read_from_string_index	lread.c	/^static ptrdiff_t read_from_string_index;$/;"	v	file:
read_from_string_index_byte	lread.c	/^static ptrdiff_t read_from_string_index_byte;$/;"	v	file:
read_from_string_limit	lread.c	/^static ptrdiff_t read_from_string_limit;$/;"	v	file:
READ_FROM_SUBPROCESS	process.c	/^    READ_FROM_SUBPROCESS,$/;"	e	enum:__anon48	file:
read_header	unexhp9k800.c	/^read_header (int file, struct header *hdr, struct som_exec_auxhdr *auxhdr)$/;"	f	file:	signature:(int file, struct header *hdr, struct som_exec_auxhdr *auxhdr)
read_hex	charset.c	/^read_hex (FILE *fp, int lookahead, int *terminator, bool *overflow)$/;"	f	file:	signature:(FILE *fp, int lookahead, int *terminator, bool *overflow)
read_integer	lread.c	/^read_integer (Lisp_Object readcharfun, EMACS_INT radix)$/;"	f	file:	signature:(Lisp_Object readcharfun, EMACS_INT radix)
read_internal_start	lread.c	/^read_internal_start (Lisp_Object stream, Lisp_Object start, Lisp_Object end)$/;"	f	file:	signature:(Lisp_Object stream, Lisp_Object start, Lisp_Object end)
read_internal_start	lread.c	/^static Lisp_Object read_internal_start (Lisp_Object, Lisp_Object,$/;"	p	file:
read_key_sequence	keyboard.c	/^read_key_sequence (Lisp_Object *keybuf, int bufsize, Lisp_Object prompt,$/;"	f	file:	signature:(Lisp_Object *keybuf, int bufsize, Lisp_Object prompt, bool dont_downcase_last, bool can_return_switch_frame, bool fix_current_buffer, bool prevent_redisplay)
read_key_sequence	keyboard.c	/^static int read_key_sequence (Lisp_Object *, int, Lisp_Object,$/;"	p	file:	signature:(Lisp_Object *, int, Lisp_Object, bool, bool, bool, bool)
read_key_sequence_cmd	keyboard.c	/^static Lisp_Object read_key_sequence_cmd;$/;"	v	file:
read_key_sequence_remapped	keyboard.c	/^static Lisp_Object read_key_sequence_remapped;$/;"	v	file:
read_key_sequence_vs	keyboard.c	/^read_key_sequence_vs (Lisp_Object prompt, Lisp_Object continue_echo,$/;"	f	file:	signature:(Lisp_Object prompt, Lisp_Object continue_echo, Lisp_Object dont_downcase_last, Lisp_Object can_return_switch_frame, Lisp_Object cmd_loop, bool allow_string)
read_list	lread.c	/^read_list (bool flag, Lisp_Object readcharfun)$/;"	f	file:	signature:(bool flag, Lisp_Object readcharfun)
read_list	lread.c	/^static Lisp_Object read_list (bool, Lisp_Object);$/;"	p	file:
read_load_commands	unexmacosx.c	/^read_load_commands (void)$/;"	f	file:	signature:(void)
read_lock_data	filelock.c	/^read_lock_data (char *lfname, char lfinfo[MAX_LFINFO + 1])$/;"	f	file:	signature:(char *lfname, char lfinfo[MAX_LFINFO + 1])
read_menu_command	keyboard.c	/^read_menu_command (void)$/;"	f	signature:(void)
read_menu_command	lisp.h	/^extern Lisp_Object read_menu_command (void);$/;"	p	signature:(void)
read_menu_input	term.c	/^read_menu_input (struct frame *sf, int *x, int *y, int min_y, int max_y,$/;"	f	file:	signature:(struct frame *sf, int *x, int *y, int min_y, int max_y, bool *first_time)
read_minibuf	minibuf.c	/^read_minibuf (Lisp_Object map, Lisp_Object initial, Lisp_Object prompt,$/;"	f	file:	signature:(Lisp_Object map, Lisp_Object initial, Lisp_Object prompt, bool expflag, Lisp_Object histvar, Lisp_Object histpos, Lisp_Object defalt, bool allow_props, bool inherit_input_method)
read_minibuf_noninteractive	minibuf.c	/^read_minibuf_noninteractive (Lisp_Object map, Lisp_Object initial,$/;"	f	file:	signature:(Lisp_Object map, Lisp_Object initial, Lisp_Object prompt, Lisp_Object backup_n, bool expflag, Lisp_Object histvar, Lisp_Object histpos, Lisp_Object defalt, bool allow_props, bool inherit_input_method)
read_minibuf_unwind	minibuf.c	/^read_minibuf_unwind (void)$/;"	f	file:	signature:(void)
read_minibuf_unwind	minibuf.c	/^static void read_minibuf_unwind (void);$/;"	p	file:	signature:(void)
read_non_regular	fileio.c	/^read_non_regular (Lisp_Object state)$/;"	f	file:	signature:(Lisp_Object state)
read_non_regular_quit	fileio.c	/^read_non_regular_quit (Lisp_Object ignore)$/;"	f	file:	signature:(Lisp_Object ignore)
read_objects_completed	lread.c	/^static Lisp_Object read_objects_completed;$/;"	v	file:
read_objects_map	lread.c	/^static Lisp_Object read_objects_map;$/;"	v	file:
read_only_	buffer.h	/^  Lisp_Object read_only_;$/;"	m	struct:buffer	access:public
read_output_delay	process.h	/^    int read_output_delay;$/;"	m	struct:Lisp_Process	access:public
READ_OUTPUT_DELAY_INCREMENT	process.c	232;"	d	file:
READ_OUTPUT_DELAY_MAX	process.c	233;"	d	file:
READ_OUTPUT_DELAY_MAX_MAX	process.c	234;"	d	file:
read_output_skip	process.h	/^    bool_bf read_output_skip : 1;$/;"	m	struct:Lisp_Process	access:public
read_process_output	process.c	/^read_process_output (Lisp_Object proc, int channel)$/;"	f	file:	signature:(Lisp_Object proc, int channel)
read_process_output	process.c	/^static int read_process_output (Lisp_Object, int);$/;"	p	file:	signature:(Lisp_Object, int)
read_process_output_call	process.c	/^read_process_output_call (Lisp_Object fun_and_args)$/;"	f	file:	signature:(Lisp_Object fun_and_args)
read_process_output_error_handler	process.c	/^read_process_output_error_handler (Lisp_Object error_val)$/;"	f	file:	signature:(Lisp_Object error_val)
read_settings	xsettings.c	/^read_settings (struct x_display_info *dpyinfo, struct xsettings *settings)$/;"	f	file:	signature:(struct x_display_info *dpyinfo, struct xsettings *settings)
read_socket_hook	termhooks.h	/^  int (*read_socket_hook) (struct terminal *terminal,$/;"	m	struct:terminal	access:public
read_stdin	keyboard.c	/^read_stdin (void)$/;"	f	file:	signature:(void)
read_unc_volume	w32.c	/^read_unc_volume (HANDLE henum, wchar_t *fname_w, char *fname_a, int size)$/;"	f	file:	signature:(HANDLE henum, wchar_t *fname_w, char *fname_a, int size)
read_unc_volume	w32.c	/^static void  *read_unc_volume (HANDLE, wchar_t *, char *, int);$/;"	p	file:	signature:(HANDLE, wchar_t *, char *, int)
read_vector	lread.c	/^read_vector (Lisp_Object readcharfun, bool bytecodeflag)$/;"	f	file:	signature:(Lisp_Object readcharfun, bool bytecodeflag)
read_vector	lread.c	/^static Lisp_Object read_vector (Lisp_Object, bool);$/;"	p	file:
realize_basic_faces	xfaces.c	/^realize_basic_faces (struct frame *f)$/;"	f	file:	signature:(struct frame *f)
realize_basic_faces	xfaces.c	/^static bool realize_basic_faces (struct frame *);$/;"	p	file:	signature:(struct frame *)
realize_default_face	xfaces.c	/^realize_default_face (struct frame *f)$/;"	f	file:	signature:(struct frame *f)
realize_default_face	xfaces.c	/^static bool realize_default_face (struct frame *);$/;"	p	file:	signature:(struct frame *)
realize_face	xfaces.c	/^realize_face (struct face_cache *cache, Lisp_Object attrs[LFACE_VECTOR_SIZE],$/;"	f	file:	signature:(struct face_cache *cache, Lisp_Object attrs[LFACE_VECTOR_SIZE], int former_face_id)
realize_face	xfaces.c	/^static struct face *realize_face (struct face_cache *, Lisp_Object *,$/;"	p	file:	signature:(struct face_cache *, Lisp_Object *, int)
realize_named_face	xfaces.c	/^realize_named_face (struct frame *f, Lisp_Object symbol, int id)$/;"	f	file:	signature:(struct frame *f, Lisp_Object symbol, int id)
realize_named_face	xfaces.c	/^static void realize_named_face (struct frame *, Lisp_Object, int);$/;"	p	file:	signature:(struct frame *, Lisp_Object, int)
realize_non_ascii_face	xfaces.c	/^realize_non_ascii_face (struct frame *f, Lisp_Object font_object,$/;"	f	file:	signature:(struct frame *f, Lisp_Object font_object, struct face *base_face)
realize_non_ascii_face	xfaces.c	/^static struct face *realize_non_ascii_face (struct frame *, Lisp_Object,$/;"	p	file:	signature:(struct frame *, Lisp_Object, struct face *)
realize_tty_face	xfaces.c	/^realize_tty_face (struct face_cache *cache,$/;"	f	file:	signature:(struct face_cache *cache, Lisp_Object attrs[LFACE_VECTOR_SIZE])
realize_tty_face	xfaces.c	/^static struct face *realize_tty_face (struct face_cache *, Lisp_Object *);$/;"	p	file:	signature:(struct face_cache *, Lisp_Object *)
realize_x_face	xfaces.c	/^realize_x_face (struct face_cache *cache, Lisp_Object attrs[LFACE_VECTOR_SIZE])$/;"	f	file:	signature:(struct face_cache *cache, Lisp_Object attrs[LFACE_VECTOR_SIZE])
realize_x_face	xfaces.c	/^static struct face *realize_x_face (struct face_cache *, Lisp_Object *);$/;"	p	file:	signature:(struct face_cache *, Lisp_Object *)
realloc	alloc.c	789;"	d	file:
realloc	alloc.c	792;"	d	file:
realloc	conf_post.h	101;"	d
realloc	conf_post.h	113;"	d
realloc	gmalloc.c	/^extern void *realloc (void *ptr, size_t size);$/;"	p	file:	signature:(void *ptr, size_t size)
realloc	gmalloc.c	/^realloc (void *ptr, size_t size)$/;"	f	signature:(void *ptr, size_t size)
realloc	gmalloc.c	1692;"	d	file:
realloc	gmalloc.c	66;"	d	file:
realloc	gmalloc.c	71;"	d	file:
realloc	regex.c	146;"	d	file:
realloc	regex.c	148;"	d	file:
realloc	regex.c	250;"	d	file:
realloc	regex.c	252;"	d	file:
realloc	unexmacosx.c	93;"	d	file:
realloc	w32heap.c	326;"	d	file:
reallochook	gmalloc.c	/^reallochook (void *ptr, size_t size)$/;"	f	file:	signature:(void *ptr, size_t size)
realloc_after_dump	w32heap.c	/^realloc_after_dump (void *ptr, size_t size)$/;"	f	signature:(void *ptr, size_t size)
realloc_after_dump_9x	w32heap.c	/^realloc_after_dump_9x (void *ptr, size_t size)$/;"	f	signature:(void *ptr, size_t size)
realloc_before_dump	w32heap.c	/^realloc_before_dump (void *ptr, size_t size)$/;"	f	signature:(void *ptr, size_t size)
realloc_glyph_pool	dispnew.c	/^realloc_glyph_pool (struct glyph_pool *pool, struct dim matrix_dim)$/;"	f	file:	signature:(struct glyph_pool *pool, struct dim matrix_dim)
really_call_select	thread.c	/^really_call_select (void *arg)$/;"	f	file:	signature:(void *arg)
realmask	fileio.c	/^static mode_t realmask;$/;"	v	file:
real_itimer	w32proc.c	/^static struct itimer_data real_itimer, prof_itimer;$/;"	v	typeref:struct:itimer_data	file:
real_morecore	ralloc.c	/^void *(*real_morecore) (ptrdiff_t);$/;"	v
reap_subprocess	w32proc.c	/^reap_subprocess (child_process *cp)$/;"	f	file:	signature:(child_process *cp)
rear_sticky	intervals.h	/^  bool_bf rear_sticky : 1;	    \/* Likewise for just after it.  *\/$/;"	m	struct:interval	access:public
rebind_for_thread_switch	eval.c	/^rebind_for_thread_switch (void)$/;"	f	signature:(void)
rebind_for_thread_switch	lisp.h	/^extern void rebind_for_thread_switch (void);$/;"	p	signature:(void)
RECC_ALNUM	regex.h	/^	       RECC_ALNUM, RECC_ALPHA, RECC_WORD,$/;"	e	enum:__anon58
RECC_ALPHA	regex.h	/^	       RECC_ALNUM, RECC_ALPHA, RECC_WORD,$/;"	e	enum:__anon58
RECC_ASCII	regex.h	/^	       RECC_ASCII, RECC_UNIBYTE$/;"	e	enum:__anon58
RECC_BLANK	regex.h	/^	       RECC_BLANK, RECC_SPACE,$/;"	e	enum:__anon58
RECC_CNTRL	regex.h	/^	       RECC_PUNCT, RECC_CNTRL,$/;"	e	enum:__anon58
RECC_DIGIT	regex.h	/^	       RECC_DIGIT, RECC_XDIGIT,$/;"	e	enum:__anon58
RECC_ERROR	regex.h	/^typedef enum { RECC_ERROR = 0,$/;"	e	enum:__anon58
RECC_GRAPH	regex.h	/^	       RECC_GRAPH, RECC_PRINT,$/;"	e	enum:__anon58
RECC_LOWER	regex.h	/^	       RECC_LOWER, RECC_UPPER,$/;"	e	enum:__anon58
RECC_MULTIBYTE	regex.h	/^	       RECC_MULTIBYTE, RECC_NONASCII,$/;"	e	enum:__anon58
RECC_NONASCII	regex.h	/^	       RECC_MULTIBYTE, RECC_NONASCII,$/;"	e	enum:__anon58
RECC_PRINT	regex.h	/^	       RECC_GRAPH, RECC_PRINT,$/;"	e	enum:__anon58
RECC_PUNCT	regex.h	/^	       RECC_PUNCT, RECC_CNTRL,$/;"	e	enum:__anon58
RECC_SPACE	regex.h	/^	       RECC_BLANK, RECC_SPACE,$/;"	e	enum:__anon58
RECC_UNIBYTE	regex.h	/^	       RECC_ASCII, RECC_UNIBYTE$/;"	e	enum:__anon58
RECC_UPPER	regex.h	/^	       RECC_LOWER, RECC_UPPER,$/;"	e	enum:__anon58
RECC_WORD	regex.h	/^	       RECC_ALNUM, RECC_ALPHA, RECC_WORD,$/;"	e	enum:__anon58
RECC_XDIGIT	regex.h	/^	       RECC_DIGIT, RECC_XDIGIT,$/;"	e	enum:__anon58
receive_incremental_selection	xselect.c	/^receive_incremental_selection (struct x_display_info *dpyinfo,$/;"	f	file:	signature:(struct x_display_info *dpyinfo, Window window, Atom property, Lisp_Object target_type, unsigned int min_size_bytes, unsigned char **data_ret, ptrdiff_t *size_bytes_ret, Atom *type_ret, int *format_ret, unsigned long *size_ret)
recenter_overlay_lists	buffer.c	/^recenter_overlay_lists (struct buffer *buf, ptrdiff_t pos)$/;"	f	signature:(struct buffer *buf, ptrdiff_t pos)
recenter_overlay_lists	buffer.h	/^extern void recenter_overlay_lists (struct buffer *, ptrdiff_t);$/;"	p	signature:(struct buffer *, ptrdiff_t)
recent_keys	keyboard.c	/^static Lisp_Object recent_keys;$/;"	v	file:
recent_keys_index	keyboard.c	/^static int recent_keys_index;$/;"	v	file:
recombine_windows	window.c	/^recombine_windows (Lisp_Object window)$/;"	f	file:	signature:(Lisp_Object window)
recompute_basic_faces	dispextern.h	/^void recompute_basic_faces (struct frame *);$/;"	p	signature:(struct frame *)
recompute_basic_faces	xfaces.c	/^recompute_basic_faces (struct frame *f)$/;"	f	signature:(struct frame *f)
recompute_max_desc	process.c	/^recompute_max_desc (void)$/;"	f	file:	signature:(void)
recompute_width_table	indent.c	/^recompute_width_table (struct buffer *buf, struct Lisp_Char_Table *disptab)$/;"	f	signature:(struct buffer *buf, struct Lisp_Char_Table *disptab)
recompute_width_table	indent.h	/^void recompute_width_table (struct buffer *buf,$/;"	p	signature:(struct buffer *buf, struct Lisp_Char_Table *disptab)
reconsider_clip_changes	xdisp.c	/^reconsider_clip_changes (struct window *w)$/;"	f	file:	signature:(struct window *w)
record	xterm.c	/^struct record$/;"	s	file:
record::locus	xterm.c	/^  char *locus;$/;"	m	struct:record	file:	access:public
record::type	xterm.c	/^  int type;$/;"	m	struct:record	file:	access:public
RECORDP	lisp.h	/^RECORDP (Lisp_Object a)$/;"	f	signature:(Lisp_Object a)
record_asynch_buffer_change	keyboard.c	/^record_asynch_buffer_change (void)$/;"	f	signature:(void)
record_asynch_buffer_change	keyboard.h	/^extern void record_asynch_buffer_change (void);$/;"	p	signature:(void)
record_auto_save	keyboard.c	/^record_auto_save (void)$/;"	f	signature:(void)
record_auto_save	lisp.h	/^extern void record_auto_save (void);$/;"	p	signature:(void)
record_backtrace	profiler.c	/^record_backtrace (log_t *log, EMACS_INT count)$/;"	f	file:	signature:(log_t *log, EMACS_INT count)
record_buffer	buffer.c	/^record_buffer (Lisp_Object buffer)$/;"	f	signature:(Lisp_Object buffer)
record_buffer	buffer.h	/^extern void record_buffer (Lisp_Object);$/;"	p	signature:(Lisp_Object)
record_buffer_markers	buffer.c	/^record_buffer_markers (struct buffer *b)$/;"	f	file:	signature:(struct buffer *b)
record_change	lisp.h	/^extern void record_change (ptrdiff_t, ptrdiff_t);$/;"	p	signature:(ptrdiff_t, ptrdiff_t)
record_change	undo.c	/^record_change (ptrdiff_t beg, ptrdiff_t length)$/;"	f	signature:(ptrdiff_t beg, ptrdiff_t length)
record_char	keyboard.c	/^record_char (Lisp_Object c)$/;"	f	file:	signature:(Lisp_Object c)
record_char	keyboard.c	/^static void record_char (Lisp_Object c);$/;"	p	file:	signature:(Lisp_Object c)
record_conversion_result	coding.c	/^record_conversion_result (struct coding_system *coding,$/;"	f	file:	signature:(struct coding_system *coding, enum coding_result_code result)
record_delete	lisp.h	/^extern void record_delete (ptrdiff_t, Lisp_Object, bool);$/;"	p	signature:(ptrdiff_t, Lisp_Object, bool)
record_delete	undo.c	/^record_delete (ptrdiff_t beg, Lisp_Object string, bool record_markers)$/;"	f	signature:(ptrdiff_t beg, Lisp_Object string, bool record_markers)
record_deleted_pid	process.c	/^record_deleted_pid (pid_t pid, Lisp_Object filename)$/;"	f	signature:(pid_t pid, Lisp_Object filename)
record_deleted_pid	process.h	/^extern void record_deleted_pid (pid_t, Lisp_Object);$/;"	p	signature:(pid_t, Lisp_Object)
record_event	xterm.c	/^record_event (char *locus, int type)$/;"	f	signature:(char *locus, int type)
record_first_change	lisp.h	/^extern void record_first_change (void);$/;"	p	signature:(void)
record_first_change	undo.c	/^record_first_change (void)$/;"	f	signature:(void)
record_flag	callint.c	/^  (Lisp_Object function, Lisp_Object record_flag, Lisp_Object keys)$/;"	v
record_insert	lisp.h	/^extern void record_insert (ptrdiff_t, ptrdiff_t);$/;"	p	signature:(ptrdiff_t, ptrdiff_t)
record_insert	undo.c	/^record_insert (ptrdiff_t beg, ptrdiff_t length)$/;"	f	signature:(ptrdiff_t beg, ptrdiff_t length)
record_in_backtrace	eval.c	/^record_in_backtrace (Lisp_Object function, Lisp_Object *args, ptrdiff_t nargs)$/;"	f	signature:(Lisp_Object function, Lisp_Object *args, ptrdiff_t nargs)
record_in_backtrace	lisp.h	/^extern ptrdiff_t record_in_backtrace (Lisp_Object, Lisp_Object *, ptrdiff_t);$/;"	p	signature:(Lisp_Object, Lisp_Object *, ptrdiff_t)
record_keydown	w32fns.c	/^record_keydown (unsigned int wparam, unsigned int lparam)$/;"	f	file:	signature:(unsigned int wparam, unsigned int lparam)
record_keyup	w32fns.c	/^record_keyup (unsigned int wparam, unsigned int lparam)$/;"	f	file:	signature:(unsigned int wparam, unsigned int lparam)
record_kill_process	callproc.c	/^record_kill_process (struct Lisp_Process *p, Lisp_Object tempfile)$/;"	f	signature:(struct Lisp_Process *p, Lisp_Object tempfile)
record_kill_process	process.h	/^extern void record_kill_process (struct Lisp_Process *, Lisp_Object);$/;"	p	signature:(struct Lisp_Process *, Lisp_Object)
record_load_unwind	lread.c	/^record_load_unwind (Lisp_Object old)$/;"	f	file:	signature:(Lisp_Object old)
record_marker_adjustments	undo.c	/^record_marker_adjustments (ptrdiff_t from, ptrdiff_t to)$/;"	f	file:	signature:(ptrdiff_t from, ptrdiff_t to)
RECORD_MAX_MIN_POS	xdisp.c	21252;"	d	file:
RECORD_MAX_MIN_POS	xdisp.c	22010;"	d	file:
record_menu_key	keyboard.c	/^record_menu_key (Lisp_Object c)$/;"	f	file:	signature:(Lisp_Object c)
record_overlay_string	buffer.c	/^record_overlay_string (struct sortstrlist *ssl, Lisp_Object str,$/;"	f	file:	signature:(struct sortstrlist *ssl, Lisp_Object str, Lisp_Object str2, Lisp_Object pri, ptrdiff_t size)
RECORD_OVERLAY_STRING	xdisp.c	5771;"	d	file:
RECORD_OVERLAY_STRING	xdisp.c	5872;"	d	file:
record_point	undo.c	/^record_point (ptrdiff_t beg)$/;"	f	file:	signature:(ptrdiff_t beg)
record_property_change	lisp.h	/^extern void record_property_change (ptrdiff_t, ptrdiff_t,$/;"	p	signature:(ptrdiff_t, ptrdiff_t, Lisp_Object, Lisp_Object, Lisp_Object)
record_property_change	undo.c	/^record_property_change (ptrdiff_t beg, ptrdiff_t length,$/;"	f	signature:(ptrdiff_t beg, ptrdiff_t length, Lisp_Object prop, Lisp_Object value, Lisp_Object buffer)
record_thread_error	thread.c	/^record_thread_error (Lisp_Object error_form)$/;"	f	file:	signature:(Lisp_Object error_form)
record_unwind_current_buffer	buffer.h	/^record_unwind_current_buffer (void)$/;"	f	signature:(void)
record_unwind_protect	eval.c	/^record_unwind_protect (void (*function) (Lisp_Object), Lisp_Object arg)$/;"	f	signature:(void (*function) (Lisp_Object), Lisp_Object arg)
record_unwind_protect	lisp.h	/^extern void record_unwind_protect (void (*) (Lisp_Object), Lisp_Object);$/;"	p	signature:(void (*) (Lisp_Object), Lisp_Object)
record_unwind_protect_int	eval.c	/^record_unwind_protect_int (void (*function) (int), int arg)$/;"	f	signature:(void (*function) (int), int arg)
record_unwind_protect_int	lisp.h	/^extern void record_unwind_protect_int (void (*) (int), int);$/;"	p	signature:(void (*) (int), int)
record_unwind_protect_nothing	eval.c	/^record_unwind_protect_nothing (void)$/;"	f	signature:(void)
record_unwind_protect_nothing	lisp.h	/^extern void record_unwind_protect_nothing (void);$/;"	p	signature:(void)
record_unwind_protect_ptr	eval.c	/^record_unwind_protect_ptr (void (*function) (void *), void *arg)$/;"	f	signature:(void (*function) (void *), void *arg)
record_unwind_protect_ptr	lisp.h	/^extern void record_unwind_protect_ptr (void (*) (void *), void *);$/;"	p	signature:(void (*) (void *), void *)
record_unwind_protect_void	eval.c	/^record_unwind_protect_void (void (*function) (void))$/;"	f	signature:(void (*function) (void))
record_unwind_protect_void	lisp.h	/^extern void record_unwind_protect_void (void (*) (void));$/;"	p	signature:(void (*) (void))
record_unwind_save_match_data	lisp.h	/^extern void record_unwind_save_match_data (void);$/;"	p	signature:(void)
record_unwind_save_match_data	search.c	/^record_unwind_save_match_data (void)$/;"	f	signature:(void)
record_xmalloc	alloc.c	/^record_xmalloc (size_t size)$/;"	f	signature:(size_t size)
recover_top_level_message	keyboard.c	/^static Lisp_Object recover_top_level_message;$/;"	v	file:
rect	w32term.h	/^    RECT rect;$/;"	m	struct:W32Msg	access:public
RecursionCount	systhread.h	/^  long RecursionCount;$/;"	m	struct:__anon43	access:public
recursive_edit_1	keyboard.c	/^recursive_edit_1 (void)$/;"	f	signature:(void)
recursive_edit_1	lisp.h	/^extern Lisp_Object recursive_edit_1 (void);$/;"	p	signature:(void)
recursive_edit_unwind	keyboard.c	/^recursive_edit_unwind (Lisp_Object buffer)$/;"	f	signature:(Lisp_Object buffer)
recursive_edit_unwind	keyboard.c	/^static void recursive_edit_unwind (Lisp_Object buffer);$/;"	p	file:	signature:(Lisp_Object buffer)
recvfrom	w32.c	237;"	d	file:
red	dispextern.h	/^  unsigned short red, green, blue;$/;"	m	struct:__anon104	access:public
red	w32fns.c	/^  (Lisp_Object red, Lisp_Object green, Lisp_Object blue, Lisp_Object name)$/;"	v
RED16_FROM_ULONG	nsterm.h	812;"	d
redeem_scroll_bar_hook	termhooks.h	/^  void (*redeem_scroll_bar_hook) (struct window *window);$/;"	m	struct:terminal	access:public
redirect	lisp.h	/^  ENUM_BF (symbol_redirect) redirect : 3;$/;"	m	struct:Lisp_Symbol	access:public
redisplay	buffer.h	/^    bool_bf redisplay : 1;$/;"	m	struct:buffer_text	access:public
redisplay	frame.h	/^  bool_bf redisplay : 1;$/;"	m	struct:frame	access:public
redisplay	lisp.h	/^extern void redisplay (void);$/;"	p	signature:(void)
redisplay	window.h	/^    bool_bf redisplay : 1;$/;"	m	struct:window	access:public
redisplay	xdisp.c	/^redisplay (void)$/;"	f	signature:(void)
redisplayed	xwidget.h	/^  bool redisplayed;$/;"	m	struct:xwidget_view	access:public
redisplaying_p	xdisp.c	/^bool redisplaying_p;$/;"	v
REDISPLAY_BUFFER_WINDOWS	window.c	/^  REDISPLAY_BUFFER_WINDOWS,	    \/* Arg is buffer *\/$/;"	e	enum:window_loop	file:
redisplay_dont_pause	globals.h	1039;"	d
redisplay_end_trigger	window.h	/^    Lisp_Object redisplay_end_trigger;$/;"	m	struct:window	access:public
redisplay_end_trigger_charpos	dispextern.h	/^  ptrdiff_t redisplay_end_trigger_charpos;$/;"	m	struct:it	access:public
redisplay_history	dispnew.c	/^static struct redisplay_history redisplay_history[REDISPLAY_HISTORY_SIZE];$/;"	v	typeref:struct:redisplay_history	file:
redisplay_history	dispnew.c	/^struct redisplay_history$/;"	s	file:
redisplay_history::trace	dispnew.c	/^  char trace[512 + 100];$/;"	m	struct:redisplay_history	file:	access:public
REDISPLAY_HISTORY_SIZE	dispnew.c	145;"	d	file:
redisplay_interface	dispextern.h	/^struct redisplay_interface$/;"	s
redisplay_interface::after_update_window_line_hook	dispextern.h	/^  void (*after_update_window_line_hook) (struct window *w,$/;"	m	struct:redisplay_interface	access:public
redisplay_interface::clear_end_of_line	dispextern.h	/^  void (*clear_end_of_line) (struct window *w, struct glyph_row *row,$/;"	m	struct:redisplay_interface	access:public
redisplay_interface::clear_frame_area	dispextern.h	/^  void (*clear_frame_area) (struct frame *f, int x, int y,$/;"	m	struct:redisplay_interface	access:public
redisplay_interface::clear_window_mouse_face	dispextern.h	/^  void (*clear_window_mouse_face) (struct window *w);$/;"	m	struct:redisplay_interface	access:public
redisplay_interface::compute_glyph_string_overhangs	dispextern.h	/^  void (*compute_glyph_string_overhangs) (struct glyph_string *s);$/;"	m	struct:redisplay_interface	access:public
redisplay_interface::define_frame_cursor	dispextern.h	/^  void (*define_frame_cursor) (struct frame *f, Cursor cursor);$/;"	m	struct:redisplay_interface	access:public
redisplay_interface::define_fringe_bitmap	dispextern.h	/^  void (*define_fringe_bitmap) (int which, unsigned short *bits,$/;"	m	struct:redisplay_interface	access:public
redisplay_interface::destroy_fringe_bitmap	dispextern.h	/^  void (*destroy_fringe_bitmap) (int which);$/;"	m	struct:redisplay_interface	access:public
redisplay_interface::draw_fringe_bitmap	dispextern.h	/^  void (*draw_fringe_bitmap) (struct window *w, struct glyph_row *row,$/;"	m	struct:redisplay_interface	access:public
redisplay_interface::draw_glyph_string	dispextern.h	/^  void (*draw_glyph_string) (struct glyph_string *s);$/;"	m	struct:redisplay_interface	access:public
redisplay_interface::draw_vertical_window_border	dispextern.h	/^  void (*draw_vertical_window_border) (struct window *w,$/;"	m	struct:redisplay_interface	access:public
redisplay_interface::draw_window_cursor	dispextern.h	/^  void (*draw_window_cursor) (struct window *w,$/;"	m	struct:redisplay_interface	access:public
redisplay_interface::draw_window_divider	dispextern.h	/^  void (*draw_window_divider) (struct window *w,$/;"	m	struct:redisplay_interface	access:public
redisplay_interface::fix_overlapping_area	dispextern.h	/^  void (*fix_overlapping_area) (struct window *w, struct glyph_row *row,$/;"	m	struct:redisplay_interface	access:public
redisplay_interface::flush_display	dispextern.h	/^  void (*flush_display) (struct frame *f);$/;"	m	struct:redisplay_interface	access:public
redisplay_interface::frame_parm_handlers	dispextern.h	/^  frame_parm_handler *frame_parm_handlers;$/;"	m	struct:redisplay_interface	access:public
redisplay_interface::get_glyph_overhangs	dispextern.h	/^  void (*get_glyph_overhangs) (struct glyph *glyph, struct frame *f,$/;"	m	struct:redisplay_interface	access:public
redisplay_interface::hide_hourglass	dispextern.h	/^  void (*hide_hourglass) (struct frame *f);$/;"	m	struct:redisplay_interface	access:public
redisplay_interface::insert_glyphs	dispextern.h	/^  void (*insert_glyphs) (struct window *w, struct glyph_row *row,$/;"	m	struct:redisplay_interface	access:public
redisplay_interface::produce_glyphs	dispextern.h	/^  void (*produce_glyphs) (struct it *it);$/;"	m	struct:redisplay_interface	access:public
redisplay_interface::scroll_run_hook	dispextern.h	/^  void (*scroll_run_hook) (struct window *w, struct run *run);$/;"	m	struct:redisplay_interface	access:public
redisplay_interface::shift_glyphs_for_insert	dispextern.h	/^  void (*shift_glyphs_for_insert) (struct frame *f,$/;"	m	struct:redisplay_interface	access:public
redisplay_interface::show_hourglass	dispextern.h	/^  void (*show_hourglass) (struct frame *f);$/;"	m	struct:redisplay_interface	access:public
redisplay_interface::update_window_begin_hook	dispextern.h	/^  void (*update_window_begin_hook) (struct window *w);$/;"	m	struct:redisplay_interface	access:public
redisplay_interface::update_window_end_hook	dispextern.h	/^  void (*update_window_end_hook) (struct window *w, bool cursor_on_p,$/;"	m	struct:redisplay_interface	access:public
redisplay_interface::write_glyphs	dispextern.h	/^  void (*write_glyphs) (struct window *w, struct glyph_row *row,$/;"	m	struct:redisplay_interface	access:public
redisplay_internal	xdisp.c	/^redisplay_internal (void)$/;"	f	file:	signature:(void)
redisplay_internal	xdisp.c	/^static void redisplay_internal (void);$/;"	p	file:	signature:(void)
redisplay_mode_lines	xdisp.c	/^redisplay_mode_lines (Lisp_Object window, bool force)$/;"	f	file:	signature:(Lisp_Object window, bool force)
redisplay_mode_lines	xdisp.c	/^static int redisplay_mode_lines (Lisp_Object, bool);$/;"	p	file:
redisplay_other_windows	window.h	/^extern void redisplay_other_windows (void);$/;"	p	signature:(void)
redisplay_other_windows	xdisp.c	/^redisplay_other_windows (void)$/;"	f	signature:(void)
redisplay_preserve_echo_area	dispextern.h	/^void redisplay_preserve_echo_area (int);$/;"	p	signature:(int)
redisplay_preserve_echo_area	xdisp.c	/^redisplay_preserve_echo_area (int from_where)$/;"	f	signature:(int from_where)
REDISPLAY_SOME	xdisp.c	/^enum { REDISPLAY_SOME = 2};	\/* Arbitrary choice.  *\/$/;"	e	enum:__anon134	file:
REDISPLAY_SOME_P	xdisp.c	11891;"	d	file:
redisplay_tool_bar	xdisp.c	/^redisplay_tool_bar (struct frame *f)$/;"	f	file:	signature:(struct frame *f)
redisplay_window	xdisp.c	/^redisplay_window (Lisp_Object window, bool just_this_one_p)$/;"	f	file:	signature:(Lisp_Object window, bool just_this_one_p)
redisplay_window	xdisp.c	/^static void redisplay_window (Lisp_Object, bool);$/;"	p	file:
redisplay_windows	xdisp.c	/^redisplay_windows (Lisp_Object window)$/;"	f	file:	signature:(Lisp_Object window)
redisplay_windows	xdisp.c	/^static void redisplay_windows (Lisp_Object);$/;"	p	file:
redisplay_window_0	xdisp.c	/^redisplay_window_0 (Lisp_Object window)$/;"	f	file:	signature:(Lisp_Object window)
redisplay_window_0	xdisp.c	/^static Lisp_Object redisplay_window_0 (Lisp_Object);$/;"	p	file:
redisplay_window_1	xdisp.c	/^redisplay_window_1 (Lisp_Object window)$/;"	f	file:	signature:(Lisp_Object window)
redisplay_window_1	xdisp.c	/^static Lisp_Object redisplay_window_1 (Lisp_Object);$/;"	p	file:
redisplay_window_error	xdisp.c	/^redisplay_window_error (Lisp_Object ignore)$/;"	f	file:	signature:(Lisp_Object ignore)
redisplay_window_error	xdisp.c	/^static Lisp_Object redisplay_window_error (Lisp_Object);$/;"	p	file:
redisplay__inhibit_bidi	globals.h	1037;"	d
redraw_frame	dispextern.h	/^extern void redraw_frame (struct frame *);$/;"	p	signature:(struct frame *)
redraw_frame	dispnew.c	/^redraw_frame (struct frame *f)$/;"	f	signature:(struct frame *f)
redraw_fringe_bitmaps_p	dispextern.h	/^  bool_bf redraw_fringe_bitmaps_p : 1;$/;"	m	struct:glyph_row	access:public
redraw_overlapped_rows	dispnew.c	/^redraw_overlapped_rows (struct window *w, int yb)$/;"	f	file:	signature:(struct window *w, int yb)
redraw_overlapping_rows	dispnew.c	/^redraw_overlapping_rows (struct window *w, int yb)$/;"	f	file:	signature:(struct window *w, int yb)
red_bits	xterm.h	/^  int red_bits, blue_bits, green_bits;$/;"	m	struct:x_display_info	access:public
RED_FROM_ULONG	nsterm.h	806;"	d
red_offset	xterm.h	/^  int red_offset, blue_offset, green_offset;$/;"	m	struct:x_display_info	access:public
refcount	dispextern.h	/^  ptrdiff_t refcount;$/;"	m	struct:image_cache	access:public
refcount	nsterm.h	/^  int refcount;$/;"	m	struct:ns_bitmap_record	access:public
refcount	w32term.h	/^  int refcount;$/;"	m	struct:w32_bitmap_record	access:public
refcount	xterm.h	/^  int refcount;$/;"	m	struct:x_bitmap_record	access:public
reference_count	keyboard.h	/^    int reference_count;$/;"	m	struct:kboard	access:public
reference_count	termchar.h	/^  int reference_count;          \/* Number of frames that are on this display. *\/$/;"	m	struct:tty_display_info	access:public
reference_count	termhooks.h	/^  int reference_count;$/;"	m	struct:terminal	access:public
reference_count	w32term.h	/^  int reference_count;$/;"	m	struct:w32_display_info	access:public
reference_count	xterm.h	/^  int reference_count;$/;"	m	struct:x_display_info	access:public
refill_memory_reserve	alloc.c	/^refill_memory_reserve (void)$/;"	f	signature:(void)
refill_memory_reserve	alloc.c	/^static void refill_memory_reserve (void);$/;"	p	file:	signature:(void)
refill_memory_reserve	lisp.h	/^extern void refill_memory_reserve (void);$/;"	p	signature:(void)
ref_count	gtkutil.h	/^  int           ref_count;$/;"	m	struct:xg_menu_cb_data_	access:public
reg	ccl.h	/^  int reg[8];			\/* CCL registers, reg[7] is used for$/;"	m	struct:ccl_program	access:public
regcomp	regex.c	/^regcomp (regex_t *_Restrict_ preg, const char *_Restrict_ pattern,$/;"	f	signature:(regex_t *_Restrict_ preg, const char *_Restrict_ pattern, int cflags)
regcomp	regex.c	81;"	d	file:
regcomp	regex.h	/^extern reg_errcode_t regcomp (regex_t *_Restrict_ __preg,$/;"	p	signature:(regex_t *_Restrict_ __preg, const char *_Restrict_ __pattern, int __cflags)
regend	regex.c	/^static re_char **     regstart, **     regend;$/;"	v	file:
regen_palette	w32term.h	/^  int regen_palette;$/;"	m	struct:w32_display_info	access:public
regerror	regex.c	82;"	d	file:
regerror	regex.h	/^extern size_t regerror (int __errcode, const regex_t * __preg,$/;"	p	signature:(int __errcode, const regex_t * __preg, char *__errbuf, size_t __errbuf_size)
regexec	regex.c	80;"	d	file:
regexec	regex.h	/^extern reg_errcode_t regexec (const regex_t *_Restrict_ __preg,$/;"	p	signature:(const regex_t *_Restrict_ __preg, const char *_Restrict_ __string, size_t __nmatch, regmatch_t __pmatch[_Restrict_arr_], int __eflags)
regexp	keymap.c	/^  (Lisp_Object regexp, Lisp_Object predicate)$/;"	v
regexp	search.c	/^  (Lisp_Object regexp, Lisp_Object bound, Lisp_Object noerror, Lisp_Object count)$/;"	v
regexp	search.c	/^  (Lisp_Object regexp, Lisp_Object string, Lisp_Object start)$/;"	v
regexp	search.c	/^  Lisp_Object regexp, f_whitespace_regexp;$/;"	m	struct:regexp_cache	file:	access:public
regexp_cache	search.c	/^struct regexp_cache$/;"	s	file:
regexp_cache::buf	search.c	/^  struct re_pattern_buffer buf;$/;"	m	struct:regexp_cache	typeref:struct:regexp_cache::re_pattern_buffer	file:	access:public
regexp_cache::fastmap	search.c	/^  char fastmap[0400];$/;"	m	struct:regexp_cache	file:	access:public
regexp_cache::f_whitespace_regexp	search.c	/^  Lisp_Object regexp, f_whitespace_regexp;$/;"	m	struct:regexp_cache	file:	access:public
regexp_cache::next	search.c	/^  struct regexp_cache *next;$/;"	m	struct:regexp_cache	typeref:struct:regexp_cache::regexp_cache	file:	access:public
regexp_cache::posix	search.c	/^  bool posix;$/;"	m	struct:regexp_cache	file:	access:public
regexp_cache::regexp	search.c	/^  Lisp_Object regexp, f_whitespace_regexp;$/;"	m	struct:regexp_cache	file:	access:public
regexp_cache::syntax_table	search.c	/^  Lisp_Object syntax_table;$/;"	m	struct:regexp_cache	file:	access:public
REGEXP_CACHE_SIZE	search.c	35;"	d	file:
REGEX_ALLOCATE	regex.c	445;"	d	file:
REGEX_ALLOCATE	regex.c	460;"	d	file:
REGEX_ALLOCATE	regex.c	463;"	d	file:
REGEX_ALLOCATE_STACK	regex.c	485;"	d	file:
REGEX_ALLOCATE_STACK	regex.c	494;"	d	file:
regex_compile	regex.c	/^regex_compile (const_re_char *pattern, size_t size,$/;"	f	file:	signature:(const_re_char *pattern, size_t size, bool posix_backtracking, const char *whitespace_regexp, struct re_pattern_buffer *bufp)
regex_compile	regex.c	/^static reg_errcode_t regex_compile (re_char *pattern, size_t size,$/;"	p	file:	signature:(re_char *pattern, size_t size, bool posix_backtracking, const char *whitespace_regexp, struct re_pattern_buffer *bufp)
REGEX_FREE	regex.c	447;"	d	file:
REGEX_FREE	regex.c	472;"	d	file:
REGEX_FREE_STACK	regex.c	489;"	d	file:
REGEX_FREE_STACK	regex.c	496;"	d	file:
regex_grow_registers	regex.c	/^regex_grow_registers (int num_regs)$/;"	f	file:	signature:(int num_regs)
REGEX_REALLOCATE	regex.c	446;"	d	file:
REGEX_REALLOCATE	regex.c	467;"	d	file:
REGEX_REALLOCATE_STACK	regex.c	487;"	d	file:
REGEX_REALLOCATE_STACK	regex.c	495;"	d	file:
REGEX_SAFE_FREE	regex.c	459;"	d	file:
REGEX_SAFE_FREE	regex.c	478;"	d	file:
regex_t	regex.h	/^typedef struct re_pattern_buffer regex_t;$/;"	t	typeref:struct:re_pattern_buffer
REGEX_TALLOC	regex.c	510;"	d	file:
REGEX_USE_SAFE_ALLOCA	regex.c	455;"	d	file:
REGEX_USE_SAFE_ALLOCA	regex.c	477;"	d	file:
regfree	regex.c	79;"	d	file:
regfree	regex.h	/^extern void regfree (regex_t *__preg);$/;"	p	signature:(regex_t *__preg)
region_cache	region-cache.c	/^struct region_cache {$/;"	s	file:
region_cache::beg_unchanged	region-cache.c	/^  ptrdiff_t beg_unchanged, end_unchanged;$/;"	m	struct:region_cache	file:	access:public
region_cache::boundaries	region-cache.c	/^  struct boundary *boundaries;$/;"	m	struct:region_cache	typeref:struct:region_cache::boundary	file:	access:public
region_cache::buffer_beg	region-cache.c	/^  ptrdiff_t buffer_beg, buffer_end;$/;"	m	struct:region_cache	file:	access:public
region_cache::buffer_end	region-cache.c	/^  ptrdiff_t buffer_beg, buffer_end;$/;"	m	struct:region_cache	file:	access:public
region_cache::cache_len	region-cache.c	/^  ptrdiff_t cache_len;$/;"	m	struct:region_cache	file:	access:public
region_cache::end_unchanged	region-cache.c	/^  ptrdiff_t beg_unchanged, end_unchanged;$/;"	m	struct:region_cache	file:	access:public
region_cache::gap_len	region-cache.c	/^  ptrdiff_t gap_start, gap_len;$/;"	m	struct:region_cache	file:	access:public
region_cache::gap_start	region-cache.c	/^  ptrdiff_t gap_start, gap_len;$/;"	m	struct:region_cache	file:	access:public
region_cache_backward	region-cache.c	/^region_cache_backward (struct buffer *buf, struct region_cache *c,$/;"	f	signature:(struct buffer *buf, struct region_cache *c, ptrdiff_t pos, ptrdiff_t *next)
region_cache_backward	region-cache.h	/^extern int region_cache_backward (struct buffer *buf, struct region_cache *c,$/;"	p	signature:(struct buffer *buf, struct region_cache *c, ptrdiff_t pos, ptrdiff_t *next)
region_cache_forward	region-cache.c	/^region_cache_forward (struct buffer *buf, struct region_cache *c,$/;"	f	signature:(struct buffer *buf, struct region_cache *c, ptrdiff_t pos, ptrdiff_t *next)
region_cache_forward	region-cache.h	/^extern int region_cache_forward (struct buffer *buf, struct region_cache *c,$/;"	p	signature:(struct buffer *buf, struct region_cache *c, ptrdiff_t pos, ptrdiff_t *next)
region_limit	editfns.c	/^region_limit (bool beginningp)$/;"	f	file:	signature:(bool beginningp)
region_list_head	unexmacosx.c	/^static struct region_t *region_list_head = 0;$/;"	v	typeref:struct:region_t	file:
region_list_tail	unexmacosx.c	/^static struct region_t *region_list_tail = 0;$/;"	v	typeref:struct:region_t	file:
region_t	unexmacosx.c	/^struct region_t {$/;"	s	file:
region_t::address	unexmacosx.c	/^  vm_address_t address;$/;"	m	struct:region_t	file:	access:public
region_t::max_protection	unexmacosx.c	/^  vm_prot_t max_protection;$/;"	m	struct:region_t	file:	access:public
region_t::next	unexmacosx.c	/^  struct region_t *next;$/;"	m	struct:region_t	typeref:struct:region_t::region_t	file:	access:public
region_t::protection	unexmacosx.c	/^  vm_prot_t protection;$/;"	m	struct:region_t	file:	access:public
region_t::size	unexmacosx.c	/^  vm_size_t size;$/;"	m	struct:region_t	file:	access:public
register_aux_fd	w32.c	/^register_aux_fd (int infd)$/;"	f	signature:(int infd)
register_aux_fd	w32.h	/^extern void register_aux_fd (int);$/;"	p	signature:(int)
register_child	w32.h	/^extern void register_child (pid_t, int);$/;"	p	signature:(pid_t, int)
register_child	w32proc.c	/^register_child (pid_t pid, int fd)$/;"	f	signature:(pid_t pid, int fd)
register_color	xfaces.c	/^register_color (unsigned long pixel)$/;"	f	signature:(unsigned long pixel)
register_font_driver	font.c	/^register_font_driver (struct font_driver const *driver, struct frame *f)$/;"	f	signature:(struct font_driver const *driver, struct frame *f)
register_font_driver	font.h	/^extern void register_font_driver (struct font_driver const *, struct frame *);$/;"	p	signature:(struct font_driver const *, struct frame *)
register_heapinfo	gmalloc.c	/^register_heapinfo (void)$/;"	f	file:	signature:(void)
register_hot_keys	w32fns.c	/^register_hot_keys (HWND hwnd)$/;"	f	file:	signature:(HWND hwnd)
registry_to_w32_charset	w32font.c	/^registry_to_w32_charset (Lisp_Object charset)$/;"	f	file:	signature:(Lisp_Object charset)
regmatch_t	regex.h	/^} regmatch_t;$/;"	t	typeref:struct:__anon57
regnum	regex.c	/^  regnum_t regnum;$/;"	m	struct:__anon146	file:	access:public
regnum_t	regex.c	/^typedef int regnum_t;$/;"	t	file:
regoff_t	regex.h	/^typedef ssize_t regoff_t;$/;"	t
regstart	regex.c	/^static re_char **     regstart, **     regend;$/;"	v	file:
regs_allocated	regex.h	/^  unsigned regs_allocated : 2;$/;"	m	struct:re_pattern_buffer	access:public
regs_allocated_size	regex.c	/^static int regs_allocated_size;$/;"	v	file:
REGS_FIXED	regex.h	397;"	d
REGS_REALLOCATE	regex.h	396;"	d
REGS_UNALLOCATED	regex.h	395;"	d
regular_top_level_message	keyboard.c	/^static Lisp_Object regular_top_level_message;$/;"	v	file:
REG_BADBR	regex.h	/^  REG_BADBR,		\/* Invalid contents of \\{\\}.  *\/$/;"	e	enum:__anon56
REG_BADPAT	regex.h	/^  REG_BADPAT,		\/* Invalid pattern.  *\/$/;"	e	enum:__anon56
REG_BADRPT	regex.h	/^  REG_BADRPT,		\/* No preceding re for repetition op.  *\/$/;"	e	enum:__anon56
REG_EBRACE	regex.h	/^  REG_EBRACE,		\/* Unmatched \\{.  *\/$/;"	e	enum:__anon56
REG_EBRACK	regex.h	/^  REG_EBRACK,		\/* Unmatched left bracket.  *\/$/;"	e	enum:__anon56
REG_ECOLLATE	regex.h	/^  REG_ECOLLATE,		\/* Not implemented.  *\/$/;"	e	enum:__anon56
REG_ECTYPE	regex.h	/^  REG_ECTYPE,		\/* Invalid character class name.  *\/$/;"	e	enum:__anon56
REG_EEND	regex.h	/^  REG_EEND,		\/* Premature end.  *\/$/;"	e	enum:__anon56
REG_EESCAPE	regex.h	/^  REG_EESCAPE,		\/* Trailing backslash.  *\/$/;"	e	enum:__anon56
REG_ENOSYS	regex.h	/^  REG_ENOSYS = -1,	\/* This will never happen for this implementation.  *\/$/;"	e	enum:__anon56
REG_EPAREN	regex.h	/^  REG_EPAREN,		\/* Parenthesis imbalance.  *\/$/;"	e	enum:__anon56
REG_ERANGE	regex.h	/^  REG_ERANGE,		\/* Invalid range end.  *\/$/;"	e	enum:__anon56
REG_ERANGEX	regex.h	/^  REG_ERANGEX		\/* Range striding over charsets.  *\/$/;"	e	enum:__anon56
REG_ERPAREN	regex.h	/^  REG_ERPAREN,		\/* Unmatched ) or \\); not returned from regcomp.  *\/$/;"	e	enum:__anon56
reg_errcode_t	regex.h	/^} reg_errcode_t;$/;"	t	typeref:enum:__anon56
REG_ESIZE	regex.h	/^  REG_ESIZE,		\/* Compiled pattern bigger than 2^16 bytes.  *\/$/;"	e	enum:__anon56
REG_ESPACE	regex.h	/^  REG_ESPACE,		\/* Ran out of memory.  *\/$/;"	e	enum:__anon56
REG_ESUBREG	regex.h	/^  REG_ESUBREG,		\/* Invalid back reference.  *\/$/;"	e	enum:__anon56
REG_EXTENDED	regex.h	281;"	d
REG_ICASE	regex.h	285;"	d
REG_NEWLINE	regex.h	290;"	d
REG_NOERROR	regex.h	/^  REG_NOERROR = 0,	\/* Success.  *\/$/;"	e	enum:__anon56
REG_NOMATCH	regex.h	/^  REG_NOMATCH,		\/* Didn't find a match (for regexec).  *\/$/;"	e	enum:__anon56
REG_NOSUB	regex.h	294;"	d
REG_NOTBOL	regex.h	304;"	d
REG_NOTEOL	regex.h	307;"	d
REG_ROOT	w32.c	2573;"	d	file:
REG_ROOT	w32reg.c	29;"	d	file:
reg_syntax_t	regex.h	/^typedef unsigned long reg_syntax_t;$/;"	t
REG_UNSET	regex.c	1555;"	d	file:
rehash_size	lisp.h	/^  float rehash_size;$/;"	m	struct:Lisp_Hash_Table	access:public
rehash_threshold	lisp.h	/^  float rehash_threshold;$/;"	m	struct:Lisp_Hash_Table	access:public
rejected	coding.h	/^  int rejected;$/;"	m	struct:coding_detection_info	access:public
relative_compose	font.h	/^  int relative_compose;$/;"	m	struct:font	access:public
release_frame_dc	w32term.h	/^extern int release_frame_dc (struct frame * f, HDC hDC);$/;"	p	signature:(struct frame * f, HDC hDC)
release_frame_dc	w32xfns.c	/^release_frame_dc (struct frame *f, HDC hdc)$/;"	f	signature:(struct frame *f, HDC hdc)
release_global_lock	thread.c	/^release_global_lock (void)$/;"	f	file:	signature:(void)
RELEASE_HDC	xdisp.c	25303;"	d	file:
RELEASE_HDC	xdisp.c	25310;"	d	file:
release_ime_context_fn	w32fns.c	/^ImmReleaseContext_Proc release_ime_context_fn = NULL;$/;"	v
release_listen_threads	w32.h	/^extern void release_listen_threads (void);$/;"	p	signature:(void)
release_listen_threads	w32proc.c	/^release_listen_threads (void)$/;"	f	signature:(void)
relief	dispextern.h	/^  int relief;$/;"	m	struct:image	access:public
relief	w32term.h	/^  struct relief$/;"	s	struct:w32_output	access:public
relief	xterm.h	/^  struct relief$/;"	s	struct:x_output	access:public
relief_background	w32term.h	/^  unsigned long relief_background;$/;"	m	struct:w32_output	access:public
relief_background	xterm.h	/^  unsigned long relief_background;$/;"	m	struct:x_output	access:public
relinquish	ralloc.c	/^relinquish (void)$/;"	f	file:	signature:(void)
reload	w32proc.c	/^  volatile ULONGLONG reload;$/;"	m	struct:itimer_data	file:	access:public
relocate_blocs	ralloc.c	/^relocate_blocs (bloc_ptr bloc, heap_ptr heap, void *address)$/;"	f	file:	signature:(bloc_ptr bloc, heap_ptr heap, void *address)
relocate_offset	unexw32.c	/^relocate_offset (DWORD_PTR offset,$/;"	f	file:	signature:(DWORD_PTR offset, IMAGE_NT_HEADERS * src_nt_header, IMAGE_NT_HEADERS * dst_nt_header)
REL_ALLOC	regex.c	209;"	d	file:
REMACSLIB_CFLAGS	Makefile	/^REMACSLIB_CFLAGS = -pthread$/;"	m
REMAINING_AVAIL_SLOTS	regex.c	1505;"	d	file:
remember_mouse_glyph	dispextern.h	/^void remember_mouse_glyph (struct frame *, int, int, NativeRectangle *);$/;"	p	signature:(struct frame *, int, int, NativeRectangle *)
remember_mouse_glyph	xdisp.c	/^remember_mouse_glyph (struct frame *f, int gx, int gy, NativeRectangle *rect)$/;"	f	signature:(struct frame *f, int gx, int gy, NativeRectangle *rect)
remove_descriptor	inotify.c	/^remove_descriptor (Lisp_Object prevtail, bool invalid_p)$/;"	f	file:	signature:(Lisp_Object prevtail, bool invalid_p)
remove_process	process.c	/^remove_process (register Lisp_Object proc)$/;"	f	file:	signature:(register Lisp_Object proc)
remove_properties	textprop.c	/^remove_properties (Lisp_Object plist, Lisp_Object list, INTERVAL i, Lisp_Object object)$/;"	f	file:	signature:(Lisp_Object plist, Lisp_Object list, INTERVAL i, Lisp_Object object)
remove_slash_colon	process.c	/^remove_slash_colon (Lisp_Object name)$/;"	f	signature:(Lisp_Object name)
remove_slash_colon	process.h	/^extern Lisp_Object remove_slash_colon (Lisp_Object);$/;"	p	signature:(Lisp_Object)
remove_submenu	gtkutil.c	73;"	d	file:
remove_submenu	gtkutil.c	75;"	d	file:
remove_w32_kbdhook	w32fns.c	/^remove_w32_kbdhook (void)$/;"	f	signature:(void)
remove_w32_kbdhook	w32term.h	/^extern void remove_w32_kbdhook (void);$/;"	p	signature:(void)
remove_watch	inotify.c	/^remove_watch (Lisp_Object descriptor, Lisp_Object id)$/;"	f	file:	signature:(Lisp_Object descriptor, Lisp_Object id)
remove_watch	w32notify.c	/^remove_watch (struct notification *dirwatch)$/;"	f	file:	signature:(struct notification *dirwatch)
rename	w32.c	58;"	d	file:
rename_lock_file	filelock.c	/^rename_lock_file (char const *old, char const *new, bool force)$/;"	f	file:	signature:(char const *old, char const *new, bool force)
render	w32select.c	/^render (Lisp_Object oformat)$/;"	f	file:	signature:(Lisp_Object oformat)
render	w32select.c	/^static Lisp_Object render (Lisp_Object oformat);$/;"	p	file:	signature:(Lisp_Object oformat)
render_all	w32select.c	/^render_all (Lisp_Object ignore)$/;"	f	file:	signature:(Lisp_Object ignore)
render_all	w32select.c	/^static Lisp_Object render_all (Lisp_Object ignore);$/;"	p	file:	signature:(Lisp_Object ignore)
render_locale	w32select.c	/^render_locale (void)$/;"	f	file:	signature:(void)
render_locale	w32select.c	/^static Lisp_Object render_locale (void);$/;"	p	file:	signature:(void)
reorder_font_vector	fontset.c	/^reorder_font_vector (Lisp_Object font_group, struct font *font)$/;"	f	file:	signature:(Lisp_Object font_group, struct font *font)
reorder_modifiers	keyboard.c	/^reorder_modifiers (Lisp_Object symbol)$/;"	f	signature:(Lisp_Object symbol)
reorder_modifiers	keyboard.h	/^extern Lisp_Object reorder_modifiers (Lisp_Object);$/;"	p	signature:(Lisp_Object)
ReparseDataLength	w32.c	/^    USHORT ReparseDataLength;$/;"	m	struct:_REPARSE_DATA_BUFFER	file:	access:public
ReparseTag	w32.c	/^    ULONG  ReparseTag;$/;"	m	struct:_REPARSE_DATA_BUFFER	file:	access:public
REPARSE_DATA_BUFFER	w32.c	/^} REPARSE_DATA_BUFFER, *PREPARSE_DATA_BUFFER;$/;"	t	typeref:struct:_REPARSE_DATA_BUFFER	file:
repeat	macros.c	/^  (Lisp_Object repeat, Lisp_Object loopfunc)$/;"	v
repertory_charset	font.h	/^  int repertory_charset;$/;"	m	struct:font	access:public
replace_buffer_in_windows	window.c	/^replace_buffer_in_windows (Lisp_Object buffer)$/;"	f	signature:(Lisp_Object buffer)
replace_buffer_in_windows	window.h	/^extern void replace_buffer_in_windows (Lisp_Object);$/;"	p	signature:(Lisp_Object)
REPLACE_BUFFER_IN_WINDOWS_SAFELY	window.c	/^  REPLACE_BUFFER_IN_WINDOWS_SAFELY, \/* Arg is buffer *\/$/;"	e	enum:window_loop	file:
replace_buffer_in_windows_safely	window.c	/^replace_buffer_in_windows_safely (Lisp_Object buffer)$/;"	f	signature:(Lisp_Object buffer)
replace_buffer_in_windows_safely	window.h	/^extern void replace_buffer_in_windows_safely (Lisp_Object);$/;"	p	signature:(Lisp_Object)
replace_range	insdel.c	/^replace_range (ptrdiff_t from, ptrdiff_t to, Lisp_Object new,$/;"	f	signature:(ptrdiff_t from, ptrdiff_t to, Lisp_Object new, bool prepare, bool inherit, bool markers, bool adjust_match_data)
replace_range	lisp.h	/^extern void replace_range (ptrdiff_t, ptrdiff_t, Lisp_Object, bool, bool, bool, bool);$/;"	p	signature:(ptrdiff_t, ptrdiff_t, Lisp_Object, bool, bool, bool, bool)
replace_range_2	insdel.c	/^replace_range_2 (ptrdiff_t from, ptrdiff_t from_byte,$/;"	f	signature:(ptrdiff_t from, ptrdiff_t from_byte, ptrdiff_t to, ptrdiff_t to_byte, const char *ins, ptrdiff_t inschars, ptrdiff_t insbytes, bool markers)
replace_range_2	lisp.h	/^extern void replace_range_2 (ptrdiff_t, ptrdiff_t, ptrdiff_t, ptrdiff_t,$/;"	p	signature:(ptrdiff_t, ptrdiff_t, ptrdiff_t, ptrdiff_t, const char *, ptrdiff_t, ptrdiff_t, bool)
replace_window	window.c	/^replace_window (Lisp_Object old, Lisp_Object new, bool setflag)$/;"	f	file:	signature:(Lisp_Object old, Lisp_Object new, bool setflag)
report_error	unexaix.c	/^report_error (const char *file, int fd)$/;"	f	file:	signature:(const char *file, int fd)
report_error_1	unexaix.c	/^report_error_1 (int fd, const char *msg, ...)$/;"	f	signature:(int fd, const char *msg, ...)
report_file_errno	fileio.c	/^report_file_errno (char const *string, Lisp_Object name, int errorno)$/;"	f	signature:(char const *string, Lisp_Object name, int errorno)
report_file_errno	lisp.h	/^extern _Noreturn void report_file_errno (const char *, Lisp_Object, int);$/;"	p	signature:(const char *, Lisp_Object, int)
report_file_error	fileio.c	/^report_file_error (char const *string, Lisp_Object name)$/;"	f	signature:(char const *string, Lisp_Object name)
report_file_error	lisp.h	/^extern _Noreturn void report_file_error (const char *, Lisp_Object);$/;"	p	signature:(const char *, Lisp_Object)
report_file_notify_error	fileio.c	/^report_file_notify_error (const char *string, Lisp_Object name)$/;"	f	signature:(const char *string, Lisp_Object name)
report_file_notify_error	lisp.h	/^extern _Noreturn void report_file_notify_error (const char *, Lisp_Object);$/;"	p	signature:(const char *, Lisp_Object)
report_interval_modification	lisp.h	/^extern void report_interval_modification (Lisp_Object, Lisp_Object);$/;"	p	signature:(Lisp_Object, Lisp_Object)
report_interval_modification	textprop.c	/^report_interval_modification (Lisp_Object start, Lisp_Object end)$/;"	f	signature:(Lisp_Object start, Lisp_Object end)
report_overlay_modification	buffer.c	/^report_overlay_modification (Lisp_Object start, Lisp_Object end, bool after,$/;"	f	signature:(Lisp_Object start, Lisp_Object end, bool after, Lisp_Object arg1, Lisp_Object arg2, Lisp_Object arg3)
report_overlay_modification	lisp.h	/^extern void report_overlay_modification (Lisp_Object, Lisp_Object, bool,$/;"	p	signature:(Lisp_Object, Lisp_Object, bool, Lisp_Object, Lisp_Object, Lisp_Object)
report_temacs_memory_usage	w32heap.c	/^report_temacs_memory_usage (void)$/;"	f	signature:(void)
report_temacs_memory_usage	w32heap.h	/^extern void report_temacs_memory_usage (void);$/;"	p	signature:(void)
reproduce_interval	intervals.c	/^reproduce_interval (INTERVAL source)$/;"	f	file:	signature:(INTERVAL source)
reproduce_tree	intervals.c	/^reproduce_tree (INTERVAL source, INTERVAL parent)$/;"	f	file:	signature:(INTERVAL source, INTERVAL parent)
reproduce_tree	intervals.c	/^static INTERVAL reproduce_tree (INTERVAL, INTERVAL);$/;"	p	file:
reproduce_tree_obj	intervals.c	/^reproduce_tree_obj (INTERVAL source, Lisp_Object parent)$/;"	f	file:	signature:(INTERVAL source, Lisp_Object parent)
requestor	xterm.h	/^  Window requestor;$/;"	m	struct:selection_input_event	access:public
request_sigio	dispextern.h	/^void request_sigio (void);$/;"	p	signature:(void)
request_sigio	sysdep.c	/^request_sigio (void)$/;"	f	signature:(void)
requeued_events_pending_p	keyboard.c	/^requeued_events_pending_p (void)$/;"	f	signature:(void)
requeued_events_pending_p	keyboard.h	/^extern bool requeued_events_pending_p (void);$/;"	p	signature:(void)
required_matrix_height	dispnew.c	/^required_matrix_height (struct window *w)$/;"	f	file:	signature:(struct window *w)
required_matrix_height	dispnew.c	/^static int required_matrix_height (struct window *);$/;"	p	file:	signature:(struct window *)
required_matrix_width	dispnew.c	/^required_matrix_width (struct window *w)$/;"	f	file:	signature:(struct window *w)
required_matrix_width	dispnew.c	/^static int required_matrix_width (struct window *);$/;"	p	file:	signature:(struct window *)
require_match	minibuf.c	/^  (Lisp_Object prompt, Lisp_Object collection, Lisp_Object predicate, Lisp_Object require_match, Lisp_Object initial_input, Lisp_Object hist, Lisp_Object def, Lisp_Object inherit_input_method)$/;"	v
require_match	minibuf.c	/^  (Lisp_Object prompt, Lisp_Object def, Lisp_Object require_match,$/;"	v
require_nesting_list	fns.c	/^static Lisp_Object require_nesting_list;$/;"	v	file:
require_unwind	fns.c	/^require_unwind (Lisp_Object old_value)$/;"	f	file:	signature:(Lisp_Object old_value)
reread_doc_file	doc.c	/^reread_doc_file (Lisp_Object file)$/;"	f	file:	signature:(Lisp_Object file)
reseat	xdisp.c	/^reseat (struct it *it, struct text_pos pos, bool force_p)$/;"	f	file:	signature:(struct it *it, struct text_pos pos, bool force_p)
reseat	xdisp.c	/^static void reseat (struct it *, struct text_pos, bool);$/;"	p	file:	signature:(struct it *, struct text_pos, bool)
reseat_1	xdisp.c	/^reseat_1 (struct it *it, struct text_pos pos, bool set_stop_p)$/;"	f	file:	signature:(struct it *it, struct text_pos pos, bool set_stop_p)
reseat_1	xdisp.c	/^static void reseat_1 (struct it *, struct text_pos, bool);$/;"	p	file:	signature:(struct it *, struct text_pos, bool)
reseat_at_next_visible_line_start	xdisp.c	/^reseat_at_next_visible_line_start (struct it *it, bool on_newline_p)$/;"	f	file:	signature:(struct it *it, bool on_newline_p)
reseat_at_previous_visible_line_start	dispextern.h	/^extern void reseat_at_previous_visible_line_start (struct it *);$/;"	p	signature:(struct it *)
reseat_at_previous_visible_line_start	xdisp.c	/^reseat_at_previous_visible_line_start (struct it *it)$/;"	f	signature:(struct it *it)
reseat_to_string	xdisp.c	/^reseat_to_string (struct it *it, const char *s, Lisp_Object string,$/;"	f	file:	signature:(struct it *it, const char *s, Lisp_Object string, ptrdiff_t charpos, ptrdiff_t precision, int field_width, int multibyte)
Reserved	w32.c	/^    USHORT Reserved;$/;"	m	struct:_REPARSE_DATA_BUFFER	file:	access:public
Reserved	w32heap.c	/^  SIZE_T Reserved[ 2 ];$/;"	m	struct:_RTL_HEAP_PARAMETERS	file:	access:public
resetstkoflw	w32fns.c	/^static _resetstkoflw_proc resetstkoflw;$/;"	v	file:
reset_all_sys_modes	lisp.h	/^extern void reset_all_sys_modes (void);$/;"	p	signature:(void)
reset_all_sys_modes	sysdep.c	/^reset_all_sys_modes (void)$/;"	f	signature:(void)
reset_buffer	buffer.c	/^reset_buffer (register struct buffer *b)$/;"	f	signature:(register struct buffer *b)
reset_buffer	buffer.h	/^extern void reset_buffer (struct buffer *);$/;"	p	signature:(struct buffer *)
reset_buffer_local_variables	buffer.c	/^reset_buffer_local_variables (struct buffer *b, bool permanent_too)$/;"	f	file:	signature:(struct buffer *b, bool permanent_too)
reset_buffer_local_variables	buffer.c	/^static void reset_buffer_local_variables (struct buffer *, bool);$/;"	p	file:	signature:(struct buffer *, bool)
reset_image_types	image.c	/^reset_image_types (void)$/;"	f	signature:(void)
reset_image_types	lisp.h	/^extern void reset_image_types (void);$/;"	p	signature:(void)
RESET_INTERVAL	intervals.h	168;"	d
reset_modifiers	w32fns.c	/^reset_modifiers (void)$/;"	f	file:	signature:(void)
reset_mouse_highlight	dispextern.h	/^reset_mouse_highlight (Mouse_HLInfo *hlinfo)$/;"	f	signature:(Mouse_HLInfo *hlinfo)
reset_sigio	sysdep.c	/^reset_sigio (int fd)$/;"	f	file:	signature:(int fd)
reset_standard_handles	w32.h	/^extern void reset_standard_handles (int in, int out,$/;"	p	signature:(int in, int out, int err, HANDLE handles[4])
reset_standard_handles	w32proc.c	/^reset_standard_handles (int in, int out, int err, HANDLE handles[3])$/;"	f	signature:(int in, int out, int err, HANDLE handles[3])
reset_sys_modes	lisp.h	/^extern void reset_sys_modes (struct tty_display_info *);$/;"	p	signature:(struct tty_display_info *)
reset_sys_modes	sysdep.c	/^reset_sys_modes (struct tty_display_info *tty_out)$/;"	f	signature:(struct tty_display_info *tty_out)
reset_terminal_modes_hook	termhooks.h	/^  void (*reset_terminal_modes_hook) (struct terminal *);$/;"	m	struct:terminal	access:public
reset_var_on_error	insdel.c	/^reset_var_on_error (void *ptr)$/;"	f	file:	signature:(void *ptr)
reset_w32_kbdhook_state	w32fns.c	/^reset_w32_kbdhook_state (void)$/;"	f	file:	signature:(void)
resized_p	frame.h	/^  bool_bf resized_p : 1;$/;"	m	struct:frame	access:public
resize_bloc	ralloc.c	/^resize_bloc (bloc_ptr bloc, size_t size)$/;"	f	file:	signature:(bloc_ptr bloc, size_t size)
resize_cb	widget.c	/^resize_cb (Widget widget,$/;"	f	file:	signature:(Widget widget, XtPointer closure, XEvent *event, Boolean *continue_to_dispatch)
resize_echo_area_exactly	dispextern.h	/^void resize_echo_area_exactly (void);$/;"	p	signature:(void)
resize_echo_area_exactly	xdisp.c	/^resize_echo_area_exactly (void)$/;"	f	signature:(void)
resize_event	w32inevt.c	/^resize_event (WINDOW_BUFFER_SIZE_RECORD *event)$/;"	f	file:	signature:(WINDOW_BUFFER_SIZE_RECORD *event)
resize_frame_windows	window.c	/^resize_frame_windows (struct frame *f, int size, bool horflag, bool pixelwise)$/;"	f	signature:(struct frame *f, int size, bool horflag, bool pixelwise)
resize_frame_windows	window.h	/^extern void resize_frame_windows (struct frame *, int, bool, bool);$/;"	p	signature:(struct frame *, int, bool, bool)
RESIZE_HANDLE_SIZE	nsterm.h	1271;"	d
resize_mini_window	dispextern.h	/^bool resize_mini_window (struct window *, bool);$/;"	p	signature:(struct window *, bool)
resize_mini_window	xdisp.c	/^resize_mini_window (struct window *w, bool exact_p)$/;"	f	signature:(struct window *w, bool exact_p)
resize_mini_window_1	xdisp.c	/^resize_mini_window_1 (ptrdiff_t a1, Lisp_Object exactly)$/;"	f	file:	signature:(ptrdiff_t a1, Lisp_Object exactly)
resize_mini_window_1	xdisp.c	/^static bool resize_mini_window_1 (ptrdiff_t, Lisp_Object);$/;"	p	file:
resize_root_window	window.c	/^resize_root_window (Lisp_Object window, Lisp_Object delta,$/;"	f	file:	signature:(Lisp_Object window, Lisp_Object delta, Lisp_Object horizontal, Lisp_Object ignore, Lisp_Object pixelwise)
resolved_level	dispextern.h	/^  signed char resolved_level;	\/* final resolved level of this character *\/$/;"	m	struct:bidi_it	access:public
resolved_level	dispextern.h	/^  unsigned resolved_level : 7;$/;"	m	struct:glyph	access:public
resolve_face_name	xfaces.c	/^resolve_face_name (Lisp_Object face_name, bool signal_p)$/;"	f	file:	signature:(Lisp_Object face_name, bool signal_p)
resolve_symbol_ccl_program	ccl.c	/^resolve_symbol_ccl_program (Lisp_Object ccl)$/;"	f	file:	signature:(Lisp_Object ccl)
resource	xfaces.c	/^  (Lisp_Object resource, Lisp_Object class, Lisp_Object frame)$/;"	v
resources	widget.c	/^static XtResource resources[] = {$/;"	v	file:
resource_name	xterm.h	/^  char *resource_name;$/;"	m	struct:xim_inst_t	access:public
resource_types	dispextern.h	/^enum resource_types$/;"	g
response	gtkutil.c	/^  int response;$/;"	m	struct:xg_dialog_data	file:	access:public
restore_buffer	buffer.c	/^restore_buffer (Lisp_Object buffer_or_name)$/;"	f	signature:(Lisp_Object buffer_or_name)
restore_buffer	buffer.h	/^extern void restore_buffer (Lisp_Object);$/;"	p	signature:(Lisp_Object)
restore_current_matrix	dispnew.c	/^restore_current_matrix (struct frame *f, struct glyph_matrix *saved)$/;"	f	file:	signature:(struct frame *f, struct glyph_matrix *saved)
restore_desired_matrix	term.c	/^restore_desired_matrix (struct frame *f, struct glyph_matrix *saved)$/;"	f	file:	signature:(struct frame *f, struct glyph_matrix *saved)
restore_getcjmp	keyboard.c	/^restore_getcjmp (sys_jmp_buf temp)$/;"	f	file:	signature:(sys_jmp_buf temp)
restore_getcjmp	keyboard.c	/^static void restore_getcjmp (sys_jmp_buf);$/;"	p	file:
RESTORE_IT	xdisp.c	568;"	d	file:
restore_kboard_configuration	keyboard.c	/^restore_kboard_configuration (int was_locked)$/;"	f	file:	signature:(int was_locked)
restore_kboard_configuration	keyboard.c	/^static void restore_kboard_configuration (int);$/;"	p	file:	signature:(int)
restore_menu_items	menu.c	/^restore_menu_items (Lisp_Object saved)$/;"	f	file:	signature:(Lisp_Object saved)
restore_message	lisp.h	/^extern void restore_message (void);$/;"	p	signature:(void)
restore_message	xdisp.c	/^restore_message (void)$/;"	f	signature:(void)
restore_message_unwind	lisp.h	/^extern Lisp_Object restore_message_unwind (Lisp_Object);$/;"	p	signature:(Lisp_Object)
restore_nofile_limit	process.c	/^restore_nofile_limit (void)$/;"	f	signature:(void)
restore_nofile_limit	process.h	/^extern void restore_nofile_limit (void);$/;"	p	signature:(void)
restore_point_unwind	fileio.c	/^restore_point_unwind (Lisp_Object location)$/;"	f	signature:(Lisp_Object location)
restore_point_unwind	lisp.h	/^extern void restore_point_unwind (Lisp_Object);$/;"	p	signature:(Lisp_Object)
restore_privilege	w32.c	/^restore_privilege (TOKEN_PRIVILEGES *priv)$/;"	f	file:	signature:(TOKEN_PRIVILEGES *priv)
restore_privilege	w32.c	/^static int restore_privilege (TOKEN_PRIVILEGES *);$/;"	p	file:	signature:(TOKEN_PRIVILEGES *)
restore_search_regs	lisp.h	/^extern void restore_search_regs (void);$/;"	p	signature:(void)
restore_search_regs	search.c	/^restore_search_regs (void)$/;"	f	signature:(void)
restore_signal_handlers	sysdep.c	/^restore_signal_handlers (struct save_signal *saved_handlers)$/;"	f	file:	signature:(struct save_signal *saved_handlers)
restore_signal_handlers	sysdep.c	/^static void restore_signal_handlers (struct save_signal *);$/;"	p	file:	signature:(struct save_signal *)
restore_signal_mask	sysdep.c	/^restore_signal_mask (sigset_t const *oldset)$/;"	f	signature:(sigset_t const *oldset)
restore_signal_mask	syssignal.h	/^extern void restore_signal_mask (sigset_t const *);$/;"	p	signature:(sigset_t const *)
restore_stack_limits	eval.c	/^restore_stack_limits (Lisp_Object data)$/;"	f	file:	signature:(Lisp_Object data)
restore_symbol_trapped_write	data.c	/^restore_symbol_trapped_write (Lisp_Object symbol)$/;"	f	file:	signature:(Lisp_Object symbol)
RESTORE_VALUE	insdel.c	2051;"	d	file:
restore_window_buffer	indent.c	/^restore_window_buffer (Lisp_Object list)$/;"	f	file:	signature:(Lisp_Object list)
restore_window_configuration	window.c	/^restore_window_configuration (Lisp_Object configuration)$/;"	f	signature:(Lisp_Object configuration)
restore_window_configuration	window.h	/^extern void restore_window_configuration (Lisp_Object);$/;"	p	signature:(Lisp_Object)
restore_window_points	fileio.c	/^restore_window_points (Lisp_Object window_markers, ptrdiff_t inserted,$/;"	f	file:	signature:(Lisp_Object window_markers, ptrdiff_t inserted, ptrdiff_t same_at_start, ptrdiff_t same_at_end)
restrict	config.h	1950;"	d
rest_length	ccl.c	/^  int rest_length;$/;"	m	struct:__anon81	file:	access:public
result	coding.h	/^  ENUM_BF (coding_result_code) result : 3;$/;"	m	struct:coding_system	access:public
result	thread.c	/^  int result;$/;"	m	struct:select_args	file:	access:public
result	w32term.h	/^  LRESULT               result;$/;"	m	struct:deferred_msg	access:public
RESUME_POLLING	keyboard.c	2124;"	d	file:
RESUME_POLLING	xdisp.c	13700;"	d	file:
resx	nsterm.h	/^  double resx, resy;$/;"	m	struct:ns_display_info	access:public
resx	w32term.h	/^  double resx, resy;$/;"	m	struct:w32_display_info	access:public
resx	xterm.h	/^  double resx, resy;$/;"	m	struct:x_display_info	access:public
resy	nsterm.h	/^  double resx, resy;$/;"	m	struct:ns_display_info	access:public
resy	w32term.h	/^  double resx, resy;$/;"	m	struct:w32_display_info	access:public
resy	xterm.h	/^  double resx, resy;$/;"	m	struct:x_display_info	access:public
RES_TYPE_BOOLEAN	dispextern.h	/^  RES_TYPE_BOOLEAN,$/;"	e	enum:resource_types
RES_TYPE_BOOLEAN_NUMBER	dispextern.h	/^  RES_TYPE_BOOLEAN_NUMBER$/;"	e	enum:resource_types
RES_TYPE_FLOAT	dispextern.h	/^  RES_TYPE_FLOAT,$/;"	e	enum:resource_types
RES_TYPE_NUMBER	dispextern.h	/^  RES_TYPE_NUMBER,$/;"	e	enum:resource_types
RES_TYPE_STRING	dispextern.h	/^  RES_TYPE_STRING,$/;"	e	enum:resource_types
RES_TYPE_SYMBOL	dispextern.h	/^  RES_TYPE_SYMBOL,$/;"	e	enum:resource_types
RETALLOC	regex.c	509;"	d	file:
RETALLOC_IF	regex.c	1313;"	d	file:
return_to_command_loop	keyboard.c	/^sigjmp_buf return_to_command_loop;$/;"	v
reuse	search.c	/^  (Lisp_Object integers, Lisp_Object reuse, Lisp_Object reseat)$/;"	v
reused_workbuf_in_use	coding.c	/^static bool reused_workbuf_in_use;$/;"	v	file:
revalidate_region_cache	region-cache.c	/^revalidate_region_cache (struct buffer *buf, struct region_cache *c)$/;"	f	file:	signature:(struct buffer *buf, struct region_cache *c)
revalidate_region_cache	region-cache.c	/^static void revalidate_region_cache (struct buffer *buf, struct region_cache *c);$/;"	p	file:	signature:(struct buffer *buf, struct region_cache *c)
reversed_p	dispextern.h	/^  bool reversed_p;$/;"	m	struct:composition_it	access:public
reversed_p	dispextern.h	/^  bool_bf reversed_p : 1;$/;"	m	struct:glyph_row	access:public
reverse_gc	xterm.h	/^  GC reverse_gc;			\/* Reverse video *\/$/;"	m	struct:x_output	access:public
reverse_rows	dispnew.c	/^reverse_rows (struct glyph_matrix *matrix, int start, int end)$/;"	f	file:	signature:(struct glyph_matrix *matrix, int start, int end)
RevertToSelf_Proc	w32.c	/^typedef BOOL (WINAPI * RevertToSelf_Proc) (void);$/;"	t	file:
revert_to_self	w32.c	/^revert_to_self (void)$/;"	f	file:	signature:(void)
revert_to_self	w32.c	/^static BOOL WINAPI revert_to_self (void);$/;"	p	file:	signature:(void)
RE_BACKSLASH_ESCAPE_IN_LISTS	regex.h	53;"	d
RE_BK_PLUS_QM	regex.h	58;"	d
re_char	regex.c	/^typedef const unsigned char re_char;$/;"	t	file:
re_char	regex.c	/^typedef unsigned char re_char;$/;"	t	file:
RE_CHAR_CLASSES	regex.h	64;"	d
RE_CHAR_TO_MULTIBYTE	regex.c	167;"	d	file:
RE_CHAR_TO_MULTIBYTE	regex.c	274;"	d	file:
RE_CHAR_TO_UNIBYTE	regex.c	169;"	d	file:
RE_CHAR_TO_UNIBYTE	regex.c	275;"	d	file:
re_comp	regex.c	/^re_comp (const char *s)$/;"	f	signature:(const char *s)
re_comp	regex.h	/^extern char *re_comp (const char *);$/;"	p	signature:(const char *)
re_compile_fastmap	regex.c	/^re_compile_fastmap (struct re_pattern_buffer *bufp)$/;"	f	signature:(struct re_pattern_buffer *bufp)
re_compile_fastmap	regex.c	97;"	d	file:
re_compile_fastmap	regex.h	/^extern int re_compile_fastmap (struct re_pattern_buffer *__buffer);$/;"	p	signature:(struct re_pattern_buffer *__buffer)
re_compile_pattern	regex.c	/^re_compile_pattern (const char *pattern, size_t length,$/;"	f	signature:(const char *pattern, size_t length, bool posix_backtracking, const char *whitespace_regexp, struct re_pattern_buffer *bufp)
re_compile_pattern	regex.c	92;"	d	file:
re_compile_pattern	regex.h	/^extern const char *re_compile_pattern (const char *__pattern, size_t __length,$/;"	p	signature:(const char *__pattern, size_t __length, bool posix_backtracking, const char *whitespace_regexp, struct re_pattern_buffer *__buffer)
re_comp_buf	regex.c	/^static struct re_pattern_buffer re_comp_buf;$/;"	v	typeref:struct:re_pattern_buffer	file:
RE_CONTEXT_INDEP_ANCHORS	regex.h	78;"	d
RE_CONTEXT_INDEP_OPS	regex.h	86;"	d
RE_CONTEXT_INVALID_OPS	regex.h	90;"	d
RE_DEBUG	regex.h	167;"	d
RE_DOT_NEWLINE	regex.h	94;"	d
RE_DOT_NOT_NULL	regex.h	98;"	d
RE_DUP_MAX	regex.h	271;"	d
RE_DUP_MAX	regex.h	274;"	d
re_error_msgid	regex.c	/^static const char *re_error_msgid[] =$/;"	v	file:
re_exec	regex.c	/^re_exec (const char *s)$/;"	f	signature:(const char *s)
re_exec	regex.h	/^extern int re_exec (const char *);$/;"	p	signature:(const char *)
RE_FRUGAL	regex.h	153;"	d
RE_HAT_LISTS_NOT_NEWLINE	regex.h	102;"	d
RE_INTERVALS	regex.h	107;"	d
re_iswctype	regex.c	/^re_iswctype (int ch, re_wctype_t cc)$/;"	f	signature:(int ch, re_wctype_t cc)
re_iswctype	regex.h	/^extern char re_iswctype (int ch,    re_wctype_t cc);$/;"	p	signature:(int ch, re_wctype_t cc)
re_iswctype	regex.h	617;"	d
RE_LIMITED_OPS	regex.h	111;"	d
re_match	regex.c	/^re_match (struct re_pattern_buffer *bufp, const char *string,$/;"	f	signature:(struct re_pattern_buffer *bufp, const char *string, size_t size, ssize_t pos, struct re_registers *regs)
re_match	regex.c	88;"	d	file:
re_match	regex.h	/^extern regoff_t re_match (struct re_pattern_buffer *__buffer,$/;"	p	signature:(struct re_pattern_buffer *__buffer, const char *__string, size_t __length, ssize_t __start, struct re_registers *__regs)
re_match_2	regex.c	86;"	d	file:
re_match_2	regex.h	/^extern regoff_t re_match_2 (struct re_pattern_buffer *__buffer,$/;"	p	signature:(struct re_pattern_buffer *__buffer, const char *__string1, size_t __length1, const char *__string2, size_t __length2, ssize_t __start, struct re_registers *__regs, ssize_t __stop)
re_match_2_internal	regex.c	/^re_match_2_internal (struct re_pattern_buffer *bufp, const_re_char *string1,$/;"	f	file:	signature:(struct re_pattern_buffer *bufp, const_re_char *string1, size_t size1, const_re_char *string2, size_t size2, ssize_t pos, struct re_registers *regs, ssize_t stop)
re_match_2_internal	regex.c	/^static regoff_t re_match_2_internal (struct re_pattern_buffer *bufp,$/;"	p	file:	signature:(struct re_pattern_buffer *bufp, re_char *string1, size_t size1, re_char *string2, size_t size2, ssize_t pos, struct re_registers *regs, ssize_t stop)
re_match_object	thread.h	137;"	d
RE_MULTIBYTE_P	regex.c	160;"	d	file:
RE_MULTIBYTE_P	regex.c	264;"	d	file:
RE_NEWLINE_ALT	regex.h	115;"	d
RE_NO_BK_BRACES	regex.h	120;"	d
RE_NO_BK_PARENS	regex.h	124;"	d
RE_NO_BK_REFS	regex.h	128;"	d
RE_NO_BK_VBAR	regex.h	132;"	d
RE_NO_EMPTY_RANGES	regex.h	138;"	d
RE_NO_GNU_OPS	regex.h	150;"	d
RE_NO_NEWLINE_ANCHOR	regex.h	159;"	d
RE_NO_POSIX_BACKTRACKING	regex.h	146;"	d
RE_NREGS	regex.h	458;"	d
re_nsub	regex.h	/^  size_t re_nsub;$/;"	m	struct:re_pattern_buffer	access:public
re_opcode_t	regex.c	/^} re_opcode_t;$/;"	t	typeref:enum:__anon144	file:
re_pattern_buffer	regex.h	/^struct re_pattern_buffer$/;"	s
re_pattern_buffer::allocated	regex.h	/^  size_t allocated;$/;"	m	struct:re_pattern_buffer	access:public
re_pattern_buffer::buffer	regex.h	/^  unsigned char *buffer;$/;"	m	struct:re_pattern_buffer	access:public
re_pattern_buffer::can_be_null	regex.h	/^  unsigned can_be_null : 1;$/;"	m	struct:re_pattern_buffer	access:public
re_pattern_buffer::charset_unibyte	regex.h	/^  int charset_unibyte;$/;"	m	struct:re_pattern_buffer	access:public
re_pattern_buffer::fastmap	regex.h	/^  char *fastmap;$/;"	m	struct:re_pattern_buffer	access:public
re_pattern_buffer::fastmap_accurate	regex.h	/^  unsigned fastmap_accurate : 1;$/;"	m	struct:re_pattern_buffer	access:public
re_pattern_buffer::multibyte	regex.h	/^  unsigned multibyte : 1;$/;"	m	struct:re_pattern_buffer	access:public
re_pattern_buffer::not_bol	regex.h	/^  unsigned not_bol : 1;$/;"	m	struct:re_pattern_buffer	access:public
re_pattern_buffer::not_eol	regex.h	/^  unsigned not_eol : 1;$/;"	m	struct:re_pattern_buffer	access:public
re_pattern_buffer::no_sub	regex.h	/^  unsigned no_sub : 1;$/;"	m	struct:re_pattern_buffer	access:public
re_pattern_buffer::regs_allocated	regex.h	/^  unsigned regs_allocated : 2;$/;"	m	struct:re_pattern_buffer	access:public
re_pattern_buffer::re_nsub	regex.h	/^  size_t re_nsub;$/;"	m	struct:re_pattern_buffer	access:public
re_pattern_buffer::syntax	regex.h	/^  reg_syntax_t syntax;$/;"	m	struct:re_pattern_buffer	access:public
re_pattern_buffer::target_multibyte	regex.h	/^  unsigned target_multibyte : 1;$/;"	m	struct:re_pattern_buffer	access:public
re_pattern_buffer::translate	regex.h	/^  RE_TRANSLATE_TYPE translate;$/;"	m	struct:re_pattern_buffer	access:public
re_pattern_buffer::used	regex.h	/^  size_t used;$/;"	m	struct:re_pattern_buffer	access:public
re_pattern_buffer::used_syntax	regex.h	/^  unsigned used_syntax : 1;$/;"	m	struct:re_pattern_buffer	access:public
re_registers	regex.h	/^struct re_registers$/;"	s
re_registers::end	regex.h	/^  regoff_t *end;$/;"	m	struct:re_registers	access:public
re_registers::num_regs	regex.h	/^  unsigned num_regs;$/;"	m	struct:re_registers	access:public
re_registers::start	regex.h	/^  regoff_t *start;$/;"	m	struct:re_registers	access:public
re_search	regex.c	90;"	d	file:
re_search	regex.h	/^extern regoff_t re_search (struct re_pattern_buffer *__buffer,$/;"	p	signature:(struct re_pattern_buffer *__buffer, const char *__string, size_t __length, ssize_t __start, ssize_t __range, struct re_registers *__regs)
re_search_2	regex.c	95;"	d	file:
re_search_2	regex.h	/^extern regoff_t re_search_2 (struct re_pattern_buffer *__buffer,$/;"	p	signature:(struct re_pattern_buffer *__buffer, const char *__string1, size_t __length1, const char *__string2, size_t __length2, ssize_t __start, ssize_t __range, struct re_registers *__regs, ssize_t __stop)
re_set_registers	regex.c	/^re_set_registers (struct re_pattern_buffer *bufp, struct re_registers *regs, unsigned int num_regs, regoff_t *starts, regoff_t *ends)$/;"	f	signature:(struct re_pattern_buffer *bufp, struct re_registers *regs, unsigned int num_regs, regoff_t *starts, regoff_t *ends)
re_set_registers	regex.c	84;"	d	file:
re_set_registers	regex.h	/^extern void re_set_registers (struct re_pattern_buffer *__buffer,$/;"	p	signature:(struct re_pattern_buffer *__buffer, struct re_registers *__regs, unsigned __num_regs, regoff_t *__starts, regoff_t *__ends)
re_set_syntax	regex.c	/^re_set_syntax (reg_syntax_t syntax)$/;"	f	signature:(reg_syntax_t syntax)
re_set_syntax	regex.c	94;"	d	file:
re_set_syntax	regex.h	/^extern reg_syntax_t re_set_syntax (reg_syntax_t __syntax);$/;"	p	signature:(reg_syntax_t __syntax)
RE_SHY_GROUPS	regex.h	156;"	d
RE_STRING_CHAR	regex.c	162;"	d	file:
RE_STRING_CHAR	regex.c	270;"	d	file:
RE_STRING_CHAR_AND_LENGTH	regex.c	164;"	d	file:
RE_STRING_CHAR_AND_LENGTH	regex.c	273;"	d	file:
RE_SYNTAX_AWK	regex.h	204;"	d
RE_SYNTAX_ED	regex.h	234;"	d
RE_SYNTAX_EGREP	regex.h	224;"	d
RE_SYNTAX_EMACS	regex.h	201;"	d
RE_SYNTAX_GNU_AWK	regex.h	211;"	d
RE_SYNTAX_GREP	regex.h	219;"	d
re_syntax_options	regex.c	/^reg_syntax_t re_syntax_options;$/;"	v
RE_SYNTAX_POSIX_AWK	regex.h	215;"	d
RE_SYNTAX_POSIX_BASIC	regex.h	243;"	d
RE_SYNTAX_POSIX_EGREP	regex.h	230;"	d
RE_SYNTAX_POSIX_EXTENDED	regex.h	252;"	d
RE_SYNTAX_POSIX_MINIMAL_BASIC	regex.h	249;"	d
RE_SYNTAX_POSIX_MINIMAL_EXTENDED	regex.h	260;"	d
RE_SYNTAX_SED	regex.h	236;"	d
re_syntax_table	regex.c	/^static char re_syntax_table[CHAR_SET_SIZE];$/;"	v	file:
RE_TARGET_MULTIBYTE_P	regex.c	161;"	d	file:
RE_TARGET_MULTIBYTE_P	regex.c	265;"	d	file:
RE_TRANSLATE	conf_post.h	167;"	d
RE_TRANSLATE	regex.c	286;"	d	file:
RE_TRANSLATE_P	conf_post.h	168;"	d
RE_TRANSLATE_P	regex.c	287;"	d	file:
RE_TRANSLATE_TYPE	conf_post.h	166;"	d
RE_TRANSLATE_TYPE	regex.h	350;"	d
RE_UNMATCHED_RIGHT_PAREN_ORD	regex.h	142;"	d
re_wchar_t	regex.h	/^typedef int re_wchar_t;$/;"	t
re_wchar_t	regex.h	/^typedef wchar_t re_wchar_t;$/;"	t
re_wctype	regex.h	616;"	d
re_wctype_parse	regex.c	/^re_wctype_parse (const unsigned char **strp, unsigned limit)$/;"	f	signature:(const unsigned char **strp, unsigned limit)
re_wctype_parse	regex.h	/^extern re_wctype_t re_wctype_parse (const unsigned char **strp, unsigned limit);$/;"	p	signature:(const unsigned char **strp, unsigned limit)
re_wctype_t	regex.h	/^typedef wctype_t re_wctype_t;$/;"	t
re_wctype_t	regex.h	/^} re_wctype_t;$/;"	t	typeref:enum:__anon58
re_wctype_to_bit	regex.c	/^re_wctype_to_bit (re_wctype_t cc)$/;"	f	file:	signature:(re_wctype_t cc)
re_wctype_to_bit	regex.h	618;"	d
rfds	thread.c	/^  fd_set *rfds;$/;"	m	struct:select_args	file:	access:public
RFONT_DEF_FACE	fontset.c	267;"	d	file:
RFONT_DEF_FONT_DEF	fontset.c	270;"	d	file:
RFONT_DEF_NEW	fontset.c	282;"	d	file:
RFONT_DEF_OBJECT	fontset.c	272;"	d	file:
RFONT_DEF_SCORE	fontset.c	279;"	d	file:
RFONT_DEF_SET_FACE	fontset.c	268;"	d	file:
RFONT_DEF_SET_OBJECT	fontset.c	273;"	d	file:
RFONT_DEF_SET_SCORE	fontset.c	280;"	d	file:
RFONT_DEF_SPEC	fontset.c	271;"	d	file:
rgb	xterm.h	/^  XColor rgb;$/;"	m	struct:color_name_cache_entry	access:public
rgba	xsettings.c	/^  int rgba, lcdfilter, hintstyle;$/;"	m	struct:xsettings	file:	access:public
RGB_PIXEL_COLOR	dispextern.h	3375;"	d
RGB_PIXEL_COLOR	dispextern.h	3379;"	d
RGB_TO_ULONG	nsterm.h	802;"	d
rgstate	w32fns.c	/^  DWORD rgstate[C_CHILDREN_TITLEBAR+1];$/;"	m	struct:__anon73	file:	access:public
rid	w32.c	/^  unsigned rid;$/;"	m	struct:w32_id	file:	access:public
rif	termhooks.h	/^  struct redisplay_interface *rif;$/;"	m	struct:terminal	typeref:struct:terminal::redisplay_interface	access:public
RIFF	sound.c	/^  RIFF,$/;"	e	enum:sound_type	file:
right	alloc.c	/^  struct mem_node *left, *right;$/;"	m	struct:mem_node	typeref:struct:mem_node::	file:	access:public
Right	cm.h	109;"	d
right	intervals.h	/^  struct interval *right;	\/* Intervals which succeed me.  *\/$/;"	m	struct:interval	typeref:struct:interval::interval	access:public
RIGHT	w32console.c	232;"	d	file:
RIGHT	w32console.c	234;"	d	file:
RightCost	cm.h	132;"	d
RIGHT_ANGLE_BRACKET	character.h	/^  RIGHT_ANGLE_BRACKET = 0x3009,$/;"	e	enum:__anon54
right_arrow_bits	fringe.c	/^static unsigned short right_arrow_bits[] = {$/;"	v	file:
right_box_line_p	dispextern.h	/^  bool_bf right_box_line_p : 1;$/;"	m	struct:glyph	access:public
right_bracket_bits	fringe.c	/^static unsigned short right_bracket_bits[] = {$/;"	v	file:
RIGHT_CORNER	dispextern.h	3013;"	d
right_curly_arrow_bits	fringe.c	/^static unsigned short right_curly_arrow_bits[] = {$/;"	v	file:
right_divider_width	frame.h	/^  int right_divider_width, bottom_divider_width;$/;"	m	struct:frame	access:public
right_edge_cursor	nsterm.h	/^  Cursor right_edge_cursor;$/;"	m	struct:ns_output	access:public
right_edge_cursor	w32term.h	/^  Cursor right_edge_cursor;$/;"	m	struct:w32_output	access:public
right_edge_cursor	xterm.h	/^  Cursor right_edge_cursor;$/;"	m	struct:x_output	access:public
RIGHT_FRINGE	fringe.c	1038;"	d	file:
right_fringe_bitmap	dispextern.h	/^  unsigned right_fringe_bitmap : FRINGE_ID_BITS;$/;"	m	struct:glyph_row	access:public
right_fringe_face_id	dispextern.h	/^  unsigned right_fringe_face_id : FACE_ID_BITS;$/;"	m	struct:glyph_row	access:public
right_fringe_offset	dispextern.h	/^  signed right_fringe_offset : FRINGE_HEIGHT_BITS;$/;"	m	struct:glyph_row	access:public
right_fringe_width	frame.h	/^  int left_fringe_width, right_fringe_width;$/;"	m	struct:frame	access:public
right_fringe_width	window.c	/^  Lisp_Object left_fringe_width, right_fringe_width, fringes_outside_margins;$/;"	m	struct:saved_window	file:	access:public
right_fringe_width	window.h	/^    int right_fringe_width;$/;"	m	struct:window	access:public
right_fringe_width_	buffer.h	/^  Lisp_Object right_fringe_width_;$/;"	m	struct:buffer	access:public
RIGHT_MARGIN_AREA	dispextern.h	/^  RIGHT_MARGIN_AREA,$/;"	e	enum:glyph_row_area
right_margin_cols	window.c	/^  Lisp_Object left_margin_cols, right_margin_cols;$/;"	m	struct:saved_window	file:	access:public
right_margin_cols	window.h	/^    int right_margin_cols;$/;"	m	struct:window	access:public
right_margin_cols_	buffer.h	/^  Lisp_Object right_margin_cols_;$/;"	m	struct:buffer	access:public
right_margin_glyphs	dispextern.h	/^  int left_margin_glyphs, right_margin_glyphs;$/;"	m	struct:glyph_matrix	access:public
right_overhang	dispextern.h	/^  int right_overhang;$/;"	m	struct:glyph_string	access:public
right_overwriting	xdisp.c	/^right_overwriting (struct glyph_string *s)$/;"	f	file:	signature:(struct glyph_string *s)
right_overwritten	xdisp.c	/^right_overwritten (struct glyph_string *s)$/;"	f	file:	signature:(struct glyph_string *s)
RIGHT_POINTING_ANGLE_BRACKET	character.h	/^  RIGHT_POINTING_ANGLE_BRACKET = 0x232A,$/;"	e	enum:__anon54
RIGHT_SINGLE_QUOTATION_MARK	character.h	/^  RIGHT_SINGLE_QUOTATION_MARK = 0x2019,$/;"	e	enum:__anon54
RIGHT_TOTAL_LENGTH	intervals.h	113;"	d
right_triangle_bits	fringe.c	/^static unsigned short right_triangle_bits[] = {$/;"	v	file:
right_user_fringe_bitmap	dispextern.h	/^  unsigned right_user_fringe_bitmap : FRINGE_ID_BITS;$/;"	m	struct:glyph_row	access:public
right_user_fringe_bitmap	dispextern.h	/^  unsigned right_user_fringe_bitmap : FRINGE_ID_BITS;$/;"	m	struct:it	access:public
right_user_fringe_face_id	dispextern.h	/^  unsigned right_user_fringe_face_id : FACE_ID_BITS;$/;"	m	struct:glyph_row	access:public
right_user_fringe_face_id	dispextern.h	/^  unsigned right_user_fringe_face_id : FACE_ID_BITS;$/;"	m	struct:it	access:public
right_width	window.c	/^   Lisp_Object right_width, Lisp_Object outside_margins)$/;"	v
RIGHT_WIN_PRESSED	w32term.h	778;"	d
ring_bell	dispextern.h	/^extern void ring_bell (struct frame *);$/;"	p	signature:(struct frame *)
ring_bell	terminal.c	/^ring_bell (struct frame *f)$/;"	f	signature:(struct frame *f)
ring_bell_hook	termhooks.h	/^  void (*ring_bell_hook) (struct frame *f);$/;"	m	struct:terminal	access:public
RLE	dispextern.h	/^  RLE,		\/* right-to-left embedding *\/$/;"	e	enum:__anon114
RLI	dispextern.h	/^  RLI,		\/* right-to-left isolate *\/$/;"	e	enum:__anon114
RLIMIT_AS	vm-limit.c	88;"	d	file:
RLO	dispextern.h	/^  RLO,		\/* right-to-left override *\/$/;"	e	enum:__anon114
rmdir	w32.c	59;"	d	file:
RMOUSE	w32fns.c	93;"	d	file:
rm_eo	regex.h	/^  regoff_t rm_eo;  \/* Byte offset from string's start to substring's end.  *\/$/;"	m	struct:__anon57	access:public
rm_so	regex.h	/^  regoff_t rm_so;  \/* Byte offset from string's start to substring's start.  *\/$/;"	m	struct:__anon57	access:public
root_dir	w32.c	/^  char *    root_dir;$/;"	m	struct:volume_info_data	file:	access:public
ROOT_INTERVAL_P	intervals.h	88;"	d
root_window	frame.h	/^  Lisp_Object root_window;$/;"	m	struct:frame	access:public
root_window	nsterm.h	/^  Window root_window;$/;"	m	struct:ns_display_info	access:public
root_window	w32term.h	/^  Window root_window;$/;"	m	struct:w32_display_info	access:public
root_window	window.c	/^    Lisp_Object root_window;$/;"	m	struct:save_window_data	file:	access:public
root_window	xterm.h	/^  Window root_window;$/;"	m	struct:x_display_info	access:public
rotate_left	intervals.c	/^rotate_left (INTERVAL A)$/;"	f	file:	signature:(INTERVAL A)
rotate_matrix	dispextern.h	/^void rotate_matrix (struct glyph_matrix *, int, int, int);$/;"	p	signature:(struct glyph_matrix *, int, int, int)
rotate_matrix	dispnew.c	/^rotate_matrix (struct glyph_matrix *matrix, int first, int last, int by)$/;"	f	signature:(struct glyph_matrix *matrix, int first, int last, int by)
rotate_right	intervals.c	/^rotate_right (INTERVAL A)$/;"	f	file:	signature:(INTERVAL A)
ROUND	buffer.c	4678;"	d	file:
ROUND	ftfont.c	1532;"	d	file:
ROUNDUP	alloc.c	489;"	d	file:
roundup	unexhp9k800.c	73;"	d	file:
roundup	unexhp9k800.c	74;"	d	file:
roundup_size	alloc.c	/^    roundup_size = COMMON_MULTIPLE (vector_alignment, word_size)$/;"	e	enum:__anon9	file:
ROUNDUP_TO_PAGE_BOUNDARY	unexmacosx.c	194;"	d	file:
ROUND_DOWN	w32common.h	27;"	d
round_size_to_char	widget.c	/^round_size_to_char (EmacsFrame ew, Dimension in_width, Dimension in_height, Dimension *out_width, Dimension *out_height)$/;"	f	file:	signature:(EmacsFrame ew, Dimension in_width, Dimension in_height, Dimension *out_width, Dimension *out_height)
ROUND_UP	w32common.h	26;"	d
ROUND_UP_DST	unexw32.c	523;"	d	file:
ROUND_UP_DST_AND_ZERO	unexw32.c	525;"	d	file:
row	dispextern.h	/^  struct glyph_row *row;$/;"	m	struct:glyph_string	typeref:struct:glyph_string::glyph_row	access:public
row	dispnew.c	/^  struct glyph_row *row;$/;"	m	struct:row_entry	typeref:struct:row_entry::glyph_row	file:	access:public
row	xdisp.c	/^  (Lisp_Object row, Lisp_Object glyphs)$/;"	v
RowPosition	cm.h	118;"	d
RowPositionCost	cm.h	140;"	d
rows	dispextern.h	/^  struct glyph_row *rows;$/;"	m	struct:glyph_matrix	typeref:struct:glyph_matrix::glyph_row	access:public
rows	font.h	/^  int rows;$/;"	m	struct:font_bitmap	access:public
rows	image.c	/^  png_byte **rows;$/;"	m	struct:png_load_context	file:	access:public
rows_allocated	dispextern.h	/^  ptrdiff_t rows_allocated;$/;"	m	struct:glyph_matrix	access:public
rows_from_pos_range	xdisp.c	/^rows_from_pos_range (struct window *w,$/;"	f	file:	signature:(struct window *w, ptrdiff_t start_charpos, ptrdiff_t end_charpos, Lisp_Object disp_string, struct glyph_row **start, struct glyph_row **end)
row_containing_pos	dispextern.h	/^struct glyph_row *row_containing_pos (struct window *, ptrdiff_t,$/;"	p	signature:(struct window *, ptrdiff_t, struct glyph_row *, struct glyph_row *, int)
row_containing_pos	xdisp.c	/^row_containing_pos (struct window *w, ptrdiff_t charpos,$/;"	f	signature:(struct window *w, ptrdiff_t charpos, struct glyph_row *start, struct glyph_row *end, int dy)
row_entry	dispnew.c	/^struct row_entry$/;"	s	file:
row_entry::bucket	dispnew.c	/^  ptrdiff_t bucket;$/;"	m	struct:row_entry	file:	access:public
row_entry::new_line_number	dispnew.c	/^  int new_line_number;$/;"	m	struct:row_entry	file:	access:public
row_entry::new_uses	dispnew.c	/^  int old_uses, new_uses;$/;"	m	struct:row_entry	file:	access:public
row_entry::next	dispnew.c	/^  struct row_entry *next;$/;"	m	struct:row_entry	typeref:struct:row_entry::row_entry	file:	access:public
row_entry::old_uses	dispnew.c	/^  int old_uses, new_uses;$/;"	m	struct:row_entry	file:	access:public
row_entry::row	dispnew.c	/^  struct glyph_row *row;$/;"	m	struct:row_entry	typeref:struct:row_entry::glyph_row	file:	access:public
row_entry_idx	dispnew.c	/^static ptrdiff_t row_entry_idx;$/;"	v	file:
row_entry_pool	dispnew.c	/^static struct row_entry *row_entry_pool;$/;"	v	typeref:struct:row_entry	file:
row_entry_pool_size	dispnew.c	/^static ptrdiff_t row_entry_pool_size;$/;"	v	file:
row_equal_p	dispnew.c	/^row_equal_p (struct glyph_row *a, struct glyph_row *b, bool mouse_face_p)$/;"	f	file:	signature:(struct glyph_row *a, struct glyph_row *b, bool mouse_face_p)
row_for_charpos_p	xdisp.c	/^row_for_charpos_p (struct glyph_row *row, ptrdiff_t charpos)$/;"	f	file:	signature:(struct glyph_row *row, ptrdiff_t charpos)
row_for_charpos_p	xdisp.c	/^static bool row_for_charpos_p (struct glyph_row *, ptrdiff_t);$/;"	p	file:	signature:(struct glyph_row *, ptrdiff_t)
ROW_GLYPH_NEWLINE_P	xdisp.c	22258;"	d	file:
ROW_GLYPH_NEWLINE_P	xdisp.c	22685;"	d	file:
row_hash	dispextern.h	/^extern unsigned row_hash (struct glyph_row *);$/;"	p	signature:(struct glyph_row *)
row_hash	xdisp.c	/^row_hash (struct glyph_row *row)$/;"	f	signature:(struct glyph_row *row)
row_table	dispnew.c	/^static struct row_entry **row_table;$/;"	v	typeref:struct:row_entry	file:
row_table_size	dispnew.c	/^static ptrdiff_t row_table_size;$/;"	v	file:
row_text_area_empty	xdisp.c	/^row_text_area_empty (struct glyph_row *row)$/;"	f	file:	signature:(struct glyph_row *row)
RPov	termchar.h	/^  int RPov;                     \/* # chars to start a TS_repeat *\/$/;"	m	struct:tty_display_info	access:public
rrr	ccl.c	912;"	d	file:
RRR	ccl.c	913;"	d	file:
Rrr	ccl.c	914;"	d	file:
RSVG_CFLAGS	Makefile	/^RSVG_CFLAGS= $/;"	m
rsvg_handle_close	image.c	9147;"	d	file:
rsvg_handle_close	image.c	9167;"	d	file:
rsvg_handle_get_dimensions	image.c	9148;"	d	file:
rsvg_handle_get_dimensions	image.c	9168;"	d	file:
rsvg_handle_get_pixbuf	image.c	9149;"	d	file:
rsvg_handle_get_pixbuf	image.c	9169;"	d	file:
rsvg_handle_new	image.c	9150;"	d	file:
rsvg_handle_new	image.c	9170;"	d	file:
rsvg_handle_set_base_uri	image.c	9151;"	d	file:
rsvg_handle_set_base_uri	image.c	9171;"	d	file:
rsvg_handle_write	image.c	9152;"	d	file:
rsvg_handle_write	image.c	9172;"	d	file:
RSVG_LIBS	Makefile	/^RSVG_LIBS= $/;"	m
RtlCreateHeap_Proc	w32heap.c	/^typedef PVOID (WINAPI * RtlCreateHeap_Proc) ($/;"	t	file:
RTL_HEAP_PARAMETERS	w32heap.c	/^} RTL_HEAP_PARAMETERS, *PRTL_HEAP_PARAMETERS;$/;"	t	typeref:struct:_RTL_HEAP_PARAMETERS	file:
rule_idx	dispextern.h	/^  EMACS_INT rule_idx;$/;"	m	struct:composition_it	access:public
run	dispextern.h	/^struct run$/;"	s
run::current_vpos	dispextern.h	/^  int desired_vpos, current_vpos;$/;"	m	struct:run	access:public
run::current_y	dispextern.h	/^  int desired_y, current_y;$/;"	m	struct:run	access:public
run::desired_vpos	dispextern.h	/^  int desired_vpos, current_vpos;$/;"	m	struct:run	access:public
run::desired_y	dispextern.h	/^  int desired_y, current_y;$/;"	m	struct:run	access:public
run::height	dispextern.h	/^  int height, nrows;$/;"	m	struct:run	access:public
run::nrows	dispextern.h	/^  int height, nrows;$/;"	m	struct:run	access:public
running_asynch_code	emacs.c	/^bool running_asynch_code;$/;"	v
runs	dispnew.c	/^static struct run **runs;$/;"	v	typeref:struct:run	file:
runs_size	dispnew.c	/^static ptrdiff_t runs_size;$/;"	v	file:
run_all_atimers	atimer.c	/^run_all_atimers (void)$/;"	f	signature:(void)
run_all_atimers	atimer.h	/^void run_all_atimers (void);$/;"	p	signature:(void)
run_composition_function	composite.c	/^run_composition_function (ptrdiff_t from, ptrdiff_t to, Lisp_Object prop)$/;"	f	file:	signature:(ptrdiff_t from, ptrdiff_t to, Lisp_Object prop)
run_exit_minibuf_hook	minibuf.c	/^run_exit_minibuf_hook (void)$/;"	f	file:	signature:(void)
run_exit_minibuf_hook	minibuf.c	/^static void run_exit_minibuf_hook (void);$/;"	p	file:	signature:(void)
run_finalizers	alloc.c	/^run_finalizers (struct Lisp_Finalizer *finalizers)$/;"	f	file:	signature:(struct Lisp_Finalizer *finalizers)
run_finalizer_function	alloc.c	/^run_finalizer_function (Lisp_Object function)$/;"	f	file:	signature:(Lisp_Object function)
run_finalizer_handler	alloc.c	/^run_finalizer_handler (Lisp_Object args)$/;"	f	file:	signature:(Lisp_Object args)
run_funs	window.c	/^run_funs (Lisp_Object funs)$/;"	f	file:	signature:(Lisp_Object funs)
run_hook	eval.c	/^run_hook (Lisp_Object hook)$/;"	f	signature:(Lisp_Object hook)
run_hook	lisp.h	/^extern void run_hook (Lisp_Object);$/;"	p	signature:(Lisp_Object)
run_hook_with_args	eval.c	/^run_hook_with_args (ptrdiff_t nargs, Lisp_Object *args,$/;"	f	signature:(ptrdiff_t nargs, Lisp_Object *args, Lisp_Object (*funcall) (ptrdiff_t nargs, Lisp_Object *args))
run_hook_with_args	lisp.h	/^extern Lisp_Object run_hook_with_args (ptrdiff_t nargs, Lisp_Object *args,$/;"	p	signature:(ptrdiff_t nargs, Lisp_Object *args, Lisp_Object (*funcall) (ptrdiff_t nargs, Lisp_Object *args))
run_hook_with_args_2	eval.c	/^run_hook_with_args_2 (Lisp_Object hook, Lisp_Object arg1, Lisp_Object arg2)$/;"	f	signature:(Lisp_Object hook, Lisp_Object arg1, Lisp_Object arg2)
run_hook_with_args_2	lisp.h	/^extern void run_hook_with_args_2 (Lisp_Object, Lisp_Object, Lisp_Object);$/;"	p	signature:(Lisp_Object, Lisp_Object, Lisp_Object)
run_hook_wrapped_funcall	eval.c	/^run_hook_wrapped_funcall (ptrdiff_t nargs, Lisp_Object *args)$/;"	f	file:	signature:(ptrdiff_t nargs, Lisp_Object *args)
run_pool	dispnew.c	/^static struct run *run_pool;$/;"	v	typeref:struct:run	file:
run_protected	w32select.c	/^run_protected (Lisp_Object (*code) (Lisp_Object), Lisp_Object arg)$/;"	f	file:	signature:(Lisp_Object (code) Lisp_Object), Lisp_Object arg)
run_protected	w32select.c	/^static void run_protected (Lisp_Object (*code) (Lisp_Object), Lisp_Object arg);$/;"	p	file:	signature:(Lisp_Object (code) Lisp_Object), Lisp_Object arg)
run_redisplay_end_trigger_hook	xdisp.c	/^run_redisplay_end_trigger_hook (struct it *it)$/;"	f	file:	signature:(struct it *it)
run_redisplay_end_trigger_hook	xdisp.c	/^static void run_redisplay_end_trigger_hook (struct it *);$/;"	p	file:	signature:(struct it *)
RUN_TEMACS	Makefile	/^RUN_TEMACS = .\/temacs$/;"	m
run_thread	thread.c	/^run_thread (void *state)$/;"	f	file:	signature:(void *state)
run_timers	atimer.c	/^run_timers (void)$/;"	f	file:	signature:(void)
run_time_remap	unexhp9k800.c	/^run_time_remap (char *ignored)$/;"	f	signature:(char *ignored)
run_undoable_change	insdel.c	/^run_undoable_change (void)$/;"	f	file:	signature:(void)
run_window_configuration_change_hook	window.c	/^run_window_configuration_change_hook (struct frame *f)$/;"	f	file:	signature:(struct frame *f)
run_window_configuration_change_hook	window.c	/^static void run_window_configuration_change_hook (struct frame *);$/;"	p	file:	signature:(struct frame *)
run_window_scroll_functions	xdisp.c	/^run_window_scroll_functions (Lisp_Object window, struct text_pos startp)$/;"	f	file:	signature:(Lisp_Object window, struct text_pos startp)
run_window_size_change_functions	window.c	/^run_window_size_change_functions (Lisp_Object frame)$/;"	f	signature:(Lisp_Object frame)
run_window_size_change_functions	window.h	/^void run_window_size_change_functions (Lisp_Object);$/;"	p	signature:(Lisp_Object)
RUSTFLAGS	Makefile	/^RUSTFLAGS = $/;"	m
RUSTFLAGS_FILE	Makefile	/^RUSTFLAGS_FILE=$(rust_srcdir)\/target\/.rustflags$/;"	m
rust_count_one_bits	remacs-lib.h	/^int rust_count_one_bits(size_t val);$/;"	p	signature:(size_t val)
rust_count_trailing_zero_bits	remacs-lib.h	/^int rust_count_trailing_zero_bits(size_t val);$/;"	p	signature:(size_t val)
rust_init_syms	data.c	/^void rust_init_syms(void);$/;"	p	file:	signature:(void)
rust_make_temp	remacs-lib.h	/^int rust_make_temp(char *template, int flags);$/;"	p	signature:(char *template, int flags)
rust_srcdir	Makefile	/^rust_srcdir=$(top_srcdir)\/rust_src$/;"	m
RVA_TO_OFFSET	unexw32.c	310;"	d	file:
RVA_TO_PTR	w32proc.c	66;"	d	file:
rva_to_section	unexw32.c	/^rva_to_section (DWORD_PTR rva, IMAGE_NT_HEADERS * nt_header)$/;"	f	signature:(DWORD_PTR rva, IMAGE_NT_HEADERS * nt_header)
rva_to_section	w32heap.h	/^IMAGE_SECTION_HEADER * rva_to_section (DWORD_PTR, IMAGE_NT_HEADERS *);$/;"	p	signature:(DWORD_PTR, IMAGE_NT_HEADERS *)
RVA_TO_SECTION_OFFSET	unexw32.c	313;"	d	file:
rvoe_arg	insdel.c	/^struct rvoe_arg$/;"	s	file:
rvoe_arg::errorp	insdel.c	/^  bool errorp;$/;"	m	struct:rvoe_arg	file:	access:public
rvoe_arg::location	insdel.c	/^  Lisp_Object *location;$/;"	m	struct:rvoe_arg	file:	access:public
rwindown	w32fns.c	/^  int rwindown;      \/* Right Windows key currently pressed (and hooked) *\/$/;"	m	struct:__anon74	file:	access:public
rwin_hooked	w32fns.c	/^  char rwin_hooked[256]; \/* hook right Win+[this key]? *\/$/;"	m	struct:__anon74	file:	access:public
r_alloc	ralloc.c	/^r_alloc (void **ptr, size_t size)$/;"	f	signature:(void **ptr, size_t size)
r_alloc_check	ralloc.c	/^r_alloc_check (void)$/;"	f	signature:(void)
r_alloc_free	lisp.h	/^extern void r_alloc_free (void **);$/;"	p	signature:(void **)
r_alloc_free	ralloc.c	/^r_alloc_free (void **ptr)$/;"	f	signature:(void **ptr)
r_alloc_freeze_level	ralloc.c	/^static int r_alloc_freeze_level;$/;"	v	file:
r_alloc_inhibit_buffer_relocation	lisp.h	/^extern void r_alloc_inhibit_buffer_relocation (int);$/;"	p	signature:(int)
r_alloc_inhibit_buffer_relocation	ralloc.c	/^r_alloc_inhibit_buffer_relocation (int inhibit)$/;"	f	signature:(int inhibit)
r_alloc_init	ralloc.c	/^r_alloc_init (void)$/;"	f	file:	signature:(void)
r_alloc_init	ralloc.c	/^static void r_alloc_init (void);$/;"	p	file:	signature:(void)
r_alloc_initialized	ralloc.c	/^static int r_alloc_initialized = 0;$/;"	v	file:
r_alloc_reinit	ralloc.c	/^r_alloc_reinit (void)$/;"	f	signature:(void)
r_alloc_reset_variable	lisp.h	/^extern void r_alloc_reset_variable (void **, void **);$/;"	p	signature:(void **, void **)
r_alloc_reset_variable	ralloc.c	/^r_alloc_reset_variable (void **old, void **new)$/;"	f	signature:(void **old, void **new)
r_alloc_sbrk	ralloc.c	/^r_alloc_sbrk (ptrdiff_t size)$/;"	f	file:	signature:(ptrdiff_t size)
r_re_alloc	ralloc.c	/^r_re_alloc (void **ptr, size_t size)$/;"	f	signature:(void **ptr, size_t size)
s	alloc.c	/^  struct Lisp_Symbol s;$/;"	m	union:aligned_Lisp_Symbol	typeref:struct:aligned_Lisp_Symbol::Lisp_Symbol	file:	access:public
s	dispextern.h	/^  const unsigned char *s;	\/* string data, or NULL if reordering buffer *\/$/;"	m	struct:bidi_string_data	access:public
s	dispextern.h	/^  const unsigned char *s;$/;"	m	struct:it	access:public
s	lisp.h	/^  struct Lisp_Cons s;$/;"	m	union:Aligned_Cons	typeref:struct:Aligned_Cons::Lisp_Cons	access:public
s	lisp.h	/^  struct Lisp_String s;$/;"	m	union:Aligned_String	typeref:struct:Aligned_String::Lisp_String	access:public
s1	fns.c	/^  (Lisp_Object s1, Lisp_Object s2, Lisp_Object locale, Lisp_Object ignore_case)$/;"	v
s2	fns.c	/^  (Lisp_Object s1, Lisp_Object s2, Lisp_Object locale, Lisp_Object ignore_case)$/;"	v
sa	process.c	/^  struct sockaddr *sa;$/;"	m	struct:sockaddr_and_len	typeref:struct:sockaddr_and_len::sockaddr	file:	access:public
SAFE_ALLOCA	lisp.h	4458;"	d
SAFE_ALLOCA_LISP	lisp.h	4520;"	d
SAFE_ALLOCA_LISP_EXTRA	lisp.h	4499;"	d
SAFE_ALLOCA_STRING	lisp.h	4480;"	d
safe_call	lisp.h	/^extern Lisp_Object safe_call (ptrdiff_t, Lisp_Object, ...);$/;"	p	signature:(ptrdiff_t, Lisp_Object, ...)
safe_call	xdisp.c	/^safe_call (ptrdiff_t nargs, Lisp_Object func, ...)$/;"	f	signature:(ptrdiff_t nargs, Lisp_Object func, ...)
safe_call1	lisp.h	/^extern Lisp_Object safe_call1 (Lisp_Object, Lisp_Object);$/;"	p	signature:(Lisp_Object, Lisp_Object)
safe_call1	xdisp.c	/^safe_call1 (Lisp_Object fn, Lisp_Object arg)$/;"	f	signature:(Lisp_Object fn, Lisp_Object arg)
safe_call2	lisp.h	/^extern Lisp_Object safe_call2 (Lisp_Object, Lisp_Object, Lisp_Object);$/;"	p	signature:(Lisp_Object, Lisp_Object, Lisp_Object)
safe_call2	xdisp.c	/^safe_call2 (Lisp_Object fn, Lisp_Object arg1, Lisp_Object arg2)$/;"	f	signature:(Lisp_Object fn, Lisp_Object arg1, Lisp_Object arg2)
safe_charsets	coding.h	/^  unsigned char *safe_charsets;$/;"	m	struct:coding_system	access:public
SAFE_CHARSET_P	coding.c	2883;"	d	file:
safe_debug_print	print.c	/^safe_debug_print (Lisp_Object arg)$/;"	f	signature:(Lisp_Object arg)
safe_debug_print	print.c	/^void safe_debug_print (Lisp_Object) EXTERNALLY_VISIBLE;$/;"	p	file:
safe_eval	lisp.h	/^extern Lisp_Object safe_eval (Lisp_Object);$/;"	p	signature:(Lisp_Object)
safe_eval	xdisp.c	/^safe_eval (Lisp_Object sexpr)$/;"	f	signature:(Lisp_Object sexpr)
safe_eval_handler	xdisp.c	/^safe_eval_handler (Lisp_Object arg, ptrdiff_t nargs, Lisp_Object *args)$/;"	f	file:	signature:(Lisp_Object arg, ptrdiff_t nargs, Lisp_Object *args)
SAFE_FREE	lisp.h	4488;"	d
SAFE_NALLOCA	lisp.h	4466;"	d
safe_run_hooks	keyboard.c	/^safe_run_hooks (Lisp_Object hook)$/;"	f	signature:(Lisp_Object hook)
safe_run_hooks	lisp.h	/^extern void safe_run_hooks (Lisp_Object);$/;"	p	signature:(Lisp_Object)
safe_run_hooks_1	keyboard.c	/^safe_run_hooks_1 (ptrdiff_t nargs, Lisp_Object *args)$/;"	f	file:	signature:(ptrdiff_t nargs, Lisp_Object *args)
safe_run_hooks_error	keyboard.c	/^safe_run_hooks_error (Lisp_Object error, ptrdiff_t nargs, Lisp_Object *args)$/;"	f	file:	signature:(Lisp_Object error, ptrdiff_t nargs, Lisp_Object *args)
safe_run_hook_funcall	keyboard.c	/^safe_run_hook_funcall (ptrdiff_t nargs, Lisp_Object *args)$/;"	f	file:	signature:(ptrdiff_t nargs, Lisp_Object *args)
safe_strsignal	sysdep.c	/^safe_strsignal (int code)$/;"	f	signature:(int code)
safe_terminal_coding	coding.c	/^struct coding_system safe_terminal_coding;$/;"	v	typeref:struct:coding_system
safe_to_load_version	lread.c	/^safe_to_load_version (int fd)$/;"	f	file:	signature:(int fd)
safe__call	xdisp.c	/^safe__call (bool inhibit_quit, ptrdiff_t nargs, Lisp_Object func, va_list ap)$/;"	f	file:	signature:(bool inhibit_quit, ptrdiff_t nargs, Lisp_Object func, va_list ap)
safe__call1	xdisp.c	/^safe__call1 (bool inhibit_quit, Lisp_Object fn, ...)$/;"	f	file:	signature:(bool inhibit_quit, Lisp_Object fn, ...)
safe__eval	xdisp.c	/^safe__eval (bool inhibit_quit, Lisp_Object sexpr)$/;"	f	file:	signature:(bool inhibit_quit, Lisp_Object sexpr)
SAME_CHARSET_P	charset.h	396;"	d
same_x_server	xterm.c	/^same_x_server (const char *name1, const char *name2)$/;"	f	file:	signature:(const char *name1, const char *name2)
samples	w32.c	/^static struct load_sample samples[16*60];$/;"	v	typeref:struct:load_sample	file:
sample_rate	sound.c	/^  int sample_rate;$/;"	m	struct:sound_device	file:	access:public
sample_rate	sound.c	/^  u_int32_t sample_rate;$/;"	m	struct:au_header	file:	access:public
sample_rate	sound.c	/^  u_int32_t sample_rate;$/;"	m	struct:wav_header	file:	access:public
sample_size	sound.c	/^  int sample_size;$/;"	m	struct:sound_device	file:	access:public
sample_size	sound.c	/^  u_int16_t sample_size;$/;"	m	struct:wav_header	file:	access:public
sample_system_load	w32.c	/^sample_system_load (ULONGLONG *idle, ULONGLONG *kernel, ULONGLONG *user)$/;"	f	file:	signature:(ULONGLONG *idle, ULONGLONG *kernel, ULONGLONG *user)
sample_time	w32.c	/^  time_t sample_time;$/;"	m	struct:load_sample	file:	access:public
SANE_TAB_WIDTH	character.h	560;"	d
sanitize_char_width	character.h	/^sanitize_char_width (EMACS_INT width)$/;"	f	signature:(EMACS_INT width)
sanitize_tab_width	character.h	/^sanitize_tab_width (EMACS_INT width)$/;"	f	signature:(EMACS_INT width)
sanitize_window_sizes	window.c	/^sanitize_window_sizes (Lisp_Object horizontal)$/;"	f	signature:(Lisp_Object horizontal)
sanitize_window_sizes	window.h	/^extern void sanitize_window_sizes (Lisp_Object horizontal);$/;"	p	signature:(Lisp_Object horizontal)
saturated_add	profiler.c	/^saturated_add (EMACS_INT a, EMACS_INT b)$/;"	f	file:	signature:(EMACS_INT a, EMACS_INT b)
saved_doc_string	lread.c	/^static char *saved_doc_string;$/;"	v	file:
saved_doc_string_length	lread.c	/^static ptrdiff_t saved_doc_string_length;$/;"	v	file:
saved_doc_string_position	lread.c	/^static file_offset saved_doc_string_position;$/;"	v	file:
saved_doc_string_size	lread.c	/^static ptrdiff_t saved_doc_string_size;$/;"	v	file:
saved_face_id	dispextern.h	/^  int saved_face_id;$/;"	m	struct:it	access:public
saved_last_thing_searched	thread.h	43;"	d
saved_menu_event	xterm.h	/^  XEvent *saved_menu_event;$/;"	m	struct:x_output	access:public
saved_mouse_button_msg	w32fns.c	/^static W32Msg saved_mouse_button_msg;$/;"	v	file:
saved_mouse_move_msg	w32fns.c	/^static W32Msg saved_mouse_move_msg;$/;"	v	file:
saved_search_regs	thread.h	128;"	d
saved_value	lisp.h	/^      Lisp_Object saved_value;$/;"	m	struct:specbinding::__anon33	access:public
saved_window	window.c	/^struct saved_window$/;"	s	file:
saved_window::buffer	window.c	/^  Lisp_Object window, buffer, start, pointm, old_pointm;$/;"	m	struct:saved_window	file:	access:public
saved_window::combination_limit	window.c	/^  Lisp_Object combination_limit, window_parameters;$/;"	m	struct:saved_window	file:	access:public
saved_window::dedicated	window.c	/^  Lisp_Object scroll_bar_width, vertical_scroll_bar_type, dedicated;$/;"	m	struct:saved_window	file:	access:public
saved_window::display_table	window.c	/^  Lisp_Object display_table;$/;"	m	struct:saved_window	file:	access:public
saved_window::fringes_outside_margins	window.c	/^  Lisp_Object left_fringe_width, right_fringe_width, fringes_outside_margins;$/;"	m	struct:saved_window	file:	access:public
saved_window::header	window.c	/^  struct vectorlike_header header;$/;"	m	struct:saved_window	typeref:struct:saved_window::vectorlike_header	file:	access:public
saved_window::horizontal_scroll_bar_type	window.c	/^  Lisp_Object scroll_bar_height, horizontal_scroll_bar_type;$/;"	m	struct:saved_window	file:	access:public
saved_window::hscroll	window.c	/^  Lisp_Object hscroll, min_hscroll, hscroll_whole, suspend_auto_hscroll;$/;"	m	struct:saved_window	file:	access:public
saved_window::hscroll_whole	window.c	/^  Lisp_Object hscroll, min_hscroll, hscroll_whole, suspend_auto_hscroll;$/;"	m	struct:saved_window	file:	access:public
saved_window::left_col	window.c	/^  Lisp_Object left_col, top_line, total_cols, total_lines;$/;"	m	struct:saved_window	file:	access:public
saved_window::left_fringe_width	window.c	/^  Lisp_Object left_fringe_width, right_fringe_width, fringes_outside_margins;$/;"	m	struct:saved_window	file:	access:public
saved_window::left_margin_cols	window.c	/^  Lisp_Object left_margin_cols, right_margin_cols;$/;"	m	struct:saved_window	file:	access:public
saved_window::min_hscroll	window.c	/^  Lisp_Object hscroll, min_hscroll, hscroll_whole, suspend_auto_hscroll;$/;"	m	struct:saved_window	file:	access:public
saved_window::normal_cols	window.c	/^  Lisp_Object normal_cols, normal_lines;$/;"	m	struct:saved_window	file:	access:public
saved_window::normal_lines	window.c	/^  Lisp_Object normal_cols, normal_lines;$/;"	m	struct:saved_window	file:	access:public
saved_window::old_pointm	window.c	/^  Lisp_Object window, buffer, start, pointm, old_pointm;$/;"	m	struct:saved_window	file:	access:public
saved_window::parent	window.c	/^  Lisp_Object parent, prev;$/;"	m	struct:saved_window	file:	access:public
saved_window::pixel_height	window.c	/^  Lisp_Object pixel_left, pixel_top, pixel_height, pixel_width;$/;"	m	struct:saved_window	file:	access:public
saved_window::pixel_height_before_size_change	window.c	/^  Lisp_Object pixel_height_before_size_change, pixel_width_before_size_change;$/;"	m	struct:saved_window	file:	access:public
saved_window::pixel_left	window.c	/^  Lisp_Object pixel_left, pixel_top, pixel_height, pixel_width;$/;"	m	struct:saved_window	file:	access:public
saved_window::pixel_top	window.c	/^  Lisp_Object pixel_left, pixel_top, pixel_height, pixel_width;$/;"	m	struct:saved_window	file:	access:public
saved_window::pixel_width	window.c	/^  Lisp_Object pixel_left, pixel_top, pixel_height, pixel_width;$/;"	m	struct:saved_window	file:	access:public
saved_window::pixel_width_before_size_change	window.c	/^  Lisp_Object pixel_height_before_size_change, pixel_width_before_size_change;$/;"	m	struct:saved_window	file:	access:public
saved_window::pointm	window.c	/^  Lisp_Object window, buffer, start, pointm, old_pointm;$/;"	m	struct:saved_window	file:	access:public
saved_window::prev	window.c	/^  Lisp_Object parent, prev;$/;"	m	struct:saved_window	file:	access:public
saved_window::right_fringe_width	window.c	/^  Lisp_Object left_fringe_width, right_fringe_width, fringes_outside_margins;$/;"	m	struct:saved_window	file:	access:public
saved_window::right_margin_cols	window.c	/^  Lisp_Object left_margin_cols, right_margin_cols;$/;"	m	struct:saved_window	file:	access:public
saved_window::scroll_bar_height	window.c	/^  Lisp_Object scroll_bar_height, horizontal_scroll_bar_type;$/;"	m	struct:saved_window	file:	access:public
saved_window::scroll_bar_width	window.c	/^  Lisp_Object scroll_bar_width, vertical_scroll_bar_type, dedicated;$/;"	m	struct:saved_window	file:	access:public
saved_window::start	window.c	/^  Lisp_Object window, buffer, start, pointm, old_pointm;$/;"	m	struct:saved_window	file:	access:public
saved_window::start_at_line_beg	window.c	/^  Lisp_Object start_at_line_beg;$/;"	m	struct:saved_window	file:	access:public
saved_window::suspend_auto_hscroll	window.c	/^  Lisp_Object hscroll, min_hscroll, hscroll_whole, suspend_auto_hscroll;$/;"	m	struct:saved_window	file:	access:public
saved_window::top_line	window.c	/^  Lisp_Object left_col, top_line, total_cols, total_lines;$/;"	m	struct:saved_window	file:	access:public
saved_window::total_cols	window.c	/^  Lisp_Object left_col, top_line, total_cols, total_lines;$/;"	m	struct:saved_window	file:	access:public
saved_window::total_lines	window.c	/^  Lisp_Object left_col, top_line, total_cols, total_lines;$/;"	m	struct:saved_window	file:	access:public
saved_window::vertical_scroll_bar_type	window.c	/^  Lisp_Object scroll_bar_width, vertical_scroll_bar_type, dedicated;$/;"	m	struct:saved_window	file:	access:public
saved_window::window	window.c	/^  Lisp_Object window, buffer, start, pointm, old_pointm;$/;"	m	struct:saved_window	file:	access:public
saved_window::window_parameters	window.c	/^  Lisp_Object combination_limit, window_parameters;$/;"	m	struct:saved_window	file:	access:public
saved_windows	window.c	/^    Lisp_Object saved_windows;$/;"	m	struct:save_window_data	file:	access:public
SAVED_WINDOW_N	window.c	6266;"	d	file:
save_and_enable_current_matrix	term.c	/^save_and_enable_current_matrix (struct frame *f)$/;"	f	file:	signature:(struct frame *f)
save_current_matrix	dispnew.c	/^save_current_matrix (struct frame *f)$/;"	f	file:	signature:(struct frame *f)
save_data_space	unexhp9k800.c	/^save_data_space (int file, struct header *hdr, struct som_exec_auxhdr *auxhdr,$/;"	f	file:	signature:(int file, struct header *hdr, struct som_exec_auxhdr *auxhdr, int size)
save_excursion_restore	editfns.c	/^save_excursion_restore (Lisp_Object info)$/;"	f	signature:(Lisp_Object info)
save_excursion_restore	lisp.h	/^extern void save_excursion_restore (Lisp_Object);$/;"	p	signature:(Lisp_Object)
save_excursion_save	editfns.c	/^save_excursion_save (void)$/;"	f	signature:(void)
save_excursion_save	lisp.h	/^extern Lisp_Object save_excursion_save (void);$/;"	p	signature:(void)
SAVE_FUNCPOINTER	lisp.h	/^    SAVE_FUNCPOINTER,$/;"	e	enum:Lisp_Save_Type
save_getcjmp	keyboard.c	/^save_getcjmp (sys_jmp_buf temp)$/;"	f	file:	signature:(sys_jmp_buf temp)
save_getcjmp	keyboard.c	/^static void save_getcjmp (sys_jmp_buf);$/;"	p	file:
SAVE_INTEGER	lisp.h	/^    SAVE_INTEGER,$/;"	e	enum:Lisp_Save_Type
SAVE_IT	xdisp.c	560;"	d	file:
save_length_	buffer.h	/^  Lisp_Object save_length_;$/;"	m	struct:buffer	access:public
save_menu_items	menu.c	/^save_menu_items (void)$/;"	f	signature:(void)
save_menu_items	menu.h	/^extern void save_menu_items (void);$/;"	p	signature:(void)
save_modiff	buffer.h	/^    EMACS_INT save_modiff;	\/* Previous value of modiff, as of last$/;"	m	struct:buffer_text	access:public
SAVE_MODIFF	buffer.h	98;"	d
SAVE_OBJECT	lisp.h	/^    SAVE_OBJECT,$/;"	e	enum:Lisp_Save_Type
SAVE_POINTER	lisp.h	/^    SAVE_POINTER,$/;"	e	enum:Lisp_Save_Type
save_restriction_restore	editfns.c	/^save_restriction_restore (Lisp_Object data)$/;"	f	signature:(Lisp_Object data)
save_restriction_restore	lisp.h	/^extern void save_restriction_restore (Lisp_Object);$/;"	p	signature:(Lisp_Object)
save_restriction_save	editfns.c	/^save_restriction_save (void)$/;"	f	signature:(void)
save_restriction_save	lisp.h	/^extern Lisp_Object save_restriction_save (void);$/;"	p	signature:(void)
save_search_regs	search.c	/^save_search_regs (void)$/;"	f	file:	signature:(void)
save_search_regs	search.c	/^static void save_search_regs (void);$/;"	p	file:	signature:(void)
SAVE_SESSION_EVENT	termhooks.h	/^  SAVE_SESSION_EVENT$/;"	e	enum:event_kind
save_signal	sysdep.c	/^struct save_signal$/;"	s	file:
save_signal::action	sysdep.c	/^  struct sigaction action;$/;"	m	struct:save_signal	typeref:struct:save_signal::sigaction	file:	access:public
save_signal::code	sysdep.c	/^  int code;$/;"	m	struct:save_signal	file:	access:public
save_signal_handlers	sysdep.c	/^save_signal_handlers (struct save_signal *saved_handlers)$/;"	f	file:	signature:(struct save_signal *saved_handlers)
save_signal_handlers	sysdep.c	/^static void save_signal_handlers (struct save_signal *);$/;"	p	file:	signature:(struct save_signal *)
SAVE_SLOT_BITS	lisp.h	/^enum { SAVE_SLOT_BITS = 3 };$/;"	e	enum:__anon23
save_type	lisp.h	/^    ENUM_BF (Lisp_Save_Type) save_type : SAVE_TYPE_BITS;$/;"	m	struct:Lisp_Save_Value	access:public
save_type	lisp.h	/^save_type (struct Lisp_Save_Value *v, int n)$/;"	f	signature:(struct Lisp_Save_Value *v, int n)
SAVE_TYPE_BITS	lisp.h	/^enum { SAVE_TYPE_BITS = SAVE_VALUE_SLOTS * SAVE_SLOT_BITS + 1 };$/;"	e	enum:__anon25
SAVE_TYPE_FUNCPTR_PTR_OBJ	lisp.h	/^    SAVE_TYPE_FUNCPTR_PTR_OBJ$/;"	e	enum:Lisp_Save_Type
SAVE_TYPE_INT_INT	lisp.h	/^    SAVE_TYPE_INT_INT = SAVE_INTEGER + (SAVE_INTEGER << SAVE_SLOT_BITS),$/;"	e	enum:Lisp_Save_Type
SAVE_TYPE_INT_INT_INT	lisp.h	/^    SAVE_TYPE_INT_INT_INT$/;"	e	enum:Lisp_Save_Type
SAVE_TYPE_MEMORY	lisp.h	/^    SAVE_TYPE_MEMORY = SAVE_TYPE_PTR_INT + (1 << (SAVE_TYPE_BITS - 1))$/;"	e	enum:Lisp_Save_Type
SAVE_TYPE_OBJ_OBJ	lisp.h	/^    SAVE_TYPE_OBJ_OBJ = SAVE_OBJECT + (SAVE_OBJECT << SAVE_SLOT_BITS),$/;"	e	enum:Lisp_Save_Type
SAVE_TYPE_OBJ_OBJ_OBJ	lisp.h	/^    SAVE_TYPE_OBJ_OBJ_OBJ = SAVE_OBJECT + (SAVE_TYPE_OBJ_OBJ << SAVE_SLOT_BITS),$/;"	e	enum:Lisp_Save_Type
SAVE_TYPE_OBJ_OBJ_OBJ_OBJ	lisp.h	/^    SAVE_TYPE_OBJ_OBJ_OBJ_OBJ$/;"	e	enum:Lisp_Save_Type
SAVE_TYPE_PTR_INT	lisp.h	/^    SAVE_TYPE_PTR_INT = SAVE_POINTER + (SAVE_INTEGER << SAVE_SLOT_BITS),$/;"	e	enum:Lisp_Save_Type
SAVE_TYPE_PTR_OBJ	lisp.h	/^    SAVE_TYPE_PTR_OBJ = SAVE_POINTER + (SAVE_OBJECT << SAVE_SLOT_BITS),$/;"	e	enum:Lisp_Save_Type
SAVE_TYPE_PTR_PTR	lisp.h	/^    SAVE_TYPE_PTR_PTR = SAVE_POINTER + (SAVE_POINTER << SAVE_SLOT_BITS),$/;"	e	enum:Lisp_Save_Type
SAVE_UNUSED	lisp.h	/^    SAVE_UNUSED,$/;"	e	enum:Lisp_Save_Type
SAVE_VALUEP	lisp.h	/^SAVE_VALUEP (Lisp_Object x)$/;"	f	signature:(Lisp_Object x)
SAVE_VALUE_SLOTS	lisp.h	/^enum { SAVE_VALUE_SLOTS = 4 };$/;"	e	enum:__anon24
save_window_data	window.c	/^struct save_window_data$/;"	s	file:
save_window_data::current_window	window.c	/^    Lisp_Object current_window;$/;"	m	struct:save_window_data	file:	access:public
save_window_data::focus_frame	window.c	/^    Lisp_Object focus_frame;$/;"	m	struct:save_window_data	file:	access:public
save_window_data::frame_cols	window.c	/^    int frame_cols, frame_lines;$/;"	m	struct:save_window_data	file:	access:public
save_window_data::frame_lines	window.c	/^    int frame_cols, frame_lines;$/;"	m	struct:save_window_data	file:	access:public
save_window_data::frame_menu_bar_height	window.c	/^    int frame_menu_bar_height, frame_tool_bar_height;$/;"	m	struct:save_window_data	file:	access:public
save_window_data::frame_menu_bar_lines	window.c	/^    int frame_menu_bar_lines, frame_tool_bar_lines;$/;"	m	struct:save_window_data	file:	access:public
save_window_data::frame_text_height	window.c	/^    int frame_text_width, frame_text_height;$/;"	m	struct:save_window_data	file:	access:public
save_window_data::frame_text_width	window.c	/^    int frame_text_width, frame_text_height;$/;"	m	struct:save_window_data	file:	access:public
save_window_data::frame_tool_bar_height	window.c	/^    int frame_menu_bar_height, frame_tool_bar_height;$/;"	m	struct:save_window_data	file:	access:public
save_window_data::frame_tool_bar_lines	window.c	/^    int frame_menu_bar_lines, frame_tool_bar_lines;$/;"	m	struct:save_window_data	file:	access:public
save_window_data::f_current_buffer	window.c	/^    Lisp_Object f_current_buffer;$/;"	m	struct:save_window_data	file:	access:public
save_window_data::header	window.c	/^    struct vectorlike_header header;$/;"	m	struct:save_window_data	typeref:struct:save_window_data::vectorlike_header	file:	access:public
save_window_data::minibuf_scroll_window	window.c	/^    Lisp_Object minibuf_scroll_window;$/;"	m	struct:save_window_data	file:	access:public
save_window_data::minibuf_selected_window	window.c	/^    Lisp_Object minibuf_selected_window;$/;"	m	struct:save_window_data	file:	access:public
save_window_data::root_window	window.c	/^    Lisp_Object root_window;$/;"	m	struct:save_window_data	file:	access:public
save_window_data::saved_windows	window.c	/^    Lisp_Object saved_windows;$/;"	m	struct:save_window_data	file:	access:public
save_window_data::selected_frame	window.c	/^    Lisp_Object selected_frame;$/;"	m	struct:save_window_data	file:	access:public
save_window_save	window.c	/^save_window_save (Lisp_Object window, struct Lisp_Vector *vector, ptrdiff_t i)$/;"	f	file:	signature:(Lisp_Object window, struct Lisp_Vector *vector, ptrdiff_t i)
SA_SIGINFO	syssignal.h	69;"	d
sblock	alloc.c	/^struct sblock$/;"	s	file:
sblock::data	alloc.c	/^  sdata data[FLEXIBLE_ARRAY_MEMBER];$/;"	m	struct:sblock	file:	access:public
sblock::next	alloc.c	/^  struct sblock *next;$/;"	m	struct:sblock	typeref:struct:sblock::sblock	file:	access:public
sblock::next_free	alloc.c	/^  sdata *next_free;$/;"	m	struct:sblock	file:	access:public
SBLOCK_SIZE	alloc.c	1599;"	d	file:
sbrk	w32heap.c	/^sbrk (ptrdiff_t increment)$/;"	f	signature:(ptrdiff_t increment)
sbrk	w32heap.h	/^extern void *sbrk (ptrdiff_t size);$/;"	p	signature:(ptrdiff_t size)
SBYTES	lisp.h	/^SBYTES (Lisp_Object string)$/;"	f	signature:(Lisp_Object string)
scale_image_size	image.c	/^scale_image_size (int size, size_t divisor, size_t multiplier)$/;"	f	file:	signature:(int size, size_t divisor, size_t multiplier)
scan_dir	dispextern.h	/^  int scan_dir;			\/* direction of text scan, 1: forw, -1: back *\/$/;"	m	struct:bidi_it	access:public
scan_file	termcap.c	/^scan_file (char *str, int fd, struct termcap_buffer *bufp)$/;"	f	file:	signature:(char *str, int fd, struct termcap_buffer *bufp)
scan_file	termcap.c	/^static bool scan_file (char *, int, struct termcap_buffer *);$/;"	p	file:	signature:(char *, int, struct termcap_buffer *)
scan_for_column	indent.c	/^scan_for_column (ptrdiff_t *endpos, EMACS_INT *goalcol, ptrdiff_t *prevcol)$/;"	f	file:	signature:(ptrdiff_t *endpos, EMACS_INT *goalcol, ptrdiff_t *prevcol)
scan_lists	syntax.c	/^scan_lists (EMACS_INT from, EMACS_INT count, EMACS_INT depth, bool sexpflag)$/;"	f	file:	signature:(EMACS_INT from, EMACS_INT count, EMACS_INT depth, bool sexpflag)
scan_lists	syntax.c	/^static Lisp_Object scan_lists (EMACS_INT, EMACS_INT, EMACS_INT, bool);$/;"	p	file:
scan_newline	lisp.h	/^extern ptrdiff_t scan_newline (ptrdiff_t, ptrdiff_t, ptrdiff_t, ptrdiff_t,$/;"	p	signature:(ptrdiff_t, ptrdiff_t, ptrdiff_t, ptrdiff_t, ptrdiff_t, bool)
scan_newline	search.c	/^scan_newline (ptrdiff_t start, ptrdiff_t start_byte,$/;"	f	signature:(ptrdiff_t start, ptrdiff_t start_byte, ptrdiff_t limit, ptrdiff_t limit_byte, ptrdiff_t count, bool allow_quit)
scan_newline_from_point	lisp.h	/^extern ptrdiff_t scan_newline_from_point (ptrdiff_t, ptrdiff_t *, ptrdiff_t *);$/;"	p	signature:(ptrdiff_t, ptrdiff_t *, ptrdiff_t *)
scan_newline_from_point	search.c	/^scan_newline_from_point (ptrdiff_t count, ptrdiff_t *charpos,$/;"	f	signature:(ptrdiff_t count, ptrdiff_t *charpos, ptrdiff_t *bytepos)
scan_sexps_forward	syntax.c	/^scan_sexps_forward (struct lisp_parse_state *state,$/;"	f	file:	signature:(struct lisp_parse_state *state, ptrdiff_t from, ptrdiff_t from_byte, ptrdiff_t end, EMACS_INT targetdepth, bool stopbefore, int commentstop)
scan_sexps_forward	syntax.c	/^static void scan_sexps_forward (struct lisp_parse_state *,$/;"	p	file:	signature:(struct lisp_parse_state *, ptrdiff_t, ptrdiff_t, ptrdiff_t, EMACS_INT, bool, int)
scan_words	syntax.c	/^scan_words (ptrdiff_t from, EMACS_INT count)$/;"	f	signature:(ptrdiff_t from, EMACS_INT count)
scan_words	syntax.h	/^extern ptrdiff_t scan_words (ptrdiff_t, EMACS_INT);$/;"	p	signature:(ptrdiff_t, EMACS_INT)
Scharquote	syntax.h	/^    Scharquote,  \/* for a character that quotes the following character *\/$/;"	e	enum:syntaxcode
schars	dispextern.h	/^  ptrdiff_t schars;		\/* the number of characters in the string,$/;"	m	struct:bidi_string_data	access:public
SCHARS	lisp.h	/^SCHARS (Lisp_Object string)$/;"	f	signature:(Lisp_Object string)
schedule_atimer	atimer.c	/^schedule_atimer (struct atimer *t)$/;"	f	file:	signature:(struct atimer *t)
schedule_atimer	atimer.c	/^static void schedule_atimer (struct atimer *);$/;"	p	file:	signature:(struct atimer *)
Sclose	syntax.h	/^    Sclose,      \/* for an ending delimiter *\/$/;"	e	enum:syntaxcode
scmp	dired.c	/^scmp (const char *s1, const char *s2, ptrdiff_t len)$/;"	f	file:	signature:(const char *s1, const char *s2, ptrdiff_t len)
scmp	dired.c	/^static ptrdiff_t scmp (const char *, const char *, ptrdiff_t);$/;"	p	file:	signature:(const char *, const char *, ptrdiff_t)
Scomment	syntax.h	/^    Scomment,    \/* for a comment-starting character *\/$/;"	e	enum:syntaxcode
Scomment_fence	syntax.h	/^    Scomment_fence, \/* Starts\/ends comment which is delimited on the$/;"	e	enum:syntaxcode
score	font.c	/^  unsigned score;$/;"	m	struct:font_sort_data	file:	access:public
scratch_cursor_gc	w32term.h	/^  XGCValues *scratch_cursor_gc;$/;"	m	struct:w32_display_info	access:public
scratch_cursor_gc	xterm.h	/^  GC scratch_cursor_gc;$/;"	m	struct:x_display_info	access:public
scratch_font_prefer	font.c	/^static Lisp_Object scratch_font_spec, scratch_font_prefer;$/;"	v	file:
scratch_font_spec	font.c	/^static Lisp_Object scratch_font_spec, scratch_font_prefer;$/;"	v	file:
scratch_glyphs	xdisp.c	/^static struct glyph scratch_glyphs[MAX_SCRATCH_GLYPHS];$/;"	v	typeref:struct:glyph	file:
scratch_glyph_row	xdisp.c	/^static struct glyph_row scratch_glyph_row;$/;"	v	typeref:struct:glyph_row	file:
screen	xterm.h	/^  Screen *screen;$/;"	m	struct:x_display_info	access:public
ScreenFontRef	macfont.h	/^typedef const struct _EmacsScreenFont *ScreenFontRef; \/* opaque *\/$/;"	t	typeref:struct:_EmacsScreenFont
SCREENMAX	nsterm.h	1264;"	d
SCREENMAXBOUND	nsterm.h	1276;"	d
screen_behind	term.c	/^  struct glyph_matrix *screen_behind;$/;"	m	struct:tty_menu_state	typeref:struct:tty_menu_state::glyph_matrix	file:	access:public
screen_update	term.c	/^screen_update (struct frame *f, struct glyph_matrix *mtx)$/;"	f	file:	signature:(struct frame *f, struct glyph_matrix *mtx)
script	ftfont.c	/^  Lisp_Object script;$/;"	m	struct:OpenTypeSpec	file:	access:public
script	xwidget.c	/^  (Lisp_Object xwidget, Lisp_Object script, Lisp_Object fun)$/;"	v
ScriptGetFontFeatureTags_Proc	w32uniscribe.c	/^typedef HRESULT (WINAPI *ScriptGetFontFeatureTags_Proc)$/;"	t	file:
ScriptGetFontLanguageTags_Proc	w32uniscribe.c	/^typedef HRESULT (WINAPI *ScriptGetFontLanguageTags_Proc)$/;"	t	file:
ScriptGetFontScriptTags_Proc	w32uniscribe.c	/^typedef HRESULT (WINAPI *ScriptGetFontScriptTags_Proc)$/;"	t	file:
SCRIPT_FROM	fontset.c	1414;"	d	file:
script_get_font_features_fn	w32uniscribe.c	/^ScriptGetFontFeatureTags_Proc script_get_font_features_fn;$/;"	v
script_get_font_languages_fn	w32uniscribe.c	/^ScriptGetFontLanguageTags_Proc script_get_font_languages_fn;$/;"	v
script_get_font_scripts_fn	w32uniscribe.c	/^ScriptGetFontScriptTags_Proc script_get_font_scripts_fn;$/;"	v
script_tag	ftfont.c	/^  unsigned int script_tag, langsys_tag;$/;"	m	struct:OpenTypeSpec	file:	access:public
SCRIPT_TO	fontset.c	1415;"	d	file:
scrollerWidth	nsterm.h	/^+ (CGFloat)scrollerWidth;$/;"	v
scrolling	dispnew.c	/^scrolling (struct frame *frame)$/;"	f	file:	signature:(struct frame *frame)
scrolling	dispnew.c	/^static bool scrolling (struct frame *);$/;"	p	file:	signature:(struct frame *)
scrolling_1	dispextern.h	/^void scrolling_1 (struct frame *, int, int, int, int *, int *, unsigned *,$/;"	p	signature:(struct frame *, int, int, int, int *, int *, unsigned *, unsigned *, int)
scrolling_1	scroll.c	/^scrolling_1 (struct frame *frame, int window_size, int unchanged_at_top,$/;"	f	signature:(struct frame *frame, int window_size, int unchanged_at_top, int unchanged_at_bottom, int *draw_cost, int *old_draw_cost, unsigned *old_hash, unsigned *new_hash, int free_at_end)
SCROLLING_FAILED	xdisp.c	/^  SCROLLING_FAILED,$/;"	e	enum:__anon136	file:
scrolling_max_lines_saved	dispextern.h	/^extern int scrolling_max_lines_saved (int, int, unsigned *, unsigned *, int *);$/;"	p	signature:(int, int, unsigned *, unsigned *, int *)
scrolling_max_lines_saved	scroll.c	/^scrolling_max_lines_saved (int start, int end,$/;"	f	signature:(int start, int end, unsigned *oldhash, unsigned *newhash, int *cost)
SCROLLING_NEED_LARGER_MATRICES	xdisp.c	/^  SCROLLING_NEED_LARGER_MATRICES$/;"	e	enum:__anon136	file:
SCROLLING_SUCCESS	xdisp.c	/^  SCROLLING_SUCCESS,$/;"	e	enum:__anon136	file:
scrolling_window	dispnew.c	/^scrolling_window (struct window *w, bool header_line_p)$/;"	f	file:	signature:(struct window *w, bool header_line_p)
scrolling_window	dispnew.c	/^static int scrolling_window (struct window *, bool);$/;"	p	file:	signature:(struct window *, bool)
scroll_bar	w32term.h	/^struct scroll_bar {$/;"	s
scroll_bar	xterm.h	/^struct scroll_bar$/;"	s
scroll_bar::dragging	w32term.h	/^  int dragging;$/;"	m	struct:scroll_bar	access:public
scroll_bar::dragging	xterm.h	/^  int dragging;$/;"	m	struct:scroll_bar	access:public
scroll_bar::end	w32term.h	/^  int start, end;$/;"	m	struct:scroll_bar	access:public
scroll_bar::end	xterm.h	/^  int start, end;$/;"	m	struct:scroll_bar	access:public
scroll_bar::header	w32term.h	/^  struct vectorlike_header header;$/;"	m	struct:scroll_bar	typeref:struct:scroll_bar::vectorlike_header	access:public
scroll_bar::header	xterm.h	/^  struct vectorlike_header header;$/;"	m	struct:scroll_bar	typeref:struct:scroll_bar::vectorlike_header	access:public
scroll_bar::height	w32term.h	/^  int top, left, width, height;$/;"	m	struct:scroll_bar	access:public
scroll_bar::height	xterm.h	/^  int top, left, width, height;$/;"	m	struct:scroll_bar	access:public
scroll_bar::horizontal	w32term.h	/^  bool horizontal;$/;"	m	struct:scroll_bar	access:public
scroll_bar::horizontal	xterm.h	/^  bool horizontal;$/;"	m	struct:scroll_bar	access:public
scroll_bar::last_seen_part	xterm.h	/^  enum scroll_bar_part last_seen_part;$/;"	m	struct:scroll_bar	typeref:enum:scroll_bar::scroll_bar_part	access:public
scroll_bar::left	w32term.h	/^  int top, left, width, height;$/;"	m	struct:scroll_bar	access:public
scroll_bar::left	xterm.h	/^  int top, left, width, height;$/;"	m	struct:scroll_bar	access:public
scroll_bar::next	w32term.h	/^  Lisp_Object next, prev;$/;"	m	struct:scroll_bar	access:public
scroll_bar::next	xterm.h	/^  Lisp_Object next, prev;$/;"	m	struct:scroll_bar	access:public
scroll_bar::prev	w32term.h	/^  Lisp_Object next, prev;$/;"	m	struct:scroll_bar	access:public
scroll_bar::prev	xterm.h	/^  Lisp_Object next, prev;$/;"	m	struct:scroll_bar	access:public
scroll_bar::start	w32term.h	/^  int start, end;$/;"	m	struct:scroll_bar	access:public
scroll_bar::start	xterm.h	/^  int start, end;$/;"	m	struct:scroll_bar	access:public
scroll_bar::top	w32term.h	/^  int top, left, width, height;$/;"	m	struct:scroll_bar	access:public
scroll_bar::top	xterm.h	/^  int top, left, width, height;$/;"	m	struct:scroll_bar	access:public
scroll_bar::w32_widget_high	w32term.h	/^  Lisp_Object w32_widget_low, w32_widget_high;$/;"	m	struct:scroll_bar	access:public
scroll_bar::w32_widget_low	w32term.h	/^  Lisp_Object w32_widget_low, w32_widget_high;$/;"	m	struct:scroll_bar	access:public
scroll_bar::w32_window_high	w32term.h	/^  Lisp_Object w32_window_low, w32_window_high;$/;"	m	struct:scroll_bar	access:public
scroll_bar::w32_window_low	w32term.h	/^  Lisp_Object w32_window_low, w32_window_high;$/;"	m	struct:scroll_bar	access:public
scroll_bar::whole	xterm.h	/^  int whole;$/;"	m	struct:scroll_bar	access:public
scroll_bar::width	w32term.h	/^  int top, left, width, height;$/;"	m	struct:scroll_bar	access:public
scroll_bar::width	xterm.h	/^  int top, left, width, height;$/;"	m	struct:scroll_bar	access:public
scroll_bar::window	w32term.h	/^  Lisp_Object window;$/;"	m	struct:scroll_bar	access:public
scroll_bar::window	xterm.h	/^  Lisp_Object window;$/;"	m	struct:scroll_bar	access:public
scroll_bar::x_window	xterm.h	/^  Window x_window;$/;"	m	struct:scroll_bar	access:public
scroll_bars	frame.h	/^  Lisp_Object scroll_bars;$/;"	m	struct:frame	access:public
scroll_bar_above_handle	termhooks.h	/^  scroll_bar_above_handle,$/;"	e	enum:scroll_bar_part
scroll_bar_adjust_thumb_portion_p	globals.h	1041;"	d
scroll_bar_after_handle	termhooks.h	/^  scroll_bar_after_handle,$/;"	e	enum:scroll_bar_part
scroll_bar_background_pixel	w32term.h	/^  COLORREF scroll_bar_background_pixel;$/;"	m	struct:w32_output	access:public
scroll_bar_background_pixel	xterm.h	/^  unsigned long scroll_bar_background_pixel;$/;"	m	struct:x_output	access:public
scroll_bar_before_handle	termhooks.h	/^  scroll_bar_before_handle,$/;"	e	enum:scroll_bar_part
scroll_bar_below_handle	termhooks.h	/^  scroll_bar_below_handle,$/;"	e	enum:scroll_bar_part
scroll_bar_bottom_shadow_pixel	xterm.h	/^  unsigned long scroll_bar_bottom_shadow_pixel;$/;"	m	struct:x_output	access:public
SCROLL_BAR_CLICK_EVENT	termhooks.h	/^  SCROLL_BAR_CLICK_EVENT,	\/* .code gives the number of the mouse button$/;"	e	enum:event_kind
scroll_bar_down_arrow	termhooks.h	/^  scroll_bar_down_arrow,$/;"	e	enum:scroll_bar_part
scroll_bar_end_scroll	termhooks.h	/^  scroll_bar_end_scroll,$/;"	e	enum:scroll_bar_part
SCROLL_BAR_FACE_ID	dispextern.h	/^  SCROLL_BAR_FACE_ID,$/;"	e	enum:face_id
scroll_bar_foreground_pixel	w32term.h	/^  COLORREF scroll_bar_foreground_pixel;$/;"	m	struct:w32_output	access:public
scroll_bar_foreground_pixel	xterm.h	/^  unsigned long scroll_bar_foreground_pixel;$/;"	m	struct:x_output	access:public
scroll_bar_handle	termhooks.h	/^  scroll_bar_handle,$/;"	e	enum:scroll_bar_part
scroll_bar_height	window.c	/^  Lisp_Object scroll_bar_height, horizontal_scroll_bar_type;$/;"	m	struct:saved_window	file:	access:public
scroll_bar_height	window.h	/^    int scroll_bar_height;$/;"	m	struct:window	access:public
scroll_bar_height_	buffer.h	/^  Lisp_Object scroll_bar_height_;$/;"	m	struct:buffer	access:public
scroll_bar_height_for_theme	gtkutil.c	/^static int scroll_bar_height_for_theme;$/;"	v	file:
scroll_bar_horizontal_handle	termhooks.h	/^  scroll_bar_horizontal_handle,$/;"	e	enum:scroll_bar_part
SCROLL_BAR_HORIZONTAL_NAME	xterm.c	5818;"	d	file:
scroll_bar_left_arrow	termhooks.h	/^  scroll_bar_left_arrow,$/;"	e	enum:scroll_bar_part
scroll_bar_move_ratio	termhooks.h	/^  scroll_bar_move_ratio,$/;"	e	enum:scroll_bar_part
SCROLL_BAR_NAME	xterm.c	5817;"	d	file:
scroll_bar_nowhere	termhooks.h	/^  scroll_bar_nowhere,$/;"	e	enum:scroll_bar_part
SCROLL_BAR_PACK	w32term.h	480;"	d
SCROLL_BAR_PACK	w32term.h	488;"	d
scroll_bar_part	termhooks.h	/^enum scroll_bar_part {$/;"	g
scroll_bar_parts	keyboard.c	/^static short const scroll_bar_parts[] = {$/;"	v	file:
scroll_bar_right_arrow	termhooks.h	/^  scroll_bar_right_arrow,$/;"	e	enum:scroll_bar_part
scroll_bar_top_shadow_pixel	xterm.h	/^  unsigned long scroll_bar_top_shadow_pixel;$/;"	m	struct:x_output	access:public
scroll_bar_to_bottom	termhooks.h	/^  scroll_bar_to_bottom,$/;"	e	enum:scroll_bar_part
scroll_bar_to_leftmost	termhooks.h	/^  scroll_bar_to_leftmost,$/;"	e	enum:scroll_bar_part
scroll_bar_to_rightmost	termhooks.h	/^  scroll_bar_to_rightmost$/;"	e	enum:scroll_bar_part
scroll_bar_to_top	termhooks.h	/^  scroll_bar_to_top,$/;"	e	enum:scroll_bar_part
SCROLL_BAR_UNPACK	w32term.h	483;"	d
SCROLL_BAR_UNPACK	w32term.h	491;"	d
scroll_bar_up_arrow	termhooks.h	/^  scroll_bar_up_arrow,$/;"	e	enum:scroll_bar_part
SCROLL_BAR_W32_WINDOW	w32term.h	497;"	d
scroll_bar_width	window.c	/^  Lisp_Object scroll_bar_width, vertical_scroll_bar_type, dedicated;$/;"	m	struct:saved_window	file:	access:public
scroll_bar_width	window.h	/^    int scroll_bar_width;$/;"	m	struct:window	access:public
scroll_bar_width_	buffer.h	/^  Lisp_Object scroll_bar_width_;$/;"	m	struct:buffer	access:public
scroll_bar_width_for_theme	gtkutil.c	/^static int scroll_bar_width_for_theme;$/;"	v	file:
SCROLL_BAR_X_WIDGET	xterm.h	942;"	d
scroll_command	window.c	/^scroll_command (Lisp_Object n, int direction)$/;"	f	file:	signature:(Lisp_Object n, int direction)
scroll_conservatively	globals.h	869;"	d
scroll_down_aggressively_	buffer.h	/^  Lisp_Object scroll_down_aggressively_;$/;"	m	struct:buffer	access:public
SCROLL_LIMIT	xdisp.c	15503;"	d	file:
scroll_line	w32console.c	/^scroll_line (struct frame *f, int dist, int direction)$/;"	f	file:	signature:(struct frame *f, int dist, int direction)
scroll_margin	globals.h	871;"	d
scroll_region_cost	termchar.h	/^  int scroll_region_cost;$/;"	m	struct:tty_display_info	access:public
scroll_region_ok	termchar.h	/^  bool_bf scroll_region_ok : 1;$/;"	m	struct:tty_display_info	access:public
scroll_run_hook	dispextern.h	/^  void (*scroll_run_hook) (struct window *w, struct run *run);$/;"	m	struct:redisplay_interface	access:public
scroll_up_aggressively_	buffer.h	/^  Lisp_Object scroll_up_aggressively_;$/;"	m	struct:buffer	access:public
sdata	alloc.c	/^struct sdata$/;"	s	file:
sdata	alloc.c	/^typedef struct sdata sdata;$/;"	t	typeref:struct:sdata	file:
sdata	alloc.c	/^} sdata;$/;"	t	typeref:union:__anon6	file:
SDATA	lisp.h	/^SDATA (Lisp_Object string)$/;"	f	signature:(Lisp_Object string)
sdata::data	alloc.c	/^  unsigned char data[FLEXIBLE_ARRAY_MEMBER];$/;"	m	struct:sdata	file:	access:public
sdata::nbytes	alloc.c	/^  ptrdiff_t nbytes;$/;"	m	struct:sdata	file:	access:public
sdata::string	alloc.c	/^  struct Lisp_String *string;$/;"	m	struct:sdata	typeref:struct:sdata::Lisp_String	file:	access:public
SDATA_DATA	alloc.c	1631;"	d	file:
SDATA_DATA	alloc.c	1659;"	d	file:
SDATA_DATA_OFFSET	alloc.c	/^enum { SDATA_DATA_OFFSET = offsetof (struct sdata, data) };$/;"	e	enum:__anon8	file:
SDATA_NBYTES	alloc.c	1630;"	d	file:
SDATA_NBYTES	alloc.c	1658;"	d	file:
SDATA_OF_STRING	alloc.c	1736;"	d	file:
SDATA_SIZE	alloc.c	1759;"	d	file:
SDATA_SIZE	alloc.c	1768;"	d	file:
SDDL_REVISION_1	w32.c	166;"	d	file:
searchbufs	search.c	/^static struct regexp_cache searchbufs[REGEXP_CACHE_SIZE];$/;"	v	typeref:struct:regexp_cache	file:
searchbuf_head	search.c	/^static struct regexp_cache *searchbuf_head;$/;"	v	typeref:struct:regexp_cache	file:
search_buffer	search.c	/^search_buffer (Lisp_Object string, ptrdiff_t pos, ptrdiff_t pos_byte,$/;"	f	file:	signature:(Lisp_Object string, ptrdiff_t pos, ptrdiff_t pos_byte, ptrdiff_t lim, ptrdiff_t lim_byte, EMACS_INT n, int RE, Lisp_Object trt, Lisp_Object inverse_trt, bool posix)
search_buffer	search.c	/^static EMACS_INT search_buffer (Lisp_Object, ptrdiff_t, ptrdiff_t,$/;"	p	file:	signature:(Lisp_Object, ptrdiff_t, ptrdiff_t, ptrdiff_t, ptrdiff_t, EMACS_INT, int, Lisp_Object, Lisp_Object, bool)
search_command	search.c	/^search_command (Lisp_Object string, Lisp_Object bound, Lisp_Object noerror,$/;"	f	file:	signature:(Lisp_Object string, Lisp_Object bound, Lisp_Object noerror, Lisp_Object count, int direction, int RE, bool posix)
search_embedded_absfilename	fileio.c	/^search_embedded_absfilename (char *nm, char *endp)$/;"	f	file:	signature:(char *nm, char *endp)
search_image_cache	image.c	/^search_image_cache (struct frame *f, Lisp_Object spec, EMACS_UINT hash)$/;"	f	file:	signature:(struct frame *f, Lisp_Object spec, EMACS_UINT hash)
search_magic_path	xrdb.c	/^search_magic_path (const char *search_path, const char *class,$/;"	f	file:	signature:(const char *search_path, const char *class, const char *escaped_suffix)
search_regs	thread.h	120;"	d
search_regs_1	search.c	/^static struct re_registers search_regs_1;$/;"	v	typeref:struct:re_registers	file:
search_regs_saved	thread.h	125;"	d
seconds	dispnew.c	/^  (Lisp_Object seconds, Lisp_Object milliseconds)$/;"	v
seconds	process.c	/^  (Lisp_Object process, Lisp_Object seconds, Lisp_Object millisec,$/;"	v
section	unexmacosx.c	137;"	d	file:
section_header	unexcw.c	/^  SCNHDR section_header[32];$/;"	m	struct:__anon2	file:	access:public
secure_hash	fns.c	/^secure_hash (Lisp_Object algorithm, Lisp_Object object, Lisp_Object start,$/;"	f	file:	signature:(Lisp_Object algorithm, Lisp_Object object, Lisp_Object start, Lisp_Object end, Lisp_Object coding_system, Lisp_Object noerror, Lisp_Object binary)
seed_random	lisp.h	/^extern void seed_random (void *, ptrdiff_t);$/;"	p	signature:(void *, ptrdiff_t)
seed_random	sysdep.c	/^seed_random (void *seed, ptrdiff_t seed_size)$/;"	f	signature:(void *seed, ptrdiff_t seed_size)
seen	lread.c	/^  Lisp_Object seen;$/;"	m	struct:subst	file:	access:public
seen	xsettings.c	/^  unsigned seen;$/;"	m	struct:xsettings	file:	access:public
SEEN_AA	xsettings.c	/^  SEEN_AA         = 0x01,$/;"	e	enum:__anon122	file:
SEEN_DPI	xsettings.c	/^  SEEN_DPI        = 0x20,$/;"	e	enum:__anon122	file:
SEEN_FONT	xsettings.c	/^  SEEN_FONT       = 0x40,$/;"	e	enum:__anon122	file:
SEEN_HINTING	xsettings.c	/^  SEEN_HINTING    = 0x02,$/;"	e	enum:__anon122	file:
SEEN_HINTSTYLE	xsettings.c	/^  SEEN_HINTSTYLE  = 0x10,$/;"	e	enum:__anon122	file:
SEEN_LCDFILTER	xsettings.c	/^  SEEN_LCDFILTER  = 0x08,$/;"	e	enum:__anon122	file:
SEEN_RGBA	xsettings.c	/^  SEEN_RGBA       = 0x04,$/;"	e	enum:__anon122	file:
SEEN_TB_STYLE	xsettings.c	/^  SEEN_TB_STYLE   = 0x80$/;"	e	enum:__anon122	file:
SegmentCommit	w32heap.c	/^  SIZE_T SegmentCommit;$/;"	m	struct:_RTL_HEAP_PARAMETERS	file:	access:public
SegmentReserve	w32heap.c	/^  SIZE_T SegmentReserve;$/;"	m	struct:_RTL_HEAP_PARAMETERS	file:	access:public
segment_command	unexmacosx.c	129;"	d	file:
select	sysselect.h	49;"	d
select	w32proc.c	47;"	d	file:
selected_frame	frame.c	/^Lisp_Object selected_frame;$/;"	v
SELECTED_FRAME	frame.h	1242;"	d
selected_frame	window.c	/^    Lisp_Object selected_frame;$/;"	m	struct:save_window_data	file:	access:public
selected_window	frame.h	/^  Lisp_Object selected_window;$/;"	m	struct:frame	access:public
selected_window	window.c	/^Lisp_Object selected_window;$/;"	v
selection	w32select.c	/^  (Lisp_Object selection, Lisp_Object terminal)$/;"	v
selection	xselect.c	/^  (Lisp_Object selection, Lisp_Object terminal)$/;"	v
selection	xselect.c	/^  (Lisp_Object selection, Lisp_Object time_object, Lisp_Object terminal)$/;"	v
selection	xselect.c	/^  (Lisp_Object selection, Lisp_Object value, Lisp_Object frame)$/;"	v
selection	xterm.h	/^  Atom selection, target, property;$/;"	m	struct:selection_input_event	access:public
SELECTION_CLEAR_EVENT	termhooks.h	/^  SELECTION_CLEAR_EVENT,	\/* Another X client cleared our selection.  *\/$/;"	e	enum:event_kind
selection_data	xselect.c	/^struct selection_data$/;"	s	file:
selection_data::data	xselect.c	/^  unsigned char *data;$/;"	m	struct:selection_data	file:	access:public
selection_data::format	xselect.c	/^  int format;$/;"	m	struct:selection_data	file:	access:public
selection_data::next	xselect.c	/^  struct selection_data *next;$/;"	m	struct:selection_data	typeref:struct:selection_data::selection_data	file:	access:public
selection_data::nofree	xselect.c	/^  bool nofree;$/;"	m	struct:selection_data	file:	access:public
selection_data::property	xselect.c	/^  Atom property;$/;"	m	struct:selection_data	file:	access:public
selection_data::size	xselect.c	/^  ptrdiff_t size;$/;"	m	struct:selection_data	file:	access:public
selection_data::type	xselect.c	/^  Atom type;$/;"	m	struct:selection_data	file:	access:public
selection_data::wait_object	xselect.c	/^  struct prop_location *wait_object;$/;"	m	struct:selection_data	typeref:struct:selection_data::prop_location	file:	access:public
selection_data_to_lisp_data	xselect.c	/^selection_data_to_lisp_data (struct x_display_info *dpyinfo,$/;"	f	file:	signature:(struct x_display_info *dpyinfo, const unsigned char *data, ptrdiff_t size, Atom type, int format)
selection_data_to_lisp_data	xselect.c	/^static Lisp_Object selection_data_to_lisp_data (struct x_display_info *,$/;"	p	file:	signature:(struct x_display_info *, const unsigned char *, ptrdiff_t, Atom, int)
SELECTION_EVENT_DISPLAY	xterm.h	/^SELECTION_EVENT_DISPLAY (struct selection_input_event *ev)$/;"	f	signature:(struct selection_input_event *ev)
SELECTION_EVENT_DPYINFO	xterm.h	1048;"	d
SELECTION_EVENT_PROPERTY	xterm.h	1057;"	d
selection_event_queue	xselect.c	/^struct selection_event_queue$/;"	s	file:
selection_event_queue::event	xselect.c	/^    struct selection_input_event event;$/;"	m	struct:selection_event_queue	typeref:struct:selection_event_queue::selection_input_event	file:	access:public
selection_event_queue::next	xselect.c	/^    struct selection_event_queue *next;$/;"	m	struct:selection_event_queue	typeref:struct:selection_event_queue::selection_event_queue	file:	access:public
SELECTION_EVENT_REQUESTOR	xterm.h	1051;"	d
SELECTION_EVENT_SELECTION	xterm.h	1053;"	d
SELECTION_EVENT_TARGET	xterm.h	1055;"	d
SELECTION_EVENT_TIME	xterm.h	1059;"	d
selection_input_event	xterm.h	/^struct selection_input_event$/;"	s
selection_input_event::dpyinfo	xterm.h	/^  struct x_display_info *dpyinfo;$/;"	m	struct:selection_input_event	typeref:struct:selection_input_event::x_display_info	access:public
selection_input_event::kind	xterm.h	/^  ENUM_BF (event_kind) kind : EVENT_KIND_WIDTH;$/;"	m	struct:selection_input_event	access:public
selection_input_event::property	xterm.h	/^  Atom selection, target, property;$/;"	m	struct:selection_input_event	access:public
selection_input_event::requestor	xterm.h	/^  Window requestor;$/;"	m	struct:selection_input_event	access:public
selection_input_event::selection	xterm.h	/^  Atom selection, target, property;$/;"	m	struct:selection_input_event	access:public
selection_input_event::target	xterm.h	/^  Atom selection, target, property;$/;"	m	struct:selection_input_event	access:public
selection_input_event::time	xterm.h	/^  Time time;$/;"	m	struct:selection_input_event	access:public
selection_input_event_equal	xselect.c	/^selection_input_event_equal (struct selection_input_event *a,$/;"	f	file:	signature:(struct selection_input_event *a, struct selection_input_event *b)
selection_quantum	xselect.c	/^selection_quantum (Display *display)$/;"	f	file:	signature:(Display *display)
selection_queue	xselect.c	/^static struct selection_event_queue *selection_queue;$/;"	v	typeref:struct:selection_event_queue	file:
selection_request_dpyinfo	xselect.c	/^static struct x_display_info *selection_request_dpyinfo;$/;"	v	typeref:struct:x_display_info	file:
SELECTION_REQUEST_EVENT	termhooks.h	/^  SELECTION_REQUEST_EVENT,	\/* Another X client wants a selection from us.$/;"	e	enum:event_kind
selection_symbol	xselect.c	/^  (Lisp_Object selection_symbol, Lisp_Object target_type,$/;"	v
selective	dispextern.h	/^  ptrdiff_t selective;$/;"	m	struct:it	access:public
selective_display_	buffer.h	/^  Lisp_Object selective_display_;$/;"	m	struct:buffer	access:public
selective_display_ellipses_	buffer.h	/^  Lisp_Object selective_display_ellipses_;$/;"	m	struct:buffer	access:public
selective_display_ellipsis_p	dispextern.h	/^  bool_bf selective_display_ellipsis_p : 1;$/;"	m	struct:it	access:public
select_args	thread.c	/^struct select_args$/;"	s	file:
select_args::efds	thread.c	/^  fd_set *efds;$/;"	m	struct:select_args	file:	access:public
select_args::func	thread.c	/^  select_func *func;$/;"	m	struct:select_args	file:	access:public
select_args::max_fds	thread.c	/^  int max_fds;$/;"	m	struct:select_args	file:	access:public
select_args::result	thread.c	/^  int result;$/;"	m	struct:select_args	file:	access:public
select_args::rfds	thread.c	/^  fd_set *rfds;$/;"	m	struct:select_args	file:	access:public
select_args::sigmask	thread.c	/^  sigset_t *sigmask;$/;"	m	struct:select_args	file:	access:public
select_args::timeout	thread.c	/^  struct timespec *timeout;$/;"	m	struct:select_args	typeref:struct:select_args::timespec	file:	access:public
select_args::wfds	thread.c	/^  fd_set *wfds;$/;"	m	struct:select_args	file:	access:public
select_frame_norecord	window.c	/^select_frame_norecord (Lisp_Object frame)$/;"	f	file:	signature:(Lisp_Object frame)
select_func	thread.h	/^typedef int select_func (int, fd_set *, fd_set *, fd_set *,$/;"	t
select_id	gtkutil.h	/^  gulong        select_id;$/;"	m	struct:xg_menu_item_cb_data_	access:public
select_palette	w32term.h	/^extern void select_palette (struct frame * f, HDC hdc);$/;"	p	signature:(struct frame * f, HDC hdc)
select_palette	w32xfns.c	/^select_palette (struct frame *f, HDC hdc)$/;"	f	signature:(struct frame *f, HDC hdc)
SELECT_TYPE	w32.h	53;"	d
select_visual	xfns.c	/^select_visual (struct x_display_info *dpyinfo)$/;"	f	signature:(struct x_display_info *dpyinfo)
select_visual	xterm.h	/^extern void select_visual (struct x_display_info *);$/;"	p	signature:(struct x_display_info *)
select_window	window.c	/^select_window (Lisp_Object window, Lisp_Object norecord,$/;"	f	file:	signature:(Lisp_Object window, Lisp_Object norecord, bool inhibit_point_swap)
select_window_1	window.c	/^select_window_1 (Lisp_Object window, bool inhibit_point_swap)$/;"	f	file:	signature:(Lisp_Object window, bool inhibit_point_swap)
select_window_1	window.c	/^static void select_window_1 (Lisp_Object, bool);$/;"	p	file:
SELECT_WINDOW_EVENT	termhooks.h	/^  SELECT_WINDOW_EVENT,$/;"	e	enum:event_kind
select_window_norecord	window.c	/^select_window_norecord (Lisp_Object window)$/;"	f	file:	signature:(Lisp_Object window)
Sendcomment	syntax.h	/^    Sendcomment, \/* for a comment-ending character *\/$/;"	e	enum:syntaxcode
sendto	w32.c	238;"	d	file:
send_deferred_msg	w32fns.c	/^send_deferred_msg (deferred_msg * msg_buf,$/;"	f	file:	signature:(deferred_msg * msg_buf, HWND hwnd, UINT msg, WPARAM wParam, LPARAM lParam)
send_notifications	w32notify.c	/^send_notifications (struct notifications_set *ns)$/;"	f	file:	signature:(struct notifications_set *ns)
send_process	process.c	/^send_process (Lisp_Object proc, const char *buf, ptrdiff_t len,$/;"	f	file:	signature:(Lisp_Object proc, const char *buf, ptrdiff_t len, Lisp_Object object)
send_win_up	w32fns.c	/^  int send_win_up;   \/* Pass through the keyup for this Windows key press? *\/$/;"	m	struct:__anon74	file:	access:public
sentinel	process.h	/^    Lisp_Object sentinel;$/;"	m	struct:Lisp_Process	access:public
separator_limit	dispextern.h	/^  ptrdiff_t separator_limit;	\/* where paragraph separator should end *\/$/;"	m	struct:bidi_it	access:public
separator_names	keyboard.c	/^static const char *separator_names[] = {$/;"	v	file:
SEPCHAR	config.h	1512;"	d
sequence	fns.c	/^  (Lisp_Object function, Lisp_Object sequence, Lisp_Object separator)$/;"	v
sequence	fns.c	/^  (register Lisp_Object sequence, Lisp_Object n)$/;"	v
sequences	keymap.c	/^  Lisp_Object sequences;$/;"	m	struct:where_is_internal_data	file:	access:public
sequence_number	window.c	/^static EMACS_INT sequence_number;$/;"	v	file:
sequence_number	window.h	/^    EMACS_INT sequence_number;$/;"	m	struct:window	access:public
SERIALCONN1_P	process.c	206;"	d	file:
SERIALCONN_P	process.c	205;"	d	file:
serialnum	w32.c	/^  DWORD     serialnum;$/;"	m	struct:volume_info_data	file:	access:public
serial_configure	sysdep.c	/^serial_configure (struct Lisp_Process *p,$/;"	f	signature:(struct Lisp_Process *p, Lisp_Object contact)
serial_configure	systty.h	/^extern void serial_configure (struct Lisp_Process *, Lisp_Object);$/;"	p	signature:(struct Lisp_Process *, Lisp_Object)
serial_configure	w32.c	/^serial_configure (struct Lisp_Process *p, Lisp_Object contact)$/;"	f	signature:(struct Lisp_Process *p, Lisp_Object contact)
serial_open	sysdep.c	/^serial_open (Lisp_Object port)$/;"	f	signature:(Lisp_Object port)
serial_open	systty.h	/^extern int serial_open (Lisp_Object);$/;"	p	signature:(Lisp_Object)
serial_open	w32.c	/^serial_open (Lisp_Object port_obj)$/;"	f	signature:(Lisp_Object port_obj)
server_accept_connection	process.c	/^server_accept_connection (Lisp_Object server, int channel)$/;"	f	file:	signature:(Lisp_Object server, int channel)
Sescape	syntax.h	/^    Sescape,	 \/* for a character that begins a C-style escape *\/$/;"	e	enum:syntaxcode
setenv_TZ	conf_post.h	174;"	d
SETFATTR	Makefile	/^SETFATTR = $/;"	m
SetFileSecurityA_Proc	w32.c	/^typedef BOOL (WINAPI *SetFileSecurityA_Proc) ($/;"	t	file:
SetFileSecurityW_Proc	w32.c	/^typedef BOOL (WINAPI *SetFileSecurityW_Proc) ($/;"	t	file:
setitimer	w32proc.c	/^setitimer(int which, struct itimerval *value, struct itimerval *ovalue)$/;"	f	signature:(int which, struct itimerval *value, struct itimerval *ovalue)
SETITIMER_RUNNING	profiler.c	/^    SETITIMER_RUNNING$/;"	e	enum:profiler_cpu_running	file:
setjmp_buffer	image.c	/^  sys_jmp_buf setjmp_buffer;$/;"	m	struct:my_jpeg_error_mgr	file:	access:public
setjmp_tested_p	alloc.c	/^static bool setjmp_tested_p;$/;"	v	file:
SETJMP_WILL_LIKELY_WORK	alloc.c	4910;"	d	file:
SETJMP_WILL_NOT_WORK	alloc.c	4923;"	d	file:
setlocale	emacs.c	/^setlocale (int cat, char const *locale)$/;"	f	file:	signature:(int cat, char const *locale)
SETMARKBIT	alloc.c	2586;"	d	file:
SetMenuItemInfoA_Proc	w32menu.c	/^typedef BOOL (WINAPI * SetMenuItemInfoA_Proc) ($/;"	t	file:
SetNamedSecurityInfoA_Proc	w32.c	/^typedef DWORD (WINAPI *SetNamedSecurityInfoA_Proc) ($/;"	t	file:
SetNamedSecurityInfoW_Proc	w32.c	/^typedef DWORD (WINAPI *SetNamedSecurityInfoW_Proc) ($/;"	t	file:
setpgid	w32proc.c	/^setpgid (pid_t pid, pid_t pgid)$/;"	f	signature:(pid_t pid, pid_t pgid)
setrlimit	w32heap.c	/^setrlimit (rlimit_resource_t rltype, const struct rlimit *rlp)$/;"	f	signature:(rlimit_resource_t rltype, const struct rlimit *rlp)
setsid	w32proc.c	/^setsid (void)$/;"	f	signature:(void)
setsockopt	w32.c	233;"	d	file:
SETTINGS_CFLAGS	Makefile	/^SETTINGS_CFLAGS = -pthread -isystem \/usr\/include\/glib-2.0 -isystem \/usr\/lib\/x86_64-linux-gnu\/glib-2.0\/include -isystem \/usr\/include\/glib-2.0 -isystem \/usr\/lib\/x86_64-linux-gnu\/glib-2.0\/include$/;"	m
SETTINGS_LIBS	Makefile	/^SETTINGS_LIBS = -lgio-2.0 -lgobject-2.0 -lglib-2.0 -lgobject-2.0 -lglib-2.0$/;"	m
SETUP_ASCII_RANGE	regex.c	1817;"	d	file:
SETUP_BUFFER_SYNTAX_TABLE	syntax.h	/^SETUP_BUFFER_SYNTAX_TABLE (void)$/;"	f	signature:(void)
setup_ccl_program	ccl.c	/^setup_ccl_program (struct ccl_program *ccl, Lisp_Object ccl_prog)$/;"	f	signature:(struct ccl_program *ccl, Lisp_Object ccl_prog)
setup_ccl_program	ccl.h	/^extern bool setup_ccl_program (struct ccl_program *, Lisp_Object);$/;"	p	signature:(struct ccl_program *, Lisp_Object)
setup_coding_system	coding.c	/^setup_coding_system (Lisp_Object coding_system, struct coding_system *coding)$/;"	f	signature:(Lisp_Object coding_system, struct coding_system *coding)
setup_coding_system	coding.h	/^extern void setup_coding_system (Lisp_Object, struct coding_system *);$/;"	p	signature:(Lisp_Object, struct coding_system *)
setup_config	w32select.c	/^setup_config (void)$/;"	f	file:	signature:(void)
setup_config	w32select.c	/^static void setup_config (void);$/;"	p	file:	signature:(void)
setup_cpu_timer	profiler.c	/^setup_cpu_timer (Lisp_Object sampling_interval)$/;"	f	file:	signature:(Lisp_Object sampling_interval)
setup_echo_area_for_printing	lisp.h	/^extern void setup_echo_area_for_printing (bool);$/;"	p	signature:(bool)
setup_echo_area_for_printing	xdisp.c	/^setup_echo_area_for_printing (bool multibyte_p)$/;"	f	signature:(bool multibyte_p)
setup_for_ellipsis	xdisp.c	/^setup_for_ellipsis (struct it *it, int len)$/;"	f	file:	signature:(struct it *it, int len)
setup_for_ellipsis	xdisp.c	/^static void setup_for_ellipsis (struct it *, int);$/;"	p	file:	signature:(struct it *, int)
setup_iso_safe_charsets	coding.c	/^setup_iso_safe_charsets (Lisp_Object attrs)$/;"	f	file:	signature:(Lisp_Object attrs)
SETUP_MULTIBYTE_RANGE	regex.c	1877;"	d	file:
SETUP_ON_FREE_LIST	alloc.c	2933;"	d	file:
setup_otf_gstring	ftfont.c	/^setup_otf_gstring (int size)$/;"	f	file:	signature:(int size)
setup_process_coding_systems	lisp.h	/^extern void setup_process_coding_systems (Lisp_Object);$/;"	p	signature:(Lisp_Object)
setup_process_coding_systems	process.c	/^setup_process_coding_systems (Lisp_Object process)$/;"	f	signature:(Lisp_Object process)
setup_pty	lisp.h	/^extern void setup_pty (int);$/;"	p	signature:(int)
setup_pty	sysdep.c	/^setup_pty (int fd)$/;"	f	signature:(int fd)
SETUP_SYNTAX_TABLE	syntax.c	/^SETUP_SYNTAX_TABLE (ptrdiff_t from, ptrdiff_t count)$/;"	f	file:	signature:(ptrdiff_t from, ptrdiff_t count)
SETUP_SYNTAX_TABLE_FOR_OBJECT	syntax.c	/^SETUP_SYNTAX_TABLE_FOR_OBJECT (Lisp_Object object,$/;"	f	signature:(Lisp_Object object, ptrdiff_t from, ptrdiff_t count)
SETUP_SYNTAX_TABLE_FOR_OBJECT	syntax.h	/^extern void SETUP_SYNTAX_TABLE_FOR_OBJECT (Lisp_Object, ptrdiff_t, ptrdiff_t);$/;"	p	signature:(Lisp_Object, ptrdiff_t, ptrdiff_t)
SETUP_UNIBYTE_RANGE	regex.c	1837;"	d	file:
setup_w32_kbdhook	w32fns.c	/^setup_w32_kbdhook (void)$/;"	f	signature:(void)
setup_w32_kbdhook	w32term.h	/^extern void setup_w32_kbdhook (void);$/;"	p	signature:(void)
setup_windows_coding_system	w32select.c	/^setup_windows_coding_system (Lisp_Object coding_system,$/;"	f	file:	signature:(Lisp_Object coding_system, struct coding_system * coding)
setup_windows_coding_system	w32select.c	/^static void setup_windows_coding_system (Lisp_Object coding_system,$/;"	p	file:	signature:(Lisp_Object coding_system, struct coding_system * coding)
set_alarm	atimer.c	/^set_alarm (void)$/;"	f	file:	signature:(void)
set_alarm	atimer.c	/^static void set_alarm (void);$/;"	p	file:	signature:(void)
set_backtrace_args	eval.c	/^set_backtrace_args (union specbinding *pdl, Lisp_Object *args, ptrdiff_t nargs)$/;"	f	file:	signature:(union specbinding *pdl, Lisp_Object *args, ptrdiff_t nargs)
set_backtrace_debug_on_exit	eval.c	/^set_backtrace_debug_on_exit (union specbinding *pdl, bool doe)$/;"	f	file:	signature:(union specbinding *pdl, bool doe)
set_bit	editfns.c	/^set_bit (unsigned char *a, ptrdiff_t i)$/;"	f	file:	signature:(unsigned char *a, ptrdiff_t i)
set_bit	editfns.c	/^static void set_bit (unsigned char *, OFFSET);$/;"	p	file:	signature:(unsigned char *, OFFSET)
set_blv_defcell	data.c	/^set_blv_defcell (struct Lisp_Buffer_Local_Value *blv, Lisp_Object val)$/;"	f	file:	signature:(struct Lisp_Buffer_Local_Value *blv, Lisp_Object val)
set_blv_found	data.c	/^set_blv_found (struct Lisp_Buffer_Local_Value *blv, int found)$/;"	f	file:	signature:(struct Lisp_Buffer_Local_Value *blv, int found)
set_blv_valcell	data.c	/^set_blv_valcell (struct Lisp_Buffer_Local_Value *blv, Lisp_Object val)$/;"	f	file:	signature:(struct Lisp_Buffer_Local_Value *blv, Lisp_Object val)
set_blv_value	data.c	/^set_blv_value (struct Lisp_Buffer_Local_Value *blv, Lisp_Object val)$/;"	f	file:	signature:(struct Lisp_Buffer_Local_Value *blv, Lisp_Object val)
set_blv_where	data.c	/^set_blv_where (struct Lisp_Buffer_Local_Value *blv, Lisp_Object val)$/;"	f	file:	signature:(struct Lisp_Buffer_Local_Value *blv, Lisp_Object val)
SET_BOUNDARY_VALUE	region-cache.c	110;"	d	file:
set_buffer_if_live	buffer.c	/^set_buffer_if_live (Lisp_Object buffer)$/;"	f	signature:(Lisp_Object buffer)
set_buffer_if_live	buffer.h	/^extern void set_buffer_if_live (Lisp_Object);$/;"	p	signature:(Lisp_Object)
set_buffer_internal	buffer.h	/^set_buffer_internal (struct buffer *b)$/;"	f	signature:(struct buffer *b)
set_buffer_internal_1	buffer.c	/^set_buffer_internal_1 (register struct buffer *b)$/;"	f	signature:(register struct buffer *b)
set_buffer_internal_1	buffer.h	/^extern void set_buffer_internal_1 (struct buffer *);$/;"	p	signature:(struct buffer *)
set_buffer_internal_2	buffer.c	/^void set_buffer_internal_2 (register struct buffer *b)$/;"	f	signature:(register struct buffer *b)
set_buffer_internal_2	buffer.h	/^extern void set_buffer_internal_2 (struct buffer *);$/;"	p	signature:(struct buffer *)
set_buffer_intervals	buffer.h	/^set_buffer_intervals (struct buffer *b, INTERVAL i)$/;"	f	signature:(struct buffer *b, INTERVAL i)
set_buffer_overlays_after	buffer.c	/^set_buffer_overlays_after (struct buffer *b, struct Lisp_Overlay *o)$/;"	f	file:	signature:(struct buffer *b, struct Lisp_Overlay *o)
set_buffer_overlays_before	buffer.c	/^set_buffer_overlays_before (struct buffer *b, struct Lisp_Overlay *o)$/;"	f	file:	signature:(struct buffer *b, struct Lisp_Overlay *o)
set_buffer_temp	buffer.c	/^set_buffer_temp (struct buffer *b)$/;"	f	signature:(struct buffer *b)
set_buffer_temp	buffer.h	/^extern void set_buffer_temp (struct buffer *);$/;"	p	signature:(struct buffer *)
SET_BUF_BEGV	buffer.h	267;"	d
SET_BUF_BEGV_BOTH	buffer.h	275;"	d
SET_BUF_PT_BOTH	buffer.h	283;"	d
SET_BUF_ZV	buffer.h	271;"	d
SET_BUF_ZV_BOTH	buffer.h	279;"	d
set_cache_region	region-cache.c	/^set_cache_region (struct region_cache *c,$/;"	f	file:	signature:(struct region_cache *c, ptrdiff_t start, ptrdiff_t end, int value)
set_canon	casetab.c	/^set_canon (Lisp_Object case_table, Lisp_Object range, Lisp_Object elt)$/;"	f	file:	signature:(Lisp_Object case_table, Lisp_Object range, Lisp_Object elt)
set_canon	casetab.c	/^static void set_canon (Lisp_Object case_table, Lisp_Object range, Lisp_Object elt);$/;"	p	file:	signature:(Lisp_Object case_table, Lisp_Object range, Lisp_Object elt)
set_case_table	casetab.c	/^set_case_table (Lisp_Object table, bool standard)$/;"	f	file:	signature:(Lisp_Object table, bool standard)
set_case_table	casetab.c	/^static Lisp_Object set_case_table (Lisp_Object, bool);$/;"	p	file:
SET_CATEGORY_DOCSTRING	category.h	104;"	d
set_category_set	category.c	/^set_category_set (Lisp_Object category_set, EMACS_INT category, bool val)$/;"	f	file:	signature:(Lisp_Object category_set, EMACS_INT category, bool val)
set_charset_attr	charset.h	/^set_charset_attr (struct charset *charset, enum charset_attr_index idx,$/;"	f	signature:(struct charset *charset, enum charset_attr_index idx, Lisp_Object val)
SET_CHAR_GLYPH	dispextern.h	586;"	d
SET_CHAR_GLYPH_FROM_GLYPH	dispextern.h	598;"	d
set_char_table_ascii	chartab.c	/^set_char_table_ascii (Lisp_Object table, Lisp_Object val)$/;"	f	file:	signature:(Lisp_Object table, Lisp_Object val)
set_char_table_contents	lisp.h	/^set_char_table_contents (Lisp_Object table, ptrdiff_t idx, Lisp_Object val)$/;"	f	signature:(Lisp_Object table, ptrdiff_t idx, Lisp_Object val)
set_char_table_defalt	lisp.h	/^set_char_table_defalt (Lisp_Object table, Lisp_Object val)$/;"	f	signature:(Lisp_Object table, Lisp_Object val)
set_char_table_extras	lisp.h	/^set_char_table_extras (Lisp_Object table, ptrdiff_t idx, Lisp_Object val)$/;"	f	signature:(Lisp_Object table, ptrdiff_t idx, Lisp_Object val)
set_char_table_parent	chartab.c	/^set_char_table_parent (Lisp_Object table, Lisp_Object val)$/;"	f	file:	signature:(Lisp_Object table, Lisp_Object val)
set_char_table_purpose	lisp.h	/^set_char_table_purpose (Lisp_Object table, Lisp_Object val)$/;"	f	signature:(Lisp_Object table, Lisp_Object val)
set_cursor_from_row	xdisp.c	/^set_cursor_from_row (struct window *w, struct glyph_row *row,$/;"	f	file:	signature:(struct window *w, struct glyph_row *row, struct glyph_matrix *matrix, ptrdiff_t delta, ptrdiff_t delta_bytes, int dy, int dvpos)
set_cursor_from_row	xdisp.c	/^static bool set_cursor_from_row (struct window *, struct glyph_row *,$/;"	p	file:	signature:(struct window *, struct glyph_row *, struct glyph_matrix *, ptrdiff_t, ptrdiff_t, int, int)
set_default_internal	data.c	/^set_default_internal (Lisp_Object symbol, Lisp_Object value,$/;"	f	signature:(Lisp_Object symbol, Lisp_Object value, enum Set_Internal_Bind bindflag)
set_default_internal	lisp.h	/^extern void set_default_internal (Lisp_Object, Lisp_Object,$/;"	p	signature:(Lisp_Object, Lisp_Object, enum Set_Internal_Bind bindflag)
SET_ENV_BUF_SIZE	w32.c	2759;"	d	file:
set_errno	w32.c	/^set_errno (void)$/;"	f	file:	signature:(void)
set_file_security	w32.c	/^set_file_security (const char *lpFileName,$/;"	f	file:	signature:(const char *lpFileName, SECURITY_INFORMATION SecurityInformation, PSECURITY_DESCRIPTOR pSecurityDescriptor)
set_file_times	sysdep.c	/^set_file_times (int fd, const char *filename,$/;"	f	signature:(int fd, const char *filename, struct timespec atime, struct timespec mtime)
set_file_times	systime.h	/^extern int set_file_times (int, const char *, struct timespec, struct timespec);$/;"	p	signature:(int, const char *, struct timespec, struct timespec)
set_fontset_ascii	fontset.c	/^set_fontset_ascii (Lisp_Object fontset, Lisp_Object ascii)$/;"	f	file:	signature:(Lisp_Object fontset, Lisp_Object ascii)
set_fontset_base	fontset.c	/^set_fontset_base (Lisp_Object fontset, Lisp_Object base)$/;"	f	file:	signature:(Lisp_Object fontset, Lisp_Object base)
set_fontset_default	fontset.c	/^set_fontset_default (Lisp_Object fontset, Lisp_Object def)$/;"	f	file:	signature:(Lisp_Object fontset, Lisp_Object def)
set_fontset_fallback	fontset.c	/^set_fontset_fallback (Lisp_Object fontset, Lisp_Object fallback)$/;"	f	file:	signature:(Lisp_Object fontset, Lisp_Object fallback)
set_fontset_font	fontset.c	/^set_fontset_font (Lisp_Object arg, Lisp_Object range)$/;"	f	file:	signature:(Lisp_Object arg, Lisp_Object range)
set_fontset_frame	fontset.c	/^set_fontset_frame (Lisp_Object fontset, Lisp_Object frame)$/;"	f	file:	signature:(Lisp_Object fontset, Lisp_Object frame)
set_fontset_id	fontset.c	/^set_fontset_id (Lisp_Object fontset, Lisp_Object id)$/;"	f	file:	signature:(Lisp_Object fontset, Lisp_Object id)
set_fontset_name	fontset.c	/^set_fontset_name (Lisp_Object fontset, Lisp_Object name)$/;"	f	file:	signature:(Lisp_Object fontset, Lisp_Object name)
set_fontset_nofont_face	fontset.c	/^set_fontset_nofont_face (Lisp_Object fontset, Lisp_Object face)$/;"	f	file:	signature:(Lisp_Object fontset, Lisp_Object face)
set_font_frame_param	xfaces.c	/^set_font_frame_param (Lisp_Object frame, Lisp_Object lface)$/;"	f	file:	signature:(Lisp_Object frame, Lisp_Object lface)
set_font_frame_param	xfaces.c	/^static void set_font_frame_param (Lisp_Object, Lisp_Object);$/;"	p	file:
SET_FRAME_COLS	frame.h	1059;"	d
set_frame_cursor_types	lisp.h	/^void set_frame_cursor_types (struct frame *, Lisp_Object);$/;"	p	signature:(struct frame *, Lisp_Object)
set_frame_cursor_types	xdisp.c	/^set_frame_cursor_types (struct frame *f, Lisp_Object arg)$/;"	f	signature:(struct frame *f, Lisp_Object arg)
SET_FRAME_GARBAGED	frame.h	875;"	d
SET_FRAME_HEIGHT	frame.h	1084;"	d
SET_FRAME_ICONIFIED	frame.h	1189;"	d
SET_FRAME_LINES	frame.h	1067;"	d
set_frame_matrix_frame	dispnew.c	/^set_frame_matrix_frame (struct frame *f)$/;"	f	file:	signature:(struct frame *f)
set_frame_menubar	frame.h	/^extern void set_frame_menubar (struct frame *f, bool first_time, bool deep_p);$/;"	p	signature:(struct frame *f, bool first_time, bool deep_p)
set_frame_menubar	w32menu.c	/^set_frame_menubar (struct frame *f, bool first_time, bool deep_p)$/;"	f	signature:(struct frame *f, bool first_time, bool deep_p)
set_frame_menubar	xmenu.c	/^set_frame_menubar (struct frame *f, bool first_time, bool deep_p)$/;"	f	signature:(struct frame *f, bool first_time, bool deep_p)
set_frame_size	widget.c	/^set_frame_size (EmacsFrame ew)$/;"	f	file:	signature:(EmacsFrame ew)
SET_FRAME_VISIBLE	frame.h	/^SET_FRAME_VISIBLE (struct frame *f, int v)$/;"	f	signature:(struct frame *f, int v)
SET_FRAME_WIDTH	frame.h	1075;"	d
SET_GLYPH	dispextern.h	296;"	d
SET_GLYPH_CHAR	dispextern.h	294;"	d
SET_GLYPH_FACE	dispextern.h	295;"	d
SET_GLYPH_FROM_CHAR	disptab.h	98;"	d
SET_GLYPH_FROM_CHAR_GLYPH	dispextern.h	608;"	d
SET_GLYPH_FROM_GLYPH_CODE	dispextern.h	315;"	d
set_glyph_string_background_width	xdisp.c	/^set_glyph_string_background_width (struct glyph_string *s, int start, int last_x)$/;"	f	file:	signature:(struct glyph_string *s, int start, int last_x)
set_hash_hash	fns.c	/^set_hash_hash (struct Lisp_Hash_Table *h, Lisp_Object hash)$/;"	f	file:	signature:(struct Lisp_Hash_Table *h, Lisp_Object hash)
set_hash_hash_slot	fns.c	/^set_hash_hash_slot (struct Lisp_Hash_Table *h, ptrdiff_t idx, Lisp_Object val)$/;"	f	file:	signature:(struct Lisp_Hash_Table *h, ptrdiff_t idx, Lisp_Object val)
set_hash_index	fns.c	/^set_hash_index (struct Lisp_Hash_Table *h, Lisp_Object index)$/;"	f	file:	signature:(struct Lisp_Hash_Table *h, Lisp_Object index)
set_hash_index_slot	fns.c	/^set_hash_index_slot (struct Lisp_Hash_Table *h, ptrdiff_t idx, ptrdiff_t val)$/;"	f	file:	signature:(struct Lisp_Hash_Table *h, ptrdiff_t idx, ptrdiff_t val)
set_hash_key_and_value	fns.c	/^set_hash_key_and_value (struct Lisp_Hash_Table *h, Lisp_Object key_and_value)$/;"	f	file:	signature:(struct Lisp_Hash_Table *h, Lisp_Object key_and_value)
set_hash_key_slot	lisp.h	/^set_hash_key_slot (struct Lisp_Hash_Table *h, ptrdiff_t idx, Lisp_Object val)$/;"	f	signature:(struct Lisp_Hash_Table *h, ptrdiff_t idx, Lisp_Object val)
set_hash_next	fns.c	/^set_hash_next (struct Lisp_Hash_Table *h, Lisp_Object next)$/;"	f	file:	signature:(struct Lisp_Hash_Table *h, Lisp_Object next)
set_hash_next_slot	fns.c	/^set_hash_next_slot (struct Lisp_Hash_Table *h, ptrdiff_t idx, ptrdiff_t val)$/;"	f	file:	signature:(struct Lisp_Hash_Table *h, ptrdiff_t idx, ptrdiff_t val)
set_hash_value_slot	lisp.h	/^set_hash_value_slot (struct Lisp_Hash_Table *h, ptrdiff_t idx, Lisp_Object val)$/;"	f	signature:(struct Lisp_Hash_Table *h, ptrdiff_t idx, Lisp_Object val)
set_horizontal_scroll_bar	dispextern.h	/^void set_horizontal_scroll_bar (struct window *);$/;"	p	signature:(struct window *)
set_horizontal_scroll_bar	xdisp.c	/^set_horizontal_scroll_bar (struct window *w)$/;"	f	signature:(struct window *w)
set_horizontal_scroll_bar_hook	termhooks.h	/^  void (*set_horizontal_scroll_bar_hook) (struct window *window,$/;"	m	struct:terminal	access:public
set_identity	casetab.c	/^set_identity (Lisp_Object table, Lisp_Object c, Lisp_Object elt)$/;"	f	file:	signature:(Lisp_Object table, Lisp_Object c, Lisp_Object elt)
set_identity	casetab.c	/^static void set_identity (Lisp_Object table, Lisp_Object c, Lisp_Object elt);$/;"	p	file:	signature:(Lisp_Object table, Lisp_Object c, Lisp_Object elt)
set_ime_composition_window_fn	w32fns.c	/^ImmSetCompositionWindow_Proc set_ime_composition_window_fn = NULL;$/;"	v
set_initial_environment	callproc.c	/^set_initial_environment (void)$/;"	f	signature:(void)
set_initial_environment	lisp.h	/^extern void set_initial_environment (void);$/;"	p	signature:(void)
set_internal	data.c	/^set_internal (Lisp_Object symbol, Lisp_Object newval, Lisp_Object where,$/;"	f	signature:(Lisp_Object symbol, Lisp_Object newval, Lisp_Object where, enum Set_Internal_Bind bindflag)
set_internal	lisp.h	/^extern void set_internal (Lisp_Object, Lisp_Object, Lisp_Object,$/;"	p	signature:(Lisp_Object, Lisp_Object, Lisp_Object, enum Set_Internal_Bind)
SET_INTERNAL_BIND	lisp.h	/^  SET_INTERNAL_BIND,$/;"	e	enum:Set_Internal_Bind
Set_Internal_Bind	lisp.h	/^enum Set_Internal_Bind {$/;"	g
SET_INTERNAL_SET	lisp.h	/^  SET_INTERNAL_SET,$/;"	e	enum:Set_Internal_Bind
SET_INTERNAL_THREAD_SWITCH	lisp.h	/^  SET_INTERNAL_THREAD_SWITCH$/;"	e	enum:Set_Internal_Bind
SET_INTERNAL_UNBIND	lisp.h	/^  SET_INTERNAL_UNBIND,$/;"	e	enum:Set_Internal_Bind
set_intervals_multibyte	intervals.c	/^set_intervals_multibyte (bool multi_flag)$/;"	f	signature:(bool multi_flag)
set_intervals_multibyte	intervals.h	/^extern void set_intervals_multibyte (bool);$/;"	p	signature:(bool)
set_intervals_multibyte_1	intervals.c	/^set_intervals_multibyte_1 (INTERVAL i, bool multi_flag,$/;"	f	file:	signature:(INTERVAL i, bool multi_flag, ptrdiff_t start, ptrdiff_t start_byte, ptrdiff_t end, ptrdiff_t end_byte)
set_interval_left	intervals.c	/^set_interval_left (INTERVAL i, INTERVAL left)$/;"	f	file:	signature:(INTERVAL i, INTERVAL left)
set_interval_object	intervals.h	/^set_interval_object (INTERVAL i, Lisp_Object obj)$/;"	f	signature:(INTERVAL i, Lisp_Object obj)
set_interval_parent	intervals.h	/^set_interval_parent (INTERVAL i, INTERVAL parent)$/;"	f	signature:(INTERVAL i, INTERVAL parent)
set_interval_plist	intervals.h	/^set_interval_plist (INTERVAL i, Lisp_Object plist)$/;"	f	signature:(INTERVAL i, Lisp_Object plist)
set_interval_right	intervals.c	/^set_interval_right (INTERVAL i, INTERVAL right)$/;"	f	file:	signature:(INTERVAL i, INTERVAL right)
set_iterator_to_next	xdisp.c	/^set_iterator_to_next (struct it *it, bool reseat_p)$/;"	f	signature:(struct it *it, bool reseat_p)
set_iterator_to_next	xdisp.c	/^static void set_iterator_to_next (struct it *, bool);$/;"	p	file:	signature:(struct it *, bool)
set_lface_from_font	xfaces.c	/^set_lface_from_font (struct frame *f, Lisp_Object lface,$/;"	f	file:	signature:(struct frame *f, Lisp_Object lface, Lisp_Object font_object, bool force_p)
SET_LIST_BIT	regex.c	1801;"	d	file:
set_machine_and_pid_properties	xfns.c	/^set_machine_and_pid_properties (struct frame *f)$/;"	f	file:	signature:(struct frame *f)
set_marker_both	lisp.h	/^extern Lisp_Object set_marker_both (Lisp_Object, Lisp_Object, ptrdiff_t, ptrdiff_t);$/;"	p	signature:(Lisp_Object, Lisp_Object, ptrdiff_t, ptrdiff_t)
set_marker_both	marker.c	/^set_marker_both (Lisp_Object marker, Lisp_Object buffer,$/;"	f	signature:(Lisp_Object marker, Lisp_Object buffer, ptrdiff_t charpos, ptrdiff_t bytepos)
SET_MARKER_FROM_TEXT_POS	dispextern.h	237;"	d
set_marker_internal	marker.c	/^set_marker_internal (Lisp_Object marker, Lisp_Object position,$/;"	f	file:	signature:(Lisp_Object marker, Lisp_Object position, Lisp_Object buffer, bool restricted)
set_marker_restricted	lisp.h	/^extern Lisp_Object set_marker_restricted (Lisp_Object, Lisp_Object, Lisp_Object);$/;"	p	signature:(Lisp_Object, Lisp_Object, Lisp_Object)
set_marker_restricted	marker.c	/^set_marker_restricted (Lisp_Object marker, Lisp_Object position,$/;"	f	signature:(Lisp_Object marker, Lisp_Object position, Lisp_Object buffer)
set_marker_restricted_both	lisp.h	/^extern Lisp_Object set_marker_restricted_both (Lisp_Object, Lisp_Object,$/;"	p	signature:(Lisp_Object, Lisp_Object, ptrdiff_t, ptrdiff_t)
set_marker_restricted_both	marker.c	/^set_marker_restricted_both (Lisp_Object marker, Lisp_Object buffer,$/;"	f	signature:(Lisp_Object marker, Lisp_Object buffer, ptrdiff_t charpos, ptrdiff_t bytepos)
SET_MATRIX_ROW_ENABLED_P	dispextern.h	1115;"	d
set_menu_bar_lines	frame.c	/^set_menu_bar_lines (struct frame *f, Lisp_Object value, Lisp_Object oldval)$/;"	f	file:	signature:(struct frame *f, Lisp_Object value, Lisp_Object oldval)
set_menu_item_info	w32menu.c	/^SetMenuItemInfoA_Proc set_menu_item_info = NULL;$/;"	v
set_menu_item_info	w32menu.c	/^SetMenuItemInfoA_Proc set_menu_item_info = SetMenuItemInfoA;$/;"	v
set_message	xdisp.c	/^set_message (Lisp_Object string)$/;"	f	file:	signature:(Lisp_Object string)
set_message	xdisp.c	/^static void set_message (Lisp_Object);$/;"	p	file:
set_message_1	xdisp.c	/^set_message_1 (ptrdiff_t a1, Lisp_Object string)$/;"	f	file:	signature:(ptrdiff_t a1, Lisp_Object string)
set_message_1	xdisp.c	/^static bool set_message_1 (ptrdiff_t, Lisp_Object);$/;"	p	file:
set_named_security_info	w32.c	/^set_named_security_info (LPCTSTR lpObjectName,$/;"	f	file:	signature:(LPCTSTR lpObjectName, SE_OBJECT_TYPE ObjectType, SECURITY_INFORMATION SecurityInformation, PSID psidOwner, PSID psidGroup, PACL pDacl, PACL pSacl)
set_network_socket_coding_system	process.c	/^set_network_socket_coding_system (Lisp_Object proc, Lisp_Object host,$/;"	f	file:	signature:(Lisp_Object proc, Lisp_Object host, Lisp_Object service, Lisp_Object name)
set_next_vector	alloc.c	/^set_next_vector (struct Lisp_Vector *v, struct Lisp_Vector *p)$/;"	f	file:	signature:(struct Lisp_Vector *v, struct Lisp_Vector *p)
set_number_at	regex.c	/^  set_number_at,$/;"	e	enum:__anon144	file:
set_overlay_plist	lisp.h	/^set_overlay_plist (Lisp_Object overlay, Lisp_Object plist)$/;"	f	signature:(Lisp_Object overlay, Lisp_Object plist)
set_per_buffer_default	buffer.h	/^set_per_buffer_default (int offset, Lisp_Object value)$/;"	f	signature:(int offset, Lisp_Object value)
set_per_buffer_value	buffer.h	/^set_per_buffer_value (struct buffer *b, int offset, Lisp_Object value)$/;"	f	signature:(struct buffer *b, int offset, Lisp_Object value)
SET_PER_BUFFER_VALUE_P	buffer.h	1307;"	d
set_point	buffer.h	/^extern void set_point (ptrdiff_t);$/;"	p	signature:(ptrdiff_t)
set_point	intervals.c	/^set_point (ptrdiff_t charpos)$/;"	f	signature:(ptrdiff_t charpos)
set_point_both	buffer.h	/^extern void set_point_both (ptrdiff_t, ptrdiff_t);$/;"	p	signature:(ptrdiff_t, ptrdiff_t)
set_point_both	intervals.c	/^set_point_both (ptrdiff_t charpos, ptrdiff_t bytepos)$/;"	f	signature:(ptrdiff_t charpos, ptrdiff_t bytepos)
set_point_from_marker	buffer.h	/^extern void set_point_from_marker (Lisp_Object);$/;"	p	signature:(Lisp_Object)
set_point_from_marker	intervals.c	/^set_point_from_marker (Lisp_Object marker)$/;"	f	signature:(Lisp_Object marker)
set_poll_suppress_count	keyboard.c	/^set_poll_suppress_count (int count)$/;"	f	signature:(int count)
set_poll_suppress_count	keyboard.h	/^extern void set_poll_suppress_count (int);$/;"	p	signature:(int)
set_process_dir	w32.h	/^extern void set_process_dir (char *);$/;"	p	signature:(char *)
set_process_dir	w32proc.c	/^set_process_dir (char * dir)$/;"	f	signature:(char * dir)
set_process_filter_masks	process.c	/^set_process_filter_masks (struct Lisp_Process *p)$/;"	f	file:	signature:(struct Lisp_Process *p)
set_prop	keyboard.c	/^set_prop (ptrdiff_t idx, Lisp_Object val)$/;"	f	file:	signature:(ptrdiff_t idx, Lisp_Object val)
set_properties	textprop.c	/^set_properties (Lisp_Object properties, INTERVAL interval, Lisp_Object object)$/;"	f	file:	signature:(Lisp_Object properties, INTERVAL interval, Lisp_Object object)
set_property_change_object	xselect.c	/^set_property_change_object (struct prop_location *location)$/;"	f	file:	signature:(struct prop_location *location)
SET_PT	buffer.h	240;"	d
SET_PT_BOTH	buffer.h	243;"	d
set_random_seed	sysdep.c	/^static void set_random_seed (random_seed arg) { srand (arg); }$/;"	f	file:	signature:(random_seed arg)
set_random_seed	sysdep.c	/^static void set_random_seed (random_seed arg) { srand48 (arg); }$/;"	f	file:	signature:(random_seed arg)
set_random_seed	sysdep.c	/^static void set_random_seed (random_seed arg) { srandom (arg); }$/;"	f	file:	signature:(random_seed arg)
SET_RANGE_TABLE_WORK_AREA	regex.c	1763;"	d	file:
SET_RANGE_TABLE_WORK_AREA_BIT	regex.c	1759;"	d	file:
SET_RAW_SYNTAX_ENTRY	syntax.c	/^SET_RAW_SYNTAX_ENTRY (Lisp_Object table, int c, Lisp_Object val)$/;"	f	file:	signature:(Lisp_Object table, int c, Lisp_Object val)
SET_RAW_SYNTAX_ENTRY_RANGE	syntax.c	/^SET_RAW_SYNTAX_ENTRY_RANGE (Lisp_Object table, Lisp_Object range,$/;"	f	file:	signature:(Lisp_Object table, Lisp_Object range, Lisp_Object val)
set_save_integer	lisp.h	/^set_save_integer (Lisp_Object obj, int n, ptrdiff_t val)$/;"	f	signature:(Lisp_Object obj, int n, ptrdiff_t val)
set_save_pointer	lisp.h	/^set_save_pointer (Lisp_Object obj, int n, void *val)$/;"	f	signature:(Lisp_Object obj, int n, void *val)
SET_SCROLL_BAR_W32_WINDOW	w32term.h	501;"	d
SET_SCROLL_BAR_X_WIDGET	xterm.h	947;"	d
set_search_regs	search.c	/^set_search_regs (ptrdiff_t beg_byte, ptrdiff_t nbytes)$/;"	f	file:	signature:(ptrdiff_t beg_byte, ptrdiff_t nbytes)
set_search_regs	search.c	/^static void set_search_regs (ptrdiff_t, ptrdiff_t);$/;"	p	file:
set_socket_option	process.c	/^set_socket_option (int s, Lisp_Object opt, Lisp_Object val)$/;"	f	file:	signature:(int s, Lisp_Object opt, Lisp_Object val)
set_specpdl_old_value	eval.c	/^set_specpdl_old_value (union specbinding *pdl, Lisp_Object val)$/;"	f	file:	signature:(union specbinding *pdl, Lisp_Object val)
SET_STACK_TOP_ADDRESS	alloc.c	5030;"	d	file:
SET_STACK_TOP_ADDRESS	alloc.c	5035;"	d	file:
set_string_intervals	lisp.h	/^set_string_intervals (Lisp_Object s, INTERVAL i)$/;"	f	signature:(Lisp_Object s, INTERVAL i)
set_sub_char_table_contents	lisp.h	/^INLINE void set_sub_char_table_contents (Lisp_Object, ptrdiff_t,$/;"	p	signature:(Lisp_Object, ptrdiff_t, Lisp_Object)
set_sub_char_table_contents	lisp.h	/^set_sub_char_table_contents (Lisp_Object table, ptrdiff_t idx, Lisp_Object val)$/;"	f	signature:(Lisp_Object table, ptrdiff_t idx, Lisp_Object val)
SET_SYMBOL_ALIAS	lisp.h	/^SET_SYMBOL_ALIAS (struct Lisp_Symbol *sym, struct Lisp_Symbol *v)$/;"	f	signature:(struct Lisp_Symbol *sym, struct Lisp_Symbol *v)
SET_SYMBOL_BLV	lisp.h	/^SET_SYMBOL_BLV (struct Lisp_Symbol *sym, struct Lisp_Buffer_Local_Value *v)$/;"	f	signature:(struct Lisp_Symbol *sym, struct Lisp_Buffer_Local_Value *v)
set_symbol_function	lisp.h	/^set_symbol_function (Lisp_Object sym, Lisp_Object function)$/;"	f	signature:(Lisp_Object sym, Lisp_Object function)
SET_SYMBOL_FWD	lisp.h	/^SET_SYMBOL_FWD (struct Lisp_Symbol *sym, union Lisp_Fwd *v)$/;"	f	signature:(struct Lisp_Symbol *sym, union Lisp_Fwd *v)
set_symbol_name	alloc.c	/^set_symbol_name (Lisp_Object sym, Lisp_Object name)$/;"	f	file:	signature:(Lisp_Object sym, Lisp_Object name)
set_symbol_next	lisp.h	/^set_symbol_next (Lisp_Object sym, struct Lisp_Symbol *next)$/;"	f	signature:(Lisp_Object sym, struct Lisp_Symbol *next)
set_symbol_plist	lisp.h	/^set_symbol_plist (Lisp_Object sym, Lisp_Object plist)$/;"	f	signature:(Lisp_Object sym, Lisp_Object plist)
set_symbol_trapped_write	data.c	/^set_symbol_trapped_write (Lisp_Object symbol, enum symbol_trapped_write trap)$/;"	f	file:	signature:(Lisp_Object symbol, enum symbol_trapped_write trap)
SET_SYMBOL_VAL	lisp.h	/^(SET_SYMBOL_VAL) (struct Lisp_Symbol *sym, Lisp_Object v)$/;"	f	signature:(struct Lisp_Symbol *sym, Lisp_Object v)
SET_SYMBOL_VAL	lisp.h	361;"	d
SET_TEMP_CHARSET_WORK_DECODER	charset.c	195;"	d	file:
SET_TEMP_CHARSET_WORK_ENCODER	charset.c	178;"	d	file:
set_terminal_modes_hook	termhooks.h	/^  void (*set_terminal_modes_hook) (struct terminal *);$/;"	m	struct:terminal	access:public
set_terminal_window	dispextern.h	/^extern void set_terminal_window (struct frame *, int);$/;"	p	signature:(struct frame *, int)
set_terminal_window	terminal.c	/^set_terminal_window (struct frame *f, int size)$/;"	f	signature:(struct frame *f, int size)
set_terminal_window_hook	termhooks.h	/^  void (*set_terminal_window_hook) (struct frame *, int);$/;"	m	struct:terminal	access:public
set_term_frame_name	frame.c	/^set_term_frame_name (struct frame *f, Lisp_Object name)$/;"	f	file:	signature:(struct frame *f, Lisp_Object name)
SET_TEXT_POS	dispextern.h	192;"	d
SET_TEXT_POS_FROM_MARKER	dispextern.h	223;"	d
set_text_properties	intervals.h	/^extern Lisp_Object set_text_properties (Lisp_Object, Lisp_Object,$/;"	p	signature:(Lisp_Object, Lisp_Object, Lisp_Object, Lisp_Object, Lisp_Object)
set_text_properties	textprop.c	/^set_text_properties (Lisp_Object start, Lisp_Object end, Lisp_Object properties,$/;"	f	signature:(Lisp_Object start, Lisp_Object end, Lisp_Object properties, Lisp_Object object, Lisp_Object coherent_change_p)
set_text_properties_1	intervals.h	/^extern void set_text_properties_1 (Lisp_Object, Lisp_Object,$/;"	p	signature:(Lisp_Object, Lisp_Object, Lisp_Object, Lisp_Object, INTERVAL)
set_text_properties_1	textprop.c	/^set_text_properties_1 (Lisp_Object start, Lisp_Object end, Lisp_Object properties, Lisp_Object object, INTERVAL i)$/;"	f	signature:(Lisp_Object start, Lisp_Object end, Lisp_Object properties, Lisp_Object object, INTERVAL i)
set_tty_color_mode	dispextern.h	/^extern void set_tty_color_mode (struct tty_display_info *, struct frame *);$/;"	p	signature:(struct tty_display_info *, struct frame *)
set_tty_color_mode	term.c	/^set_tty_color_mode (struct tty_display_info *tty, struct frame *f)$/;"	f	signature:(struct tty_display_info *tty, struct frame *f)
set_tty_hooks	term.c	/^set_tty_hooks (struct terminal *terminal)$/;"	f	file:	signature:(struct terminal *terminal)
set_tty_hooks	term.c	/^static void set_tty_hooks (struct terminal *terminal);$/;"	p	file:	signature:(struct terminal *terminal)
set_unwind_protect	eval.c	/^set_unwind_protect (ptrdiff_t count, void (*func) (Lisp_Object),$/;"	f	signature:(ptrdiff_t count, void (*func) (Lisp_Object), Lisp_Object arg)
set_unwind_protect	lisp.h	/^extern void set_unwind_protect (ptrdiff_t, void (*) (Lisp_Object), Lisp_Object);$/;"	p	signature:(ptrdiff_t, void (*) (Lisp_Object), Lisp_Object)
set_unwind_protect_ptr	eval.c	/^set_unwind_protect_ptr (ptrdiff_t count, void (*func) (void *), void *arg)$/;"	f	signature:(ptrdiff_t count, void (*func) (void *), void *arg)
set_unwind_protect_ptr	lisp.h	/^extern void set_unwind_protect_ptr (ptrdiff_t, void (*) (void *), void *);$/;"	p	signature:(ptrdiff_t, void (*) (void *), void *)
set_up_x_back_buffer	xfns.c	/^set_up_x_back_buffer (struct frame *f)$/;"	f	file:	signature:(struct frame *f)
set_up_x_back_buffer	xfns.c	/^static void set_up_x_back_buffer (struct frame *f);$/;"	p	file:	signature:(struct frame *f)
set_vertical_scroll_bar	dispextern.h	/^void set_vertical_scroll_bar (struct window *);$/;"	p	signature:(struct window *)
set_vertical_scroll_bar	xdisp.c	/^set_vertical_scroll_bar (struct window *w)$/;"	f	signature:(struct window *w)
set_vertical_scroll_bar_hook	termhooks.h	/^  void (*set_vertical_scroll_bar_hook) (struct window *window,$/;"	m	struct:terminal	access:public
SET_W32_COLOR	w32fns.c	1076;"	d	file:
set_waiting_for_input	keyboard.c	/^set_waiting_for_input (struct timespec *time_to_clear)$/;"	f	signature:(struct timespec *time_to_clear)
set_waiting_for_input	systime.h	/^extern void set_waiting_for_input (struct timespec *);$/;"	p	signature:(struct timespec *)
set_window_buffer	window.c	/^set_window_buffer (Lisp_Object window, Lisp_Object buffer,$/;"	f	signature:(Lisp_Object window, Lisp_Object buffer, bool run_hooks_p, bool keep_margins_p)
set_window_buffer	window.h	/^void set_window_buffer (Lisp_Object window, Lisp_Object buffer,$/;"	p	signature:(Lisp_Object window, Lisp_Object buffer, bool run_hooks_p, bool keep_margins_p)
set_window_cursor_after_update	dispnew.c	/^set_window_cursor_after_update (struct window *w)$/;"	f	file:	signature:(struct window *w)
set_window_cursor_after_update	dispnew.c	/^static void set_window_cursor_after_update (struct window *);$/;"	p	file:	signature:(struct window *)
set_window_fringes	window.c	/^set_window_fringes (struct window *w, Lisp_Object left_width,$/;"	f	file:	signature:(struct window *w, Lisp_Object left_width, Lisp_Object right_width, Lisp_Object outside_margins)
set_window_fringes	window.c	/^static struct window *set_window_fringes (struct window *, Lisp_Object,$/;"	p	file:	signature:(struct window *, Lisp_Object, Lisp_Object, Lisp_Object)
set_window_hscroll	window.c	/^set_window_hscroll (struct window *w, EMACS_INT hscroll)$/;"	f	file:	signature:(struct window *w, EMACS_INT hscroll)
set_window_margins	window.c	/^set_window_margins (struct window *w, Lisp_Object left_width,$/;"	f	file:	signature:(struct window *w, Lisp_Object left_width, Lisp_Object right_width)
set_window_margins	window.c	/^static struct window *set_window_margins (struct window *, Lisp_Object,$/;"	p	file:	signature:(struct window *, Lisp_Object, Lisp_Object)
set_window_scroll_bars	window.c	/^set_window_scroll_bars (struct window *w, Lisp_Object width,$/;"	f	file:	signature:(struct window *w, Lisp_Object width, Lisp_Object vertical_type, Lisp_Object height, Lisp_Object horizontal_type)
set_window_scroll_bars	window.c	/^static struct window *set_window_scroll_bars (struct window *, Lisp_Object,$/;"	p	file:	signature:(struct window *, Lisp_Object, Lisp_Object, Lisp_Object, Lisp_Object)
set_window_size	lisp.h	/^extern int set_window_size (int, int, int);$/;"	p	signature:(int, int, int)
set_window_size	sysdep.c	/^set_window_size (int fd, int height, int width)$/;"	f	signature:(int fd, int height, int width)
set_window_update_flags	dispnew.c	/^set_window_update_flags (struct window *w, bool on_p)$/;"	f	file:	signature:(struct window *w, bool on_p)
set_window_update_flags	dispnew.c	/^static void set_window_update_flags (struct window *w, bool on_p);$/;"	p	file:	signature:(struct window *w, bool on_p)
set_wm_state	xterm.c	/^set_wm_state (Lisp_Object frame, bool add, Atom atom, Atom value)$/;"	f	file:	signature:(Lisp_Object frame, bool add, Atom atom, Atom value)
shadowed	keymap.c	/^  bool shadowed;$/;"	m	struct:describe_map_elt	file:	access:public
shadow_lookup	keymap.c	/^shadow_lookup (Lisp_Object shadow, Lisp_Object key, Lisp_Object flag,$/;"	f	file:	signature:(Lisp_Object shadow, Lisp_Object key, Lisp_Object flag, bool remap)
shape	font.h	/^  Lisp_Object (*shape) (Lisp_Object lgstring);$/;"	m	struct:font_driver	access:public
shape_var_ptr	xfns.c	/^  Lisp_Object *shape_var_ptr;$/;"	m	struct:mouse_cursor_types	file:	access:public
SHELL	Makefile	/^SHELL = \/bin\/bash$/;"	m
shell_position	frame.h	/^  char *shell_position;$/;"	m	struct:frame	access:public
ShGetFolderPath_fn	w32.c	/^typedef HRESULT (WINAPI * ShGetFolderPath_fn)$/;"	t	file:
shift_glyphs_for_insert	dispextern.h	/^  void (*shift_glyphs_for_insert) (struct frame *f,$/;"	m	struct:redisplay_interface	access:public
shift_glyph_matrix	dispextern.h	/^void shift_glyph_matrix (struct window *, struct glyph_matrix *,$/;"	p	signature:(struct window *, struct glyph_matrix *, int, int, int)
shift_glyph_matrix	dispnew.c	/^shift_glyph_matrix (struct window *w, struct glyph_matrix *matrix, int start, int end, int dy)$/;"	f	signature:(struct window *w, struct glyph_matrix *matrix, int start, int end, int dy)
shift_lock_mask	xterm.h	/^  int meta_mod_mask, shift_lock_mask;$/;"	m	struct:x_display_info	access:public
shift_modifier	termhooks.h	/^  shift_modifier=  CHAR_SHIFT,$/;"	e	enum:__anon72
SHN_ABS	unexelf.c	141;"	d	file:
SHN_COMMON	unexelf.c	142;"	d	file:
SHN_UNDEF	unexelf.c	140;"	d	file:
shortlisp	lisp.mk	/^shortlisp = \\$/;"	m
shortlisp	Makefile	/^shortlisp := $(filter-out ${shortlisp_filter},${shortlisp})$/;"	m
shortlisp	Makefile	/^shortlisp := loaddefs.el loadup.el $(sort ${shortlisp})$/;"	m
shortlisp	Makefile	/^shortlisp =$/;"	m
shortlisp_filter	Makefile	/^shortlisp_filter = leim\/leim-list.el site-load.elc site-init.elc$/;"	m
should_produce_line_number	xdisp.c	/^should_produce_line_number (struct it *it)$/;"	f	file:	signature:(struct it *it)
should_produce_line_number	xdisp.c	/^static bool should_produce_line_number (struct it *);$/;"	p	file:	signature:(struct it *)
showing_menu	termchar.h	/^  bool_bf showing_menu : 1;$/;"	m	struct:tty_display_info	access:public
showing_window_margins_p	dispnew.c	/^showing_window_margins_p (struct window *w)$/;"	f	file:	signature:(struct window *w)
show_back_buffer	xterm.c	/^show_back_buffer (struct frame *f)$/;"	f	file:	signature:(struct frame *f)
show_help_echo	keyboard.c	/^show_help_echo (Lisp_Object help, Lisp_Object window, Lisp_Object object,$/;"	f	signature:(Lisp_Object help, Lisp_Object window, Lisp_Object object, Lisp_Object pos)
show_help_echo	keyboard.h	/^extern void show_help_echo (Lisp_Object, Lisp_Object, Lisp_Object,$/;"	p	signature:(Lisp_Object, Lisp_Object, Lisp_Object, Lisp_Object)
show_help_event	xmenu.c	/^show_help_event (struct frame *f, xt_or_gtk_widget widget, Lisp_Object help)$/;"	f	file:	signature:(struct frame *f, xt_or_gtk_widget widget, Lisp_Object help)
show_hourglass	dispextern.h	/^  void (*show_hourglass) (struct frame *f);$/;"	m	struct:redisplay_interface	access:public
show_hourglass	xdisp.c	/^show_hourglass (struct atimer *timer)$/;"	f	file:	signature:(struct atimer *timer)
show_mouse_face	xdisp.c	/^show_mouse_face (Mouse_HLInfo *hlinfo, enum draw_glyphs_face draw)$/;"	f	file:	signature:(Mouse_HLInfo *hlinfo, enum draw_glyphs_face draw)
show_mouse_face	xdisp.c	/^static void show_mouse_face (Mouse_HLInfo *, enum draw_glyphs_face);$/;"	p	file:	signature:(Mouse_HLInfo *, enum draw_glyphs_face)
shrink_mini_window	window.c	/^shrink_mini_window (struct window *w, bool pixelwise)$/;"	f	signature:(struct window *w, bool pixelwise)
shrink_mini_window	window.h	/^extern void shrink_mini_window (struct window *, bool);$/;"	p	signature:(struct window *, bool)
shrink_regexp_cache	lisp.h	/^extern void shrink_regexp_cache (void);$/;"	p	signature:(void)
shrink_regexp_cache	search.c	/^shrink_regexp_cache (void)$/;"	f	signature:(void)
SHT_DYNSYM	unexelf.c	134;"	d	file:
SHT_MIPS_DEBUG	unexelf.c	152;"	d	file:
SHT_NOBITS	unexelf.c	136;"	d	file:
SHT_NULL	unexelf.c	135;"	d	file:
SHT_REL	unexelf.c	137;"	d	file:
SHT_RELA	unexelf.c	138;"	d	file:
SHT_SYMTAB	unexelf.c	133;"	d	file:
shuffle	casetab.c	/^shuffle (Lisp_Object table, Lisp_Object c, Lisp_Object elt)$/;"	f	file:	signature:(Lisp_Object table, Lisp_Object c, Lisp_Object elt)
shuffle	casetab.c	/^static void shuffle (Lisp_Object table, Lisp_Object c, Lisp_Object elt);$/;"	p	file:	signature:(Lisp_Object table, Lisp_Object c, Lisp_Object elt)
shutdown	w32.c	232;"	d	file:
shutdown_handler	w32.c	/^shutdown_handler (DWORD type)$/;"	f	file:	signature:(DWORD type)
shut_down_emacs	emacs.c	/^shut_down_emacs (int sig, Lisp_Object stuff)$/;"	f	signature:(int sig, Lisp_Object stuff)
shut_down_emacs	lisp.h	/^extern void shut_down_emacs (int, Lisp_Object);$/;"	p	signature:(int, Lisp_Object)
sibling_etc	doc.c	/^static char const sibling_etc[] = "..\/etc\/";$/;"	v	file:
sid	w32.c	/^  unsigned char sid[FLEXIBLE_ARRAY_MEMBER];$/;"	m	struct:w32_id	file:	access:public
side	window.c	/^  (Lisp_Object old, Lisp_Object pixel_size, Lisp_Object side, Lisp_Object normal_size)$/;"	v
sie	keyboard.h	/^  struct selection_input_event sie;$/;"	m	union:buffered_input_event	typeref:struct:buffered_input_event::selection_input_event	access:public
sig	keyboard.c	/^  int sig;$/;"	m	struct:user_signal_info	file:	access:public
sigaction	w32proc.c	/^sigaction (int sig, const struct sigaction *act, struct sigaction *oact)$/;"	f	signature:(int sig, const struct sigaction *act, struct sigaction *oact)
sigaddset	w32proc.c	/^sigaddset (sigset_t *set, int signo)$/;"	f	signature:(sigset_t *set, int signo)
sigemptyset	w32proc.c	/^sigemptyset (sigset_t *set)$/;"	f	signature:(sigset_t *set)
SIGEV_SIGNAL	syssignal.h	44;"	d
sigfillset	w32proc.c	/^sigfillset (sigset_t *set)$/;"	f	signature:(sigset_t *set)
sigismember	w32proc.c	/^sigismember (const sigset_t *set, int signo)$/;"	f	signature:(const sigset_t *set, int signo)
sigmask	thread.c	/^  sigset_t *sigmask;$/;"	m	struct:select_args	file:	access:public
signal	w32proc.c	44;"	d	file:
SIGNALS_VIA_CHARACTERS	config.h	1518;"	d
signal_after_change	insdel.c	/^signal_after_change (ptrdiff_t charpos, ptrdiff_t lendel, ptrdiff_t lenins)$/;"	f	signature:(ptrdiff_t charpos, ptrdiff_t lendel, ptrdiff_t lenins)
signal_after_change	lisp.h	/^extern void signal_after_change (ptrdiff_t, ptrdiff_t, ptrdiff_t);$/;"	p	signature:(ptrdiff_t, ptrdiff_t, ptrdiff_t)
signal_before_change	insdel.c	/^signal_before_change (ptrdiff_t start_int, ptrdiff_t end_int,$/;"	f	file:	signature:(ptrdiff_t start_int, ptrdiff_t end_int, ptrdiff_t *preserve_ptr)
signal_before_change	insdel.c	/^static void signal_before_change (ptrdiff_t, ptrdiff_t, ptrdiff_t *);$/;"	p	file:	signature:(ptrdiff_t, ptrdiff_t, ptrdiff_t *)
signal_error	eval.c	/^signal_error (const char *s, Lisp_Object arg)$/;"	f	signature:(const char *s, Lisp_Object arg)
signal_error	lisp.h	/^extern _Noreturn void signal_error (const char *, Lisp_Object);$/;"	p	signature:(const char *, Lisp_Object)
signal_handler_t	syssignal.h	/^typedef void (*signal_handler_t) (int);$/;"	t
signal_or_quit	eval.c	/^signal_or_quit (Lisp_Object error_symbol, Lisp_Object data, bool keyboard_quit)$/;"	f	file:	signature:(Lisp_Object error_symbol, Lisp_Object data, bool keyboard_quit)
signal_or_quit	eval.c	/^static Lisp_Object signal_or_quit (Lisp_Object, Lisp_Object, bool);$/;"	p	file:
signal_quit	w32term.h	/^extern void signal_quit (void);$/;"	p	signature:(void)
signal_quit	w32xfns.c	/^signal_quit (void)$/;"	f	signature:(void)
signal_user_input	w32fns.c	/^signal_user_input (void)$/;"	f	file:	signature:(void)
signature	image.c	/^  char signature[FLEXIBLE_ARRAY_MEMBER];$/;"	m	struct:animation_cache	file:	access:public
signature	w32notify.c	/^  unsigned signature;$/;"	m	struct:notification	file:	access:public
SIGN_EXTEND_CHAR	regex.c	428;"	d	file:
sigprocmask	w32proc.c	/^sigprocmask (int how, const sigset_t *set, sigset_t *oset)$/;"	f	signature:(int how, const sigset_t *set, sigset_t *oset)
sigsegv_stack	sysdep.c	/^static unsigned char sigsegv_stack[SIGSTKSZ];$/;"	v	file:
sig_handlers	w32proc.c	/^static signal_handler sig_handlers[NSIG];$/;"	v	file:
sig_mask	w32proc.c	/^static sigset_t sig_mask;$/;"	v	file:
silly_event_symbol_error	keymap.c	/^silly_event_symbol_error (Lisp_Object c)$/;"	f	file:	signature:(Lisp_Object c)
silly_event_symbol_error	keymap.c	/^static void silly_event_symbol_error (Lisp_Object);$/;"	p	file:
simple_dialog_show	w32menu.c	/^simple_dialog_show (struct frame *f, Lisp_Object contents, Lisp_Object header)$/;"	f	file:	signature:(struct frame *f, Lisp_Object contents, Lisp_Object header)
simple_dialog_show	w32menu.c	/^static Lisp_Object simple_dialog_show (struct frame *, Lisp_Object, Lisp_Object);$/;"	p	file:	signature:(struct frame *, Lisp_Object, Lisp_Object)
simple_search	search.c	/^simple_search (EMACS_INT n, unsigned char *pat,$/;"	f	file:	signature:(EMACS_INT n, unsigned char *pat, ptrdiff_t len, ptrdiff_t len_byte, Lisp_Object trt, ptrdiff_t pos, ptrdiff_t pos_byte, ptrdiff_t lim, ptrdiff_t lim_byte)
simple_search	search.c	/^static EMACS_INT simple_search (EMACS_INT, unsigned char *, ptrdiff_t,$/;"	p	file:	signature:(EMACS_INT, unsigned char *, ptrdiff_t, ptrdiff_t, Lisp_Object, ptrdiff_t, ptrdiff_t, ptrdiff_t, ptrdiff_t)
SINGLE_BYTE_CHAR_P	character.h	147;"	d
single_display_spec_string_p	xdisp.c	/^single_display_spec_string_p (Lisp_Object prop, Lisp_Object string)$/;"	f	file:	signature:(Lisp_Object prop, Lisp_Object string)
single_kboard	keyboard.c	/^static bool single_kboard;$/;"	v	file:
single_keymap_panes	menu.c	/^single_keymap_panes (Lisp_Object keymap, Lisp_Object pane_name,$/;"	f	file:	signature:(Lisp_Object keymap, Lisp_Object pane_name, Lisp_Object prefix, int maxdepth)
SINGLE_LETTER_MOD	keyboard.c	6171;"	d	file:
SINGLE_LETTER_MOD	keyboard.c	6198;"	d	file:
SINGLE_LETTER_MOD	keyboard.c	6699;"	d	file:
SINGLE_LETTER_MOD	keyboard.c	6765;"	d	file:
single_menu_item	menu.c	/^single_menu_item (Lisp_Object key, Lisp_Object item, Lisp_Object dummy, void *skp_v)$/;"	f	file:	signature:(Lisp_Object key, Lisp_Object item, Lisp_Object dummy, void *skp_v)
single_menu_item	menu.c	/^static void single_menu_item (Lisp_Object, Lisp_Object, Lisp_Object,$/;"	p	file:	signature:(Lisp_Object, Lisp_Object, Lisp_Object, void *)
single_shifting	coding.h	/^  bool_bf single_shifting : 1;$/;"	m	struct:iso_2022_spec	access:public
Sinherit	syntax.h	/^    Sinherit,    \/* use the standard syntax table for this character *\/$/;"	e	enum:syntaxcode
SITELOAD_PURESIZE_EXTRA	puresize.h	46;"	d
sit_for	dispnew.c	/^sit_for (Lisp_Object timeout, bool reading, int display_option)$/;"	f	signature:(Lisp_Object timeout, bool reading, int display_option)
sit_for	lisp.h	/^extern Lisp_Object sit_for (Lisp_Object, bool, int);$/;"	p	signature:(Lisp_Object, bool, int)
size	buffer.c	/^  ptrdiff_t size;	\/* Allocated length of that array.  *\/$/;"	m	struct:sortstrlist	file:	access:public
size	buffer.c	/^  ptrdiff_t size;$/;"	m	struct:sortstr	file:	access:public
size	ccl.h	/^  int size;			\/* Size of the compiled code.  *\/$/;"	m	struct:ccl_program	access:public
size	dispextern.h	/^  ptrdiff_t size;$/;"	m	struct:face_cache	access:public
size	dispextern.h	/^  ptrdiff_t size;$/;"	m	struct:image_cache	access:public
size	emacs-module.h	/^  ptrdiff_t size;$/;"	m	struct:emacs_env_25	access:public
size	emacs-module.h	/^  ptrdiff_t size;$/;"	m	struct:emacs_env_26	access:public
size	emacs-module.h	/^  ptrdiff_t size;$/;"	m	struct:emacs_runtime	access:public
size	font.c	/^  (Lisp_Object font_entity, Lisp_Object size, Lisp_Object frame)$/;"	v
size	gmalloc.c	/^	    ptrdiff_t size;$/;"	m	union:__anon60::__anon61::__anon62	file:	access:public
size	gmalloc.c	/^	size_t size;	\/* Size (in blocks) of a free cluster.  *\/$/;"	m	struct:__anon60::__anon64	file:	access:public
size	gmalloc.c	/^    size_t size;	\/* Exact size requested by user.  *\/$/;"	m	struct:hdr	file:	access:public
size	lisp.h	/^    EMACS_INT size;$/;"	m	struct:Lisp_Bool_Vector	access:public
size	lisp.h	/^    ptrdiff_t size;$/;"	m	struct:Lisp_String	access:public
size	lisp.h	/^    ptrdiff_t size;$/;"	m	struct:vectorlike_header	access:public
size	module-env-25.h	/^  ptrdiff_t size;$/;"	v
size	nsgui.h	/^typedef struct _NSRect  { NSPoint origin; NSSize size; } NSRect;$/;"	m	struct:_NSRect	access:public
size	nsterm.h	/^  float size;$/;"	m	struct:nsfont_info	access:public
size	nsterm.h	/^  ptrdiff_t size;$/;"	m	struct:ns_color_table	access:public
size	ralloc.c	/^  size_t size;$/;"	m	struct:bp	file:	access:public
size	regex.c	/^  size_t size;$/;"	m	struct:__anon145	file:	access:public
size	regex.c	/^  size_t size;$/;"	m	struct:__anon147	file:	access:public
size	termcap.c	/^    ptrdiff_t size;$/;"	m	struct:termcap_buffer	file:	access:public
size	unexmacosx.c	/^    size_t size;$/;"	m	union:unexec_malloc_header::__anon77	file:	access:public
size	unexmacosx.c	/^  vm_size_t size;$/;"	m	struct:region_t	file:	access:public
size	w32heap.c	/^  size_t size;$/;"	m	struct:__anon139	file:	access:public
size	w32heap.h	/^    unsigned long  size;$/;"	m	struct:file_data	access:public
size	w32term.h	/^  DWORD size;$/;"	m	struct:notifications_set	access:public
size	window.c	/^     (Lisp_Object window, Lisp_Object size, Lisp_Object add)$/;"	v
size	window.c	/^  (Lisp_Object window, Lisp_Object size, Lisp_Object add)$/;"	v
size	xselect.c	/^  ptrdiff_t size;$/;"	m	struct:selection_data	file:	access:public
sizeof	lisp.h	/^	    + SUB_CHAR_TABLE_OFFSET * sizeof (Lisp_Object)));$/;"	v
SIZEOF_IFREQ	process.c	4215;"	d	file:
size_byte	lisp.h	/^    ptrdiff_t size_byte;$/;"	m	struct:Lisp_String	access:public
size_hints	xterm.h	/^  GdkGeometry size_hints;$/;"	m	struct:x_output	access:public
size_hint_flags	frame.h	/^  int size_hint_flags;$/;"	m	struct:frame	access:public
SJIS_TO_JIS	coding.h	561;"	d
SJIS_TO_JIS2	coding.h	576;"	d
skip_chars	syntax.c	/^skip_chars (bool forwardp, Lisp_Object string, Lisp_Object lim,$/;"	f	file:	signature:(bool forwardp, Lisp_Object string, Lisp_Object lim, bool handle_iso_classes)
skip_chars	syntax.c	/^static Lisp_Object skip_chars (bool, Lisp_Object, Lisp_Object, bool);$/;"	p	file:
skip_debugger	eval.c	/^skip_debugger (Lisp_Object conditions, Lisp_Object data)$/;"	f	file:	signature:(Lisp_Object conditions, Lisp_Object data)
skip_dyn_bytes	lread.c	/^skip_dyn_bytes (Lisp_Object readcharfun, ptrdiff_t n)$/;"	f	file:	signature:(Lisp_Object readcharfun, ptrdiff_t n)
skip_dyn_eof	lread.c	/^skip_dyn_eof (Lisp_Object readcharfun)$/;"	f	file:	signature:(Lisp_Object readcharfun)
skip_invisible	indent.c	/^skip_invisible (ptrdiff_t pos, ptrdiff_t *next_boundary_p, ptrdiff_t to, Lisp_Object window)$/;"	f	signature:(ptrdiff_t pos, ptrdiff_t *next_boundary_p, ptrdiff_t to, Lisp_Object window)
skip_invisible	indent.h	/^ptrdiff_t skip_invisible (ptrdiff_t pos, ptrdiff_t *next_boundary_p,$/;"	p	signature:(ptrdiff_t pos, ptrdiff_t *next_boundary_p, ptrdiff_t to, Lisp_Object window)
skip_noops	regex.c	/^skip_noops (const_re_char *p, const_re_char *pend)$/;"	f	file:	signature:(const_re_char *p, const_re_char *pend)
skip_one_char	regex.c	/^skip_one_char (const_re_char *p)$/;"	f	file:	signature:(const_re_char *p)
skip_one_char	regex.c	/^static re_char *skip_one_char (re_char *p);$/;"	p	file:	signature:(re_char *p)
skip_syntaxes	syntax.c	/^skip_syntaxes (bool forwardp, Lisp_Object string, Lisp_Object lim)$/;"	f	file:	signature:(bool forwardp, Lisp_Object string, Lisp_Object lim)
skip_syntaxes	syntax.c	/^static Lisp_Object skip_syntaxes (bool, Lisp_Object, Lisp_Object);$/;"	p	file:
skip_taskbar	frame.h	/^  bool_bf skip_taskbar : 1;$/;"	m	struct:frame	access:public
skp	menu.c	/^struct skp$/;"	s	file:
skp::maxdepth	menu.c	/^     int maxdepth;$/;"	m	struct:skp	file:	access:public
skp::notbuttons	menu.c	/^     int notbuttons;$/;"	m	struct:skp	file:	access:public
skp::pending_maps	menu.c	/^     Lisp_Object pending_maps;$/;"	m	struct:skp	file:	access:public
slant_table	font.c	/^static const struct table_entry slant_table[] =$/;"	v	typeref:struct:table_entry	file:
slice	dispextern.h	/^	struct it_slice slice;$/;"	m	struct:it::iterator_stack_entry::__anon117::__anon118	typeref:struct:it::iterator_stack_entry::__anon117::__anon118::it_slice	access:public
slice	dispextern.h	/^  struct glyph_slice slice;$/;"	m	struct:glyph_string	typeref:struct:glyph_string::glyph_slice	access:public
slice	dispextern.h	/^  struct it_slice slice;$/;"	m	struct:it	typeref:struct:it::it_slice	access:public
slice	dispextern.h	/^  } slice;$/;"	m	struct:glyph	typeref:union:glyph::__anon107	access:public
slots	alloc.c	/^  (Lisp_Object type, Lisp_Object slots, Lisp_Object init)$/;"	v
slurp_file	image.c	/^slurp_file (int fd, ptrdiff_t *size)$/;"	f	file:	signature:(int fd, ptrdiff_t *size)
smaller_face	dispextern.h	/^int smaller_face (struct frame *, int, int);$/;"	p	signature:(struct frame *, int, int)
smaller_face	xfaces.c	/^smaller_face (struct frame *f, int face_id, int steps)$/;"	f	signature:(struct frame *f, int face_id, int steps)
smallest_char_width	nsterm.h	/^  int smallest_char_width;$/;"	m	struct:ns_display_info	access:public
smallest_char_width	w32term.h	/^  int smallest_char_width;$/;"	m	struct:w32_display_info	access:public
smallest_char_width	xterm.h	/^  int smallest_char_width;$/;"	m	struct:x_display_info	access:public
smallest_font_height	nsterm.h	/^  int smallest_font_height;$/;"	m	struct:ns_display_info	access:public
smallest_font_height	w32term.h	/^  int smallest_font_height;$/;"	m	struct:w32_display_info	access:public
smallest_font_height	xterm.h	/^  int smallest_font_height;$/;"	m	struct:x_display_info	access:public
Smath	syntax.h	/^    Smath,	 \/* for delimiters like $ in Tex.  *\/$/;"	e	enum:syntaxcode
Smax	syntax.h	/^    Smax	 \/* Upper bound on codes that are meaningful.  *\/$/;"	e	enum:syntaxcode
smc_conn	xsmfns.c	/^static SmcConn smc_conn;$/;"	v	file:
smc_die_CB	xsmfns.c	/^smc_die_CB (SmcConn smcConn, SmPointer clientData)$/;"	f	file:	signature:(SmcConn smcConn, SmPointer clientData)
smc_error_handler	xsmfns.c	/^smc_error_handler (SmcConn smcConn,$/;"	f	file:	signature:(SmcConn smcConn, Bool swap, int offendingMinorOpcode, unsigned long offendingSequence, int errorClass, int severity, SmPointer values)
smc_interact_CB	xsmfns.c	/^smc_interact_CB (SmcConn smcConn, SmPointer clientData)$/;"	f	file:	signature:(SmcConn smcConn, SmPointer clientData)
smc_save_complete_CB	xsmfns.c	/^smc_save_complete_CB (SmcConn smcConn, SmPointer clientData)$/;"	f	file:	signature:(SmcConn smcConn, SmPointer clientData)
smc_save_yourself_CB	xsmfns.c	/^smc_save_yourself_CB (SmcConn smcConn,$/;"	f	file:	signature:(SmcConn smcConn, SmPointer clientData, int saveType, Bool shutdown, int interactStyle, Bool fast)
smc_shutdown_cancelled_CB	xsmfns.c	/^smc_shutdown_cancelled_CB (SmcConn smcConn, SmPointer clientData)$/;"	f	file:	signature:(SmcConn smcConn, SmPointer clientData)
SMID_OPT	xsmfns.c	72;"	d	file:
SM_CXVIRTUALSCREEN	w32term.c	134;"	d	file:
SM_CYVIRTUALSCREEN	w32term.c	137;"	d	file:
SM_ERRORSTRING_LEN	xsmfns.c	397;"	d	file:
SM_XVIRTUALSCREEN	w32fns.c	113;"	d	file:
SM_YVIRTUALSCREEN	w32fns.c	116;"	d	file:
SNAME	w32uniscribe.c	701;"	d	file:
snd_error_quiet	sound.c	/^snd_error_quiet (const char *file, int line, const char *function, int err,$/;"	f	file:	signature:(const char *file, int line, const char *function, int err, const char *fmt)
snprintf	sysdep.c	/^snprintf (char *buf, size_t bufsize, char const *format, ...)$/;"	f	signature:(char *buf, size_t bufsize, char const *format, ...)
sockaddr_and_len	process.c	/^static struct sockaddr_and_len {$/;"	s	file:
sockaddr_and_len::len	process.c	/^  ptrdiff_t len;$/;"	m	struct:sockaddr_and_len	file:	access:public
sockaddr_and_len::sa	process.c	/^  struct sockaddr *sa;$/;"	m	struct:sockaddr_and_len	typeref:struct:sockaddr_and_len::sockaddr	file:	access:public
socket	process.c	199;"	d	file:
socket	process.c	200;"	d	file:
socket	w32.c	222;"	d	file:
socket_options	process.c	/^static const struct socket_options {$/;"	s	file:
socket_options	process.c	/^} socket_options[] =$/;"	v	typeref:struct:socket_options	file:
socket_options::name	process.c	/^  const char *name;$/;"	m	struct:socket_options	file:	access:public
socket_options::OPIX_MISC	process.c	/^  enum { OPIX_NONE = 0, OPIX_MISC = 1, OPIX_REUSEADDR = 2 } optbit;$/;"	e	enum:socket_options::__anon50	file:
socket_options::OPIX_NONE	process.c	/^  enum { OPIX_NONE = 0, OPIX_MISC = 1, OPIX_REUSEADDR = 2 } optbit;$/;"	e	enum:socket_options::__anon50	file:
socket_options::OPIX_REUSEADDR	process.c	/^  enum { OPIX_NONE = 0, OPIX_MISC = 1, OPIX_REUSEADDR = 2 } optbit;$/;"	e	enum:socket_options::__anon50	file:
socket_options::optbit	process.c	/^  enum { OPIX_NONE = 0, OPIX_MISC = 1, OPIX_REUSEADDR = 2 } optbit;$/;"	m	struct:socket_options	typeref:enum:socket_options::__anon50	file:	access:public
socket_options::optlevel	process.c	/^  int optlevel;$/;"	m	struct:socket_options	file:	access:public
socket_options::optnum	process.c	/^  int optnum;$/;"	m	struct:socket_options	file:	access:public
socket_options::opttype	process.c	/^  enum { SOPT_UNKNOWN, SOPT_BOOL, SOPT_INT, SOPT_IFNAME, SOPT_LINGER } opttype;$/;"	m	struct:socket_options	typeref:enum:socket_options::__anon49	file:	access:public
socket_options::SOPT_BOOL	process.c	/^  enum { SOPT_UNKNOWN, SOPT_BOOL, SOPT_INT, SOPT_IFNAME, SOPT_LINGER } opttype;$/;"	e	enum:socket_options::__anon49	file:
socket_options::SOPT_IFNAME	process.c	/^  enum { SOPT_UNKNOWN, SOPT_BOOL, SOPT_INT, SOPT_IFNAME, SOPT_LINGER } opttype;$/;"	e	enum:socket_options::__anon49	file:
socket_options::SOPT_INT	process.c	/^  enum { SOPT_UNKNOWN, SOPT_BOOL, SOPT_INT, SOPT_IFNAME, SOPT_LINGER } opttype;$/;"	e	enum:socket_options::__anon49	file:
socket_options::SOPT_LINGER	process.c	/^  enum { SOPT_UNKNOWN, SOPT_BOOL, SOPT_INT, SOPT_IFNAME, SOPT_LINGER } opttype;$/;"	e	enum:socket_options::__anon49	file:
socket_options::SOPT_UNKNOWN	process.c	/^  enum { SOPT_UNKNOWN, SOPT_BOOL, SOPT_INT, SOPT_IFNAME, SOPT_LINGER } opttype;$/;"	e	enum:socket_options::__anon49	file:
socket_to_fd	w32.c	/^socket_to_fd (SOCKET s)$/;"	f	file:	signature:(SOCKET s)
socket_to_fd	w32.c	/^static int socket_to_fd (SOCKET s);$/;"	p	file:	signature:(SOCKET s)
socktype	process.h	/^    int socktype;$/;"	m	struct:Lisp_Process	access:public
SOCK_CLOEXEC	process.c	155;"	d	file:
SOCK_HANDLE	w32.c	7514;"	d	file:
SOCK_NONBLOCK	process.c	158;"	d	file:
soft	textprop.c	/^enum { soft = false, hard = true };$/;"	e	enum:__anon59	file:
SOFT_HYPHEN	character.h	/^  SOFT_HYPHEN = 0x00AD,$/;"	e	enum:__anon54
something_changed_gconfCB	xsettings.c	/^something_changed_gconfCB (GConfClient *client,$/;"	f	file:	signature:(GConfClient *client, guint cnxn_id, GConfEntry *entry, gpointer user_data)
something_changed_gsettingsCB	xsettings.c	/^something_changed_gsettingsCB (GSettings *settings,$/;"	f	file:	signature:(GSettings *settings, gchar *key, gpointer user_data)
SOME_MACHINE_OBJECTS	Makefile	/^SOME_MACHINE_OBJECTS = \\$/;"	m
some_mouse_moved	keyboard.c	/^some_mouse_moved (void)$/;"	f	file:	signature:(void)
Sopen	syntax.h	/^    Sopen,	 \/* for a beginning delimiter *\/$/;"	e	enum:syntaxcode
SOPT_BOOL	process.c	/^  enum { SOPT_UNKNOWN, SOPT_BOOL, SOPT_INT, SOPT_IFNAME, SOPT_LINGER } opttype;$/;"	e	enum:socket_options::__anon49	file:
SOPT_IFNAME	process.c	/^  enum { SOPT_UNKNOWN, SOPT_BOOL, SOPT_INT, SOPT_IFNAME, SOPT_LINGER } opttype;$/;"	e	enum:socket_options::__anon49	file:
SOPT_INT	process.c	/^  enum { SOPT_UNKNOWN, SOPT_BOOL, SOPT_INT, SOPT_IFNAME, SOPT_LINGER } opttype;$/;"	e	enum:socket_options::__anon49	file:
SOPT_LINGER	process.c	/^  enum { SOPT_UNKNOWN, SOPT_BOOL, SOPT_INT, SOPT_IFNAME, SOPT_LINGER } opttype;$/;"	e	enum:socket_options::__anon49	file:
SOPT_UNKNOWN	process.c	/^  enum { SOPT_UNKNOWN, SOPT_BOOL, SOPT_INT, SOPT_IFNAME, SOPT_LINGER } opttype;$/;"	e	enum:socket_options::__anon49	file:
sortstr	buffer.c	/^struct sortstr$/;"	s	file:
sortstr::priority	buffer.c	/^  EMACS_INT priority;$/;"	m	struct:sortstr	file:	access:public
sortstr::size	buffer.c	/^  ptrdiff_t size;$/;"	m	struct:sortstr	file:	access:public
sortstr::string	buffer.c	/^  Lisp_Object string, string2;$/;"	m	struct:sortstr	file:	access:public
sortstr::string2	buffer.c	/^  Lisp_Object string, string2;$/;"	m	struct:sortstr	file:	access:public
sortstrlist	buffer.c	/^struct sortstrlist$/;"	s	file:
sortstrlist::buf	buffer.c	/^  struct sortstr *buf;	\/* An array that expands as needed; never freed.  *\/$/;"	m	struct:sortstrlist	typeref:struct:sortstrlist::sortstr	file:	access:public
sortstrlist::bytes	buffer.c	/^  ptrdiff_t bytes;	\/* Total length of the strings in buf.  *\/$/;"	m	struct:sortstrlist	file:	access:public
sortstrlist::size	buffer.c	/^  ptrdiff_t size;	\/* Allocated length of that array.  *\/$/;"	m	struct:sortstrlist	file:	access:public
sortstrlist::used	buffer.c	/^  ptrdiff_t used;	\/* How much of the array is currently in use.  *\/$/;"	m	struct:sortstrlist	file:	access:public
sortvec	buffer.c	/^struct sortvec$/;"	s	file:
sortvec::beg	buffer.c	/^  ptrdiff_t beg, end;$/;"	m	struct:sortvec	file:	access:public
sortvec::end	buffer.c	/^  ptrdiff_t beg, end;$/;"	m	struct:sortvec	file:	access:public
sortvec::overlay	buffer.c	/^  Lisp_Object overlay;$/;"	m	struct:sortvec	file:	access:public
sortvec::priority	buffer.c	/^  EMACS_INT priority;$/;"	m	struct:sortvec	file:	access:public
sortvec::spriority	buffer.c	/^  EMACS_INT spriority;		\/* Secondary priority.  *\/$/;"	m	struct:sortvec	file:	access:public
sort_args	emacs.c	/^sort_args (int argc, char **argv)$/;"	f	file:	signature:(int argc, char **argv)
sort_args	emacs.c	/^static void sort_args (int argc, char **argv);$/;"	p	file:	signature:(int argc, char **argv)
sort_overlays	buffer.c	/^sort_overlays (Lisp_Object *overlay_vec, ptrdiff_t noverlays, struct window *w)$/;"	f	signature:(Lisp_Object *overlay_vec, ptrdiff_t noverlays, struct window *w)
sort_overlays	buffer.h	/^extern ptrdiff_t sort_overlays (Lisp_Object *, ptrdiff_t, struct window *);$/;"	p	signature:(Lisp_Object *, ptrdiff_t, struct window *)
sort_shift_bits	font.c	/^static int sort_shift_bits[FONT_SIZE_INDEX + 1];$/;"	v	file:
sos	dispextern.h	/^  bidi_dir_t sos;		\/* direction of start-of-sequence in effect *\/$/;"	m	struct:bidi_it	access:public
sound	sound.c	/^struct sound$/;"	s	file:
sound::data	sound.c	/^  Lisp_Object data;$/;"	m	struct:sound	file:	access:public
sound::fd	sound.c	/^  int fd;$/;"	m	struct:sound	file:	access:public
sound::header	sound.c	/^  char *header;$/;"	m	struct:sound	file:	access:public
sound::header_size	sound.c	/^  int header_size;$/;"	m	struct:sound	file:	access:public
sound::play	sound.c	/^  void (* play) (struct sound *s, struct sound_device *sd);$/;"	m	struct:sound	file:	access:public
sound::type	sound.c	/^  enum sound_type type;$/;"	m	struct:sound	typeref:enum:sound::sound_type	file:	access:public
sound_attr	sound.c	/^enum sound_attr$/;"	g	file:
SOUND_ATTR_SENTINEL	sound.c	/^  SOUND_ATTR_SENTINEL$/;"	e	enum:sound_attr	file:
sound_cleanup	sound.c	/^sound_cleanup (void)$/;"	f	file:	signature:(void)
SOUND_DATA	sound.c	/^  SOUND_DATA,$/;"	e	enum:sound_attr	file:
SOUND_DEVICE	sound.c	/^  SOUND_DEVICE,$/;"	e	enum:sound_attr	file:
sound_device	sound.c	/^struct sound_device$/;"	s	file:
sound_device::bps	sound.c	/^  int bps;$/;"	m	struct:sound_device	file:	access:public
sound_device::channels	sound.c	/^  int channels;$/;"	m	struct:sound_device	file:	access:public
sound_device::choose_format	sound.c	/^  void (* choose_format) (struct sound_device *sd,$/;"	m	struct:sound_device	file:	access:public
sound_device::close	sound.c	/^  void (* close) (struct sound_device *sd);$/;"	m	struct:sound_device	file:	access:public
sound_device::configure	sound.c	/^  void (* configure) (struct sound_device *device);$/;"	m	struct:sound_device	file:	access:public
sound_device::data	sound.c	/^  void *data;$/;"	m	struct:sound_device	file:	access:public
sound_device::fd	sound.c	/^  int fd;$/;"	m	struct:sound_device	file:	access:public
sound_device::file	sound.c	/^  Lisp_Object file;$/;"	m	struct:sound_device	file:	access:public
sound_device::format	sound.c	/^  int format;$/;"	m	struct:sound_device	file:	access:public
sound_device::open	sound.c	/^  void (* open) (struct sound_device *sd);$/;"	m	struct:sound_device	file:	access:public
sound_device::period_size	sound.c	/^  ptrdiff_t (* period_size) (struct sound_device *sd);$/;"	m	struct:sound_device	file:	access:public
sound_device::sample_rate	sound.c	/^  int sample_rate;$/;"	m	struct:sound_device	file:	access:public
sound_device::sample_size	sound.c	/^  int sample_size;$/;"	m	struct:sound_device	file:	access:public
sound_device::volume	sound.c	/^  int volume;$/;"	m	struct:sound_device	file:	access:public
sound_device::write	sound.c	/^  void (* write) (struct sound_device *sd, const char *buffer,$/;"	m	struct:sound_device	file:	access:public
SOUND_FILE	sound.c	/^  SOUND_FILE,$/;"	e	enum:sound_attr	file:
sound_perror	sound.c	/^sound_perror (const char *msg)$/;"	f	file:	signature:(const char *msg)
sound_type	sound.c	/^enum sound_type$/;"	g	file:
sound_type	w32fns.c	/^static unsigned int sound_type = 0xFFFFFFFF;$/;"	v	file:
SOUND_VOLUME	sound.c	/^  SOUND_VOLUME,$/;"	e	enum:sound_attr	file:
sound_warning	sound.c	/^sound_warning (const char *msg)$/;"	f	file:	signature:(const char *msg)
SOUND_WARNING	sound.c	1207;"	d	file:
source	coding.h	/^  const unsigned char *source;$/;"	m	struct:coding_system	access:public
source	xfns.c	/^   Lisp_Object source, Lisp_Object delete_p, Lisp_Object vector_ret_p)$/;"	v
SouthEastGravity	nsgui.h	173;"	d
SouthEastGravity	w32gui.h	91;"	d
SouthGravity	nsgui.h	172;"	d
SouthGravity	w32gui.h	90;"	d
SouthWestGravity	nsgui.h	171;"	d
SouthWestGravity	w32gui.h	89;"	d
sp	dispextern.h	/^  int sp;$/;"	m	struct:it	access:public
SPACEGLYPH	disptab.h	95;"	d
spacer	lisp.h	/^    unsigned spacer : 15;$/;"	m	struct:Lisp_Free	access:public
spacer	lisp.h	/^    unsigned spacer : 15;$/;"	m	struct:Lisp_Overlay	access:public
spacer	lisp.h	/^    unsigned spacer : 32 - (16 + 1 + SAVE_TYPE_BITS);$/;"	m	struct:Lisp_Save_Value	access:public
spacer	lisp.h	/^  unsigned spacer : 13;$/;"	m	struct:Lisp_Marker	access:public
spacer	lisp.h	/^  unsigned spacer : 15;$/;"	m	struct:Lisp_Misc_Any	access:public
spacer	lisp.h	/^  unsigned spacer : 15;$/;"	m	struct:Lisp_User_Ptr	access:public
space_glyph	dispnew.c	/^struct glyph space_glyph;$/;"	v	typeref:struct:glyph
space_width	dispextern.h	/^    Lisp_Object space_width;$/;"	m	struct:it::iterator_stack_entry	access:public
space_width	dispextern.h	/^  Lisp_Object space_width;$/;"	m	struct:it	access:public
space_width	font.h	/^  int space_width;$/;"	m	struct:font	access:public
spare_memory	alloc.c	/^static char *spare_memory[7];$/;"	v	file:
SPARE_MEMORY	alloc.c	257;"	d	file:
spawnve	w32proc.c	46;"	d	file:
spec	coding.h	/^    } spec;$/;"	m	struct:coding_system	typeref:union:coding_system::__anon152	access:public
spec	dispextern.h	/^  Lisp_Object spec;$/;"	m	struct:image	access:public
spec	font.c	/^  (Lisp_Object spec, Lisp_Object font)$/;"	v
spec	image.c	/^  (Lisp_Object spec, Lisp_Object frame)$/;"	v
spec	image.c	/^  (Lisp_Object spec, Lisp_Object pixels, Lisp_Object frame)$/;"	v
specbind	eval.c	/^specbind (Lisp_Object symbol, Lisp_Object value)$/;"	f	signature:(Lisp_Object symbol, Lisp_Object value)
specbind	lisp.h	/^extern void specbind (Lisp_Object, Lisp_Object);$/;"	p	signature:(Lisp_Object, Lisp_Object)
specbinding	lisp.h	/^union specbinding$/;"	u
specbinding::bt	lisp.h	/^    } bt;$/;"	m	union:specbinding	typeref:struct:specbinding::__anon34	access:public
specbinding::CHAR_BIT	lisp.h	/^    ENUM_BF (specbind_tag) kind : CHAR_BIT;$/;"	m	union:specbinding	access:public
specbinding::let	lisp.h	/^    } let;$/;"	m	union:specbinding	typeref:struct:specbinding::__anon33	access:public
specbinding::unwind	lisp.h	/^    } unwind;$/;"	m	union:specbinding	typeref:struct:specbinding::__anon29	access:public
specbinding::unwind_int	lisp.h	/^    } unwind_int;$/;"	m	union:specbinding	typeref:struct:specbinding::__anon31	access:public
specbinding::unwind_ptr	lisp.h	/^    } unwind_ptr;$/;"	m	union:specbinding	typeref:struct:specbinding::__anon30	access:public
specbinding::unwind_void	lisp.h	/^    } unwind_void;$/;"	m	union:specbinding	typeref:struct:specbinding::__anon32	access:public
specbinding::__anon29::arg	lisp.h	/^      Lisp_Object arg;$/;"	m	struct:specbinding::__anon29	access:public
specbinding::__anon29::func	lisp.h	/^      void (*func) (Lisp_Object);$/;"	m	struct:specbinding::__anon29	access:public
specbinding::__anon29::kind	lisp.h	/^      ENUM_BF (specbind_tag) kind : CHAR_BIT;$/;"	m	struct:specbinding::__anon29	access:public
specbinding::__anon30::arg	lisp.h	/^      void *arg;$/;"	m	struct:specbinding::__anon30	access:public
specbinding::__anon30::func	lisp.h	/^      void (*func) (void *);$/;"	m	struct:specbinding::__anon30	access:public
specbinding::__anon30::kind	lisp.h	/^      ENUM_BF (specbind_tag) kind : CHAR_BIT;$/;"	m	struct:specbinding::__anon30	access:public
specbinding::__anon31::arg	lisp.h	/^      int arg;$/;"	m	struct:specbinding::__anon31	access:public
specbinding::__anon31::func	lisp.h	/^      void (*func) (int);$/;"	m	struct:specbinding::__anon31	access:public
specbinding::__anon31::kind	lisp.h	/^      ENUM_BF (specbind_tag) kind : CHAR_BIT;$/;"	m	struct:specbinding::__anon31	access:public
specbinding::__anon32::func	lisp.h	/^      void (*func) (void);$/;"	m	struct:specbinding::__anon32	access:public
specbinding::__anon32::kind	lisp.h	/^      ENUM_BF (specbind_tag) kind : CHAR_BIT;$/;"	m	struct:specbinding::__anon32	access:public
specbinding::__anon33::kind	lisp.h	/^      ENUM_BF (specbind_tag) kind : CHAR_BIT;$/;"	m	struct:specbinding::__anon33	access:public
specbinding::__anon33::old_value	lisp.h	/^      Lisp_Object symbol, old_value, where;$/;"	m	struct:specbinding::__anon33	access:public
specbinding::__anon33::saved_value	lisp.h	/^      Lisp_Object saved_value;$/;"	m	struct:specbinding::__anon33	access:public
specbinding::__anon33::symbol	lisp.h	/^      Lisp_Object symbol, old_value, where;$/;"	m	struct:specbinding::__anon33	access:public
specbinding::__anon33::where	lisp.h	/^      Lisp_Object symbol, old_value, where;$/;"	m	struct:specbinding::__anon33	access:public
specbinding::__anon34::args	lisp.h	/^      Lisp_Object *args;$/;"	m	struct:specbinding::__anon34	access:public
specbinding::__anon34::debug_on_exit	lisp.h	/^      bool_bf debug_on_exit : 1;$/;"	m	struct:specbinding::__anon34	access:public
specbinding::__anon34::function	lisp.h	/^      Lisp_Object function;$/;"	m	struct:specbinding::__anon34	access:public
specbinding::__anon34::kind	lisp.h	/^      ENUM_BF (specbind_tag) kind : CHAR_BIT;$/;"	m	struct:specbinding::__anon34	access:public
specbinding::__anon34::nargs	lisp.h	/^      ptrdiff_t nargs;$/;"	m	struct:specbinding::__anon34	access:public
specbind_tag	lisp.h	/^enum specbind_tag {$/;"	g
specialcase_char_tables	casefiddle.c	/^  Lisp_Object specialcase_char_tables[3];$/;"	m	struct:casing_context	file:	access:public
specified_time	editfns.c	/^  (Lisp_Object specified_time, Lisp_Object zone)$/;"	v
specified_window	termchar.h	/^  int specified_window;$/;"	m	struct:tty_display_info	access:public
specpdl	thread.h	88;"	d
specpdl_arg	eval.c	/^specpdl_arg (union specbinding *pdl)$/;"	f	file:	signature:(union specbinding *pdl)
SPECPDL_BACKTRACE	lisp.h	/^  SPECPDL_BACKTRACE,		\/* An element of the backtrace.  *\/$/;"	e	enum:specbind_tag
SPECPDL_INDEX	lisp.h	/^SPECPDL_INDEX (void)$/;"	f	signature:(void)
specpdl_kind	eval.c	/^specpdl_kind (union specbinding *pdl)$/;"	f	file:	signature:(union specbinding *pdl)
SPECPDL_LET	lisp.h	/^  SPECPDL_LET,			\/* A plain and simple dynamic let-binding.  *\/$/;"	e	enum:specbind_tag
SPECPDL_LET_DEFAULT	lisp.h	/^  SPECPDL_LET_DEFAULT		\/* A global binding for a localized var.  *\/$/;"	e	enum:specbind_tag
SPECPDL_LET_LOCAL	lisp.h	/^  SPECPDL_LET_LOCAL,		\/* A buffer-local let-binding.  *\/$/;"	e	enum:specbind_tag
specpdl_old_value	eval.c	/^specpdl_old_value (union specbinding *pdl)$/;"	f	file:	signature:(union specbinding *pdl)
specpdl_ptr	thread.h	92;"	d
specpdl_saved_value	eval.c	/^specpdl_saved_value (union specbinding *pdl)$/;"	f	file:	signature:(union specbinding *pdl)
specpdl_size	thread.h	84;"	d
specpdl_symbol	eval.c	/^specpdl_symbol (union specbinding *pdl)$/;"	f	file:	signature:(union specbinding *pdl)
SPECPDL_UNWIND	lisp.h	/^  SPECPDL_UNWIND,		\/* An unwind_protect function on Lisp_Object.  *\/$/;"	e	enum:specbind_tag
SPECPDL_UNWIND_INT	lisp.h	/^  SPECPDL_UNWIND_INT,		\/* Likewise, on int.  *\/$/;"	e	enum:specbind_tag
SPECPDL_UNWIND_PTR	lisp.h	/^  SPECPDL_UNWIND_PTR,		\/* Likewise, on void *.  *\/$/;"	e	enum:specbind_tag
SPECPDL_UNWIND_VOID	lisp.h	/^  SPECPDL_UNWIND_VOID,		\/* Likewise, with no arg.  *\/$/;"	e	enum:specbind_tag
specpdl_where	eval.c	/^specpdl_where (union specbinding *pdl)$/;"	f	file:	signature:(union specbinding *pdl)
spec_glyph_lookup_face	dispextern.h	/^extern void spec_glyph_lookup_face (struct window *, GLYPH *);$/;"	p	signature:(struct window *, GLYPH *)
spec_glyph_lookup_face	dispnew.c	/^spec_glyph_lookup_face (struct window *w, GLYPH *glyph)$/;"	f	signature:(struct window *w, GLYPH *glyph)
SpinCount	systhread.h	/^  unsigned long SpinCount;$/;"	m	struct:__anon43	access:public
SPLIT_CHAR	charset.h	462;"	d
split_interval_left	intervals.c	/^split_interval_left (INTERVAL interval, ptrdiff_t offset)$/;"	f	signature:(INTERVAL interval, ptrdiff_t offset)
split_interval_left	intervals.h	/^extern INTERVAL split_interval_left (INTERVAL, ptrdiff_t);$/;"	p	signature:(INTERVAL, ptrdiff_t)
split_interval_right	intervals.c	/^split_interval_right (INTERVAL interval, ptrdiff_t offset)$/;"	f	signature:(INTERVAL interval, ptrdiff_t offset)
split_interval_right	intervals.h	/^extern INTERVAL split_interval_right (INTERVAL, ptrdiff_t);$/;"	p	signature:(INTERVAL, ptrdiff_t)
spriority	buffer.c	/^  EMACS_INT spriority;		\/* Secondary priority.  *\/$/;"	m	struct:sortvec	file:	access:public
Spunct	syntax.h	/^    Spunct,	 \/* for random punctuation characters *\/$/;"	e	enum:syntaxcode
Squote	syntax.h	/^    Squote,	 \/* for a prefix character like Lisp ' *\/$/;"	e	enum:syntaxcode
srandom	conf_post.h	126;"	d
srandom	w32.c	/^srandom (int seed)$/;"	f	signature:(int seed)
srandom	w32.h	/^extern void srandom (int);$/;"	p	signature:(int)
srcdir	Makefile	/^srcdir = .$/;"	m
src_bytes	coding.h	/^  ptrdiff_t src_pos, src_pos_byte, src_chars, src_bytes;$/;"	m	struct:coding_system	access:public
src_chars	coding.h	/^  ptrdiff_t src_pos, src_pos_byte, src_chars, src_bytes;$/;"	m	struct:coding_system	access:public
src_multibyte	coding.h	/^  bool_bf src_multibyte : 1;$/;"	m	struct:coding_system	access:public
src_object	coding.h	/^  Lisp_Object src_object;$/;"	m	struct:coding_system	access:public
src_pos	coding.h	/^  ptrdiff_t src_pos, src_pos_byte, src_chars, src_bytes;$/;"	m	struct:coding_system	access:public
src_pos_byte	coding.h	/^  ptrdiff_t src_pos, src_pos_byte, src_chars, src_bytes;$/;"	m	struct:coding_system	access:public
SREF	lisp.h	/^SREF (Lisp_Object string, ptrdiff_t index)$/;"	f	signature:(Lisp_Object string, ptrdiff_t index)
SSDATA	lisp.h	/^SSDATA (Lisp_Object string)$/;"	f	signature:(Lisp_Object string)
SSET	lisp.h	/^SSET (Lisp_Object string, ptrdiff_t index, unsigned char new)$/;"	f	signature:(Lisp_Object string, ptrdiff_t index, unsigned char new)
Sstring	syntax.h	/^    Sstring,	 \/* for a string-grouping character like Lisp " *\/$/;"	e	enum:syntaxcode
Sstring_fence	syntax.h	/^    Sstring_fence,  \/* Starts\/ends string which is delimited on the$/;"	e	enum:syntaxcode
Ssymbol	regex.c	/^enum syntaxcode { Swhitespace = 0, Sword = 1, Ssymbol = 2 };$/;"	e	enum:syntaxcode	file:
Ssymbol	syntax.h	/^    Ssymbol,	 \/* symbol constituent but not word constituent *\/$/;"	e	enum:syntaxcode
stack	dispextern.h	/^  stack[IT_STACK_SIZE];$/;"	m	struct:it	typeref:struct:it::iterator_stack_entry	access:public
stack	regex.c	/^  compile_stack_elt_t *stack;$/;"	m	struct:__anon147	file:	access:public
stack	regex.c	/^  fail_stack_elt_t *stack;$/;"	m	struct:__anon145	file:	access:public
stacktop_sentry	alloc.c	/^} stacktop_sentry;$/;"	t	typeref:union:__anon12	file:
stack_bottom	thread.h	63;"	d
STACK_CONS	lisp.h	4578;"	d
stack_copy	alloc.c	/^static char *stack_copy;$/;"	v	file:
stack_copy_size	alloc.c	/^static ptrdiff_t stack_copy_size;$/;"	v	file:
stack_idx	ccl.h	/^  int stack_idx;		\/* How deep the call of CCL_Call is nested.  *\/$/;"	m	struct:ccl_program	access:public
stack_idx	dispextern.h	/^  int stack_idx;		\/* index of current data on the stack *\/$/;"	m	struct:bidi_it	access:public
stack_idx_of_map_multiple	ccl.c	/^static int stack_idx_of_map_multiple;$/;"	v	file:
stack_overflow	sysdep.c	/^stack_overflow (siginfo_t *siginfo)$/;"	f	file:	signature:(siginfo_t *siginfo)
stack_overflow_handler	w32fns.c	/^stack_overflow_handler (void)$/;"	f	file:	signature:(void)
stack_top	thread.h	/^  char *stack_top;$/;"	m	struct:thread_state	access:public
standard_args	emacs.c	/^static const struct standard_args standard_args[] =$/;"	v	typeref:struct:standard_args	file:
standard_args	emacs.c	/^struct standard_args$/;"	s	file:
standard_args::longname	emacs.c	/^  const char *longname;$/;"	m	struct:standard_args	file:	access:public
standard_args::name	emacs.c	/^  const char *name;$/;"	m	struct:standard_args	file:	access:public
standard_args::nargs	emacs.c	/^  int nargs;$/;"	m	struct:standard_args	file:	access:public
standard_args::priority	emacs.c	/^  int priority;$/;"	m	struct:standard_args	file:	access:public
standard_bitmaps	fringe.c	/^static struct fringe_bitmap standard_bitmaps[] =$/;"	v	typeref:struct:fringe_bitmap	file:
STANDARD_BITMAP_HEIGHT	fringe.c	436;"	d	file:
STANDARD_EVENT_SET	xterm.h	113;"	d
standout_mode	termchar.h	/^  bool_bf standout_mode : 1;	\/* True when in standout mode.  *\/$/;"	m	struct:tty_display_info	access:public
start	alloc.c	/^  void *start, *end;$/;"	m	struct:mem_node	file:	access:public
start	coding.c	/^  (Lisp_Object start, Lisp_Object end, Lisp_Object coding_system, Lisp_Object destination)$/;"	v
start	coding.c	/^  (Lisp_Object start, Lisp_Object end, Lisp_Object coding_system,$/;"	v
start	coding.c	/^  (Lisp_Object start, Lisp_Object end, Lisp_Object coding_system_list)$/;"	v
start	coding.c	/^  (Lisp_Object start, Lisp_Object end, Lisp_Object exclude)$/;"	v
start	coding.c	/^  (Lisp_Object start, Lisp_Object end, Lisp_Object highest)$/;"	v
start	composite.c	/^  (Lisp_Object start, Lisp_Object end, Lisp_Object components, Lisp_Object modification_func)$/;"	v
start	composite.c	/^  (Lisp_Object string, Lisp_Object start, Lisp_Object end,$/;"	v
start	decompress.c	/^  (Lisp_Object start, Lisp_Object end)$/;"	v
start	decompress.c	/^  ptrdiff_t old_point, start, nbytes;$/;"	m	struct:decompress_unwind_data	file:	access:public
start	dispextern.h	/^  struct display_pos start;$/;"	m	struct:glyph_row	typeref:struct:glyph_row::display_pos	access:public
start	dispextern.h	/^  struct display_pos start;$/;"	m	struct:it	typeref:struct:it::display_pos	access:public
start	editfns.c	/^  (Lisp_Object buffer, Lisp_Object start, Lisp_Object end)$/;"	v
start	editfns.c	/^  (Lisp_Object start, Lisp_Object end)$/;"	v
start	editfns.c	/^  (Lisp_Object start, Lisp_Object end, Lisp_Object fromchar, Lisp_Object tochar, Lisp_Object noundo)$/;"	v
start	editfns.c	/^  (Lisp_Object start, Lisp_Object end, register Lisp_Object table)$/;"	v
start	editfns.c	/^  (register Lisp_Object start, Lisp_Object end)$/;"	v
start	fileio.c	/^  (Lisp_Object start, Lisp_Object end, Lisp_Object filename, Lisp_Object append,$/;"	v
start	fns.c	/^  (Lisp_Object algorithm, Lisp_Object object, Lisp_Object start, Lisp_Object end, Lisp_Object binary)$/;"	v
start	fns.c	/^  (Lisp_Object object, Lisp_Object start, Lisp_Object end, Lisp_Object coding_system, Lisp_Object noerror)$/;"	v
start	keyboard.c	/^  int start, end;$/;"	m	struct:keyremap	file:	access:public
start	lisp.h	/^    Lisp_Object start;$/;"	m	struct:Lisp_Overlay	access:public
start	lread.c	/^  (Lisp_Object start, Lisp_Object end, Lisp_Object printflag, Lisp_Object read_function)$/;"	v
start	lread.c	/^  (Lisp_Object string, Lisp_Object start, Lisp_Object end)$/;"	v
start	process.c	/^  (Lisp_Object process, Lisp_Object start, Lisp_Object end)$/;"	v
start	ralloc.c	/^  void *start;$/;"	m	struct:heap	file:	access:public
start	regex.h	/^  regoff_t *start;$/;"	m	struct:re_registers	access:public
start	syntax.h	/^  ptrdiff_t start;			\/* Where to stop.  *\/$/;"	m	struct:gl_state_s	access:public
start	textprop.c	/^  (Lisp_Object start, Lisp_Object end, Lisp_Object face,$/;"	v
start	textprop.c	/^  (Lisp_Object start, Lisp_Object end, Lisp_Object list_of_properties, Lisp_Object object)$/;"	v
start	textprop.c	/^  (Lisp_Object start, Lisp_Object end, Lisp_Object properties, Lisp_Object object)$/;"	v
start	textprop.c	/^  (Lisp_Object start, Lisp_Object end, Lisp_Object properties,$/;"	v
start	textprop.c	/^  (Lisp_Object start, Lisp_Object end, Lisp_Object property, Lisp_Object value, Lisp_Object object)$/;"	v
start	textprop.c	/^  (Lisp_Object start, Lisp_Object end, Lisp_Object property,$/;"	v
start	w32term.h	/^  int start, end;$/;"	m	struct:scroll_bar	access:public
start	window.c	/^  Lisp_Object window, buffer, start, pointm, old_pointm;$/;"	m	struct:saved_window	file:	access:public
start	window.h	/^    Lisp_Object start;$/;"	m	struct:window	access:public
start	xml.c	/^  (Lisp_Object start, Lisp_Object end, Lisp_Object base_url, Lisp_Object discard_comments)$/;"	v
start	xterm.h	/^  int start, end;$/;"	m	struct:scroll_bar	access:public
start1	editfns.c	/^  (Lisp_Object buffer1, Lisp_Object start1, Lisp_Object end1, Lisp_Object buffer2, Lisp_Object start2, Lisp_Object end2)$/;"	v
start1	fns.c	/^  (Lisp_Object str1, Lisp_Object start1, Lisp_Object end1, Lisp_Object str2,$/;"	v
start2	editfns.c	/^  (Lisp_Object buffer1, Lisp_Object start1, Lisp_Object end1, Lisp_Object buffer2, Lisp_Object start2, Lisp_Object end2)$/;"	v
start2	fns.c	/^   Lisp_Object start2, Lisp_Object end2, Lisp_Object ignore_case)$/;"	v
startr1	editfns.c	/^  (Lisp_Object startr1, Lisp_Object endr1, Lisp_Object startr2, Lisp_Object endr2, Lisp_Object leave_markers)$/;"	v
startr2	editfns.c	/^  (Lisp_Object startr1, Lisp_Object endr1, Lisp_Object startr2, Lisp_Object endr2, Lisp_Object leave_markers)$/;"	v
starts_in_middle_of_char_p	dispextern.h	/^  bool_bf starts_in_middle_of_char_p : 1;$/;"	m	struct:glyph_row	access:public
starts_in_middle_of_char_p	dispextern.h	/^  bool_bf starts_in_middle_of_char_p : 1;$/;"	m	struct:it	access:public
startup_dir	w32.c	/^static char startup_dir[MAX_UTF8_PATH];$/;"	v	file:
start_atimer	atimer.c	/^start_atimer (enum atimer_type type, struct timespec timestamp,$/;"	f	signature:(enum atimer_type type, struct timespec timestamp, atimer_callback fn, void *client_data)
start_atimer	atimer.h	/^struct atimer *start_atimer (enum atimer_type, struct timespec,$/;"	p	signature:(enum atimer_type, struct timespec, atimer_callback, void *)
start_at_line_beg	window.c	/^  Lisp_Object start_at_line_beg;$/;"	m	struct:saved_window	file:	access:public
start_at_line_beg	window.h	/^    bool_bf start_at_line_beg : 1;$/;"	m	struct:window	access:public
start_display	dispextern.h	/^void start_display (struct it *, struct window *, struct text_pos);$/;"	p	signature:(struct it *, struct window *, struct text_pos)
start_display	xdisp.c	/^start_display (struct it *it, struct window *w, struct text_pos pos)$/;"	f	signature:(struct it *it, struct window *w, struct text_pos pos)
start_for_frame	font.h	/^  int (*start_for_frame) (struct frame *f);$/;"	m	struct:font_driver	access:public
start_hourglass	dispextern.h	/^extern void start_hourglass (void);$/;"	p	signature:(void)
start_hourglass	xdisp.c	/^start_hourglass (void)$/;"	f	signature:(void)
start_memory	regex.c	/^  start_memory,$/;"	e	enum:__anon144	file:
start_of_box_run_p	dispextern.h	/^  bool_bf start_of_box_run_p : 1;$/;"	m	struct:it	access:public
start_polling	keyboard.c	/^start_polling (void)$/;"	f	signature:(void)
start_polling	keyboard.h	/^extern void start_polling (void);$/;"	p	signature:(void)
start_process_unwind	process.c	/^start_process_unwind (Lisp_Object proc)$/;"	f	file:	signature:(Lisp_Object proc)
start_process_unwind	process.c	/^static void start_process_unwind (Lisp_Object);$/;"	p	file:
start_timer_thread	w32proc.c	/^start_timer_thread (int which)$/;"	f	file:	signature:(int which)
start_watching	w32notify.c	/^start_watching (const char *file, HANDLE hdir, BOOL subdirs, DWORD flags)$/;"	f	file:	signature:(const char *file, HANDLE hdir, BOOL subdirs, DWORD flags)
stat	w32.c	/^stat (const char * path, struct stat * buf)$/;"	f	signature:(const char * path, struct stat * buf)
state	coding.h	/^  enum composition_state state;$/;"	m	struct:composition_status	typeref:enum:composition_status::composition_state	access:public
state_protected_p	gmalloc.c	/^static int state_protected_p;$/;"	v	file:
StaticGravity	nsgui.h	174;"	d
StaticGravity	w32gui.h	92;"	d
staticidx	alloc.c	/^static int staticidx;$/;"	v	file:
staticpro	alloc.c	/^staticpro (Lisp_Object *varaddress)$/;"	f	signature:(Lisp_Object *varaddress)
staticpro	lisp.h	/^void staticpro (Lisp_Object *);$/;"	p	signature:(Lisp_Object *)
staticvec	alloc.c	/^static Lisp_Object *staticvec[NSTATICS] = {&Vpurify_flag};$/;"	v	file:
STATIC_HEAP_SIZE	sheap.h	/^enum { STATIC_HEAP_SIZE = sizeof (Lisp_Object) << 22 };$/;"	e	enum:__anon153
status	ccl.c	/^  (Lisp_Object ccl_prog, Lisp_Object status, Lisp_Object str, Lisp_Object contin, Lisp_Object unibyte_p)$/;"	v
status	ccl.h	/^  int status;			\/* Exit status of the CCL program.  *\/$/;"	m	struct:ccl_program	access:public
status	process.h	/^    Lisp_Object status;$/;"	m	struct:Lisp_Process	access:public
status	w32.h	/^  volatile int        status;$/;"	m	struct:_child_process	access:public
status	w32font.h	/^  unsigned char status;$/;"	m	struct:w32_metric_cache	access:public
status	xfns.c	/^    unsigned long status;$/;"	m	struct:__anon39	file:	access:public
STATUS_CONNECT_FAILED	w32.h	/^  STATUS_CONNECT_FAILED$/;"	e	enum:__anon90
status_convert	process.c	/^static Lisp_Object status_convert (int);$/;"	p	file:	signature:(int)
status_convert	process.c	/^status_convert (int w)$/;"	f	file:	signature:(int w)
status_message	process.c	/^status_message (struct Lisp_Process *p)$/;"	f	file:	signature:(struct Lisp_Process *p)
status_notify	process.c	/^static int status_notify (struct Lisp_Process *, struct Lisp_Process *);$/;"	p	file:	signature:(struct Lisp_Process *, struct Lisp_Process *)
status_notify	process.c	/^status_notify (struct Lisp_Process *deleting_process,$/;"	f	file:	signature:(struct Lisp_Process *deleting_process, struct Lisp_Process *wait_proc)
STATUS_READ_ACKNOWLEDGED	w32.h	/^  STATUS_READ_ACKNOWLEDGED,$/;"	e	enum:__anon90
STATUS_READ_ERROR	w32.h	/^  STATUS_READ_ERROR = -1,$/;"	e	enum:__anon90
STATUS_READ_FAILED	w32.h	/^  STATUS_READ_FAILED,$/;"	e	enum:__anon90
STATUS_READ_IN_PROGRESS	w32.h	/^  STATUS_READ_IN_PROGRESS,$/;"	e	enum:__anon90
STATUS_READ_READY	w32.h	/^  STATUS_READ_READY,$/;"	e	enum:__anon90
STATUS_READ_SUCCEEDED	w32.h	/^  STATUS_READ_SUCCEEDED,$/;"	e	enum:__anon90
stat_gname	dired.c	/^stat_gname (struct stat *st)$/;"	f	file:	signature:(struct stat *st)
stat_uname	dired.c	/^stat_uname (struct stat *st)$/;"	f	file:	signature:(struct stat *st)
stat_worker	w32.c	/^stat_worker (const char * path, struct stat * buf, int follow_symlinks)$/;"	f	file:	signature:(const char * path, struct stat * buf, int follow_symlinks)
STDC_HEADERS	config.h	1543;"	d
stderrproc	process.h	/^    Lisp_Object stderrproc;$/;"	m	struct:Lisp_Process	access:public
STDERR_FILENO	sysdep.c	63;"	d	file:
stipple	dispextern.h	/^  ptrdiff_t stipple;$/;"	m	struct:face	access:public
stippled_p	dispextern.h	/^  bool_bf stippled_p : 1;$/;"	m	struct:glyph_string	access:public
stop	syntax.h	/^  ptrdiff_t stop;			\/* Where to stop.  *\/$/;"	m	struct:gl_state_s	access:public
stopbefore	syntax.c	/^   Lisp_Object stopbefore, Lisp_Object oldstate, Lisp_Object commentstop)$/;"	v
stopped_atimers	atimer.c	/^static struct atimer *stopped_atimers;$/;"	v	typeref:struct:atimer	file:
stop_charpos	dispextern.h	/^    ptrdiff_t stop_charpos;$/;"	m	struct:it::iterator_stack_entry	access:public
stop_charpos	dispextern.h	/^  ptrdiff_t stop_charpos;$/;"	m	struct:it	access:public
stop_memory	regex.c	/^  stop_memory,$/;"	e	enum:__anon144	file:
stop_other_atimers	atimer.c	/^stop_other_atimers (struct atimer *t)$/;"	f	signature:(struct atimer *t)
stop_other_atimers	atimer.h	/^void stop_other_atimers (struct atimer *);$/;"	p	signature:(struct atimer *)
stop_polling	keyboard.c	/^stop_polling (void)$/;"	f	signature:(void)
STOP_POLLING	keyboard.c	2120;"	d	file:
stop_polling	keyboard.h	/^extern void stop_polling (void);$/;"	p	signature:(void)
STOP_POLLING	xdisp.c	13696;"	d	file:
stop_pos	dispextern.h	/^  ptrdiff_t stop_pos;$/;"	m	struct:composition_it	access:public
stop_timer_thread	w32proc.c	/^stop_timer_thread (int which)$/;"	f	file:	signature:(int which)
STORE_BRACKET_CHARPOS	bidi.c	2511;"	d	file:
STORE_BRACKET_CHARPOS	bidi.c	2514;"	d	file:
STORE_CHARACTER_AND_INCR	regex.c	733;"	d	file:
STORE_COMPOSITION_CHAR	coding.c	3464;"	d	file:
STORE_COMPOSITION_RULE	coding.c	3453;"	d	file:
store_config_changed_event	xsettings.c	/^store_config_changed_event (Lisp_Object arg, Lisp_Object display_name)$/;"	f	file:	signature:(Lisp_Object arg, Lisp_Object display_name)
store_font_name_changed	xsettings.c	/^store_font_name_changed (const char *newfont)$/;"	f	file:	signature:(const char *newfont)
store_frame_param	frame.c	/^store_frame_param (struct frame *f, Lisp_Object prop, Lisp_Object val)$/;"	f	signature:(struct frame *f, Lisp_Object prop, Lisp_Object val)
store_frame_param	lisp.h	/^extern void store_frame_param (struct frame *, Lisp_Object, Lisp_Object);$/;"	p	signature:(struct frame *, Lisp_Object, Lisp_Object)
store_function_docstring	doc.c	/^store_function_docstring (Lisp_Object obj, EMACS_INT offset)$/;"	f	file:	signature:(Lisp_Object obj, EMACS_INT offset)
store_in_alist	frame.c	/^store_in_alist (Lisp_Object *alistptr, Lisp_Object prop, Lisp_Object val)$/;"	f	signature:(Lisp_Object *alistptr, Lisp_Object prop, Lisp_Object val)
store_in_alist	lisp.h	/^extern void store_in_alist (Lisp_Object *, Lisp_Object, Lisp_Object);$/;"	p	signature:(Lisp_Object *, Lisp_Object, Lisp_Object)
store_in_keymap	keymap.c	/^static Lisp_Object store_in_keymap (Lisp_Object, Lisp_Object, Lisp_Object);$/;"	p	file:
store_in_keymap	keymap.c	/^store_in_keymap (Lisp_Object keymap, register Lisp_Object idx, Lisp_Object def)$/;"	f	file:	signature:(Lisp_Object keymap, register Lisp_Object idx, Lisp_Object def)
STORE_JUMP	regex.c	1631;"	d	file:
STORE_JUMP2	regex.c	1635;"	d	file:
store_kbd_macro_char	macros.c	/^store_kbd_macro_char (Lisp_Object c)$/;"	f	signature:(Lisp_Object c)
store_kbd_macro_char	macros.h	/^extern void store_kbd_macro_char (Lisp_Object);$/;"	p	signature:(Lisp_Object)
STORE_KEYSYM_FOR_DEBUG	xterm.c	7447;"	d	file:
STORE_KEYSYM_FOR_DEBUG	xterm.c	7454;"	d	file:
store_mode_line_noprop	xdisp.c	/^store_mode_line_noprop (const char *string, int field_width, int precision)$/;"	f	file:	signature:(const char *string, int field_width, int precision)
store_mode_line_noprop_char	xdisp.c	/^store_mode_line_noprop_char (char c)$/;"	f	file:	signature:(char c)
store_mode_line_string	xdisp.c	/^static int store_mode_line_string (const char *, Lisp_Object, bool, int, int,$/;"	p	file:	signature:(const char *, Lisp_Object, bool, int, int, Lisp_Object)
store_mode_line_string	xdisp.c	/^store_mode_line_string (const char *string, Lisp_Object lisp_string,$/;"	f	file:	signature:(const char *string, Lisp_Object lisp_string, bool copy_string, int field_width, int precision, Lisp_Object props)
store_monospaced_changed	xsettings.c	/^store_monospaced_changed (const char *newfont)$/;"	f	file:	signature:(const char *newfont)
STORE_NATIVE_RECT	nsgui.h	154;"	d
STORE_NATIVE_RECT	w32gui.h	134;"	d
STORE_NATIVE_RECT	xterm.h	1278;"	d
STORE_NUMBER	regex.c	686;"	d	file:
STORE_NUMBER_AND_INCR	regex.c	696;"	d	file:
store_op1	regex.c	/^static void store_op1 (re_opcode_t op, unsigned char *loc, int arg);$/;"	p	file:	signature:(re_opcode_t op, unsigned char *loc, int arg)
store_op1	regex.c	/^store_op1 (re_opcode_t op, unsigned char *loc, int arg)$/;"	f	file:	signature:(re_opcode_t op, unsigned char *loc, int arg)
store_op2	regex.c	/^static void store_op2 (re_opcode_t op, unsigned char *loc, int arg1, int arg2);$/;"	p	file:	signature:(re_opcode_t op, unsigned char *loc, int arg1, int arg2)
store_op2	regex.c	/^store_op2 (re_opcode_t op, unsigned char *loc, int arg1, int arg2)$/;"	f	file:	signature:(re_opcode_t op, unsigned char *loc, int arg1, int arg2)
store_symval_forwarding	data.c	/^store_symval_forwarding (union Lisp_Fwd *valcontents, register Lisp_Object newval, struct buffer *buf)$/;"	f	file:	signature:(union Lisp_Fwd *valcontents, register Lisp_Object newval, struct buffer *buf)
store_terminal_param	terminal.c	/^store_terminal_param (struct terminal *t, Lisp_Object parameter, Lisp_Object value)$/;"	f	file:	signature:(struct terminal *t, Lisp_Object parameter, Lisp_Object value)
store_tool_bar_style_changed	xsettings.c	/^store_tool_bar_style_changed (const char *newstyle,$/;"	f	file:	signature:(const char *newstyle, struct x_display_info *dpyinfo)
store_user_signal_events	keyboard.c	/^static void store_user_signal_events (void);$/;"	p	file:	signature:(void)
store_user_signal_events	keyboard.c	/^store_user_signal_events (void)$/;"	f	file:	signature:(void)
STORE_XCHAR2B	nsgui.h	67;"	d
STORE_XCHAR2B	w32gui.h	58;"	d
STORE_XCHAR2B	xterm.h	1269;"	d
store_xwidget_event_string	xwidget.c	/^store_xwidget_event_string (struct xwidget *xw, const char *eventname,$/;"	f	file:	signature:(struct xwidget *xw, const char *eventname, const char *eventstr)
store_xwidget_js_callback_event	xwidget.c	/^store_xwidget_js_callback_event (struct xwidget *xw,$/;"	f	file:	signature:(struct xwidget *xw, Lisp_Object proc, Lisp_Object argument)
str	ccl.c	/^  (Lisp_Object ccl_prog, Lisp_Object status, Lisp_Object str, Lisp_Object contin, Lisp_Object unibyte_p)$/;"	v
str	charset.c	/^  (Lisp_Object str, Lisp_Object table)$/;"	v
str1	fns.c	/^  (Lisp_Object str1, Lisp_Object start1, Lisp_Object end1, Lisp_Object str2,$/;"	v
str2	fns.c	/^  (Lisp_Object str1, Lisp_Object start1, Lisp_Object end1, Lisp_Object str2,$/;"	v
str2num	editfns.c	/^str2num (char *str, char **str_end)$/;"	f	file:	signature:(char *str, char **str_end)
STRAIGHT_QUOTING_STYLE	lisp.h	/^    STRAIGHT_QUOTING_STYLE$/;"	e	enum:text_quoting_style
stream	decompress.c	/^  z_stream *stream;$/;"	m	struct:decompress_unwind_data	file:	access:public
stream	fileio.c	/^  (Lisp_Object stream, Lisp_Object mode)$/;"	v
stream	fileio.c	/^  FILE *stream;$/;"	m	struct:auto_save_unwind	file:	access:public
stream	lread.c	/^  FILE *stream;$/;"	m	struct:infile	file:	access:public
strerror	w32.c	69;"	d	file:
stretch	dispextern.h	/^      } stretch;$/;"	m	union:it::iterator_stack_entry::__anon117	typeref:struct:it::iterator_stack_entry::__anon117::__anon119	access:public
stretch	dispextern.h	/^    stretch;$/;"	m	union:glyph::__anon110	typeref:struct:glyph::__anon110::__anon112	access:public
STRETCH_GLYPH	dispextern.h	/^  STRETCH_GLYPH,$/;"	e	enum:glyph_type
strike_through_color	dispextern.h	/^  unsigned long strike_through_color;$/;"	m	struct:face	access:public
strike_through_color_defaulted_p	dispextern.h	/^  bool_bf strike_through_color_defaulted_p : 1;$/;"	m	struct:face	access:public
strike_through_p	dispextern.h	/^  bool_bf strike_through_p : 1;$/;"	m	struct:face	access:public
string	alloc.c	/^    struct Lisp_String *string;$/;"	m	struct:__anon6::__anon7	typeref:struct:__anon6::__anon7::Lisp_String	file:	access:public
string	alloc.c	/^  struct Lisp_String *string;$/;"	m	struct:sdata	typeref:struct:sdata::Lisp_String	file:	access:public
string	alloc.c	/^  struct Lisp_String *string;$/;"	m	union:__anon6	typeref:struct:__anon6::Lisp_String	file:	access:public
string	buffer.c	/^  Lisp_Object string, string2;$/;"	m	struct:sortstr	file:	access:public
string	coding.c	/^  (Lisp_Object string, Lisp_Object coding_system, Lisp_Object nocopy, Lisp_Object buffer)$/;"	v
string	coding.c	/^  (Lisp_Object string, Lisp_Object highest)$/;"	v
string	composite.c	/^  (Lisp_Object pos, Lisp_Object limit, Lisp_Object string, Lisp_Object detail_p)$/;"	v
string	composite.c	/^  (Lisp_Object string, Lisp_Object start, Lisp_Object end,$/;"	v
string	data.c	/^  (register Lisp_Object string, Lisp_Object base)$/;"	v
string	dispextern.h	/^    Lisp_Object string;$/;"	m	struct:it::iterator_stack_entry	access:public
string	dispextern.h	/^  Lisp_Object string;$/;"	m	struct:it	access:public
string	dispextern.h	/^  struct bidi_string_data string;	\/* string to reorder *\/$/;"	m	struct:bidi_it	typeref:struct:bidi_it::bidi_string_data	access:public
string	dispnew.c	/^  (Lisp_Object string, Lisp_Object terminal)$/;"	v
string	fns.c	/^  (Lisp_Object string, Lisp_Object from, Lisp_Object to)$/;"	v
string	fns.c	/^  (Lisp_Object string, register Lisp_Object from, Lisp_Object to)$/;"	v
string	lread.c	/^  (Lisp_Object string, Lisp_Object obarray)$/;"	v
string	lread.c	/^  (Lisp_Object string, Lisp_Object start, Lisp_Object end)$/;"	v
string	minibuf.c	/^  (Lisp_Object string, Lisp_Object collection, Lisp_Object predicate)$/;"	v
string	minibuf.c	/^  (Lisp_Object string, Lisp_Object collection, Lisp_Object predicate, Lisp_Object hide_spaces)$/;"	v
string	minibuf.c	/^  (Lisp_Object string, Lisp_Object predicate, Lisp_Object flag)$/;"	v
string	search.c	/^  (Lisp_Object newtext, Lisp_Object fixedcase, Lisp_Object literal, Lisp_Object string, Lisp_Object subexp)$/;"	v
string	search.c	/^  (Lisp_Object regexp, Lisp_Object string, Lisp_Object start)$/;"	v
string	search.c	/^  (Lisp_Object string, Lisp_Object bound, Lisp_Object noerror, Lisp_Object count)$/;"	v
string	syntax.c	/^  (Lisp_Object string, Lisp_Object lim)$/;"	v
string	w32fns.c	/^  (Lisp_Object string, Lisp_Object frame, Lisp_Object parms, Lisp_Object timeout, Lisp_Object dx, Lisp_Object dy)$/;"	v
string	w32select.c	/^  (Lisp_Object string, Lisp_Object ignored)$/;"	v
string	xdisp.c	/^  Lisp_Object string;$/;"	m	struct:overlay_entry	file:	access:public
string	xfns.c	/^  (Lisp_Object string, Lisp_Object frame, Lisp_Object parms, Lisp_Object timeout, Lisp_Object dx, Lisp_Object dy)$/;"	v
string	xterm.c	/^  char string[X_ERROR_MESSAGE_SIZE];$/;"	m	struct:x_error_message_stack	file:	access:public
string1	fns.c	/^  (Lisp_Object string1, Lisp_Object string2)$/;"	v
string2	buffer.c	/^  Lisp_Object string, string2;$/;"	m	struct:sortstr	file:	access:public
STRINGP	lisp.h	/^STRINGP (Lisp_Object x)$/;"	f	signature:(Lisp_Object x)
strings	alloc.c	/^  struct Lisp_String strings[STRING_BLOCK_SIZE];$/;"	m	struct:string_block	typeref:struct:string_block::Lisp_String	file:	access:public
strings_consed	globals.h	875;"	d
string_block	alloc.c	/^struct string_block$/;"	s	file:
string_block::next	alloc.c	/^  struct string_block *next;$/;"	m	struct:string_block	typeref:struct:string_block::string_block	file:	access:public
string_block::strings	alloc.c	/^  struct Lisp_String strings[STRING_BLOCK_SIZE];$/;"	m	struct:string_block	typeref:struct:string_block::Lisp_String	file:	access:public
string_blocks	alloc.c	/^static struct string_block *string_blocks;$/;"	v	typeref:struct:string_block	file:
STRING_BLOCK_SIZE	alloc.c	1686;"	d	file:
string_buffer_position	xdisp.c	/^string_buffer_position (Lisp_Object string, ptrdiff_t around_charpos)$/;"	f	file:	signature:(Lisp_Object string, ptrdiff_t around_charpos)
string_buffer_position_lim	xdisp.c	/^string_buffer_position_lim (Lisp_Object string,$/;"	f	file:	signature:(Lisp_Object string, ptrdiff_t from, ptrdiff_t to, bool back_p)
string_bytes	alloc.c	/^string_bytes (struct Lisp_String *s)$/;"	f	signature:(struct Lisp_String *s)
string_bytes	lisp.h	/^extern ptrdiff_t string_bytes (struct Lisp_String *);$/;"	p	signature:(struct Lisp_String *)
STRING_BYTES	lisp.h	/^STRING_BYTES (struct Lisp_String *s)$/;"	f	signature:(struct Lisp_String *s)
STRING_BYTES_BOUND	lisp.h	1268;"	d
STRING_BYTES_MAX	alloc.c	/^static ptrdiff_t const STRING_BYTES_MAX =$/;"	v	file:
string_byte_to_char	fns.c	/^string_byte_to_char (Lisp_Object string, ptrdiff_t byte_index)$/;"	f	signature:(Lisp_Object string, ptrdiff_t byte_index)
string_byte_to_char	lisp.h	/^extern ptrdiff_t string_byte_to_char (Lisp_Object, ptrdiff_t);$/;"	p	signature:(Lisp_Object, ptrdiff_t)
string_char	character.h	/^extern int string_char (const unsigned char *,$/;"	p	signature:(const unsigned char *, const unsigned char **, int *)
STRING_CHAR	character.h	313;"	d
STRING_CHAR	regex.c	269;"	d	file:
string_chars_consed	globals.h	873;"	d
STRING_CHAR_ADVANCE	character.h	348;"	d
STRING_CHAR_ADVANCE_NO_UNIFY	coding.c	924;"	d	file:
STRING_CHAR_AND_LENGTH	character.h	330;"	d
STRING_CHAR_AND_LENGTH	regex.c	272;"	d	file:
string_char_and_length	xdisp.c	/^string_char_and_length (const unsigned char *str, int *len)$/;"	f	file:	signature:(const unsigned char *str, int *len)
string_char_byte_cache_bytepos	fns.c	/^static ptrdiff_t string_char_byte_cache_bytepos;$/;"	v	file:
string_char_byte_cache_charpos	fns.c	/^static ptrdiff_t string_char_byte_cache_charpos;$/;"	v	file:
string_char_byte_cache_string	fns.c	/^static Lisp_Object string_char_byte_cache_string;$/;"	v	file:
string_char_to_byte	fns.c	/^string_char_to_byte (Lisp_Object string, ptrdiff_t char_index)$/;"	f	signature:(Lisp_Object string, ptrdiff_t char_index)
string_char_to_byte	lisp.h	/^extern ptrdiff_t string_char_to_byte (Lisp_Object, ptrdiff_t);$/;"	p	signature:(Lisp_Object, ptrdiff_t)
string_cost	dispextern.h	/^extern int string_cost (const char *);$/;"	p	signature:(const char *)
string_cost	term.c	/^string_cost (const char *str)$/;"	f	signature:(const char *str)
string_cost_one_line	term.c	/^string_cost_one_line (const char *str)$/;"	f	file:	signature:(const char *str)
string_count_byte8	character.c	/^string_count_byte8 (Lisp_Object string)$/;"	f	file:	signature:(Lisp_Object string)
string_default	sound.c	/^string_default (Lisp_Object s, char const *default_value)$/;"	f	file:	signature:(Lisp_Object s, char const *default_value)
string_escape_byte8	character.c	/^string_escape_byte8 (Lisp_Object string)$/;"	f	signature:(Lisp_Object string)
string_escape_byte8	character.h	/^extern Lisp_Object string_escape_byte8 (Lisp_Object);$/;"	p	signature:(Lisp_Object)
string_free_list	alloc.c	/^static struct Lisp_String *string_free_list;$/;"	v	typeref:struct:Lisp_String	file:
string_from_display_prop_p	dispextern.h	/^    bool_bf string_from_display_prop_p : 1;$/;"	m	struct:it::iterator_stack_entry	access:public
string_from_display_prop_p	dispextern.h	/^  bool_bf string_from_display_prop_p : 1;$/;"	m	struct:it	access:public
string_from_display_spec	xdisp.c	/^string_from_display_spec (Lisp_Object spec)$/;"	f	file:	signature:(Lisp_Object spec)
string_from_prefix_prop_p	dispextern.h	/^    bool_bf string_from_prefix_prop_p : 1;$/;"	m	struct:it::iterator_stack_entry	access:public
string_from_prefix_prop_p	dispextern.h	/^  bool_bf string_from_prefix_prop_p : 1;$/;"	m	struct:it	access:public
string_index	macfont.h	/^  CFIndex string_index;$/;"	m	struct:mac_glyph_layout	access:public
string_intervals	lisp.h	/^string_intervals (Lisp_Object s)$/;"	f	signature:(Lisp_Object s)
string_make_multibyte	fns.c	/^string_make_multibyte (Lisp_Object string)$/;"	f	file:	signature:(Lisp_Object string)
string_make_unibyte	fns.c	/^string_make_unibyte (Lisp_Object string)$/;"	f	signature:(Lisp_Object string)
string_make_unibyte	lisp.h	/^extern Lisp_Object string_make_unibyte (Lisp_Object);$/;"	p	signature:(Lisp_Object)
STRING_MARKED_P	alloc.c	212;"	d	file:
string_match_1	search.c	/^string_match_1 (Lisp_Object regexp, Lisp_Object string, Lisp_Object start,$/;"	f	file:	signature:(Lisp_Object regexp, Lisp_Object string, Lisp_Object start, bool posix)
STRING_MULTIBYTE	lisp.h	/^STRING_MULTIBYTE (Lisp_Object str)$/;"	f	signature:(Lisp_Object str)
string_nchars	dispextern.h	/^    int string_nchars;$/;"	m	struct:it::iterator_stack_entry	access:public
string_nchars	dispextern.h	/^  ptrdiff_t string_nchars;$/;"	m	struct:it	access:public
string_overflow	alloc.c	/^string_overflow (void)$/;"	f	signature:(void)
string_overflow	lisp.h	/^extern _Noreturn void string_overflow (void);$/;"	p	signature:(void)
string_overlays	dispextern.h	/^  Lisp_Object string_overlays[OVERLAY_STRING_CHUNK_SIZE];$/;"	m	struct:it	access:public
string_overrun_cookie	alloc.c	/^static char const string_overrun_cookie[GC_STRING_OVERRUN_COOKIE_SIZE] =$/;"	v	file:
string_pos	dispextern.h	/^  struct text_pos string_pos;$/;"	m	struct:display_pos	typeref:struct:display_pos::text_pos	access:public
string_pos	xdisp.c	/^string_pos (ptrdiff_t charpos, Lisp_Object string)$/;"	f	file:	signature:(ptrdiff_t charpos, Lisp_Object string)
string_pos_nchars_ahead	xdisp.c	/^string_pos_nchars_ahead (struct text_pos pos, Lisp_Object string, ptrdiff_t nchars)$/;"	f	file:	signature:(struct text_pos pos, Lisp_Object string, ptrdiff_t nchars)
STRING_SET_CHARS	lisp.h	/^STRING_SET_CHARS (Lisp_Object string, ptrdiff_t newsize)$/;"	f	signature:(Lisp_Object string, ptrdiff_t newsize)
STRING_SET_MULTIBYTE	lisp.h	1282;"	d
STRING_SET_UNIBYTE	lisp.h	1272;"	d
string_to_multibyte	fns.c	/^string_to_multibyte (Lisp_Object string)$/;"	f	signature:(Lisp_Object string)
string_to_multibyte	lisp.h	/^extern Lisp_Object string_to_multibyte (Lisp_Object);$/;"	p	signature:(Lisp_Object)
string_to_number	lisp.h	/^extern Lisp_Object string_to_number (char const *, int, bool);$/;"	p	signature:(char const *, int, bool)
string_to_number	lread.c	/^string_to_number (char const *string, int base, bool ignore_trailing)$/;"	f	signature:(char const *string, int base, bool ignore_trailing)
string_to_object	minibuf.c	/^string_to_object (Lisp_Object val, Lisp_Object defalt)$/;"	f	file:	signature:(Lisp_Object val, Lisp_Object defalt)
string_xstring_p	charset.c	/^string_xstring_p (Lisp_Object string)$/;"	f	signature:(Lisp_Object string)
string_xstring_p	charset.h	/^extern int string_xstring_p (Lisp_Object);$/;"	p	signature:(Lisp_Object)
strnicmp	conf_post.h	160;"	d
STRONG	bidi.c	/^  STRONG,$/;"	e	enum:__anon92	file:
STRONG_AL	dispextern.h	/^  STRONG_AL,	\/* arabic right-to-left letter *\/$/;"	e	enum:__anon114
STRONG_L	dispextern.h	/^  STRONG_L,	\/* strong left-to-right *\/$/;"	e	enum:__anon114
STRONG_R	dispextern.h	/^  STRONG_R,	\/* strong right-to-left *\/$/;"	e	enum:__anon114
strout	print.c	/^strout (const char *ptr, ptrdiff_t size, ptrdiff_t size_byte,$/;"	f	file:	signature:(const char *ptr, ptrdiff_t size, ptrdiff_t size_byte, Lisp_Object printcharfun)
strsignal	syssignal.h	77;"	d
strwidth	character.c	/^strwidth (const char *str, ptrdiff_t len)$/;"	f	signature:(const char *str, ptrdiff_t len)
strwidth	character.h	/^extern ptrdiff_t strwidth (const char *, ptrdiff_t);$/;"	p	signature:(const char *, ptrdiff_t)
str_as_multibyte	character.h	/^extern ptrdiff_t str_as_multibyte (unsigned char *, ptrdiff_t, ptrdiff_t,$/;"	p	signature:(unsigned char *, ptrdiff_t, ptrdiff_t, ptrdiff_t *)
str_as_unibyte	character.h	/^extern ptrdiff_t str_as_unibyte (unsigned char *, ptrdiff_t);$/;"	p	signature:(unsigned char *, ptrdiff_t)
str_collate	lisp.h	/^extern int str_collate (Lisp_Object, Lisp_Object, Lisp_Object, Lisp_Object);$/;"	p	signature:(Lisp_Object, Lisp_Object, Lisp_Object, Lisp_Object)
str_collate	sysdep.c	/^str_collate (Lisp_Object s1, Lisp_Object s2,$/;"	f	signature:(Lisp_Object s1, Lisp_Object s2, Lisp_Object locale, Lisp_Object ignore_case)
str_to_multibyte	character.h	/^extern ptrdiff_t str_to_multibyte (unsigned char *, ptrdiff_t, ptrdiff_t);$/;"	p	signature:(unsigned char *, ptrdiff_t, ptrdiff_t)
str_to_unibyte	character.h	/^extern ptrdiff_t str_to_unibyte (const unsigned char *, unsigned char *,$/;"	p	signature:(const unsigned char *, unsigned char *, ptrdiff_t)
stuff_buffered_input	keyboard.c	/^stuff_buffered_input (Lisp_Object stuffstring)$/;"	f	signature:(Lisp_Object stuffstring)
stuff_buffered_input	keyboard.h	/^extern void stuff_buffered_input (Lisp_Object);$/;"	p	signature:(Lisp_Object)
stuff_char	lisp.h	/^extern void stuff_char (char c);$/;"	p	signature:(char c)
stuff_char	sysdep.c	/^stuff_char (char c)$/;"	f	signature:(char c)
style	gtkutil.c	/^  Lisp_Object style;$/;"	m	struct:xg_frame_tb_info	file:	access:public
styled_format	editfns.c	/^static Lisp_Object styled_format (ptrdiff_t, Lisp_Object *, bool);$/;"	p	file:	signature:(ptrdiff_t, Lisp_Object *, bool)
styled_format	editfns.c	/^styled_format (ptrdiff_t nargs, Lisp_Object *args, bool message)$/;"	f	file:	signature:(ptrdiff_t nargs, Lisp_Object *args, bool message)
style_changed_cb	gtkutil.c	/^style_changed_cb (GObject *go,$/;"	f	file:	signature:(GObject *go, GParamSpec *spec, gpointer user_data)
ST_COMMENT_STYLE	syntax.c	/^    ST_COMMENT_STYLE = 256 + 1,$/;"	e	enum:__anon150	file:
ST_STRING_STYLE	syntax.c	/^    ST_STRING_STYLE = 256 + 2$/;"	e	enum:__anon150	file:
submenu	term.c	/^  struct tty_menu_struct **submenu;$/;"	m	struct:tty_menu_struct	typeref:struct:tty_menu_struct::tty_menu_struct	file:	access:public
SUBPROCESS_STDIN	process.c	/^    SUBPROCESS_STDIN,$/;"	e	enum:__anon48	file:
SUBPROCESS_STDOUT	process.c	/^    SUBPROCESS_STDOUT,$/;"	e	enum:__anon48	file:
subr	lisp.h	/^  emacs_subr subr;$/;"	m	struct:Lisp_Module_Function	access:public
SUBRANGE	w32font.c	2190;"	d	file:
SUBRANGE	w32font.c	2347;"	d	file:
SUBRANGE1_HANGEUL_MASK	w32font.c	1403;"	d	file:
SUBRANGE1_HAN_MASK	w32font.c	1402;"	d	file:
SUBRANGE1_JAPANESE_MASK	w32font.c	1404;"	d	file:
SUBRP	lisp.h	/^SUBRP (Lisp_Object a)$/;"	f	signature:(Lisp_Object a)
subst	lread.c	/^struct subst$/;"	s	file:
subst::completed	lread.c	/^  Lisp_Object completed;$/;"	m	struct:subst	file:	access:public
subst::object	lread.c	/^  Lisp_Object object;$/;"	m	struct:subst	file:	access:public
subst::placeholder	lread.c	/^  Lisp_Object placeholder;$/;"	m	struct:subst	file:	access:public
subst::seen	lread.c	/^  Lisp_Object seen;$/;"	m	struct:subst	file:	access:public
SubstituteNameLength	w32.c	/^            USHORT SubstituteNameLength;$/;"	m	struct:_REPARSE_DATA_BUFFER::__anon66::__anon67	file:	access:public
SubstituteNameLength	w32.c	/^            USHORT SubstituteNameLength;$/;"	m	struct:_REPARSE_DATA_BUFFER::__anon66::__anon68	file:	access:public
SubstituteNameOffset	w32.c	/^            USHORT SubstituteNameOffset;$/;"	m	struct:_REPARSE_DATA_BUFFER::__anon66::__anon67	file:	access:public
SubstituteNameOffset	w32.c	/^            USHORT SubstituteNameOffset;$/;"	m	struct:_REPARSE_DATA_BUFFER::__anon66::__anon68	file:	access:public
substitute_in_interval	lread.c	/^static void substitute_in_interval (INTERVAL, void *);$/;"	p	file:	signature:(INTERVAL, void *)
substitute_in_interval	lread.c	/^substitute_in_interval (INTERVAL interval, void *arg)$/;"	f	file:	signature:(INTERVAL interval, void *arg)
substitute_object_recurse	lread.c	/^static Lisp_Object substitute_object_recurse (struct subst *, Lisp_Object);$/;"	p	file:	signature:(struct subst *, Lisp_Object)
substitute_object_recurse	lread.c	/^substitute_object_recurse (struct subst *subst, Lisp_Object subtree)$/;"	f	file:	signature:(struct subst *subst, Lisp_Object subtree)
substring_both	fns.c	/^substring_both (Lisp_Object string, ptrdiff_t from, ptrdiff_t from_byte,$/;"	f	signature:(Lisp_Object string, ptrdiff_t from, ptrdiff_t from_byte, ptrdiff_t to, ptrdiff_t to_byte)
substring_both	lisp.h	/^extern Lisp_Object substring_both (Lisp_Object, ptrdiff_t, ptrdiff_t,$/;"	p	signature:(Lisp_Object, ptrdiff_t, ptrdiff_t, ptrdiff_t, ptrdiff_t)
subst_char_in_region_unwind	editfns.c	/^subst_char_in_region_unwind (Lisp_Object arg)$/;"	f	file:	signature:(Lisp_Object arg)
subst_char_in_region_unwind_1	editfns.c	/^subst_char_in_region_unwind_1 (Lisp_Object arg)$/;"	f	file:	signature:(Lisp_Object arg)
subtree	w32notify.c	/^  BOOL subtree;		\/* whether to watch subdirectories *\/$/;"	m	struct:notification	file:	access:public
SUB_CHAR_TABLE_OFFSET	lisp.h	/^    SUB_CHAR_TABLE_OFFSET = PSEUDOVECSIZE (struct Lisp_Sub_Char_Table, contents)$/;"	e	enum:char_table_specials
SUB_CHAR_TABLE_P	lisp.h	/^SUB_CHAR_TABLE_P (Lisp_Object a)$/;"	f	signature:(Lisp_Object a)
sub_char_table_ref	chartab.c	/^sub_char_table_ref (Lisp_Object table, int c, bool is_uniprop)$/;"	f	file:	signature:(Lisp_Object table, int c, bool is_uniprop)
sub_char_table_ref_and_range	chartab.c	/^sub_char_table_ref_and_range (Lisp_Object table, int c, int *from, int *to,$/;"	f	file:	signature:(Lisp_Object table, int c, int *from, int *to, Lisp_Object defalt, bool is_uniprop)
sub_char_table_set	chartab.c	/^sub_char_table_set (Lisp_Object table, int c, Lisp_Object val, bool is_uniprop)$/;"	f	file:	signature:(Lisp_Object table, int c, Lisp_Object val, bool is_uniprop)
sub_char_table_set_range	chartab.c	/^sub_char_table_set_range (Lisp_Object table, int from, int to, Lisp_Object val,$/;"	f	file:	signature:(Lisp_Object table, int from, int to, Lisp_Object val, bool is_uniprop)
succeed	regex.c	/^  succeed,$/;"	e	enum:__anon144	file:
succeed_n	regex.c	/^  succeed_n,$/;"	e	enum:__anon144	file:
suffixes	coding.c	/^static const char *const suffixes[] = { "-unix", "-dos", "-mac" };$/;"	v	file:
suffixes	lread.c	/^  (Lisp_Object filename, Lisp_Object path, Lisp_Object suffixes, Lisp_Object predicate)$/;"	v
suffix_p	lread.c	/^suffix_p (Lisp_Object string, const char *suffix)$/;"	f	file:	signature:(Lisp_Object string, const char *suffix)
SUN_AUDIO	sound.c	/^  SUN_AUDIO$/;"	e	enum:sound_type	file:
super_modifier	termhooks.h	/^  super_modifier=  CHAR_SUPER,	\/* Under X, the XK_Super_[LR] keysyms.  *\/$/;"	e	enum:__anon72
super_mod_mask	xterm.h	/^  int alt_mod_mask, super_mod_mask, hyper_mod_mask;$/;"	m	struct:x_display_info	access:public
supplementary_p	charset.h	/^  bool_bf supplementary_p : 1;$/;"	m	struct:charset	access:public
supported_xim_styles	xfns.c	/^static const XIMStyle supported_xim_styles[] =$/;"	v	file:
supports_xdbe	xterm.h	/^  bool supports_xdbe;$/;"	m	struct:x_display_info	access:public
suppress_checking	alloc.c	/^bool suppress_checking;$/;"	v
suppress_echo_on_tty	sysdep.c	/^suppress_echo_on_tty (int fd)$/;"	f	signature:(int fd)
suppress_echo_on_tty	systty.h	/^extern void suppress_echo_on_tty (int);$/;"	p	signature:(int)
suppress_lone	w32fns.c	/^  int suppress_lone; \/* Suppress simulated Windows keydown-keyup for this press? *\/$/;"	m	struct:__anon74	file:	access:public
surrogate	coding.h	/^  int surrogate;$/;"	m	struct:utf_16_spec	access:public
survives_gc_p	alloc.c	/^survives_gc_p (Lisp_Object obj)$/;"	f	signature:(Lisp_Object obj)
survives_gc_p	lisp.h	/^extern bool survives_gc_p (Lisp_Object);$/;"	p	signature:(Lisp_Object)
suspend_auto_hscroll	window.c	/^  Lisp_Object hscroll, min_hscroll, hscroll_whole, suspend_auto_hscroll;$/;"	m	struct:saved_window	file:	access:public
suspend_auto_hscroll	window.h	/^    bool_bf suspend_auto_hscroll : 1;$/;"	m	struct:window	access:public
suspicious_free_history_index	alloc.c	/^static int suspicious_free_history_index;$/;"	v	file:
suspicious_free_record	alloc.c	/^struct suspicious_free_record$/;"	s	file:
suspicious_free_record::backtrace	alloc.c	/^  void *backtrace[128];$/;"	m	struct:suspicious_free_record	file:	access:public
suspicious_free_record::suspicious_object	alloc.c	/^  void *suspicious_object;$/;"	m	struct:suspicious_free_record	file:	access:public
suspicious_object	alloc.c	/^  void *suspicious_object;$/;"	m	struct:suspicious_free_record	file:	access:public
suspicious_objects	alloc.c	/^static void *suspicious_objects[32];$/;"	v	file:
SUSPICIOUS_OBJECT_CHECKING	alloc.c	299;"	d	file:
suspicious_object_index	alloc.c	/^static int suspicious_object_index;$/;"	v	file:
SVG_ALGORITHM	image.c	/^  SVG_ALGORITHM,$/;"	e	enum:svg_keyword_index	file:
SVG_ASCENT	image.c	/^  SVG_ASCENT,$/;"	e	enum:svg_keyword_index	file:
SVG_BACKGROUND	image.c	/^  SVG_BACKGROUND,$/;"	e	enum:svg_keyword_index	file:
SVG_DATA	image.c	/^  SVG_DATA,$/;"	e	enum:svg_keyword_index	file:
SVG_FILE	image.c	/^  SVG_FILE,$/;"	e	enum:svg_keyword_index	file:
svg_format	image.c	/^static const struct image_keyword svg_format[SVG_LAST] =$/;"	v	typeref:struct:image_keyword	file:
SVG_HEURISTIC_MASK	image.c	/^  SVG_HEURISTIC_MASK,$/;"	e	enum:svg_keyword_index	file:
svg_image_p	image.c	/^static bool svg_image_p (Lisp_Object object);$/;"	p	file:	signature:(Lisp_Object object)
svg_image_p	image.c	/^svg_image_p (Lisp_Object object)$/;"	f	file:	signature:(Lisp_Object object)
svg_keyword_index	image.c	/^enum svg_keyword_index$/;"	g	file:
SVG_LAST	image.c	/^  SVG_LAST$/;"	e	enum:svg_keyword_index	file:
svg_load	image.c	/^static bool svg_load (struct frame *f, struct image *img);$/;"	p	file:	signature:(struct frame *f, struct image *img)
svg_load	image.c	/^svg_load (struct frame *f, struct image *img)$/;"	f	file:	signature:(struct frame *f, struct image *img)
svg_load_image	image.c	/^static bool svg_load_image (struct frame *, struct image *,$/;"	p	file:	signature:(struct frame *, struct image *, char *, ptrdiff_t, char *)
svg_load_image	image.c	/^svg_load_image (struct frame *f, struct image *img, char *contents,$/;"	f	file:	signature:(struct frame *f, struct image *img, char *contents, ptrdiff_t size, char *filename)
SVG_MARGIN	image.c	/^  SVG_MARGIN,$/;"	e	enum:svg_keyword_index	file:
SVG_MASK	image.c	/^  SVG_MASK,$/;"	e	enum:svg_keyword_index	file:
SVG_RELIEF	image.c	/^  SVG_RELIEF,$/;"	e	enum:svg_keyword_index	file:
SVG_TYPE	image.c	/^  SVG_TYPE,$/;"	e	enum:svg_keyword_index	file:
svg_type	image.c	/^static struct image_type svg_type =$/;"	v	typeref:struct:image_type	file:
swallow_events	keyboard.c	/^swallow_events (bool do_display)$/;"	f	signature:(bool do_display)
swallow_events	keyboard.h	/^extern void swallow_events (bool);$/;"	p	signature:(bool)
swapfield	buffer.c	2270;"	d	file:
swapfield_	buffer.c	2276;"	d	file:
swap_glyph_pointers	dispnew.c	/^swap_glyph_pointers (struct glyph_row *a, struct glyph_row *b)$/;"	f	file:	signature:(struct glyph_row *a, struct glyph_row *b)
swap_in_global_binding	data.c	/^swap_in_global_binding (struct Lisp_Symbol *symbol)$/;"	f	signature:(struct Lisp_Symbol *symbol)
swap_in_global_binding	lisp.h	/^extern void swap_in_global_binding (struct Lisp_Symbol *);$/;"	p	signature:(struct Lisp_Symbol *)
swap_in_symval_forwarding	data.c	/^static void swap_in_symval_forwarding (struct Lisp_Symbol *,$/;"	p	file:	signature:(struct Lisp_Symbol *, struct Lisp_Buffer_Local_Value *)
swap_in_symval_forwarding	data.c	/^swap_in_symval_forwarding (struct Lisp_Symbol *symbol, struct Lisp_Buffer_Local_Value *blv)$/;"	f	file:	signature:(struct Lisp_Symbol *symbol, struct Lisp_Buffer_Local_Value *blv)
swap_nibble	fringe.c	/^static const unsigned char swap_nibble[16] = {$/;"	v	file:
swap_out_buffer_local_variables	buffer.c	/^static void swap_out_buffer_local_variables (struct buffer *b);$/;"	p	file:	signature:(struct buffer *b)
swap_out_buffer_local_variables	buffer.c	/^swap_out_buffer_local_variables (struct buffer *b)$/;"	f	file:	signature:(struct buffer *b)
sweep_buffers	alloc.c	/^sweep_buffers (void)$/;"	f	file:	signature:(void)
sweep_conses	alloc.c	/^sweep_conses (void)$/;"	f	file:	signature:(void)
sweep_floats	alloc.c	/^sweep_floats (void)$/;"	f	file:	signature:(void)
sweep_intervals	alloc.c	/^sweep_intervals (void)$/;"	f	file:	signature:(void)
sweep_misc	alloc.c	/^sweep_misc (void)$/;"	f	file:	signature:(void)
sweep_strings	alloc.c	/^sweep_strings (void)$/;"	f	file:	signature:(void)
sweep_symbols	alloc.c	/^sweep_symbols (void)$/;"	f	file:	signature:(void)
sweep_vectors	alloc.c	/^sweep_vectors (void)$/;"	f	file:	signature:(void)
sweep_weak_hash_tables	fns.c	/^sweep_weak_hash_tables (void)$/;"	f	signature:(void)
sweep_weak_hash_tables	lisp.h	/^extern void sweep_weak_hash_tables (void);$/;"	p	signature:(void)
sweep_weak_table	fns.c	/^sweep_weak_table (struct Lisp_Hash_Table *h, bool remove_entries_p)$/;"	f	file:	signature:(struct Lisp_Hash_Table *h, bool remove_entries_p)
Swhitespace	regex.c	/^enum syntaxcode { Swhitespace = 0, Sword = 1, Ssymbol = 2 };$/;"	e	enum:syntaxcode	file:
Swhitespace	syntax.h	/^    Swhitespace, \/* for a whitespace character *\/$/;"	e	enum:syntaxcode
Sword	regex.c	/^enum syntaxcode { Swhitespace = 0, Sword = 1, Ssymbol = 2 };$/;"	e	enum:syntaxcode	file:
Sword	syntax.h	/^    Sword,	 \/* for a word constituent *\/$/;"	e	enum:syntaxcode
swparams	sound.c	/^  snd_pcm_sw_params_t *swparams;$/;"	m	struct:alsa_params	file:	access:public
sxhash	fns.c	/^sxhash (Lisp_Object obj, int depth)$/;"	f	signature:(Lisp_Object obj, int depth)
sxhash	lisp.h	/^EMACS_UINT sxhash (Lisp_Object, int);$/;"	p	signature:(Lisp_Object, int)
sxhash_bool_vector	fns.c	/^sxhash_bool_vector (Lisp_Object vec)$/;"	f	file:	signature:(Lisp_Object vec)
sxhash_combine	lisp.h	/^sxhash_combine (EMACS_UINT x, EMACS_UINT y)$/;"	f	signature:(EMACS_UINT x, EMACS_UINT y)
sxhash_float	fns.c	/^sxhash_float (double val)$/;"	f	file:	signature:(double val)
sxhash_list	fns.c	/^sxhash_list (Lisp_Object list, int depth)$/;"	f	file:	signature:(Lisp_Object list, int depth)
SXHASH_MAX_DEPTH	fns.c	3084;"	d	file:
SXHASH_MAX_LEN	fns.c	3089;"	d	file:
SXHASH_REDUCE	lisp.h	/^SXHASH_REDUCE (EMACS_UINT x)$/;"	f	signature:(EMACS_UINT x)
sxhash_string	fns.c	/^sxhash_string (char const *ptr, ptrdiff_t len)$/;"	f	file:	signature:(char const *ptr, ptrdiff_t len)
sxhash_vector	fns.c	/^sxhash_vector (Lisp_Object vec, int depth)$/;"	f	file:	signature:(Lisp_Object vec, int depth)
sym	frame.c	/^  int sym;$/;"	m	struct:frame_parm_table	file:	access:public
symbeg	regex.c	/^  symbeg,       \/* Succeeds if at symbol beginning.  *\/$/;"	e	enum:__anon144	file:
symbol	ccl.c	/^  (Lisp_Object symbol, Lisp_Object map)$/;"	v
symbol	data.c	/^  (Lisp_Object symbol, Lisp_Object value)$/;"	v
symbol	data.c	/^  (Lisp_Object symbol, Lisp_Object watch_function)$/;"	v
symbol	data.c	/^  (register Lisp_Object symbol, Lisp_Object definition)$/;"	v
symbol	data.c	/^  (register Lisp_Object symbol, Lisp_Object definition, Lisp_Object docstring)$/;"	v
symbol	data.c	/^  (register Lisp_Object symbol, Lisp_Object newplist)$/;"	v
symbol	data.c	/^  (register Lisp_Object symbol, Lisp_Object newval)$/;"	v
symbol	doc.c	/^  (Lisp_Object symbol, Lisp_Object prop, Lisp_Object raw)$/;"	v
symbol	eval.c	/^     (Lisp_Object symbol, Lisp_Object value)$/;"	v
symbol	lisp.h	/^      Lisp_Object symbol, old_value, where;$/;"	m	struct:specbinding::__anon33	access:public
symbol	xdisp.c	/^  (Lisp_Object symbol, Lisp_Object newval, Lisp_Object op, Lisp_Object where)$/;"	v
symbol	xfaces.c	/^  (Lisp_Object symbol, Lisp_Object keyword, Lisp_Object frame)$/;"	v
SymbolicLinkReparseBuffer	w32.c	/^        } SymbolicLinkReparseBuffer;$/;"	m	union:_REPARSE_DATA_BUFFER::__anon66	typeref:struct:_REPARSE_DATA_BUFFER::__anon66::__anon67	file:	access:public
SYMBOLIC_LINK_FLAG_DIRECTORY	w32.c	5589;"	d	file:
SYMBOLP	lisp.h	/^(SYMBOLP) (Lisp_Object x)$/;"	f	signature:(Lisp_Object x)
SYMBOLP	lisp.h	365;"	d
symbols	alloc.c	/^  union aligned_Lisp_Symbol symbols[SYMBOL_BLOCK_SIZE];$/;"	m	struct:symbol_block	typeref:union:symbol_block::aligned_Lisp_Symbol	file:	access:public
symbols_consed	globals.h	877;"	d
SYMBOL_ALIAS	lisp.h	/^SYMBOL_ALIAS (struct Lisp_Symbol *sym)$/;"	f	signature:(struct Lisp_Symbol *sym)
symbol_block	alloc.c	/^static struct symbol_block *symbol_block;$/;"	v	typeref:struct:symbol_block	file:
symbol_block	alloc.c	/^struct symbol_block$/;"	s	file:
symbol_block::next	alloc.c	/^  struct symbol_block *next;$/;"	m	struct:symbol_block	typeref:struct:symbol_block::symbol_block	file:	access:public
symbol_block::symbols	alloc.c	/^  union aligned_Lisp_Symbol symbols[SYMBOL_BLOCK_SIZE];$/;"	m	struct:symbol_block	typeref:union:symbol_block::aligned_Lisp_Symbol	file:	access:public
symbol_block_index	alloc.c	/^static int symbol_block_index = SYMBOL_BLOCK_SIZE;$/;"	v	file:
symbol_block_pinned	alloc.c	/^static struct symbol_block *symbol_block_pinned;$/;"	v	typeref:struct:symbol_block	file:
SYMBOL_BLOCK_SIZE	alloc.c	3506;"	d	file:
SYMBOL_BLV	lisp.h	/^SYMBOL_BLV (struct Lisp_Symbol *sym)$/;"	f	signature:(struct Lisp_Symbol *sym)
SYMBOL_CONSTANT_P	lisp.h	/^(SYMBOL_CONSTANT_P) (Lisp_Object sym)$/;"	f	signature:(Lisp_Object sym)
SYMBOL_CONSTANT_P	lisp.h	362;"	d
SYMBOL_FcChar8	ftfont.c	81;"	d	file:
SYMBOL_FORWARDED	lisp.h	/^  SYMBOL_FORWARDED = 3$/;"	e	enum:symbol_redirect
symbol_free_list	alloc.c	/^static struct Lisp_Symbol *symbol_free_list;$/;"	v	typeref:struct:Lisp_Symbol	file:
SYMBOL_FWD	lisp.h	/^SYMBOL_FWD (struct Lisp_Symbol *sym)$/;"	f	signature:(struct Lisp_Symbol *sym)
SYMBOL_INDEX	lisp.h	738;"	d
SYMBOL_INTERNED	lisp.h	/^  SYMBOL_INTERNED = 1,$/;"	e	enum:symbol_interned
symbol_interned	lisp.h	/^enum symbol_interned$/;"	g
SYMBOL_INTERNED_IN_INITIAL_OBARRAY	lisp.h	/^  SYMBOL_INTERNED_IN_INITIAL_OBARRAY = 2$/;"	e	enum:symbol_interned
SYMBOL_INTERNED_IN_INITIAL_OBARRAY_P	lisp.h	/^SYMBOL_INTERNED_IN_INITIAL_OBARRAY_P (Lisp_Object sym)$/;"	f	signature:(Lisp_Object sym)
SYMBOL_INTERNED_P	lisp.h	/^SYMBOL_INTERNED_P (Lisp_Object sym)$/;"	f	signature:(Lisp_Object sym)
SYMBOL_LOCALIZED	lisp.h	/^  SYMBOL_LOCALIZED = 2,$/;"	e	enum:symbol_redirect
symbol_name	lisp.h	/^    const char *symbol_name;$/;"	m	struct:Lisp_Subr	access:public
SYMBOL_NAME	lisp.h	/^SYMBOL_NAME (Lisp_Object sym)$/;"	f	signature:(Lisp_Object sym)
SYMBOL_NOWRITE	lisp.h	/^  SYMBOL_NOWRITE = 1,$/;"	e	enum:symbol_trapped_write
SYMBOL_PLAINVAL	lisp.h	/^  SYMBOL_PLAINVAL  = 4,$/;"	e	enum:symbol_redirect
symbol_redirect	lisp.h	/^enum symbol_redirect$/;"	g
symbol_to_inotifymask	inotify.c	/^symbol_to_inotifymask (Lisp_Object symb)$/;"	f	file:	signature:(Lisp_Object symb)
symbol_to_x_atom	xselect.c	/^symbol_to_x_atom (struct x_display_info *dpyinfo, Lisp_Object sym)$/;"	f	file:	signature:(struct x_display_info *dpyinfo, Lisp_Object sym)
SYMBOL_TRAPPED_WRITE	lisp.h	/^  SYMBOL_TRAPPED_WRITE = 2$/;"	e	enum:symbol_trapped_write
symbol_trapped_write	lisp.h	/^enum symbol_trapped_write$/;"	g
SYMBOL_TRAPPED_WRITE_P	lisp.h	/^(SYMBOL_TRAPPED_WRITE_P) (Lisp_Object sym)$/;"	f	signature:(Lisp_Object sym)
SYMBOL_TRAPPED_WRITE_P	lisp.h	363;"	d
SYMBOL_UNINTERNED	lisp.h	/^  SYMBOL_UNINTERNED = 0,$/;"	e	enum:symbol_interned
SYMBOL_UNTRAPPED_WRITE	lisp.h	/^  SYMBOL_UNTRAPPED_WRITE = 0,$/;"	e	enum:symbol_trapped_write
symbol_uses_obj	alloc.c	/^symbol_uses_obj (Lisp_Object symbol, Lisp_Object obj)$/;"	f	file:	signature:(Lisp_Object symbol, Lisp_Object obj)
SYMBOL_VAL	lisp.h	/^(SYMBOL_VAL) (struct Lisp_Symbol *sym)$/;"	f	signature:(struct Lisp_Symbol *sym)
SYMBOL_VAL	lisp.h	364;"	d
SYMBOL_VARALIAS	lisp.h	/^  SYMBOL_VARALIAS  = 1,$/;"	e	enum:symbol_redirect
symend	regex.c	/^  symend,       \/* Succeeds if at symbol end.  *\/$/;"	e	enum:__anon144	file:
symlink	w32.c	/^symlink (char const *filename, char const *linkname)$/;"	f	signature:(char const *filename, char const *linkname)
SYMNDX_BSS	unexaix.c	542;"	d	file:
SYMNDX_DATA	unexaix.c	541;"	d	file:
SYMNDX_TEXT	unexaix.c	540;"	d	file:
syms_of_alloc	alloc.c	/^syms_of_alloc (void)$/;"	f	signature:(void)
syms_of_alloc	lisp.h	/^extern void syms_of_alloc (void);$/;"	p	signature:(void)
syms_of_bdffont	font.h	/^extern void syms_of_bdffont (void);$/;"	p	signature:(void)
syms_of_buffer	buffer.c	/^syms_of_buffer (void)$/;"	f	signature:(void)
syms_of_buffer	lisp.h	/^extern void syms_of_buffer (void);$/;"	p	signature:(void)
syms_of_bytecode	bytecode.c	/^syms_of_bytecode (void)$/;"	f	signature:(void)
syms_of_bytecode	lisp.h	/^extern void syms_of_bytecode (void);$/;"	p	signature:(void)
syms_of_callint	callint.c	/^syms_of_callint (void)$/;"	f	signature:(void)
syms_of_callint	lisp.h	/^extern void syms_of_callint (void);$/;"	p	signature:(void)
syms_of_callproc	callproc.c	/^syms_of_callproc (void)$/;"	f	signature:(void)
syms_of_callproc	lisp.h	/^extern void syms_of_callproc (void);$/;"	p	signature:(void)
syms_of_casefiddle	casefiddle.c	/^syms_of_casefiddle (void)$/;"	f	signature:(void)
syms_of_casefiddle	lisp.h	/^extern void syms_of_casefiddle (void);$/;"	p	signature:(void)
syms_of_casetab	casetab.c	/^syms_of_casetab (void)$/;"	f	signature:(void)
syms_of_casetab	lisp.h	/^extern void syms_of_casetab (void);$/;"	p	signature:(void)
syms_of_category	category.c	/^syms_of_category (void)$/;"	f	signature:(void)
syms_of_category	lisp.h	/^extern void syms_of_category (void);$/;"	p	signature:(void)
syms_of_ccl	ccl.c	/^syms_of_ccl (void)$/;"	f	signature:(void)
syms_of_ccl	lisp.h	/^extern void syms_of_ccl (void);$/;"	p	signature:(void)
syms_of_character	character.c	/^syms_of_character (void)$/;"	f	signature:(void)
syms_of_character	lisp.h	/^extern void syms_of_character (void);$/;"	p	signature:(void)
syms_of_charset	charset.c	/^syms_of_charset (void)$/;"	f	signature:(void)
syms_of_charset	lisp.h	/^extern void syms_of_charset (void);$/;"	p	signature:(void)
syms_of_chartab	chartab.c	/^syms_of_chartab (void)$/;"	f	signature:(void)
syms_of_chartab	lisp.h	/^extern void syms_of_chartab (void);$/;"	p	signature:(void)
syms_of_cmds	cmds.c	/^syms_of_cmds (void)$/;"	f	signature:(void)
syms_of_cmds	lisp.h	/^extern void syms_of_cmds (void);$/;"	p	signature:(void)
syms_of_coding	coding.c	/^syms_of_coding (void)$/;"	f	signature:(void)
syms_of_coding	lisp.h	/^extern void syms_of_coding (void);$/;"	p	signature:(void)
syms_of_composite	composite.c	/^syms_of_composite (void)$/;"	f	signature:(void)
syms_of_composite	composite.h	/^extern void syms_of_composite (void);$/;"	p	signature:(void)
syms_of_cygw32	cygw32.c	/^syms_of_cygw32 (void)$/;"	f	signature:(void)
syms_of_cygw32	cygw32.h	/^extern void syms_of_cygw32 (void);$/;"	p	signature:(void)
syms_of_data	data.c	/^syms_of_data (void)$/;"	f	signature:(void)
syms_of_data	lisp.h	/^extern void syms_of_data (void);$/;"	p	signature:(void)
syms_of_dbusbind	dbusbind.c	/^syms_of_dbusbind (void)$/;"	f	signature:(void)
syms_of_dbusbind	lisp.h	/^void syms_of_dbusbind (void);$/;"	p	signature:(void)
syms_of_decompress	decompress.c	/^syms_of_decompress (void)$/;"	f	signature:(void)
syms_of_decompress	lisp.h	/^extern void syms_of_decompress (void);$/;"	p	signature:(void)
syms_of_dired	dired.c	/^syms_of_dired (void)$/;"	f	signature:(void)
syms_of_dired	lisp.h	/^extern void syms_of_dired (void);$/;"	p	signature:(void)
syms_of_display	dispextern.h	/^void syms_of_display (void);$/;"	p	signature:(void)
syms_of_display	dispnew.c	/^syms_of_display (void)$/;"	f	signature:(void)
syms_of_doc	doc.c	/^syms_of_doc (void)$/;"	f	signature:(void)
syms_of_doc	lisp.h	/^extern void syms_of_doc (void);$/;"	p	signature:(void)
syms_of_editfns	editfns.c	/^syms_of_editfns (void)$/;"	f	signature:(void)
syms_of_editfns	lisp.h	/^extern void syms_of_editfns (void);$/;"	p	signature:(void)
syms_of_emacs	emacs.c	/^static void syms_of_emacs (void);$/;"	p	file:	signature:(void)
syms_of_emacs	emacs.c	/^syms_of_emacs (void)$/;"	f	signature:(void)
syms_of_eval	eval.c	/^syms_of_eval (void)$/;"	f	signature:(void)
syms_of_eval	lisp.h	/^extern void syms_of_eval (void);$/;"	p	signature:(void)
syms_of_fileio	fileio.c	/^syms_of_fileio (void)$/;"	f	signature:(void)
syms_of_fileio	lisp.h	/^extern void syms_of_fileio (void);$/;"	p	signature:(void)
syms_of_filelock	filelock.c	/^syms_of_filelock (void)$/;"	f	signature:(void)
syms_of_filelock	lisp.h	/^extern void syms_of_filelock (void);$/;"	p	signature:(void)
syms_of_fns	fns.c	/^syms_of_fns (void)$/;"	f	signature:(void)
syms_of_fns	lisp.h	/^extern void syms_of_fns (void);$/;"	p	signature:(void)
syms_of_font	font.c	/^syms_of_font (void)$/;"	f	signature:(void)
syms_of_font	lisp.h	/^extern void syms_of_font (void);$/;"	p	signature:(void)
syms_of_fontset	fontset.c	/^syms_of_fontset (void)$/;"	f	signature:(void)
syms_of_fontset	lisp.h	/^extern void syms_of_fontset (void);$/;"	p	signature:(void)
syms_of_frame	frame.c	/^syms_of_frame (void)$/;"	f	signature:(void)
syms_of_frame	lisp.h	/^extern void syms_of_frame (void);$/;"	p	signature:(void)
syms_of_fringe	fringe.c	/^syms_of_fringe (void)$/;"	f	signature:(void)
syms_of_fringe	lisp.h	/^extern void syms_of_fringe (void);$/;"	p	signature:(void)
syms_of_ftcrfont	font.h	/^extern void syms_of_ftcrfont (void);$/;"	p	signature:(void)
syms_of_ftcrfont	ftcrfont.c	/^syms_of_ftcrfont (void)$/;"	f	signature:(void)
syms_of_ftfont	font.h	/^extern void syms_of_ftfont (void);$/;"	p	signature:(void)
syms_of_ftfont	ftfont.c	/^syms_of_ftfont (void)$/;"	f	signature:(void)
syms_of_ftxfont	font.h	/^extern void syms_of_ftxfont (void);$/;"	p	signature:(void)
syms_of_ftxfont	ftxfont.c	/^syms_of_ftxfont (void)$/;"	f	signature:(void)
syms_of_gfilenotify	gfilenotify.c	/^syms_of_gfilenotify (void)$/;"	f	signature:(void)
syms_of_gfilenotify	lisp.h	/^extern void syms_of_gfilenotify (void);$/;"	p	signature:(void)
syms_of_gnutls	gnutls.c	/^syms_of_gnutls (void)$/;"	f	signature:(void)
syms_of_gnutls	gnutls.h	/^extern void syms_of_gnutls (void);$/;"	p	signature:(void)
syms_of_image	image.c	/^syms_of_image (void)$/;"	f	signature:(void)
syms_of_image	lisp.h	/^extern void syms_of_image (void);$/;"	p	signature:(void)
syms_of_indent	indent.c	/^syms_of_indent (void)$/;"	f	signature:(void)
syms_of_indent	lisp.h	/^extern void syms_of_indent (void);$/;"	p	signature:(void)
syms_of_inotify	inotify.c	/^syms_of_inotify (void)$/;"	f	signature:(void)
syms_of_inotify	lisp.h	/^extern void syms_of_inotify (void);$/;"	p	signature:(void)
syms_of_insdel	insdel.c	/^syms_of_insdel (void)$/;"	f	signature:(void)
syms_of_insdel	lisp.h	/^extern void syms_of_insdel (void);$/;"	p	signature:(void)
syms_of_keyboard	keyboard.c	/^syms_of_keyboard (void)$/;"	f	signature:(void)
syms_of_keyboard	lisp.h	/^extern void syms_of_keyboard (void);$/;"	p	signature:(void)
syms_of_keymap	keymap.c	/^syms_of_keymap (void)$/;"	f	signature:(void)
syms_of_keymap	keymap.h	/^extern void syms_of_keymap (void);$/;"	p	signature:(void)
syms_of_kqueue	kqueue.c	/^syms_of_kqueue (void)$/;"	f	signature:(void)
syms_of_kqueue	lisp.h	/^extern void syms_of_kqueue (void);$/;"	p	signature:(void)
syms_of_lread	lisp.h	/^extern void syms_of_lread (void);$/;"	p	signature:(void)
syms_of_lread	lread.c	/^syms_of_lread (void)$/;"	f	signature:(void)
syms_of_macfont	font.h	/^extern void syms_of_macfont (void);$/;"	p	signature:(void)
syms_of_macros	lisp.h	/^extern void syms_of_macros (void);$/;"	p	signature:(void)
syms_of_macros	macros.c	/^syms_of_macros (void)$/;"	f	signature:(void)
syms_of_marker	lisp.h	/^extern void syms_of_marker (void);$/;"	p	signature:(void)
syms_of_marker	marker.c	/^syms_of_marker (void)$/;"	f	signature:(void)
syms_of_menu	lisp.h	/^extern void syms_of_menu (void);$/;"	p	signature:(void)
syms_of_menu	menu.c	/^syms_of_menu (void)$/;"	f	signature:(void)
syms_of_minibuf	lisp.h	/^extern void syms_of_minibuf (void);$/;"	p	signature:(void)
syms_of_minibuf	minibuf.c	/^syms_of_minibuf (void)$/;"	f	signature:(void)
syms_of_module	emacs-module.c	/^syms_of_module (void)$/;"	f	signature:(void)
syms_of_module	lisp.h	/^extern void syms_of_module (void);$/;"	p	signature:(void)
syms_of_nsfns	nsterm.h	/^extern void syms_of_nsfns (void);$/;"	p	signature:(void)
syms_of_nsfont	font.h	/^extern void syms_of_nsfont (void);$/;"	p	signature:(void)
syms_of_nsmenu	nsterm.h	/^extern void syms_of_nsmenu (void);$/;"	p	signature:(void)
syms_of_nsselect	nsterm.h	/^extern void syms_of_nsselect (void);$/;"	p	signature:(void)
syms_of_nsterm	nsterm.h	/^extern void syms_of_nsterm (void);$/;"	p	signature:(void)
syms_of_ntproc	w32.h	/^extern void syms_of_ntproc (void);$/;"	p	signature:(void)
syms_of_ntproc	w32proc.c	/^syms_of_ntproc (void)$/;"	f	signature:(void)
syms_of_ntterm	w32.h	/^extern void syms_of_ntterm (void);$/;"	p	signature:(void)
syms_of_ntterm	w32console.c	/^syms_of_ntterm (void)$/;"	f	signature:(void)
syms_of_print	lisp.h	/^extern void syms_of_print (void);$/;"	p	signature:(void)
syms_of_print	print.c	/^syms_of_print (void)$/;"	f	signature:(void)
syms_of_process	lisp.h	/^extern void syms_of_process (void);$/;"	p	signature:(void)
syms_of_process	process.c	/^syms_of_process (void)$/;"	f	signature:(void)
syms_of_profiler	lisp.h	/^extern void syms_of_profiler (void);$/;"	p	signature:(void)
syms_of_profiler	profiler.c	/^syms_of_profiler (void)$/;"	f	signature:(void)
syms_of_search	lisp.h	/^extern void syms_of_search (void);$/;"	p	signature:(void)
syms_of_search	search.c	/^syms_of_search (void)$/;"	f	signature:(void)
syms_of_sound	lisp.h	/^extern void syms_of_sound (void);$/;"	p	signature:(void)
syms_of_sound	sound.c	/^syms_of_sound (void)$/;"	f	signature:(void)
syms_of_syntax	lisp.h	/^extern void syms_of_syntax (void);$/;"	p	signature:(void)
syms_of_syntax	syntax.c	/^syms_of_syntax (void)$/;"	f	signature:(void)
syms_of_term	lisp.h	/^extern void syms_of_term (void);$/;"	p	signature:(void)
syms_of_term	term.c	/^syms_of_term (void)$/;"	f	signature:(void)
syms_of_terminal	lisp.h	/^extern void syms_of_terminal (void);$/;"	p	signature:(void)
syms_of_terminal	terminal.c	/^syms_of_terminal (void)$/;"	f	signature:(void)
syms_of_textprop	intervals.h	/^extern void syms_of_textprop (void);$/;"	p	signature:(void)
syms_of_textprop	textprop.c	/^syms_of_textprop (void)$/;"	f	signature:(void)
syms_of_threads	thread.c	/^syms_of_threads (void)$/;"	f	signature:(void)
syms_of_threads	thread.h	/^extern void syms_of_threads (void);$/;"	p	signature:(void)
syms_of_undo	lisp.h	/^extern void syms_of_undo (void);$/;"	p	signature:(void)
syms_of_undo	undo.c	/^syms_of_undo (void)$/;"	f	signature:(void)
syms_of_w32fns	w32fns.c	/^syms_of_w32fns (void)$/;"	f	signature:(void)
syms_of_w32fns	w32term.h	/^extern void syms_of_w32fns (void);$/;"	p	signature:(void)
syms_of_w32font	font.h	/^extern void syms_of_w32font (void);$/;"	p	signature:(void)
syms_of_w32font	w32font.c	/^syms_of_w32font (void)$/;"	f	signature:(void)
syms_of_w32menu	w32menu.c	/^syms_of_w32menu (void)$/;"	f	signature:(void)
syms_of_w32menu	w32term.h	/^extern void syms_of_w32menu (void);$/;"	p	signature:(void)
syms_of_w32notify	lisp.h	/^extern void syms_of_w32notify (void);$/;"	p	signature:(void)
syms_of_w32notify	w32notify.c	/^syms_of_w32notify (void)$/;"	f	signature:(void)
syms_of_w32select	w32select.c	/^syms_of_w32select (void)$/;"	f	signature:(void)
syms_of_w32select	w32select.h	/^extern void syms_of_w32select (void);$/;"	p	signature:(void)
syms_of_w32term	w32term.c	/^syms_of_w32term (void)$/;"	f	signature:(void)
syms_of_w32term	w32term.h	/^extern void syms_of_w32term (void);$/;"	p	signature:(void)
syms_of_w32uniscribe	w32fns.c	/^extern void syms_of_w32uniscribe (void);$/;"	p	file:	signature:(void)
syms_of_w32uniscribe	w32uniscribe.c	/^syms_of_w32uniscribe (void)$/;"	f	signature:(void)
syms_of_w32uniscribe	w32uniscribe.c	/^void syms_of_w32uniscribe (void);$/;"	p	file:	signature:(void)
syms_of_window	window.c	/^syms_of_window (void)$/;"	f	signature:(void)
syms_of_window	window.h	/^extern void syms_of_window (void);$/;"	p	signature:(void)
syms_of_xdisp	lisp.h	/^extern void syms_of_xdisp (void);$/;"	p	signature:(void)
syms_of_xdisp	xdisp.c	/^syms_of_xdisp (void)$/;"	f	signature:(void)
syms_of_xfaces	lisp.h	/^extern void syms_of_xfaces (void);$/;"	p	signature:(void)
syms_of_xfaces	xfaces.c	/^syms_of_xfaces (void)$/;"	f	signature:(void)
syms_of_xfns	lisp.h	/^extern void syms_of_xfns (void);$/;"	p	signature:(void)
syms_of_xfns	xfns.c	/^syms_of_xfns (void)$/;"	f	signature:(void)
syms_of_xfont	font.h	/^extern void syms_of_xfont (void);$/;"	p	signature:(void)
syms_of_xfont	xfont.c	/^syms_of_xfont (void)$/;"	f	signature:(void)
syms_of_xftfont	font.h	/^extern void syms_of_xftfont (void);$/;"	p	signature:(void)
syms_of_xftfont	xftfont.c	/^syms_of_xftfont (void)$/;"	f	signature:(void)
syms_of_xmenu	lisp.h	/^extern void syms_of_xmenu (void);$/;"	p	signature:(void)
syms_of_xmenu	xmenu.c	/^syms_of_xmenu (void)$/;"	f	signature:(void)
syms_of_xml	lisp.h	/^extern void syms_of_xml (void);$/;"	p	signature:(void)
syms_of_xml	xml.c	/^syms_of_xml (void)$/;"	f	signature:(void)
syms_of_xselect	lisp.h	/^extern void syms_of_xselect (void);$/;"	p	signature:(void)
syms_of_xselect	xselect.c	/^syms_of_xselect (void)$/;"	f	signature:(void)
syms_of_xsettings	lisp.h	/^extern void syms_of_xsettings (void);$/;"	p	signature:(void)
syms_of_xsettings	xsettings.c	/^syms_of_xsettings (void)$/;"	f	signature:(void)
syms_of_xsmfns	lisp.h	/^extern void syms_of_xsmfns (void);$/;"	p	signature:(void)
syms_of_xsmfns	xsmfns.c	/^syms_of_xsmfns (void)$/;"	f	signature:(void)
syms_of_xterm	lisp.h	/^extern void syms_of_xterm (void);$/;"	p	signature:(void)
syms_of_xterm	xterm.c	/^syms_of_xterm (void)$/;"	f	signature:(void)
syms_of_xwidget	xwidget.c	/^syms_of_xwidget (void)$/;"	f	signature:(void)
syms_of_xwidget	xwidget.h	/^INLINE void syms_of_xwidget (void) {}$/;"	f	signature:(void)
syms_of_xwidget	xwidget.h	/^void syms_of_xwidget (void);$/;"	p	signature:(void)
synchronize_locale	emacs.c	/^synchronize_locale (int category, Lisp_Object *plocale, Lisp_Object desired_locale)$/;"	f	file:	signature:(int category, Lisp_Object *plocale, Lisp_Object desired_locale)
synchronize_system_messages_locale	emacs.c	/^synchronize_system_messages_locale (void)$/;"	f	signature:(void)
synchronize_system_messages_locale	lisp.h	/^INLINE void synchronize_system_messages_locale (void) {}$/;"	f	signature:(void)
synchronize_system_messages_locale	lisp.h	/^void synchronize_system_messages_locale (void);$/;"	p	signature:(void)
synchronize_system_time_locale	emacs.c	/^synchronize_system_time_locale (void)$/;"	f	signature:(void)
synchronize_system_time_locale	lisp.h	/^INLINE void synchronize_system_time_locale (void) {}$/;"	f	signature:(void)
synchronize_system_time_locale	lisp.h	/^void synchronize_system_time_locale (void);$/;"	p	signature:(void)
synch_process_pid	callproc.c	/^static pid_t synch_process_pid;$/;"	v	file:
synch_process_tempfile	callproc.c	76;"	d	file:
sync_frame_with_window_matrix_rows	xdisp.c	/^sync_frame_with_window_matrix_rows (struct window *w)$/;"	f	file:	signature:(struct window *w)
sync_modifiers	w32fns.c	/^sync_modifiers (void)$/;"	f	file:	signature:(void)
sync_window_with_frame_matrix_rows	dispnew.c	/^sync_window_with_frame_matrix_rows (struct window *w)$/;"	f	file:	signature:(struct window *w)
SYNTAX	regex.c	139;"	d	file:
syntax	regex.c	2408;"	d	file:
syntax	regex.c	3666;"	d	file:
SYNTAX	regex.c	424;"	d	file:
syntax	regex.h	/^  reg_syntax_t syntax;$/;"	m	struct:re_pattern_buffer	access:public
syntax	syntax.c	/^  (Lisp_Object syntax, Lisp_Object lim)$/;"	v
SYNTAX	syntax.c	32;"	d	file:
SYNTAX	syntax.h	/^SYNTAX (int c)$/;"	f	signature:(int c)
syntaxcode	regex.c	/^enum syntaxcode { Swhitespace = 0, Sword = 1, Ssymbol = 2 };$/;"	g	file:
syntaxcode	syntax.h	/^enum syntaxcode$/;"	g
syntaxspec	regex.c	/^  syntaxspec,$/;"	e	enum:__anon144	file:
syntax_code_spec	syntax.c	/^char const syntax_code_spec[16] =$/;"	v
SYNTAX_COMEND_FIRST	syntax.c	/^SYNTAX_COMEND_FIRST (int c)$/;"	f	file:	signature:(int c)
SYNTAX_ENTRY	syntax.c	33;"	d	file:
SYNTAX_ENTRY	syntax.h	/^SYNTAX_ENTRY (int c)$/;"	f	signature:(int c)
SYNTAX_FLAGS_COMEND_FIRST	syntax.c	/^SYNTAX_FLAGS_COMEND_FIRST (int flags)$/;"	f	file:	signature:(int flags)
SYNTAX_FLAGS_COMEND_SECOND	syntax.c	/^SYNTAX_FLAGS_COMEND_SECOND (int flags)$/;"	f	file:	signature:(int flags)
SYNTAX_FLAGS_COMMENT_NESTED	syntax.c	/^SYNTAX_FLAGS_COMMENT_NESTED (int flags)$/;"	f	file:	signature:(int flags)
SYNTAX_FLAGS_COMMENT_STYLE	syntax.c	/^SYNTAX_FLAGS_COMMENT_STYLE (int flags, int other_flags)$/;"	f	file:	signature:(int flags, int other_flags)
SYNTAX_FLAGS_COMMENT_STYLEB	syntax.c	/^SYNTAX_FLAGS_COMMENT_STYLEB (int flags)$/;"	f	file:	signature:(int flags)
SYNTAX_FLAGS_COMMENT_STYLEC	syntax.c	/^SYNTAX_FLAGS_COMMENT_STYLEC (int flags)$/;"	f	file:	signature:(int flags)
SYNTAX_FLAGS_COMMENT_STYLEC2	syntax.c	/^SYNTAX_FLAGS_COMMENT_STYLEC2 (int flags)$/;"	f	file:	signature:(int flags)
SYNTAX_FLAGS_COMSTARTEND_FIRST	syntax.c	/^SYNTAX_FLAGS_COMSTARTEND_FIRST (int flags)$/;"	f	file:	signature:(int flags)
SYNTAX_FLAGS_COMSTART_FIRST	syntax.c	/^SYNTAX_FLAGS_COMSTART_FIRST (int flags)$/;"	f	file:	signature:(int flags)
SYNTAX_FLAGS_COMSTART_SECOND	syntax.c	/^SYNTAX_FLAGS_COMSTART_SECOND (int flags)$/;"	f	file:	signature:(int flags)
SYNTAX_FLAGS_PREFIX	syntax.c	/^SYNTAX_FLAGS_PREFIX (int flags)$/;"	f	file:	signature:(int flags)
SYNTAX_MATCH	syntax.c	/^SYNTAX_MATCH (int c)$/;"	f	file:	signature:(int c)
syntax_multibyte	syntax.c	/^syntax_multibyte (int c, bool multibyte_symbol_p)$/;"	f	file:	signature:(int c, bool multibyte_symbol_p)
syntax_prefix_flag_p	syntax.c	/^syntax_prefix_flag_p (int c)$/;"	f	signature:(int c)
syntax_prefix_flag_p	syntax.h	/^extern bool syntax_prefix_flag_p (int c);$/;"	p	signature:(int c)
syntax_propertize__done	globals.h	879;"	d
syntax_property	syntax.h	/^syntax_property (int c, bool via_property)$/;"	f	signature:(int c, bool via_property)
syntax_property_entry	syntax.h	/^syntax_property_entry (int c, bool via_property)$/;"	f	signature:(int c, bool via_property)
syntax_property_with_flags	syntax.h	/^syntax_property_with_flags (int c, bool via_property)$/;"	f	signature:(int c, bool via_property)
syntax_spec_code	syntax.c	/^unsigned char const syntax_spec_code[0400] =$/;"	v
syntax_table	search.c	/^  Lisp_Object syntax_table;$/;"	m	struct:regexp_cache	file:	access:public
syntax_table_	buffer.h	/^  Lisp_Object syntax_table_;$/;"	m	struct:buffer	access:public
SYNTAX_TABLE_BYTE_TO_CHAR	syntax.h	/^SYNTAX_TABLE_BYTE_TO_CHAR (ptrdiff_t bytepos)$/;"	f	signature:(ptrdiff_t bytepos)
SYNTAX_WITH_FLAGS	syntax.c	34;"	d	file:
SYNTAX_WITH_FLAGS	syntax.h	/^SYNTAX_WITH_FLAGS (int c)$/;"	f	signature:(int c)
synthItal	nsterm.h	/^  char synthItal;$/;"	m	struct:nsfont_info	access:public
synth_ital	dispextern.h	/^  bool_bf synth_ital : 1;$/;"	m	struct:face	access:public
sysinfo_cache	w32fns.c	/^SYSTEM_INFO sysinfo_cache;$/;"	v
syspage_mask	w32fns.c	/^DWORD_PTR syspage_mask = 0;$/;"	v
SYSSELECT_H	sysselect.h	20;"	d
SYSTEM_COLOR_PREFIX	w32fns.c	87;"	d	file:
SYSTEM_COLOR_PREFIX_LEN	w32fns.c	88;"	d	file:
SYSTEM_DEFAULT_RESOURCES	w32reg.c	32;"	d	file:
system_eol_type	coding.c	/^static Lisp_Object system_eol_type;$/;"	v	file:
system_key_syms_	keyboard.h	/^    Lisp_Object system_key_syms_;$/;"	m	struct:kboard	access:public
system_process_attributes	process.h	/^extern Lisp_Object system_process_attributes (Lisp_Object);$/;"	p	signature:(Lisp_Object)
system_process_attributes	sysdep.c	/^system_process_attributes (Lisp_Object pid)$/;"	f	signature:(Lisp_Object pid)
system_process_attributes	w32.c	/^system_process_attributes (Lisp_Object pid)$/;"	f	signature:(Lisp_Object pid)
SYSTEM_PURESIZE_EXTRA	conf_post.h	136;"	d
SYSTEM_PURESIZE_EXTRA	conf_post.h	138;"	d
SYSTEM_PURESIZE_EXTRA	conf_post.h	143;"	d
SYSTEM_PURESIZE_EXTRA	puresize.h	42;"	d
SYSTEM_TYPE	config.h	1553;"	d
system_uses_terminfo	globals.h	1043;"	d
SYSTHREAD_H	systhread.h	20;"	d
sys_accept	w32.c	/^sys_accept (int s, struct sockaddr * addr, int * addrlen)$/;"	f	signature:(int s, struct sockaddr * addr, int * addrlen)
sys_access	w32.c	/^static int sys_access (const char *, int);$/;"	p	file:	signature:(const char *, int)
sys_access	w32.c	/^sys_access (const char *fname, int mode)$/;"	f	file:	signature:(const char *fname, int mode)
sys_bind	w32.c	/^sys_bind (int s, const struct sockaddr * addr, int namelen)$/;"	f	signature:(int s, const struct sockaddr * addr, int namelen)
sys_chdir	w32.c	/^int sys_chdir (const char *);$/;"	p	file:	signature:(const char *)
sys_chdir	w32.c	/^sys_chdir (const char * path)$/;"	f	signature:(const char * path)
sys_chmod	w32.c	/^sys_chmod (const char * path, int mode)$/;"	f	signature:(const char * path, int mode)
sys_close	w32.c	/^int sys_close (int);$/;"	p	file:	signature:(int)
sys_close	w32.c	/^sys_close (int fd)$/;"	f	signature:(int fd)
sys_closedir	w32.c	/^sys_closedir (DIR *dirp)$/;"	f	signature:(DIR *dirp)
sys_cond_broadcast	systhread.c	/^sys_cond_broadcast (sys_cond_t *c)$/;"	f	signature:(sys_cond_t *c)
sys_cond_broadcast	systhread.c	/^sys_cond_broadcast (sys_cond_t *cond)$/;"	f	signature:(sys_cond_t *cond)
sys_cond_broadcast	systhread.h	/^extern void sys_cond_broadcast (sys_cond_t *);$/;"	p	signature:(sys_cond_t *)
sys_cond_destroy	systhread.c	/^sys_cond_destroy (sys_cond_t *c)$/;"	f	signature:(sys_cond_t *c)
sys_cond_destroy	systhread.c	/^sys_cond_destroy (sys_cond_t *cond)$/;"	f	signature:(sys_cond_t *cond)
sys_cond_destroy	systhread.h	/^extern void sys_cond_destroy (sys_cond_t *);$/;"	p	signature:(sys_cond_t *)
sys_cond_init	systhread.c	/^sys_cond_init (sys_cond_t *c)$/;"	f	signature:(sys_cond_t *c)
sys_cond_init	systhread.c	/^sys_cond_init (sys_cond_t *cond)$/;"	f	signature:(sys_cond_t *cond)
sys_cond_init	systhread.h	/^extern void sys_cond_init (sys_cond_t *);$/;"	p	signature:(sys_cond_t *)
sys_cond_signal	systhread.c	/^sys_cond_signal (sys_cond_t *c)$/;"	f	signature:(sys_cond_t *c)
sys_cond_signal	systhread.c	/^sys_cond_signal (sys_cond_t *cond)$/;"	f	signature:(sys_cond_t *cond)
sys_cond_signal	systhread.h	/^extern void sys_cond_signal (sys_cond_t *);$/;"	p	signature:(sys_cond_t *)
sys_cond_t	systhread.h	/^typedef int sys_cond_t;$/;"	t
sys_cond_t	systhread.h	/^typedef pthread_cond_t sys_cond_t;$/;"	t
sys_cond_t	systhread.h	/^typedef w32thread_cond_t sys_cond_t;$/;"	t
sys_cond_wait	systhread.c	/^sys_cond_wait (sys_cond_t *c, sys_mutex_t *m)$/;"	f	signature:(sys_cond_t *c, sys_mutex_t *m)
sys_cond_wait	systhread.c	/^sys_cond_wait (sys_cond_t *cond, sys_mutex_t *mutex)$/;"	f	signature:(sys_cond_t *cond, sys_mutex_t *mutex)
sys_cond_wait	systhread.h	/^extern void sys_cond_wait (sys_cond_t *, sys_mutex_t *);$/;"	p	signature:(sys_cond_t *, sys_mutex_t *)
sys_connect	w32.c	/^sys_connect (int s, const struct sockaddr * name, int namelen)$/;"	f	signature:(int s, const struct sockaddr * name, int namelen)
sys_creat	w32.c	/^int sys_creat (const char *, int);$/;"	p	file:	signature:(const char *, int)
sys_creat	w32.c	/^sys_creat (const char * path, int mode)$/;"	f	signature:(const char * path, int mode)
sys_ctime	w32.c	/^char *sys_ctime (const time_t *);$/;"	p	file:	signature:(const time_t *)
sys_ctime	w32.c	/^sys_ctime (const time_t *t)$/;"	f	signature:(const time_t *t)
sys_dup	w32.c	/^extern int sys_dup (int);$/;"	p	file:	signature:(int)
sys_dup	w32.c	/^sys_dup (int fd)$/;"	f	signature:(int fd)
sys_dup2	w32.c	/^int sys_dup2 (int, int);$/;"	p	file:	signature:(int, int)
sys_dup2	w32.c	/^sys_dup2 (int src, int dst)$/;"	f	signature:(int src, int dst)
sys_fopen	w32.c	/^FILE *sys_fopen (const char *, const char *);$/;"	p	file:	signature:(const char *, const char *)
sys_fopen	w32.c	/^sys_fopen (const char * path, const char * mode)$/;"	f	signature:(const char * path, const char * mode)
sys_freeaddrinfo	w32.c	/^sys_freeaddrinfo (struct addrinfo *ai)$/;"	f	signature:(struct addrinfo *ai)
sys_getaddrinfo	w32.c	/^sys_getaddrinfo (const char *node, const char *service,$/;"	f	signature:(const char *node, const char *service, const struct addrinfo *hints, struct addrinfo **res)
sys_gethostbyname	w32.c	/^sys_gethostbyname (const char * name)$/;"	f	signature:(const char * name)
sys_gethostname	w32.c	/^sys_gethostname (char * name, int namelen)$/;"	f	signature:(char * name, int namelen)
sys_getpeername	w32.c	/^sys_getpeername (int s, struct sockaddr *addr, int * namelen)$/;"	f	signature:(int s, struct sockaddr *addr, int * namelen)
sys_getservbyname	w32.c	/^sys_getservbyname (const char * name, const char * proto)$/;"	f	signature:(const char * name, const char * proto)
sys_getsockname	w32.c	/^sys_getsockname (int s, struct sockaddr * name, int * namelen)$/;"	f	signature:(int s, struct sockaddr * name, int * namelen)
sys_htons	w32.c	/^sys_htons (u_short hostshort)$/;"	f	signature:(u_short hostshort)
sys_inet_addr	w32.c	/^sys_inet_addr (const char * cp)$/;"	f	signature:(const char * cp)
sys_jmp_buf	lisp.h	/^typedef jmp_buf sys_jmp_buf;$/;"	t
sys_jmp_buf	lisp.h	/^typedef sigjmp_buf sys_jmp_buf;$/;"	t
sys_kill	w32proc.c	/^sys_kill (pid_t pid, int sig)$/;"	f	signature:(pid_t pid, int sig)
sys_link	w32.c	/^sys_link (const char * old, const char * new)$/;"	f	signature:(const char * old, const char * new)
sys_link	w32.h	/^extern int sys_link (const char *, const char *);$/;"	p	signature:(const char *, const char *)
sys_listen	w32.c	/^sys_listen (int s, int backlog)$/;"	f	signature:(int s, int backlog)
sys_localtime	w32.c	/^struct tm *sys_localtime (const time_t *);$/;"	p	file:	signature:(const time_t *)
sys_localtime	w32.c	/^sys_localtime (const time_t *t)$/;"	f	signature:(const time_t *t)
sys_longjmp	lisp.h	2975;"	d
sys_longjmp	lisp.h	2979;"	d
sys_longjmp	lisp.h	2985;"	d
sys_mkdir	w32.c	/^int sys_mkdir (const char *);$/;"	p	file:	signature:(const char *)
sys_mkdir	w32.c	/^sys_mkdir (const char * path)$/;"	f	signature:(const char * path)
sys_mutex_init	systhread.c	/^sys_mutex_init (sys_mutex_t *m)$/;"	f	signature:(sys_mutex_t *m)
sys_mutex_init	systhread.c	/^sys_mutex_init (sys_mutex_t *mutex)$/;"	f	signature:(sys_mutex_t *mutex)
sys_mutex_init	systhread.h	/^extern void sys_mutex_init (sys_mutex_t *);$/;"	p	signature:(sys_mutex_t *)
sys_mutex_lock	systhread.c	/^sys_mutex_lock (sys_mutex_t *m)$/;"	f	signature:(sys_mutex_t *m)
sys_mutex_lock	systhread.c	/^sys_mutex_lock (sys_mutex_t *mutex)$/;"	f	signature:(sys_mutex_t *mutex)
sys_mutex_lock	systhread.h	/^extern void sys_mutex_lock (sys_mutex_t *);$/;"	p	signature:(sys_mutex_t *)
sys_mutex_t	systhread.h	/^typedef int sys_mutex_t;$/;"	t
sys_mutex_t	systhread.h	/^typedef pthread_mutex_t sys_mutex_t;$/;"	t
sys_mutex_t	systhread.h	/^typedef w32thread_critsect sys_mutex_t;$/;"	t
sys_mutex_unlock	systhread.c	/^sys_mutex_unlock (sys_mutex_t *m)$/;"	f	signature:(sys_mutex_t *m)
sys_mutex_unlock	systhread.c	/^sys_mutex_unlock (sys_mutex_t *mutex)$/;"	f	signature:(sys_mutex_t *mutex)
sys_mutex_unlock	systhread.h	/^extern void sys_mutex_unlock (sys_mutex_t *);$/;"	p	signature:(sys_mutex_t *)
sys_ntohs	w32.c	/^sys_ntohs (u_short netshort)$/;"	f	signature:(u_short netshort)
sys_open	w32.c	/^int sys_open (const char *, int, int);$/;"	p	file:	signature:(const char *, int, int)
sys_open	w32.c	/^sys_open (const char * path, int oflag, int mode)$/;"	f	signature:(const char * path, int oflag, int mode)
sys_opendir	w32.c	/^sys_opendir (const char *filename)$/;"	f	signature:(const char *filename)
sys_putenv	w32.c	/^sys_putenv (char *str)$/;"	f	signature:(char *str)
sys_read	w32.c	/^int sys_read (int, char *, unsigned int);$/;"	p	file:	signature:(int, char *, unsigned int)
sys_read	w32.c	/^sys_read (int fd, char * buffer, unsigned int count)$/;"	f	signature:(int fd, char * buffer, unsigned int count)
sys_readdir	w32.c	/^sys_readdir (DIR *dirp)$/;"	f	signature:(DIR *dirp)
sys_recvfrom	w32.c	/^sys_recvfrom (int s, char * buf, int len, int flags,$/;"	f	signature:(int s, char * buf, int len, int flags, struct sockaddr * from, int * fromlen)
sys_rename	w32.c	/^int sys_rename (char const *, char const *);$/;"	p	file:	signature:(char const *, char const *)
sys_rename	w32.c	/^sys_rename (char const *old, char const *new)$/;"	f	signature:(char const *old, char const *new)
sys_rename_replace	w32.c	/^sys_rename_replace (const char *oldname, const char *newname, BOOL force)$/;"	f	signature:(const char *oldname, const char *newname, BOOL force)
sys_rename_replace	w32.h	/^extern int sys_rename_replace (char const *, char const *, BOOL);$/;"	p	signature:(char const *, char const *, BOOL)
sys_rmdir	w32.c	/^int sys_rmdir (const char *);$/;"	p	file:	signature:(const char *)
sys_rmdir	w32.c	/^sys_rmdir (const char * path)$/;"	f	signature:(const char * path)
sys_select	process.c	/^extern int sys_select (int, fd_set *, fd_set *, fd_set *,$/;"	p	file:	signature:(int, fd_set *, fd_set *, fd_set *, const struct timespec *, const sigset_t *)
sys_select	w32.c	/^extern int sys_select (int, SELECT_TYPE *, SELECT_TYPE *, SELECT_TYPE *,$/;"	p	file:	signature:(int, SELECT_TYPE *, SELECT_TYPE *, SELECT_TYPE *, const struct timespec *, const sigset_t *)
sys_select	w32proc.c	/^int sys_select (int, SELECT_TYPE *, SELECT_TYPE *, SELECT_TYPE *,$/;"	p	file:	signature:(int, SELECT_TYPE *, SELECT_TYPE *, SELECT_TYPE *, const struct timespec *, const sigset_t *)
sys_select	w32proc.c	/^sys_select (int nfds, SELECT_TYPE *rfds, SELECT_TYPE *wfds, SELECT_TYPE *efds,$/;"	f	signature:(int nfds, SELECT_TYPE *rfds, SELECT_TYPE *wfds, SELECT_TYPE *efds, const struct timespec *timeout, const sigset_t *ignored)
sys_sendto	w32.c	/^sys_sendto (int s, const char * buf, int len, int flags,$/;"	f	signature:(int s, const char * buf, int len, int flags, const struct sockaddr * to, int tolen)
sys_setjmp	lisp.h	2974;"	d
sys_setjmp	lisp.h	2978;"	d
sys_setjmp	lisp.h	2984;"	d
sys_setsockopt	w32.c	/^sys_setsockopt (int s, int level, int optname, const void * optval, int optlen)$/;"	f	signature:(int s, int level, int optname, const void * optval, int optlen)
sys_shutdown	w32.c	/^sys_shutdown (int s, int how)$/;"	f	signature:(int s, int how)
sys_siglist	sysdep.c	/^static char const *sys_siglist[NSIG];$/;"	v	file:
sys_siglist	sysdep.c	1639;"	d	file:
sys_siglist	sysdep.c	1641;"	d	file:
sys_siglist	sysdep.c	1643;"	d	file:
sys_siglist	sysdep.c	1645;"	d	file:
sys_siglist_entries	sysdep.c	1651;"	d	file:
sys_siglist_entries	sysdep.c	1653;"	d	file:
sys_signal	w32proc.c	/^sys_signal (int sig, signal_handler handler)$/;"	f	signature:(int sig, signal_handler handler)
sys_sleep	w32.c	/^sys_sleep (int seconds)$/;"	f	signature:(int seconds)
sys_sleep	w32.h	/^extern void sys_sleep (int);$/;"	p	signature:(int)
sys_socket	w32.c	/^sys_socket (int af, int type, int protocol)$/;"	f	signature:(int af, int type, int protocol)
sys_spawnve	w32.h	/^extern int sys_spawnve (int, char *, char **, char **);$/;"	p	signature:(int, char *, char **, char **)
sys_spawnve	w32proc.c	/^sys_spawnve (int mode, char *cmdname, char **argv, char **envp)$/;"	f	signature:(int mode, char *cmdname, char **argv, char **envp)
sys_strerror	w32.c	/^sys_strerror (int error_no)$/;"	f	signature:(int error_no)
sys_subshell	lisp.h	/^extern void sys_subshell (void);$/;"	p	signature:(void)
sys_subshell	sysdep.c	/^sys_subshell (void)$/;"	f	signature:(void)
sys_suspend	lisp.h	/^extern void sys_suspend (void);$/;"	p	signature:(void)
sys_suspend	sysdep.c	/^sys_suspend (void)$/;"	f	signature:(void)
sys_tgetstr	w32console.c	/^char *sys_tgetstr (char *, char **);$/;"	p	file:	signature:(char *, char **)
sys_tgetstr	w32console.c	/^sys_tgetstr (char *cap, char **area)$/;"	f	signature:(char *cap, char **area)
sys_thread_create	systhread.c	/^sys_thread_create (sys_thread_t *t, const char *name,$/;"	f	signature:(sys_thread_t *t, const char *name, thread_creation_function *func, void *datum)
sys_thread_create	systhread.c	/^sys_thread_create (sys_thread_t *thread_ptr, const char *name,$/;"	f	signature:(sys_thread_t *thread_ptr, const char *name, thread_creation_function *func, void *arg)
sys_thread_create	systhread.h	/^extern int sys_thread_create (sys_thread_t *, const char *,$/;"	p	signature:(sys_thread_t *, const char *, thread_creation_function *, void *)
sys_thread_self	systhread.c	/^sys_thread_self (void)$/;"	f	signature:(void)
sys_thread_self	systhread.h	/^extern sys_thread_t sys_thread_self (void);$/;"	p	signature:(void)
sys_thread_t	systhread.h	/^typedef int sys_thread_t;$/;"	t
sys_thread_t	systhread.h	/^typedef pthread_t sys_thread_t;$/;"	t
sys_thread_t	systhread.h	/^typedef unsigned long sys_thread_t;$/;"	t
sys_thread_yield	systhread.c	/^sys_thread_yield (void)$/;"	f	signature:(void)
sys_thread_yield	systhread.h	/^extern void sys_thread_yield (void);$/;"	p	signature:(void)
sys_tputs	w32console.c	/^sys_tputs (char *str, int nlines, int (*outfun) (int))$/;"	f	signature:(char *str, int nlines, int (*outfun) (int))
sys_tputs	w32console.c	/^void sys_tputs (char *, int, int (*) (int));$/;"	p	file:	signature:(char *, int, int (*) (int))
sys_umask	w32.c	/^sys_umask (int mode)$/;"	f	signature:(int mode)
sys_unlink	w32.c	/^sys_unlink (const char * path)$/;"	f	signature:(const char * path)
sys_write	w32.c	/^int sys_write (int, const void *, unsigned int);$/;"	p	file:	signature:(int, const void *, unsigned int)
sys_write	w32.c	/^sys_write (int fd, const void * buffer, unsigned int count)$/;"	f	signature:(int fd, const void * buffer, unsigned int count)
szDevice	w32fns.c	/^    char    szDevice[CCHDEVICENAME];$/;"	m	struct:MONITOR_INFO_EX	file:	access:public
szInfo	w32fns.c	/^  WCHAR szInfo[256];$/;"	m	struct:MY_NOTIFYICONDATAW	file:	access:public
szInfoTitle	w32fns.c	/^  WCHAR szInfoTitle[64];$/;"	m	struct:MY_NOTIFYICONDATAW	file:	access:public
szTip	w32fns.c	/^  WCHAR szTip[128];$/;"	m	struct:MY_NOTIFYICONDATAW	file:	access:public
s_pfn_Get_Thread_Times	w32proc.c	/^static GetThreadTimes_Proc s_pfn_Get_Thread_Times;$/;"	v	file:
S_TYPES_TO_IGNORE_CHARACTER_PAYLOAD	w32fns.c	3962;"	d	file:
S_TYPES_TO_REPORT_CHARACTER_PAYLOAD_WITH_MODIFIERS	w32fns.c	3963;"	d	file:
t1	editfns.c	/^  (Lisp_Object t1, Lisp_Object t2)$/;"	v
Tab	cm.h	110;"	d
TabCost	cm.h	136;"	d
table	category.c	/^  (Lisp_Object character, Lisp_Object category, Lisp_Object table, Lisp_Object reset)$/;"	v
table	charset.c	/^  } table;$/;"	m	struct:__anon78	typeref:union:__anon78::__anon79	file:	access:public
table	fns.c	/^  (Lisp_Object key, Lisp_Object table, Lisp_Object dflt)$/;"	v
table	regex.c	/^  int *table;			\/* actual work area.  *\/$/;"	m	struct:range_table_work_area	file:	access:public
table_entry	font.c	/^struct table_entry$/;"	s	file:
table_entry::names	font.c	/^  const char *names[5];$/;"	m	struct:table_entry	file:	access:public
table_entry::numeric	font.c	/^  int numeric;$/;"	m	struct:table_entry	file:	access:public
tabs_safe_p	dispextern.h	/^bool tabs_safe_p (int);$/;"	p	signature:(int)
tabs_safe_p	sysdep.c	/^tabs_safe_p (int fd)$/;"	f	signature:(int fd)
TabWidth	cm.h	112;"	d
tab_width	dispextern.h	/^  short tab_width;$/;"	m	struct:it	access:public
tab_width_	buffer.h	/^  Lisp_Object tab_width_;$/;"	m	struct:buffer	access:public
tag	eval.c	/^  (register Lisp_Object tag, Lisp_Object value)$/;"	v
tagGLYPHSET	w32term.c	/^typedef struct tagGLYPHSET$/;"	s	file:
tagGLYPHSET::cbThis	w32term.c	/^  DWORD cbThis;$/;"	m	struct:tagGLYPHSET	file:	access:public
tagGLYPHSET::cGlyphsSupported	w32term.c	/^  DWORD cGlyphsSupported;$/;"	m	struct:tagGLYPHSET	file:	access:public
tagGLYPHSET::cRanges	w32term.c	/^  DWORD cRanges;$/;"	m	struct:tagGLYPHSET	file:	access:public
tagGLYPHSET::flAccel	w32term.c	/^  DWORD flAccel;$/;"	m	struct:tagGLYPHSET	file:	access:public
tagGLYPHSET::ranges	w32term.c	/^  WCRANGE ranges[1];$/;"	m	struct:tagGLYPHSET	file:	access:public
tagTRACKMOUSEEVENT	w32term.h	/^typedef struct tagTRACKMOUSEEVENT$/;"	s
tagTRACKMOUSEEVENT::cbSize	w32term.h	/^  DWORD cbSize;$/;"	m	struct:tagTRACKMOUSEEVENT	access:public
tagTRACKMOUSEEVENT::dwFlags	w32term.h	/^  DWORD dwFlags;$/;"	m	struct:tagTRACKMOUSEEVENT	access:public
tagTRACKMOUSEEVENT::dwHoverTime	w32term.h	/^  DWORD dwHoverTime;$/;"	m	struct:tagTRACKMOUSEEVENT	access:public
tagTRACKMOUSEEVENT::hwndTrack	w32term.h	/^  HWND hwndTrack;$/;"	m	struct:tagTRACKMOUSEEVENT	access:public
tagWCRANGE	w32term.c	/^typedef struct tagWCRANGE$/;"	s	file:
tagWCRANGE::cGlyphs	w32term.c	/^  USHORT cGlyphs;$/;"	m	struct:tagWCRANGE	file:	access:public
tagWCRANGE::wcLow	w32term.c	/^  WCHAR wcLow;$/;"	m	struct:tagWCRANGE	file:	access:public
tag_or_ch	lisp.h	/^  Lisp_Object tag_or_ch;$/;"	m	struct:handler	access:public
TAG_PTR	lisp.h	711;"	d
TAG_SYMOFFSET	lisp.h	718;"	d
tail	keymap.c	/^  Lisp_Object maps, tail, thisseq;$/;"	m	struct:accessible_keymaps_data	file:	access:public
take_vertical_position_into_account	xdisp.c	/^take_vertical_position_into_account (struct it *it)$/;"	f	file:	signature:(struct it *it)
TALLOC	regex.c	508;"	d	file:
target	fileio.c	/^  (Lisp_Object target, Lisp_Object linkname, Lisp_Object ok_if_already_exists)$/;"	v
target	fontset.c	/^  (Lisp_Object name, Lisp_Object target, Lisp_Object font_spec, Lisp_Object frame, Lisp_Object add)$/;"	v
target	xterm.h	/^  Atom selection, target, property;$/;"	m	struct:selection_input_event	access:public
targetdepth	syntax.c	/^  (Lisp_Object from, Lisp_Object to, Lisp_Object targetdepth,$/;"	v
target_multibyte	regex.h	/^  unsigned target_multibyte : 1;$/;"	m	struct:re_pattern_buffer	access:public
target_type	xselect.c	/^  (Lisp_Object selection_symbol, Lisp_Object target_type,$/;"	v
TB_INFO_KEY	gtkutil.c	140;"	d	file:
tb_size_cb	gtkutil.c	/^tb_size_cb (GtkWidget    *widget,$/;"	f	file:	signature:(GtkWidget *widget, GdkRectangle *allocation, gpointer user_data)
tb_style	xsettings.c	/^  char *tb_style;$/;"	m	struct:xsettings	file:	access:public
tcgetpgrp	w32proc.c	/^tcgetpgrp (int fd)$/;"	f	signature:(int fd)
tcsetpgrp_without_stopping	sysdep.c	/^tcsetpgrp_without_stopping (int fd, pid_t pgid)$/;"	f	file:	signature:(int fd, pid_t pgid)
tear_down_x_back_buffer	xfns.c	/^tear_down_x_back_buffer (struct frame *f)$/;"	f	signature:(struct frame *f)
tear_down_x_back_buffer	xterm.h	/^extern void tear_down_x_back_buffer (struct frame *f);$/;"	p	signature:(struct frame *f)
TEMACS_LDFLAGS	Makefile	/^TEMACS_LDFLAGS = $(LD_SWITCH_SYSTEM) $(LD_SWITCH_SYSTEM_TEMACS)$/;"	m
temporarily_switch_to_single_kboard	keyboard.c	/^temporarily_switch_to_single_kboard (struct frame *f)$/;"	f	signature:(struct frame *f)
temporarily_switch_to_single_kboard	keyboard.h	/^extern void temporarily_switch_to_single_kboard (struct frame *);$/;"	p	signature:(struct frame *)
temp_buffer	w32term.c	/^static short temp_buffer[100];$/;"	v	file:
temp_buffer	xterm.c	/^static short temp_buffer[100];$/;"	v	file:
temp_charset_work	charset.c	/^} *temp_charset_work;$/;"	v	typeref:struct:__anon78	file:
temp_index	w32term.c	/^static int temp_index;$/;"	v	file:
temp_index	xterm.c	/^static int temp_index;$/;"	v	file:
temp_output_buffer_setup	lisp.h	/^extern void temp_output_buffer_setup (const char *);$/;"	p	signature:(const char *)
temp_output_buffer_setup	print.c	/^temp_output_buffer_setup (const char *bufname)$/;"	f	signature:(const char *bufname)
temp_output_buffer_show	window.c	/^temp_output_buffer_show (register Lisp_Object buf)$/;"	f	signature:(register Lisp_Object buf)
temp_output_buffer_show	window.h	/^extern void temp_output_buffer_show (Lisp_Object);$/;"	p	signature:(Lisp_Object)
temp_set_point	buffer.h	/^extern void temp_set_point (struct buffer *, ptrdiff_t);$/;"	p	signature:(struct buffer *, ptrdiff_t)
temp_set_point	intervals.c	/^temp_set_point (struct buffer *buffer, ptrdiff_t charpos)$/;"	f	signature:(struct buffer *buffer, ptrdiff_t charpos)
temp_set_point_both	buffer.h	/^extern void temp_set_point_both (struct buffer *,$/;"	p	signature:(struct buffer *, ptrdiff_t, ptrdiff_t)
temp_set_point_both	intervals.c	/^temp_set_point_both (struct buffer *buffer,$/;"	f	signature:(struct buffer *buffer, ptrdiff_t charpos, ptrdiff_t bytepos)
TEMP_SET_PT	buffer.h	241;"	d
TEMP_SET_PT_BOTH	buffer.h	244;"	d
temslot	window.h	/^    Lisp_Object temslot;$/;"	m	struct:window	access:public
termcap_buffer	termcap.c	/^struct termcap_buffer$/;"	s	file:
termcap_buffer::ateof	termcap.c	/^    bool ateof;$/;"	m	struct:termcap_buffer	file:	access:public
termcap_buffer::beg	termcap.c	/^    char *beg;$/;"	m	struct:termcap_buffer	file:	access:public
termcap_buffer::full	termcap.c	/^    ptrdiff_t full;$/;"	m	struct:termcap_buffer	file:	access:public
termcap_buffer::ptr	termcap.c	/^    char *ptr;$/;"	m	struct:termcap_buffer	file:	access:public
termcap_buffer::size	termcap.c	/^    ptrdiff_t size;$/;"	m	struct:termcap_buffer	file:	access:public
TERMCAP_BUFFER_SIZE	termchar.h	/^enum { TERMCAP_BUFFER_SIZE = 4096 };$/;"	e	enum:__anon140
TERMCAP_FILE	termcap.c	45;"	d	file:
TERMCAP_OBJ	Makefile	/^TERMCAP_OBJ=terminfo.o$/;"	m
termcap_strings_buffer	termchar.h	/^  char termcap_strings_buffer[TERMCAP_BUFFER_SIZE];$/;"	m	struct:tty_display_info	access:public
termcap_term_buffer	termchar.h	/^  char termcap_term_buffer[TERMCAP_BUFFER_SIZE];$/;"	m	struct:tty_display_info	access:public
terminal	frame.h	/^  struct terminal *terminal;$/;"	m	struct:frame	typeref:struct:frame::terminal	access:public
terminal	nsterm.h	/^  struct terminal *terminal;$/;"	m	struct:ns_display_info	typeref:struct:ns_display_info::terminal	access:public
terminal	termchar.h	/^  struct terminal *terminal;    \/* Points back to the generic terminal$/;"	m	struct:tty_display_info	typeref:struct:tty_display_info::terminal	access:public
terminal	termhooks.h	/^struct terminal$/;"	s
terminal	terminal.c	/^  (Lisp_Object terminal, Lisp_Object force)$/;"	v
terminal	terminal.c	/^  (Lisp_Object terminal, Lisp_Object parameter)$/;"	v
terminal	terminal.c	/^  (Lisp_Object terminal, Lisp_Object parameter, Lisp_Object value)$/;"	v
terminal	w32term.h	/^  struct terminal *terminal;$/;"	m	struct:w32_display_info	typeref:struct:w32_display_info::terminal	access:public
terminal	xterm.h	/^  struct terminal *terminal;$/;"	m	struct:x_display_info	typeref:struct:x_display_info::terminal	access:public
terminal::buffer_flipping_unblocked_hook	termhooks.h	/^  void (*buffer_flipping_unblocked_hook) (struct frame *);$/;"	m	struct:terminal	access:public
terminal::charset_list	termhooks.h	/^  Lisp_Object charset_list;$/;"	m	struct:terminal	access:public
terminal::clear_end_of_line_hook	termhooks.h	/^  void (*clear_end_of_line_hook) (struct frame *, int);$/;"	m	struct:terminal	access:public
terminal::clear_frame_hook	termhooks.h	/^  void (*clear_frame_hook) (struct frame *);$/;"	m	struct:terminal	access:public
terminal::clear_to_end_hook	termhooks.h	/^  void (*clear_to_end_hook) (struct frame *);$/;"	m	struct:terminal	access:public
terminal::condemn_scroll_bars_hook	termhooks.h	/^  void (*condemn_scroll_bars_hook) (struct frame *frame);$/;"	m	struct:terminal	access:public
terminal::cursor_to_hook	termhooks.h	/^  void (*cursor_to_hook) (struct frame *f, int vpos, int hpos);$/;"	m	struct:terminal	access:public
terminal::delete_frame_hook	termhooks.h	/^  void (*delete_frame_hook) (struct frame *);$/;"	m	struct:terminal	access:public
terminal::delete_glyphs_hook	termhooks.h	/^  void (*delete_glyphs_hook) (struct frame *, int);$/;"	m	struct:terminal	access:public
terminal::delete_terminal_hook	termhooks.h	/^  void (*delete_terminal_hook) (struct terminal *);$/;"	m	struct:terminal	access:public
terminal::display_info	termhooks.h	/^  union display_info$/;"	u	struct:terminal	access:public
terminal::display_info	termhooks.h	/^  } display_info;$/;"	m	struct:terminal	typeref:union:terminal::display_info	access:public
terminal::display_info::ns	termhooks.h	/^    struct ns_display_info *ns;       \/* nsterm.h *\/$/;"	m	union:terminal::display_info	typeref:struct:terminal::display_info::ns_display_info	access:public
terminal::display_info::tty	termhooks.h	/^    struct tty_display_info *tty;     \/* termchar.h *\/$/;"	m	union:terminal::display_info	typeref:struct:terminal::display_info::tty_display_info	access:public
terminal::display_info::w32	termhooks.h	/^    struct w32_display_info *w32;     \/* w32term.h *\/$/;"	m	union:terminal::display_info	typeref:struct:terminal::display_info::w32_display_info	access:public
terminal::display_info::x	termhooks.h	/^    struct x_display_info *x;         \/* xterm.h *\/$/;"	m	union:terminal::display_info	typeref:struct:terminal::display_info::x_display_info	access:public
terminal::frame_raise_lower_hook	termhooks.h	/^  void (*frame_raise_lower_hook) (struct frame *f, bool raise_flag);$/;"	m	struct:terminal	access:public
terminal::frame_rehighlight_hook	termhooks.h	/^  void (*frame_rehighlight_hook) (struct frame *);$/;"	m	struct:terminal	access:public
terminal::frame_up_to_date_hook	termhooks.h	/^  void (*frame_up_to_date_hook) (struct frame *);$/;"	m	struct:terminal	access:public
terminal::fullscreen_hook	termhooks.h	/^  void (*fullscreen_hook) (struct frame *f);$/;"	m	struct:terminal	access:public
terminal::glyph_code_table	termhooks.h	/^  Lisp_Object glyph_code_table;$/;"	m	struct:terminal	access:public
terminal::header	termhooks.h	/^  struct vectorlike_header header;$/;"	m	struct:terminal	typeref:struct:terminal::vectorlike_header	access:public
terminal::id	termhooks.h	/^  int id;$/;"	m	struct:terminal	access:public
terminal::image_cache	termhooks.h	/^  struct image_cache *image_cache;$/;"	m	struct:terminal	typeref:struct:terminal::image_cache	access:public
terminal::insert_glyphs_hook	termhooks.h	/^  void (*insert_glyphs_hook) (struct frame *f, struct glyph *s, int n);$/;"	m	struct:terminal	access:public
terminal::ins_del_lines_hook	termhooks.h	/^  void (*ins_del_lines_hook) (struct frame *f, int, int);$/;"	m	struct:terminal	access:public
terminal::judge_scroll_bars_hook	termhooks.h	/^  void (*judge_scroll_bars_hook) (struct frame *FRAME);$/;"	m	struct:terminal	access:public
terminal::kboard	termhooks.h	/^  struct kboard *kboard;$/;"	m	struct:terminal	typeref:struct:terminal::kboard	access:public
terminal::keyboard_coding	termhooks.h	/^  struct coding_system *keyboard_coding;$/;"	m	struct:terminal	typeref:struct:terminal::coding_system	access:public
terminal::menu_show_hook	termhooks.h	/^  Lisp_Object (*menu_show_hook) (struct frame *f, int x, int y, int menuflags,$/;"	m	struct:terminal	access:public
terminal::mouse_position_hook	termhooks.h	/^  void (*mouse_position_hook) (struct frame **f, int,$/;"	m	struct:terminal	access:public
terminal::name	termhooks.h	/^  char *name;$/;"	m	struct:terminal	access:public
terminal::next_terminal	termhooks.h	/^  struct terminal *next_terminal;$/;"	m	struct:terminal	typeref:struct:terminal::terminal	access:public
terminal::param_alist	termhooks.h	/^  Lisp_Object param_alist;$/;"	m	struct:terminal	access:public
terminal::popup_dialog_hook	termhooks.h	/^  Lisp_Object (*popup_dialog_hook) (struct frame *f, Lisp_Object header,$/;"	m	struct:terminal	access:public
terminal::raw_cursor_to_hook	termhooks.h	/^  void (*raw_cursor_to_hook) (struct frame *, int, int);$/;"	m	struct:terminal	access:public
terminal::read_socket_hook	termhooks.h	/^  int (*read_socket_hook) (struct terminal *terminal,$/;"	m	struct:terminal	access:public
terminal::redeem_scroll_bar_hook	termhooks.h	/^  void (*redeem_scroll_bar_hook) (struct window *window);$/;"	m	struct:terminal	access:public
terminal::reference_count	termhooks.h	/^  int reference_count;$/;"	m	struct:terminal	access:public
terminal::reset_terminal_modes_hook	termhooks.h	/^  void (*reset_terminal_modes_hook) (struct terminal *);$/;"	m	struct:terminal	access:public
terminal::rif	termhooks.h	/^  struct redisplay_interface *rif;$/;"	m	struct:terminal	typeref:struct:terminal::redisplay_interface	access:public
terminal::ring_bell_hook	termhooks.h	/^  void (*ring_bell_hook) (struct frame *f);$/;"	m	struct:terminal	access:public
terminal::set_horizontal_scroll_bar_hook	termhooks.h	/^  void (*set_horizontal_scroll_bar_hook) (struct window *window,$/;"	m	struct:terminal	access:public
terminal::set_terminal_modes_hook	termhooks.h	/^  void (*set_terminal_modes_hook) (struct terminal *);$/;"	m	struct:terminal	access:public
terminal::set_terminal_window_hook	termhooks.h	/^  void (*set_terminal_window_hook) (struct frame *, int);$/;"	m	struct:terminal	access:public
terminal::set_vertical_scroll_bar_hook	termhooks.h	/^  void (*set_vertical_scroll_bar_hook) (struct window *window,$/;"	m	struct:terminal	access:public
terminal::terminal_coding	termhooks.h	/^  struct coding_system *terminal_coding;$/;"	m	struct:terminal	typeref:struct:terminal::coding_system	access:public
terminal::toggle_invisible_pointer_hook	termhooks.h	/^  void (*toggle_invisible_pointer_hook) (struct frame *f, bool invisible);$/;"	m	struct:terminal	access:public
terminal::type	termhooks.h	/^  enum output_method type;$/;"	m	struct:terminal	typeref:enum:terminal::output_method	access:public
terminal::update_begin_hook	termhooks.h	/^  void (*update_begin_hook) (struct frame *);$/;"	m	struct:terminal	access:public
terminal::update_end_hook	termhooks.h	/^  void (*update_end_hook) (struct frame *);$/;"	m	struct:terminal	access:public
terminal::Vselection_alist	termhooks.h	/^  Lisp_Object Vselection_alist;$/;"	m	struct:terminal	access:public
terminal::write_glyphs_hook	termhooks.h	/^  void (*write_glyphs_hook) (struct frame *f, struct glyph *s, int n);$/;"	m	struct:terminal	access:public
TERMINALP	termhooks.h	/^TERMINALP (Lisp_Object a)$/;"	f	signature:(Lisp_Object a)
TERMINAL_ACTIVE_P	termhooks.h	707;"	d
terminal_coding	termhooks.h	/^  struct coding_system *terminal_coding;$/;"	m	struct:terminal	typeref:struct:terminal::coding_system	access:public
TERMINAL_FONT_CACHE	termhooks.h	714;"	d
TERMINAL_FONT_CACHE	termhooks.h	717;"	d
TERMINAL_FONT_CACHE	termhooks.h	720;"	d
terminal_glyph_code	termhooks.h	/^extern Lisp_Object terminal_glyph_code (struct terminal *, int);$/;"	p	signature:(struct terminal *, int)
terminal_glyph_code	terminal.c	/^terminal_glyph_code (struct terminal *t, int ch)$/;"	f	signature:(struct terminal *t, int ch)
TERMINAL_KEYBOARD_CODING	termhooks.h	700;"	d
terminal_list	terminal.c	/^struct terminal *terminal_list;$/;"	v	typeref:struct:terminal
TERMINAL_TERMINAL_CODING	termhooks.h	699;"	d
terminate	w32notify.c	/^  HANDLE terminate;     \/* event signaling the thread to terminate *\/$/;"	m	struct:notification	file:	access:public
terminate	w32proc.c	/^  volatile int terminate;$/;"	m	struct:itimer_data	file:	access:public
terminate_due_to_signal	emacs.c	/^terminate_due_to_signal (int sig, int backtrace_limit)$/;"	f	signature:(int sig, int backtrace_limit)
terminate_due_to_signal	lisp.h	/^extern _Noreturn void terminate_due_to_signal (int, int);$/;"	p	signature:(int, int)
TERMINFO	config.h	1562;"	d
termscript	termchar.h	/^  FILE *termscript;             \/* If nonzero, send all terminal output$/;"	m	struct:tty_display_info	access:public
term_entry	termcap.c	/^static char *term_entry;$/;"	v	file:
term_get_fkeys	term.c	/^term_get_fkeys (char **address, KBOARD *kboard)$/;"	f	file:	signature:(char **address, KBOARD *kboard)
term_get_fkeys_1	term.c	/^static Lisp_Object term_get_fkeys_1 (void);$/;"	p	file:	signature:(void)
term_get_fkeys_1	term.c	/^term_get_fkeys_1 (void)$/;"	f	file:	signature:(void)
term_get_fkeys_address	term.c	/^static char **term_get_fkeys_address;$/;"	v	file:
term_get_fkeys_kboard	term.c	/^static KBOARD *term_get_fkeys_kboard;$/;"	v	file:
TERM_HEADER	config.h	1565;"	d
term_initted	termchar.h	/^  bool_bf term_initted : 1;	\/* True if we have been through$/;"	m	struct:tty_display_info	access:public
term_mouse_click	term.c	/^term_mouse_click (struct input_event *result, Gpm_Event *event,$/;"	f	file:	signature:(struct input_event *result, Gpm_Event *event, struct frame *f)
term_mouse_movement	term.c	/^term_mouse_movement (struct frame *frame, Gpm_Event *event)$/;"	f	file:	signature:(struct frame *frame, Gpm_Event *event)
term_mouse_moveto	term.c	/^term_mouse_moveto (int x, int y)$/;"	f	signature:(int x, int y)
term_mouse_moveto	termhooks.h	/^extern void term_mouse_moveto (int, int);$/;"	p	signature:(int, int)
term_mouse_position	term.c	/^term_mouse_position (struct frame **fp, int insist, Lisp_Object *bar_window,$/;"	f	file:	signature:(struct frame **fp, int insist, Lisp_Object *bar_window, enum scroll_bar_part *part, Lisp_Object *x, Lisp_Object *y, Time *timeptr)
term_ntproc	w32.c	/^term_ntproc (int ignored)$/;"	f	signature:(int ignored)
term_ntproc	w32.h	/^extern void term_ntproc (int);$/;"	p	signature:(int)
term_timers	w32.h	/^extern void term_timers (void);$/;"	p	signature:(void)
term_timers	w32proc.c	/^term_timers (void)$/;"	f	signature:(void)
term_w32select	w32select.c	/^term_w32select (void)$/;"	f	signature:(void)
term_w32select	w32select.h	/^extern void term_w32select (void);$/;"	p	signature:(void)
term_winsock	w32.c	/^BOOL term_winsock (void);$/;"	p	file:	signature:(void)
term_winsock	w32.c	/^term_winsock (void)$/;"	f	signature:(void)
term_winsock	w32proc.c	/^extern BOOL term_winsock (void);$/;"	p	file:	signature:(void)
test	fns.c	/^  (Lisp_Object name, Lisp_Object test, Lisp_Object hash)$/;"	v
test	lisp.h	/^  struct hash_table_test test;$/;"	m	struct:Lisp_Hash_Table	typeref:struct:Lisp_Hash_Table::hash_table_test	access:public
test_modifier_support	w32fns.c	/^test_modifier_support (unsigned int wparam)$/;"	f	file:	signature:(unsigned int wparam)
test_setjmp	alloc.c	/^test_setjmp (void)$/;"	f	file:	signature:(void)
test_undefined	keyboard.c	/^test_undefined (Lisp_Object binding)$/;"	f	file:	signature:(Lisp_Object binding)
text	buffer.h	/^  struct buffer_text *text;$/;"	m	struct:buffer	typeref:struct:buffer::buffer_text	access:public
text	term.c	/^  char **text;$/;"	m	struct:tty_menu_struct	file:	access:public
textget	intervals.c	/^textget (Lisp_Object plist, register Lisp_Object prop)$/;"	f	signature:(Lisp_Object plist, register Lisp_Object prop)
textget	intervals.h	/^extern Lisp_Object textget (Lisp_Object, Lisp_Object);$/;"	p	signature:(Lisp_Object, Lisp_Object)
textprop_rec	fns.c	/^struct textprop_rec$/;"	s	file:
textprop_rec::argnum	fns.c	/^  ptrdiff_t argnum;		\/* refer to ARGS (arguments of `concat') *\/$/;"	m	struct:textprop_rec	file:	access:public
textprop_rec::from	fns.c	/^  ptrdiff_t from;		\/* refer to ARGS[argnum] (argument string) *\/$/;"	m	struct:textprop_rec	file:	access:public
textprop_rec::to	fns.c	/^  ptrdiff_t to;			\/* refer to VAL (the target string) *\/$/;"	m	struct:textprop_rec	file:	access:public
TEXT_AREA	dispextern.h	/^  TEXT_AREA,$/;"	e	enum:glyph_row_area
text_cols	frame.h	/^  int text_cols, text_lines;$/;"	m	struct:frame	access:public
text_cursor	nsterm.h	/^  Cursor text_cursor;$/;"	m	struct:ns_output	access:public
text_cursor	w32term.h	/^  Cursor text_cursor;$/;"	m	struct:w32_output	access:public
text_cursor	xterm.h	/^  Cursor text_cursor;$/;"	m	struct:x_output	access:public
text_cursor_kinds	dispextern.h	/^enum text_cursor_kinds$/;"	g
text_extents	font.h	/^  void (*text_extents) (struct font *font,$/;"	m	struct:font_driver	access:public
text_height	frame.h	/^  int text_width, text_height;$/;"	m	struct:frame	access:public
text_lines	frame.h	/^  int text_cols, text_lines;$/;"	m	struct:frame	access:public
text_outside_line_unchanged_p	xdisp.c	/^text_outside_line_unchanged_p (struct window *w,$/;"	f	file:	signature:(struct window *w, ptrdiff_t start, ptrdiff_t end)
text_pos	dispextern.h	/^struct text_pos$/;"	s
text_pos::bytepos	dispextern.h	/^  ptrdiff_t bytepos;$/;"	m	struct:text_pos	access:public
text_pos::charpos	dispextern.h	/^  ptrdiff_t charpos;$/;"	m	struct:text_pos	access:public
TEXT_POS_EQUAL_P	dispextern.h	243;"	d
TEXT_PROPERTY_APPEND	textprop.c	/^  TEXT_PROPERTY_APPEND$/;"	e	enum:property_set_type	file:
text_property_list	intervals.h	/^Lisp_Object text_property_list (Lisp_Object, Lisp_Object, Lisp_Object,$/;"	p	signature:(Lisp_Object, Lisp_Object, Lisp_Object, Lisp_Object)
text_property_list	textprop.c	/^text_property_list (Lisp_Object object, Lisp_Object start, Lisp_Object end, Lisp_Object prop)$/;"	f	signature:(Lisp_Object object, Lisp_Object start, Lisp_Object end, Lisp_Object prop)
TEXT_PROPERTY_PREPEND	textprop.c	/^  TEXT_PROPERTY_PREPEND,$/;"	e	enum:property_set_type	file:
TEXT_PROPERTY_REPLACE	textprop.c	/^  TEXT_PROPERTY_REPLACE,$/;"	e	enum:property_set_type	file:
text_property_stickiness	intervals.h	/^extern int text_property_stickiness (Lisp_Object prop, Lisp_Object pos,$/;"	p	signature:(Lisp_Object prop, Lisp_Object pos, Lisp_Object buffer)
text_property_stickiness	textprop.c	/^text_property_stickiness (Lisp_Object prop, Lisp_Object pos, Lisp_Object buffer)$/;"	f	signature:(Lisp_Object prop, Lisp_Object pos, Lisp_Object buffer)
TEXT_PROP_DISTANCE_LIMIT	xdisp.c	551;"	d	file:
TEXT_PROP_MEANS_INVISIBLE	intervals.h	227;"	d
text_quoting_flag	globals.h	1045;"	d
text_quoting_style	doc.c	/^text_quoting_style (void)$/;"	f	signature:(void)
text_quoting_style	lisp.h	/^enum text_quoting_style$/;"	g
text_quoting_style	lisp.h	/^extern enum text_quoting_style text_quoting_style (void);$/;"	p	signature:(void)
text_read_only	textprop.c	/^text_read_only (Lisp_Object propval)$/;"	f	file:	signature:(Lisp_Object propval)
text_scnptr	unexaix.c	/^static off_t text_scnptr;$/;"	v	file:
text_seg_lowest_offset	unexmacosx.c	/^static unsigned long text_seg_lowest_offset = 0x10000000;$/;"	v	file:
text_width	frame.h	/^  int text_width, text_height;$/;"	m	struct:frame	access:public
TF_hazeltine	termchar.h	/^  int TF_hazeltine;             \/* termcap hz flag. *\/$/;"	m	struct:tty_display_info	access:public
TF_insmode_motion	termchar.h	/^  int TF_insmode_motion;        \/* termcap mi flag: can move while in insert mode. *\/$/;"	m	struct:tty_display_info	access:public
TF_standout_motion	termchar.h	/^  int TF_standout_motion;       \/* termcap mi flag: can move while in standout mode. *\/$/;"	m	struct:tty_display_info	access:public
TF_teleray	termchar.h	/^  int TF_teleray;               \/* termcap xt flag: many weird consequences.$/;"	m	struct:tty_display_info	access:public
TF_underscore	termchar.h	/^  int TF_underscore;            \/* termcap ul flag: _ underlines if over-struck on$/;"	m	struct:tty_display_info	access:public
tgetent	termcap.c	/^tgetent (char *bp, const char *name)$/;"	f	signature:(char *bp, const char *name)
tgetent	tparam.h	/^int tgetent (char *, const char *);$/;"	p	signature:(char *, const char *)
tgetflag	termcap.c	/^tgetflag (const char *cap)$/;"	f	signature:(const char *cap)
tgetflag	tparam.h	/^int tgetflag (const char *);$/;"	p	signature:(const char *)
tgetnum	termcap.c	/^tgetnum (const char *cap)$/;"	f	signature:(const char *cap)
tgetnum	tparam.h	/^int tgetnum (const char *);$/;"	p	signature:(const char *)
tgetst1	termcap.c	/^static char *tgetst1 (char *ptr, char **area);$/;"	p	file:	signature:(char *ptr, char **area)
tgetst1	termcap.c	/^tgetst1 (char *ptr, char **area)$/;"	f	file:	signature:(char *ptr, char **area)
tgetstr	termcap.c	/^tgetstr (const char *cap, char **area)$/;"	f	signature:(const char *cap, char **area)
tgetstr	tparam.h	/^char *tgetstr (const char *, char **);$/;"	p	signature:(const char *, char **)
tgoto	tparam.c	/^tgoto (const char *cm, int hpos, int vpos)$/;"	f	signature:(const char *cm, int hpos, int vpos)
tgoto	tparam.h	/^char *tgoto (const char *, int, int);$/;"	p	signature:(const char *, int, int)
tgoto_buf	tparam.c	/^static char tgoto_buf[50];$/;"	v	file:
thaw_buffer_relocation	search.c	/^thaw_buffer_relocation (void)$/;"	f	file:	signature:(void)
the_free_fn	w32heap.c	/^free_fn the_free_fn;$/;"	v
the_malloc_fn	w32heap.c	/^malloc_fn the_malloc_fn;$/;"	v
the_realloc_fn	w32heap.c	/^realloc_fn the_realloc_fn;$/;"	v
THIN_SPACE_WIDTH	xdisp.c	790;"	d	file:
this	keymap.c	/^  Lisp_Object definition, this, last;$/;"	m	struct:where_is_internal_data	file:	access:public
thislevelstart	syntax.c	/^    ptrdiff_t thislevelstart;$/;"	m	struct:lisp_parse_state	file:	access:public
thisseq	keymap.c	/^  Lisp_Object maps, tail, thisseq;$/;"	m	struct:accessible_keymaps_data	file:	access:public
this_command_keys	keyboard.c	/^Lisp_Object this_command_keys;$/;"	v
this_command_key_count	keyboard.c	/^ptrdiff_t this_command_key_count;$/;"	v
this_line_buffer	xdisp.c	/^static struct buffer *this_line_buffer;$/;"	v	typeref:struct:buffer	file:
this_line_end_pos	xdisp.c	/^static struct text_pos this_line_end_pos;$/;"	v	typeref:struct:text_pos	file:
this_line_min_pos	xdisp.c	/^static struct text_pos this_line_min_pos;$/;"	v	typeref:struct:text_pos	file:
this_line_pixel_height	xdisp.c	/^static int this_line_pixel_height;$/;"	v	file:
this_line_start_pos	xdisp.c	/^static struct text_pos this_line_start_pos;$/;"	v	typeref:struct:text_pos	file:
this_line_start_x	xdisp.c	/^static int this_line_start_x;$/;"	v	file:
this_line_vpos	xdisp.c	/^static int this_line_vpos;$/;"	v	file:
this_line_y	xdisp.c	/^static int this_line_y;$/;"	v	file:
this_single_command_key_start	keyboard.c	/^static ptrdiff_t this_single_command_key_start;$/;"	v	file:
thr	w32notify.c	/^  HANDLE thr;		\/* handle to the thread that watches *\/$/;"	m	struct:notification	file:	access:public
thrd	w32.h	/^  HANDLE              thrd;$/;"	m	struct:_child_process	access:public
thread	process.c	/^  struct thread_state *thread;$/;"	m	struct:fd_callback_data	typeref:struct:fd_callback_data::thread_state	file:	access:public
thread	process.h	/^    Lisp_Object thread;$/;"	m	struct:Lisp_Process	access:public
thread	thread.c	/^  (Lisp_Object thread, Lisp_Object error_symbol, Lisp_Object data)$/;"	v
THREADP	thread.h	/^THREADP (Lisp_Object a)$/;"	f	signature:(Lisp_Object a)
THREADS_ENABLED	config.h	1568;"	d
thread_alive_p	thread.c	44;"	d	file:
thread_backtrace_buffer	sysdep.c	/^static void *thread_backtrace_buffer[BACKTRACE_LIMIT_MAX + 1];$/;"	v	file:
thread_backtrace_npointers	sysdep.c	/^static int thread_backtrace_npointers;$/;"	v	file:
thread_check_current_buffer	thread.c	/^thread_check_current_buffer (struct buffer *buffer)$/;"	f	signature:(struct buffer *buffer)
thread_check_current_buffer	thread.h	/^bool thread_check_current_buffer (struct buffer *);$/;"	p	signature:(struct buffer *)
thread_condvar	thread.h	/^  sys_cond_t thread_condvar;$/;"	m	struct:thread_state	access:public
thread_creation_function	systhread.h	/^typedef void *(thread_creation_function) (void *);$/;"	t
THREAD_H	thread.h	20;"	d
thread_id	thread.h	/^  sys_thread_t thread_id;$/;"	m	struct:thread_state	access:public
thread_join_callback	thread.c	/^thread_join_callback (void *arg)$/;"	f	file:	signature:(void *arg)
thread_select	thread.c	/^thread_select (select_func *func, int max_fds, fd_set *rfds,$/;"	f	signature:(select_func *func, int max_fds, fd_set *rfds, fd_set *wfds, fd_set *efds, struct timespec *timeout, sigset_t *sigmask)
thread_select	thread.h	/^int thread_select  (select_func *func, int max_fds, fd_set *rfds,$/;"	p	signature:(select_func *func, int max_fds, fd_set *rfds, fd_set *wfds, fd_set *efds, struct timespec *timeout, sigset_t *sigmask)
thread_signal_callback	thread.c	/^thread_signal_callback (void *arg)$/;"	f	file:	signature:(void *arg)
thread_start_address	systhread.c	/^static thread_creation_function *thread_start_address;$/;"	v	file:
thread_state	thread.h	/^struct thread_state$/;"	s
thread_state::error_data	thread.h	/^  Lisp_Object error_data;$/;"	m	struct:thread_state	access:public
thread_state::error_symbol	thread.h	/^  Lisp_Object error_symbol;$/;"	m	struct:thread_state	access:public
thread_state::event_object	thread.h	/^  Lisp_Object event_object;$/;"	m	struct:thread_state	access:public
thread_state::function	thread.h	/^  Lisp_Object function;$/;"	m	struct:thread_state	access:public
thread_state::header	thread.h	/^  struct vectorlike_header header;$/;"	m	struct:thread_state	typeref:struct:thread_state::vectorlike_header	access:public
thread_state::m_catchlist	thread.h	/^  struct catchtag *m_catchlist;$/;"	m	struct:thread_state	typeref:struct:thread_state::catchtag	access:public
thread_state::m_current_buffer	thread.h	/^  struct buffer *m_current_buffer;$/;"	m	struct:thread_state	typeref:struct:thread_state::buffer	access:public
thread_state::m_handlerlist	thread.h	/^  struct handler *m_handlerlist;$/;"	m	struct:thread_state	typeref:struct:thread_state::handler	access:public
thread_state::m_handlerlist_sentinel	thread.h	/^  struct handler *m_handlerlist_sentinel;$/;"	m	struct:thread_state	typeref:struct:thread_state::handler	access:public
thread_state::m_last_thing_searched	thread.h	/^  Lisp_Object m_last_thing_searched;$/;"	m	struct:thread_state	access:public
thread_state::m_lisp_eval_depth	thread.h	/^  EMACS_INT m_lisp_eval_depth;$/;"	m	struct:thread_state	access:public
thread_state::m_re_match_object	thread.h	/^  Lisp_Object m_re_match_object;$/;"	m	struct:thread_state	access:public
thread_state::m_saved_last_thing_searched	thread.h	/^  Lisp_Object m_saved_last_thing_searched;$/;"	m	struct:thread_state	access:public
thread_state::m_saved_search_regs	thread.h	/^  struct re_registers m_saved_search_regs;$/;"	m	struct:thread_state	typeref:struct:thread_state::re_registers	access:public
thread_state::m_search_regs	thread.h	/^  struct re_registers m_search_regs;$/;"	m	struct:thread_state	typeref:struct:thread_state::re_registers	access:public
thread_state::m_search_regs_saved	thread.h	/^  bool m_search_regs_saved;$/;"	m	struct:thread_state	access:public
thread_state::m_specpdl	thread.h	/^  union specbinding *m_specpdl;$/;"	m	struct:thread_state	typeref:union:thread_state::specbinding	access:public
thread_state::m_specpdl_ptr	thread.h	/^  union specbinding *m_specpdl_ptr;$/;"	m	struct:thread_state	typeref:union:thread_state::specbinding	access:public
thread_state::m_specpdl_size	thread.h	/^  ptrdiff_t m_specpdl_size;$/;"	m	struct:thread_state	access:public
thread_state::m_stack_bottom	thread.h	/^  char *m_stack_bottom;$/;"	m	struct:thread_state	access:public
thread_state::m_waiting_for_input	thread.h	/^  bool m_waiting_for_input;$/;"	m	struct:thread_state	access:public
thread_state::m_waiting_for_user_input_p	thread.h	/^  int m_waiting_for_user_input_p;$/;"	m	struct:thread_state	access:public
thread_state::name	thread.h	/^  Lisp_Object name;$/;"	m	struct:thread_state	access:public
thread_state::next_thread	thread.h	/^  struct thread_state *next_thread;$/;"	m	struct:thread_state	typeref:struct:thread_state::thread_state	access:public
thread_state::not_holding_lock	thread.h	/^  int not_holding_lock;$/;"	m	struct:thread_state	access:public
thread_state::stack_top	thread.h	/^  char *stack_top;$/;"	m	struct:thread_state	access:public
thread_state::thread_condvar	thread.h	/^  sys_cond_t thread_condvar;$/;"	m	struct:thread_state	access:public
thread_state::thread_id	thread.h	/^  sys_thread_t thread_id;$/;"	m	struct:thread_state	access:public
thread_state::wait_condvar	thread.h	/^  sys_cond_t *wait_condvar;$/;"	m	struct:thread_state	access:public
tick	process.h	/^    EMACS_INT tick;$/;"	m	struct:Lisp_Process	access:public
ticks_now	w32proc.c	/^static ULONGLONG ticks_now;$/;"	v	file:
TIFFClientOpen	image.c	7037;"	d	file:
TIFFClientOpen	image.c	7046;"	d	file:
TIFFClose	image.c	7038;"	d	file:
TIFFClose	image.c	7047;"	d	file:
TIFFGetField	image.c	7039;"	d	file:
TIFFGetField	image.c	7048;"	d	file:
TIFFOpen	image.c	7040;"	d	file:
TIFFOpen	image.c	7049;"	d	file:
TIFFReadRGBAImage	image.c	7041;"	d	file:
TIFFReadRGBAImage	image.c	7050;"	d	file:
TIFFSetDirectory	image.c	7042;"	d	file:
TIFFSetDirectory	image.c	7051;"	d	file:
TIFFSetErrorHandler	image.c	7043;"	d	file:
TIFFSetErrorHandler	image.c	7052;"	d	file:
TIFFSetWarningHandler	image.c	7044;"	d	file:
TIFFSetWarningHandler	image.c	7053;"	d	file:
TIFF_ALGORITHM	image.c	/^  TIFF_ALGORITHM,$/;"	e	enum:tiff_keyword_index	file:
TIFF_ASCENT	image.c	/^  TIFF_ASCENT,$/;"	e	enum:tiff_keyword_index	file:
TIFF_BACKGROUND	image.c	/^  TIFF_BACKGROUND,$/;"	e	enum:tiff_keyword_index	file:
tiff_close_memory	image.c	/^tiff_close_memory (thandle_t data)$/;"	f	file:	signature:(thandle_t data)
TIFF_DATA	image.c	/^  TIFF_DATA,$/;"	e	enum:tiff_keyword_index	file:
tiff_error_handler	image.c	/^tiff_error_handler (const char *title, const char *format, va_list ap)$/;"	f	file:	signature:(const char *title, const char *format, va_list ap)
TIFF_FILE	image.c	/^  TIFF_FILE,$/;"	e	enum:tiff_keyword_index	file:
tiff_format	image.c	/^static const struct image_keyword tiff_format[TIFF_LAST] =$/;"	v	typeref:struct:image_keyword	file:
tiff_handler	image.c	/^tiff_handler (const char *log_format, const char *title,$/;"	f	signature:(const char *log_format, const char *title, const char *format, va_list ap)
TIFF_HEURISTIC_MASK	image.c	/^  TIFF_HEURISTIC_MASK,$/;"	e	enum:tiff_keyword_index	file:
tiff_image_p	image.c	/^static bool tiff_image_p (Lisp_Object object);$/;"	p	file:	signature:(Lisp_Object object)
tiff_image_p	image.c	/^tiff_image_p (Lisp_Object object)$/;"	f	file:	signature:(Lisp_Object object)
TIFF_INDEX	image.c	/^  TIFF_INDEX,$/;"	e	enum:tiff_keyword_index	file:
tiff_keyword_index	image.c	/^enum tiff_keyword_index$/;"	g	file:
TIFF_LAST	image.c	/^  TIFF_LAST$/;"	e	enum:tiff_keyword_index	file:
tiff_load	image.c	/^static bool tiff_load (struct frame *f, struct image *img);$/;"	p	file:	signature:(struct frame *f, struct image *img)
tiff_load	image.c	/^tiff_load (struct frame *f, struct image *img)$/;"	f	file:	signature:(struct frame *f, struct image *img)
TIFF_MARGIN	image.c	/^  TIFF_MARGIN,$/;"	e	enum:tiff_keyword_index	file:
TIFF_MASK	image.c	/^  TIFF_MASK,$/;"	e	enum:tiff_keyword_index	file:
tiff_memory_source	image.c	/^tiff_memory_source;$/;"	t	typeref:struct:__anon84	file:
tiff_mmap_memory	image.c	/^tiff_mmap_memory (thandle_t data, tdata_t *pbase, toff_t *psize)$/;"	f	file:	signature:(thandle_t data, tdata_t *pbase, toff_t *psize)
tiff_read_from_memory	image.c	/^tiff_read_from_memory (thandle_t data, tdata_t buf, tsize_t size)$/;"	f	file:	signature:(thandle_t data, tdata_t buf, tsize_t size)
TIFF_RELIEF	image.c	/^  TIFF_RELIEF,$/;"	e	enum:tiff_keyword_index	file:
tiff_seek_in_memory	image.c	/^tiff_seek_in_memory (thandle_t data, toff_t off, int whence)$/;"	f	file:	signature:(thandle_t data, toff_t off, int whence)
tiff_size_of_memory	image.c	/^tiff_size_of_memory (thandle_t data)$/;"	f	file:	signature:(thandle_t data)
TIFF_TYPE	image.c	/^  TIFF_TYPE,$/;"	e	enum:tiff_keyword_index	file:
tiff_type	image.c	/^static struct image_type tiff_type =$/;"	v	typeref:struct:image_type	file:
tiff_unmap_memory	image.c	/^tiff_unmap_memory (thandle_t data, tdata_t base, toff_t size)$/;"	f	file:	signature:(thandle_t data, tdata_t base, toff_t size)
tiff_warning_handler	image.c	/^tiff_warning_handler (const char *title, const char *format, va_list ap)$/;"	f	file:	signature:(const char *title, const char *format, va_list ap)
tiff_write_from_memory	image.c	/^tiff_write_from_memory (thandle_t data, tdata_t buf, tsize_t size)$/;"	f	file:	signature:(thandle_t data, tdata_t buf, tsize_t size)
tigetstr	tparam.h	/^char *tigetstr(const char *);$/;"	p	signature:(const char *)
time	xterm.h	/^  Time time;$/;"	m	struct:selection_input_event	access:public
timeout	thread.c	/^  struct timespec *timeout;$/;"	m	struct:select_args	typeref:struct:select_args::timespec	file:	access:public
timeout	w32fns.c	/^  (Lisp_Object string, Lisp_Object frame, Lisp_Object parms, Lisp_Object timeout, Lisp_Object dx, Lisp_Object dy)$/;"	v
timeout	xfns.c	/^  (Lisp_Object string, Lisp_Object frame, Lisp_Object parms, Lisp_Object timeout, Lisp_Object dx, Lisp_Object dy)$/;"	v
timerfd	atimer.c	/^enum { timerfd = -1 };$/;"	e	enum:__anon1	file:
timerfd	atimer.c	/^static int timerfd;$/;"	v	file:
timerfd_callback	atimer.c	/^timerfd_callback (int fd, void *arg)$/;"	f	signature:(int fd, void *arg)
timerfd_callback	atimer.h	/^void timerfd_callback (int, void *);$/;"	p	signature:(int, void *)
timerid	gtkutil.c	/^  guint timerid;$/;"	m	struct:xg_dialog_data	file:	access:public
timers_run	keyboard.c	/^unsigned timers_run;$/;"	v
timer_check	keyboard.c	/^timer_check (void)$/;"	f	signature:(void)
timer_check	keyboard.h	/^extern struct timespec timer_check (void);$/;"	p	signature:(void)
timer_check_2	keyboard.c	/^timer_check_2 (Lisp_Object timers, Lisp_Object idle_timers)$/;"	f	file:	signature:(Lisp_Object timers, Lisp_Object idle_timers)
TIMER_EVENT	termhooks.h	/^  TIMER_EVENT,                  \/* A timer fired.  *\/$/;"	e	enum:event_kind
timer_getoverrun	profiler.c	225;"	d	file:
timer_idleness_start_time	keyboard.c	/^static struct timespec timer_idleness_start_time;$/;"	v	typeref:struct:timespec	file:
timer_last_idleness_start_time	keyboard.c	/^static struct timespec timer_last_idleness_start_time;$/;"	v	typeref:struct:timespec	file:
timer_loop	w32proc.c	/^timer_loop (LPVOID arg)$/;"	f	file:	signature:(LPVOID arg)
timer_resume_idle	keyboard.c	/^static void timer_resume_idle (void);$/;"	p	file:	signature:(void)
timer_resume_idle	keyboard.c	/^timer_resume_idle (void)$/;"	f	file:	signature:(void)
TIMER_SETTIME_RUNNING	profiler.c	/^    TIMER_SETTIME_RUNNING,$/;"	e	enum:profiler_cpu_running	file:
timer_start_idle	keyboard.c	/^static void timer_start_idle (void);$/;"	p	file:	signature:(void)
timer_start_idle	keyboard.c	/^timer_start_idle (void)$/;"	f	file:	signature:(void)
timer_stop_idle	keyboard.c	/^static void timer_stop_idle (void);$/;"	p	file:	signature:(void)
timer_stop_idle	keyboard.c	/^timer_stop_idle (void)$/;"	f	file:	signature:(void)
timer_thread	w32proc.c	/^  HANDLE timer_thread;$/;"	m	struct:itimer_data	file:	access:public
TIMER_TICKS_PER_SEC	w32proc.c	299;"	d	file:
timespec_valid_p	systime.h	/^timespec_valid_p (struct timespec t)$/;"	f	signature:(struct timespec t)
timestamp	dispextern.h	/^  struct timespec timestamp;$/;"	m	struct:image	typeref:struct:image::timespec	access:public
timestamp	termhooks.h	/^  Time timestamp;$/;"	m	struct:input_event	access:public
timestamp	w32.c	/^  DWORD     timestamp;$/;"	m	struct:volume_info_data	file:	access:public
timestamp_file_system	fileio.c	/^static dev_t timestamp_file_system;$/;"	v	file:
timeval	editfns.c	/^  (Lisp_Object format_string, Lisp_Object timeval, Lisp_Object zone)$/;"	v
timeval_to_Time	term.c	/^timeval_to_Time (struct timeval const *t)$/;"	f	file:	signature:(struct timeval const *t)
timeval_to_timespec	sysdep.c	/^timeval_to_timespec (struct timeval t)$/;"	f	file:	signature:(struct timeval t)
time_add	editfns.c	/^time_add (struct lisp_time ta, struct lisp_time tb)$/;"	f	file:	signature:(struct lisp_time ta, struct lisp_time tb)
time_arith	editfns.c	/^time_arith (Lisp_Object a, Lisp_Object b,$/;"	f	file:	signature:(Lisp_Object a, Lisp_Object b, struct lisp_time (*op) (struct lisp_time, struct lisp_time))
time_error_value	fileio.c	/^time_error_value (int errnum)$/;"	f	file:	signature:(int errnum)
time_from_jiffies	sysdep.c	/^time_from_jiffies (unsigned long long tval, long hz)$/;"	f	file:	signature:(unsigned long long tval, long hz)
time_object	xselect.c	/^  (Lisp_Object selection, Lisp_Object time_object, Lisp_Object terminal)$/;"	v
time_overflow	editfns.c	/^time_overflow (void)$/;"	f	signature:(void)
time_overflow	lisp.h	/^extern _Noreturn void time_overflow (void);$/;"	p	signature:(void)
time_stamp	xselect.c	/^   Lisp_Object time_stamp, Lisp_Object terminal)$/;"	v
time_subtract	editfns.c	/^time_subtract (struct lisp_time ta, struct lisp_time tb)$/;"	f	file:	signature:(struct lisp_time ta, struct lisp_time tb)
Time_to_position	keyboard.c	/^Time_to_position (Time encoded_pos)$/;"	f	file:	signature:(Time encoded_pos)
TIME_T_IS_SIGNED	config.h	1571;"	d
TIME_T_MAX	editfns.c	1484;"	d	file:
TIME_T_MIN	editfns.c	1481;"	d	file:
TIME_WITH_SYS_TIME	config.h	1574;"	d
tip_frame	w32fns.c	/^Lisp_Object tip_frame;$/;"	v
tip_frame	xfns.c	/^Lisp_Object tip_frame;$/;"	v
tip_timer	w32fns.c	/^Lisp_Object tip_timer;$/;"	v
tip_timer	xfns.c	/^static Lisp_Object tip_timer;$/;"	v	file:
tip_window	w32fns.c	/^Window tip_window;$/;"	v
tip_window	xfns.c	/^Window tip_window;$/;"	v
title	frame.h	/^  Lisp_Object title;$/;"	m	struct:frame	access:public
title	xwidget.c	/^   Lisp_Object title, Lisp_Object width, Lisp_Object height,$/;"	v
title	xwidget.h	/^  Lisp_Object title;$/;"	m	struct:xwidget	access:public
titlebar_height	nsterm.h	/^  int titlebar_height;$/;"	m	struct:ns_output	access:public
TITLEBAR_INFO	w32fns.c	/^typedef TITLEBARINFO TITLEBAR_INFO;$/;"	t	file:
TITLEBAR_INFO	w32fns.c	/^} TITLEBAR_INFO, *PTITLEBAR_INFO;$/;"	t	typeref:struct:__anon73	file:
titlecase_char_table	casefiddle.c	/^  Lisp_Object titlecase_char_table;$/;"	m	struct:casing_context	file:	access:public
TMEM	intervals.c	53;"	d	file:
TMEM	textprop.c	30;"	d	file:
TME_LEAVE	w32term.h	788;"	d
tm_diff	editfns.c	/^static int tm_diff (struct tm *, struct tm *);$/;"	p	file:	signature:(struct tm *, struct tm *)
tm_diff	editfns.c	/^tm_diff (struct tm *a, struct tm *b)$/;"	f	file:	signature:(struct tm *a, struct tm *b)
tm_gmtoff	editfns.c	/^static long int tm_gmtoff (struct tm *);$/;"	p	file:	signature:(struct tm *)
tm_gmtoff	editfns.c	/^tm_gmtoff (struct tm *a)$/;"	f	file:	signature:(struct tm *a)
TM_YEAR_BASE	editfns.c	65;"	d	file:
TN_max_colors	termchar.h	/^  int TN_max_colors;            \/* "Co" -- number of colors.  *\/$/;"	m	struct:tty_display_info	access:public
TN_no_color_video	termchar.h	/^  int TN_no_color_video;$/;"	m	struct:tty_display_info	access:public
to	charset.c	/^    unsigned from, to;$/;"	m	struct:charset_map_entries::__anon80	file:	access:public
to	composite.c	/^  (Lisp_Object from, Lisp_Object to, Lisp_Object font_object, Lisp_Object string)$/;"	v
to	dispextern.h	/^    struct { int from, to; } cmp;$/;"	m	struct:glyph::__anon107::__anon108	access:public
to	dispextern.h	/^  int from, to;$/;"	m	struct:composition_it	access:public
to	fns.c	/^  ptrdiff_t to;			\/* refer to VAL (the target string) *\/$/;"	m	struct:textprop_rec	file:	access:public
to	font.c	/^  (Lisp_Object font_object, Lisp_Object from, Lisp_Object to,$/;"	v
to	indent.c	/^  (Lisp_Object from, Lisp_Object frompos, Lisp_Object to, Lisp_Object topos,$/;"	v
to	syntax.c	/^  (Lisp_Object from, Lisp_Object to, Lisp_Object targetdepth,$/;"	v
to	xdisp.c	/^  (Lisp_Object from, Lisp_Object to, Lisp_Object object)$/;"	v
to	xdisp.c	/^  (Lisp_Object window, Lisp_Object from, Lisp_Object to, Lisp_Object x_limit,$/;"	v
to	xfaces.c	/^  (Lisp_Object from, Lisp_Object to, Lisp_Object frame, Lisp_Object new_frame)$/;"	v
tochar	editfns.c	/^  (Lisp_Object start, Lisp_Object end, Lisp_Object fromchar, Lisp_Object tochar, Lisp_Object noundo)$/;"	v
toggle_invisible_pointer_hook	termhooks.h	/^  void (*toggle_invisible_pointer_hook) (struct frame *f, bool invisible);$/;"	m	struct:terminal	access:public
toggle_visible_pointer	xterm.h	/^  void (*toggle_visible_pointer) (struct frame *, bool);$/;"	m	struct:x_display_info	access:public
TOLOWER	regex.c	386;"	d	file:
TOLOWER	regex.c	388;"	d	file:
toolbar	nsterm.h	/^  EmacsToolbar *toolbar;$/;"	m	struct:ns_output	access:public
toolbar_bottom_height	xterm.h	/^  int toolbar_top_height, toolbar_bottom_height;$/;"	m	struct:x_output	access:public
toolbar_height	nsterm.h	/^  int toolbar_height;$/;"	m	struct:ns_output	access:public
toolbar_in_hbox	xterm.h	/^  bool_bf toolbar_in_hbox : 1;$/;"	m	struct:x_output	access:public
toolbar_is_packed	xterm.h	/^  bool_bf toolbar_is_packed : 1;$/;"	m	struct:x_output	access:public
toolbar_left_width	xterm.h	/^  int toolbar_left_width, toolbar_right_width;$/;"	m	struct:x_output	access:public
toolbar_right_width	xterm.h	/^  int toolbar_left_width, toolbar_right_width;$/;"	m	struct:x_output	access:public
toolbar_set_orientation	gtkutil.c	4430;"	d	file:
toolbar_set_orientation	gtkutil.c	4433;"	d	file:
toolbar_top_height	xterm.h	/^  int toolbar_top_height, toolbar_bottom_height;$/;"	m	struct:x_output	access:public
toolbar_widget	xterm.h	/^  GtkWidget *toolbar_widget;$/;"	m	struct:x_output	access:public
TOOLKIT_LIBW	Makefile	/^TOOLKIT_LIBW=-lgtk-3 -lgdk-3 -lpangocairo-1.0 -lpango-1.0 -latk-1.0 -lcairo-gobject -lcairo -lgdk_pixbuf-2.0 -lgio-2.0 -lgobject-2.0 -lglib-2.0$/;"	m
toolkit_menubar_in_use	keyboard.c	/^toolkit_menubar_in_use (struct frame *f)$/;"	f	file:	signature:(struct frame *f)
toolkit_scroll_bar_interaction	xterm.c	/^static bool toolkit_scroll_bar_interaction;$/;"	v	file:
tooltip_reuse_hidden_frame	globals.h	1047;"	d
tool_bar_button_relief	globals.h	881;"	d
TOOL_BAR_EVENT	termhooks.h	/^  TOOL_BAR_EVENT,$/;"	e	enum:event_kind
TOOL_BAR_FACE_ID	dispextern.h	/^  TOOL_BAR_FACE_ID,$/;"	e	enum:face_id
tool_bar_height	frame.h	/^  int tool_bar_height;$/;"	m	struct:frame	access:public
tool_bar_height	xdisp.c	/^tool_bar_height (struct frame *f, int *n_rows, bool pixelwise)$/;"	f	file:	signature:(struct frame *f, int *n_rows, bool pixelwise)
TOOL_BAR_IMAGE_DISABLED_DESELECTED	dispextern.h	/^  TOOL_BAR_IMAGE_DISABLED_DESELECTED$/;"	e	enum:tool_bar_item_image
TOOL_BAR_IMAGE_DISABLED_SELECTED	dispextern.h	/^  TOOL_BAR_IMAGE_DISABLED_SELECTED,$/;"	e	enum:tool_bar_item_image
TOOL_BAR_IMAGE_ENABLED_DESELECTED	dispextern.h	/^  TOOL_BAR_IMAGE_ENABLED_DESELECTED,$/;"	e	enum:tool_bar_item_image
TOOL_BAR_IMAGE_ENABLED_SELECTED	dispextern.h	/^  TOOL_BAR_IMAGE_ENABLED_SELECTED,$/;"	e	enum:tool_bar_item_image
tool_bar_items	frame.h	/^  Lisp_Object tool_bar_items;$/;"	m	struct:frame	access:public
tool_bar_items	keyboard.c	/^tool_bar_items (Lisp_Object reuse, int *nitems)$/;"	f	signature:(Lisp_Object reuse, int *nitems)
tool_bar_items	lisp.h	/^extern Lisp_Object tool_bar_items (Lisp_Object, int *);$/;"	p	signature:(Lisp_Object, int *)
tool_bar_items_vector	keyboard.c	/^static Lisp_Object tool_bar_items_vector;$/;"	v	file:
TOOL_BAR_ITEM_BINDING	dispextern.h	/^  TOOL_BAR_ITEM_BINDING,$/;"	e	enum:tool_bar_item_idx
TOOL_BAR_ITEM_CAPTION	dispextern.h	/^  TOOL_BAR_ITEM_CAPTION,$/;"	e	enum:tool_bar_item_idx
TOOL_BAR_ITEM_ENABLED_P	dispextern.h	/^  TOOL_BAR_ITEM_ENABLED_P,$/;"	e	enum:tool_bar_item_idx
TOOL_BAR_ITEM_HELP	dispextern.h	/^  TOOL_BAR_ITEM_HELP,$/;"	e	enum:tool_bar_item_idx
tool_bar_item_idx	dispextern.h	/^enum tool_bar_item_idx$/;"	g
tool_bar_item_image	dispextern.h	/^enum tool_bar_item_image$/;"	g
TOOL_BAR_ITEM_IMAGES	dispextern.h	/^  TOOL_BAR_ITEM_IMAGES,$/;"	e	enum:tool_bar_item_idx
tool_bar_item_info	xdisp.c	/^tool_bar_item_info (struct frame *f, struct glyph *glyph, int *prop_idx)$/;"	f	file:	signature:(struct frame *f, struct glyph *glyph, int *prop_idx)
TOOL_BAR_ITEM_KEY	dispextern.h	/^  TOOL_BAR_ITEM_KEY,$/;"	e	enum:tool_bar_item_idx
TOOL_BAR_ITEM_LABEL	dispextern.h	/^  TOOL_BAR_ITEM_LABEL,$/;"	e	enum:tool_bar_item_idx
TOOL_BAR_ITEM_NSLOTS	dispextern.h	/^  TOOL_BAR_ITEM_NSLOTS$/;"	e	enum:tool_bar_item_idx
tool_bar_item_properties	keyboard.c	/^static Lisp_Object tool_bar_item_properties;$/;"	v	file:
TOOL_BAR_ITEM_RTL_IMAGE	dispextern.h	/^  TOOL_BAR_ITEM_RTL_IMAGE,$/;"	e	enum:tool_bar_item_idx
TOOL_BAR_ITEM_SELECTED_P	dispextern.h	/^  TOOL_BAR_ITEM_SELECTED_P,$/;"	e	enum:tool_bar_item_idx
TOOL_BAR_ITEM_TYPE	dispextern.h	/^  TOOL_BAR_ITEM_TYPE,$/;"	e	enum:tool_bar_item_idx
TOOL_BAR_ITEM_VERT_ONLY	dispextern.h	/^  TOOL_BAR_ITEM_VERT_ONLY,$/;"	e	enum:tool_bar_item_idx
tool_bar_lines	frame.h	/^  int tool_bar_lines;$/;"	m	struct:frame	access:public
tool_bar_max_label_size	globals.h	883;"	d
tool_bar_position	frame.h	/^  Lisp_Object tool_bar_position;$/;"	m	struct:frame	access:public
tool_bar_redisplayed	frame.h	/^  bool_bf tool_bar_redisplayed : 1;$/;"	m	struct:frame	access:public
tool_bar_resized	frame.h	/^  bool_bf tool_bar_resized : 1;$/;"	m	struct:frame	access:public
tool_bar_window	frame.h	/^  Lisp_Object tool_bar_window;$/;"	m	struct:frame	access:public
TOP	bytecode.c	311;"	d	file:
top	font.h	/^  int top;$/;"	m	struct:font_bitmap	access:public
top	w32term.h	/^  int top, left, width, height;$/;"	m	struct:scroll_bar	access:public
top	xterm.h	/^  int top, left, width, height;$/;"	m	struct:scroll_bar	access:public
topos	indent.c	/^  (Lisp_Object from, Lisp_Object frompos, Lisp_Object to, Lisp_Object topos,$/;"	v
TOP_CORNER	dispextern.h	3010;"	d
top_edge_cursor	nsterm.h	/^  Cursor top_edge_cursor;$/;"	m	struct:ns_output	access:public
top_edge_cursor	w32term.h	/^  Cursor top_edge_cursor;$/;"	m	struct:w32_output	access:public
top_edge_cursor	xterm.h	/^  Cursor top_edge_cursor;$/;"	m	struct:x_output	access:public
TOP_FAILURE_HANDLE	regex.c	1375;"	d	file:
top_frame	termchar.h	/^  Lisp_Object top_frame;        \/* The topmost frame on this tty. *\/$/;"	m	struct:tty_display_info	access:public
top_left_angle_bits	fringe.c	/^static unsigned short top_left_angle_bits[] = {$/;"	v	file:
top_left_corner_cursor	nsterm.h	/^  Cursor top_left_corner_cursor;$/;"	m	struct:ns_output	access:public
top_left_corner_cursor	w32term.h	/^  Cursor top_left_corner_cursor;$/;"	m	struct:w32_output	access:public
top_left_corner_cursor	xterm.h	/^  Cursor top_left_corner_cursor;$/;"	m	struct:x_output	access:public
top_level_1	keyboard.c	/^static Lisp_Object top_level_1 (Lisp_Object);$/;"	p	file:
top_level_1	keyboard.c	/^top_level_1 (Lisp_Object ignore)$/;"	f	file:	signature:(Lisp_Object ignore)
top_level_2	keyboard.c	/^top_level_2 (void)$/;"	f	file:	signature:(void)
top_line	window.c	/^  Lisp_Object left_col, top_line, total_cols, total_lines;$/;"	m	struct:saved_window	file:	access:public
top_line	window.h	/^    int top_line;$/;"	m	struct:window	access:public
top_pos	frame.h	/^  int left_pos, top_pos;$/;"	m	struct:frame	access:public
top_right_angle_bits	fringe.c	/^static unsigned short top_right_angle_bits[] = {$/;"	v	file:
top_right_corner_cursor	nsterm.h	/^  Cursor top_right_corner_cursor;$/;"	m	struct:ns_output	access:public
top_right_corner_cursor	w32term.h	/^  Cursor top_right_corner_cursor;$/;"	m	struct:w32_output	access:public
top_right_corner_cursor	xterm.h	/^  Cursor top_right_corner_cursor;$/;"	m	struct:x_output	access:public
top_srcdir	Makefile	/^top_srcdir = ..$/;"	m
tortoise	lisp.h	/^  Lisp_Object tortoise;$/;"	m	struct:for_each_tail_internal	access:public
totally_unblock_input	blockinput.h	/^extern void totally_unblock_input (void);$/;"	p	signature:(void)
totally_unblock_input	keyboard.c	/^totally_unblock_input (void)$/;"	f	signature:(void)
total_buffers	alloc.c	/^static EMACS_INT total_conses, total_markers, total_symbols, total_buffers;$/;"	v	file:
total_bytes_of_live_objects	alloc.c	/^total_bytes_of_live_objects (void)$/;"	f	file:	signature:(void)
total_cols	frame.h	/^  int total_cols, total_lines;$/;"	m	struct:frame	access:public
total_cols	window.c	/^  Lisp_Object left_col, top_line, total_cols, total_lines;$/;"	m	struct:saved_window	file:	access:public
total_cols	window.h	/^    int total_cols;$/;"	m	struct:window	access:public
total_conses	alloc.c	/^static EMACS_INT total_conses, total_markers, total_symbols, total_buffers;$/;"	v	file:
total_floats	alloc.c	/^static EMACS_INT total_free_floats, total_floats;$/;"	v	file:
total_free_conses	alloc.c	/^static EMACS_INT total_free_conses, total_free_markers, total_free_symbols;$/;"	v	file:
total_free_floats	alloc.c	/^static EMACS_INT total_free_floats, total_floats;$/;"	v	file:
total_free_intervals	alloc.c	/^static EMACS_INT total_free_intervals, total_intervals;$/;"	v	file:
total_free_markers	alloc.c	/^static EMACS_INT total_free_conses, total_free_markers, total_free_symbols;$/;"	v	file:
total_free_strings	alloc.c	/^static EMACS_INT total_strings, total_free_strings;$/;"	v	file:
total_free_symbols	alloc.c	/^static EMACS_INT total_free_conses, total_free_markers, total_free_symbols;$/;"	v	file:
total_free_vector_slots	alloc.c	/^static EMACS_INT total_vector_slots, total_free_vector_slots;$/;"	v	file:
total_intervals	alloc.c	/^static EMACS_INT total_free_intervals, total_intervals;$/;"	v	file:
total_keys	keyboard.c	/^static int total_keys;$/;"	v	file:
total_length	intervals.h	/^  ptrdiff_t total_length;       \/* Length of myself and both children.  *\/$/;"	m	struct:interval	access:public
TOTAL_LENGTH	intervals.h	98;"	d
total_lines	frame.h	/^  int total_cols, total_lines;$/;"	m	struct:frame	access:public
total_lines	window.c	/^  Lisp_Object left_col, top_line, total_cols, total_lines;$/;"	m	struct:saved_window	file:	access:public
total_lines	window.h	/^    int total_lines;$/;"	m	struct:window	access:public
total_markers	alloc.c	/^static EMACS_INT total_conses, total_markers, total_symbols, total_buffers;$/;"	v	file:
total_strings	alloc.c	/^static EMACS_INT total_strings, total_free_strings;$/;"	v	file:
total_string_bytes	alloc.c	/^static EMACS_INT total_string_bytes;$/;"	v	file:
total_symbols	alloc.c	/^static EMACS_INT total_conses, total_markers, total_symbols, total_buffers;$/;"	v	file:
total_vectors	alloc.c	/^static EMACS_INT total_vectors;$/;"	v	file:
total_vector_slots	alloc.c	/^static EMACS_INT total_vector_slots, total_free_vector_slots;$/;"	v	file:
towlower_l	sysdep.c	/^towlower_l (wint_t wc, locale_t loc)$/;"	f	file:	signature:(wint_t wc, locale_t loc)
towlower_l	sysdep.c	3806;"	d	file:
towlower_l	sysdep.c	3811;"	d	file:
to_unicode	coding.c	/^to_unicode (Lisp_Object str, Lisp_Object *buf)$/;"	f	signature:(Lisp_Object str, Lisp_Object *buf)
to_unicode	coding.h	/^extern wchar_t *to_unicode (Lisp_Object str, Lisp_Object *buf);$/;"	p	signature:(Lisp_Object str, Lisp_Object *buf)
tparam	terminfo.c	/^tparam (const char *string, char *outstring, int len,$/;"	f	signature:(const char *string, char *outstring, int len, int arg1, int arg2, int arg3, int arg4)
tparam	tparam.c	/^tparam (const char *string, char *outstring, int len,$/;"	f	signature:(const char *string, char *outstring, int len, int arg0, int arg1, int arg2, int arg3)
tparam	tparam.h	/^char *tparam (const char *, char *, int, int, int, int, int);$/;"	p	signature:(const char *, char *, int, int, int, int, int)
tparam1	tparam.c	/^static char *tparam1 (char const *string, char *outstring, int len,$/;"	p	file:	signature:(char const *string, char *outstring, int len, char *up, char *left, int *argp)
tparam1	tparam.c	/^tparam1 (const char *string, char *outstring, int len,$/;"	f	file:	signature:(const char *string, char *outstring, int len, char *up, char *left, register int *argp)
tparm	terminfo.c	/^extern char *tparm (const char *str, ...);$/;"	p	file:	signature:(const char *str, ...)
tputs	sysdep.c	/^extern void tputs (const char *, int, int (*)(int));$/;"	p	file:	signature:(const char *, int, int (*)(int))
tputs	termcap.c	/^tputs (register const char *str, int nlines, int (*outfun) (int))$/;"	f	signature:(register const char *str, int nlines, int (*outfun) (int))
tputs	tparam.h	/^void tputs (const char *, int, int (*) (int));$/;"	p	signature:(const char *, int, int (*) (int))
TRACE	dispextern.h	154;"	d
TRACE	dispextern.h	162;"	d
trace	dispnew.c	/^  char trace[512 + 100];$/;"	m	struct:redisplay_history	file:	access:public
TRACE0	xselect.c	64;"	d	file:
TRACE0	xselect.c	73;"	d	file:
TRACE1	xselect.c	66;"	d	file:
TRACE1	xselect.c	74;"	d	file:
TRACE2	xselect.c	68;"	d	file:
TRACE2	xselect.c	75;"	d	file:
TRACE3	xselect.c	70;"	d	file:
trace_move	xdisp.c	/^static bool trace_move;$/;"	v	file:
TRACE_MOVE	xdisp.c	650;"	d	file:
TRACE_MOVE	xdisp.c	652;"	d	file:
trace_redisplay_p	xdisp.c	/^bool trace_redisplay_p;$/;"	v
tracking_off	keyboard.c	/^tracking_off (Lisp_Object old_value)$/;"	f	file:	signature:(Lisp_Object old_value)
TRACKMOUSEEVENT	w32term.h	/^} TRACKMOUSEEVENT;$/;"	t	typeref:struct:tagTRACKMOUSEEVENT
TrackMouseEvent_Proc	w32fns.c	/^typedef BOOL (WINAPI * TrackMouseEvent_Proc)$/;"	t	file:
track_mouse_event_fn	w32fns.c	/^TrackMouseEvent_Proc track_mouse_event_fn = NULL;$/;"	v
track_mouse_window	w32fns.c	/^static HWND track_mouse_window;$/;"	v	file:
TRAILING_CODE_P	character.h	232;"	d
trailing_whitespace_p	xdisp.c	/^trailing_whitespace_p (ptrdiff_t charpos)$/;"	f	file:	signature:(ptrdiff_t charpos)
TRANSLATE	regex.c	1597;"	d	file:
translate	regex.h	/^  RE_TRANSLATE_TYPE translate;$/;"	m	struct:re_pattern_buffer	access:public
TRANSLATE	search.c	1138;"	d	file:
translate_char	character.c	/^translate_char (Lisp_Object table, int c)$/;"	f	signature:(Lisp_Object table, int c)
translate_char	character.h	/^extern int translate_char (Lisp_Object, int c);$/;"	p	signature:(Lisp_Object, int c)
transpose_markers	editfns.c	/^transpose_markers (ptrdiff_t start1, ptrdiff_t end1,$/;"	f	file:	signature:(ptrdiff_t start1, ptrdiff_t end1, ptrdiff_t start2, ptrdiff_t end2, ptrdiff_t start1_byte, ptrdiff_t end1_byte, ptrdiff_t start2_byte, ptrdiff_t end2_byte)
trapped_write	lisp.h	/^  ENUM_BF (symbol_trapped_write) trapped_write : 2;$/;"	m	struct:Lisp_Symbol	access:public
traverse_intervals	intervals.c	/^traverse_intervals (INTERVAL tree, ptrdiff_t position,$/;"	f	signature:(INTERVAL tree, ptrdiff_t position, void (*function) (INTERVAL, Lisp_Object), Lisp_Object arg)
traverse_intervals	intervals.h	/^extern void traverse_intervals (INTERVAL, ptrdiff_t,$/;"	p	signature:(INTERVAL, ptrdiff_t, void (*) (INTERVAL, Lisp_Object), Lisp_Object)
traverse_intervals_noorder	intervals.c	/^traverse_intervals_noorder (INTERVAL tree, void (*function) (INTERVAL, void *),$/;"	f	signature:(INTERVAL tree, void (*function) (INTERVAL, void *), void *arg)
traverse_intervals_noorder	intervals.h	/^extern void traverse_intervals_noorder (INTERVAL,$/;"	p	signature:(INTERVAL, void (*) (INTERVAL, void *), void *)
triple_modifier	termhooks.h	/^  triple_modifier= 32,          \/* See drag_modifier.  *\/$/;"	e	enum:__anon72
TRIVIAL_DIRECTORY_ENTRY	dired.c	539;"	d	file:
trivial_regexp_p	search.c	/^trivial_regexp_p (Lisp_Object regexp)$/;"	f	file:	signature:(Lisp_Object regexp)
TRUE	w32menu.c	57;"	d	file:
TRUNCATE	dispextern.h	/^  TRUNCATE,$/;"	e	enum:line_wrap_method
truncated_on_left_p	dispextern.h	/^  bool_bf truncated_on_left_p : 1;$/;"	m	struct:glyph_row	access:public
truncated_on_right_p	dispextern.h	/^  bool_bf truncated_on_right_p : 1;$/;"	m	struct:glyph_row	access:public
truncate_echo_area	lisp.h	/^extern void truncate_echo_area (ptrdiff_t);$/;"	p	signature:(ptrdiff_t)
truncate_echo_area	xdisp.c	/^truncate_echo_area (ptrdiff_t nchars)$/;"	f	signature:(ptrdiff_t nchars)
truncate_lines_	buffer.h	/^  Lisp_Object truncate_lines_;$/;"	m	struct:buffer	access:public
truncate_message_1	xdisp.c	/^static bool truncate_message_1 (ptrdiff_t, Lisp_Object);$/;"	p	file:
truncate_message_1	xdisp.c	/^truncate_message_1 (ptrdiff_t nchars, Lisp_Object a2)$/;"	f	file:	signature:(ptrdiff_t nchars, Lisp_Object a2)
truncate_undo_list	lisp.h	/^extern void truncate_undo_list (struct buffer *);$/;"	p	signature:(struct buffer *)
truncate_undo_list	undo.c	/^truncate_undo_list (struct buffer *b)$/;"	f	signature:(struct buffer *b)
truncation_pixel_width	dispextern.h	/^  short truncation_pixel_width, continuation_pixel_width;$/;"	m	struct:it	access:public
try_cursor_movement	xdisp.c	/^try_cursor_movement (Lisp_Object window, struct text_pos startp,$/;"	f	file:	signature:(Lisp_Object window, struct text_pos startp, bool *scroll_step)
try_scrolling	xdisp.c	/^try_scrolling (Lisp_Object window, bool just_this_one_p,$/;"	f	file:	signature:(Lisp_Object window, bool just_this_one_p, ptrdiff_t arg_scroll_conservatively, ptrdiff_t scroll_step, bool temp_scroll_step, bool last_line_misfit)
try_window	dispextern.h	/^int try_window (Lisp_Object, struct text_pos, int);$/;"	p	signature:(Lisp_Object, struct text_pos, int)
try_window	xdisp.c	/^try_window (Lisp_Object window, struct text_pos pos, int flags)$/;"	f	signature:(Lisp_Object window, struct text_pos pos, int flags)
TRY_WINDOW_CHECK_MARGINS	dispextern.h	3325;"	d
try_window_id	xdisp.c	/^static int try_window_id (struct window *);$/;"	p	file:	signature:(struct window *)
try_window_id	xdisp.c	/^try_window_id (struct window *w)$/;"	f	file:	signature:(struct window *w)
TRY_WINDOW_IGNORE_FONTS_CHANGE	dispextern.h	3326;"	d
try_window_reusing_current_matrix	xdisp.c	/^static bool try_window_reusing_current_matrix (struct window *);$/;"	p	file:	signature:(struct window *)
try_window_reusing_current_matrix	xdisp.c	/^try_window_reusing_current_matrix (struct window *w)$/;"	f	file:	signature:(struct window *w)
tr_stack	ccl.c	/^} tr_stack;$/;"	t	typeref:struct:__anon81	file:
tset_charset_list	termhooks.h	/^tset_charset_list (struct terminal *t, Lisp_Object val)$/;"	f	signature:(struct terminal *t, Lisp_Object val)
tset_param_alist	terminal.c	/^tset_param_alist (struct terminal *t, Lisp_Object val)$/;"	f	file:	signature:(struct terminal *t, Lisp_Object val)
tset_selection_alist	termhooks.h	/^tset_selection_alist (struct terminal *t, Lisp_Object val)$/;"	f	signature:(struct terminal *t, Lisp_Object val)
TS_bell	termchar.h	/^  const char *TS_bell;		\/* "bl" *\/$/;"	m	struct:tty_display_info	access:public
TS_clr_frame	termchar.h	/^  const char *TS_clr_frame;	\/* "cl" *\/$/;"	m	struct:tty_display_info	access:public
TS_clr_line	termchar.h	/^  const char *TS_clr_line;	\/* "ce", clear to end of line *\/$/;"	m	struct:tty_display_info	access:public
TS_clr_to_bottom	termchar.h	/^  const char *TS_clr_to_bottom;	\/* "cd" *\/$/;"	m	struct:tty_display_info	access:public
TS_cursor_invisible	termchar.h	/^  const char *TS_cursor_invisible; \/* "vi" *\/$/;"	m	struct:tty_display_info	access:public
TS_cursor_normal	termchar.h	/^  const char *TS_cursor_normal;	\/* "ve" *\/$/;"	m	struct:tty_display_info	access:public
TS_cursor_visible	termchar.h	/^  const char *TS_cursor_visible; \/* "vs" *\/$/;"	m	struct:tty_display_info	access:public
TS_delete_mode	termchar.h	/^  const char *TS_delete_mode;	\/* "dm", enter character-delete mode *\/$/;"	m	struct:tty_display_info	access:public
TS_del_char	termchar.h	/^  const char *TS_del_char;	\/* "dc" *\/$/;"	m	struct:tty_display_info	access:public
TS_del_line	termchar.h	/^  const char *TS_del_line;	\/* "dl" *\/$/;"	m	struct:tty_display_info	access:public
TS_del_multi_chars	termchar.h	/^  const char *TS_del_multi_chars; \/* "DC" (one parameter, # chars to delete) *\/$/;"	m	struct:tty_display_info	access:public
TS_del_multi_lines	termchar.h	/^  const char *TS_del_multi_lines; \/* "DL" (one parameter, # lines to delete) *\/$/;"	m	struct:tty_display_info	access:public
TS_end_delete_mode	termchar.h	/^  const char *TS_end_delete_mode; \/* "ed", leave character-delete mode *\/$/;"	m	struct:tty_display_info	access:public
TS_end_insert_mode	termchar.h	/^  const char *TS_end_insert_mode; \/* "ei", leave character-insert mode *\/$/;"	m	struct:tty_display_info	access:public
TS_end_keypad_mode	termchar.h	/^  const char *TS_end_keypad_mode; \/* "ke" *\/$/;"	m	struct:tty_display_info	access:public
TS_end_standout_mode	termchar.h	/^  const char *TS_end_standout_mode; \/* "se" *\/$/;"	m	struct:tty_display_info	access:public
TS_end_termcap_modes	termchar.h	/^  const char *TS_end_termcap_modes; \/* "te" *\/$/;"	m	struct:tty_display_info	access:public
TS_enter_alt_charset_mode	termchar.h	/^  const char *TS_enter_alt_charset_mode;$/;"	m	struct:tty_display_info	access:public
TS_enter_bold_mode	termchar.h	/^  const char *TS_enter_bold_mode; \/* "md" -- turn on bold (extra bright mode).  *\/$/;"	m	struct:tty_display_info	access:public
TS_enter_dim_mode	termchar.h	/^  const char *TS_enter_dim_mode; \/* "mh" -- turn on half-bright mode.  *\/$/;"	m	struct:tty_display_info	access:public
TS_enter_italic_mode	termchar.h	/^  const char *TS_enter_italic_mode; \/* "ZH" -- turn on italics mode.  *\/$/;"	m	struct:tty_display_info	access:public
TS_enter_reverse_mode	termchar.h	/^  const char *TS_enter_reverse_mode; \/* "mr" -- enter reverse video mode.  *\/$/;"	m	struct:tty_display_info	access:public
TS_enter_underline_mode	termchar.h	/^  const char *TS_enter_underline_mode; \/* "ue" -- end underlining.  *\/$/;"	m	struct:tty_display_info	access:public
TS_exit_alt_charset_mode	termchar.h	/^  const char *TS_exit_alt_charset_mode;$/;"	m	struct:tty_display_info	access:public
TS_exit_attribute_mode	termchar.h	/^  const char *TS_exit_attribute_mode; \/* "me" -- switch appearances off.  *\/$/;"	m	struct:tty_display_info	access:public
TS_exit_underline_mode	termchar.h	/^  const char *TS_exit_underline_mode; \/* "us" -- start underlining.  *\/$/;"	m	struct:tty_display_info	access:public
TS_fwd_scroll	termchar.h	/^  const char *TS_fwd_scroll;	\/* "sf" *\/$/;"	m	struct:tty_display_info	access:public
TS_insert_mode	termchar.h	/^  const char *TS_insert_mode;	\/* "im", enter character-insert mode *\/$/;"	m	struct:tty_display_info	access:public
TS_ins_char	termchar.h	/^  const char *TS_ins_char;	\/* "ic" *\/$/;"	m	struct:tty_display_info	access:public
TS_ins_line	termchar.h	/^  const char *TS_ins_line;	\/* "al" *\/$/;"	m	struct:tty_display_info	access:public
TS_ins_multi_chars	termchar.h	/^  const char *TS_ins_multi_chars; \/* "IC" (one parameter, # chars to insert) *\/$/;"	m	struct:tty_display_info	access:public
TS_ins_multi_lines	termchar.h	/^  const char *TS_ins_multi_lines; \/* "AL" (one parameter, # lines to insert) *\/$/;"	m	struct:tty_display_info	access:public
TS_keypad_mode	termchar.h	/^  const char *TS_keypad_mode;	\/* "ks" *\/$/;"	m	struct:tty_display_info	access:public
TS_orig_pair	termchar.h	/^  const char *TS_orig_pair;$/;"	m	struct:tty_display_info	access:public
TS_pad_char	termchar.h	/^  const char *TS_pad_char;	\/* "pc", char to use as padding *\/$/;"	m	struct:tty_display_info	access:public
TS_pad_inserted_char	termchar.h	/^  const char *TS_pad_inserted_char; \/* "ip".  Just padding, no commands.  *\/$/;"	m	struct:tty_display_info	access:public
TS_repeat	termchar.h	/^  const char *TS_repeat;	\/* "rp" (2 params, # times to repeat$/;"	m	struct:tty_display_info	access:public
TS_rev_scroll	termchar.h	/^  const char *TS_rev_scroll;	\/* "sr" *\/$/;"	m	struct:tty_display_info	access:public
TS_set_background	termchar.h	/^  const char *TS_set_background;$/;"	m	struct:tty_display_info	access:public
TS_set_foreground	termchar.h	/^  const char *TS_set_foreground;$/;"	m	struct:tty_display_info	access:public
TS_set_scroll_region	termchar.h	/^  const char *TS_set_scroll_region; \/* "cs" (2 params, first line and last line) *\/$/;"	m	struct:tty_display_info	access:public
TS_set_scroll_region_1	termchar.h	/^  const char *TS_set_scroll_region_1; \/* "cS" (4 params: total lines,$/;"	m	struct:tty_display_info	access:public
TS_set_window	termchar.h	/^  const char *TS_set_window;	\/* "wi" (4 params, start and end of window,$/;"	m	struct:tty_display_info	access:public
TS_standout_mode	termchar.h	/^  const char *TS_standout_mode;	\/* "so" *\/$/;"	m	struct:tty_display_info	access:public
TS_termcap_modes	termchar.h	/^  const char *TS_termcap_modes;	\/* "ti" *\/$/;"	m	struct:tty_display_info	access:public
TS_visible_bell	termchar.h	/^  const char *TS_visible_bell;	\/* "vb" *\/$/;"	m	struct:tty_display_info	access:public
ttip_lbl	xterm.h	/^  GtkWidget *ttip_lbl;$/;"	m	struct:x_output	access:public
ttip_widget	xterm.h	/^  GtkTooltip *ttip_widget;$/;"	m	struct:x_output	access:public
ttip_window	xterm.h	/^  GtkWindow *ttip_window;$/;"	m	struct:x_output	access:public
tty	frame.h	/^    struct tty_output *tty;     \/* From termchar.h.  *\/$/;"	m	union:frame::output_data	typeref:struct:frame::output_data::tty_output	access:public
tty	termhooks.h	/^    struct tty_display_info *tty;     \/* termchar.h *\/$/;"	m	union:terminal::display_info	typeref:struct:terminal::display_info::tty_display_info	access:public
TTYM_FAILURE	term.c	2690;"	d	file:
TTYM_IA_SELECT	term.c	2693;"	d	file:
TTYM_NEXT	term.c	2694;"	d	file:
TTYM_NO_SELECT	term.c	2692;"	d	file:
TTYM_PREV	term.c	2695;"	d	file:
TTYM_SUCCESS	term.c	2691;"	d	file:
tty_append_glyph	dispextern.h	/^extern void tty_append_glyph (struct it *);$/;"	p	signature:(struct it *)
tty_append_glyph	term.c	/^tty_append_glyph (struct it *it)$/;"	f	signature:(struct it *it)
tty_background_highlight	term.c	/^static void tty_background_highlight (struct tty_display_info *tty);$/;"	p	file:	signature:(struct tty_display_info *tty)
tty_background_highlight	term.c	/^tty_background_highlight (struct tty_display_info *tty)$/;"	f	file:	signature:(struct tty_display_info *tty)
tty_bold_p	dispextern.h	/^  bool_bf tty_bold_p : 1;$/;"	m	struct:face	access:public
tty_capable_p	dispextern.h	/^extern bool tty_capable_p (struct tty_display_info *, unsigned);$/;"	p	signature:(struct tty_display_info *, unsigned)
tty_capable_p	term.c	/^tty_capable_p (struct tty_display_info *tty, unsigned int caps)$/;"	f	signature:(struct tty_display_info *tty, unsigned int caps)
TTY_CAPABLE_P_TRY	term.c	2014;"	d	file:
TTY_CAP_BOLD	dispextern.h	3187;"	d
TTY_CAP_DIM	dispextern.h	3188;"	d
TTY_CAP_INVERSE	dispextern.h	3185;"	d
TTY_CAP_ITALIC	dispextern.h	3189;"	d
TTY_CAP_UNDERLINE	dispextern.h	3186;"	d
tty_clear_end_of_line	term.c	/^tty_clear_end_of_line (struct frame *f, int first_unused_hpos)$/;"	f	file:	signature:(struct frame *f, int first_unused_hpos)
tty_clear_frame	term.c	/^tty_clear_frame (struct frame *f)$/;"	f	file:	signature:(struct frame *f)
tty_clear_to_end	term.c	/^tty_clear_to_end (struct frame *f)$/;"	f	file:	signature:(struct frame *f)
tty_color_name	dispextern.h	/^Lisp_Object tty_color_name (struct frame *, int);$/;"	p	signature:(struct frame *, int)
tty_color_name	xfaces.c	/^tty_color_name (struct frame *f, int idx)$/;"	f	signature:(struct frame *f, int idx)
tty_cursor_to	term.c	/^tty_cursor_to (struct frame *f, int vpos, int hpos)$/;"	f	file:	signature:(struct frame *f, int vpos, int hpos)
tty_default_color_capabilities	term.c	/^tty_default_color_capabilities (struct tty_display_info *tty, bool save)$/;"	f	file:	signature:(struct tty_display_info *tty, bool save)
tty_defined_color	xfaces.c	/^tty_defined_color (struct frame *f, const char *color_name,$/;"	f	file:	signature:(struct frame *f, const char *color_name, XColor *color_def, bool alloc)
tty_delete_glyphs	term.c	/^tty_delete_glyphs (struct frame *f, int n)$/;"	f	file:	signature:(struct frame *f, int n)
tty_display_info	termchar.h	/^struct tty_display_info$/;"	s
tty_display_info::char_ins_del_ok	termchar.h	/^  bool_bf char_ins_del_ok : 1;$/;"	m	struct:tty_display_info	access:public
tty_display_info::costs_set	termchar.h	/^  bool_bf costs_set : 1;	\/* True if costs have been calculated. *\/$/;"	m	struct:tty_display_info	access:public
tty_display_info::cursor_hidden	termchar.h	/^  bool_bf cursor_hidden : 1;$/;"	m	struct:tty_display_info	access:public
tty_display_info::delete_in_insert_mode	termchar.h	/^  bool_bf delete_in_insert_mode : 1;    \/* delete mode == insert mode *\/$/;"	m	struct:tty_display_info	access:public
tty_display_info::flow_control	termchar.h	/^  bool_bf flow_control : 1;$/;"	m	struct:tty_display_info	access:public
tty_display_info::input	termchar.h	/^  FILE *input;                  \/* The stream to be used for terminal input.$/;"	m	struct:tty_display_info	access:public
tty_display_info::insert_mode	termchar.h	/^  bool_bf insert_mode : 1;	\/* True when in insert mode.  *\/$/;"	m	struct:tty_display_info	access:public
tty_display_info::line_ins_del_ok	termchar.h	/^  bool_bf line_ins_del_ok : 1;$/;"	m	struct:tty_display_info	access:public
tty_display_info::memory_below_frame	termchar.h	/^  bool_bf memory_below_frame : 1;$/;"	m	struct:tty_display_info	access:public
tty_display_info::meta_key	termchar.h	/^  int meta_key;$/;"	m	struct:tty_display_info	access:public
tty_display_info::mouse_highlight	termchar.h	/^  Mouse_HLInfo mouse_highlight;$/;"	m	struct:tty_display_info	access:public
tty_display_info::must_write_spaces	termchar.h	/^  bool_bf must_write_spaces : 1;$/;"	m	struct:tty_display_info	access:public
tty_display_info::name	termchar.h	/^  char *name;                   \/* The name of the device file or 0 if$/;"	m	struct:tty_display_info	access:public
tty_display_info::next	termchar.h	/^  struct tty_display_info *next; \/* Chain of all tty devices. *\/$/;"	m	struct:tty_display_info	typeref:struct:tty_display_info::tty_display_info	access:public
tty_display_info::old_tty	termchar.h	/^  struct emacs_tty *old_tty;    \/* The initial tty mode bits *\/$/;"	m	struct:tty_display_info	typeref:struct:tty_display_info::emacs_tty	access:public
tty_display_info::output	termchar.h	/^  FILE *output;                 \/* The stream to be used for terminal output.$/;"	m	struct:tty_display_info	access:public
tty_display_info::previous_color_mode	termchar.h	/^  int previous_color_mode;$/;"	m	struct:tty_display_info	access:public
tty_display_info::previous_frame	termchar.h	/^  struct frame *previous_frame;$/;"	m	struct:tty_display_info	typeref:struct:tty_display_info::frame	access:public
tty_display_info::reference_count	termchar.h	/^  int reference_count;          \/* Number of frames that are on this display. *\/$/;"	m	struct:tty_display_info	access:public
tty_display_info::RPov	termchar.h	/^  int RPov;                     \/* # chars to start a TS_repeat *\/$/;"	m	struct:tty_display_info	access:public
tty_display_info::scroll_region_cost	termchar.h	/^  int scroll_region_cost;$/;"	m	struct:tty_display_info	access:public
tty_display_info::scroll_region_ok	termchar.h	/^  bool_bf scroll_region_ok : 1;$/;"	m	struct:tty_display_info	access:public
tty_display_info::showing_menu	termchar.h	/^  bool_bf showing_menu : 1;$/;"	m	struct:tty_display_info	access:public
tty_display_info::specified_window	termchar.h	/^  int specified_window;$/;"	m	struct:tty_display_info	access:public
tty_display_info::standout_mode	termchar.h	/^  bool_bf standout_mode : 1;	\/* True when in standout mode.  *\/$/;"	m	struct:tty_display_info	access:public
tty_display_info::termcap_strings_buffer	termchar.h	/^  char termcap_strings_buffer[TERMCAP_BUFFER_SIZE];$/;"	m	struct:tty_display_info	access:public
tty_display_info::termcap_term_buffer	termchar.h	/^  char termcap_term_buffer[TERMCAP_BUFFER_SIZE];$/;"	m	struct:tty_display_info	access:public
tty_display_info::terminal	termchar.h	/^  struct terminal *terminal;    \/* Points back to the generic terminal$/;"	m	struct:tty_display_info	typeref:struct:tty_display_info::terminal	access:public
tty_display_info::termscript	termchar.h	/^  FILE *termscript;             \/* If nonzero, send all terminal output$/;"	m	struct:tty_display_info	access:public
tty_display_info::term_initted	termchar.h	/^  bool_bf term_initted : 1;	\/* True if we have been through$/;"	m	struct:tty_display_info	access:public
tty_display_info::TF_hazeltine	termchar.h	/^  int TF_hazeltine;             \/* termcap hz flag. *\/$/;"	m	struct:tty_display_info	access:public
tty_display_info::TF_insmode_motion	termchar.h	/^  int TF_insmode_motion;        \/* termcap mi flag: can move while in insert mode. *\/$/;"	m	struct:tty_display_info	access:public
tty_display_info::TF_standout_motion	termchar.h	/^  int TF_standout_motion;       \/* termcap mi flag: can move while in standout mode. *\/$/;"	m	struct:tty_display_info	access:public
tty_display_info::TF_teleray	termchar.h	/^  int TF_teleray;               \/* termcap xt flag: many weird consequences.$/;"	m	struct:tty_display_info	access:public
tty_display_info::TF_underscore	termchar.h	/^  int TF_underscore;            \/* termcap ul flag: _ underlines if over-struck on$/;"	m	struct:tty_display_info	access:public
tty_display_info::TN_max_colors	termchar.h	/^  int TN_max_colors;            \/* "Co" -- number of colors.  *\/$/;"	m	struct:tty_display_info	access:public
tty_display_info::TN_no_color_video	termchar.h	/^  int TN_no_color_video;$/;"	m	struct:tty_display_info	access:public
tty_display_info::top_frame	termchar.h	/^  Lisp_Object top_frame;        \/* The topmost frame on this tty. *\/$/;"	m	struct:tty_display_info	access:public
tty_display_info::TS_bell	termchar.h	/^  const char *TS_bell;		\/* "bl" *\/$/;"	m	struct:tty_display_info	access:public
tty_display_info::TS_clr_frame	termchar.h	/^  const char *TS_clr_frame;	\/* "cl" *\/$/;"	m	struct:tty_display_info	access:public
tty_display_info::TS_clr_line	termchar.h	/^  const char *TS_clr_line;	\/* "ce", clear to end of line *\/$/;"	m	struct:tty_display_info	access:public
tty_display_info::TS_clr_to_bottom	termchar.h	/^  const char *TS_clr_to_bottom;	\/* "cd" *\/$/;"	m	struct:tty_display_info	access:public
tty_display_info::TS_cursor_invisible	termchar.h	/^  const char *TS_cursor_invisible; \/* "vi" *\/$/;"	m	struct:tty_display_info	access:public
tty_display_info::TS_cursor_normal	termchar.h	/^  const char *TS_cursor_normal;	\/* "ve" *\/$/;"	m	struct:tty_display_info	access:public
tty_display_info::TS_cursor_visible	termchar.h	/^  const char *TS_cursor_visible; \/* "vs" *\/$/;"	m	struct:tty_display_info	access:public
tty_display_info::TS_delete_mode	termchar.h	/^  const char *TS_delete_mode;	\/* "dm", enter character-delete mode *\/$/;"	m	struct:tty_display_info	access:public
tty_display_info::TS_del_char	termchar.h	/^  const char *TS_del_char;	\/* "dc" *\/$/;"	m	struct:tty_display_info	access:public
tty_display_info::TS_del_line	termchar.h	/^  const char *TS_del_line;	\/* "dl" *\/$/;"	m	struct:tty_display_info	access:public
tty_display_info::TS_del_multi_chars	termchar.h	/^  const char *TS_del_multi_chars; \/* "DC" (one parameter, # chars to delete) *\/$/;"	m	struct:tty_display_info	access:public
tty_display_info::TS_del_multi_lines	termchar.h	/^  const char *TS_del_multi_lines; \/* "DL" (one parameter, # lines to delete) *\/$/;"	m	struct:tty_display_info	access:public
tty_display_info::TS_end_delete_mode	termchar.h	/^  const char *TS_end_delete_mode; \/* "ed", leave character-delete mode *\/$/;"	m	struct:tty_display_info	access:public
tty_display_info::TS_end_insert_mode	termchar.h	/^  const char *TS_end_insert_mode; \/* "ei", leave character-insert mode *\/$/;"	m	struct:tty_display_info	access:public
tty_display_info::TS_end_keypad_mode	termchar.h	/^  const char *TS_end_keypad_mode; \/* "ke" *\/$/;"	m	struct:tty_display_info	access:public
tty_display_info::TS_end_standout_mode	termchar.h	/^  const char *TS_end_standout_mode; \/* "se" *\/$/;"	m	struct:tty_display_info	access:public
tty_display_info::TS_end_termcap_modes	termchar.h	/^  const char *TS_end_termcap_modes; \/* "te" *\/$/;"	m	struct:tty_display_info	access:public
tty_display_info::TS_enter_alt_charset_mode	termchar.h	/^  const char *TS_enter_alt_charset_mode;$/;"	m	struct:tty_display_info	access:public
tty_display_info::TS_enter_bold_mode	termchar.h	/^  const char *TS_enter_bold_mode; \/* "md" -- turn on bold (extra bright mode).  *\/$/;"	m	struct:tty_display_info	access:public
tty_display_info::TS_enter_dim_mode	termchar.h	/^  const char *TS_enter_dim_mode; \/* "mh" -- turn on half-bright mode.  *\/$/;"	m	struct:tty_display_info	access:public
tty_display_info::TS_enter_italic_mode	termchar.h	/^  const char *TS_enter_italic_mode; \/* "ZH" -- turn on italics mode.  *\/$/;"	m	struct:tty_display_info	access:public
tty_display_info::TS_enter_reverse_mode	termchar.h	/^  const char *TS_enter_reverse_mode; \/* "mr" -- enter reverse video mode.  *\/$/;"	m	struct:tty_display_info	access:public
tty_display_info::TS_enter_underline_mode	termchar.h	/^  const char *TS_enter_underline_mode; \/* "ue" -- end underlining.  *\/$/;"	m	struct:tty_display_info	access:public
tty_display_info::TS_exit_alt_charset_mode	termchar.h	/^  const char *TS_exit_alt_charset_mode;$/;"	m	struct:tty_display_info	access:public
tty_display_info::TS_exit_attribute_mode	termchar.h	/^  const char *TS_exit_attribute_mode; \/* "me" -- switch appearances off.  *\/$/;"	m	struct:tty_display_info	access:public
tty_display_info::TS_exit_underline_mode	termchar.h	/^  const char *TS_exit_underline_mode; \/* "us" -- start underlining.  *\/$/;"	m	struct:tty_display_info	access:public
tty_display_info::TS_fwd_scroll	termchar.h	/^  const char *TS_fwd_scroll;	\/* "sf" *\/$/;"	m	struct:tty_display_info	access:public
tty_display_info::TS_insert_mode	termchar.h	/^  const char *TS_insert_mode;	\/* "im", enter character-insert mode *\/$/;"	m	struct:tty_display_info	access:public
tty_display_info::TS_ins_char	termchar.h	/^  const char *TS_ins_char;	\/* "ic" *\/$/;"	m	struct:tty_display_info	access:public
tty_display_info::TS_ins_line	termchar.h	/^  const char *TS_ins_line;	\/* "al" *\/$/;"	m	struct:tty_display_info	access:public
tty_display_info::TS_ins_multi_chars	termchar.h	/^  const char *TS_ins_multi_chars; \/* "IC" (one parameter, # chars to insert) *\/$/;"	m	struct:tty_display_info	access:public
tty_display_info::TS_ins_multi_lines	termchar.h	/^  const char *TS_ins_multi_lines; \/* "AL" (one parameter, # lines to insert) *\/$/;"	m	struct:tty_display_info	access:public
tty_display_info::TS_keypad_mode	termchar.h	/^  const char *TS_keypad_mode;	\/* "ks" *\/$/;"	m	struct:tty_display_info	access:public
tty_display_info::TS_orig_pair	termchar.h	/^  const char *TS_orig_pair;$/;"	m	struct:tty_display_info	access:public
tty_display_info::TS_pad_char	termchar.h	/^  const char *TS_pad_char;	\/* "pc", char to use as padding *\/$/;"	m	struct:tty_display_info	access:public
tty_display_info::TS_pad_inserted_char	termchar.h	/^  const char *TS_pad_inserted_char; \/* "ip".  Just padding, no commands.  *\/$/;"	m	struct:tty_display_info	access:public
tty_display_info::TS_repeat	termchar.h	/^  const char *TS_repeat;	\/* "rp" (2 params, # times to repeat$/;"	m	struct:tty_display_info	access:public
tty_display_info::TS_rev_scroll	termchar.h	/^  const char *TS_rev_scroll;	\/* "sr" *\/$/;"	m	struct:tty_display_info	access:public
tty_display_info::TS_set_background	termchar.h	/^  const char *TS_set_background;$/;"	m	struct:tty_display_info	access:public
tty_display_info::TS_set_foreground	termchar.h	/^  const char *TS_set_foreground;$/;"	m	struct:tty_display_info	access:public
tty_display_info::TS_set_scroll_region	termchar.h	/^  const char *TS_set_scroll_region; \/* "cs" (2 params, first line and last line) *\/$/;"	m	struct:tty_display_info	access:public
tty_display_info::TS_set_scroll_region_1	termchar.h	/^  const char *TS_set_scroll_region_1; \/* "cS" (4 params: total lines,$/;"	m	struct:tty_display_info	access:public
tty_display_info::TS_set_window	termchar.h	/^  const char *TS_set_window;	\/* "wi" (4 params, start and end of window,$/;"	m	struct:tty_display_info	access:public
tty_display_info::TS_standout_mode	termchar.h	/^  const char *TS_standout_mode;	\/* "so" *\/$/;"	m	struct:tty_display_info	access:public
tty_display_info::TS_termcap_modes	termchar.h	/^  const char *TS_termcap_modes;	\/* "ti" *\/$/;"	m	struct:tty_display_info	access:public
tty_display_info::TS_visible_bell	termchar.h	/^  const char *TS_visible_bell;	\/* "vb" *\/$/;"	m	struct:tty_display_info	access:public
tty_display_info::type	termchar.h	/^  char *type;                   \/* The type of the tty. *\/$/;"	m	struct:tty_display_info	access:public
tty_display_info::Wcm	termchar.h	/^  struct cm *Wcm;$/;"	m	struct:tty_display_info	typeref:struct:tty_display_info::cm	access:public
tty_draw_row_with_mouse_face	dispextern.h	/^extern void tty_draw_row_with_mouse_face (struct window *, struct glyph_row *,$/;"	p	signature:(struct window *, struct glyph_row *, int, int, enum draw_glyphs_face)
tty_draw_row_with_mouse_face	term.c	/^tty_draw_row_with_mouse_face (struct window *w, struct glyph_row *row,$/;"	f	signature:(struct window *w, struct glyph_row *row, int start_hpos, int end_hpos, enum draw_glyphs_face draw)
tty_draw_row_with_mouse_face	w32console.c	/^tty_draw_row_with_mouse_face (struct window *w, struct glyph_row *row,$/;"	f	signature:(struct window *w, struct glyph_row *row, int start_hpos, int end_hpos, enum draw_glyphs_face draw)
tty_frame_count	frame.c	/^static printmax_t tty_frame_count;$/;"	v	file:
tty_free_frame_resources	term.c	/^tty_free_frame_resources (struct frame *f)$/;"	f	file:	signature:(struct frame *f)
tty_hide_cursor	term.c	/^static void tty_hide_cursor (struct tty_display_info *);$/;"	p	file:	signature:(struct tty_display_info *)
tty_hide_cursor	term.c	/^tty_hide_cursor (struct tty_display_info *tty)$/;"	f	file:	signature:(struct tty_display_info *tty)
tty_highlight_if_desired	term.c	/^tty_highlight_if_desired (struct tty_display_info *tty)$/;"	f	file:	signature:(struct tty_display_info *tty)
tty_insert_glyphs	term.c	/^tty_insert_glyphs (struct frame *f, struct glyph *start, int len)$/;"	f	file:	signature:(struct frame *f, struct glyph *start, int len)
tty_ins_del_lines	term.c	/^tty_ins_del_lines (struct frame *f, int vpos, int n)$/;"	f	file:	signature:(struct frame *f, int vpos, int n)
tty_italic_p	dispextern.h	/^  bool_bf tty_italic_p : 1;$/;"	m	struct:face	access:public
tty_list	term.c	/^struct tty_display_info *tty_list;$/;"	v	typeref:struct:tty_display_info
tty_lookup_color	xfaces.c	/^tty_lookup_color (struct frame *f, Lisp_Object color, XColor *tty_color,$/;"	f	file:	signature:(struct frame *f, Lisp_Object color, XColor *tty_color, XColor *std_color)
tty_menu	term.c	/^} tty_menu;$/;"	t	typeref:struct:tty_menu_struct	file:
tty_menu_activate	term.c	/^tty_menu_activate (tty_menu *menu, int *pane, int *selidx,$/;"	f	file:	signature:(tty_menu *menu, int *pane, int *selidx, int x0, int y0, char **txt, void (*help_callback)(char const *, int, int), bool kbd_navigation)
tty_menu_add_pane	term.c	/^tty_menu_add_pane (tty_menu *menu, const char *txt)$/;"	f	file:	signature:(tty_menu *menu, const char *txt)
tty_menu_add_selection	term.c	/^tty_menu_add_selection (tty_menu *menu, int pane,$/;"	f	file:	signature:(tty_menu *menu, int pane, char *txt, bool enable, char const *help_text)
tty_menu_calc_size	term.c	/^tty_menu_calc_size (tty_menu *menu, int *width, int *height)$/;"	f	file:	signature:(tty_menu *menu, int *width, int *height)
tty_menu_create	term.c	/^tty_menu_create (void)$/;"	f	file:	signature:(void)
tty_menu_destroy	term.c	/^tty_menu_destroy (tty_menu *menu)$/;"	f	file:	signature:(tty_menu *menu)
tty_menu_display	term.c	/^tty_menu_display (tty_menu *menu, int x, int y, int pn, int *faces,$/;"	f	file:	signature:(tty_menu *menu, int x, int y, int pn, int *faces, int mx, int my, int first_item, bool disp_help)
tty_menu_help_callback	term.c	/^tty_menu_help_callback (char const *help_string, int pane, int item)$/;"	f	file:	signature:(char const *help_string, int pane, int item)
tty_menu_last_menubar_item	term.c	/^tty_menu_last_menubar_item (struct frame *f)$/;"	f	file:	signature:(struct frame *f)
tty_menu_locate	term.c	/^tty_menu_locate (tty_menu *menu, int x, int y,$/;"	f	file:	signature:(tty_menu *menu, int x, int y, int *ulx, int *uly, int *width, int *height)
tty_menu_make_room	term.c	/^tty_menu_make_room (tty_menu *menu)$/;"	f	file:	signature:(tty_menu *menu)
tty_menu_new_item_coords	term.c	/^tty_menu_new_item_coords (struct frame *f, int which, int *x, int *y)$/;"	f	file:	signature:(struct frame *f, int which, int *x, int *y)
tty_menu_search_pane	term.c	/^tty_menu_search_pane (tty_menu *menu, int pane)$/;"	f	file:	signature:(tty_menu *menu, int pane)
tty_menu_show	menu.h	/^extern Lisp_Object tty_menu_show (struct frame *, int, int, int,$/;"	p	signature:(struct frame *, int, int, int, Lisp_Object, const char **)
tty_menu_show	term.c	/^tty_menu_show (struct frame *f, int x, int y, int menuflags,$/;"	f	signature:(struct frame *f, int x, int y, int menuflags, Lisp_Object title, const char **error_name)
tty_menu_state	term.c	/^struct tty_menu_state$/;"	s	file:
tty_menu_state::menu	term.c	/^  tty_menu *menu;$/;"	m	struct:tty_menu_state	file:	access:public
tty_menu_state::pane	term.c	/^  int pane;$/;"	m	struct:tty_menu_state	file:	access:public
tty_menu_state::screen_behind	term.c	/^  struct glyph_matrix *screen_behind;$/;"	m	struct:tty_menu_state	typeref:struct:tty_menu_state::glyph_matrix	file:	access:public
tty_menu_state::x	term.c	/^  int x, y;$/;"	m	struct:tty_menu_state	file:	access:public
tty_menu_state::y	term.c	/^  int x, y;$/;"	m	struct:tty_menu_state	file:	access:public
tty_menu_struct	term.c	/^typedef struct tty_menu_struct$/;"	s	file:
tty_menu_struct::allocated	term.c	/^  ptrdiff_t allocated;$/;"	m	struct:tty_menu_struct	file:	access:public
tty_menu_struct::count	term.c	/^  int count;$/;"	m	struct:tty_menu_struct	file:	access:public
tty_menu_struct::help_text	term.c	/^  const char **help_text;$/;"	m	struct:tty_menu_struct	file:	access:public
tty_menu_struct::panecount	term.c	/^  int panecount;$/;"	m	struct:tty_menu_struct	file:	access:public
tty_menu_struct::panenumber	term.c	/^  int *panenumber; \/* Also used as enabled flag.  *\/$/;"	m	struct:tty_menu_struct	file:	access:public
tty_menu_struct::submenu	term.c	/^  struct tty_menu_struct **submenu;$/;"	m	struct:tty_menu_struct	typeref:struct:tty_menu_struct::tty_menu_struct	file:	access:public
tty_menu_struct::text	term.c	/^  char **text;$/;"	m	struct:tty_menu_struct	file:	access:public
tty_menu_struct::width	term.c	/^  int width;$/;"	m	struct:tty_menu_struct	file:	access:public
tty_name	process.h	/^    Lisp_Object tty_name;$/;"	m	struct:Lisp_Process	access:public
tty_output	termchar.h	/^struct tty_output$/;"	s
tty_output::display_info	termchar.h	/^  struct tty_display_info *display_info;$/;"	m	struct:tty_output	typeref:struct:tty_output::tty_display_info	access:public
tty_pop_down_menu	term.c	/^tty_pop_down_menu (Lisp_Object arg)$/;"	f	file:	signature:(Lisp_Object arg)
tty_raw_cursor_to	term.c	/^tty_raw_cursor_to (struct frame *f, int row, int col)$/;"	f	file:	signature:(struct frame *f, int row, int col)
tty_read_avail_input	keyboard.c	/^tty_read_avail_input (struct terminal *terminal,$/;"	f	signature:(struct terminal *terminal, struct input_event *hold_quit)
tty_read_avail_input	keyboard.h	/^extern int tty_read_avail_input (struct terminal *, struct input_event *);$/;"	p	signature:(struct terminal *, struct input_event *)
tty_reset_terminal_modes	term.c	/^tty_reset_terminal_modes (struct terminal *terminal)$/;"	f	file:	signature:(struct terminal *terminal)
tty_reverse_p	dispextern.h	/^  bool_bf tty_reverse_p : 1;$/;"	m	struct:face	access:public
tty_ring_bell	term.c	/^tty_ring_bell (struct frame *f)$/;"	f	file:	signature:(struct frame *f)
TTY_SAME_COLOR_THRESHOLD	xfaces.c	4624;"	d	file:
tty_send_additional_strings	term.c	/^tty_send_additional_strings (struct terminal *terminal, Lisp_Object sym)$/;"	f	file:	signature:(struct terminal *terminal, Lisp_Object sym)
tty_setup_colors	term.c	/^tty_setup_colors (struct tty_display_info *tty, int mode)$/;"	f	file:	signature:(struct tty_display_info *tty, int mode)
tty_set_scroll_region	term.c	/^static void tty_set_scroll_region (struct frame *f, int start, int stop);$/;"	p	file:	signature:(struct frame *f, int start, int stop)
tty_set_scroll_region	term.c	/^tty_set_scroll_region (struct frame *f, int start, int stop)$/;"	f	file:	signature:(struct frame *f, int start, int stop)
tty_set_terminal_modes	term.c	/^tty_set_terminal_modes (struct terminal *terminal)$/;"	f	file:	signature:(struct terminal *terminal)
tty_set_terminal_window	term.c	/^tty_set_terminal_window (struct frame *f, int size)$/;"	f	file:	signature:(struct frame *f, int size)
tty_show_cursor	term.c	/^static void tty_show_cursor (struct tty_display_info *);$/;"	p	file:	signature:(struct tty_display_info *)
tty_show_cursor	term.c	/^tty_show_cursor (struct tty_display_info *tty)$/;"	f	file:	signature:(struct tty_display_info *tty)
tty_supports_face_attributes_p	xfaces.c	/^tty_supports_face_attributes_p (struct frame *f,$/;"	f	file:	signature:(struct frame *f, Lisp_Object attrs[LFACE_VECTOR_SIZE], struct face *def_face)
tty_suppress_bold_inverse_default_colors_p	xfaces.c	/^static bool tty_suppress_bold_inverse_default_colors_p;$/;"	v	file:
tty_toggle_highlight	term.c	/^tty_toggle_highlight (struct tty_display_info *tty)$/;"	f	file:	signature:(struct tty_display_info *tty)
tty_turn_off_highlight	term.c	/^static void tty_turn_off_highlight (struct tty_display_info *);$/;"	p	file:	signature:(struct tty_display_info *)
tty_turn_off_highlight	term.c	/^tty_turn_off_highlight (struct tty_display_info *tty)$/;"	f	file:	signature:(struct tty_display_info *tty)
tty_turn_off_insert	dispextern.h	/^extern void tty_turn_off_insert (struct tty_display_info *);$/;"	p	signature:(struct tty_display_info *)
tty_turn_off_insert	term.c	/^tty_turn_off_insert (struct tty_display_info *tty)$/;"	f	signature:(struct tty_display_info *tty)
tty_turn_on_highlight	term.c	/^tty_turn_on_highlight (struct tty_display_info *tty)$/;"	f	file:	signature:(struct tty_display_info *tty)
tty_turn_on_insert	term.c	/^tty_turn_on_insert (struct tty_display_info *tty)$/;"	f	file:	signature:(struct tty_display_info *tty)
tty_underline_p	dispextern.h	/^  bool_bf tty_underline_p : 1;$/;"	m	struct:face	access:public
tty_update_end	term.c	/^tty_update_end (struct frame *f)$/;"	f	file:	signature:(struct frame *f)
tty_write_glyphs	term.c	/^tty_write_glyphs (struct frame *f, struct glyph *string, int len)$/;"	f	file:	signature:(struct frame *f, struct glyph *string, int len)
tty_write_glyphs_with_face	term.c	/^tty_write_glyphs_with_face (register struct frame *f, register struct glyph *string,$/;"	f	file:	signature:(register struct frame *f, register struct glyph *string, register int len, register int face_id)
turn_off_face	term.c	/^static void turn_off_face (struct frame *, int face_id);$/;"	p	file:	signature:(struct frame *, int face_id)
turn_off_face	term.c	/^turn_off_face (struct frame *f, int face_id)$/;"	f	file:	signature:(struct frame *f, int face_id)
turn_on_atimers	atimer.c	/^turn_on_atimers (bool on)$/;"	f	signature:(bool on)
turn_on_atimers	atimer.h	/^void turn_on_atimers (bool);$/;"	p	signature:(bool)
turn_on_face	term.c	/^static void turn_on_face (struct frame *, int face_id);$/;"	p	file:	signature:(struct frame *, int face_id)
turn_on_face	term.c	/^turn_on_face (struct frame *f, int face_id)$/;"	f	file:	signature:(struct frame *f, int face_id)
TWO_MORE_BYTES	coding.c	690;"	d	file:
type	alloc.c	/^  (Lisp_Object type, Lisp_Object slots, Lisp_Object init)$/;"	v
type	alloc.c	/^  enum mem_type type;$/;"	m	struct:mem_node	typeref:enum:mem_node::mem_type	file:	access:public
type	atimer.h	/^  enum atimer_type type;$/;"	m	struct:atimer	typeref:enum:atimer::atimer_type	access:public
type	dispextern.h	/^  bidi_type_t type;		\/* character's resolved bidi type *\/$/;"	m	struct:bidi_saved_info	access:public
type	dispextern.h	/^  bidi_type_t type;		\/* final bidi type of this character, after$/;"	m	struct:bidi_it	access:public
type	dispextern.h	/^  int type;$/;"	m	struct:image_type	access:public
type	dispextern.h	/^  struct image_type *type;$/;"	m	struct:image	typeref:struct:image::image_type	access:public
type	dispextern.h	/^  unsigned type : 3;$/;"	m	struct:glyph	access:public
type	font.h	/^  Lisp_Object type;$/;"	m	struct:font_driver	access:public
type	gmalloc.c	/^	int type;$/;"	m	struct:__anon60::__anon61	file:	access:public
type	gnutls.c	/^  (Lisp_Object proc, Lisp_Object type, Lisp_Object proplist)$/;"	v
type	image.c	/^  enum image_value_type type;$/;"	m	struct:image_keyword	typeref:enum:image_keyword::image_value_type	file:	access:public
type	lisp.h	/^    enum Lisp_Fwd_Type type;	\/* = Lisp_Fwd_Bool *\/$/;"	m	struct:Lisp_Boolfwd	typeref:enum:Lisp_Boolfwd::Lisp_Fwd_Type	access:public
type	lisp.h	/^    enum Lisp_Fwd_Type type;	\/* = Lisp_Fwd_Buffer_Obj *\/$/;"	m	struct:Lisp_Buffer_Objfwd	typeref:enum:Lisp_Buffer_Objfwd::Lisp_Fwd_Type	access:public
type	lisp.h	/^    enum Lisp_Fwd_Type type;	\/* = Lisp_Fwd_Int *\/$/;"	m	struct:Lisp_Intfwd	typeref:enum:Lisp_Intfwd::Lisp_Fwd_Type	access:public
type	lisp.h	/^    enum Lisp_Fwd_Type type;	\/* = Lisp_Fwd_Kboard_Obj *\/$/;"	m	struct:Lisp_Kboard_Objfwd	typeref:enum:Lisp_Kboard_Objfwd::Lisp_Fwd_Type	access:public
type	lisp.h	/^    enum Lisp_Fwd_Type type;	\/* = Lisp_Fwd_Obj *\/$/;"	m	struct:Lisp_Objfwd	typeref:enum:Lisp_Objfwd::Lisp_Fwd_Type	access:public
type	lisp.h	/^    ENUM_BF (Lisp_Misc_Type) type : 16;	\/* = Lisp_Misc_Free *\/$/;"	m	struct:Lisp_Free	access:public
type	lisp.h	/^    ENUM_BF (Lisp_Misc_Type) type : 16;	\/* = Lisp_Misc_Overlay *\/$/;"	m	struct:Lisp_Overlay	access:public
type	lisp.h	/^    ENUM_BF (Lisp_Misc_Type) type : 16;	\/* = Lisp_Misc_Save_Value *\/$/;"	m	struct:Lisp_Save_Value	access:public
type	lisp.h	/^  enum handlertype type;$/;"	m	struct:handler	typeref:enum:handler::handlertype	access:public
type	lisp.h	/^  ENUM_BF (Lisp_Misc_Type) type : 16;		\/* = Lisp_Misc_??? *\/$/;"	m	struct:Lisp_Misc_Any	access:public
type	lisp.h	/^  ENUM_BF (Lisp_Misc_Type) type : 16;		\/* = Lisp_Misc_Marker *\/$/;"	m	struct:Lisp_Marker	access:public
type	lisp.h	/^  ENUM_BF (Lisp_Misc_Type) type : 16;	     \/* = Lisp_Misc_User_Ptr *\/$/;"	m	struct:Lisp_User_Ptr	access:public
type	process.h	/^    Lisp_Object type;$/;"	m	struct:Lisp_Process	access:public
type	sound.c	/^  enum sound_type type;$/;"	m	struct:sound	typeref:enum:sound::sound_type	file:	access:public
type	termchar.h	/^  char *type;                   \/* The type of the tty. *\/$/;"	m	struct:tty_display_info	access:public
type	termhooks.h	/^  enum output_method type;$/;"	m	struct:terminal	typeref:enum:terminal::output_method	access:public
type	w32.c	/^  char *    type;$/;"	m	struct:volume_info_data	file:	access:public
type	w32proc.c	/^  int type;$/;"	m	struct:itimer_data	file:	access:public
type	xfns.c	/^   Lisp_Object type, Lisp_Object format, Lisp_Object outer_p)$/;"	v
type	xfns.c	/^  (Lisp_Object prop, Lisp_Object frame, Lisp_Object type,$/;"	v
type	xselect.c	/^  Atom type;$/;"	m	struct:selection_data	file:	access:public
type	xterm.c	/^  int type;$/;"	m	struct:record	file:	access:public
type	xwidget.c	/^  (Lisp_Object type,$/;"	v
type	xwidget.h	/^  Lisp_Object type;$/;"	m	struct:xwidget	access:public
TYPEOF_STRUCT_STAT_ST_ATIM_IS_STRUCT_TIMESPEC	config.h	1584;"	d
type_after_wn	dispextern.h	/^  bidi_type_t type_after_wn;	\/* bidi type after overrides and Wn *\/$/;"	m	struct:bidi_it	access:public
TYPE_RANGED_INTEGERP	lisp.h	2688;"	d
TYPICAL_FAILURE_SIZE	regex.c	1502;"	d	file:
tzeqlen	editfns.c	/^enum { tzeqlen = sizeof "TZ=" - 1 };$/;"	e	enum:__anon154	file:
tzlookup	editfns.c	/^tzlookup (Lisp_Object zone, bool settz)$/;"	f	file:	signature:(Lisp_Object zone, bool settz)
tzvalbuf	editfns.c	/^ static char *tzvalbuf;$/;"	v	file:
u	dispextern.h	/^    } u;$/;"	m	struct:it::iterator_stack_entry	typeref:union:it::iterator_stack_entry::__anon117	access:public
u	dispextern.h	/^  } u;$/;"	m	struct:glyph	typeref:union:glyph::__anon110	access:public
u	lisp.h	/^    } u;$/;"	m	struct:Lisp_Cons	typeref:union:Lisp_Cons::__anon19	access:public
u	lisp.h	/^    } u;$/;"	m	struct:Lisp_Float	typeref:union:Lisp_Float::__anon27	access:public
u	unexmacosx.c	/^  } u;$/;"	m	struct:unexec_malloc_header	typeref:union:unexec_malloc_header::__anon77	file:	access:public
U64_TO_LISP_TIME	w32.c	6825;"	d	file:
uCallbackMessage	w32fns.c	/^  UINT uCallbackMessage;$/;"	m	struct:MY_NOTIFYICONDATAW	file:	access:public
UCHAR	lisp.h	/^typedef unsigned char UCHAR;$/;"	t
uFlags	w32fns.c	/^  UINT uFlags;$/;"	m	struct:MY_NOTIFYICONDATAW	file:	access:public
UID	w32.c	4812;"	d	file:
uID	w32fns.c	/^  UINT uID;$/;"	m	struct:MY_NOTIFYICONDATAW	file:	access:public
uintbig_to_lisp	data.c	/^uintbig_to_lisp (uintmax_t i)$/;"	f	signature:(uintmax_t i)
uintbig_to_lisp	lisp.h	/^extern Lisp_Object uintbig_to_lisp (uintmax_t);$/;"	p	signature:(uintmax_t)
ullAvailExtendedVirtual	w32.c	/^  DWORDLONG ullAvailExtendedVirtual;$/;"	m	struct:_MEMORY_STATUS_EX	file:	access:public
ullAvailPageFile	w32.c	/^  DWORDLONG ullAvailPageFile;$/;"	m	struct:_MEMORY_STATUS_EX	file:	access:public
ullAvailPhys	w32.c	/^  DWORDLONG ullAvailPhys;$/;"	m	struct:_MEMORY_STATUS_EX	file:	access:public
ullAvailVirtual	w32.c	/^  DWORDLONG ullAvailVirtual;$/;"	m	struct:_MEMORY_STATUS_EX	file:	access:public
ULLONG_MAX	sysdep.c	122;"	d	file:
ullTotalPageFile	w32.c	/^  DWORDLONG ullTotalPageFile;$/;"	m	struct:_MEMORY_STATUS_EX	file:	access:public
ullTotalPhys	w32.c	/^  DWORDLONG ullTotalPhys;$/;"	m	struct:_MEMORY_STATUS_EX	file:	access:public
ullTotalVirtual	w32.c	/^  DWORDLONG ullTotalVirtual;$/;"	m	struct:_MEMORY_STATUS_EX	file:	access:public
uLSQM	character.h	84;"	d
unbind_for_thread_switch	eval.c	/^unbind_for_thread_switch (struct thread_state *thr)$/;"	f	signature:(struct thread_state *thr)
unbind_for_thread_switch	lisp.h	/^extern void unbind_for_thread_switch (struct thread_state *);$/;"	p	signature:(struct thread_state *)
unbind_to	eval.c	/^unbind_to (ptrdiff_t count, Lisp_Object value)$/;"	f	signature:(ptrdiff_t count, Lisp_Object value)
unbind_to	lisp.h	/^extern Lisp_Object unbind_to (ptrdiff_t, Lisp_Object);$/;"	p	signature:(ptrdiff_t, Lisp_Object)
unblock_atimers	atimer.c	/^unblock_atimers (sigset_t const *oldset)$/;"	f	file:	signature:(sigset_t const *oldset)
unblock_buffer_flips	xdisp.c	/^static void unblock_buffer_flips (void);$/;"	p	file:	signature:(void)
unblock_buffer_flips	xdisp.c	/^unblock_buffer_flips (void)$/;"	f	file:	signature:(void)
unblock_child_signal	sysdep.c	/^unblock_child_signal (sigset_t const *oldset)$/;"	f	signature:(sigset_t const *oldset)
unblock_child_signal	syssignal.h	/^extern void unblock_child_signal (sigset_t const *);$/;"	p	signature:(sigset_t const *)
unblock_input	blockinput.h	/^extern void unblock_input (void);$/;"	p	signature:(void)
unblock_input	keyboard.c	/^unblock_input (void)$/;"	f	signature:(void)
unblock_input_to	blockinput.h	/^extern void unblock_input_to (int);$/;"	p	signature:(int)
unblock_input_to	keyboard.c	/^unblock_input_to (int level)$/;"	f	signature:(int level)
unblock_tty_out_signal	sysdep.c	/^unblock_tty_out_signal (sigset_t const *oldset)$/;"	f	signature:(sigset_t const *oldset)
unblock_tty_out_signal	syssignal.h	/^extern void unblock_tty_out_signal (sigset_t const *);$/;"	p	signature:(sigset_t const *)
uncache_face	xfaces.c	/^uncache_face (struct face_cache *c, struct face *face)$/;"	f	file:	signature:(struct face_cache *c, struct face *face)
uncache_image	image.c	/^uncache_image (struct frame *f, Lisp_Object spec)$/;"	f	file:	signature:(struct frame *f, Lisp_Object spec)
unchain_both	buffer.c	/^unchain_both (struct buffer *b, Lisp_Object overlay)$/;"	f	file:	signature:(struct buffer *b, Lisp_Object overlay)
unchain_finalizer	alloc.c	/^unchain_finalizer (struct Lisp_Finalizer *finalizer)$/;"	f	file:	signature:(struct Lisp_Finalizer *finalizer)
unchain_marker	lisp.h	/^extern void unchain_marker (struct Lisp_Marker *marker);$/;"	p	signature:(struct Lisp_Marker *marker)
unchain_marker	marker.c	/^unchain_marker (register struct Lisp_Marker *marker)$/;"	f	signature:(register struct Lisp_Marker *marker)
unchain_overlay	buffer.c	/^unchain_overlay (struct Lisp_Overlay *list, struct Lisp_Overlay *overlay)$/;"	f	file:	signature:(struct Lisp_Overlay *list, struct Lisp_Overlay *overlay)
unchanged_modified	buffer.h	/^    EMACS_INT unchanged_modified;$/;"	m	struct:buffer_text	access:public
UNCHANGED_MODIFIED	buffer.h	206;"	d
unc_volume_file_attributes	w32.c	/^unc_volume_file_attributes (const char *path)$/;"	f	file:	signature:(const char *path)
undecided	coding.h	/^      struct undecided_spec undecided;$/;"	m	union:coding_system::__anon152	typeref:struct:coding_system::__anon152::undecided_spec	access:public
undecided_spec	coding.h	/^struct undecided_spec$/;"	s
undecided_spec::inhibit_ied	coding.h	/^  int inhibit_ied;$/;"	m	struct:undecided_spec	access:public
undecided_spec::inhibit_nbd	coding.h	/^  int inhibit_nbd;$/;"	m	struct:undecided_spec	access:public
undecided_spec::prefer_utf_8	coding.h	/^  bool prefer_utf_8;$/;"	m	struct:undecided_spec	access:public
undecorated	frame.h	/^  bool_bf undecorated : 1;$/;"	m	struct:frame	access:public
UNDEF_FRINGE_BITMAP	fringe.c	471;"	d	file:
underline_color	dispextern.h	/^  unsigned long underline_color;$/;"	m	struct:face	access:public
underline_defaulted_p	dispextern.h	/^  bool_bf underline_defaulted_p : 1;$/;"	m	struct:face	access:public
underline_minimum_offset	globals.h	885;"	d
underline_p	dispextern.h	/^  bool_bf underline_p : 1;$/;"	m	struct:face	access:public
underline_position	dispextern.h	/^  int underline_position;$/;"	m	struct:glyph_string	access:public
underline_position	font.h	/^  int underline_position;$/;"	m	struct:font	access:public
underline_thickness	dispextern.h	/^  int underline_thickness;$/;"	m	struct:glyph_string	access:public
underline_thickness	font.h	/^  int underline_thickness;$/;"	m	struct:font	access:public
underline_type	dispextern.h	/^  ENUM_BF (face_underline_type) underline_type : 1;$/;"	m	struct:face	access:public
underlying_face_id	xdisp.c	/^static int underlying_face_id (struct it *);$/;"	p	file:	signature:(struct it *)
underlying_face_id	xdisp.c	/^underlying_face_id (struct it *it)$/;"	f	file:	signature:(struct it *it)
underpos	nsterm.h	/^  float underpos;$/;"	m	struct:nsfont_info	access:public
underwidth	nsterm.h	/^  float underwidth;$/;"	m	struct:nsfont_info	access:public
undo_inhibit_record_point	globals.h	1049;"	d
undo_limit	globals.h	887;"	d
undo_list_	buffer.h	/^  Lisp_Object undo_list_;$/;"	m	struct:buffer	access:public
undo_strong_limit	globals.h	889;"	d
UNEVALLED	lisp.h	/^    UNEVALLED = -1$/;"	e	enum:maxargs
UnexBlockSz	unexaix.c	392;"	d	file:
unexec	unexaix.c	/^unexec (const char *new_name, const char *a_name)$/;"	f	signature:(const char *new_name, const char *a_name)
unexec	unexcw.c	/^unexec (const char *outfile, const char *infile)$/;"	f	signature:(const char *outfile, const char *infile)
unexec	unexec.h	/^void unexec (const char *, const char *);$/;"	p	signature:(const char *, const char *)
unexec	unexelf.c	/^unexec (const char *new_name, const char *old_name)$/;"	f	signature:(const char *new_name, const char *old_name)
unexec	unexhp9k800.c	/^unexec (const char *new_name,      \/* name of the new a.out file to be created *\/$/;"	f	signature:(const char *new_name, const char *old_name)
unexec	unexmacosx.c	/^unexec (const char *outfile, const char *infile)$/;"	f	signature:(const char *outfile, const char *infile)
unexec	unexsol.c	/^unexec (const char *new_name, const char *old_name)$/;"	f	signature:(const char *new_name, const char *old_name)
unexec	unexw32.c	/^unexec (const char *new_name, const char *old_name)$/;"	f	signature:(const char *new_name, const char *old_name)
unexec_copy	unexmacosx.c	/^unexec_copy (off_t dest, off_t src, ssize_t count)$/;"	f	file:	signature:(off_t dest, off_t src, ssize_t count)
UNEXEC_COPY_BUFSZ	unexmacosx.c	146;"	d	file:
unexec_error	unexhp9k800.c	/^unexec_error (char const *msg)$/;"	f	file:	signature:(char const *msg)
unexec_error	unexmacosx.c	/^unexec_error (const char *format, ...)$/;"	f	file:	signature:(const char *format, ...)
unexec_free	lisp.h	/^extern void unexec_free (void *);$/;"	p	signature:(void *)
unexec_free	unexmacosx.c	/^unexec_free (void *ptr)$/;"	f	signature:(void *ptr)
unexec_init_emacs_zone	lisp.h	/^extern void unexec_init_emacs_zone (void);$/;"	p	signature:(void)
unexec_init_emacs_zone	unexmacosx.c	/^unexec_init_emacs_zone (void)$/;"	f	signature:(void)
unexec_malloc	lisp.h	/^extern void *unexec_malloc (size_t);$/;"	p	signature:(size_t)
unexec_malloc	unexmacosx.c	/^unexec_malloc (size_t size)$/;"	f	signature:(size_t size)
unexec_malloc_header	unexmacosx.c	/^typedef struct unexec_malloc_header {$/;"	s	file:
unexec_malloc_header::u	unexmacosx.c	/^  } u;$/;"	m	struct:unexec_malloc_header	typeref:union:unexec_malloc_header::__anon77	file:	access:public
unexec_malloc_header::__anon77::c	unexmacosx.c	/^    char c[8];$/;"	m	union:unexec_malloc_header::__anon77	file:	access:public
unexec_malloc_header::__anon77::size	unexmacosx.c	/^    size_t size;$/;"	m	union:unexec_malloc_header::__anon77	file:	access:public
unexec_malloc_header_t	unexmacosx.c	/^} unexec_malloc_header_t;$/;"	t	typeref:struct:unexec_malloc_header	file:
UNEXEC_OBJ	Makefile	/^UNEXEC_OBJ = unexelf.o$/;"	m
unexec_read	unexmacosx.c	/^unexec_read (void *dest, size_t n)$/;"	f	file:	signature:(void *dest, size_t n)
unexec_reader	unexmacosx.c	/^unexec_reader (task_t task, vm_address_t address, vm_size_t size, void **ptr)$/;"	f	file:	signature:(task_t task, vm_address_t address, vm_size_t size, void **ptr)
unexec_realloc	lisp.h	/^extern void *unexec_realloc (void *, size_t);$/;"	p	signature:(void *, size_t)
unexec_realloc	unexmacosx.c	/^unexec_realloc (void *old_ptr, size_t new_size)$/;"	f	signature:(void *old_ptr, size_t new_size)
unexec_regions	unexmacosx.c	/^static unexec_region_info unexec_regions[MAX_UNEXEC_REGIONS];$/;"	v	file:
unexec_regions_merge	unexmacosx.c	/^unexec_regions_merge (void)$/;"	f	file:	signature:(void)
unexec_regions_recorder	unexmacosx.c	/^unexec_regions_recorder (task_t task, void *rr, unsigned type,$/;"	f	file:	signature:(task_t task, void *rr, unsigned type, vm_range_t *ranges, unsigned num)
unexec_regions_sort_compare	unexmacosx.c	/^unexec_regions_sort_compare (const void *a, const void *b)$/;"	f	file:	signature:(const void *a, const void *b)
unexec_region_info	unexmacosx.c	/^} unexec_region_info;$/;"	t	typeref:struct:__anon76	file:
unexec_write	unexmacosx.c	/^unexec_write (off_t dest, const void *src, size_t count)$/;"	f	file:	signature:(off_t dest, const void *src, size_t count)
unexec_write_zero	unexmacosx.c	/^unexec_write_zero (off_t dest, size_t count)$/;"	f	file:	signature:(off_t dest, size_t count)
unexpect_property_change	xselect.c	/^static void unexpect_property_change (struct prop_location *);$/;"	p	file:	signature:(struct prop_location *)
unexpect_property_change	xselect.c	/^unexpect_property_change (struct prop_location *location)$/;"	f	file:	signature:(struct prop_location *location)
unhold_keyboard_input	process.c	/^unhold_keyboard_input (void)$/;"	f	signature:(void)
unhold_keyboard_input	process.h	/^extern void unhold_keyboard_input (void);$/;"	p	signature:(void)
unibyte	dispextern.h	/^  bool_bf unibyte : 1;		\/* True means the string is unibyte *\/$/;"	m	struct:bidi_string_data	access:public
unibyte	lread.c	/^  (Lisp_Object buffer, Lisp_Object printflag, Lisp_Object filename, Lisp_Object unibyte, Lisp_Object do_allow_print)$/;"	v
unibyte_display_via_language_environment	globals.h	1051;"	d
UNIBYTE_TO_CHAR	character.h	94;"	d
unichar	nsgui.h	/^typedef unsigned short unichar;$/;"	t
unicode_append_menu	w32menu.c	/^AppendMenuW_Proc unicode_append_menu = AppendMenuW;$/;"	v
unicode_append_menu	w32menu.c	/^AppendMenuW_Proc unicode_append_menu = NULL;$/;"	v
UNICODE_CATEGORY_Cc	character.h	/^  UNICODE_CATEGORY_Cc,$/;"	e	enum:__anon55
UNICODE_CATEGORY_Cf	character.h	/^  UNICODE_CATEGORY_Cf,$/;"	e	enum:__anon55
UNICODE_CATEGORY_Cn	character.h	/^  UNICODE_CATEGORY_Cn$/;"	e	enum:__anon55
UNICODE_CATEGORY_Co	character.h	/^  UNICODE_CATEGORY_Co,$/;"	e	enum:__anon55
UNICODE_CATEGORY_Cs	character.h	/^  UNICODE_CATEGORY_Cs,$/;"	e	enum:__anon55
UNICODE_CATEGORY_Ll	character.h	/^  UNICODE_CATEGORY_Ll,$/;"	e	enum:__anon55
UNICODE_CATEGORY_Lm	character.h	/^  UNICODE_CATEGORY_Lm,$/;"	e	enum:__anon55
UNICODE_CATEGORY_Lo	character.h	/^  UNICODE_CATEGORY_Lo,$/;"	e	enum:__anon55
UNICODE_CATEGORY_Lt	character.h	/^  UNICODE_CATEGORY_Lt,$/;"	e	enum:__anon55
UNICODE_CATEGORY_Lu	character.h	/^  UNICODE_CATEGORY_Lu,$/;"	e	enum:__anon55
UNICODE_CATEGORY_Mc	character.h	/^  UNICODE_CATEGORY_Mc,$/;"	e	enum:__anon55
UNICODE_CATEGORY_Me	character.h	/^  UNICODE_CATEGORY_Me,$/;"	e	enum:__anon55
UNICODE_CATEGORY_Mn	character.h	/^  UNICODE_CATEGORY_Mn,$/;"	e	enum:__anon55
UNICODE_CATEGORY_Nd	character.h	/^  UNICODE_CATEGORY_Nd,$/;"	e	enum:__anon55
UNICODE_CATEGORY_Nl	character.h	/^  UNICODE_CATEGORY_Nl,$/;"	e	enum:__anon55
UNICODE_CATEGORY_No	character.h	/^  UNICODE_CATEGORY_No,$/;"	e	enum:__anon55
UNICODE_CATEGORY_Pc	character.h	/^  UNICODE_CATEGORY_Pc,$/;"	e	enum:__anon55
UNICODE_CATEGORY_Pd	character.h	/^  UNICODE_CATEGORY_Pd,$/;"	e	enum:__anon55
UNICODE_CATEGORY_Pe	character.h	/^  UNICODE_CATEGORY_Pe,$/;"	e	enum:__anon55
UNICODE_CATEGORY_Pf	character.h	/^  UNICODE_CATEGORY_Pf,$/;"	e	enum:__anon55
UNICODE_CATEGORY_Pi	character.h	/^  UNICODE_CATEGORY_Pi,$/;"	e	enum:__anon55
UNICODE_CATEGORY_Po	character.h	/^  UNICODE_CATEGORY_Po,$/;"	e	enum:__anon55
UNICODE_CATEGORY_Ps	character.h	/^  UNICODE_CATEGORY_Ps,$/;"	e	enum:__anon55
UNICODE_CATEGORY_Sc	character.h	/^  UNICODE_CATEGORY_Sc,$/;"	e	enum:__anon55
UNICODE_CATEGORY_Sk	character.h	/^  UNICODE_CATEGORY_Sk,$/;"	e	enum:__anon55
UNICODE_CATEGORY_Sm	character.h	/^  UNICODE_CATEGORY_Sm,$/;"	e	enum:__anon55
UNICODE_CATEGORY_So	character.h	/^  UNICODE_CATEGORY_So,$/;"	e	enum:__anon55
unicode_category_t	character.h	/^} unicode_category_t;$/;"	t	typeref:enum:__anon55
UNICODE_CATEGORY_UNKNOWN	character.h	/^  UNICODE_CATEGORY_UNKNOWN = 0,$/;"	e	enum:__anon55
UNICODE_CATEGORY_Zl	character.h	/^  UNICODE_CATEGORY_Zl,$/;"	e	enum:__anon55
UNICODE_CATEGORY_Zp	character.h	/^  UNICODE_CATEGORY_Zp,$/;"	e	enum:__anon55
UNICODE_CATEGORY_Zs	character.h	/^  UNICODE_CATEGORY_Zs,$/;"	e	enum:__anon55
UNICODE_CHARACTER_NAME_LENGTH_BOUND	lread.c	/^enum { UNICODE_CHARACTER_NAME_LENGTH_BOUND = 200 };$/;"	e	enum:__anon131	file:
unicode_message_box	w32menu.c	/^MessageBoxW_Proc unicode_message_box = MessageBoxW;$/;"	v
unicode_message_box	w32menu.c	/^MessageBoxW_Proc unicode_message_box = NULL;$/;"	v
UNICODE_NOCHAR	w32term.h	627;"	d
unified_p	charset.h	/^  bool_bf unified_p : 1;$/;"	m	struct:charset	access:public
unify_map	charset.c	/^  (Lisp_Object charset, Lisp_Object unify_map, Lisp_Object deunify)$/;"	v
UNINIT	conf_post.h	323;"	d
UNINIT	conf_post.h	325;"	d
UNIPROP_COMPRESSED_FORM_P	chartab.c	79;"	d	file:
uniprop_decoder	chartab.c	/^static uniprop_decoder_t uniprop_decoder [] =$/;"	v	file:
uniprop_decoder_count	chartab.c	/^static const int uniprop_decoder_count = ARRAYELTS (uniprop_decoder);$/;"	v	file:
uniprop_decoder_t	chartab.c	/^typedef Lisp_Object (*uniprop_decoder_t) (Lisp_Object, Lisp_Object);$/;"	t	file:
uniprop_decode_value_run_length	chartab.c	/^uniprop_decode_value_run_length (Lisp_Object table, Lisp_Object value)$/;"	f	file:	signature:(Lisp_Object table, Lisp_Object value)
uniprop_encoder	chartab.c	/^static uniprop_encoder_t uniprop_encoder[] =$/;"	v	file:
uniprop_encoder_count	chartab.c	/^static const int uniprop_encoder_count = ARRAYELTS (uniprop_encoder);$/;"	v	file:
uniprop_encoder_t	chartab.c	/^typedef Lisp_Object (*uniprop_encoder_t) (Lisp_Object, Lisp_Object);$/;"	t	file:
uniprop_encode_value_character	chartab.c	/^uniprop_encode_value_character (Lisp_Object table, Lisp_Object value)$/;"	f	file:	signature:(Lisp_Object table, Lisp_Object value)
uniprop_encode_value_numeric	chartab.c	/^uniprop_encode_value_numeric (Lisp_Object table, Lisp_Object value)$/;"	f	file:	signature:(Lisp_Object table, Lisp_Object value)
uniprop_encode_value_run_length	chartab.c	/^uniprop_encode_value_run_length (Lisp_Object table, Lisp_Object value)$/;"	f	file:	signature:(Lisp_Object table, Lisp_Object value)
uniprop_get_decoder	chartab.c	/^static uniprop_decoder_t uniprop_get_decoder (Lisp_Object);$/;"	p	file:
uniprop_get_decoder	chartab.c	/^uniprop_get_decoder (Lisp_Object table)$/;"	f	file:	signature:(Lisp_Object table)
UNIPROP_GET_DECODER	chartab.c	72;"	d	file:
uniprop_get_encoder	chartab.c	/^uniprop_get_encoder (Lisp_Object table)$/;"	f	file:	signature:(Lisp_Object table)
uniprop_table	chartab.c	/^uniprop_table (Lisp_Object prop)$/;"	f	signature:(Lisp_Object prop)
uniprop_table	lisp.h	/^extern Lisp_Object uniprop_table (Lisp_Object);$/;"	p	signature:(Lisp_Object)
UNIPROP_TABLE_P	chartab.c	67;"	d	file:
uniprop_table_uncompress	chartab.c	/^static Lisp_Object uniprop_table_uncompress (Lisp_Object, int);$/;"	p	file:	signature:(Lisp_Object, int)
uniprop_table_uncompress	chartab.c	/^uniprop_table_uncompress (Lisp_Object table, int idx)$/;"	f	file:	signature:(Lisp_Object table, int idx)
uniquifier	ftfont.c	/^  int uniquifier[6];$/;"	m	struct:__anon125	file:	access:public
uniscribe_available	w32uniscribe.c	/^int uniscribe_available = 0;$/;"	v
uniscribe_check_features	w32uniscribe.c	/^uniscribe_check_features (Lisp_Object features[2], OPENTYPE_TAG *ftags, int n)$/;"	f	file:	signature:(Lisp_Object features[2], OPENTYPE_TAG *ftags, int n)
uniscribe_check_otf	w32font.h	/^int uniscribe_check_otf (LOGFONT *font, Lisp_Object otf_spec);$/;"	p	signature:(LOGFONT *font, Lisp_Object otf_spec)
uniscribe_check_otf	w32uniscribe.c	/^uniscribe_check_otf (LOGFONT *font, Lisp_Object otf_spec)$/;"	f	signature:(LOGFONT *font, Lisp_Object otf_spec)
uniscribe_check_otf_1	w32uniscribe.c	/^uniscribe_check_otf_1 (HDC context, Lisp_Object script, Lisp_Object lang,$/;"	f	file:	signature:(HDC context, Lisp_Object script, Lisp_Object lang, Lisp_Object features[2], int *retval)
uniscribe_close	w32uniscribe.c	/^uniscribe_close (struct font *font)$/;"	f	file:	signature:(struct font *font)
uniscribe_encode_char	w32uniscribe.c	/^uniscribe_encode_char (struct font *font, int c)$/;"	f	file:	signature:(struct font *font, int c)
uniscribe_font_driver	w32uniscribe.c	/^struct font_driver uniscribe_font_driver =$/;"	v	typeref:struct:font_driver
uniscribe_font_info	w32uniscribe.c	/^struct uniscribe_font_info$/;"	s	file:
uniscribe_font_info::cache	w32uniscribe.c	/^  SCRIPT_CACHE cache;$/;"	m	struct:uniscribe_font_info	file:	access:public
uniscribe_font_info::w32_font	w32uniscribe.c	/^  struct w32font_info w32_font;$/;"	m	struct:uniscribe_font_info	typeref:struct:uniscribe_font_info::w32font_info	file:	access:public
uniscribe_list	w32uniscribe.c	/^uniscribe_list (struct frame *f, Lisp_Object font_spec)$/;"	f	file:	signature:(struct frame *f, Lisp_Object font_spec)
uniscribe_list_family	w32uniscribe.c	/^uniscribe_list_family (struct frame *f)$/;"	f	file:	signature:(struct frame *f)
uniscribe_match	w32uniscribe.c	/^uniscribe_match (struct frame *f, Lisp_Object font_spec)$/;"	f	file:	signature:(struct frame *f, Lisp_Object font_spec)
uniscribe_new_apis	w32uniscribe.c	/^static bool uniscribe_new_apis;$/;"	v	file:
uniscribe_open	w32uniscribe.c	/^uniscribe_open (struct frame *f, Lisp_Object font_entity, int pixel_size)$/;"	f	file:	signature:(struct frame *f, Lisp_Object font_entity, int pixel_size)
uniscribe_otf_capability	w32uniscribe.c	/^uniscribe_otf_capability (struct font *font)$/;"	f	file:	signature:(struct font *font)
uniscribe_shape	w32uniscribe.c	/^uniscribe_shape (Lisp_Object lgstring)$/;"	f	file:	signature:(Lisp_Object lgstring)
UNIX98_PTYS	config.h	1594;"	d
unixtodos_filename	w32.c	/^unixtodos_filename (register char *p)$/;"	f	signature:(register char *p)
unixtodos_filename	w32.h	/^extern void unixtodos_filename (register char *);$/;"	p	signature:(register char *)
UNKNOWN_BC	bidi.c	/^  UNKNOWN_BC,$/;"	e	enum:__anon92	file:
UNKNOWN_BT	dispextern.h	/^  UNKNOWN_BT = 0,$/;"	e	enum:__anon114
UNKNOWN_MODTIME_NSECS	buffer.h	820;"	d
unlink	w32.c	60;"	d	file:
unload_color	dispextern.h	/^void unload_color (struct frame *, unsigned long);$/;"	p	signature:(struct frame *, unsigned long)
unload_color	xfaces.c	/^unload_color (struct frame *f, unsigned long pixel)$/;"	f	signature:(struct frame *f, unsigned long pixel)
UNLOCK	gmalloc.c	216;"	d	file:
UNLOCK	gmalloc.c	233;"	d	file:
UNLOCK_ALIGNED_BLOCKS	gmalloc.c	226;"	d	file:
UNLOCK_ALIGNED_BLOCKS	gmalloc.c	235;"	d	file:
unlock_all_files	filelock.c	/^unlock_all_files (void)$/;"	f	signature:(void)
unlock_all_files	lisp.h	/^extern void unlock_all_files (void);$/;"	p	signature:(void)
unlock_buffer	filelock.c	/^unlock_buffer (struct buffer *buffer)$/;"	f	signature:(struct buffer *buffer)
unlock_buffer	lisp.h	/^extern void unlock_buffer (struct buffer *);$/;"	p	signature:(struct buffer *)
unlock_file	filelock.c	/^unlock_file (Lisp_Object fn)$/;"	f	signature:(Lisp_Object fn)
unlock_file	lisp.h	/^extern void unlock_file (Lisp_Object);$/;"	p	signature:(Lisp_Object)
UNMARK_STRING	alloc.c	211;"	d	file:
unproduce_glyphs	xdisp.c	/^unproduce_glyphs (struct it *it, int n)$/;"	f	file:	signature:(struct it *it, int n)
UNREAD	lread.c	177;"	d	file:
unreadchar	lread.c	/^unreadchar (Lisp_Object readcharfun, int c)$/;"	f	file:	signature:(Lisp_Object readcharfun, int c)
unread_char	lread.c	/^static int unread_char;$/;"	v	file:
unread_switch_frame	keyboard.c	/^Lisp_Object unread_switch_frame;$/;"	v
unref_cl_data	gtkutil.c	/^unref_cl_data (xg_menu_cb_data *cl_data)$/;"	f	file:	signature:(xg_menu_cb_data *cl_data)
unregister_color	xfaces.c	/^unregister_color (unsigned long pixel)$/;"	f	signature:(unsigned long pixel)
unregister_colors	xfaces.c	/^unregister_colors (unsigned long *pixels, int n)$/;"	f	signature:(unsigned long *pixels, int n)
unregister_hot_keys	w32fns.c	/^unregister_hot_keys (HWND hwnd)$/;"	f	file:	signature:(HWND hwnd)
unrelocate	unexmacosx.c	/^unrelocate (const char *name, off_t reloff, int nrel, vm_address_t base)$/;"	f	file:	signature:(const char *name, off_t reloff, int nrel, vm_address_t base)
unrelocate_symbols	unexaix.c	/^static int unrelocate_symbols (int, int, const char *, const char *);$/;"	p	file:	signature:(int, int, const char *, const char *)
unrelocate_symbols	unexaix.c	/^unrelocate_symbols (int new, int a_out,$/;"	f	file:	signature:(int new, int a_out, const char *a_name, const char *new_name)
unrequest_sigio	dispextern.h	/^void unrequest_sigio (void);$/;"	p	signature:(void)
unrequest_sigio	sysdep.c	/^unrequest_sigio (void)$/;"	f	signature:(void)
unsetenv	w32.c	/^unsetenv (const char *name)$/;"	f	signature:(const char *name)
UNSETMARKBIT	alloc.c	2590;"	d	file:
unshow_buffer	window.c	/^unshow_buffer (register struct window *w)$/;"	f	file:	signature:(register struct window *w)
UNSIGNED_CMP	lisp.h	1619;"	d
UNSPECIFIEDP	xfaces.c	262;"	d	file:
unspecified_bg	xfaces.c	/^char unspecified_fg[] = "unspecified-fg", unspecified_bg[] = "unspecified-bg";$/;"	v
unspecified_fg	xfaces.c	/^char unspecified_fg[] = "unspecified-fg", unspecified_bg[] = "unspecified-bg";$/;"	v
unsplittable	widgetprv.h	/^  Boolean	unsplittable;	\/* frame can only have one window *\/$/;"	m	struct:__anon98	access:public
unused	nsterm.h	/^  int unused;$/;"	m	struct:x_output	access:public
unuse_menu_items	keyboard.h	/^extern void unuse_menu_items (void);$/;"	p	signature:(void)
unuse_menu_items	menu.c	/^unuse_menu_items (void)$/;"	f	signature:(void)
unwind	lisp.h	/^    } unwind;$/;"	m	union:specbinding	typeref:struct:specbinding::__anon29	access:public
unwind_create_frame	w32fns.c	/^static Lisp_Object unwind_create_frame (Lisp_Object);$/;"	p	file:
unwind_create_frame	w32fns.c	/^unwind_create_frame (Lisp_Object frame)$/;"	f	file:	signature:(Lisp_Object frame)
unwind_create_frame	xfns.c	/^unwind_create_frame (Lisp_Object frame)$/;"	f	file:	signature:(Lisp_Object frame)
unwind_create_tip_frame	w32fns.c	/^static void unwind_create_tip_frame (Lisp_Object);$/;"	p	file:
unwind_create_tip_frame	w32fns.c	/^unwind_create_tip_frame (Lisp_Object frame)$/;"	f	file:	signature:(Lisp_Object frame)
unwind_create_tip_frame	xfns.c	/^unwind_create_tip_frame (Lisp_Object frame)$/;"	f	file:	signature:(Lisp_Object frame)
unwind_decompress	decompress.c	/^unwind_decompress (void *ddata)$/;"	f	file:	signature:(void *ddata)
unwind_format_mode_line	xdisp.c	/^unwind_format_mode_line (Lisp_Object vector)$/;"	f	file:	signature:(Lisp_Object vector)
unwind_int	lisp.h	/^    } unwind_int;$/;"	m	union:specbinding	typeref:struct:specbinding::__anon31	access:public
unwind_ptr	lisp.h	/^    } unwind_ptr;$/;"	m	union:specbinding	typeref:struct:specbinding::__anon30	access:public
unwind_redisplay	xdisp.c	/^static void unwind_redisplay (void);$/;"	p	file:	signature:(void)
unwind_redisplay	xdisp.c	/^unwind_redisplay (void)$/;"	f	file:	signature:(void)
unwind_redisplay_preserve_echo_area	xdisp.c	/^unwind_redisplay_preserve_echo_area (void)$/;"	f	file:	signature:(void)
unwind_set_match_data	search.c	/^unwind_set_match_data (Lisp_Object list)$/;"	f	file:	signature:(Lisp_Object list)
unwind_to_catch	eval.c	/^unwind_to_catch (struct handler *catch, Lisp_Object value)$/;"	f	file:	signature:(struct handler *catch, Lisp_Object value)
unwind_void	lisp.h	/^    } unwind_void;$/;"	m	union:specbinding	typeref:struct:specbinding::__anon32	access:public
unwind_with_echo_area_buffer	xdisp.c	/^static void unwind_with_echo_area_buffer (Lisp_Object);$/;"	p	file:
unwind_with_echo_area_buffer	xdisp.c	/^unwind_with_echo_area_buffer (Lisp_Object vector)$/;"	f	file:	signature:(Lisp_Object vector)
un_autoload	eval.c	/^un_autoload (Lisp_Object oldqueue)$/;"	f	signature:(Lisp_Object oldqueue)
un_autoload	lisp.h	/^extern void un_autoload (Lisp_Object);$/;"	p	signature:(Lisp_Object)
Up	cm.h	106;"	d
up	intervals.h	/^  } up;$/;"	m	struct:interval	typeref:union:interval::__anon142	access:public
UP	terminfo.c	/^char *UP, *BC, PC;$/;"	v
UP	tparam.c	/^char *UP;$/;"	v
upcase	buffer.h	/^upcase (int c)$/;"	f	signature:(int c)
upcase_table_	buffer.h	/^  Lisp_Object upcase_table_;$/;"	m	struct:buffer	access:public
UpCost	cm.h	129;"	d
update	unexhp9k800.c	120;"	d	file:
update	unexhp9k800.c	153;"	d	file:
updated_p	frame.h	/^  bool_bf updated_p : 1;$/;"	m	struct:frame	access:public
update_auto_fontset_alist	fontset.c	/^static void update_auto_fontset_alist (Lisp_Object, Lisp_Object);$/;"	p	file:
update_auto_fontset_alist	fontset.c	/^update_auto_fontset_alist (Lisp_Object font_object, Lisp_Object fontset)$/;"	f	file:	signature:(Lisp_Object font_object, Lisp_Object fontset)
update_begin	dispextern.h	/^extern void update_begin (struct frame *);$/;"	p	signature:(struct frame *)
update_begin	terminal.c	/^update_begin (struct frame *f)$/;"	f	signature:(struct frame *f)
update_begin_hook	termhooks.h	/^  void (*update_begin_hook) (struct frame *);$/;"	m	struct:terminal	access:public
UPDATE_BEG_END_STATE	lread.c	859;"	d	file:
update_buffer_properties	editfns.c	/^static void update_buffer_properties (ptrdiff_t, ptrdiff_t);$/;"	p	file:
update_buffer_properties	editfns.c	/^update_buffer_properties (ptrdiff_t start, ptrdiff_t end)$/;"	f	file:	signature:(ptrdiff_t start, ptrdiff_t end)
update_cl_data	gtkutil.c	/^update_cl_data (xg_menu_cb_data *cl_data,$/;"	f	file:	signature:(xg_menu_cb_data *cl_data, struct frame *f, GCallback highlight_cb)
update_compositions	composite.c	/^update_compositions (ptrdiff_t from, ptrdiff_t to, int check_mask)$/;"	f	signature:(ptrdiff_t from, ptrdiff_t to, int check_mask)
update_compositions	composite.h	/^extern void update_compositions (ptrdiff_t, ptrdiff_t, int);$/;"	p	signature:(ptrdiff_t, ptrdiff_t, int)
update_cursor_in_window_tree	xdisp.c	/^update_cursor_in_window_tree (struct window *w, bool on_p)$/;"	f	file:	signature:(struct window *w, bool on_p)
update_echo_area	lisp.h	/^extern void update_echo_area (void);$/;"	p	signature:(void)
update_echo_area	xdisp.c	/^update_echo_area (void)$/;"	f	signature:(void)
update_end	dispextern.h	/^extern void update_end (struct frame *);$/;"	p	signature:(struct frame *)
update_end	terminal.c	/^update_end (struct frame *f)$/;"	f	signature:(struct frame *f)
update_end_hook	termhooks.h	/^  void (*update_end_hook) (struct frame *);$/;"	m	struct:terminal	access:public
update_face_from_frame_parameter	dispextern.h	/^void update_face_from_frame_parameter (struct frame *, Lisp_Object,$/;"	p	signature:(struct frame *, Lisp_Object, Lisp_Object)
update_face_from_frame_parameter	xfaces.c	/^update_face_from_frame_parameter (struct frame *f, Lisp_Object param,$/;"	f	signature:(struct frame *f, Lisp_Object param, Lisp_Object new_value)
update_file_ptrs	unexhp9k800.c	/^update_file_ptrs (int file, struct header *hdr, struct som_exec_auxhdr *auxhdr,$/;"	f	file:	signature:(int file, struct header *hdr, struct som_exec_auxhdr *auxhdr, unsigned int location, int offset)
update_frame	dispextern.h	/^extern bool update_frame (struct frame *, bool, bool);$/;"	p	signature:(struct frame *, bool, bool)
update_frame	dispnew.c	/^update_frame (struct frame *f, bool force_p, bool inhibit_hairy_id_p)$/;"	f	signature:(struct frame *f, bool force_p, bool inhibit_hairy_id_p)
update_frame_1	dispnew.c	/^static bool update_frame_1 (struct frame *, bool, bool, bool);$/;"	p	file:	signature:(struct frame *, bool, bool, bool)
update_frame_1	dispnew.c	/^update_frame_1 (struct frame *f, bool force_p, bool inhibit_id_p,$/;"	f	file:	signature:(struct frame *f, bool force_p, bool inhibit_id_p, bool set_cursor_p)
update_frame_line	dispnew.c	/^static void update_frame_line (struct frame *, int);$/;"	p	file:	signature:(struct frame *, int)
update_frame_line	dispnew.c	/^update_frame_line (struct frame *f, int vpos)$/;"	f	file:	signature:(struct frame *f, int vpos)
update_frame_menubar	xmenu.c	/^update_frame_menubar (struct frame *f)$/;"	f	file:	signature:(struct frame *f)
update_frame_tool_bar	gtkutil.c	/^update_frame_tool_bar (struct frame *f)$/;"	f	signature:(struct frame *f)
update_frame_tool_bar	gtkutil.h	/^extern void update_frame_tool_bar (struct frame *f);$/;"	p	signature:(struct frame *f)
update_frame_tool_bar	nsterm.h	/^extern void update_frame_tool_bar (struct frame *f);$/;"	p	signature:(struct frame *f)
update_frame_with_menu	dispextern.h	/^extern void update_frame_with_menu (struct frame *, int, int);$/;"	p	signature:(struct frame *, int, int)
update_frame_with_menu	dispnew.c	/^update_frame_with_menu (struct frame *f, int row, int col)$/;"	f	signature:(struct frame *f, int row, int col)
update_from_various_frame_slots	widget.c	/^update_from_various_frame_slots (EmacsFrame ew)$/;"	f	file:	signature:(EmacsFrame ew)
update_heap_bloc_correspondence	ralloc.c	/^update_heap_bloc_correspondence (bloc_ptr bloc, heap_ptr heap)$/;"	f	file:	signature:(bloc_ptr bloc, heap_ptr heap)
update_interval	intervals.c	/^update_interval (register INTERVAL i, ptrdiff_t pos)$/;"	f	signature:(register INTERVAL i, ptrdiff_t pos)
update_interval	intervals.h	/^extern INTERVAL update_interval (INTERVAL, ptrdiff_t);$/;"	p	signature:(INTERVAL, ptrdiff_t)
update_marginal_area	dispnew.c	/^update_marginal_area (struct window *w, struct glyph_row *updated_row,$/;"	f	file:	signature:(struct window *w, struct glyph_row *updated_row, enum glyph_row_area area, int vpos)
update_menu_bar	xdisp.c	/^static bool update_menu_bar (struct frame *, bool, bool);$/;"	p	file:	signature:(struct frame *, bool, bool)
update_menu_bar	xdisp.c	/^update_menu_bar (struct frame *f, bool save_match_data, bool hooks_run)$/;"	f	file:	signature:(struct frame *f, bool save_match_data, bool hooks_run)
update_mode_line	window.h	/^    bool_bf update_mode_line : 1;$/;"	m	struct:window	access:public
update_mode_lines	xdisp.c	/^int update_mode_lines;$/;"	v
update_overlay_arrows	xdisp.c	/^update_overlay_arrows (int up_to_date)$/;"	f	file:	signature:(int up_to_date)
update_processes_for_thread_death	process.c	/^update_processes_for_thread_death (Lisp_Object dying_thread)$/;"	f	signature:(Lisp_Object dying_thread)
update_processes_for_thread_death	process.h	/^extern void update_processes_for_thread_death (Lisp_Object);$/;"	p	signature:(Lisp_Object)
update_search_regs	lisp.h	/^extern void update_search_regs (ptrdiff_t oldstart,$/;"	p	signature:(ptrdiff_t oldstart, ptrdiff_t oldend, ptrdiff_t newend)
update_search_regs	search.c	/^update_search_regs (ptrdiff_t oldstart, ptrdiff_t oldend, ptrdiff_t newend)$/;"	f	signature:(ptrdiff_t oldstart, ptrdiff_t oldend, ptrdiff_t newend)
update_single_window	dispextern.h	/^void update_single_window (struct window *);$/;"	p	signature:(struct window *)
update_single_window	dispnew.c	/^update_single_window (struct window *w)$/;"	f	signature:(struct window *w)
update_status	process.c	/^update_status (struct Lisp_Process *p)$/;"	f	file:	signature:(struct Lisp_Process *p)
update_submenu_strings	menu.c	/^update_submenu_strings (widget_value *first_wv)$/;"	f	signature:(widget_value *first_wv)
update_submenu_strings	menu.h	/^extern void update_submenu_strings (widget_value *);$/;"	p	signature:(widget_value *)
update_syntax_table	syntax.c	/^update_syntax_table (ptrdiff_t charpos, EMACS_INT count, bool init,$/;"	f	signature:(ptrdiff_t charpos, EMACS_INT count, bool init, Lisp_Object object)
update_syntax_table	syntax.h	/^extern void update_syntax_table (ptrdiff_t, EMACS_INT, bool, Lisp_Object);$/;"	p	signature:(ptrdiff_t, EMACS_INT, bool, Lisp_Object)
UPDATE_SYNTAX_TABLE	syntax.h	/^UPDATE_SYNTAX_TABLE (ptrdiff_t charpos)$/;"	f	signature:(ptrdiff_t charpos)
UPDATE_SYNTAX_TABLE_BACKWARD	syntax.h	/^UPDATE_SYNTAX_TABLE_BACKWARD (ptrdiff_t charpos)$/;"	f	signature:(ptrdiff_t charpos)
UPDATE_SYNTAX_TABLE_FAST	syntax.h	/^UPDATE_SYNTAX_TABLE_FAST (ptrdiff_t charpos)$/;"	f	signature:(ptrdiff_t charpos)
update_syntax_table_forward	syntax.c	/^update_syntax_table_forward (ptrdiff_t charpos, bool init,$/;"	f	signature:(ptrdiff_t charpos, bool init, Lisp_Object object)
update_syntax_table_forward	syntax.h	/^extern void update_syntax_table_forward (ptrdiff_t, bool, Lisp_Object);$/;"	p	signature:(ptrdiff_t, bool, Lisp_Object)
UPDATE_SYNTAX_TABLE_FORWARD	syntax.h	/^UPDATE_SYNTAX_TABLE_FORWARD (ptrdiff_t charpos)$/;"	f	signature:(ptrdiff_t charpos)
UPDATE_SYNTAX_TABLE_FORWARD_FAST	syntax.h	/^UPDATE_SYNTAX_TABLE_FORWARD_FAST (ptrdiff_t charpos)$/;"	f	signature:(ptrdiff_t charpos)
update_text_area	dispnew.c	/^update_text_area (struct window *w, struct glyph_row *updated_row, int vpos)$/;"	f	file:	signature:(struct window *w, struct glyph_row *updated_row, int vpos)
update_theme_scrollbar_height	gtkutil.c	/^static void update_theme_scrollbar_height (void);$/;"	p	file:	signature:(void)
update_theme_scrollbar_height	gtkutil.c	/^update_theme_scrollbar_height (void)$/;"	f	file:	signature:(void)
update_theme_scrollbar_width	gtkutil.c	/^static void update_theme_scrollbar_width (void);$/;"	p	file:	signature:(void)
update_theme_scrollbar_width	gtkutil.c	/^update_theme_scrollbar_width (void)$/;"	f	file:	signature:(void)
update_tick	process.c	/^static EMACS_INT update_tick;$/;"	v	file:
update_tick	process.h	/^    EMACS_INT update_tick;$/;"	m	struct:Lisp_Process	access:public
update_time	image.c	/^  struct timespec update_time;$/;"	m	struct:animation_cache	typeref:struct:animation_cache::timespec	file:	access:public
update_tool_bar	xdisp.c	/^static void update_tool_bar (struct frame *, bool);$/;"	p	file:	signature:(struct frame *, bool)
update_tool_bar	xdisp.c	/^update_tool_bar (struct frame *f, bool save_match_data)$/;"	f	file:	signature:(struct frame *f, bool save_match_data)
update_various_frame_slots	widget.c	/^update_various_frame_slots (EmacsFrame ew)$/;"	f	file:	signature:(EmacsFrame ew)
update_window	dispnew.c	/^static bool update_window (struct window *, bool);$/;"	p	file:	signature:(struct window *, bool)
update_window	dispnew.c	/^update_window (struct window *w, bool force_p)$/;"	f	file:	signature:(struct window *w, bool force_p)
update_window_begin_hook	dispextern.h	/^  void (*update_window_begin_hook) (struct window *w);$/;"	m	struct:redisplay_interface	access:public
update_window_cursor	xdisp.c	/^update_window_cursor (struct window *w, bool on)$/;"	f	file:	signature:(struct window *w, bool on)
update_window_end_hook	dispextern.h	/^  void (*update_window_end_hook) (struct window *w, bool cursor_on_p,$/;"	m	struct:redisplay_interface	access:public
update_window_fringes	dispextern.h	/^bool update_window_fringes (struct window *, bool);$/;"	p	signature:(struct window *, bool)
update_window_fringes	fringe.c	/^update_window_fringes (struct window *w, bool keep_current_p)$/;"	f	signature:(struct window *w, bool keep_current_p)
update_window_line	dispnew.c	/^static bool update_window_line (struct window *, int, bool *);$/;"	p	file:	signature:(struct window *, int, bool *)
update_window_line	dispnew.c	/^update_window_line (struct window *w, int vpos, bool *mouse_face_overwritten_p)$/;"	f	file:	signature:(struct window *w, int vpos, bool *mouse_face_overwritten_p)
update_window_tree	dispnew.c	/^static bool update_window_tree (struct window *, bool);$/;"	p	file:	signature:(struct window *, bool)
update_window_tree	dispnew.c	/^update_window_tree (struct window *w, bool force_p)$/;"	f	file:	signature:(struct window *w, bool force_p)
update_wm_hints	widget.c	/^update_wm_hints (EmacsFrame ew)$/;"	f	file:	signature:(EmacsFrame ew)
uppercasep	buffer.h	/^uppercasep (int c)$/;"	f	signature:(int c)
upper_xoff	dispextern.h	/^      short upper_xoff, upper_yoff;$/;"	m	struct:glyph::__anon107::__anon109	access:public
upper_yoff	dispextern.h	/^      short upper_xoff, upper_yoff;$/;"	m	struct:glyph::__anon107::__anon109	access:public
uprintmax_t	lisp.h	/^typedef EMACS_UINT uprintmax_t;$/;"	t
uprintmax_t	lisp.h	/^typedef uintmax_t uprintmax_t;$/;"	t
up_arrow_bits	fringe.c	/^static unsigned short up_arrow_bits[] = {$/;"	v	file:
up_modifier	termhooks.h	/^  up_modifier	=   1,		\/* Only used on mouse buttons - always$/;"	e	enum:__anon72
up_obj	intervals.h	/^  bool_bf up_obj : 1;$/;"	m	struct:interval	access:public
uRSQM	character.h	85;"	d
us	systime.h	/^  int lo, us, ps;$/;"	m	struct:lisp_time	access:public
USABLE_FIONREAD	config.h	1597;"	d
USABLE_SIGIO	config.h	1600;"	d
usage_message	emacs.c	/^static char const *const usage_message[] =$/;"	v	file:
USECR	cm.c	314;"	d	file:
used	buffer.c	/^  ptrdiff_t used;	\/* How much of the array is currently in use.  *\/$/;"	m	struct:sortstrlist	file:	access:public
used	dispextern.h	/^  int used;$/;"	m	struct:face_cache	access:public
used	dispextern.h	/^  ptrdiff_t used;$/;"	m	struct:image_cache	access:public
used	dispextern.h	/^  short used[1 + LAST_AREA];$/;"	m	struct:glyph_row	access:public
used	gtkutil.c	/^  ptrdiff_t used;$/;"	m	struct:__anon124	file:	access:public
used	regex.c	/^  int used;			\/* actually used size in words.  *\/$/;"	m	struct:range_table_work_area	file:	access:public
used	regex.h	/^  size_t used;$/;"	m	struct:re_pattern_buffer	access:public
used_syntax	regex.h	/^  unsigned used_syntax : 1;$/;"	m	struct:re_pattern_buffer	access:public
USEHOME	cm.c	312;"	d	file:
USELL	cm.c	313;"	d	file:
user	filelock.c	/^  char user[MAX_LFINFO + 1 + sizeof " (pid )" - sizeof "."];$/;"	m	struct:__anon52	file:	access:public
user	w32.c	/^  ULONGLONG user;$/;"	m	struct:load_sample	file:	access:public
USEREL	cm.c	311;"	d	file:
user_cmp_function	lisp.h	/^  Lisp_Object user_cmp_function;$/;"	m	struct:hash_table_test	access:public
user_error	keyboard.c	/^user_error (const char *msg)$/;"	f	file:	signature:(const char *msg)
USER_FULL_NAME	config.h	1603;"	d
user_hash_function	lisp.h	/^  Lisp_Object user_hash_function;$/;"	m	struct:hash_table_test	access:public
USER_PTRP	lisp.h	/^USER_PTRP (Lisp_Object x)$/;"	f	signature:(Lisp_Object x)
user_signals	keyboard.c	/^static struct user_signal_info *user_signals = NULL;$/;"	v	typeref:struct:user_signal_info	file:
USER_SIGNAL_EVENT	termhooks.h	/^  USER_SIGNAL_EVENT,		\/* A user signal.$/;"	e	enum:event_kind
user_signal_info	keyboard.c	/^struct user_signal_info$/;"	s	file:
user_signal_info::name	keyboard.c	/^  char *name;$/;"	m	struct:user_signal_info	file:	access:public
user_signal_info::next	keyboard.c	/^  struct user_signal_info *next;$/;"	m	struct:user_signal_info	typeref:struct:user_signal_info::user_signal_info	file:	access:public
user_signal_info::npending	keyboard.c	/^  int npending;$/;"	m	struct:user_signal_info	file:	access:public
user_signal_info::sig	keyboard.c	/^  int sig;$/;"	m	struct:user_signal_info	file:	access:public
UseTabs	cm.h	125;"	d
USE_ACL	config.h	1606;"	d
USE_ALIGNED_ALLOC	alloc.c	1148;"	d	file:
USE_ALIGNED_ALLOC	alloc.c	1150;"	d	file:
use_box_color_for_shadows_p	dispextern.h	/^  bool_bf use_box_color_for_shadows_p : 1;$/;"	m	struct:face	access:public
use_default_font_for_symbols	globals.h	1053;"	d
use_dialog_box	globals.h	1055;"	d
use_file_dialog	globals.h	1057;"	d
USE_FILE_NOTIFY	config.h	1612;"	d
use_global	syntax.h	/^  bool use_global;			\/* Whether to use global_code$/;"	m	struct:gl_state_s	access:public
USE_GTK	config.h	1615;"	d
USE_GTK_TOOLTIP	xterm.h	74;"	d
USE_HORIZONTAL_SCROLL_BARS	window.h	803;"	d
USE_HORIZONTAL_SCROLL_BARS	window.h	805;"	d
USE_LSB_TAG	lisp.h	245;"	d
USE_NEW_GTK_FONT_CHOOSER	gtkutil.c	94;"	d	file:
USE_NEW_GTK_FONT_CHOOSER	gtkutil.c	96;"	d	file:
USE_PTHREAD	gmalloc.c	25;"	d	file:
use_relocatable_buffers	ralloc.c	/^static int use_relocatable_buffers;$/;"	v	file:
USE_SAFE_ALLOCA	lisp.h	4450;"	d
USE_STACK_CONS	lisp.h	/^    USE_STACK_CONS = (USE_STACK_LISP_OBJECTS$/;"	e	enum:__anon38
USE_STACK_LISP_OBJECTS	lisp.h	4535;"	d
USE_STACK_LISP_OBJECTS	lisp.h	4538;"	d
USE_STACK_STRING	lisp.h	/^    USE_STACK_STRING = (USE_STACK_CONS$/;"	e	enum:__anon38
use_system_font	globals.h	1059;"	d
use_time	window.h	/^    EMACS_INT use_time;$/;"	m	struct:window	access:public
USE_TOOLKIT_SCROLL_BARS	config.h	1690;"	d
USE_UNLOCKED_IO	config.h	1695;"	d
USE_VALGRIND	alloc.c	65;"	d	file:
USE_XCB	config.h	1699;"	d
USE_XIM	config.h	1702;"	d
use_xim	xterm.c	/^bool use_xim = false;  \/* configure --without-xim *\/$/;"	v
use_xim	xterm.c	/^bool use_xim = true;$/;"	v
USG	config.h	1708;"	d
USG	xfaces.c	246;"	d	file:
USG	xfaces.c	248;"	d	file:
USG	xfns.c	74;"	d	file:
USG	xfns.c	76;"	d	file:
using_dynamic_heap	unexw32.c	/^BOOL using_dynamic_heap = FALSE;$/;"	v
using_utf8	emacs.c	/^using_utf8 (void)$/;"	f	file:	signature:(void)
USPosition	nsgui.h	185;"	d
USPosition	w32gui.h	103;"	d
USSize	nsgui.h	186;"	d
USSize	w32gui.h	104;"	d
utc_base	w32.c	/^static ULONGLONG utc_base;  \/* In 100ns units *\/$/;"	v	file:
utc_base_ft	w32.c	/^static FILETIME utc_base_ft;$/;"	v	file:
utc_tz	editfns.c	/^static timezone_t const utc_tz = 0;$/;"	v	file:
utf8to16	w32menu.c	/^static void utf8to16 (unsigned char *, int, WCHAR *);$/;"	p	file:	signature:(unsigned char *, int, WCHAR *)
utf8to16	w32menu.c	/^utf8to16 (unsigned char * src, int len, WCHAR * dest)$/;"	f	file:	signature:(unsigned char * src, int len, WCHAR * dest)
utf8_mbslen_lim	w32fns.c	/^utf8_mbslen_lim (const char *str, int lim)$/;"	f	file:	signature:(const char *str, int lim)
utf_16	coding.h	/^      struct utf_16_spec utf_16;$/;"	m	union:coding_system::__anon152	typeref:struct:coding_system::__anon152::utf_16_spec	access:public
utf_16_big_endian	coding.h	/^    utf_16_big_endian,$/;"	e	enum:utf_16_endian_type
utf_16_endian_type	coding.h	/^enum utf_16_endian_type$/;"	g
UTF_16_HIGH_SURROGATE_P	coding.c	1518;"	d	file:
utf_16_little_endian	coding.h	/^    utf_16_little_endian$/;"	e	enum:utf_16_endian_type
UTF_16_LOW_SURROGATE_P	coding.c	1521;"	d	file:
utf_16_spec	coding.h	/^struct utf_16_spec$/;"	s
utf_16_spec::bom	coding.h	/^  enum utf_bom_type bom;$/;"	m	struct:utf_16_spec	typeref:enum:utf_16_spec::utf_bom_type	access:public
utf_16_spec::endian	coding.h	/^  enum utf_16_endian_type endian;$/;"	m	struct:utf_16_spec	typeref:enum:utf_16_spec::utf_16_endian_type	access:public
utf_16_spec::surrogate	coding.h	/^  int surrogate;$/;"	m	struct:utf_16_spec	access:public
UTF_8_1_OCTET_P	coding.c	1136;"	d	file:
UTF_8_2_OCTET_LEADING_P	coding.c	1138;"	d	file:
UTF_8_3_OCTET_LEADING_P	coding.c	1139;"	d	file:
UTF_8_4_OCTET_LEADING_P	coding.c	1140;"	d	file:
UTF_8_5_OCTET_LEADING_P	coding.c	1141;"	d	file:
utf_8_bom	coding.h	/^      enum utf_bom_type utf_8_bom;$/;"	m	union:coding_system::__anon152	typeref:enum:coding_system::__anon152::utf_bom_type	access:public
UTF_8_BOM_1	coding.c	1143;"	d	file:
UTF_8_BOM_2	coding.c	1144;"	d	file:
UTF_8_BOM_3	coding.c	1145;"	d	file:
UTF_8_EXTRA_OCTET_P	coding.c	1137;"	d	file:
utf_bom_type	coding.h	/^enum utf_bom_type$/;"	g
utf_detect_bom	coding.h	/^    utf_detect_bom,$/;"	e	enum:utf_bom_type
utf_without_bom	coding.h	/^    utf_without_bom,$/;"	e	enum:utf_bom_type
utf_with_bom	coding.h	/^    utf_with_bom$/;"	e	enum:utf_bom_type
utime	w32.c	/^utime (const char *name, struct utimbuf *times)$/;"	f	signature:(const char *name, struct utimbuf *times)
uTimeout	w32fns.c	/^    UINT uTimeout;$/;"	m	union:MY_NOTIFYICONDATAW::__anon75	file:	access:public
uVersion	w32fns.c	/^    UINT uVersion;$/;"	m	union:MY_NOTIFYICONDATAW::__anon75	file:	access:public
u_any	lisp.h	/^    struct Lisp_Misc_Any u_any;	   \/* Supertype of all Misc types.  *\/$/;"	m	union:Lisp_Misc	typeref:struct:Lisp_Misc::Lisp_Misc_Any	access:public
u_boolfwd	lisp.h	/^    struct Lisp_Boolfwd u_boolfwd;$/;"	m	union:Lisp_Fwd	typeref:struct:Lisp_Fwd::Lisp_Boolfwd	access:public
u_buffer_objfwd	lisp.h	/^    struct Lisp_Buffer_Objfwd u_buffer_objfwd;$/;"	m	union:Lisp_Fwd	typeref:struct:Lisp_Fwd::Lisp_Buffer_Objfwd	access:public
u_finalizer	lisp.h	/^    struct Lisp_Finalizer u_finalizer;$/;"	m	union:Lisp_Misc	typeref:struct:Lisp_Misc::Lisp_Finalizer	access:public
u_free	lisp.h	/^    struct Lisp_Free u_free;$/;"	m	union:Lisp_Misc	typeref:struct:Lisp_Misc::Lisp_Free	access:public
u_intfwd	lisp.h	/^    struct Lisp_Intfwd u_intfwd;$/;"	m	union:Lisp_Fwd	typeref:struct:Lisp_Fwd::Lisp_Intfwd	access:public
u_kboard_objfwd	lisp.h	/^    struct Lisp_Kboard_Objfwd u_kboard_objfwd;$/;"	m	union:Lisp_Fwd	typeref:struct:Lisp_Fwd::Lisp_Kboard_Objfwd	access:public
u_marker	lisp.h	/^    struct Lisp_Marker u_marker;$/;"	m	union:Lisp_Misc	typeref:struct:Lisp_Misc::Lisp_Marker	access:public
u_objfwd	lisp.h	/^    struct Lisp_Objfwd u_objfwd;$/;"	m	union:Lisp_Fwd	typeref:struct:Lisp_Fwd::Lisp_Objfwd	access:public
u_overlay	lisp.h	/^    struct Lisp_Overlay u_overlay;$/;"	m	union:Lisp_Misc	typeref:struct:Lisp_Misc::Lisp_Overlay	access:public
u_save_value	lisp.h	/^    struct Lisp_Save_Value u_save_value;$/;"	m	union:Lisp_Misc	typeref:struct:Lisp_Misc::Lisp_Save_Value	access:public
u_user_ptr	lisp.h	/^    struct Lisp_User_Ptr u_user_ptr;$/;"	m	union:Lisp_Misc	typeref:struct:Lisp_Misc::Lisp_User_Ptr	access:public
vadd_to_log	lisp.h	/^extern void vadd_to_log (char const *, va_list);$/;"	p	signature:(char const *, va_list)
vadd_to_log	xdisp.c	/^vadd_to_log (char const *format, va_list ap)$/;"	f	signature:(char const *format, va_list ap)
Vafter_change_functions	globals.h	5;"	d
Vafter_init_time	globals.h	7;"	d
Vafter_insert_file_functions	globals.h	9;"	d
Vafter_load_alist	globals.h	11;"	d
val	dispextern.h	/^    unsigned val;$/;"	m	union:glyph::__anon110	access:public
val	lisp.h	/^  Lisp_Object val;$/;"	m	struct:handler	access:public
val	lisp.h	/^  } val;$/;"	m	struct:Lisp_Symbol	typeref:union:Lisp_Symbol::__anon18	access:public
VALBITS	lisp.h	/^    VALBITS = EMACS_INT_WIDTH - GCTYPEBITS,$/;"	e	enum:Lisp_Bits
valcell	lisp.h	/^    Lisp_Object valcell;$/;"	m	struct:Lisp_Buffer_Local_Value	access:public
valgrind_p	alloc.c	/^static bool valgrind_p;$/;"	v	file:
validate_coding_system	w32select.c	/^static Lisp_Object validate_coding_system (Lisp_Object coding_system);$/;"	p	file:	signature:(Lisp_Object coding_system)
validate_coding_system	w32select.c	/^validate_coding_system (Lisp_Object coding_system)$/;"	f	file:	signature:(Lisp_Object coding_system)
validate_interval_range	intervals.h	/^extern INTERVAL validate_interval_range (Lisp_Object, Lisp_Object *,$/;"	p	signature:(Lisp_Object, Lisp_Object *, Lisp_Object *, bool)
validate_interval_range	textprop.c	/^validate_interval_range (Lisp_Object object, Lisp_Object *begin,$/;"	f	signature:(Lisp_Object object, Lisp_Object *begin, Lisp_Object *end, bool force)
validate_plist	textprop.c	/^validate_plist (Lisp_Object list)$/;"	f	file:	signature:(Lisp_Object list)
validate_region	buffer.c	/^validate_region (register Lisp_Object *b, register Lisp_Object *e)$/;"	f	signature:(register Lisp_Object *b, register Lisp_Object *e)
validate_region	buffer.h	/^extern void validate_region (Lisp_Object *, Lisp_Object *);$/;"	p	signature:(Lisp_Object *, Lisp_Object *)
validate_subarray	fns.c	/^validate_subarray (Lisp_Object array, Lisp_Object from, Lisp_Object to,$/;"	f	signature:(Lisp_Object array, Lisp_Object from, Lisp_Object to, ptrdiff_t size, ptrdiff_t *ifrom, ptrdiff_t *ito)
validate_subarray	lisp.h	/^extern void validate_subarray (Lisp_Object, Lisp_Object, Lisp_Object,$/;"	p	signature:(Lisp_Object, Lisp_Object, Lisp_Object, ptrdiff_t, ptrdiff_t *, ptrdiff_t *)
validate_x_resource_name	frame.c	/^validate_x_resource_name (void)$/;"	f	signature:(void)
validate_x_resource_name	frame.h	/^extern void validate_x_resource_name (void);$/;"	p	signature:(void)
validator	font.c	/^  Lisp_Object (*validator) (Lisp_Object prop, Lisp_Object val);$/;"	m	struct:__anon157	file:	access:public
valid_filename_p	termcap.c	/^valid_filename_p (char *fn)$/;"	f	file:	signature:(char *fn)
valid_font_driver	font.c	/^valid_font_driver (struct font_driver const *drv)$/;"	f	signature:(struct font_driver const *drv)
valid_font_driver	font.h	/^extern bool valid_font_driver (struct font_driver const *);$/;"	p	signature:(struct font_driver const *)
valid_font_driver	font.h	/^valid_font_driver (struct font_driver const *d)$/;"	f	signature:(struct font_driver const *d)
valid_image_p	dispextern.h	/^bool valid_image_p (Lisp_Object);$/;"	p	signature:(Lisp_Object)
valid_image_p	image.c	/^valid_image_p (Lisp_Object object)$/;"	f	signature:(Lisp_Object object)
valid_lisp_object_p	alloc.c	/^valid_lisp_object_p (Lisp_Object obj)$/;"	f	signature:(Lisp_Object obj)
valid_lisp_object_p	lisp.h	/^extern int valid_lisp_object_p (Lisp_Object);$/;"	p	signature:(Lisp_Object)
valid_p	dispextern.h	/^  bool (* valid_p) (Lisp_Object spec);$/;"	m	struct:image_type	access:public
valid_pointer_p	alloc.c	/^valid_pointer_p (void *p)$/;"	f	file:	signature:(void *p)
valid_timestamp_file_system	fileio.c	/^static bool valid_timestamp_file_system;$/;"	v	file:
valid_watch_descriptor	inotify.c	/^valid_watch_descriptor (Lisp_Object wd)$/;"	f	file:	signature:(Lisp_Object wd)
valid_xwidget_spec_p	xwidget.c	/^valid_xwidget_spec_p (Lisp_Object object)$/;"	f	signature:(Lisp_Object object)
valid_xwidget_spec_p	xwidget.h	/^bool valid_xwidget_spec_p (Lisp_Object);$/;"	p	signature:(Lisp_Object)
valid_xwidget_spec_p	xwidget.h	/^INLINE bool valid_xwidget_spec_p (Lisp_Object obj) { return false; }$/;"	f	signature:(Lisp_Object obj)
valloc	gmalloc.c	/^extern void *valloc (size_t);$/;"	p	file:
valloc	gmalloc.c	/^valloc (size_t size)$/;"	f	signature:(size_t size)
VALMASK	lisp.h	250;"	d
Valternate_fontname_alist	globals.h	13;"	d
value	data.c	/^    Lisp_Object value;$/;"	m	union:Lisp_Val_Fwd	file:	access:public
value	data.c	/^  (register Lisp_Object value, Lisp_Object count)$/;"	v
value	fns.c	/^  (Lisp_Object key, Lisp_Object value, Lisp_Object table)$/;"	v
value	image.c	/^  Lisp_Object value;$/;"	m	struct:image_keyword	file:	access:public
value	lisp.h	/^    Lisp_Object value;$/;"	m	union:Lisp_Symbol::__anon18	access:public
value	process.c	/^  (Lisp_Object process, Lisp_Object option, Lisp_Object value, Lisp_Object no_error)$/;"	v
value	region-cache.c	/^  int value;$/;"	m	struct:boundary	file:	access:public
value	textprop.c	/^   Lisp_Object value, Lisp_Object object)$/;"	v
value	textprop.c	/^  (Lisp_Object start, Lisp_Object end, Lisp_Object property, Lisp_Object value, Lisp_Object object)$/;"	v
value	xfaces.c	/^  (Lisp_Object face, Lisp_Object attr, Lisp_Object value, Lisp_Object frame)$/;"	v
value	xfns.c	/^  (Lisp_Object prop, Lisp_Object value, Lisp_Object frame,$/;"	v
value	xselect.c	/^  (Lisp_Object selection, Lisp_Object value, Lisp_Object frame)$/;"	v
value	xselect.c	/^  (Lisp_Object value, Lisp_Object frame)$/;"	v
value1	xfaces.c	/^  (Lisp_Object attribute, Lisp_Object value1, Lisp_Object value2)$/;"	v
values	emacs-module.c	/^  Lisp_Object values;$/;"	m	struct:emacs_env_private	file:	access:public
value_to_lisp	emacs-module.c	/^static Lisp_Object value_to_lisp (emacs_value);$/;"	p	file:
value_to_lisp	emacs-module.c	/^value_to_lisp (emacs_value v)$/;"	f	file:	signature:(emacs_value v)
value_to_lisp_bits	emacs-module.c	/^value_to_lisp_bits (emacs_value v)$/;"	f	file:	signature:(emacs_value v)
val_compute_motion	indent.c	/^static struct position val_compute_motion;$/;"	v	typeref:struct:position	file:
VAL_MAX	lisp.h	237;"	d
val_vmotion	indent.c	/^static struct position val_vmotion;$/;"	v	typeref:struct:position	file:
var	buffer.c	/^  void **var;$/;"	m	struct:mmap_region	file:	access:public
var	keyboard.c	/^  short var;$/;"	m	struct:event_head	file:	access:public
variable	buffer.c	/^  (register Lisp_Object variable, register Lisp_Object buffer)$/;"	v
variable	callproc.c	/^  (Lisp_Object variable, Lisp_Object env)$/;"	v
variable	data.c	/^  (Lisp_Object variable, Lisp_Object buffer)$/;"	v
variable	data.c	/^  (register Lisp_Object variable, Lisp_Object buffer)$/;"	v
variable	ralloc.c	/^  void **variable;$/;"	m	struct:bp	file:	access:public
Vascii_canon_table	casetab.c	/^Lisp_Object Vascii_canon_table;$/;"	v
Vascii_downcase_table	casetab.c	/^Lisp_Object Vascii_downcase_table;$/;"	v
Vascii_eqv_table	casetab.c	/^static Lisp_Object Vascii_eqv_table;$/;"	v	file:
Vascii_upcase_table	casetab.c	/^static Lisp_Object Vascii_upcase_table;$/;"	v	file:
Vautoload_queue	eval.c	/^Lisp_Object Vautoload_queue;$/;"	v
Vauto_composition_function	globals.h	15;"	d
Vauto_composition_mode	globals.h	17;"	d
Vauto_fill_chars	globals.h	19;"	d
Vauto_resize_tool_bars	globals.h	21;"	d
Vauto_save_include_big_deletions	globals.h	23;"	d
Vauto_save_list_file_name	globals.h	25;"	d
Vauto_save_timeout	globals.h	27;"	d
Vauto_save_visited_file_name	globals.h	29;"	d
Vbefore_change_functions	globals.h	31;"	d
Vbefore_init_time	globals.h	33;"	d
Vbig5_coding_system	coding.c	/^static Lisp_Object Vbig5_coding_system;$/;"	v	file:
Vblink_cursor_alist	globals.h	35;"	d
VBLOCK_BYTES_MAX	alloc.c	2914;"	d	file:
VBLOCK_BYTES_MIN	alloc.c	2910;"	d	file:
vbox_widget	xterm.h	/^  GtkWidget *vbox_widget;$/;"	m	struct:x_output	access:public
Vbuffer_access_fontified_property	globals.h	37;"	d
Vbuffer_access_fontify_functions	globals.h	39;"	d
Vbuffer_alist	buffer.c	/^Lisp_Object Vbuffer_alist;$/;"	v
Vbuffer_list_update_hook	globals.h	41;"	d
Vbuild_files	globals.h	43;"	d
Vbytecomp_version_regexp	globals.h	49;"	d
Vbyte_boolean_vars	globals.h	45;"	d
Vbyte_code_meter	globals.h	47;"	d
Vcached_fontset_data	fontset.c	/^static Lisp_Object Vcached_fontset_data;$/;"	v	file:
Vcairo_version_string	globals.h	51;"	d
Vccl_program_table	ccl.c	/^static Lisp_Object Vccl_program_table;$/;"	v	file:
VCENTER_BASELINE_OFFSET	dispextern.h	1497;"	d
Vchange_major_mode_hook	globals.h	53;"	d
Vcharset_hash_table	charset.c	/^Lisp_Object Vcharset_hash_table;$/;"	v
Vcharset_list	globals.h	63;"	d
Vcharset_map_path	globals.h	65;"	d
Vcharset_non_preferred_head	charset.c	/^Lisp_Object Vcharset_non_preferred_head;$/;"	v
Vcharset_ordered_list	charset.c	/^Lisp_Object Vcharset_ordered_list;$/;"	v
Vcharset_revision_table	globals.h	67;"	d
Vchar_code_property_alist	globals.h	55;"	d
Vchar_property_alias_alist	globals.h	57;"	d
Vchar_script_table	globals.h	59;"	d
Vchar_unify_table	character.c	/^Lisp_Object Vchar_unify_table;$/;"	v
Vchar_width_table	globals.h	61;"	d
Vcode_conversion_map_vector	globals.h	69;"	d
Vcode_conversion_reused_workbuf	coding.c	/^static Lisp_Object Vcode_conversion_reused_workbuf;$/;"	v	file:
Vcode_conversion_workbuf_name	coding.c	/^static Lisp_Object Vcode_conversion_workbuf_name;$/;"	v	file:
Vcoding_category_list	globals.h	71;"	d
Vcoding_category_table	coding.c	/^static Lisp_Object Vcoding_category_table;$/;"	v	file:
Vcoding_system_alist	globals.h	73;"	d
Vcoding_system_for_read	globals.h	75;"	d
Vcoding_system_for_write	globals.h	77;"	d
Vcoding_system_hash_table	coding.c	/^Lisp_Object Vcoding_system_hash_table;$/;"	v
Vcoding_system_list	globals.h	79;"	d
Vcombine_after_change_calls	globals.h	81;"	d
Vcommand_debug_status	globals.h	83;"	d
Vcommand_error_function	globals.h	85;"	d
Vcommand_history	globals.h	87;"	d
Vcommand_line_args	globals.h	89;"	d
Vcomment_end_can_be_escaped	globals.h	895;"	d
Vcompletion_ignored_extensions	globals.h	91;"	d
Vcompletion_regexp_list	globals.h	93;"	d
Vcompose_chars_after_function	globals.h	95;"	d
Vcomposition_function_table	globals.h	97;"	d
Vconfigure_info_directory	globals.h	99;"	d
vcopy	lisp.h	/^vcopy (Lisp_Object v, ptrdiff_t offset, Lisp_Object *args, ptrdiff_t count)$/;"	f	signature:(Lisp_Object v, ptrdiff_t offset, Lisp_Object *args, ptrdiff_t count)
VCSWITNESS	Makefile	/^VCSWITNESS =$/;"	m
Vcurrent_iso639_language	globals.h	101;"	d
Vcurrent_load_list	globals.h	103;"	d
Vcurrent_prefix_arg	globals.h	105;"	d
Vdata_directory	globals.h	107;"	d
Vdbus_compiled_version	globals.h	109;"	d
Vdbus_debug	globals.h	111;"	d
Vdbus_message_type_error	globals.h	113;"	d
Vdbus_message_type_invalid	globals.h	115;"	d
Vdbus_message_type_method_call	globals.h	117;"	d
Vdbus_message_type_method_return	globals.h	119;"	d
Vdbus_message_type_signal	globals.h	121;"	d
Vdbus_registered_objects_table	globals.h	123;"	d
Vdbus_runtime_version	globals.h	125;"	d
Vdeactivate_mark	globals.h	127;"	d
Vdead	alloc.c	/^static Lisp_Object Vdead;$/;"	v	file:
Vdebugger	globals.h	139;"	d
Vdebug_ignored_errors	globals.h	129;"	d
Vdebug_on_error	globals.h	131;"	d
Vdebug_on_event	globals.h	133;"	d
Vdebug_on_message	globals.h	135;"	d
Vdebug_on_signal	globals.h	137;"	d
Vdefault_file_name_coding_system	globals.h	141;"	d
Vdefault_fontset	fontset.c	/^static Lisp_Object Vdefault_fontset;$/;"	v	file:
Vdefault_frame_alist	globals.h	143;"	d
Vdefault_frame_scroll_bars	globals.h	145;"	d
Vdefault_minibuffer_frame_	keyboard.h	/^    Lisp_Object Vdefault_minibuffer_frame_;$/;"	m	struct:kboard	access:public
Vdefault_process_coding_system	globals.h	147;"	d
Vdefault_text_properties	globals.h	149;"	d
Vdeferred_action_function	globals.h	151;"	d
Vdeferred_action_list	globals.h	153;"	d
Vdefine_key_rebound_commands	globals.h	155;"	d
Vdelayed_warnings_list	globals.h	157;"	d
Vdelete_frame_functions	globals.h	159;"	d
Vdelete_terminal_functions	globals.h	161;"	d
Vdisable_point_adjustment	globals.h	163;"	d
Vdisplay_line_numbers	globals.h	165;"	d
Vdisplay_line_numbers_current_absolute	globals.h	167;"	d
Vdisplay_line_numbers_width	globals.h	169;"	d
Vdisplay_pixels_per_inch	globals.h	171;"	d
Vdoc_directory	globals.h	173;"	d
Vdoc_file_name	globals.h	175;"	d
Vdouble_click_time	globals.h	177;"	d
Vdynamic_library_alist	globals.h	179;"	d
Vecho_keystrokes	globals.h	181;"	d
VECSIZE	lisp.h	1604;"	d
vector	bytecode.c	/^  (Lisp_Object bytestr, Lisp_Object vector, Lisp_Object maxdepth)$/;"	v
vector	keymap.c	/^  (Lisp_Object vector, Lisp_Object describer)$/;"	v
VECTORLIKEP	lisp.h	/^(VECTORLIKEP) (Lisp_Object x)$/;"	f	signature:(Lisp_Object x)
VECTORLIKEP	lisp.h	366;"	d
vectorlike_header	lisp.h	/^struct vectorlike_header$/;"	s
vectorlike_header::size	lisp.h	/^    ptrdiff_t size;$/;"	m	struct:vectorlike_header	access:public
VECTORP	lisp.h	/^VECTORP (Lisp_Object x)$/;"	f	signature:(Lisp_Object x)
vector_alignment	alloc.c	/^    vector_alignment = COMMON_MULTIPLE (FLEXALIGNOF (struct Lisp_Vector),$/;"	e	enum:__anon9	file:
vector_block	alloc.c	/^struct vector_block$/;"	s	file:
vector_block::data	alloc.c	/^  char data[VECTOR_BLOCK_BYTES];$/;"	m	struct:vector_block	file:	access:public
vector_block::next	alloc.c	/^  struct vector_block *next;$/;"	m	struct:vector_block	typeref:struct:vector_block::vector_block	file:	access:public
vector_blocks	alloc.c	/^static struct vector_block *vector_blocks;$/;"	v	typeref:struct:vector_block	file:
VECTOR_BLOCK_BYTES	alloc.c	2906;"	d	file:
VECTOR_BLOCK_SIZE	alloc.c	2883;"	d	file:
vector_cells_consed	globals.h	891;"	d
vector_free_lists	alloc.c	/^static struct Lisp_Vector *vector_free_lists[VECTOR_MAX_FREE_LIST_INDEX];$/;"	v	typeref:struct:Lisp_Vector	file:
VECTOR_IN_BLOCK	alloc.c	3092;"	d	file:
VECTOR_MARK	alloc.c	214;"	d	file:
VECTOR_MARKED_P	alloc.c	216;"	d	file:
VECTOR_MAX_FREE_LIST_INDEX	alloc.c	2920;"	d	file:
vector_nbytes	alloc.c	/^vector_nbytes (struct Lisp_Vector *v)$/;"	f	file:	signature:(struct Lisp_Vector *v)
VECTOR_UNMARK	alloc.c	215;"	d	file:
Vemacs_copyright	globals.h	183;"	d
Vemacs_mule_charset_list	charset.c	/^Lisp_Object Vemacs_mule_charset_list;$/;"	v
Vemacs_version	globals.h	185;"	d
Vemulation_mode_map_alists	globals.h	187;"	d
Venable_character_translation	globals.h	189;"	d
Venable_disabled_menus_and_buttons	globals.h	191;"	d
VERBOSE	unexmacosx.c	142;"	d	file:
verify	nsgui.h	32;"	d
verify	nsgui.h	47;"	d
verify_alloca	alloc.c	/^verify_alloca (void)$/;"	f	file:	signature:(void)
verify_alloca	alloc.c	7324;"	d	file:
verify_bytepos	marker.c	/^verify_bytepos (ptrdiff_t charpos)$/;"	f	signature:(ptrdiff_t charpos)
verify_interval_modification	intervals.h	/^extern void verify_interval_modification (struct buffer *,$/;"	p	signature:(struct buffer *, ptrdiff_t, ptrdiff_t)
verify_interval_modification	textprop.c	/^verify_interval_modification (struct buffer *buf,$/;"	f	signature:(struct buffer *buf, ptrdiff_t start, ptrdiff_t end)
verify_row_hash	dispnew.c	/^verify_row_hash (struct glyph_row *row)$/;"	f	file:	signature:(struct glyph_row *row)
verror	eval.c	/^verror (const char *m, va_list ap)$/;"	f	signature:(const char *m, va_list ap)
version	Makefile	/^version = 26.0.50$/;"	m
vertical_bar_bits	fringe.c	/^static unsigned short vertical_bar_bits[] = {$/;"	v	file:
VERTICAL_BORDER_FACE_ID	dispextern.h	/^  VERTICAL_BORDER_FACE_ID,$/;"	e	enum:face_id
vertical_centering	font.h	/^  bool vertical_centering;$/;"	m	struct:font	access:public
vertical_drag_cursor	nsterm.h	/^  Cursor vertical_drag_cursor;$/;"	m	struct:ns_output	access:public
vertical_drag_cursor	w32term.h	/^  Cursor vertical_drag_cursor;$/;"	m	struct:w32_output	access:public
vertical_drag_cursor	xterm.h	/^  Cursor vertical_drag_cursor;$/;"	m	struct:x_output	access:public
vertical_scroll_bar	window.h	/^    Lisp_Object vertical_scroll_bar;$/;"	m	struct:window	access:public
vertical_scroll_bar_bottom_border	w32term.c	/^int vertical_scroll_bar_bottom_border;$/;"	v
VERTICAL_SCROLL_BAR_BOTTOM_BORDER	w32term.h	563;"	d
VERTICAL_SCROLL_BAR_BOTTOM_BORDER	xterm.h	1014;"	d
vertical_scroll_bar_cursor	nsterm.h	/^  Cursor vertical_scroll_bar_cursor;$/;"	m	struct:ns_display_info	access:public
vertical_scroll_bar_cursor	w32term.h	/^  Cursor vertical_scroll_bar_cursor;$/;"	m	struct:w32_display_info	access:public
vertical_scroll_bar_cursor	xterm.h	/^  Cursor vertical_scroll_bar_cursor;$/;"	m	struct:x_display_info	access:public
vertical_scroll_bar_extra	nsterm.h	/^  int vertical_scroll_bar_extra;$/;"	m	struct:ns_output	access:public
VERTICAL_SCROLL_BAR_INSIDE_HEIGHT	w32term.h	523;"	d
VERTICAL_SCROLL_BAR_INSIDE_HEIGHT	xterm.h	974;"	d
VERTICAL_SCROLL_BAR_INSIDE_WIDTH	w32term.h	506;"	d
VERTICAL_SCROLL_BAR_INSIDE_WIDTH	xterm.h	957;"	d
vertical_scroll_bar_left	frame.h	/^  vertical_scroll_bar_left,$/;"	e	enum:vertical_scroll_bar_type
VERTICAL_SCROLL_BAR_LEFT_BORDER	w32term.h	560;"	d
VERTICAL_SCROLL_BAR_LEFT_BORDER	xterm.h	1011;"	d
vertical_scroll_bar_min_handle	w32term.c	/^int vertical_scroll_bar_min_handle;$/;"	v
VERTICAL_SCROLL_BAR_MIN_HANDLE	w32term.h	571;"	d
VERTICAL_SCROLL_BAR_MIN_HANDLE	xterm.h	1022;"	d
vertical_scroll_bar_none	frame.h	/^  vertical_scroll_bar_none,$/;"	e	enum:vertical_scroll_bar_type
vertical_scroll_bar_right	frame.h	/^  vertical_scroll_bar_right$/;"	e	enum:vertical_scroll_bar_type
VERTICAL_SCROLL_BAR_RIGHT_BORDER	w32term.h	561;"	d
VERTICAL_SCROLL_BAR_RIGHT_BORDER	xterm.h	1012;"	d
vertical_scroll_bar_top_border	w32term.c	/^int vertical_scroll_bar_top_border;$/;"	v
VERTICAL_SCROLL_BAR_TOP_BORDER	w32term.h	562;"	d
VERTICAL_SCROLL_BAR_TOP_BORDER	xterm.h	1013;"	d
VERTICAL_SCROLL_BAR_TOP_RANGE	w32term.h	518;"	d
VERTICAL_SCROLL_BAR_TOP_RANGE	xterm.h	969;"	d
vertical_scroll_bar_type	frame.h	/^  ENUM_BF (vertical_scroll_bar_type) vertical_scroll_bar_type : 2;$/;"	m	struct:frame	access:public
vertical_scroll_bar_type	frame.h	/^enum vertical_scroll_bar_type$/;"	g
vertical_scroll_bar_type	window.c	/^  Lisp_Object scroll_bar_width, vertical_scroll_bar_type, dedicated;$/;"	m	struct:saved_window	file:	access:public
vertical_scroll_bar_type	window.h	/^    Lisp_Object vertical_scroll_bar_type;$/;"	m	struct:window	access:public
vertical_scroll_bar_type_	buffer.h	/^  Lisp_Object vertical_scroll_bar_type_;$/;"	m	struct:buffer	access:public
vertical_type	window.c	/^  (Lisp_Object window, Lisp_Object width, Lisp_Object vertical_type,$/;"	v
Veval_buffer_list	globals.h	193;"	d
Vexecuting_kbd_macro	globals.h	201;"	d
Vexec_directory	globals.h	195;"	d
Vexec_path	globals.h	197;"	d
Vexec_suffixes	globals.h	199;"	d
Vface_alternative_font_family_alist	xfaces.c	/^Lisp_Object Vface_alternative_font_family_alist;$/;"	v
Vface_alternative_font_registry_alist	xfaces.c	/^Lisp_Object Vface_alternative_font_registry_alist;$/;"	v
Vface_default_stipple	globals.h	203;"	d
Vface_font_rescale_alist	globals.h	205;"	d
Vface_ignored_fonts	globals.h	207;"	d
Vface_new_frame_defaults	globals.h	209;"	d
Vface_remapping_alist	globals.h	211;"	d
Vfast_but_imprecise_scrolling	globals.h	897;"	d
vfatal	term.c	/^vfatal (const char *str, va_list ap)$/;"	f	file:	signature:(const char *str, va_list ap)
Vfeatures	globals.h	213;"	d
Vfile_coding_system_alist	globals.h	215;"	d
Vfile_name_coding_system	globals.h	217;"	d
Vfile_name_handler_alist	globals.h	219;"	d
Vfind_word_boundary_function_table	globals.h	221;"	d
Vfirst_change_hook	globals.h	223;"	d
Vfloat_output_format	globals.h	225;"	d
Vfocus_in_hook	globals.h	227;"	d
Vfocus_out_hook	globals.h	229;"	d
Vfontification_functions	globals.h	245;"	d
Vfontset_alias_alist	globals.h	247;"	d
Vfontset_table	fontset.c	/^static Lisp_Object Vfontset_table;$/;"	v	file:
Vfont_ccl_encoder_alist	globals.h	231;"	d
Vfont_encoding_alist	globals.h	233;"	d
Vfont_encoding_charset_alist	globals.h	235;"	d
Vfont_log	globals.h	237;"	d
Vfont_log_deferred	font.c	/^static Lisp_Object Vfont_log_deferred;$/;"	v	file:
Vfont_slant_table	globals.h	239;"	d
Vfont_weight_table	globals.h	241;"	d
Vfont_width_table	globals.h	243;"	d
vfork	conf_post.h	271;"	d
vformat_string	eval.c	/^vformat_string (const char *m, va_list ap)$/;"	f	signature:(const char *m, va_list ap)
Vframe_alpha_lower_limit	globals.h	249;"	d
Vframe_list	frame.c	/^Lisp_Object Vframe_list;$/;"	v
Vframe_title_format	globals.h	251;"	d
Vfringe_bitmaps	globals.h	253;"	d
Vfunction_key_map	globals.h	255;"	d
Vgc_cons_percentage	globals.h	257;"	d
Vgc_elapsed	globals.h	259;"	d
Vglobal_disable_point_adjustment	globals.h	261;"	d
Vglobal_mode_string	globals.h	263;"	d
Vglyphless_char_display	globals.h	267;"	d
Vglyph_table	globals.h	265;"	d
Vgtk_version_string	globals.h	269;"	d
Vhelp_char	globals.h	271;"	d
Vhelp_event_list	globals.h	273;"	d
Vhelp_form	globals.h	275;"	d
Vhistory_add_new_input	globals.h	277;"	d
Vhistory_length	globals.h	279;"	d
Vhourglass_delay	globals.h	281;"	d
Vhscroll_step	globals.h	283;"	d
Vicon_title_format	globals.h	285;"	d
VIETNAMESE_CHARSET	w32font.c	49;"	d	file:
view	nsterm.h	/^  EmacsView *view;$/;"	m	struct:ns_output	access:public
Vignore_relative_composition	globals.h	287;"	d
Vimage_cache_eviction_delay	globals.h	289;"	d
Vimage_types	globals.h	291;"	d
VINDEX	alloc.c	2929;"	d	file:
Vinhibit_changing_match_data	globals.h	293;"	d
Vinhibit_debugger	globals.h	295;"	d
Vinhibit_field_text_motion	globals.h	297;"	d
Vinhibit_file_name_handlers	globals.h	299;"	d
Vinhibit_file_name_operation	globals.h	301;"	d
Vinhibit_point_motion_hooks	globals.h	303;"	d
Vinhibit_quit	globals.h	305;"	d
Vinhibit_read_only	globals.h	307;"	d
Vinhibit_redisplay	globals.h	309;"	d
Vinitial_environment	globals.h	311;"	d
Vinitial_window_system	globals.h	313;"	d
Vinput_decode_map_	keyboard.h	/^    Lisp_Object Vinput_decode_map_;$/;"	m	struct:kboard	access:public
Vinput_method_function	globals.h	315;"	d
Vinput_method_previous_message	globals.h	317;"	d
Vinstallation_directory	globals.h	319;"	d
Vinternal_interpreter_environment	globals.h	323;"	d
Vinternal__top_level_message	globals.h	321;"	d
Vinvocation_directory	globals.h	325;"	d
Vinvocation_name	globals.h	327;"	d
VirtualMemoryThreshold	w32heap.c	/^  SIZE_T VirtualMemoryThreshold;$/;"	m	struct:_RTL_HEAP_PARAMETERS	file:	access:public
virtual_break_value	ralloc.c	/^static void *virtual_break_value;$/;"	v	file:
visible	frame.h	/^  unsigned visible : 2;$/;"	m	struct:frame	access:public
visible	intervals.h	/^  bool_bf visible : 1;		    \/* False means don't display.  *\/$/;"	m	struct:interval	access:public
visible_bell	globals.h	1061;"	d
visible_cursor	globals.h	1063;"	d
visible_height	dispextern.h	/^  int visible_height;$/;"	m	struct:glyph_row	access:public
visible_ok	buffer.c	/^  (Lisp_Object buffer, Lisp_Object visible_ok, Lisp_Object frame)$/;"	v
visit	fileio.c	/^   Lisp_Object visit, Lisp_Object lockname, Lisp_Object mustbenew)$/;"	v
visit	fileio.c	/^  (Lisp_Object filename, Lisp_Object visit, Lisp_Object beg, Lisp_Object end, Lisp_Object replace)$/;"	v
Viso_2022_charset_list	charset.c	/^Lisp_Object Viso_2022_charset_list;$/;"	v
visual	xterm.h	/^  Visual *visual;$/;"	m	struct:x_display_info	access:public
visual_bell	widgetprv.h	/^  Boolean	visual_bell;		\/* flash instead of beep *\/$/;"	m	struct:__anon98	access:public
visual_class	xfns.c	/^static struct visual_class$/;"	s	file:
visual_class::class	xfns.c	/^  int class;$/;"	m	struct:visual_class	file:	access:public
visual_class::name	xfns.c	/^  const char *name;$/;"	m	struct:visual_class	file:	access:public
visual_classes	xfns.c	/^visual_classes[] =$/;"	v	typeref:struct:visual_class	file:
Vkbd_macro_termination_hook	globals.h	329;"	d
Vkeyboard_translate_table_	keyboard.h	/^    Lisp_Object Vkeyboard_translate_table_;$/;"	m	struct:kboard	access:public
Vkey_translation_map	globals.h	331;"	d
Vkill_buffer_query_functions	globals.h	333;"	d
Vkill_emacs_hook	globals.h	335;"	d
VK_ANY	w32fns.c	251;"	d	file:
VK_APPS	w32term.h	771;"	d
VK_LWIN	w32term.h	769;"	d
VK_NUMPAD_BEGIN	w32term.h	753;"	d
VK_NUMPAD_CLEAR	w32term.h	754;"	d
VK_NUMPAD_DELETE	w32term.h	765;"	d
VK_NUMPAD_DOWN	w32term.h	763;"	d
VK_NUMPAD_END	w32term.h	758;"	d
VK_NUMPAD_ENTER	w32term.h	755;"	d
VK_NUMPAD_HOME	w32term.h	759;"	d
VK_NUMPAD_INSERT	w32term.h	764;"	d
VK_NUMPAD_LEFT	w32term.h	760;"	d
VK_NUMPAD_NEXT	w32term.h	757;"	d
VK_NUMPAD_PRIOR	w32term.h	756;"	d
VK_NUMPAD_RIGHT	w32term.h	762;"	d
VK_NUMPAD_UP	w32term.h	761;"	d
VK_RWIN	w32term.h	770;"	d
Vlast_code_conversion_error	globals.h	337;"	d
Vlast_coding_system_used	globals.h	339;"	d
Vlast_command_	keyboard.h	/^    Lisp_Object Vlast_command_;$/;"	m	struct:kboard	access:public
Vlast_event_frame	globals.h	341;"	d
Vlast_kbd_macro_	keyboard.h	/^    Lisp_Object Vlast_kbd_macro_;$/;"	m	struct:kboard	access:public
Vlast_prefix_arg_	keyboard.h	/^    Lisp_Object Vlast_prefix_arg_;$/;"	m	struct:kboard	access:public
Vlast_repeatable_command_	keyboard.h	/^    Lisp_Object Vlast_repeatable_command_;$/;"	m	struct:kboard	access:public
Vlatin_extra_code_table	globals.h	343;"	d
Vlexical_binding	globals.h	345;"	d
Vlibrary_cache	emacs.c	/^Lisp_Object Vlibrary_cache;$/;"	v
Vline_number_display_limit	globals.h	347;"	d
Vline_prefix	globals.h	349;"	d
Vlispy_mouse_stem	keyboard.c	/^static Lisp_Object Vlispy_mouse_stem;$/;"	v	file:
Vloads_in_progress	lread.c	/^static Lisp_Object Vloads_in_progress;$/;"	v	file:
Vload_file_name	globals.h	351;"	d
Vload_file_rep_suffixes	globals.h	353;"	d
Vload_history	globals.h	355;"	d
Vload_path	globals.h	357;"	d
Vload_read_function	globals.h	359;"	d
Vload_source_file_function	globals.h	361;"	d
Vload_suffixes	globals.h	363;"	d
Vlocale_coding_system	globals.h	365;"	d
Vlocal_function_key_map_	keyboard.h	/^    Lisp_Object Vlocal_function_key_map_;$/;"	m	struct:kboard	access:public
Vlread_old_style_backquotes	globals.h	367;"	d
Vlread_unescaped_character_literals	globals.h	369;"	d
Vlucid_menu_bar_dirty_flag	globals.h	371;"	d
Vmake_pointer_invisible	globals.h	373;"	d
vmargin	dispextern.h	/^  int hmargin, vmargin;$/;"	m	struct:image	access:public
vmargin	gtkutil.c	/^  int hmargin, vmargin;$/;"	m	struct:xg_frame_tb_info	file:	access:public
Vmark_even_if_inactive	globals.h	375;"	d
Vmaximum_scroll_margin	globals.h	381;"	d
Vmax_image_size	globals.h	377;"	d
Vmax_mini_window_height	globals.h	379;"	d
Vmemory_full	globals.h	383;"	d
Vmemory_signal_data	globals.h	385;"	d
Vmenu_bar_final_items	globals.h	387;"	d
Vmenu_bar_mode	globals.h	389;"	d
Vmenu_bar_update_hook	globals.h	391;"	d
Vmenu_updating_frame	globals.h	393;"	d
vmessage	xdisp.c	/^vmessage (const char *m, va_list ap)$/;"	f	signature:(const char *m, va_list ap)
Vmessages_buffer_name	xdisp.c	/^static Lisp_Object Vmessages_buffer_name;$/;"	v	file:
Vmessage_log_max	globals.h	395;"	d
Vmessage_stack	xdisp.c	/^static Lisp_Object Vmessage_stack;$/;"	v	file:
Vminibuffer_completing_file_name	globals.h	399;"	d
Vminibuffer_completion_confirm	globals.h	401;"	d
Vminibuffer_completion_predicate	globals.h	403;"	d
Vminibuffer_completion_table	globals.h	405;"	d
Vminibuffer_exit_hook	globals.h	407;"	d
Vminibuffer_help_form	globals.h	409;"	d
Vminibuffer_history_position	globals.h	411;"	d
Vminibuffer_history_variable	globals.h	413;"	d
Vminibuffer_list	minibuf.c	/^Lisp_Object Vminibuffer_list;$/;"	v
Vminibuffer_local_map	globals.h	415;"	d
Vminibuffer_local_ns_map	globals.h	417;"	d
Vminibuffer_message_timeout	globals.h	419;"	d
Vminibuffer_prompt_properties	globals.h	421;"	d
Vminibuffer_setup_hook	globals.h	423;"	d
Vminibuf_scroll_window	globals.h	397;"	d
Vminor_mode_map_alist	globals.h	425;"	d
Vminor_mode_overriding_map_alist	globals.h	427;"	d
VMLIMIT_OBJ	Makefile	/^VMLIMIT_OBJ=$/;"	m
Vmode_line_unwind_vector	xdisp.c	/^static Lisp_Object Vmode_line_unwind_vector;$/;"	v	file:
Vmodule_file_suffix	globals.h	429;"	d
Vmost_negative_fixnum	globals.h	431;"	d
Vmost_positive_fixnum	globals.h	433;"	d
Vmotif_version_string	globals.h	435;"	d
vmotion	indent.c	/^vmotion (register ptrdiff_t from, register ptrdiff_t from_byte,$/;"	f	signature:(register ptrdiff_t from, register ptrdiff_t from_byte, register EMACS_INT vtarget, struct window *w)
vmotion	indent.h	/^struct position *vmotion (ptrdiff_t from, ptrdiff_t from_byte,$/;"	p	signature:(ptrdiff_t from, ptrdiff_t from_byte, EMACS_INT vtarget, struct window *)
Vmouse_autoselect_window	globals.h	437;"	d
Vmouse_events	keymap.c	/^static Lisp_Object Vmouse_events;$/;"	v	file:
Vmouse_highlight	globals.h	439;"	d
Vmouse_leave_buffer_hook	globals.h	441;"	d
Vmouse_position_function	globals.h	443;"	d
Vmove_frame_functions	globals.h	445;"	d
VM_DATA_TOP	unexmacosx.c	150;"	d	file:
vm_region	unexmacosx.c	136;"	d	file:
VM_REGION_BASIC_INFO	unexmacosx.c	132;"	d	file:
VM_REGION_BASIC_INFO	unexmacosx.c	133;"	d	file:
VM_REGION_BASIC_INFO_COUNT	unexmacosx.c	130;"	d	file:
VM_REGION_BASIC_INFO_COUNT	unexmacosx.c	131;"	d	file:
Vnetwork_coding_system_alist	globals.h	447;"	d
Vnobreak_char_display	globals.h	449;"	d
Vobarray	globals.h	451;"	d
voffset	dispextern.h	/^    short voffset;$/;"	m	struct:it::iterator_stack_entry	access:public
voffset	dispextern.h	/^  short voffset;$/;"	m	struct:glyph	access:public
voffset	dispextern.h	/^  short voffset;$/;"	m	struct:it	access:public
voidfuncptr	lisp.h	/^typedef void (*voidfuncptr) (void);$/;"	t
VOLINFO_STILL_VALID	w32.c	3085;"	d	file:
volume	sound.c	/^  int volume;$/;"	m	struct:sound_device	file:	access:public
volume_cache	w32.c	/^static volume_info_data *volume_cache = NULL;$/;"	v	file:
volume_info	w32.c	/^static volume_info_data volume_info;$/;"	v	file:
volume_info_data	w32.c	/^typedef struct volume_info_data {$/;"	s	file:
volume_info_data	w32.c	/^} volume_info_data;$/;"	t	typeref:struct:volume_info_data	file:
volume_info_data::flags	w32.c	/^  DWORD     flags;$/;"	m	struct:volume_info_data	file:	access:public
volume_info_data::maxcomp	w32.c	/^  DWORD     maxcomp;$/;"	m	struct:volume_info_data	file:	access:public
volume_info_data::name	w32.c	/^  char *    name;$/;"	m	struct:volume_info_data	file:	access:public
volume_info_data::next	w32.c	/^  struct volume_info_data * next;$/;"	m	struct:volume_info_data	typeref:struct:volume_info_data::volume_info_data	file:	access:public
volume_info_data::root_dir	w32.c	/^  char *    root_dir;$/;"	m	struct:volume_info_data	file:	access:public
volume_info_data::serialnum	w32.c	/^  DWORD     serialnum;$/;"	m	struct:volume_info_data	file:	access:public
volume_info_data::timestamp	w32.c	/^  DWORD     timestamp;$/;"	m	struct:volume_info_data	file:	access:public
volume_info_data::type	w32.c	/^  char *    type;$/;"	m	struct:volume_info_data	file:	access:public
Voperating_system_release	globals.h	453;"	d
Votf_script_alist	globals.h	455;"	d
Vother_window_scroll_buffer	globals.h	457;"	d
Voverflow_newline_into_fringe	globals.h	459;"	d
Voverlay_arrow_position	globals.h	461;"	d
Voverlay_arrow_string	globals.h	463;"	d
Voverlay_arrow_variable_list	globals.h	465;"	d
Voverriding_local_map	globals.h	467;"	d
Voverriding_local_map_menu_flag	globals.h	469;"	d
Voverriding_terminal_local_map_	keyboard.h	/^    Lisp_Object Voverriding_terminal_local_map_;$/;"	m	struct:kboard	access:public
vox_choose_format	sound.c	/^vox_choose_format (struct sound_device *sd, struct sound *s)$/;"	f	file:	signature:(struct sound_device *sd, struct sound *s)
vox_close	sound.c	/^vox_close (struct sound_device *sd)$/;"	f	file:	signature:(struct sound_device *sd)
vox_configure	sound.c	/^vox_configure (struct sound_device *sd)$/;"	f	file:	signature:(struct sound_device *sd)
vox_init	sound.c	/^vox_init (struct sound_device *sd)$/;"	f	file:	signature:(struct sound_device *sd)
vox_open	sound.c	/^vox_open (struct sound_device *sd)$/;"	f	file:	signature:(struct sound_device *sd)
vox_write	sound.c	/^static void vox_write (struct sound_device *, const char *, ptrdiff_t);$/;"	p	file:	signature:(struct sound_device *, const char *, ptrdiff_t)
vox_write	sound.c	/^vox_write (struct sound_device *sd, const char *buffer, ptrdiff_t nbytes)$/;"	f	file:	signature:(struct sound_device *sd, const char *buffer, ptrdiff_t nbytes)
Vparam_value_alist	xfaces.c	/^static Lisp_Object Vparam_value_alist;$/;"	v	file:
Vpath_separator	globals.h	471;"	d
vpos	dispextern.h	/^  int vpos;$/;"	m	struct:it	access:public
vpos	indent.h	/^    EMACS_INT vpos;$/;"	m	struct:position	access:public
vpos	window.h	/^  int hpos, vpos;$/;"	m	struct:cursor_pos	access:public
Vpost_command_hook	globals.h	473;"	d
Vpost_gc_hook	globals.h	475;"	d
Vpost_self_insert_hook	globals.h	477;"	d
Vprefix_arg_	keyboard.h	/^    Lisp_Object Vprefix_arg_;$/;"	m	struct:kboard	access:public
Vprefix_help_command	globals.h	483;"	d
Vpreloaded_file_list	globals.h	485;"	d
Vprevious_system_messages_locale	globals.h	487;"	d
Vprevious_system_time_locale	globals.h	489;"	d
Vpre_command_hook	globals.h	479;"	d
Vpre_redisplay_function	globals.h	481;"	d
Vprin1_to_string_buffer	print.c	/^Lisp_Object Vprin1_to_string_buffer;$/;"	v
Vprintable_chars	globals.h	505;"	d
Vprint_charset_text_property	globals.h	491;"	d
Vprint_circle	globals.h	493;"	d
Vprint_continuous_numbering	globals.h	495;"	d
Vprint_gensym	globals.h	497;"	d
Vprint_length	globals.h	499;"	d
Vprint_level	globals.h	501;"	d
Vprint_number_table	globals.h	503;"	d
Vprocess_adaptive_read_buffering	globals.h	507;"	d
Vprocess_alist	process.c	/^static Lisp_Object Vprocess_alist;$/;"	v	file:
Vprocess_coding_system_alist	globals.h	509;"	d
Vprocess_connection_type	globals.h	511;"	d
Vprocess_environment	globals.h	513;"	d
Vpurify_flag	globals.h	515;"	d
Vquit_flag	globals.h	517;"	d
Vread_buffer_function	globals.h	519;"	d
Vread_circle	globals.h	521;"	d
Vread_expression_history	globals.h	523;"	d
Vread_hide_char	globals.h	525;"	d
Vread_symbol_positions_list	globals.h	527;"	d
Vread_with_symbol_positions	globals.h	529;"	d
Vreal_last_command_	keyboard.h	/^    Lisp_Object Vreal_last_command_;$/;"	m	struct:kboard	access:public
Vreal_this_command	globals.h	531;"	d
Vrecenter_redisplay	globals.h	533;"	d
Vredisplay_end_trigger_functions	globals.h	539;"	d
Vredisplay__all_windows_cause	globals.h	535;"	d
Vredisplay__mode_lines_cause	globals.h	537;"	d
Vreport_emacs_bug_address	globals.h	541;"	d
Vresize_mini_windows	globals.h	543;"	d
Vresume_tty_functions	globals.h	545;"	d
Vring_bell_function	globals.h	547;"	d
vroundup	alloc.c	2902;"	d	file:
vroundup_ct	alloc.c	2900;"	d	file:
Vrun_hooks	eval.c	/^Lisp_Object Vrun_hooks;$/;"	v
Vsaved_region_selection	globals.h	549;"	d
Vscalable_fonts_allowed	globals.h	551;"	d
Vscript_representative_chars	globals.h	553;"	d
vscroll	window.c	/^  (Lisp_Object window, Lisp_Object vscroll, Lisp_Object pixels_p)$/;"	v
vscroll	window.h	/^    int vscroll;$/;"	m	struct:window	access:public
Vscroll_preserve_screen_position	globals.h	555;"	d
Vsearch_spaces_regexp	globals.h	557;"	d
Vselection_alist	termhooks.h	/^  Lisp_Object Vselection_alist;$/;"	m	struct:terminal	access:public
Vselection_converter_alist	globals.h	563;"	d
Vselection_inhibit_update_commands	globals.h	565;"	d
Vselect_active_regions	globals.h	559;"	d
Vselect_safe_coding_system_function	globals.h	561;"	d
Vset_auto_coding_function	globals.h	567;"	d
Vshared_game_score_directory	globals.h	569;"	d
Vshell_file_name	globals.h	571;"	d
Vshow_help_function	globals.h	573;"	d
Vshow_trailing_whitespace	globals.h	575;"	d
Vsignaling_function	eval.c	/^Lisp_Object Vsignaling_function;$/;"	v
Vsignal_hook_function	globals.h	577;"	d
Vsjis_coding_system	coding.c	/^static Lisp_Object Vsjis_coding_system;$/;"	v	file:
Vsource_directory	globals.h	579;"	d
Vspecial_event_map	globals.h	581;"	d
vstamp	unexelf.c	/^	short vstamp;$/;"	m	struct:__anon123	file:	access:public
Vstandard_category_table	category.h	97;"	d
Vstandard_display_table	globals.h	583;"	d
Vstandard_input	globals.h	585;"	d
Vstandard_output	globals.h	587;"	d
Vstandard_syntax_table	syntax.h	34;"	d
Vstandard_translation_table_for_decode	globals.h	589;"	d
Vstandard_translation_table_for_encode	globals.h	591;"	d
Vsuspend_tty_functions	globals.h	593;"	d
Vsyntax_code_object	syntax.c	/^static Lisp_Object Vsyntax_code_object;$/;"	v	file:
Vsystem_configuration	globals.h	595;"	d
Vsystem_configuration_features	globals.h	597;"	d
Vsystem_configuration_options	globals.h	599;"	d
Vsystem_key_alist_	keyboard.h	/^    Lisp_Object Vsystem_key_alist_;$/;"	m	struct:kboard	access:public
Vsystem_messages_locale	globals.h	601;"	d
Vsystem_name	globals.h	603;"	d
Vsystem_time_locale	globals.h	605;"	d
Vsystem_type	globals.h	607;"	d
Vtemporary_file_directory	globals.h	611;"	d
Vtemp_buffer_show_function	globals.h	609;"	d
Vtemp_file_name_pattern	callproc.c	/^static Lisp_Object Vtemp_file_name_pattern;$/;"	v	file:
Vterminal_frame	globals.h	613;"	d
Vtext_property_default_nonsticky	globals.h	615;"	d
Vtext_quoting_style	globals.h	617;"	d
Vthis_command	globals.h	619;"	d
Vthis_command_keys_shift_translated	globals.h	621;"	d
Vthis_original_command	globals.h	623;"	d
Vthrow_on_input	globals.h	625;"	d
Vtimer_idle_list	globals.h	627;"	d
Vtimer_list	globals.h	629;"	d
Vtool_bar_border	globals.h	631;"	d
Vtool_bar_button_margin	globals.h	633;"	d
Vtool_bar_mode	globals.h	635;"	d
Vtool_bar_separator_image_expression	globals.h	637;"	d
Vtool_bar_style	globals.h	639;"	d
Vtop_level	globals.h	641;"	d
Vtransient_mark_mode	globals.h	643;"	d
Vtranslation_hash_table_vector	globals.h	645;"	d
Vtranslation_table_for_input	globals.h	647;"	d
Vtranslation_table_vector	globals.h	649;"	d
Vtruncate_partial_width_windows	globals.h	651;"	d
Vtty_defined_color_alist	globals.h	653;"	d
Vtty_erase_char	globals.h	655;"	d
Vundo_outer_limit	globals.h	657;"	d
Vundo_outer_limit_function	globals.h	659;"	d
Vunicode_category_table	globals.h	661;"	d
Vunread_command_events	globals.h	663;"	d
Vunread_input_method_events	globals.h	665;"	d
Vunread_post_input_method_events	globals.h	667;"	d
Vuser_full_name	globals.h	671;"	d
Vuser_init_file	globals.h	673;"	d
Vuser_login_name	globals.h	675;"	d
Vuser_real_login_name	globals.h	677;"	d
Vuse_default_ascent	globals.h	669;"	d
Vvalues	globals.h	679;"	d
Vvertical_centering_font_regexp	globals.h	681;"	d
Vvoid_text_area_pointer	globals.h	683;"	d
Vw32_valid_codepages	w32proc.c	/^Lisp_Object Vw32_valid_codepages;$/;"	v
Vw32_valid_locale_ids	w32proc.c	/^Lisp_Object Vw32_valid_locale_ids;$/;"	v
Vwhere_is_preferred_modifier	globals.h	685;"	d
Vwhile_no_input_ignore_events	globals.h	687;"	d
Vwindow_combination_limit	globals.h	689;"	d
Vwindow_combination_resize	globals.h	691;"	d
Vwindow_configuration_change_hook	globals.h	693;"	d
Vwindow_list	window.c	/^Lisp_Object Vwindow_list;$/;"	v
Vwindow_persistent_parameters	globals.h	695;"	d
Vwindow_point_insertion_type	globals.h	697;"	d
Vwindow_scroll_functions	globals.h	699;"	d
Vwindow_size_change_functions	globals.h	701;"	d
Vwindow_system_	keyboard.h	/^    Lisp_Object Vwindow_system_;$/;"	m	struct:kboard	access:public
Vwindow_system_version	globals.h	703;"	d
Vwith_echo_area_save_vector	xdisp.c	/^static Lisp_Object Vwith_echo_area_save_vector;$/;"	v	file:
Vword_combining_categories	globals.h	705;"	d
Vword_separating_categories	globals.h	707;"	d
Vwrap_prefix	globals.h	709;"	d
Vwrite_region_annotate_functions	globals.h	711;"	d
Vwrite_region_annotations_so_far	globals.h	713;"	d
Vwrite_region_annotation_buffers	fileio.c	/^static Lisp_Object Vwrite_region_annotation_buffers;$/;"	v	file:
Vwrite_region_post_annotation_function	globals.h	715;"	d
Vxft_settings	globals.h	785;"	d
Vx_alt_keysym	globals.h	717;"	d
Vx_bitmap_file_path	globals.h	719;"	d
Vx_ctrl_keysym	globals.h	721;"	d
Vx_cursor_fore_pixel	globals.h	723;"	d
Vx_hourglass_pointer_shape	globals.h	725;"	d
Vx_hyper_keysym	globals.h	727;"	d
Vx_keysym_table	globals.h	729;"	d
Vx_lost_selection_functions	globals.h	731;"	d
Vx_max_tooltip_size	globals.h	733;"	d
Vx_meta_keysym	globals.h	735;"	d
Vx_mode_pointer_shape	globals.h	737;"	d
Vx_nontext_pointer_shape	globals.h	741;"	d
Vx_no_window_manager	globals.h	739;"	d
Vx_pixel_size_width_font_regexp	globals.h	743;"	d
Vx_pointer_shape	globals.h	745;"	d
Vx_resource_class	globals.h	747;"	d
Vx_resource_name	globals.h	749;"	d
Vx_select_enable_clipboard_manager	globals.h	751;"	d
Vx_sensitive_text_pointer_shape	globals.h	753;"	d
Vx_sent_selection_functions	globals.h	755;"	d
Vx_session_id	globals.h	757;"	d
Vx_session_previous_id	globals.h	759;"	d
Vx_super_keysym	globals.h	761;"	d
Vx_toolkit_scroll_bars	globals.h	763;"	d
Vx_window_bottom_edge_shape	globals.h	765;"	d
Vx_window_bottom_left_corner_shape	globals.h	767;"	d
Vx_window_bottom_right_corner_shape	globals.h	769;"	d
Vx_window_horizontal_drag_shape	globals.h	771;"	d
Vx_window_left_edge_shape	globals.h	773;"	d
Vx_window_right_edge_shape	globals.h	775;"	d
Vx_window_top_edge_shape	globals.h	777;"	d
Vx_window_top_left_corner_shape	globals.h	779;"	d
Vx_window_top_right_corner_shape	globals.h	781;"	d
Vx_window_vertical_drag_shape	globals.h	783;"	d
w	dispextern.h	/^  struct window *w;		\/* the window being displayed *\/$/;"	m	struct:bidi_it	typeref:struct:bidi_it::window	access:public
w	dispextern.h	/^  struct window *w;$/;"	m	struct:glyph_string	typeref:struct:glyph_string::window	access:public
w	dispextern.h	/^  struct window *w;$/;"	m	struct:it	typeref:struct:it::window	access:public
w	gtkutil.c	/^  GtkWidget *w;$/;"	m	struct:xg_dialog_data	file:	access:public
w	xwidget.h	/^  Lisp_Object w;$/;"	m	struct:xwidget_view	access:public
w32	frame.h	/^    struct w32_output *w32;     \/* From w32term.h.  *\/$/;"	m	union:frame::output_data	typeref:struct:frame::output_data::w32_output	access:public
w32	termhooks.h	/^    struct w32_display_info *w32;     \/* w32term.h *\/$/;"	m	union:terminal::display_info	typeref:struct:terminal::display_info::w32_display_info	access:public
W32COMMON_H	w32common.h	22;"	d
w32con_clear_end_of_line	w32console.c	/^static void w32con_clear_end_of_line (struct frame *f, int);$/;"	p	file:	signature:(struct frame *f, int)
w32con_clear_end_of_line	w32console.c	/^w32con_clear_end_of_line (struct frame *f, int end)$/;"	f	file:	signature:(struct frame *f, int end)
w32con_clear_frame	w32console.c	/^static void w32con_clear_frame (struct frame *f);$/;"	p	file:	signature:(struct frame *f)
w32con_clear_frame	w32console.c	/^w32con_clear_frame (struct frame *f)$/;"	f	file:	signature:(struct frame *f)
w32con_clear_to_end	w32console.c	/^static void w32con_clear_to_end (struct frame *f);$/;"	p	file:	signature:(struct frame *f)
w32con_clear_to_end	w32console.c	/^w32con_clear_to_end (struct frame *f)$/;"	f	file:	signature:(struct frame *f)
w32con_delete_glyphs	w32console.c	/^static void w32con_delete_glyphs (struct frame *f, int n);$/;"	p	file:	signature:(struct frame *f, int n)
w32con_delete_glyphs	w32console.c	/^w32con_delete_glyphs (struct frame *f, int n)$/;"	f	file:	signature:(struct frame *f, int n)
w32con_hide_cursor	w32console.c	/^w32con_hide_cursor (void)$/;"	f	signature:(void)
w32con_hide_cursor	w32term.h	/^extern void w32con_hide_cursor (void);$/;"	p	signature:(void)
w32con_insert_glyphs	w32console.c	/^static void w32con_insert_glyphs (struct frame *f, struct glyph *start, int len);$/;"	p	file:	signature:(struct frame *f, struct glyph *start, int len)
w32con_insert_glyphs	w32console.c	/^w32con_insert_glyphs (struct frame *f, register struct glyph *start,$/;"	f	file:	signature:(struct frame *f, register struct glyph *start, register int len)
w32con_ins_del_lines	w32console.c	/^static void w32con_ins_del_lines (struct frame *f, int vpos, int n);$/;"	p	file:	signature:(struct frame *f, int vpos, int n)
w32con_ins_del_lines	w32console.c	/^w32con_ins_del_lines (struct frame *f, int vpos, int n)$/;"	f	file:	signature:(struct frame *f, int vpos, int n)
w32con_move_cursor	w32console.c	/^static void w32con_move_cursor (struct frame *f, int row, int col);$/;"	p	file:	signature:(struct frame *f, int row, int col)
w32con_move_cursor	w32console.c	/^w32con_move_cursor (struct frame *f, int row, int col)$/;"	f	file:	signature:(struct frame *f, int row, int col)
w32con_reset_terminal_modes	w32console.c	/^static void w32con_reset_terminal_modes (struct terminal *t);$/;"	p	file:	signature:(struct terminal *t)
w32con_reset_terminal_modes	w32console.c	/^w32con_reset_terminal_modes (struct terminal *t)$/;"	f	file:	signature:(struct terminal *t)
w32con_set_terminal_modes	w32console.c	/^static void w32con_set_terminal_modes (struct terminal *t);$/;"	p	file:	signature:(struct terminal *t)
w32con_set_terminal_modes	w32console.c	/^w32con_set_terminal_modes (struct terminal *t)$/;"	f	file:	signature:(struct terminal *t)
w32con_show_cursor	w32console.c	/^w32con_show_cursor (void)$/;"	f	signature:(void)
w32con_show_cursor	w32term.h	/^extern void w32con_show_cursor (void);$/;"	p	signature:(void)
w32con_update_begin	w32console.c	/^static void w32con_update_begin (struct frame * f);$/;"	p	file:	signature:(struct frame * f)
w32con_update_begin	w32console.c	/^w32con_update_begin (struct frame * f)$/;"	f	file:	signature:(struct frame * f)
w32con_update_end	w32console.c	/^static void w32con_update_end (struct frame * f);$/;"	p	file:	signature:(struct frame * f)
w32con_update_end	w32console.c	/^w32con_update_end (struct frame * f)$/;"	f	file:	signature:(struct frame * f)
w32con_write_glyphs	w32console.c	/^static void w32con_write_glyphs (struct frame *f, struct glyph *string, int len);$/;"	p	file:	signature:(struct frame *f, struct glyph *string, int len)
w32con_write_glyphs	w32console.c	/^w32con_write_glyphs (struct frame *f, register struct glyph *string,$/;"	f	file:	signature:(struct frame *f, register struct glyph *string, register int len)
w32con_write_glyphs_with_face	w32console.c	/^w32con_write_glyphs_with_face (struct frame *f, register int x, register int y,$/;"	f	file:	signature:(struct frame *f, register int x, register int y, register struct glyph *string, register int len, register int face_id)
w32font_booleans	w32font.c	/^static const char *const w32font_booleans [] = {$/;"	v	file:
w32font_close	w32font.c	/^w32font_close (struct font *font)$/;"	f	signature:(struct font *font)
w32font_close	w32font.h	/^void w32font_close (struct font *font);$/;"	p	signature:(struct font *font)
w32font_coverage_ok	w32font.c	/^w32font_coverage_ok (FONTSIGNATURE * coverage, BYTE charset)$/;"	f	file:	signature:(FONTSIGNATURE * coverage, BYTE charset)
w32font_draw	w32font.c	/^w32font_draw (struct glyph_string *s, int from, int to,$/;"	f	signature:(struct glyph_string *s, int from, int to, int x, int y, bool with_background)
w32font_draw	w32font.h	/^int w32font_draw (struct glyph_string *s, int from, int to,$/;"	p	signature:(struct glyph_string *s, int from, int to, int x, int y, bool with_background)
w32font_driver	w32font.c	/^struct font_driver w32font_driver =$/;"	v	typeref:struct:font_driver
w32font_encode_char	w32font.c	/^w32font_encode_char (struct font *font, int c)$/;"	f	file:	signature:(struct font *font, int c)
w32font_filter_properties	w32font.c	/^w32font_filter_properties (Lisp_Object font, Lisp_Object alist)$/;"	f	file:	signature:(Lisp_Object font, Lisp_Object alist)
w32font_full_name	w32font.c	/^static int w32font_full_name (LOGFONT *, Lisp_Object, int, char *, int);$/;"	p	file:	signature:(LOGFONT *, Lisp_Object, int, char *, int)
w32font_full_name	w32font.c	/^w32font_full_name (LOGFONT * font, Lisp_Object font_obj,$/;"	f	file:	signature:(LOGFONT * font, Lisp_Object font_obj, int pixel_size, char *name, int nbytes)
w32font_get_cache	w32font.c	/^w32font_get_cache (struct frame *f)$/;"	f	signature:(struct frame *f)
w32font_get_cache	w32font.h	/^Lisp_Object w32font_get_cache (struct frame *fe);$/;"	p	signature:(struct frame *fe)
w32font_has_char	w32font.c	/^w32font_has_char (Lisp_Object entity, int c)$/;"	f	signature:(Lisp_Object entity, int c)
w32font_has_char	w32font.h	/^int w32font_has_char (Lisp_Object entity, int c);$/;"	p	signature:(Lisp_Object entity, int c)
w32font_info	w32font.h	/^struct w32font_info$/;"	s
w32font_info::cached_metrics	w32font.h	/^  struct w32_metric_cache **cached_metrics;$/;"	m	struct:w32font_info	typeref:struct:w32font_info::w32_metric_cache	access:public
w32font_info::font	w32font.h	/^  struct font font;$/;"	m	struct:w32font_info	typeref:struct:w32font_info::font	access:public
w32font_info::glyph_idx	w32font.h	/^  unsigned int glyph_idx;$/;"	m	struct:w32font_info	access:public
w32font_info::hfont	w32font.h	/^  HFONT hfont;$/;"	m	struct:w32font_info	access:public
w32font_info::metrics	w32font.h	/^  TEXTMETRICW metrics;$/;"	m	struct:w32font_info	access:public
w32font_info::n_cache_blocks	w32font.h	/^  int n_cache_blocks;$/;"	m	struct:w32font_info	access:public
w32font_list	w32font.c	/^w32font_list (struct frame *f, Lisp_Object font_spec)$/;"	f	file:	signature:(struct frame *f, Lisp_Object font_spec)
w32font_list_family	w32font.c	/^w32font_list_family (struct frame *f)$/;"	f	file:	signature:(struct frame *f)
w32font_list_internal	w32font.c	/^w32font_list_internal (struct frame *f, Lisp_Object font_spec,$/;"	f	signature:(struct frame *f, Lisp_Object font_spec, bool opentype_only)
w32font_list_internal	w32font.h	/^Lisp_Object w32font_list_internal (struct frame *f,$/;"	p	signature:(struct frame *f, Lisp_Object font_spec, bool opentype_only)
w32font_match	w32font.c	/^w32font_match (struct frame *f, Lisp_Object font_spec)$/;"	f	file:	signature:(struct frame *f, Lisp_Object font_spec)
w32font_match_internal	w32font.c	/^w32font_match_internal (struct frame *f, Lisp_Object font_spec,$/;"	f	signature:(struct frame *f, Lisp_Object font_spec, bool opentype_only)
w32font_match_internal	w32font.h	/^Lisp_Object w32font_match_internal (struct frame *f,$/;"	p	signature:(struct frame *f, Lisp_Object font_spec, bool opentype_only)
w32font_non_booleans	w32font.c	/^static const char *const w32font_non_booleans [] = {$/;"	v	file:
w32font_open	w32font.c	/^w32font_open (struct frame *f, Lisp_Object font_entity, int pixel_size)$/;"	f	file:	signature:(struct frame *f, Lisp_Object font_entity, int pixel_size)
w32font_open_internal	w32font.c	/^w32font_open_internal (struct frame *f, Lisp_Object font_entity,$/;"	f	signature:(struct frame *f, Lisp_Object font_entity, int pixel_size, Lisp_Object font_object)
w32font_open_internal	w32font.h	/^int w32font_open_internal (struct frame *f, Lisp_Object font_entity,$/;"	p	signature:(struct frame *f, Lisp_Object font_entity, int pixel_size, Lisp_Object font_object)
w32font_text_extents	w32font.c	/^w32font_text_extents (struct font *font, unsigned *code,$/;"	f	signature:(struct font *font, unsigned *code, int nglyphs, struct font_metrics *metrics)
w32font_text_extents	w32font.h	/^void w32font_text_extents (struct font *font, unsigned *code, int nglyphs,$/;"	p	signature:(struct font *font, unsigned *code, int nglyphs, struct font_metrics *metrics)
w32fullscreen_hook	w32term.c	/^static void w32fullscreen_hook (struct frame *);$/;"	p	file:	signature:(struct frame *)
w32fullscreen_hook	w32term.c	/^w32fullscreen_hook (struct frame *f)$/;"	f	file:	signature:(struct frame *f)
W32METRIC_FAIL	w32font.h	46;"	d
W32METRIC_NO_ATTEMPT	w32font.h	44;"	d
W32METRIC_SUCCESS	w32font.h	45;"	d
w32msg	w32term.h	/^  W32Msg                w32msg;$/;"	m	struct:deferred_msg	access:public
W32Msg	w32term.h	/^typedef struct W32Msg {$/;"	s
W32Msg	w32term.h	/^} W32Msg;$/;"	t	typeref:struct:W32Msg
w32msg	w32xfns.c	/^  W32Msg w32msg;$/;"	m	struct:int_msg	file:	access:public
W32Msg::dwModifiers	w32term.h	/^    DWORD dwModifiers;$/;"	m	struct:W32Msg	access:public
W32Msg::msg	w32term.h	/^    MSG msg;$/;"	m	struct:W32Msg	access:public
W32Msg::rect	w32term.h	/^    RECT rect;$/;"	m	struct:W32Msg	access:public
W32SELECT_H	w32select.h	21;"	d
w32thread_cond_t	systhread.h	/^} w32thread_cond_t;$/;"	t	typeref:struct:__anon45
w32thread_critsect	systhread.h	/^} w32thread_critsect;$/;"	t	typeref:struct:__anon43
w32_accessible_directory_p	w32.c	/^w32_accessible_directory_p (const char *dirname, ptrdiff_t dirlen)$/;"	f	signature:(const char *dirname, ptrdiff_t dirlen)
w32_accessible_directory_p	w32.h	/^extern int  w32_accessible_directory_p (const char *, ptrdiff_t);$/;"	p	signature:(const char *, ptrdiff_t)
w32_add_to_cache	w32.c	/^w32_add_to_cache (PSID sid, unsigned id, char *name)$/;"	f	file:	signature:(PSID sid, unsigned id, char *name)
w32_alloc_lighter_color	w32term.c	/^static int w32_alloc_lighter_color (struct frame *, COLORREF *, double, int);$/;"	p	file:	signature:(struct frame *, COLORREF *, double, int)
w32_alloc_lighter_color	w32term.c	/^w32_alloc_lighter_color (struct frame *f, COLORREF *color,$/;"	f	file:	signature:(struct frame *f, COLORREF *color, double factor, int delta)
w32_antialias_type	w32font.c	/^static BYTE w32_antialias_type (Lisp_Object);$/;"	p	file:
w32_antialias_type	w32font.c	/^w32_antialias_type (Lisp_Object type)$/;"	f	file:	signature:(Lisp_Object type)
w32_arrow_cursor	w32term.c	/^w32_arrow_cursor (void)$/;"	f	signature:(void)
w32_arrow_cursor	w32term.h	/^extern void w32_arrow_cursor (void);$/;"	p	signature:(void)
w32_backtrace	w32fns.c	/^w32_backtrace (void **buffer, int limit)$/;"	f	file:	signature:(void **buffer, int limit)
w32_beginthread_wrapper	systhread.c	/^w32_beginthread_wrapper (void *arg)$/;"	f	file:	signature:(void *arg)
w32_bitmap_record	w32term.h	/^struct w32_bitmap_record$/;"	s
w32_bitmap_record::depth	w32term.h	/^  int height, width, depth;$/;"	m	struct:w32_bitmap_record	access:public
w32_bitmap_record::file	w32term.h	/^  char *file;$/;"	m	struct:w32_bitmap_record	access:public
w32_bitmap_record::height	w32term.h	/^  int height, width, depth;$/;"	m	struct:w32_bitmap_record	access:public
w32_bitmap_record::hinst	w32term.h	/^  HINSTANCE hinst; \/* Used to load the file *\/$/;"	m	struct:w32_bitmap_record	access:public
w32_bitmap_record::pixmap	w32term.h	/^  Pixmap pixmap;$/;"	m	struct:w32_bitmap_record	access:public
w32_bitmap_record::refcount	w32term.h	/^  int refcount;$/;"	m	struct:w32_bitmap_record	access:public
w32_bitmap_record::width	w32term.h	/^  int height, width, depth;$/;"	m	struct:w32_bitmap_record	access:public
w32_build_number	w32fns.c	/^int w32_build_number;$/;"	v
w32_cached_id	w32.c	/^w32_cached_id (PSID sid, unsigned *id, char *name)$/;"	f	file:	signature:(PSID sid, unsigned *id, char *name)
w32_clear_area	w32term.h	602;"	d
w32_clear_frame_area	w32term.c	/^w32_clear_frame_area (struct frame *f, int x, int y, int width, int height)$/;"	f	file:	signature:(struct frame *f, int x, int y, int width, int height)
w32_clear_rect	w32term.h	599;"	d
w32_clear_window	w32term.c	/^w32_clear_window (struct frame *f)$/;"	f	signature:(struct frame *f)
w32_clear_window	w32term.h	/^extern void w32_clear_window (struct frame *);$/;"	p	signature:(struct frame *)
w32_clip_to_row	w32term.c	/^static void w32_clip_to_row (struct window *, struct glyph_row *,$/;"	p	file:	signature:(struct window *, struct glyph_row *, enum glyph_row_area, HDC)
w32_clip_to_row	w32term.c	/^w32_clip_to_row (struct window *w, struct glyph_row *row,$/;"	f	file:	signature:(struct window *w, struct glyph_row *row, enum glyph_row_area area, HDC hdc)
w32_codepage_for_font	w32term.c	/^extern int w32_codepage_for_font (char *fontname);$/;"	p	file:	signature:(char *fontname)
W32_COLOR	w32fns.c	1075;"	d	file:
w32_color_map	w32fns.c	/^colormap_t w32_color_map[] =$/;"	v
w32_color_map_lookup	w32fns.c	/^w32_color_map_lookup (const char *colorname)$/;"	f	file:	signature:(const char *colorname)
w32_compare_strings	w32.h	/^extern int w32_compare_strings (const char *, const char *, char *, int);$/;"	p	signature:(const char *, const char *, char *, int)
w32_compare_strings	w32proc.c	/^w32_compare_strings (const char *s1, const char *s2, char *locname,$/;"	f	signature:(const char *s1, const char *s2, char *locname, int ignore_case)
w32_compute_glyph_string_overhangs	w32term.c	/^w32_compute_glyph_string_overhangs (struct glyph_string *s)$/;"	f	file:	signature:(struct glyph_string *s)
w32_condemn_scroll_bars	w32term.c	/^w32_condemn_scroll_bars (struct frame *frame)$/;"	f	file:	signature:(struct frame *frame)
w32_console_mouse_position	w32inevt.c	/^w32_console_mouse_position (struct frame **f,$/;"	f	signature:(struct frame **f, int insist, Lisp_Object *bar_window, enum scroll_bar_part *part, Lisp_Object *x, Lisp_Object *y, Time *time)
w32_console_mouse_position	w32inevt.h	/^extern void w32_console_mouse_position (struct frame **f, int insist,$/;"	p	signature:(struct frame **f, int insist, Lisp_Object *bar_window, enum scroll_bar_part *part, Lisp_Object *x, Lisp_Object *y, Time *time)
w32_console_read_socket	w32inevt.c	/^w32_console_read_socket (struct terminal *terminal,$/;"	f	signature:(struct terminal *terminal, struct input_event *hold_quit)
w32_console_read_socket	w32inevt.h	/^extern int w32_console_read_socket (struct terminal *term,$/;"	p	signature:(struct terminal *term, struct input_event *hold_quit)
w32_console_toggle_lock_key	w32fns.c	/^extern int w32_console_toggle_lock_key (int, Lisp_Object);$/;"	p	file:	signature:(int, Lisp_Object)
w32_console_toggle_lock_key	w32fns.c	/^w32_console_toggle_lock_key (int vk_code, Lisp_Object new_state)$/;"	f	signature:(int vk_code, Lisp_Object new_state)
w32_console_unicode_input	w32console.c	/^int w32_console_unicode_input;$/;"	v
w32_copy_file	w32.c	/^w32_copy_file (const char *from, const char *to,$/;"	f	signature:(const char *from, const char *to, int keep_time, int preserve_ownership, int copy_acls)
w32_copy_file	w32.h	/^extern int  w32_copy_file (const char *, const char *, int, int, int);$/;"	p	signature:(const char *, const char *, int, int, int)
w32_createhscrollbar	w32fns.c	/^w32_createhscrollbar (struct frame *f, struct scroll_bar * bar)$/;"	f	file:	signature:(struct frame *f, struct scroll_bar * bar)
w32_createvscrollbar	w32fns.c	/^w32_createvscrollbar (struct frame *f, struct scroll_bar * bar)$/;"	f	file:	signature:(struct frame *f, struct scroll_bar * bar)
w32_createwindow	w32fns.c	/^w32_createwindow (struct frame *f, int *coords)$/;"	f	file:	signature:(struct frame *f, int *coords)
w32_create_pixmap_from_bitmap_data	image.c	/^w32_create_pixmap_from_bitmap_data (int width, int height, char *data)$/;"	f	file:	signature:(int width, int height, char *data)
w32_create_terminal	w32term.c	/^w32_create_terminal (struct w32_display_info *dpyinfo)$/;"	f	file:	signature:(struct w32_display_info *dpyinfo)
w32_crypto_hprov	w32.c	/^static HCRYPTPROV w32_crypto_hprov;$/;"	v	file:
w32_daemon_event	emacs.c	/^HANDLE w32_daemon_event;$/;"	v
w32_decode_weight	w32font.c	/^static int w32_decode_weight (int);$/;"	p	file:	signature:(int)
w32_decode_weight	w32font.c	/^w32_decode_weight (int fnweight)$/;"	f	file:	signature:(int fnweight)
w32_default_color_map	w32fns.c	/^w32_default_color_map (void)$/;"	f	file:	signature:(void)
w32_defined_color	w32fns.c	/^w32_defined_color (struct frame *f, const char *color, XColor *color_def,$/;"	f	signature:(struct frame *f, const char *color, XColor *color_def, bool alloc_p)
w32_defined_color	w32term.h	/^extern int w32_defined_color (struct frame *f, const char *color,$/;"	p	signature:(struct frame *f, const char *color, XColor *color_def, bool alloc_p)
w32_define_cursor	w32term.c	/^static void w32_define_cursor (Window, Cursor);$/;"	p	file:
w32_define_cursor	w32term.c	/^w32_define_cursor (Window window, Cursor cursor)$/;"	f	file:	signature:(Window window, Cursor cursor)
w32_define_frame_cursor	w32term.c	/^w32_define_frame_cursor (struct frame *f, Cursor cursor)$/;"	f	file:	signature:(struct frame *f, Cursor cursor)
w32_define_fringe_bitmap	w32term.c	/^w32_define_fringe_bitmap (int which, unsigned short *bits, int h, int wd)$/;"	f	file:	signature:(int which, unsigned short *bits, int h, int wd)
w32_delayed_load	w32.c	/^w32_delayed_load (Lisp_Object library_id)$/;"	f	signature:(Lisp_Object library_id)
w32_delayed_load	w32.h	/^extern HMODULE w32_delayed_load (Lisp_Object);$/;"	p	signature:(Lisp_Object)
w32_destroy_fringe_bitmap	w32term.c	/^w32_destroy_fringe_bitmap (int which)$/;"	f	file:	signature:(int which)
w32_detect_focus_change	w32term.c	/^static void w32_detect_focus_change (struct w32_display_info *,$/;"	p	file:	signature:(struct w32_display_info *, W32Msg *, struct input_event *)
w32_detect_focus_change	w32term.c	/^w32_detect_focus_change (struct w32_display_info *dpyinfo, W32Msg *event,$/;"	f	file:	signature:(struct w32_display_info *dpyinfo, W32Msg *event, struct input_event *bufp)
w32_dialog_in_progress	w32fns.c	/^w32_dialog_in_progress (Lisp_Object in_progress)$/;"	f	signature:(Lisp_Object in_progress)
w32_dialog_in_progress	w32term.h	/^extern void w32_dialog_in_progress (Lisp_Object in_progress);$/;"	p	signature:(Lisp_Object in_progress)
w32_dialog_show	w32menu.c	/^static Lisp_Object w32_dialog_show (struct frame *, Lisp_Object, Lisp_Object, char **);$/;"	p	file:	signature:(struct frame *, Lisp_Object, Lisp_Object, char **)
w32_dialog_show	w32menu.c	/^w32_dialog_show (struct frame *f, Lisp_Object title,$/;"	f	file:	signature:(struct frame *f, Lisp_Object title, Lisp_Object header, char **error)
w32_display_info	w32term.h	/^struct w32_display_info$/;"	s
w32_display_info::bitmaps	w32term.h	/^  struct w32_bitmap_record *bitmaps;$/;"	m	struct:w32_display_info	typeref:struct:w32_display_info::w32_bitmap_record	access:public
w32_display_info::bitmaps_last	w32term.h	/^  ptrdiff_t bitmaps_last;$/;"	m	struct:w32_display_info	access:public
w32_display_info::bitmaps_size	w32term.h	/^  ptrdiff_t bitmaps_size;$/;"	m	struct:w32_display_info	access:public
w32_display_info::color_list	w32term.h	/^  struct w32_palette_entry * color_list;$/;"	m	struct:w32_display_info	typeref:struct:w32_display_info::w32_palette_entry	access:public
w32_display_info::cursor_display_counter	w32term.h	/^  int cursor_display_counter;$/;"	m	struct:w32_display_info	access:public
w32_display_info::faked_key	w32term.h	/^  int faked_key;$/;"	m	struct:w32_display_info	access:public
w32_display_info::grabbed	w32term.h	/^  int grabbed;$/;"	m	struct:w32_display_info	access:public
w32_display_info::has_palette	w32term.h	/^  int has_palette;$/;"	m	struct:w32_display_info	access:public
w32_display_info::horizontal_scroll_bar_cursor	w32term.h	/^  Cursor horizontal_scroll_bar_cursor;$/;"	m	struct:w32_display_info	access:public
w32_display_info::icon_bitmap_id	w32term.h	/^  ptrdiff_t icon_bitmap_id;$/;"	m	struct:w32_display_info	access:public
w32_display_info::last_mouse_frame	w32term.h	/^  struct frame *last_mouse_frame;$/;"	m	struct:w32_display_info	typeref:struct:w32_display_info::frame	access:public
w32_display_info::last_mouse_glyph	w32term.h	/^  RECT last_mouse_glyph;$/;"	m	struct:w32_display_info	access:public
w32_display_info::last_mouse_glyph_frame	w32term.h	/^  struct frame *last_mouse_glyph_frame;$/;"	m	struct:w32_display_info	typeref:struct:w32_display_info::frame	access:public
w32_display_info::last_mouse_motion_frame	w32term.h	/^  struct frame *last_mouse_motion_frame;$/;"	m	struct:w32_display_info	typeref:struct:w32_display_info::frame	access:public
w32_display_info::last_mouse_motion_x	w32term.h	/^  int last_mouse_motion_x;$/;"	m	struct:w32_display_info	access:public
w32_display_info::last_mouse_motion_y	w32term.h	/^  int last_mouse_motion_y;$/;"	m	struct:w32_display_info	access:public
w32_display_info::last_mouse_movement_time	w32term.h	/^  Time last_mouse_movement_time;$/;"	m	struct:w32_display_info	access:public
w32_display_info::last_mouse_scroll_bar	w32term.h	/^  struct scroll_bar *last_mouse_scroll_bar;$/;"	m	struct:w32_display_info	typeref:struct:w32_display_info::scroll_bar	access:public
w32_display_info::last_mouse_scroll_bar_pos	w32term.h	/^  int last_mouse_scroll_bar_pos;$/;"	m	struct:w32_display_info	access:public
w32_display_info::mouse_highlight	w32term.h	/^  Mouse_HLInfo mouse_highlight;$/;"	m	struct:w32_display_info	access:public
w32_display_info::name_list_element	w32term.h	/^  Lisp_Object name_list_element;$/;"	m	struct:w32_display_info	access:public
w32_display_info::next	w32term.h	/^  struct w32_display_info *next;$/;"	m	struct:w32_display_info	typeref:struct:w32_display_info::w32_display_info	access:public
w32_display_info::num_colors	w32term.h	/^  unsigned num_colors;$/;"	m	struct:w32_display_info	access:public
w32_display_info::n_cbits	w32term.h	/^  int n_cbits;$/;"	m	struct:w32_display_info	access:public
w32_display_info::n_fonts	w32term.h	/^  int n_fonts;$/;"	m	struct:w32_display_info	access:public
w32_display_info::n_planes	w32term.h	/^  int n_planes;$/;"	m	struct:w32_display_info	access:public
w32_display_info::palette	w32term.h	/^  HPALETTE palette;$/;"	m	struct:w32_display_info	access:public
w32_display_info::reference_count	w32term.h	/^  int reference_count;$/;"	m	struct:w32_display_info	access:public
w32_display_info::regen_palette	w32term.h	/^  int regen_palette;$/;"	m	struct:w32_display_info	access:public
w32_display_info::resx	w32term.h	/^  double resx, resy;$/;"	m	struct:w32_display_info	access:public
w32_display_info::resy	w32term.h	/^  double resx, resy;$/;"	m	struct:w32_display_info	access:public
w32_display_info::root_window	w32term.h	/^  Window root_window;$/;"	m	struct:w32_display_info	access:public
w32_display_info::scratch_cursor_gc	w32term.h	/^  XGCValues *scratch_cursor_gc;$/;"	m	struct:w32_display_info	access:public
w32_display_info::smallest_char_width	w32term.h	/^  int smallest_char_width;$/;"	m	struct:w32_display_info	access:public
w32_display_info::smallest_font_height	w32term.h	/^  int smallest_font_height;$/;"	m	struct:w32_display_info	access:public
w32_display_info::terminal	w32term.h	/^  struct terminal *terminal;$/;"	m	struct:w32_display_info	typeref:struct:w32_display_info::terminal	access:public
w32_display_info::vertical_scroll_bar_cursor	w32term.h	/^  Cursor vertical_scroll_bar_cursor;$/;"	m	struct:w32_display_info	access:public
w32_display_info::w32_focus_event_frame	w32term.h	/^  struct frame *w32_focus_event_frame;$/;"	m	struct:w32_display_info	typeref:struct:w32_display_info::frame	access:public
w32_display_info::w32_focus_frame	w32term.h	/^  struct frame *w32_focus_frame;$/;"	m	struct:w32_display_info	typeref:struct:w32_display_info::frame	access:public
w32_display_info::w32_id_name	w32term.h	/^  char *w32_id_name;$/;"	m	struct:w32_display_info	access:public
w32_display_info::w32_pending_autoraise_frame	w32term.h	/^  struct frame *w32_pending_autoraise_frame;$/;"	m	struct:w32_display_info	typeref:struct:w32_display_info::frame	access:public
w32_display_info::xrdb	w32term.h	/^  XrmDatabase xrdb;$/;"	m	struct:w32_display_info	access:public
w32_display_info::x_highlight_frame	w32term.h	/^  struct frame *x_highlight_frame;$/;"	m	struct:w32_display_info	typeref:struct:w32_display_info::frame	access:public
w32_display_monitor_attributes_list	w32fns.c	/^w32_display_monitor_attributes_list (void)$/;"	f	file:	signature:(void)
w32_display_monitor_attributes_list_fallback	w32fns.c	/^w32_display_monitor_attributes_list_fallback (struct w32_display_info *dpyinfo)$/;"	f	file:	signature:(struct w32_display_info *dpyinfo)
w32_draw_box_rect	w32term.c	/^static void w32_draw_box_rect (struct glyph_string *, int, int, int, int,$/;"	p	file:	signature:(struct glyph_string *, int, int, int, int, int, bool, bool, RECT *)
w32_draw_box_rect	w32term.c	/^w32_draw_box_rect (struct glyph_string *s,$/;"	f	file:	signature:(struct glyph_string *s, int left_x, int top_y, int right_x, int bottom_y, int width, bool left_p, bool right_p, RECT *clip_rect)
w32_draw_fringe_bitmap	w32term.c	/^w32_draw_fringe_bitmap (struct window *w, struct glyph_row *row,$/;"	f	file:	signature:(struct window *w, struct glyph_row *row, struct draw_fringe_bitmap_params *p)
w32_draw_image_foreground_1	w32term.c	/^static void w32_draw_image_foreground_1 (struct glyph_string *, HBITMAP);$/;"	p	file:	signature:(struct glyph_string *, HBITMAP)
w32_draw_image_foreground_1	w32term.c	/^w32_draw_image_foreground_1 (struct glyph_string *s, HBITMAP pixmap)$/;"	f	file:	signature:(struct glyph_string *s, HBITMAP pixmap)
w32_draw_rectangle	w32term.c	/^w32_draw_rectangle (HDC hdc, XGCValues *gc, int x, int y,$/;"	f	file:	signature:(HDC hdc, XGCValues *gc, int x, int y, int width, int height)
w32_draw_relief_rect	w32term.c	/^static void w32_draw_relief_rect (struct frame *, int, int, int, int,$/;"	p	file:	signature:(struct frame *, int, int, int, int, int, int, int, int, int, int, RECT *)
w32_draw_relief_rect	w32term.c	/^w32_draw_relief_rect (struct frame *f,$/;"	f	file:	signature:(struct frame *f, int left_x, int top_y, int right_x, int bottom_y, int width, int raised_p, int top_p, int bot_p, int left_p, int right_p, RECT *clip_rect)
w32_draw_underwave	w32term.c	/^w32_draw_underwave (struct glyph_string *s, COLORREF color)$/;"	f	file:	signature:(struct glyph_string *s, COLORREF color)
w32_draw_vertical_window_border	w32term.c	/^w32_draw_vertical_window_border (struct window *w, int x, int y0, int y1)$/;"	f	file:	signature:(struct window *w, int x, int y0, int y1)
w32_draw_window_cursor	w32term.c	/^w32_draw_window_cursor (struct window *w, struct glyph_row *glyph_row,$/;"	f	file:	signature:(struct window *w, struct glyph_row *glyph_row, int x, int y, enum text_cursor_kinds cursor_type, int cursor_width, bool on_p, bool active_p)
w32_draw_window_divider	w32term.c	/^w32_draw_window_divider (struct window *w, int x0, int x1, int y0, int y1)$/;"	f	file:	signature:(struct window *w, int x0, int x1, int y0, int y1)
w32_encode_weight	w32font.c	/^static int w32_encode_weight (int);$/;"	p	file:	signature:(int)
w32_encode_weight	w32font.c	/^w32_encode_weight (int n)$/;"	f	file:	signature:(int n)
w32_enumfont_pattern_entity	w32font.c	/^w32_enumfont_pattern_entity (Lisp_Object frame,$/;"	f	file:	signature:(Lisp_Object frame, ENUMLOGFONTEX *logical_font, NEWTEXTMETRICEX *physical_font, DWORD font_type, LOGFONT *requested_font, Lisp_Object backend)
w32_executable_type	w32proc.c	/^w32_executable_type (char * filename,$/;"	f	file:	signature:(char * filename, int * is_dos_app, int * is_cygnus_app, int * is_msys_app, int * is_gui_app)
w32_face_attributes	w32console.c	/^static WORD w32_face_attributes (struct frame *f, int face_id);$/;"	p	file:	signature:(struct frame *f, int face_id)
w32_face_attributes	w32console.c	/^w32_face_attributes (struct frame *f, int face_id)$/;"	f	file:	signature:(struct frame *f, int face_id)
w32_fill_area	w32term.h	579;"	d
w32_fill_area_abs	w32term.h	589;"	d
w32_fill_rect	w32term.c	/^w32_fill_rect (struct frame *f, HDC hdc, COLORREF pix, RECT *lprect)$/;"	f	signature:(struct frame *f, HDC hdc, COLORREF pix, RECT *lprect)
w32_fill_rect	w32term.h	/^extern void w32_fill_rect (struct frame *, HDC, COLORREF, RECT *);$/;"	p	signature:(struct frame *, HDC, COLORREF, RECT *)
w32_focus_event_frame	w32term.h	/^  struct frame *w32_focus_event_frame;$/;"	m	struct:w32_display_info	typeref:struct:w32_display_info::frame	access:public
w32_focus_frame	w32term.h	/^  struct frame *w32_focus_frame;$/;"	m	struct:w32_display_info	typeref:struct:w32_display_info::frame	access:public
w32_font	w32uniscribe.c	/^  struct w32font_info w32_font;$/;"	m	struct:uniscribe_font_info	typeref:struct:uniscribe_font_info::w32font_info	file:	access:public
w32_frame_list_z_order	w32fns.c	/^w32_frame_list_z_order (struct w32_display_info *dpyinfo, HWND window)$/;"	f	file:	signature:(struct w32_display_info *dpyinfo, HWND window)
w32_frame_parm_handlers	w32fns.c	/^frame_parm_handler w32_frame_parm_handlers[] =$/;"	v
w32_frame_raise_lower	w32term.c	/^w32_frame_raise_lower (struct frame *f, bool raise_flag)$/;"	f	file:	signature:(struct frame *f, bool raise_flag)
w32_frame_rehighlight	w32term.c	/^static void w32_frame_rehighlight (struct frame *);$/;"	p	file:	signature:(struct frame *)
w32_frame_rehighlight	w32term.c	/^w32_frame_rehighlight (struct frame *frame)$/;"	f	file:	signature:(struct frame *frame)
w32_frame_restack	w32fns.c	/^w32_frame_restack (struct frame *f1, struct frame *f2, bool above_flag)$/;"	f	file:	signature:(struct frame *f1, struct frame *f2, bool above_flag)
w32_frame_up_to_date	w32term.c	/^static void w32_frame_up_to_date (struct frame *);$/;"	p	file:	signature:(struct frame *)
w32_frame_up_to_date	w32term.c	/^w32_frame_up_to_date (struct frame *f)$/;"	f	file:	signature:(struct frame *f)
w32_free_menu_strings	w32fns.c	/^extern void w32_free_menu_strings (HWND);$/;"	p	file:
w32_free_menu_strings	w32menu.c	/^void w32_free_menu_strings (HWND);$/;"	p	file:
w32_free_menu_strings	w32menu.c	/^w32_free_menu_strings (HWND hwnd)$/;"	f	signature:(HWND hwnd)
w32_free_submenu_strings	w32menu.c	/^w32_free_submenu_strings (HMENU menu)$/;"	f	file:	signature:(HMENU menu)
w32_fullscreen_rect	w32fns.c	/^w32_fullscreen_rect (HWND hwnd, int fsmode, RECT normal, RECT *rect)$/;"	f	signature:(HWND hwnd, int fsmode, RECT normal, RECT *rect)
w32_fullscreen_rect	w32term.h	/^extern void w32_fullscreen_rect (HWND hwnd, int fsmode, RECT normal,$/;"	p	signature:(HWND hwnd, int fsmode, RECT normal, RECT *rect)
w32_generic_family	w32font.c	/^w32_generic_family (Lisp_Object name)$/;"	f	file:	signature:(Lisp_Object name)
w32_get_internal_run_time	editfns.c	/^extern Lisp_Object w32_get_internal_run_time (void);$/;"	p	file:	signature:(void)
w32_get_internal_run_time	w32.c	/^Lisp_Object w32_get_internal_run_time (void);$/;"	p	file:	signature:(void)
w32_get_internal_run_time	w32.c	/^w32_get_internal_run_time (void)$/;"	f	signature:(void)
w32_get_key_modifiers	w32fns.c	/^w32_get_key_modifiers (unsigned int wparam, unsigned int lparam)$/;"	f	file:	signature:(unsigned int wparam, unsigned int lparam)
w32_get_long_filename	w32.c	/^w32_get_long_filename (const char * name, char * buf, int size)$/;"	f	signature:(const char * name, char * buf, int size)
w32_get_long_filename	w32.h	/^extern BOOL w32_get_long_filename (const char * name, char * buf, int size);$/;"	p	signature:(const char * name, char * buf, int size)
w32_get_modifiers	w32fns.c	/^w32_get_modifiers (void)$/;"	f	file:	signature:(void)
w32_get_rdb_resource	w32reg.c	/^w32_get_rdb_resource (const char *rdb, const char *resource)$/;"	f	file:	signature:(const char *rdb, const char *resource)
w32_get_resource	w32.c	/^w32_get_resource (const char *key, LPDWORD lpdwtype)$/;"	f	signature:(const char *key, LPDWORD lpdwtype)
w32_get_resource	w32.h	/^extern LPBYTE w32_get_resource (const char * key, LPDWORD type);$/;"	p	signature:(const char * key, LPDWORD type)
w32_get_short_filename	w32.c	/^w32_get_short_filename (const char * name, char * buf, int size)$/;"	f	signature:(const char * name, char * buf, int size)
w32_get_short_filename	w32.h	/^extern unsigned int w32_get_short_filename (const char *, char *, int);$/;"	p	signature:(const char *, char *, int)
w32_get_string_resource	w32reg.c	/^w32_get_string_resource (const char *name, const char *class, DWORD dwexptype)$/;"	f	file:	signature:(const char *name, const char *class, DWORD dwexptype)
w32_get_timer_time	w32proc.c	/^w32_get_timer_time (HANDLE thread)$/;"	f	file:	signature:(HANDLE thread)
w32_get_watch_object	w32notify.c	/^w32_get_watch_object (void *desc)$/;"	f	signature:(void *desc)
w32_get_watch_object	w32term.h	/^extern Lisp_Object w32_get_watch_object (void *);$/;"	p	signature:(void *)
w32_grabbed_keys	w32fns.c	/^static Lisp_Object w32_grabbed_keys;$/;"	v	file:
w32_handle_tool_bar_click	w32term.c	/^static void w32_handle_tool_bar_click (struct frame *,$/;"	p	file:	signature:(struct frame *, struct input_event *)
w32_handle_tool_bar_click	w32term.c	/^w32_handle_tool_bar_click (struct frame *f, struct input_event *button_event)$/;"	f	file:	signature:(struct frame *f, struct input_event *button_event)
w32_hide_hourglass	w32term.c	/^w32_hide_hourglass (struct frame *f)$/;"	f	file:	signature:(struct frame *f)
w32_horizontal_scroll_bar_handle_click	w32term.c	/^w32_horizontal_scroll_bar_handle_click (struct scroll_bar *bar, W32Msg *msg,$/;"	f	file:	signature:(struct scroll_bar *bar, W32Msg *msg, struct input_event *emacs_event)
w32_id	w32.c	/^struct w32_id {$/;"	s	file:
w32_id::name	w32.c	/^  char name[GNLEN+1];$/;"	m	struct:w32_id	file:	access:public
w32_id::next	w32.c	/^  struct w32_id *next;$/;"	m	struct:w32_id	typeref:struct:w32_id::w32_id	file:	access:public
w32_id::rid	w32.c	/^  unsigned rid;$/;"	m	struct:w32_id	file:	access:public
w32_id::sid	w32.c	/^  unsigned char sid[FLEXIBLE_ARRAY_MEMBER];$/;"	m	struct:w32_id	file:	access:public
w32_idlist	w32.c	/^static struct w32_id *w32_idlist;$/;"	v	typeref:struct:w32_id	file:
w32_id_name	w32term.h	/^  char *w32_id_name;$/;"	m	struct:w32_display_info	access:public
w32_initialize	w32term.c	/^static void w32_initialize (void);$/;"	p	file:	signature:(void)
w32_initialize	w32term.c	/^w32_initialize (void)$/;"	f	file:	signature:(void)
w32_initialized	w32term.c	/^static int w32_initialized = 0;$/;"	v	file:
w32_initialize_display_info	w32term.c	/^w32_initialize_display_info (Lisp_Object display_name)$/;"	f	signature:(Lisp_Object display_name)
w32_initialize_display_info	w32term.h	/^extern void w32_initialize_display_info (Lisp_Object);$/;"	p	signature:(Lisp_Object)
w32_init_class	w32fns.c	/^w32_init_class (HINSTANCE hinst)$/;"	f	file:	signature:(HINSTANCE hinst)
w32_init_crypt_random	w32.c	/^w32_init_crypt_random (void)$/;"	f	file:	signature:(void)
w32_init_file_name_codepage	w32.c	/^w32_init_file_name_codepage (void)$/;"	f	signature:(void)
w32_init_file_name_codepage	w32.h	/^extern void w32_init_file_name_codepage (void);$/;"	p	signature:(void)
w32_init_fringe	dispextern.h	/^void w32_init_fringe (struct redisplay_interface *);$/;"	p	signature:(struct redisplay_interface *)
w32_init_fringe	fringe.c	/^w32_init_fringe (struct redisplay_interface *rif)$/;"	f	signature:(struct redisplay_interface *rif)
w32_init_main_thread	w32term.c	/^w32_init_main_thread (void)$/;"	f	signature:(void)
w32_init_main_thread	w32term.h	/^extern void w32_init_main_thread (void);$/;"	p	signature:(void)
w32_init_random	w32.c	/^w32_init_random (void *buf, ptrdiff_t buflen)$/;"	f	signature:(void *buf, ptrdiff_t buflen)
w32_init_random	w32.h	/^extern int w32_init_random (void *, ptrdiff_t);$/;"	p	signature:(void *, ptrdiff_t)
w32_judge_scroll_bars	w32term.c	/^w32_judge_scroll_bars (struct frame *f)$/;"	f	file:	signature:(struct frame *f)
w32_kbdhook_active	w32term.h	745;"	d
w32_kbdhook_active	w32term.h	747;"	d
w32_kbd_mods_to_emacs	w32fns.c	/^w32_kbd_mods_to_emacs (DWORD mods, WORD key)$/;"	f	signature:(DWORD mods, WORD key)
w32_kbd_mods_to_emacs	w32term.h	/^extern int w32_kbd_mods_to_emacs (DWORD mods, WORD key);$/;"	p	signature:(DWORD mods, WORD key)
w32_kbd_patch_key	w32fns.c	/^w32_kbd_patch_key (KEY_EVENT_RECORD *event, int cpId)$/;"	f	signature:(KEY_EVENT_RECORD *event, int cpId)
w32_kbd_patch_key	w32term.h	/^extern int w32_kbd_patch_key (KEY_EVENT_RECORD *event, int cpId);$/;"	p	signature:(KEY_EVENT_RECORD *event, int cpId)
w32_keyboard_codepage	w32term.c	/^int w32_keyboard_codepage;$/;"	v
w32_key_to_modifier	w32fns.c	/^unsigned int w32_key_to_modifier (int);$/;"	p	file:	signature:(int)
w32_key_to_modifier	w32fns.c	/^w32_key_to_modifier (int key)$/;"	f	signature:(int key)
w32_key_to_modifier	w32inevt.c	/^extern unsigned int w32_key_to_modifier (int key);$/;"	p	file:	signature:(int key)
w32_last_error	w32fns.c	/^DWORD w32_last_error (void);$/;"	p	file:	signature:(void)
w32_last_error	w32fns.c	/^w32_last_error (void)$/;"	f	signature:(void)
W32_LIBS	Makefile	/^W32_LIBS=$/;"	m
w32_load_cursor	w32fns.c	/^Cursor w32_load_cursor (LPCTSTR);$/;"	p	file:
w32_load_cursor	w32fns.c	/^w32_load_cursor (LPCTSTR name)$/;"	f	signature:(LPCTSTR name)
w32_load_cursor	w32term.c	/^extern Cursor w32_load_cursor (LPCTSTR name);$/;"	p	file:	signature:(LPCTSTR name)
w32_load_unicows_or_gdi32	w32font.c	/^w32_load_unicows_or_gdi32 (void)$/;"	f	file:	signature:(void)
w32_major_version	w32fns.c	/^int w32_major_version;$/;"	v
w32_make_rdb	w32term.c	/^w32_make_rdb (char *xrm_option)$/;"	f	file:	signature:(char *xrm_option)
w32_memory_info	w32.c	/^w32_memory_info (unsigned long long *totalram, unsigned long long *freeram,$/;"	f	signature:(unsigned long long *totalram, unsigned long long *freeram, unsigned long long *totalswap, unsigned long long *freeswap)
w32_memory_info	w32.h	/^extern int w32_memory_info (unsigned long long *, unsigned long long *,$/;"	p	signature:(unsigned long long *, unsigned long long *, unsigned long long *, unsigned long long *)
w32_menu_display_help	w32fns.c	/^extern void w32_menu_display_help (HWND, HMENU, UINT, UINT);$/;"	p	file:
w32_menu_display_help	w32menu.c	/^void w32_menu_display_help (HWND, HMENU, UINT, UINT);$/;"	p	file:
w32_menu_display_help	w32menu.c	/^w32_menu_display_help (HWND owner, HMENU menu, UINT item, UINT flags)$/;"	f	signature:(HWND owner, HMENU menu, UINT item, UINT flags)
w32_menu_show	menu.h	/^extern Lisp_Object w32_menu_show (struct frame *, int, int, int,$/;"	p	signature:(struct frame *, int, int, int, Lisp_Object, const char **)
w32_menu_show	w32menu.c	/^w32_menu_show (struct frame *f, int x, int y, int menuflags,$/;"	f	signature:(struct frame *f, int x, int y, int menuflags, Lisp_Object title, const char **error)
w32_message_fd	w32term.c	/^int w32_message_fd = -1;$/;"	v
w32_metric_cache	w32font.h	/^struct w32_metric_cache$/;"	s
w32_metric_cache::ascent	w32font.h	/^  short lbearing, rbearing, width, ascent, descent;$/;"	m	struct:w32_metric_cache	access:public
w32_metric_cache::descent	w32font.h	/^  short lbearing, rbearing, width, ascent, descent;$/;"	m	struct:w32_metric_cache	access:public
w32_metric_cache::lbearing	w32font.h	/^  short lbearing, rbearing, width, ascent, descent;$/;"	m	struct:w32_metric_cache	access:public
w32_metric_cache::rbearing	w32font.h	/^  short lbearing, rbearing, width, ascent, descent;$/;"	m	struct:w32_metric_cache	access:public
w32_metric_cache::status	w32font.h	/^  unsigned char status;$/;"	m	struct:w32_metric_cache	access:public
w32_metric_cache::width	w32font.h	/^  short lbearing, rbearing, width, ascent, descent;$/;"	m	struct:w32_metric_cache	access:public
w32_minor_version	w32fns.c	/^int w32_minor_version;$/;"	v
w32_monitor_enum	w32fns.c	/^w32_monitor_enum (HMONITOR monitor, HDC hdc, RECT *rcMonitor, LPARAM dwData)$/;"	f	file:	signature:(HMONITOR monitor, HDC hdc, RECT *rcMonitor, LPARAM dwData)
w32_mouse_position	w32term.c	/^w32_mouse_position (struct frame **fp, int insist, Lisp_Object *bar_window,$/;"	f	file:	signature:(struct frame **fp, int insist, Lisp_Object *bar_window, enum scroll_bar_part *part, Lisp_Object *x, Lisp_Object *y, Time *time)
w32_msg_pump	w32fns.c	/^w32_msg_pump (deferred_msg * msg_buf)$/;"	f	file:	signature:(deferred_msg * msg_buf)
w32_msg_worker	w32fns.c	/^DWORD WINAPI w32_msg_worker (void *);$/;"	p	file:	signature:(void *)
w32_msg_worker	w32fns.c	/^w32_msg_worker (void *arg)$/;"	f	signature:(void *arg)
w32_msg_worker	w32term.c	/^DWORD WINAPI w32_msg_worker (void * arg);$/;"	p	file:	signature:(void * arg)
w32_name_of_message	w32fns.c	/^w32_name_of_message (UINT msg)$/;"	f	signature:(UINT msg)
w32_name_of_message	w32term.h	/^w32_name_of_message (UINT msg);$/;"	p	signature:(UINT msg)
W32_OBJ	Makefile	/^W32_OBJ=$/;"	m
w32_output	w32term.h	/^struct w32_output$/;"	s
w32_output::asked_for_visible	w32term.h	/^  unsigned asked_for_visible : 1;$/;"	m	struct:w32_output	access:public
w32_output::baseline_offset	w32term.h	/^  int baseline_offset;$/;"	m	struct:w32_output	access:public
w32_output::black_relief	w32term.h	/^  black_relief, white_relief;$/;"	m	struct:w32_output	typeref:struct:w32_output::relief	access:public
w32_output::border_pixel	w32term.h	/^  COLORREF border_pixel;$/;"	m	struct:w32_output	access:public
w32_output::bottom_edge_cursor	w32term.h	/^  Cursor bottom_edge_cursor;$/;"	m	struct:w32_output	access:public
w32_output::bottom_left_corner_cursor	w32term.h	/^  Cursor bottom_left_corner_cursor;$/;"	m	struct:w32_output	access:public
w32_output::bottom_right_corner_cursor	w32term.h	/^  Cursor bottom_right_corner_cursor;$/;"	m	struct:w32_output	access:public
w32_output::current_cursor	w32term.h	/^  Cursor current_cursor;$/;"	m	struct:w32_output	access:public
w32_output::cursor_foreground_pixel	w32term.h	/^  COLORREF cursor_foreground_pixel;$/;"	m	struct:w32_output	access:public
w32_output::cursor_gc	w32term.h	/^  XGCValues *cursor_gc;				\/* cursor drawing *\/$/;"	m	struct:w32_output	access:public
w32_output::cursor_pixel	w32term.h	/^  COLORREF cursor_pixel;$/;"	m	struct:w32_output	access:public
w32_output::dwStyle	w32term.h	/^  DWORD dwStyle;$/;"	m	struct:w32_output	access:public
w32_output::explicit_parent	w32term.h	/^  unsigned explicit_parent : 1;$/;"	m	struct:w32_output	access:public
w32_output::font	w32term.h	/^  struct font *font;$/;"	m	struct:w32_output	typeref:struct:w32_output::font	access:public
w32_output::fontset	w32term.h	/^  int fontset;$/;"	m	struct:w32_output	access:public
w32_output::hand_cursor	w32term.h	/^  Cursor hand_cursor;$/;"	m	struct:w32_output	access:public
w32_output::horizontal_drag_cursor	w32term.h	/^  Cursor horizontal_drag_cursor;$/;"	m	struct:w32_output	access:public
w32_output::hourglass_cursor	w32term.h	/^  Cursor hourglass_cursor;$/;"	m	struct:w32_output	access:public
w32_output::hourglass_p	w32term.h	/^  unsigned hourglass_p : 1;$/;"	m	struct:w32_output	access:public
w32_output::left_edge_cursor	w32term.h	/^  Cursor left_edge_cursor;$/;"	m	struct:w32_output	access:public
w32_output::menubar_active	w32term.h	/^  unsigned menubar_active : 1;$/;"	m	struct:w32_output	access:public
w32_output::menubar_widget	w32term.h	/^  HMENU menubar_widget;$/;"	m	struct:w32_output	access:public
w32_output::modeline_cursor	w32term.h	/^  Cursor modeline_cursor;$/;"	m	struct:w32_output	access:public
w32_output::mouse_pixel	w32term.h	/^  COLORREF mouse_pixel;$/;"	m	struct:w32_output	access:public
w32_output::nontext_cursor	w32term.h	/^  Cursor nontext_cursor;$/;"	m	struct:w32_output	access:public
w32_output::normal_placement	w32term.h	/^  WINDOWPLACEMENT normal_placement;$/;"	m	struct:w32_output	access:public
w32_output::old_palette	w32term.h	/^  HPALETTE old_palette;$/;"	m	struct:w32_output	access:public
w32_output::parent_desc	w32term.h	/^  Window parent_desc;$/;"	m	struct:w32_output	access:public
w32_output::prev_fsmode	w32term.h	/^  int prev_fsmode;$/;"	m	struct:w32_output	access:public
w32_output::relief	w32term.h	/^  struct relief$/;"	s	struct:w32_output	access:public
w32_output::relief::gc	w32term.h	/^    XGCValues *gc;$/;"	m	struct:w32_output::relief	access:public
w32_output::relief::pixel	w32term.h	/^    unsigned long pixel;$/;"	m	struct:w32_output::relief	access:public
w32_output::relief_background	w32term.h	/^  unsigned long relief_background;$/;"	m	struct:w32_output	access:public
w32_output::right_edge_cursor	w32term.h	/^  Cursor right_edge_cursor;$/;"	m	struct:w32_output	access:public
w32_output::scroll_bar_background_pixel	w32term.h	/^  COLORREF scroll_bar_background_pixel;$/;"	m	struct:w32_output	access:public
w32_output::scroll_bar_foreground_pixel	w32term.h	/^  COLORREF scroll_bar_foreground_pixel;$/;"	m	struct:w32_output	access:public
w32_output::text_cursor	w32term.h	/^  Cursor text_cursor;$/;"	m	struct:w32_output	access:public
w32_output::top_edge_cursor	w32term.h	/^  Cursor top_edge_cursor;$/;"	m	struct:w32_output	access:public
w32_output::top_left_corner_cursor	w32term.h	/^  Cursor top_left_corner_cursor;$/;"	m	struct:w32_output	access:public
w32_output::top_right_corner_cursor	w32term.h	/^  Cursor top_right_corner_cursor;$/;"	m	struct:w32_output	access:public
w32_output::vertical_drag_cursor	w32term.h	/^  Cursor vertical_drag_cursor;$/;"	m	struct:w32_output	access:public
w32_output::white_relief	w32term.h	/^  black_relief, white_relief;$/;"	m	struct:w32_output	typeref:struct:w32_output::relief	access:public
w32_output::window_desc	w32term.h	/^  Window window_desc;$/;"	m	struct:w32_output	access:public
w32_output::x_compatible	w32term.h	/^  struct x_output x_compatible;$/;"	m	struct:w32_output	typeref:struct:w32_output::x_output	access:public
w32_palette_entry	w32term.h	/^struct w32_palette_entry {$/;"	s
w32_palette_entry::entry	w32term.h	/^  PALETTEENTRY entry;$/;"	m	struct:w32_palette_entry	access:public
w32_palette_entry::next	w32term.h	/^  struct w32_palette_entry * next;$/;"	m	struct:w32_palette_entry	typeref:struct:w32_palette_entry::w32_palette_entry	access:public
w32_parse_and_hook_hot_key	w32fns.c	/^w32_parse_and_hook_hot_key (Lisp_Object key, int hook)$/;"	f	file:	signature:(Lisp_Object key, int hook)
w32_pending_autoraise_frame	w32term.h	/^  struct frame *w32_pending_autoraise_frame;$/;"	m	struct:w32_display_info	typeref:struct:w32_display_info::frame	access:public
w32_popup_dialog	w32menu.c	/^w32_popup_dialog (struct frame *f, Lisp_Object header, Lisp_Object contents)$/;"	f	signature:(struct frame *f, Lisp_Object header, Lisp_Object contents)
w32_popup_dialog	w32term.h	/^extern Lisp_Object w32_popup_dialog (struct frame *, Lisp_Object, Lisp_Object);$/;"	p	signature:(struct frame *, Lisp_Object, Lisp_Object)
w32_read_console_input	w32inevt.c	/^w32_read_console_input (HANDLE h, INPUT_RECORD *rec, DWORD recsize,$/;"	f	file:	signature:(HANDLE h, INPUT_RECORD *rec, DWORD recsize, DWORD *waiting)
w32_read_socket	w32term.c	/^w32_read_socket (struct terminal *terminal,$/;"	f	file:	signature:(struct terminal *terminal, struct input_event *hold_quit)
w32_redeem_scroll_bar	w32term.c	/^w32_redeem_scroll_bar (struct window *w)$/;"	f	file:	signature:(struct window *w)
w32_redisplay_interface	w32term.c	/^static struct redisplay_interface w32_redisplay_interface =$/;"	v	typeref:struct:redisplay_interface	file:
w32_regenerate_palette	w32fns.c	/^w32_regenerate_palette (struct frame *f)$/;"	f	signature:(struct frame *f)
w32_regenerate_palette	w32term.h	/^extern void w32_regenerate_palette (struct frame *f);$/;"	p	signature:(struct frame *f)
w32_registry	w32font.c	/^static Lisp_Object w32_registry (LONG, DWORD);$/;"	p	file:
w32_registry	w32font.c	/^w32_registry (LONG w32_charset, DWORD font_type)$/;"	f	file:	signature:(LONG w32_charset, DWORD font_type)
w32_reset_fringes	dispextern.h	/^void w32_reset_fringes (void);$/;"	p	signature:(void)
w32_reset_fringes	fringe.c	/^w32_reset_fringes (void)$/;"	f	signature:(void)
w32_reset_stack_overflow_guard	w32fns.c	/^w32_reset_stack_overflow_guard (void)$/;"	f	signature:(void)
w32_restore_glyph_string_clip	w32term.c	/^w32_restore_glyph_string_clip (struct glyph_string *s)$/;"	f	file:	signature:(struct glyph_string *s)
W32_RES_LINK	Makefile	/^W32_RES_LINK=$/;"	m
w32_ring_bell	w32term.c	/^w32_ring_bell (struct frame *f)$/;"	f	file:	signature:(struct frame *f)
W32_SAVE_MINGW_VERSION	image.c	9048;"	d	file:
W32_SAVE_MINGW_VERSION	image.c	9063;"	d	file:
w32_scroll_bar_handle_click	w32term.c	/^w32_scroll_bar_handle_click (struct scroll_bar *bar, W32Msg *msg,$/;"	f	file:	signature:(struct scroll_bar *bar, W32Msg *msg, struct input_event *emacs_event)
w32_setup_relief_color	w32term.c	/^static void w32_setup_relief_color (struct frame *, struct relief *,$/;"	p	file:	signature:(struct frame *, struct relief *, double, int, COLORREF)
w32_setup_relief_color	w32term.c	/^w32_setup_relief_color (struct frame *f, struct relief *relief, double factor,$/;"	f	file:	signature:(struct frame *f, struct relief *relief, double factor, int delta, COLORREF default_pixel)
w32_set_clip_rectangle	w32term.c	/^w32_set_clip_rectangle (HDC hdc, RECT *rect)$/;"	f	file:	signature:(HDC hdc, RECT *rect)
w32_set_horizontal_scroll_bar	w32term.c	/^w32_set_horizontal_scroll_bar (struct window *w,$/;"	f	file:	signature:(struct window *w, int portion, int whole, int position)
w32_set_horizontal_scroll_bar_thumb	w32term.c	/^w32_set_horizontal_scroll_bar_thumb (struct scroll_bar *bar,$/;"	f	file:	signature:(struct scroll_bar *bar, int portion, int position, int whole)
w32_set_scroll_bar_thumb	w32term.c	/^w32_set_scroll_bar_thumb (struct scroll_bar *bar,$/;"	f	file:	signature:(struct scroll_bar *bar, int portion, int position, int whole)
w32_set_title_bar_text	w32fns.c	/^w32_set_title_bar_text (struct frame *f, Lisp_Object name)$/;"	f	file:	signature:(struct frame *f, Lisp_Object name)
w32_set_vertical_scroll_bar	w32term.c	/^w32_set_vertical_scroll_bar (struct window *w,$/;"	f	file:	signature:(struct window *w, int portion, int whole, int position)
w32_shift_glyphs_for_insert	w32term.c	/^w32_shift_glyphs_for_insert (struct frame *f, int x, int y,$/;"	f	file:	signature:(struct frame *f, int x, int y, int width, int height, int shift_by)
w32_show_hourglass	w32term.c	/^w32_show_hourglass (struct frame *f)$/;"	f	file:	signature:(struct frame *f)
w32_stat_get_owner_group	w32.c	/^int w32_stat_get_owner_group;$/;"	v
w32_strerror	cygw32.h	/^extern char * w32_strerror (int error_no);$/;"	p	signature:(int error_no)
w32_strerror	w32.h	/^extern char * w32_strerror (int error_no);$/;"	p	signature:(int error_no)
w32_strerror	w32fns.c	/^w32_strerror (int error_no)$/;"	f	signature:(int error_no)
w32_strerror	w32xfns.c	/^extern char * w32_strerror (int error_no);$/;"	p	file:	signature:(int error_no)
w32_system_caret_hdr_height	w32term.c	/^int w32_system_caret_hdr_height;$/;"	v
w32_system_caret_height	w32term.c	/^int w32_system_caret_height;$/;"	v
w32_system_caret_hwnd	w32term.c	/^HWND w32_system_caret_hwnd;$/;"	v
w32_system_caret_mode_height	w32term.c	/^int w32_system_caret_mode_height;$/;"	v
w32_system_caret_window	w32term.c	/^struct window *w32_system_caret_window;$/;"	v	typeref:struct:window
w32_system_caret_x	w32term.c	/^int w32_system_caret_x;$/;"	v
w32_system_caret_y	w32term.c	/^int w32_system_caret_y;$/;"	v
w32_sys_ring_bell	w32fns.c	/^w32_sys_ring_bell (struct frame *f)$/;"	f	signature:(struct frame *f)
w32_sys_ring_bell	w32term.h	/^extern void w32_sys_ring_bell (struct frame *f);$/;"	p	signature:(struct frame *f)
w32_term_init	w32term.c	/^w32_term_init (Lisp_Object display_name, char *xrm_option, char *resource_name)$/;"	f	signature:(Lisp_Object display_name, char *xrm_option, char *resource_name)
w32_term_init	w32term.h	/^extern struct w32_display_info *w32_term_init (Lisp_Object,$/;"	p	signature:(Lisp_Object, char *, char *)
w32_toggle_invisible_pointer	w32term.c	/^w32_toggle_invisible_pointer (struct frame *f, bool invisible)$/;"	f	file:	signature:(struct frame *f, bool invisible)
w32_to_fc_weight	w32font.c	/^w32_to_fc_weight (int n)$/;"	f	file:	signature:(int n)
w32_to_x_charset	w32font.c	/^w32_to_x_charset (int fncharset, char *matching)$/;"	f	file:	signature:(int fncharset, char *matching)
w32_unicode_gui	w32fns.c	/^static int w32_unicode_gui;$/;"	v	file:
w32_valid_pointer_p	w32.c	/^w32_valid_pointer_p (void *p, int size)$/;"	f	signature:(void *p, int size)
w32_valid_pointer_p	w32.h	/^extern int w32_valid_pointer_p (void *, int);$/;"	p	signature:(void *, int)
w32_visible_system_caret_hwnd	w32fns.c	/^static HWND w32_visible_system_caret_hwnd;$/;"	v	file:
w32_widget_high	w32term.h	/^  Lisp_Object w32_widget_low, w32_widget_high;$/;"	m	struct:scroll_bar	access:public
w32_widget_low	w32term.h	/^  Lisp_Object w32_widget_low, w32_widget_high;$/;"	m	struct:scroll_bar	access:public
w32_window	w32fns.c	/^w32_window (struct frame *f, long window_prompting, bool minibuffer_only)$/;"	f	file:	signature:(struct frame *f, long window_prompting, bool minibuffer_only)
w32_window_high	w32term.h	/^  Lisp_Object w32_window_low, w32_window_high;$/;"	m	struct:scroll_bar	access:public
w32_window_low	w32term.h	/^  Lisp_Object w32_window_low, w32_window_high;$/;"	m	struct:scroll_bar	access:public
w32_wnd_proc	w32fns.c	/^static LRESULT CALLBACK w32_wnd_proc (HWND, UINT, WPARAM, LPARAM);$/;"	p	file:
w32_wnd_proc	w32fns.c	/^w32_wnd_proc (HWND hwnd, UINT msg, WPARAM wParam, LPARAM lParam)$/;"	f	file:	signature:(HWND hwnd, UINT msg, WPARAM wParam, LPARAM lParam)
wait	w32proc.c	45;"	d	file:
waiting_for_input	thread.h	153;"	d
waiting_for_other_props_on_window	xselect.c	/^static bool waiting_for_other_props_on_window (Display *, Window);$/;"	p	file:	signature:(Display *, Window)
waiting_for_other_props_on_window	xselect.c	/^waiting_for_other_props_on_window (Display *display, Window window)$/;"	f	file:	signature:(Display *display, Window window)
waiting_for_user_input_p	thread.h	149;"	d
waiting_thread	process.c	/^  struct thread_state *waiting_thread;$/;"	m	struct:fd_callback_data	typeref:struct:fd_callback_data::thread_state	file:	access:public
waitpid	w32proc.c	/^waitpid (pid_t pid, int *status, int options)$/;"	f	signature:(pid_t pid, int *status, int options)
wait_condvar	thread.h	/^  sys_cond_t *wait_condvar;$/;"	m	struct:thread_state	access:public
wait_count	systhread.h	/^  unsigned wait_count;$/;"	m	struct:__anon45	access:public
wait_count_lock	systhread.h	/^  w32thread_critsect wait_count_lock;$/;"	m	struct:__anon45	access:public
wait_event_type	frame.h	/^  int wait_event_type;$/;"	m	struct:frame	access:public
wait_for_property_change	xselect.c	/^static void wait_for_property_change (struct prop_location *);$/;"	p	file:	signature:(struct prop_location *)
wait_for_property_change	xselect.c	/^wait_for_property_change (struct prop_location *location)$/;"	f	file:	signature:(struct prop_location *location)
wait_for_property_change_unwind	xselect.c	/^wait_for_property_change_unwind (void *loc)$/;"	f	file:	signature:(void *loc)
wait_for_socket_fds	process.c	/^static void wait_for_socket_fds (Lisp_Object, char const *);$/;"	p	file:	signature:(Lisp_Object, char const *)
wait_for_socket_fds	process.c	/^wait_for_socket_fds (Lisp_Object process, char const *name)$/;"	f	file:	signature:(Lisp_Object process, char const *name)
wait_for_termination	sysdep.c	/^wait_for_termination (pid_t child, int *status, bool interruptible)$/;"	f	signature:(pid_t child, int *status, bool interruptible)
wait_for_termination	syswait.h	/^extern bool wait_for_termination (pid_t, int *, bool);$/;"	p	signature:(pid_t, int *, bool)
wait_for_tls_negotiation	process.c	/^wait_for_tls_negotiation (Lisp_Object process)$/;"	f	file:	signature:(Lisp_Object process)
wait_for_wm	xterm.h	/^  bool_bf wait_for_wm : 1;$/;"	m	struct:x_output	access:public
wait_object	xselect.c	/^  struct prop_location *wait_object;$/;"	m	struct:selection_data	typeref:struct:selection_data::prop_location	file:	access:public
WAIT_READING_MAX	lisp.h	4154;"	d
WAIT_READING_MAX	lisp.h	4156;"	d
wait_reading_process_output	lisp.h	/^extern int wait_reading_process_output (intmax_t, int, int, bool, Lisp_Object,$/;"	p	signature:(intmax_t, int, int, bool, Lisp_Object, struct Lisp_Process *, int)
wait_reading_process_output	process.c	/^wait_reading_process_output (intmax_t time_limit, int nsecs, int read_kbd,$/;"	f	signature:(intmax_t time_limit, int nsecs, int read_kbd, bool do_display, Lisp_Object wait_for_cell, struct Lisp_Process *wait_proc, int just_wait_proc)
wait_reading_process_output_1	process.c	/^wait_reading_process_output_1 (void)$/;"	f	file:	signature:(void)
wait_reading_process_output_unwind	process.c	/^wait_reading_process_output_unwind (int data)$/;"	f	file:	signature:(int data)
wait_while_connecting	process.c	/^wait_while_connecting (Lisp_Object process)$/;"	f	file:	signature:(Lisp_Object process)
wand	image.c	/^  MagickWand *wand;$/;"	m	struct:animation_cache	file:	access:public
wants_debugger	eval.c	/^wants_debugger (Lisp_Object list, Lisp_Object conditions)$/;"	f	file:	signature:(Lisp_Object list, Lisp_Object conditions)
wants_modeline	frame.h	/^  bool_bf wants_modeline : 1;$/;"	m	struct:frame	access:public
want_fullscreen	frame.h	/^  ENUM_BF (fullscreen_type) want_fullscreen : 4;$/;"	m	struct:frame	access:public
warned_75	vm-limit.c	/^enum warnlevel { not_warned, warned_75, warned_85, warned_95 };$/;"	e	enum:warnlevel	file:
warned_85	vm-limit.c	/^enum warnlevel { not_warned, warned_75, warned_85, warned_95 };$/;"	e	enum:warnlevel	file:
warned_95	vm-limit.c	/^enum warnlevel { not_warned, warned_75, warned_85, warned_95 };$/;"	e	enum:warnlevel	file:
warnlevel	vm-limit.c	/^enum warnlevel { not_warned, warned_75, warned_85, warned_95 };$/;"	g	file:
warnlevel	vm-limit.c	/^static enum warnlevel warnlevel;$/;"	v	typeref:enum:warnlevel	file:
WARN_CFLAGS	Makefile	/^WARN_CFLAGS =  -fno-common -W -Wabi -Waddress -Waggressive-loop-optimizations -Wall -Wattributes -Wbool-compare -Wbuiltin-macro-redefined -Wcast-align -Wchar-subscripts -Wchkp -Wclobbered -Wcomment -Wcomments -Wcoverage-mismatch -Wcpp -Wdate-time -Wdeprecated -Wdeprecated-declarations -Wdesignated-init -Wdisabled-optimization -Wdiscarded-array-qualifiers -Wdiscarded-qualifiers -Wdiv-by-zero -Wdouble-promotion -Wduplicated-cond -Wempty-body -Wendif-labels -Wenum-compare -Wextra -Wformat-contains-nul -Wformat-extra-args -Wformat-security -Wformat-signedness -Wformat-y2k -Wformat-zero-length -Wframe-address -Wfree-nonheap-object -Whsa -Wignored-attributes -Wignored-qualifiers -Wimplicit -Wimplicit-function-declaration -Wimplicit-int -Wincompatible-pointer-types -Winit-self -Wint-conversion -Wint-to-pointer-cast -Winvalid-memory-model -Winvalid-pch -Wjump-misses-init -Wlogical-not-parentheses -Wlogical-op -Wmain -Wmaybe-uninitialized -Wmemset-transposed-args -Wmisleading-indentation -Wmissing-braces -Wmissing-declarations -Wmissing-include-dirs -Wmissing-parameter-type -Wmissing-prototypes -Wmultichar -Wnarrowing -Wnested-externs -Wnonnull -Wnonnull-compare -Wnull-dereference -Wodr -Wold-style-declaration -Wold-style-definition -Wopenmp-simd -Woverflow -Wpacked -Wpacked-bitfield-compat -Wparentheses -Wpointer-arith -Wpointer-sign -Wpointer-to-int-cast -Wpragmas -Wpsabi -Wreturn-local-addr -Wreturn-type -Wscalar-storage-order -Wsequence-point -Wshift-count-negative -Wshift-count-overflow -Wshift-negative-value -Wsizeof-array-argument -Wsizeof-pointer-memaccess -Wstrict-aliasing -Wstrict-prototypes -Wsuggest-attribute=format -Wsuggest-attribute=noreturn -Wsuggest-final-methods -Wsuggest-final-types -Wswitch-bool -Wtautological-compare -Wtrampolines -Wtrigraphs -Wuninitialized -Wunknown-pragmas -Wunused -Wunused-but-set-parameter -Wunused-but-set-variable -Wunused-function -Wunused-label -Wunused-local-typedefs -Wunused-macros -Wunused-result -Wunused-value -Wunused-variable -Wvarargs -Wvariadic-macros -Wvector-operation-performance -Wvolatile-register-var -Wwrite-strings -Warray-bounds=2 -Wnormalized=nfc -Wshift-overflow=2 -Wredundant-decls -Wno-missing-field-initializers -Wno-override-init -Wno-sign-compare -Wno-type-limits -Wno-unused-parameter -Wno-format-nonliteral$/;"	m
warn_function	vm-limit.c	/^static void (*warn_function) (const char *);$/;"	v	file:
watchee	w32notify.c	/^  char *watchee;	\/* the file we are interested in, UTF-8 encoded *\/$/;"	m	struct:notification	file:	access:public
watch_completion	w32notify.c	/^VOID CALLBACK watch_completion (DWORD, DWORD, OVERLAPPED *);$/;"	p	file:	signature:(DWORD, DWORD, OVERLAPPED *)
watch_completion	w32notify.c	/^watch_completion (DWORD status, DWORD bytes_ret, OVERLAPPED *io_info)$/;"	f	signature:(DWORD status, DWORD bytes_ret, OVERLAPPED *io_info)
watch_end	w32notify.c	/^VOID CALLBACK watch_end (ULONG_PTR);$/;"	p	file:
watch_end	w32notify.c	/^watch_end (ULONG_PTR arg)$/;"	f	signature:(ULONG_PTR arg)
watch_list	gfilenotify.c	/^static Lisp_Object watch_list;$/;"	v	file:
watch_list	inotify.c	/^static Lisp_Object watch_list;$/;"	v	file:
watch_list	kqueue.c	/^static Lisp_Object watch_list;$/;"	v	file:
watch_list	w32notify.c	/^static Lisp_Object watch_list;$/;"	v	file:
watch_worker	w32notify.c	/^watch_worker (LPVOID arg)$/;"	f	file:	signature:(LPVOID arg)
wav_header	sound.c	/^struct wav_header$/;"	s	file:
wav_header::bytes_per_second	sound.c	/^  u_int32_t bytes_per_second;$/;"	m	struct:wav_header	file:	access:public
wav_header::channels	sound.c	/^  u_int16_t channels;$/;"	m	struct:wav_header	file:	access:public
wav_header::chunk_data	sound.c	/^  u_int32_t chunk_data;$/;"	m	struct:wav_header	file:	access:public
wav_header::chunk_format	sound.c	/^  u_int32_t chunk_format;$/;"	m	struct:wav_header	file:	access:public
wav_header::chunk_length	sound.c	/^  u_int32_t chunk_length;$/;"	m	struct:wav_header	file:	access:public
wav_header::chunk_type	sound.c	/^  u_int32_t chunk_type;$/;"	m	struct:wav_header	file:	access:public
wav_header::data_length	sound.c	/^  u_int32_t data_length;$/;"	m	struct:wav_header	file:	access:public
wav_header::format	sound.c	/^  u_int16_t format;$/;"	m	struct:wav_header	file:	access:public
wav_header::length	sound.c	/^  u_int32_t length;$/;"	m	struct:wav_header	file:	access:public
wav_header::magic	sound.c	/^  u_int32_t magic;$/;"	m	struct:wav_header	file:	access:public
wav_header::precision	sound.c	/^  u_int16_t precision;$/;"	m	struct:wav_header	file:	access:public
wav_header::sample_rate	sound.c	/^  u_int32_t sample_rate;$/;"	m	struct:wav_header	file:	access:public
wav_header::sample_size	sound.c	/^  u_int16_t sample_size;$/;"	m	struct:wav_header	file:	access:public
wav_init	sound.c	/^static bool wav_init (struct sound *);$/;"	p	file:	signature:(struct sound *)
wav_init	sound.c	/^wav_init (struct sound *s)$/;"	f	file:	signature:(struct sound *s)
wav_play	sound.c	/^static void wav_play (struct sound *, struct sound_device *);$/;"	p	file:	signature:(struct sound *, struct sound_device *)
wav_play	sound.c	/^wav_play (struct sound *s, struct sound_device *sd)$/;"	f	file:	signature:(struct sound *s, struct sound_device *sd)
wcLow	w32term.c	/^  WCHAR wcLow;$/;"	m	struct:tagWCRANGE	file:	access:public
Wcm	termchar.h	/^  struct cm *Wcm;$/;"	m	struct:tty_display_info	typeref:struct:tty_display_info::cm	access:public
Wcm_clear	cm.c	/^Wcm_clear (struct tty_display_info *tty)$/;"	f	signature:(struct tty_display_info *tty)
Wcm_clear	cm.h	/^extern void Wcm_clear (struct tty_display_info *);$/;"	p	signature:(struct tty_display_info *)
Wcm_clear	w32console.c	/^void Wcm_clear (struct tty_display_info *);$/;"	p	file:	signature:(struct tty_display_info *)
Wcm_clear	w32console.c	/^Wcm_clear (struct tty_display_info *tty)$/;"	f	signature:(struct tty_display_info *tty)
Wcm_init	cm.c	/^Wcm_init (struct tty_display_info *tty)$/;"	f	signature:(struct tty_display_info *tty)
Wcm_init	cm.h	/^extern int Wcm_init (struct tty_display_info *);$/;"	p	signature:(struct tty_display_info *)
WCONTINUED	syswait.h	33;"	d
WCOREDUMP	syswait.h	37;"	d
WCRANGE	w32term.c	/^} WCRANGE;$/;"	t	typeref:struct:tagWCRANGE	file:
wcscoll_l	sysdep.c	/^wcscoll_l (wchar_t const *a, wchar_t const *b, locale_t loc)$/;"	f	file:	signature:(wchar_t const *a, wchar_t const *b, locale_t loc)
wcscoll_l	sysdep.c	3805;"	d	file:
wcscoll_l	sysdep.c	3810;"	d	file:
WCSDATA	coding.h	699;"	d
wctype	regex.c	102;"	d	file:
wd	dispextern.h	/^  int wd, h, dh;$/;"	m	struct:draw_fringe_bitmap_params	access:public
WEAK	bidi.c	/^  WEAK,$/;"	e	enum:__anon92	file:
weak	lisp.h	/^  Lisp_Object weak;$/;"	m	struct:Lisp_Hash_Table	access:public
WEAK_ALIAS	regex.c	/^WEAK_ALIAS (__regcomp, regcomp)$/;"	f
WEAK_ALIAS	regex.c	/^WEAK_ALIAS (__regerror, regerror)$/;"	f
WEAK_ALIAS	regex.c	/^WEAK_ALIAS (__regexec, regexec)$/;"	f
WEAK_ALIAS	regex.c	/^WEAK_ALIAS (__re_match, re_match)$/;"	f
WEAK_ALIAS	regex.c	/^WEAK_ALIAS (__re_search, re_search)$/;"	f
WEAK_ALIAS	regex.c	/^WEAK_ALIAS (__re_set_registers, re_set_registers)$/;"	f
WEAK_ALIAS	regex.c	104;"	d	file:
WEAK_ALIAS	regex.c	111;"	d	file:
WEAK_AN	dispextern.h	/^  WEAK_AN,	\/* arabic number *\/$/;"	e	enum:__anon114
WEAK_BN	dispextern.h	/^  WEAK_BN,	\/* boundary neutral *\/$/;"	e	enum:__anon114
WEAK_CS	dispextern.h	/^  WEAK_CS,	\/* common separator *\/$/;"	e	enum:__anon114
WEAK_EN	dispextern.h	/^  WEAK_EN,	\/* european number *\/$/;"	e	enum:__anon114
WEAK_ES	dispextern.h	/^  WEAK_ES,	\/* european number separator *\/$/;"	e	enum:__anon114
WEAK_ET	dispextern.h	/^  WEAK_ET,	\/* european number terminator *\/$/;"	e	enum:__anon114
weak_hash_tables	fns.c	/^static struct Lisp_Hash_Table *weak_hash_tables;$/;"	v	typeref:struct:Lisp_Hash_Table	file:
WEAK_NSM	dispextern.h	/^  WEAK_NSM,	\/* non-spacing mark *\/$/;"	e	enum:__anon114
WEBKIT_CFLAGS	Makefile	/^WEBKIT_CFLAGS= $/;"	m
webkit_decide_policy_cb	xwidget.c	/^webkit_decide_policy_cb (WebKitWebView *,$/;"	p	file:	signature:(WebKitWebView *, WebKitPolicyDecision *, WebKitPolicyDecisionType, gpointer)
webkit_decide_policy_cb	xwidget.c	/^webkit_decide_policy_cb (WebKitWebView *webView,$/;"	f	file:	signature:(WebKitWebView *webView, WebKitPolicyDecision *decision, WebKitPolicyDecisionType type, gpointer user_data)
webkit_download_cb	xwidget.c	/^static gboolean webkit_download_cb (WebKitWebContext *, WebKitDownload *, gpointer);$/;"	p	file:	signature:(WebKitWebContext *, WebKitDownload *, gpointer)
webkit_download_cb	xwidget.c	/^webkit_download_cb (WebKitWebContext *webkitwebcontext,$/;"	f	signature:(WebKitWebContext *webkitwebcontext, WebKitDownload *arg1, gpointer data)
WEBKIT_FN_INIT	xwidget.c	666;"	d	file:
webkit_javascript_finished_cb	xwidget.c	/^static void webkit_javascript_finished_cb (GObject *,$/;"	p	file:	signature:(GObject *, GAsyncResult *, gpointer)
webkit_javascript_finished_cb	xwidget.c	/^webkit_javascript_finished_cb (GObject      *webview,$/;"	f	file:	signature:(GObject *webview, GAsyncResult *result, gpointer lisp_callback)
webkit_js_to_lisp	xwidget.c	/^webkit_js_to_lisp (JSContextRef context, JSValueRef value)$/;"	f	file:	signature:(JSContextRef context, JSValueRef value)
WEBKIT_LIBS	Makefile	/^WEBKIT_LIBS= $/;"	m
webkit_view_load_changed_cb	xwidget.c	/^static void webkit_view_load_changed_cb (WebKitWebView *,$/;"	p	file:	signature:(WebKitWebView *, WebKitLoadEvent, gpointer)
webkit_view_load_changed_cb	xwidget.c	/^webkit_view_load_changed_cb (WebKitWebView *webkitwebview,$/;"	f	signature:(WebKitWebView *webkitwebview, WebKitLoadEvent load_event, gpointer data)
weight_table	font.c	/^static const struct table_entry weight_table[] =$/;"	v	typeref:struct:table_entry	file:
WERROR_CFLAGS	Makefile	/^WERROR_CFLAGS = $/;"	m
WestGravity	nsgui.h	168;"	d
WestGravity	w32gui.h	86;"	d
WEXITSTATUS	syswait.h	40;"	d
wfds	thread.c	/^  fd_set *wfds;$/;"	m	struct:select_args	file:	access:public
what	dispextern.h	/^  enum display_element_type what;$/;"	m	struct:it	typeref:enum:it::display_element_type	access:public
WHEEL_EVENT	termhooks.h	/^  WHEEL_EVENT,			\/* A wheel event is generated by a$/;"	e	enum:event_kind
wheel_syms	keyboard.c	/^static Lisp_Object wheel_syms;$/;"	v	file:
when_entered_debugger	eval.c	/^static EMACS_INT when_entered_debugger;$/;"	v	file:
where	lisp.h	/^      Lisp_Object symbol, old_value, where;$/;"	m	struct:specbinding::__anon33	access:public
where	lisp.h	/^    Lisp_Object where;$/;"	m	struct:Lisp_Buffer_Local_Value	access:public
where_is_cache	keymap.c	/^static Lisp_Object where_is_cache;$/;"	v	file:
where_is_cache_keymaps	keymap.c	/^static Lisp_Object where_is_cache_keymaps;$/;"	v	file:
where_is_internal	keymap.c	/^where_is_internal (Lisp_Object definition, Lisp_Object keymaps,$/;"	f	file:	signature:(Lisp_Object definition, Lisp_Object keymaps, bool noindirect, bool nomenus)
where_is_internal_1	keymap.c	/^static void where_is_internal_1 (Lisp_Object key, Lisp_Object binding,$/;"	p	file:	signature:(Lisp_Object key, Lisp_Object binding, Lisp_Object args, void *data)
where_is_internal_1	keymap.c	/^where_is_internal_1 (Lisp_Object key, Lisp_Object binding, Lisp_Object args, void *data)$/;"	f	file:	signature:(Lisp_Object key, Lisp_Object binding, Lisp_Object args, void *data)
where_is_internal_data	keymap.c	/^struct where_is_internal_data {$/;"	s	file:
where_is_internal_data::definition	keymap.c	/^  Lisp_Object definition, this, last;$/;"	m	struct:where_is_internal_data	file:	access:public
where_is_internal_data::last	keymap.c	/^  Lisp_Object definition, this, last;$/;"	m	struct:where_is_internal_data	file:	access:public
where_is_internal_data::last_is_meta	keymap.c	/^  bool last_is_meta, noindirect;$/;"	m	struct:where_is_internal_data	file:	access:public
where_is_internal_data::noindirect	keymap.c	/^  bool last_is_meta, noindirect;$/;"	m	struct:where_is_internal_data	file:	access:public
where_is_internal_data::sequences	keymap.c	/^  Lisp_Object sequences;$/;"	m	struct:where_is_internal_data	file:	access:public
where_is_internal_data::this	keymap.c	/^  Lisp_Object definition, this, last;$/;"	m	struct:where_is_internal_data	file:	access:public
where_is_preferred_modifier	keymap.c	/^static int where_is_preferred_modifier;$/;"	v	file:
which	dispextern.h	/^  int which;  \/* enum fringe_bitmap_type *\/$/;"	m	struct:draw_fringe_bitmap_params	access:public
which_symbols	alloc.c	/^extern Lisp_Object which_symbols (Lisp_Object, EMACS_INT) EXTERNALLY_VISIBLE;$/;"	p	file:
which_symbols	alloc.c	/^which_symbols (Lisp_Object obj, EMACS_INT find_max)$/;"	f	signature:(Lisp_Object obj, EMACS_INT find_max)
WHITE_PIX_DEFAULT	nsterm.h	1112;"	d
WHITE_PIX_DEFAULT	w32term.h	43;"	d
WHITE_PIX_DEFAULT	xterm.h	106;"	d
white_relief	w32term.h	/^  black_relief, white_relief;$/;"	m	struct:w32_output	typeref:struct:w32_output::relief	access:public
white_relief	xterm.h	/^  black_relief, white_relief;$/;"	m	struct:x_output	typeref:struct:x_output::relief	access:public
whole	xterm.h	/^  int whole;$/;"	m	struct:scroll_bar	access:public
WideCharToMultiByte_Proc	w32.h	/^typedef int (WINAPI *WideCharToMultiByte_Proc)(UINT,DWORD,LPCWSTR,int,LPSTR,int,LPCSTR,LPBOOL);$/;"	t
widen_foreground_group	sysdep.c	/^widen_foreground_group (int fd)$/;"	f	file:	signature:(int fd)
WIDE_CHAR_SUPPORT	regex.c	63;"	d	file:
WIDE_CHAR_SUPPORT	regex.c	65;"	d	file:
widget	fns.c	/^  (Lisp_Object widget, Lisp_Object property)$/;"	v
widget	fns.c	/^  (Lisp_Object widget, Lisp_Object property, Lisp_Object value)$/;"	v
widget	xterm.h	/^  GtkWidget *widget;$/;"	m	struct:x_output	access:public
widget	xterm.h	/^  Widget widget;$/;"	m	struct:x_output	access:public
widget	xwidget.h	/^  GtkWidget *widget;$/;"	m	struct:xwidget_view	access:public
widgets	gtkutil.c	/^  GtkWidget **widgets;$/;"	m	struct:__anon124	file:	access:public
widgetwindow	xwidget.h	/^  GtkWidget *widgetwindow;$/;"	m	struct:xwidget_view	access:public
widgetwindow_osr	xwidget.h	/^  GtkWidget *widgetwindow_osr;$/;"	m	struct:xwidget	access:public
widget_id_tick	xmenu.c	/^LWLIB_ID widget_id_tick;$/;"	v
WIDGET_OBJ	Makefile	/^WIDGET_OBJ=$/;"	m
widget_osr	xwidget.h	/^  GtkWidget *widget_osr;$/;"	m	struct:xwidget	access:public
widget_store_internal_border	widget.c	/^widget_store_internal_border (Widget widget)$/;"	f	signature:(Widget widget)
widget_store_internal_border	widget.h	/^void widget_store_internal_border (Widget widget);$/;"	p	signature:(Widget widget)
widget_update_wm_size_hints	widget.c	/^widget_update_wm_size_hints (Widget widget)$/;"	f	signature:(Widget widget)
widget_update_wm_size_hints	widget.h	/^void widget_update_wm_size_hints (Widget widget);$/;"	p	signature:(Widget widget)
width	composite.h	/^  int width;$/;"	m	struct:composition	access:public
width	dispextern.h	/^  int width, height;$/;"	m	struct:image	access:public
width	dispextern.h	/^  int width;$/;"	m	struct:composition_it	access:public
width	dispextern.h	/^  int width;$/;"	m	struct:glyph_string	access:public
width	dispextern.h	/^  Lisp_Object width;$/;"	m	struct:it_slice	access:public
width	dispextern.h	/^  unsigned width : 16;$/;"	m	struct:glyph_slice	access:public
width	dispnew.c	/^  int width;$/;"	m	struct:dim	file:	access:public
width	font.h	/^  int width;$/;"	m	struct:font_bitmap	access:public
width	font.h	/^  short lbearing, rbearing, width, ascent, descent;$/;"	m	struct:font_metrics	access:public
width	frame.c	/^  (Lisp_Object frame, Lisp_Object width, Lisp_Object height, Lisp_Object pixelwise)$/;"	v
width	frame.c	/^  (Lisp_Object frame, Lisp_Object width, Lisp_Object pretend, Lisp_Object pixelwise)$/;"	v
width	fringe.c	/^  (Lisp_Object bitmap, Lisp_Object bits, Lisp_Object height, Lisp_Object width, Lisp_Object align)$/;"	v
width	fringe.c	/^  unsigned width : 8;$/;"	m	struct:fringe_bitmap	file:	access:public
width	indent.c	/^   Lisp_Object width, Lisp_Object offsets, Lisp_Object window)$/;"	v
width	nsgui.h	/^      unsigned width, height;$/;"	m	struct:__anon46	access:public
width	nsgui.h	/^  int width;$/;"	m	struct:_XCharStruct	access:public
width	nsgui.h	/^typedef struct _NSSize  { CGFloat width, height; } NSSize;$/;"	m	struct:_NSSize	access:public
width	nsterm.h	/^  float width;  \/* Maximum advance for the font.  *\/$/;"	m	struct:nsfont_info	access:public
width	nsterm.h	/^  int height, width, depth;$/;"	m	struct:ns_bitmap_record	access:public
width	term.c	/^  int width;$/;"	m	struct:tty_menu_struct	file:	access:public
width	w32font.h	/^  short lbearing, rbearing, width, ascent, descent;$/;"	m	struct:w32_metric_cache	access:public
width	w32gui.h	/^    unsigned width, height;$/;"	m	struct:__anon86	access:public
width	w32term.h	/^  int height, width, depth;$/;"	m	struct:w32_bitmap_record	access:public
width	w32term.h	/^  int top, left, width, height;$/;"	m	struct:scroll_bar	access:public
width	window.c	/^  (Lisp_Object window, Lisp_Object width, Lisp_Object vertical_type,$/;"	v
width	xterm.h	/^  int height, width, depth;$/;"	m	struct:x_bitmap_record	access:public
width	xterm.h	/^  int top, left, width, height;$/;"	m	struct:scroll_bar	access:public
width	xwidget.c	/^   Lisp_Object title, Lisp_Object width, Lisp_Object height,$/;"	v
width	xwidget.h	/^  int width;$/;"	m	struct:xwidget	access:public
WidthValue	nsgui.h	179;"	d
WidthValue	w32gui.h	97;"	d
width_run_cache	buffer.h	/^  struct region_cache *width_run_cache;$/;"	m	struct:buffer	typeref:struct:buffer::region_cache	access:public
width_run_cache_on_off	indent.c	/^width_run_cache_on_off (void)$/;"	f	file:	signature:(void)
width_table	font.c	/^static const struct table_entry width_table[] =$/;"	v	typeref:struct:table_entry	file:
width_table_	buffer.h	/^  Lisp_Object width_table_;$/;"	m	struct:buffer	access:public
WIFEXITED	syswait.h	43;"	d
WIFSIGNALED	syswait.h	49;"	d
WIFSTOPPED	syswait.h	46;"	d
window	dispextern.h	/^  Lisp_Object window;$/;"	m	struct:it	access:public
window	dispnew.c	/^  (Lisp_Object window, Lisp_Object show)$/;"	v
window	font.c	/^  (Lisp_Object position, Lisp_Object window, Lisp_Object string)$/;"	v
window	indent.c	/^  (Lisp_Object lines, Lisp_Object window, Lisp_Object cur_col)$/;"	v
Window	nsgui.h	/^typedef int Window;$/;"	t
Window	w32gui.h	/^typedef HWND Window;$/;"	t
window	w32term.h	/^  Lisp_Object window;$/;"	m	struct:scroll_bar	access:public
window	window.c	/^     (Lisp_Object window, Lisp_Object next_buffers)$/;"	v
window	window.c	/^     (Lisp_Object window, Lisp_Object prev_buffers)$/;"	v
window	window.c	/^     (Lisp_Object window, Lisp_Object root)$/;"	v
window	window.c	/^     (Lisp_Object window, Lisp_Object size)$/;"	v
window	window.c	/^     (Lisp_Object window, Lisp_Object size, Lisp_Object add)$/;"	v
window	window.c	/^  (Lisp_Object frame, Lisp_Object window, Lisp_Object norecord)$/;"	v
window	window.c	/^  (Lisp_Object pos, Lisp_Object window, Lisp_Object partially)$/;"	v
window	window.c	/^  (Lisp_Object window, Lisp_Object first, Lisp_Object last, Lisp_Object body, Lisp_Object inverse, Lisp_Object left)$/;"	v
window	window.c	/^  (Lisp_Object window, Lisp_Object flag)$/;"	v
window	window.c	/^  (Lisp_Object window, Lisp_Object horizontal)$/;"	v
window	window.c	/^  (Lisp_Object window, Lisp_Object left_width, Lisp_Object right_width)$/;"	v
window	window.c	/^  (Lisp_Object window, Lisp_Object left_width,$/;"	v
window	window.c	/^  (Lisp_Object window, Lisp_Object limit)$/;"	v
window	window.c	/^  (Lisp_Object window, Lisp_Object minibuf, Lisp_Object all_frames)$/;"	v
window	window.c	/^  (Lisp_Object window, Lisp_Object ncol)$/;"	v
window	window.c	/^  (Lisp_Object window, Lisp_Object norecord)$/;"	v
window	window.c	/^  (Lisp_Object window, Lisp_Object parameter)$/;"	v
window	window.c	/^  (Lisp_Object window, Lisp_Object parameter, Lisp_Object value)$/;"	v
window	window.c	/^  (Lisp_Object window, Lisp_Object pixels_p)$/;"	v
window	window.c	/^  (Lisp_Object window, Lisp_Object pixelwise)$/;"	v
window	window.c	/^  (Lisp_Object window, Lisp_Object pos)$/;"	v
window	window.c	/^  (Lisp_Object window, Lisp_Object pos, Lisp_Object noforce)$/;"	v
window	window.c	/^  (Lisp_Object window, Lisp_Object round)$/;"	v
window	window.c	/^  (Lisp_Object window, Lisp_Object size, Lisp_Object add)$/;"	v
window	window.c	/^  (Lisp_Object window, Lisp_Object update)$/;"	v
window	window.c	/^  (Lisp_Object window, Lisp_Object vscroll, Lisp_Object pixels_p)$/;"	v
window	window.c	/^  (Lisp_Object window, Lisp_Object width, Lisp_Object vertical_type,$/;"	v
window	window.c	/^  (register Lisp_Object window, Lisp_Object buffer_or_name, Lisp_Object keep_margins)$/;"	v
window	window.c	/^  (register Lisp_Object window, Lisp_Object table)$/;"	v
window	window.c	/^  (register Lisp_Object window, Lisp_Object value)$/;"	v
window	window.c	/^  Lisp_Object *window;$/;"	m	struct:check_window_data	file:	access:public
window	window.c	/^  Lisp_Object window, buffer, start, pointm, old_pointm;$/;"	m	struct:saved_window	file:	access:public
window	window.h	/^struct window$/;"	s
window	xdisp.c	/^      Lisp_Object window, Lisp_Object buffer)$/;"	v
window	xdisp.c	/^  (Lisp_Object window, Lisp_Object from, Lisp_Object to, Lisp_Object x_limit,$/;"	v
window	xselect.c	/^  Window window;$/;"	m	struct:prop_location	file:	access:public
window	xterm.h	/^  Lisp_Object window;$/;"	m	struct:scroll_bar	access:public
window::base_line_number	window.h	/^    ptrdiff_t base_line_number;$/;"	m	struct:window	access:public
window::base_line_pos	window.h	/^    ptrdiff_t base_line_pos;$/;"	m	struct:window	access:public
window::column_number_displayed	window.h	/^    ptrdiff_t column_number_displayed;$/;"	m	struct:window	access:public
window::combination_limit	window.h	/^    Lisp_Object combination_limit;$/;"	m	struct:window	access:public
window::contents	window.h	/^    Lisp_Object contents;$/;"	m	struct:window	access:public
window::current_matrix	window.h	/^    struct glyph_matrix *current_matrix;$/;"	m	struct:window	typeref:struct:window::glyph_matrix	access:public
window::cursor	window.h	/^    struct cursor_pos cursor;$/;"	m	struct:window	typeref:struct:window::cursor_pos	access:public
window::cursor_off_p	window.h	/^    bool_bf cursor_off_p : 1;$/;"	m	struct:window	access:public
window::dedicated	window.h	/^    Lisp_Object dedicated;$/;"	m	struct:window	access:public
window::desired_matrix	window.h	/^    struct glyph_matrix *desired_matrix;$/;"	m	struct:window	typeref:struct:window::glyph_matrix	access:public
window::display_table	window.h	/^    Lisp_Object display_table;$/;"	m	struct:window	access:public
window::force_start	window.h	/^    bool_bf force_start : 1;$/;"	m	struct:window	access:public
window::frame	window.h	/^    Lisp_Object frame;$/;"	m	struct:window	access:public
window::fringes_outside_margins	window.h	/^    bool_bf fringes_outside_margins : 1;$/;"	m	struct:window	access:public
window::header	window.h	/^    struct vectorlike_header header;$/;"	m	struct:window	typeref:struct:window::vectorlike_header	access:public
window::header_line_height	window.h	/^    int header_line_height;$/;"	m	struct:window	access:public
window::horizontal	window.h	/^    bool_bf horizontal : 1;$/;"	m	struct:window	access:public
window::horizontal_scroll_bar	window.h	/^    Lisp_Object horizontal_scroll_bar;$/;"	m	struct:window	access:public
window::horizontal_scroll_bar_type	window.h	/^    Lisp_Object horizontal_scroll_bar_type;$/;"	m	struct:window	access:public
window::hscroll	window.h	/^    ptrdiff_t hscroll;$/;"	m	struct:window	access:public
window::hscroll_whole	window.h	/^    ptrdiff_t hscroll_whole;$/;"	m	struct:window	access:public
window::last_cursor_off_p	window.h	/^    bool_bf last_cursor_off_p : 1;$/;"	m	struct:window	access:public
window::last_cursor_vpos	window.h	/^    int last_cursor_vpos;$/;"	m	struct:window	access:public
window::last_had_star	window.h	/^    bool_bf last_had_star : 1;$/;"	m	struct:window	access:public
window::last_modified	window.h	/^    EMACS_INT last_modified;$/;"	m	struct:window	access:public
window::last_overlay_modified	window.h	/^    EMACS_INT last_overlay_modified;$/;"	m	struct:window	access:public
window::last_point	window.h	/^    ptrdiff_t last_point;$/;"	m	struct:window	access:public
window::left_col	window.h	/^    int left_col;$/;"	m	struct:window	access:public
window::left_fringe_width	window.h	/^    int left_fringe_width;$/;"	m	struct:window	access:public
window::left_margin_cols	window.h	/^    int left_margin_cols;$/;"	m	struct:window	access:public
window::mini	window.h	/^    bool_bf mini : 1;$/;"	m	struct:window	access:public
window::min_hscroll	window.h	/^    ptrdiff_t min_hscroll;$/;"	m	struct:window	access:public
window::mode_line_height	window.h	/^    int mode_line_height;$/;"	m	struct:window	access:public
window::must_be_updated_p	window.h	/^    bool_bf must_be_updated_p : 1;$/;"	m	struct:window	access:public
window::ncols_scale_factor	window.h	/^    int nrows_scale_factor, ncols_scale_factor;$/;"	m	struct:window	access:public
window::new_normal	window.h	/^    Lisp_Object new_normal;$/;"	m	struct:window	access:public
window::new_pixel	window.h	/^    Lisp_Object new_pixel;$/;"	m	struct:window	access:public
window::new_total	window.h	/^    Lisp_Object new_total;$/;"	m	struct:window	access:public
window::next	window.h	/^    Lisp_Object next;$/;"	m	struct:window	access:public
window::next_buffers	window.h	/^    Lisp_Object next_buffers;$/;"	m	struct:window	access:public
window::normal_cols	window.h	/^    Lisp_Object normal_cols;$/;"	m	struct:window	access:public
window::normal_lines	window.h	/^    Lisp_Object normal_lines;$/;"	m	struct:window	access:public
window::nrows_scale_factor	window.h	/^    int nrows_scale_factor, ncols_scale_factor;$/;"	m	struct:window	access:public
window::old_pointm	window.h	/^    Lisp_Object old_pointm;$/;"	m	struct:window	access:public
window::optional_new_start	window.h	/^    bool_bf optional_new_start : 1;$/;"	m	struct:window	access:public
window::output_cursor	window.h	/^    struct cursor_pos output_cursor;$/;"	m	struct:window	typeref:struct:window::cursor_pos	access:public
window::parent	window.h	/^    Lisp_Object parent;$/;"	m	struct:window	access:public
window::phys_cursor	window.h	/^    struct cursor_pos phys_cursor;$/;"	m	struct:window	typeref:struct:window::cursor_pos	access:public
window::phys_cursor_ascent	window.h	/^    int phys_cursor_ascent, phys_cursor_height;$/;"	m	struct:window	access:public
window::phys_cursor_height	window.h	/^    int phys_cursor_ascent, phys_cursor_height;$/;"	m	struct:window	access:public
window::phys_cursor_on_p	window.h	/^    bool_bf phys_cursor_on_p : 1;$/;"	m	struct:window	access:public
window::phys_cursor_type	window.h	/^    enum text_cursor_kinds phys_cursor_type;$/;"	m	struct:window	typeref:enum:window::text_cursor_kinds	access:public
window::phys_cursor_width	window.h	/^    int phys_cursor_width;$/;"	m	struct:window	access:public
window::pixel_height	window.h	/^    int pixel_height;$/;"	m	struct:window	access:public
window::pixel_height_before_size_change	window.h	/^    int pixel_height_before_size_change;$/;"	m	struct:window	access:public
window::pixel_left	window.h	/^    int pixel_left;$/;"	m	struct:window	access:public
window::pixel_top	window.h	/^    int pixel_top;$/;"	m	struct:window	access:public
window::pixel_width	window.h	/^    int pixel_width;$/;"	m	struct:window	access:public
window::pixel_width_before_size_change	window.h	/^    int pixel_width_before_size_change;$/;"	m	struct:window	access:public
window::pointm	window.h	/^    Lisp_Object pointm;$/;"	m	struct:window	access:public
window::prev	window.h	/^    Lisp_Object prev;$/;"	m	struct:window	access:public
window::prev_buffers	window.h	/^    Lisp_Object prev_buffers;$/;"	m	struct:window	access:public
window::pseudo_window_p	window.h	/^    bool_bf pseudo_window_p : 1;$/;"	m	struct:window	access:public
window::redisplay	window.h	/^    bool_bf redisplay : 1;$/;"	m	struct:window	access:public
window::redisplay_end_trigger	window.h	/^    Lisp_Object redisplay_end_trigger;$/;"	m	struct:window	access:public
window::right_fringe_width	window.h	/^    int right_fringe_width;$/;"	m	struct:window	access:public
window::right_margin_cols	window.h	/^    int right_margin_cols;$/;"	m	struct:window	access:public
window::scroll_bar_height	window.h	/^    int scroll_bar_height;$/;"	m	struct:window	access:public
window::scroll_bar_width	window.h	/^    int scroll_bar_width;$/;"	m	struct:window	access:public
window::sequence_number	window.h	/^    EMACS_INT sequence_number;$/;"	m	struct:window	access:public
window::start	window.h	/^    Lisp_Object start;$/;"	m	struct:window	access:public
window::start_at_line_beg	window.h	/^    bool_bf start_at_line_beg : 1;$/;"	m	struct:window	access:public
window::suspend_auto_hscroll	window.h	/^    bool_bf suspend_auto_hscroll : 1;$/;"	m	struct:window	access:public
window::temslot	window.h	/^    Lisp_Object temslot;$/;"	m	struct:window	access:public
window::top_line	window.h	/^    int top_line;$/;"	m	struct:window	access:public
window::total_cols	window.h	/^    int total_cols;$/;"	m	struct:window	access:public
window::total_lines	window.h	/^    int total_lines;$/;"	m	struct:window	access:public
window::update_mode_line	window.h	/^    bool_bf update_mode_line : 1;$/;"	m	struct:window	access:public
window::use_time	window.h	/^    EMACS_INT use_time;$/;"	m	struct:window	access:public
window::vertical_scroll_bar	window.h	/^    Lisp_Object vertical_scroll_bar;$/;"	m	struct:window	access:public
window::vertical_scroll_bar_type	window.h	/^    Lisp_Object vertical_scroll_bar_type;$/;"	m	struct:window	access:public
window::vscroll	window.h	/^    int vscroll;$/;"	m	struct:window	access:public
window::window_end_bytepos	window.h	/^    ptrdiff_t window_end_bytepos;$/;"	m	struct:window	access:public
window::window_end_pos	window.h	/^    ptrdiff_t window_end_pos;$/;"	m	struct:window	access:public
window::window_end_valid	window.h	/^    bool_bf window_end_valid : 1;$/;"	m	struct:window	access:public
window::window_end_vpos	window.h	/^    int window_end_vpos;$/;"	m	struct:window	access:public
window::window_parameters	window.h	/^    Lisp_Object window_parameters;$/;"	m	struct:window	access:public
WINDOWP	window.h	/^WINDOWP (Lisp_Object a)$/;"	f	signature:(Lisp_Object a)
windows_or_buffers_changed	xdisp.c	/^int windows_or_buffers_changed;$/;"	v
window_being_scrolled	xterm.c	/^static Lisp_Object window_being_scrolled;$/;"	v	file:
window_body_height	window.c	/^window_body_height (struct window *w, bool pixelwise)$/;"	f	file:	signature:(struct window *w, bool pixelwise)
window_body_width	window.c	/^window_body_width (struct window *w, bool pixelwise)$/;"	f	signature:(struct window *w, bool pixelwise)
window_body_width	window.h	/^extern int window_body_width (struct window *w, bool);$/;"	p	signature:(struct window *w, bool)
WINDOW_BOTTOMMOST_P	window.h	606;"	d
WINDOW_BOTTOM_DIVIDER_WIDTH	window.h	623;"	d
WINDOW_BOTTOM_EDGE_LINE	window.h	646;"	d
WINDOW_BOTTOM_EDGE_Y	window.h	705;"	d
WINDOW_BOTTOM_PIXEL_EDGE	window.h	664;"	d
window_box	dispextern.h	/^void window_box (struct window *, enum glyph_row_area,$/;"	p	signature:(struct window *, enum glyph_row_area, int *, int *, int *, int *)
window_box	xdisp.c	/^window_box (struct window *w, enum glyph_row_area area, int *box_x,$/;"	f	signature:(struct window *w, enum glyph_row_area area, int *box_x, int *box_y, int *box_width, int *box_height)
window_box_edges	xdisp.c	/^window_box_edges (struct window *w, int *top_left_x, int *top_left_y,$/;"	f	file:	signature:(struct window *w, int *top_left_x, int *top_left_y, int *bottom_right_x, int *bottom_right_y)
window_box_height	dispextern.h	/^int window_box_height (struct window *);$/;"	p	signature:(struct window *)
window_box_height	xdisp.c	/^window_box_height (struct window *w)$/;"	f	signature:(struct window *w)
WINDOW_BOX_HEIGHT_NO_MODE_LINE	window.h	940;"	d
window_box_left	dispextern.h	/^int window_box_left (struct window *, enum glyph_row_area);$/;"	p	signature:(struct window *, enum glyph_row_area)
window_box_left	xdisp.c	/^window_box_left (struct window *w, enum glyph_row_area area)$/;"	f	signature:(struct window *w, enum glyph_row_area area)
WINDOW_BOX_LEFT_EDGE_X	window.h	728;"	d
window_box_left_offset	dispextern.h	/^int window_box_left_offset (struct window *, enum glyph_row_area);$/;"	p	signature:(struct window *, enum glyph_row_area)
window_box_left_offset	xdisp.c	/^window_box_left_offset (struct window *w, enum glyph_row_area area)$/;"	f	signature:(struct window *w, enum glyph_row_area area)
WINDOW_BOX_LEFT_PIXEL_EDGE	window.h	712;"	d
window_box_right	dispextern.h	/^int window_box_right (struct window *, enum glyph_row_area);$/;"	p	signature:(struct window *, enum glyph_row_area)
window_box_right	xdisp.c	/^window_box_right (struct window *w, enum glyph_row_area area)$/;"	f	signature:(struct window *w, enum glyph_row_area area)
WINDOW_BOX_RIGHT_EDGE_X	window.h	735;"	d
window_box_right_offset	xdisp.c	/^window_box_right_offset (struct window *w, enum glyph_row_area area)$/;"	f	file:	signature:(struct window *w, enum glyph_row_area area)
WINDOW_BOX_RIGHT_PIXEL_EDGE	window.h	720;"	d
WINDOW_BOX_TEXT_HEIGHT	window.h	948;"	d
window_box_width	dispextern.h	/^int window_box_width (struct window *, enum glyph_row_area);$/;"	p	signature:(struct window *, enum glyph_row_area)
window_box_width	xdisp.c	/^window_box_width (struct window *w, enum glyph_row_area area)$/;"	f	signature:(struct window *w, enum glyph_row_area area)
WINDOW_BUFFER	window.h	544;"	d
window_buffer_changed	xdisp.c	/^window_buffer_changed (struct window *w)$/;"	f	file:	signature:(struct window *w)
window_column_x	indent.c	/^window_column_x (struct window *w, Lisp_Object window,$/;"	f	file:	signature:(struct window *w, Lisp_Object window, double col, Lisp_Object column)
WINDOW_CONFIGURATIONP	lisp.h	/^WINDOW_CONFIGURATIONP (Lisp_Object a)$/;"	f	signature:(Lisp_Object a)
window_configuration_changed	frame.h	/^  bool_bf window_configuration_changed : 1;$/;"	m	struct:frame	access:public
WINDOW_CONFIG_SCROLL_BAR_COLS	window.h	834;"	d
WINDOW_CONFIG_SCROLL_BAR_HEIGHT	window.h	891;"	d
WINDOW_CONFIG_SCROLL_BAR_LINES	window.h	899;"	d
WINDOW_CONFIG_SCROLL_BAR_WIDTH	window.h	826;"	d
window_count	buffer.h	/^  int window_count;$/;"	m	struct:buffer	access:public
window_desc	nsterm.h	/^  Window window_desc, parent_desc;$/;"	m	struct:ns_output	access:public
window_desc	w32term.h	/^  Window window_desc;$/;"	m	struct:w32_output	access:public
window_desc	xterm.h	/^  Window window_desc;$/;"	m	struct:x_output	access:public
window_display_table	disptab.h	/^extern struct Lisp_Char_Table *window_display_table (struct window *);$/;"	p	signature:(struct window *)
window_display_table	window.c	/^window_display_table (struct window *w)$/;"	f	signature:(struct window *w)
WINDOW_DIVIDER_FACE_ID	dispextern.h	/^  WINDOW_DIVIDER_FACE_ID,$/;"	e	enum:face_id
WINDOW_DIVIDER_FIRST_PIXEL_FACE_ID	dispextern.h	/^  WINDOW_DIVIDER_FIRST_PIXEL_FACE_ID,$/;"	e	enum:face_id
WINDOW_DIVIDER_LAST_PIXEL_FACE_ID	dispextern.h	/^  WINDOW_DIVIDER_LAST_PIXEL_FACE_ID,$/;"	e	enum:face_id
window_end_bytepos	window.h	/^    ptrdiff_t window_end_bytepos;$/;"	m	struct:window	access:public
window_end_pos	window.h	/^    ptrdiff_t window_end_pos;$/;"	m	struct:window	access:public
window_end_valid	window.h	/^    bool_bf window_end_valid : 1;$/;"	m	struct:window	access:public
window_end_vpos	window.h	/^    int window_end_vpos;$/;"	m	struct:window	access:public
WINDOW_FRAME	frame.h	718;"	d
WINDOW_FRAME_COLUMN_WIDTH	window.h	550;"	d
WINDOW_FRAME_LINE_HEIGHT	window.h	554;"	d
WINDOW_FRINGES_WIDTH	window.h	770;"	d
window_from_coordinates	window.c	/^window_from_coordinates (struct frame *f, int x, int y,$/;"	f	signature:(struct frame *f, int x, int y, enum window_part *part, bool tool_bar_p)
window_from_coordinates	window.h	/^extern Lisp_Object window_from_coordinates (struct frame *, int, int,$/;"	p	signature:(struct frame *, int, int, enum window_part *, bool)
window_frozen_p	xdisp.c	/^window_frozen_p (struct window *w)$/;"	f	file:	signature:(struct window *w)
WINDOW_FULL_WIDTH_P	window.h	612;"	d
WINDOW_HAS_FRINGES_OUTSIDE_MARGINS	window.h	774;"	d
WINDOW_HAS_HORIZONTAL_SCROLL_BAR	window.h	811;"	d
WINDOW_HAS_HORIZONTAL_SCROLL_BAR	window.h	820;"	d
WINDOW_HAS_VERTICAL_SCROLL_BAR	window.h	796;"	d
WINDOW_HAS_VERTICAL_SCROLL_BAR_ON_LEFT	window.h	790;"	d
WINDOW_HAS_VERTICAL_SCROLL_BAR_ON_RIGHT	window.h	793;"	d
WINDOW_HEADER_LINE_HEIGHT	window.h	930;"	d
WINDOW_HEADER_LINE_LINES	window.h	935;"	d
window_height	dispextern.h	/^  int window_height, window_width;$/;"	m	struct:glyph_matrix	access:public
WINDOW_HORIZONTAL_COMBINATION_P	window.h	530;"	d
window_hscroll_limited	xdisp.c	/^window_hscroll_limited (struct window *w, struct frame *f)$/;"	f	file:	signature:(struct window *w, struct frame *f)
WINDOW_H_INCLUDED	window.h	21;"	d
window_internal_height	window.c	/^window_internal_height (struct window *w)$/;"	f	signature:(struct window *w)
window_internal_height	window.h	/^extern int window_internal_height (struct window *);$/;"	p	signature:(struct window *)
WINDOW_INTERNAL_P	window.h	526;"	d
WINDOW_LEAF_P	window.h	522;"	d
WINDOW_LEFTMOST_P	window.h	590;"	d
WINDOW_LEFT_EDGE_COL	window.h	633;"	d
WINDOW_LEFT_EDGE_X	window.h	669;"	d
WINDOW_LEFT_FRINGE_WIDTH	window.h	760;"	d
WINDOW_LEFT_MARGIN_COLS	window.h	740;"	d
WINDOW_LEFT_MARGIN_WIDTH	window.h	749;"	d
WINDOW_LEFT_PIXEL_EDGE	window.h	651;"	d
WINDOW_LEFT_SCROLL_BAR_AREA_WIDTH	window.h	864;"	d
WINDOW_LEFT_SCROLL_BAR_COLS	window.h	844;"	d
window_list	window.c	/^window_list (void)$/;"	f	signature:(void)
window_list	window.h	/^extern Lisp_Object window_list (void);$/;"	p	signature:(void)
window_list_1	window.c	/^window_list_1 (Lisp_Object window, Lisp_Object minibuf, Lisp_Object all_frames)$/;"	f	file:	signature:(Lisp_Object window, Lisp_Object minibuf, Lisp_Object all_frames)
WINDOW_LIVE_P	window.h	1082;"	d
window_loop	window.c	/^enum window_loop$/;"	g	file:
window_loop	window.c	/^window_loop (enum window_loop type, Lisp_Object obj, bool mini,$/;"	f	file:	signature:(enum window_loop type, Lisp_Object obj, bool mini, Lisp_Object frames)
WINDOW_LOOP_UNUSED	window.c	/^  WINDOW_LOOP_UNUSED,$/;"	e	enum:window_loop	file:
WINDOW_MARGINS_COLS	window.h	744;"	d
WINDOW_MARGINS_WIDTH	window.h	755;"	d
WINDOW_MENU_BAR_P	window.h	681;"	d
WINDOW_MENU_BAR_P	window.h	686;"	d
WINDOW_MODE_LINE_HEIGHT	window.h	920;"	d
WINDOW_MODE_LINE_LINES	window.h	925;"	d
window_outdated	window.c	/^window_outdated (struct window *w)$/;"	f	signature:(struct window *w)
window_outdated	window.h	/^extern bool window_outdated (struct window *);$/;"	p	signature:(struct window *)
window_parameter	window.c	/^window_parameter (struct window *w, Lisp_Object parameter)$/;"	f	signature:(struct window *w, Lisp_Object parameter)
window_parameter	window.h	/^extern Lisp_Object window_parameter (struct window *, Lisp_Object parameter);$/;"	p	signature:(struct window *, Lisp_Object parameter)
window_parameters	window.c	/^  Lisp_Object combination_limit, window_parameters;$/;"	m	struct:saved_window	file:	access:public
window_parameters	window.h	/^    Lisp_Object window_parameters;$/;"	m	struct:window	access:public
window_part	dispextern.h	/^enum window_part$/;"	g
WINDOW_PIXEL_HEIGHT	window.h	563;"	d
window_pixel_left	dispextern.h	/^  int window_pixel_left, window_pixel_top;$/;"	m	struct:glyph_matrix	access:public
window_pixel_top	dispextern.h	/^  int window_pixel_left, window_pixel_top;$/;"	m	struct:glyph_matrix	access:public
window_pixel_to_total	window.c	/^window_pixel_to_total (Lisp_Object frame, Lisp_Object horizontal)$/;"	f	file:	signature:(Lisp_Object frame, Lisp_Object horizontal)
WINDOW_PIXEL_WIDTH	window.h	559;"	d
WINDOW_PSEUDO_P	window.h	541;"	d
window_relative_x_coord	window.c	/^window_relative_x_coord (struct window *w, enum window_part part, int x)$/;"	f	signature:(struct window *w, enum window_part part, int x)
window_relative_x_coord	window.h	/^extern int window_relative_x_coord (struct window *, enum window_part, int);$/;"	p	signature:(struct window *, enum window_part, int)
window_resize_apply	window.c	/^static void window_resize_apply (struct window *, bool);$/;"	p	file:	signature:(struct window *, bool)
window_resize_apply	window.c	/^window_resize_apply (struct window *w, bool horflag)$/;"	f	file:	signature:(struct window *w, bool horflag)
window_resize_apply_total	window.c	/^window_resize_apply_total (struct window *w, bool horflag)$/;"	f	file:	signature:(struct window *w, bool horflag)
window_resize_check	window.c	/^static bool window_resize_check (struct window *, bool);$/;"	p	file:	signature:(struct window *, bool)
window_resize_check	window.c	/^window_resize_check (struct window *w, bool horflag)$/;"	f	file:	signature:(struct window *w, bool horflag)
window_resize_pixelwise	globals.h	1065;"	d
WINDOW_RIGHTMOST_P	window.h	598;"	d
WINDOW_RIGHT_DIVIDER_WIDTH	window.h	618;"	d
WINDOW_RIGHT_EDGE_COL	window.h	637;"	d
WINDOW_RIGHT_EDGE_X	window.h	675;"	d
WINDOW_RIGHT_FRINGE_WIDTH	window.h	765;"	d
WINDOW_RIGHT_MARGIN_COLS	window.h	742;"	d
WINDOW_RIGHT_MARGIN_WIDTH	window.h	752;"	d
WINDOW_RIGHT_PIXEL_EDGE	window.h	655;"	d
WINDOW_RIGHT_SCROLL_BAR_AREA_WIDTH	window.h	870;"	d
WINDOW_RIGHT_SCROLL_BAR_COLS	window.h	852;"	d
window_scroll	window.c	/^window_scroll (Lisp_Object window, EMACS_INT n, bool whole, bool noerror)$/;"	f	file:	signature:(Lisp_Object window, EMACS_INT n, bool whole, bool noerror)
WINDOW_SCROLL_BAR_AREA_HEIGHT	window.h	913;"	d
WINDOW_SCROLL_BAR_AREA_WIDTH	window.h	876;"	d
WINDOW_SCROLL_BAR_AREA_X	window.h	883;"	d
WINDOW_SCROLL_BAR_AREA_Y	window.h	957;"	d
WINDOW_SCROLL_BAR_COLS	window.h	858;"	d
WINDOW_SCROLL_BAR_LINES	window.h	907;"	d
window_scroll_line_based	window.c	/^static void window_scroll_line_based (Lisp_Object, int, bool, bool);$/;"	p	file:	signature:(Lisp_Object, int, bool, bool)
window_scroll_line_based	window.c	/^window_scroll_line_based (Lisp_Object window, int n, bool whole, bool noerror)$/;"	f	file:	signature:(Lisp_Object window, int n, bool whole, bool noerror)
window_scroll_margin	window.c	/^window_scroll_margin (struct window *window, enum margin_unit unit)$/;"	f	signature:(struct window *window, enum margin_unit unit)
window_scroll_margin	window.h	/^extern int window_scroll_margin (struct window *, enum margin_unit);$/;"	p	signature:(struct window *, enum margin_unit)
window_scroll_pixel_based	window.c	/^static void window_scroll_pixel_based (Lisp_Object, int, bool, bool);$/;"	p	file:	signature:(Lisp_Object, int, bool, bool)
window_scroll_pixel_based	window.c	/^window_scroll_pixel_based (Lisp_Object window, int n, bool whole, bool noerror)$/;"	f	file:	signature:(Lisp_Object window, int n, bool whole, bool noerror)
window_scroll_pixel_based_preserve_x	window.c	/^static int window_scroll_pixel_based_preserve_x;$/;"	v	file:
window_scroll_pixel_based_preserve_y	window.c	/^static int window_scroll_pixel_based_preserve_y;$/;"	v	file:
window_scroll_preserve_hpos	window.c	/^static EMACS_INT window_scroll_preserve_hpos;$/;"	v	file:
window_scroll_preserve_vpos	window.c	/^static EMACS_INT window_scroll_preserve_vpos;$/;"	v	file:
window_select_count	window.c	/^EMACS_INT window_select_count;$/;"	v
window_set_before_size_change_sizes	window.c	/^window_set_before_size_change_sizes (struct window *w)$/;"	f	file:	signature:(struct window *w)
window_size_changed	window.c	/^window_size_changed (struct window *w)$/;"	f	file:	signature:(struct window *w)
window_system_available	frame.h	/^window_system_available (struct frame *f)$/;"	f	signature:(struct frame *f)
WINDOW_SYSTEM_OBJ	Makefile	/^WINDOW_SYSTEM_OBJ=fontset.o fringe.o image.o$/;"	m
WINDOW_SYSTEM_RETURN	frame.h	1199;"	d
WINDOW_SYSTEM_RETURN	frame.h	1201;"	d
window_text_bottom_y	dispextern.h	/^int window_text_bottom_y (struct window *);$/;"	p	signature:(struct window *)
window_text_bottom_y	xdisp.c	/^window_text_bottom_y (struct window *w)$/;"	f	signature:(struct window *w)
WINDOW_TEXT_TO_FRAME_PIXEL_X	window.h	980;"	d
WINDOW_TOOL_BAR_P	window.h	691;"	d
WINDOW_TOOL_BAR_P	window.h	695;"	d
WINDOW_TOPMOST_P	window.h	594;"	d
WINDOW_TOP_EDGE_LINE	window.h	642;"	d
WINDOW_TOP_EDGE_Y	window.h	699;"	d
WINDOW_TOP_PIXEL_EDGE	window.h	660;"	d
WINDOW_TOTAL_COLS	window.h	569;"	d
WINDOW_TOTAL_LINES	window.h	575;"	d
window_to_frame_hpos	dispnew.c	/^static int window_to_frame_hpos (struct window *, int);$/;"	p	file:	signature:(struct window *, int)
window_to_frame_hpos	dispnew.c	/^window_to_frame_hpos (struct window *w, int hpos)$/;"	f	file:	signature:(struct window *w, int hpos)
WINDOW_TO_FRAME_HPOS	dispnew.c	133;"	d	file:
WINDOW_TO_FRAME_HPOS	dispnew.c	231;"	d	file:
WINDOW_TO_FRAME_PIXEL_X	window.h	963;"	d
WINDOW_TO_FRAME_PIXEL_Y	window.h	967;"	d
window_to_frame_vpos	dispnew.c	/^static int window_to_frame_vpos (struct window *, int);$/;"	p	file:	signature:(struct window *, int)
window_to_frame_vpos	dispnew.c	/^window_to_frame_vpos (struct window *w, int vpos)$/;"	f	file:	signature:(struct window *w, int vpos)
WINDOW_TO_FRAME_VPOS	dispnew.c	132;"	d	file:
WINDOW_TO_FRAME_VPOS	dispnew.c	230;"	d	file:
WINDOW_VALID_P	window.h	1073;"	d
WINDOW_VERTICAL_COMBINATION_P	window.h	534;"	d
WINDOW_VERTICAL_SCROLL_BAR_TYPE	window.h	779;"	d
window_vscroll	dispextern.h	/^  int window_vscroll;$/;"	m	struct:glyph_matrix	access:public
window_wants_header_line	window.c	/^window_wants_header_line (struct window *w)$/;"	f	signature:(struct window *w)
window_wants_header_line	window.h	/^extern bool window_wants_header_line (struct window *);$/;"	p	signature:(struct window *)
window_wants_mode_line	window.c	/^window_wants_mode_line (struct window *w)$/;"	f	signature:(struct window *w)
window_wants_mode_line	window.h	/^extern bool window_wants_mode_line (struct window *);$/;"	p	signature:(struct window *)
window_width	dispextern.h	/^  int window_height, window_width;$/;"	m	struct:glyph_matrix	access:public
WINDOW_WRAP	dispextern.h	/^  WINDOW_WRAP$/;"	e	enum:line_wrap_method
WINDOW_XFRAME	window.h	538;"	d
winsdown	w32fns.c	/^  int winsdown;      \/* Number of handled keys currently pressed *\/$/;"	m	struct:__anon74	file:	access:public
winseen	w32fns.c	/^  int winseen;       \/* Windows keys seen during this press? *\/$/;"	m	struct:__anon74	file:	access:public
winsock_inuse	w32.c	/^static int winsock_inuse;$/;"	v	file:
winsock_lib	w32.c	/^HANDLE winsock_lib;$/;"	v
win_gravity	frame.h	/^  int win_gravity;$/;"	m	struct:frame	access:public
wipe_kboard	keyboard.c	/^wipe_kboard (KBOARD *kb)$/;"	f	file:	signature:(KBOARD *kb)
within_one_second	filelock.c	/^within_one_second (time_t a, time_t b)$/;"	f	file:	signature:(time_t a, time_t b)
with_echo_area_buffer	xdisp.c	/^with_echo_area_buffer (struct window *w, int which,$/;"	f	file:	signature:(struct window *w, int which, bool (*fn) (ptrdiff_t, Lisp_Object), ptrdiff_t a1, Lisp_Object a2)
with_echo_area_buffer_unwind_data	xdisp.c	/^static Lisp_Object with_echo_area_buffer_unwind_data (struct window *);$/;"	p	file:	signature:(struct window *)
with_echo_area_buffer_unwind_data	xdisp.c	/^with_echo_area_buffer_unwind_data (struct window *w)$/;"	f	file:	signature:(struct window *w)
WM_APPCOMMAND	w32term.h	620;"	d
WM_EMACS_BRINGTOTOP	w32term.h	654;"	d
WM_EMACS_CREATEHSCROLLBAR	w32term.h	635;"	d
WM_EMACS_CREATEVSCROLLBAR	w32term.h	634;"	d
WM_EMACS_CREATEWINDOW	w32term.h	632;"	d
WM_EMACS_DESTROYWINDOW	w32term.h	638;"	d
WM_EMACS_DESTROY_CARET	w32term.h	648;"	d
WM_EMACS_DONE	w32term.h	633;"	d
WM_EMACS_END	w32term.h	657;"	d
WM_EMACS_FILENOTIFY	w32term.h	656;"	d
WM_EMACS_HIDE_CARET	w32term.h	650;"	d
WM_EMACS_INPUT_READY	w32term.h	655;"	d
WM_EMACS_KILL	w32term.h	631;"	d
WM_EMACS_PAINT	w32term.h	653;"	d
WM_EMACS_REGISTER_HOT_KEY	w32term.h	644;"	d
WM_EMACS_SETCURSOR	w32term.h	651;"	d
WM_EMACS_SETFOCUS	w32term.h	640;"	d
WM_EMACS_SETFOREGROUND	w32term.h	641;"	d
WM_EMACS_SETKEYBOARDLAYOUT	w32term.h	643;"	d
WM_EMACS_SETLOCALE	w32term.h	642;"	d
WM_EMACS_SETWINDOWPOS	w32term.h	637;"	d
WM_EMACS_SHOWCURSOR	w32term.h	652;"	d
WM_EMACS_SHOWWINDOW	w32term.h	636;"	d
WM_EMACS_SHOW_CARET	w32term.h	649;"	d
WM_EMACS_START	w32term.h	630;"	d
WM_EMACS_TOGGLE_LOCK_KEY	w32term.h	646;"	d
WM_EMACS_TRACKPOPUPMENU	w32term.h	639;"	d
WM_EMACS_TRACK_CARET	w32term.h	647;"	d
WM_EMACS_UNREGISTER_HOT_KEY	w32term.h	645;"	d
wm_hints	xterm.h	/^  XWMHints wm_hints;$/;"	m	struct:x_output	access:public
WM_MOUSEHWHEEL	w32term.h	617;"	d
WM_MOUSELEAVE	w32term.h	787;"	d
WM_MOUSEWHEEL	w32term.h	607;"	d
wm_type	xterm.h	/^    } wm_type;$/;"	m	struct:x_display_info	typeref:enum:x_display_info::__anon87	access:public
WM_UNICHAR	w32term.h	624;"	d
WM_WTSSESSION_CHANGE	w32fns.c	255;"	d	file:
WM_XBUTTONDOWN	w32term.h	613;"	d
WM_XBUTTONUP	w32term.h	614;"	d
WND_BACKGROUND_INDEX	w32term.h	664;"	d
WND_BORDER_INDEX	w32term.h	661;"	d
WND_EXTRA_BYTES	w32term.h	667;"	d
WND_FONTWIDTH_INDEX	w32term.h	659;"	d
WND_HSCROLLBAR_INDEX	w32term.h	663;"	d
WND_LAST_INDEX	w32term.h	665;"	d
WND_LINEHEIGHT_INDEX	w32term.h	660;"	d
WND_VSCROLLBAR_INDEX	w32term.h	662;"	d
wnet_enum_handle	w32.c	/^static HANDLE wnet_enum_handle = INVALID_HANDLE_VALUE;$/;"	v	file:
wordbeg	regex.c	/^  wordbeg,	\/* Succeeds if at word beginning.  *\/$/;"	e	enum:__anon144	file:
wordbound	regex.c	/^  wordbound,	\/* Succeeds if at a word boundary.  *\/$/;"	e	enum:__anon144	file:
wordend	regex.c	/^  wordend,	\/* Succeeds if at word end.  *\/$/;"	e	enum:__anon144	file:
WORDS_BIGENDIAN	config.h	1735;"	d
words_include_escapes	globals.h	1067;"	d
word_boundary_p	category.c	/^word_boundary_p (int c1, int c2)$/;"	f	signature:(int c1, int c2)
word_boundary_p	category.h	/^extern bool word_boundary_p (int, int);$/;"	p	signature:(int, int)
WORD_BOUNDARY_P	category.h	116;"	d
WORD_BOUNDARY_P	regex.c	266;"	d	file:
word_size	lisp.h	/^    word_size = sizeof (Lisp_Object)$/;"	e	enum:__anon20
WORD_WRAP	dispextern.h	/^  WORD_WRAP,$/;"	e	enum:line_wrap_method
word_wrap_	buffer.h	/^  Lisp_Object word_wrap_;$/;"	m	struct:buffer	access:public
work	frame.h	/^  XRectangle geom, work;$/;"	m	struct:MonitorInfo	access:public
WorkingSetSize	w32.c	/^  SIZE_T WorkingSetSize;$/;"	m	struct:_PROCESS_MEMORY_COUNTERS_EX	file:	access:public
would_block	process.c	/^would_block (int errnum)$/;"	f	file:	signature:(int errnum)
write	sound.c	/^  void (* write) (struct sound_device *sd, const char *buffer,$/;"	m	struct:sound_device	file:	access:public
write	sysdep.c	61;"	d	file:
write	w32.c	67;"	d	file:
writecost	scroll.c	/^    int writecost;$/;"	m	struct:matrix_elt	file:	access:public
writecount	scroll.c	/^    unsigned char writecount;$/;"	m	struct:matrix_elt	file:	access:public
write_glyphs	dispextern.h	/^  void (*write_glyphs) (struct window *w, struct glyph_row *row,$/;"	m	struct:redisplay_interface	access:public
write_glyphs	dispextern.h	/^extern void write_glyphs (struct frame *, struct glyph *, int);$/;"	p	signature:(struct frame *, struct glyph *, int)
write_glyphs	terminal.c	/^write_glyphs (struct frame *f, struct glyph *string, int len)$/;"	f	signature:(struct frame *f, struct glyph *string, int len)
write_glyphs_hook	termhooks.h	/^  void (*write_glyphs_hook) (struct frame *f, struct glyph *s, int n);$/;"	m	struct:terminal	access:public
write_header	unexhp9k800.c	/^write_header (int file, struct header *hdr, struct som_exec_auxhdr *auxhdr)$/;"	f	file:	signature:(int file, struct header *hdr, struct som_exec_auxhdr *auxhdr)
write_protect	intervals.h	/^  bool_bf write_protect : 1;	    \/* True means can't modify.  *\/$/;"	m	struct:interval	access:public
write_queue	process.h	/^    Lisp_Object write_queue;$/;"	m	struct:Lisp_Process	access:public
write_queue_pop	process.c	/^write_queue_pop (struct Lisp_Process *p, Lisp_Object *obj,$/;"	f	file:	signature:(struct Lisp_Process *p, Lisp_Object *obj, const char **buf, ptrdiff_t *len)
write_queue_push	process.c	/^write_queue_push (struct Lisp_Process *p, Lisp_Object input_obj,$/;"	f	file:	signature:(struct Lisp_Process *p, Lisp_Object input_obj, const char *buf, ptrdiff_t len, bool front)
write_region	fileio.c	/^write_region (Lisp_Object start, Lisp_Object end, Lisp_Object filename,$/;"	f	signature:(Lisp_Object start, Lisp_Object end, Lisp_Object filename, Lisp_Object append, Lisp_Object visit, Lisp_Object lockname, Lisp_Object mustbenew, int desc)
write_region	lisp.h	/^extern Lisp_Object write_region (Lisp_Object, Lisp_Object, Lisp_Object,$/;"	p	signature:(Lisp_Object, Lisp_Object, Lisp_Object, Lisp_Object, Lisp_Object, Lisp_Object, Lisp_Object, int)
write_region_inhibit_fsync	globals.h	1069;"	d
write_segment	unexaix.c	/^static void write_segment (int, char *, char *);$/;"	p	file:	signature:(int, char *, char *)
write_segment	unexaix.c	/^write_segment (int new, char *ptr, char *end)$/;"	f	file:	signature:(int new, char *ptr, char *end)
write_stdout	keyboard.c	/^write_stdout (char const *msg)$/;"	f	file:	signature:(char const *msg)
write_string	print.c	/^write_string (const char *data, Lisp_Object printcharfun)$/;"	f	file:	signature:(const char *data, Lisp_Object printcharfun)
WRITE_TO_SUBPROCESS	process.c	/^    WRITE_TO_SUBPROCESS,$/;"	e	enum:__anon48	file:
wrong_choice	data.c	/^wrong_choice (Lisp_Object choice, Lisp_Object wrong)$/;"	f	signature:(Lisp_Object choice, Lisp_Object wrong)
wrong_choice	lisp.h	/^extern _Noreturn void wrong_choice (Lisp_Object, Lisp_Object);$/;"	p	signature:(Lisp_Object, Lisp_Object)
wrong_length_argument	data.c	/^wrong_length_argument (Lisp_Object a1, Lisp_Object a2, Lisp_Object a3)$/;"	f	file:	signature:(Lisp_Object a1, Lisp_Object a2, Lisp_Object a3)
wrong_range	data.c	/^wrong_range (Lisp_Object min, Lisp_Object max, Lisp_Object wrong)$/;"	f	file:	signature:(Lisp_Object min, Lisp_Object max, Lisp_Object wrong)
wrong_type_argument	data.c	/^wrong_type_argument (register Lisp_Object predicate, register Lisp_Object value)$/;"	f	signature:(register Lisp_Object predicate, register Lisp_Object value)
wrong_type_argument	lisp.h	/^extern _Noreturn void wrong_type_argument (Lisp_Object, Lisp_Object);$/;"	p	signature:(Lisp_Object, Lisp_Object)
wset_buffer	window.c	/^wset_buffer (struct window *w, Lisp_Object val)$/;"	f	signature:(struct window *w, Lisp_Object val)
wset_buffer	window.h	/^extern void wset_buffer (struct window *, Lisp_Object);$/;"	p	signature:(struct window *, Lisp_Object)
wset_combination	window.c	/^wset_combination (struct window *w, bool horflag, Lisp_Object val)$/;"	f	file:	signature:(struct window *w, bool horflag, Lisp_Object val)
wset_combination_limit	window.c	/^wset_combination_limit (struct window *w, Lisp_Object val)$/;"	f	file:	signature:(struct window *w, Lisp_Object val)
wset_dedicated	window.c	/^wset_dedicated (struct window *w, Lisp_Object val)$/;"	f	file:	signature:(struct window *w, Lisp_Object val)
wset_display_table	window.c	/^wset_display_table (struct window *w, Lisp_Object val)$/;"	f	file:	signature:(struct window *w, Lisp_Object val)
wset_frame	window.h	/^wset_frame (struct window *w, Lisp_Object val)$/;"	f	signature:(struct window *w, Lisp_Object val)
wset_horizontal_scroll_bar	window.h	/^wset_horizontal_scroll_bar (struct window *w, Lisp_Object val)$/;"	f	signature:(struct window *w, Lisp_Object val)
wset_horizontal_scroll_bar_type	window.h	/^wset_horizontal_scroll_bar_type (struct window *w, Lisp_Object val)$/;"	f	signature:(struct window *w, Lisp_Object val)
wset_new_normal	window.c	/^wset_new_normal (struct window *w, Lisp_Object val)$/;"	f	file:	signature:(struct window *w, Lisp_Object val)
wset_new_pixel	window.h	/^wset_new_pixel (struct window *w, Lisp_Object val)$/;"	f	signature:(struct window *w, Lisp_Object val)
wset_new_total	window.c	/^wset_new_total (struct window *w, Lisp_Object val)$/;"	f	file:	signature:(struct window *w, Lisp_Object val)
wset_next	window.h	/^wset_next (struct window *w, Lisp_Object val)$/;"	f	signature:(struct window *w, Lisp_Object val)
wset_next_buffers	window.h	/^wset_next_buffers (struct window *w, Lisp_Object val)$/;"	f	signature:(struct window *w, Lisp_Object val)
wset_normal_cols	window.c	/^wset_normal_cols (struct window *w, Lisp_Object val)$/;"	f	file:	signature:(struct window *w, Lisp_Object val)
wset_normal_lines	window.c	/^wset_normal_lines (struct window *w, Lisp_Object val)$/;"	f	file:	signature:(struct window *w, Lisp_Object val)
wset_old_pointm	window.c	/^wset_old_pointm (struct window *w, Lisp_Object val)$/;"	f	file:	signature:(struct window *w, Lisp_Object val)
wset_parent	window.c	/^wset_parent (struct window *w, Lisp_Object val)$/;"	f	file:	signature:(struct window *w, Lisp_Object val)
wset_pointm	window.c	/^wset_pointm (struct window *w, Lisp_Object val)$/;"	f	file:	signature:(struct window *w, Lisp_Object val)
wset_prev	window.h	/^wset_prev (struct window *w, Lisp_Object val)$/;"	f	signature:(struct window *w, Lisp_Object val)
wset_prev_buffers	window.h	/^wset_prev_buffers (struct window *w, Lisp_Object val)$/;"	f	signature:(struct window *w, Lisp_Object val)
wset_redisplay	window.h	/^extern void wset_redisplay (struct window *w);$/;"	p	signature:(struct window *w)
wset_redisplay	xdisp.c	/^wset_redisplay (struct window *w)$/;"	f	signature:(struct window *w)
wset_redisplay_end_trigger	window.h	/^wset_redisplay_end_trigger (struct window *w, Lisp_Object val)$/;"	f	signature:(struct window *w, Lisp_Object val)
wset_start	window.c	/^wset_start (struct window *w, Lisp_Object val)$/;"	f	file:	signature:(struct window *w, Lisp_Object val)
wset_temslot	window.c	/^wset_temslot (struct window *w, Lisp_Object val)$/;"	f	file:	signature:(struct window *w, Lisp_Object val)
wset_update_mode_line	window.c	/^wset_update_mode_line (struct window *w)$/;"	f	file:	signature:(struct window *w)
wset_vertical_scroll_bar	window.h	/^wset_vertical_scroll_bar (struct window *w, Lisp_Object val)$/;"	f	signature:(struct window *w, Lisp_Object val)
wset_vertical_scroll_bar_type	window.c	/^wset_vertical_scroll_bar_type (struct window *w, Lisp_Object val)$/;"	f	file:	signature:(struct window *w, Lisp_Object val)
wset_window_parameters	window.c	/^wset_window_parameters (struct window *w, Lisp_Object val)$/;"	f	file:	signature:(struct window *w, Lisp_Object val)
WSTOPSIG	syswait.h	52;"	d
WS_EX_LAYERED	w32term.c	128;"	d	file:
WS_EX_NOACTIVATE	w32fns.c	260;"	d	file:
WTERMSIG	syswait.h	55;"	d
WTMP_FILE	filelock.c	70;"	d	file:
WTS_SESSION_LOCK	w32fns.c	256;"	d	file:
x	alloc.c	/^  } x;$/;"	m	struct:ablock	typeref:union:ablock::__anon5	file:	access:public
x	data.c	/^  (register Lisp_Object x, Lisp_Object y)$/;"	v
x	dispextern.h	/^  int x, y;$/;"	m	struct:draw_fringe_bitmap_params	access:public
x	dispextern.h	/^  int x, y;$/;"	m	struct:glyph_row	access:public
x	dispextern.h	/^  int x;$/;"	m	struct:glyph_string	access:public
x	dispextern.h	/^  Lisp_Object x;$/;"	m	struct:it_slice	access:public
x	dispextern.h	/^  unsigned x : 16;$/;"	m	struct:glyph_slice	access:public
x	frame.c	/^  (Lisp_Object frame, Lisp_Object x, Lisp_Object y)$/;"	v
x	frame.h	/^    struct x_output *x;         \/* From xterm.h.  *\/$/;"	m	union:frame::output_data	typeref:struct:frame::output_data::x_output	access:public
x	keyboard.c	/^  (Lisp_Object x, Lisp_Object y, Lisp_Object frame_or_window, Lisp_Object whole)$/;"	v
x	menu.c	/^  (Lisp_Object x, Lisp_Object y, Lisp_Object frame)$/;"	v
x	nsgui.h	/^      int x, y;$/;"	m	struct:__anon46	access:public
x	nsgui.h	/^typedef struct _NSPoint { CGFloat x, y; } NSPoint;$/;"	m	struct:_NSPoint	access:public
x	term.c	/^  int x, y;$/;"	m	struct:tty_menu_state	file:	access:public
x	termhooks.h	/^    struct x_display_info *x;         \/* xterm.h *\/$/;"	m	union:terminal::display_info	typeref:struct:terminal::display_info::x_display_info	access:public
x	termhooks.h	/^  Lisp_Object x, y;$/;"	m	struct:input_event	access:public
x	w32fns.c	/^  (Lisp_Object x, Lisp_Object y)$/;"	v
x	w32gui.h	/^    int x, y;$/;"	m	struct:__anon86	access:public
x	window.c	/^  (Lisp_Object x, Lisp_Object y)$/;"	v
x	window.c	/^  (Lisp_Object x, Lisp_Object y, Lisp_Object frame)$/;"	v
x	window.c	/^  int x, y;$/;"	m	struct:check_window_data	file:	access:public
x	window.h	/^  int x, y;$/;"	m	struct:cursor_pos	access:public
x	xdisp.c	/^  (Lisp_Object map, Lisp_Object x, Lisp_Object y)$/;"	v
x	xfns.c	/^  (Lisp_Object x, Lisp_Object y)$/;"	v
x	xmenu.c	/^  int x;$/;"	m	struct:next_popup_x_y	file:	access:public
x	xwidget.h	/^  int x;$/;"	m	struct:xwidget_view	access:public
Xatom_ATOM	xterm.h	/^  Xatom_ATOM, Xatom_ATOM_PAIR, Xatom_CLIPBOARD_MANAGER;$/;"	m	struct:x_display_info	access:public
Xatom_ATOM_PAIR	xterm.h	/^  Xatom_ATOM, Xatom_ATOM_PAIR, Xatom_CLIPBOARD_MANAGER;$/;"	m	struct:x_display_info	access:public
Xatom_AVERAGE_WIDTH	xterm.h	/^  Atom Xatom_PIXEL_SIZE, Xatom_AVERAGE_WIDTH,$/;"	m	struct:x_display_info	access:public
Xatom_CLIPBOARD	xterm.h	/^  Atom Xatom_CLIPBOARD, Xatom_TIMESTAMP, Xatom_TEXT, Xatom_DELETE,$/;"	m	struct:x_display_info	access:public
Xatom_CLIPBOARD_MANAGER	xterm.h	/^  Xatom_ATOM, Xatom_ATOM_PAIR, Xatom_CLIPBOARD_MANAGER;$/;"	m	struct:x_display_info	access:public
Xatom_COMPOUND_TEXT	xterm.h	/^  Xatom_COMPOUND_TEXT, Xatom_UTF8_STRING,$/;"	m	struct:x_display_info	access:public
Xatom_DELETE	xterm.h	/^  Atom Xatom_CLIPBOARD, Xatom_TIMESTAMP, Xatom_TEXT, Xatom_DELETE,$/;"	m	struct:x_display_info	access:public
Xatom_DONE	xterm.h	/^  Atom Xatom_DONE, Xatom_PAGE;$/;"	m	struct:x_display_info	access:public
Xatom_editres	xterm.h	/^  Atom Xatom_editres;$/;"	m	struct:x_display_info	access:public
Xatom_EMACS_TMP	xterm.h	/^  Xatom_MULTIPLE, Xatom_INCR, Xatom_EMACS_TMP, Xatom_TARGETS, Xatom_NULL,$/;"	m	struct:x_display_info	access:public
Xatom_Horizontal_Scrollbar	xterm.h	/^  Atom Xatom_Scrollbar, Xatom_Horizontal_Scrollbar;$/;"	m	struct:x_display_info	access:public
Xatom_INCR	xterm.h	/^  Xatom_MULTIPLE, Xatom_INCR, Xatom_EMACS_TMP, Xatom_TARGETS, Xatom_NULL,$/;"	m	struct:x_display_info	access:public
Xatom_MULE_BASELINE_OFFSET	xterm.h	/^  Xatom_MULE_BASELINE_OFFSET, Xatom_MULE_RELATIVE_COMPOSE,$/;"	m	struct:x_display_info	access:public
Xatom_MULE_DEFAULT_ASCENT	xterm.h	/^  Xatom_MULE_DEFAULT_ASCENT;$/;"	m	struct:x_display_info	access:public
Xatom_MULE_RELATIVE_COMPOSE	xterm.h	/^  Xatom_MULE_BASELINE_OFFSET, Xatom_MULE_RELATIVE_COMPOSE,$/;"	m	struct:x_display_info	access:public
Xatom_MULTIPLE	xterm.h	/^  Xatom_MULTIPLE, Xatom_INCR, Xatom_EMACS_TMP, Xatom_TARGETS, Xatom_NULL,$/;"	m	struct:x_display_info	access:public
Xatom_net_active_window	xterm.h	/^  Atom Xatom_net_active_window;$/;"	m	struct:x_display_info	access:public
Xatom_net_current_desktop	xterm.h	/^    Xatom_net_frame_extents, Xatom_net_current_desktop, Xatom_net_workarea;$/;"	m	struct:x_display_info	access:public
Xatom_net_frame_extents	xterm.h	/^    Xatom_net_frame_extents, Xatom_net_current_desktop, Xatom_net_workarea;$/;"	m	struct:x_display_info	access:public
Xatom_net_supported	xterm.h	/^  Atom Xatom_net_supported, Xatom_net_supporting_wm_check;$/;"	m	struct:x_display_info	access:public
Xatom_net_supporting_wm_check	xterm.h	/^  Atom Xatom_net_supported, Xatom_net_supporting_wm_check;$/;"	m	struct:x_display_info	access:public
Xatom_net_window_type	xterm.h	/^  Atom Xatom_net_window_type, Xatom_net_window_type_tooltip;$/;"	m	struct:x_display_info	access:public
Xatom_net_window_type_tooltip	xterm.h	/^  Atom Xatom_net_window_type, Xatom_net_window_type_tooltip;$/;"	m	struct:x_display_info	access:public
Xatom_net_wm_icon_name	xterm.h	/^  Atom Xatom_net_wm_name, Xatom_net_wm_icon_name;$/;"	m	struct:x_display_info	access:public
Xatom_net_wm_name	xterm.h	/^  Atom Xatom_net_wm_name, Xatom_net_wm_icon_name;$/;"	m	struct:x_display_info	access:public
Xatom_net_wm_state	xterm.h	/^  Atom Xatom_net_wm_state, Xatom_net_wm_state_fullscreen,$/;"	m	struct:x_display_info	access:public
Xatom_net_wm_state_above	xterm.h	/^    Xatom_net_wm_state_sticky, Xatom_net_wm_state_above, Xatom_net_wm_state_below,$/;"	m	struct:x_display_info	access:public
Xatom_net_wm_state_below	xterm.h	/^    Xatom_net_wm_state_sticky, Xatom_net_wm_state_above, Xatom_net_wm_state_below,$/;"	m	struct:x_display_info	access:public
Xatom_net_wm_state_fullscreen	xterm.h	/^  Atom Xatom_net_wm_state, Xatom_net_wm_state_fullscreen,$/;"	m	struct:x_display_info	access:public
Xatom_net_wm_state_hidden	xterm.h	/^    Xatom_net_wm_state_hidden, Xatom_net_wm_state_skip_taskbar,$/;"	m	struct:x_display_info	access:public
Xatom_net_wm_state_maximized_horz	xterm.h	/^    Xatom_net_wm_state_maximized_horz, Xatom_net_wm_state_maximized_vert,$/;"	m	struct:x_display_info	access:public
Xatom_net_wm_state_maximized_vert	xterm.h	/^    Xatom_net_wm_state_maximized_horz, Xatom_net_wm_state_maximized_vert,$/;"	m	struct:x_display_info	access:public
Xatom_net_wm_state_skip_taskbar	xterm.h	/^    Xatom_net_wm_state_hidden, Xatom_net_wm_state_skip_taskbar,$/;"	m	struct:x_display_info	access:public
Xatom_net_wm_state_sticky	xterm.h	/^    Xatom_net_wm_state_sticky, Xatom_net_wm_state_above, Xatom_net_wm_state_below,$/;"	m	struct:x_display_info	access:public
Xatom_net_wm_window_opacity	xterm.h	/^  Atom Xatom_net_wm_window_opacity;$/;"	m	struct:x_display_info	access:public
Xatom_net_workarea	xterm.h	/^    Xatom_net_frame_extents, Xatom_net_current_desktop, Xatom_net_workarea;$/;"	m	struct:x_display_info	access:public
Xatom_NULL	xterm.h	/^  Xatom_MULTIPLE, Xatom_INCR, Xatom_EMACS_TMP, Xatom_TARGETS, Xatom_NULL,$/;"	m	struct:x_display_info	access:public
Xatom_PAGE	xterm.h	/^  Atom Xatom_DONE, Xatom_PAGE;$/;"	m	struct:x_display_info	access:public
Xatom_PIXEL_SIZE	xterm.h	/^  Atom Xatom_PIXEL_SIZE, Xatom_AVERAGE_WIDTH,$/;"	m	struct:x_display_info	access:public
Xatom_Scrollbar	xterm.h	/^  Atom Xatom_Scrollbar, Xatom_Horizontal_Scrollbar;$/;"	m	struct:x_display_info	access:public
Xatom_SM_CLIENT_ID	xterm.h	/^  Atom Xatom_SM_CLIENT_ID;$/;"	m	struct:x_display_info	access:public
Xatom_TARGETS	xterm.h	/^  Xatom_MULTIPLE, Xatom_INCR, Xatom_EMACS_TMP, Xatom_TARGETS, Xatom_NULL,$/;"	m	struct:x_display_info	access:public
Xatom_TEXT	xterm.h	/^  Atom Xatom_CLIPBOARD, Xatom_TIMESTAMP, Xatom_TEXT, Xatom_DELETE,$/;"	m	struct:x_display_info	access:public
Xatom_TIMESTAMP	xterm.h	/^  Atom Xatom_CLIPBOARD, Xatom_TIMESTAMP, Xatom_TEXT, Xatom_DELETE,$/;"	m	struct:x_display_info	access:public
Xatom_UTF8_STRING	xterm.h	/^  Xatom_COMPOUND_TEXT, Xatom_UTF8_STRING,$/;"	m	struct:x_display_info	access:public
Xatom_wm_change_state	xterm.h	/^  Atom Xatom_wm_change_state;$/;"	m	struct:x_display_info	access:public
Xatom_wm_client_leader	xterm.h	/^  Atom Xatom_wm_client_leader;    \/* Id of client leader window.  *\/$/;"	m	struct:x_display_info	access:public
Xatom_wm_configure_denied	xterm.h	/^  Atom Xatom_wm_configure_denied; \/* When our config request is denied *\/$/;"	m	struct:x_display_info	access:public
Xatom_wm_delete_window	xterm.h	/^  Atom Xatom_wm_delete_window;$/;"	m	struct:x_display_info	access:public
Xatom_wm_protocols	xterm.h	/^  Atom Xatom_wm_protocols;$/;"	m	struct:x_display_info	access:public
Xatom_wm_save_yourself	xterm.h	/^  Atom Xatom_wm_save_yourself;$/;"	m	struct:x_display_info	access:public
Xatom_wm_take_focus	xterm.h	/^  Atom Xatom_wm_take_focus;$/;"	m	struct:x_display_info	access:public
Xatom_wm_window_moved	xterm.h	/^  Atom Xatom_wm_window_moved;     \/* When the WM moves us.  *\/$/;"	m	struct:x_display_info	access:public
Xatom_XEMBED	xterm.h	/^  Atom Xatom_XEMBED, Xatom_XEMBED_INFO;$/;"	m	struct:x_display_info	access:public
Xatom_XEMBED_INFO	xterm.h	/^  Atom Xatom_XEMBED, Xatom_XEMBED_INFO;$/;"	m	struct:x_display_info	access:public
Xatom_xsettings_mgr	xterm.h	/^  Atom Xatom_xsettings_sel, Xatom_xsettings_prop, Xatom_xsettings_mgr;$/;"	m	struct:x_display_info	access:public
Xatom_xsettings_prop	xterm.h	/^  Atom Xatom_xsettings_sel, Xatom_xsettings_prop, Xatom_xsettings_mgr;$/;"	m	struct:x_display_info	access:public
Xatom_xsettings_sel	xterm.h	/^  Atom Xatom_xsettings_sel, Xatom_xsettings_prop, Xatom_xsettings_mgr;$/;"	m	struct:x_display_info	access:public
xaw3d_arrow_scroll	xterm.c	/^static Boolean xaw3d_arrow_scroll;$/;"	v	file:
xaw3d_pick_top	xterm.c	/^static Boolean xaw3d_pick_top;$/;"	v	file:
xaw_jump_callback	xterm.c	/^xaw_jump_callback (Widget widget, XtPointer client_data, XtPointer call_data)$/;"	f	file:	signature:(Widget widget, XtPointer client_data, XtPointer call_data)
xaw_scroll_callback	xterm.c	/^xaw_scroll_callback (Widget widget, XtPointer client_data, XtPointer call_data)$/;"	f	file:	signature:(Widget widget, XtPointer client_data, XtPointer call_data)
XBM_ALGORITHM	image.c	/^  XBM_ALGORITHM,$/;"	e	enum:xbm_keyword_index	file:
XBM_ASCENT	image.c	/^  XBM_ASCENT,$/;"	e	enum:xbm_keyword_index	file:
XBM_BACKGROUND	image.c	/^  XBM_BACKGROUND,$/;"	e	enum:xbm_keyword_index	file:
XBM_BIT_SHUFFLE	image.c	2730;"	d	file:
XBM_BIT_SHUFFLE	image.c	2734;"	d	file:
XBM_DATA	image.c	/^  XBM_DATA,$/;"	e	enum:xbm_keyword_index	file:
XBM_FILE	image.c	/^  XBM_FILE,$/;"	e	enum:xbm_keyword_index	file:
xbm_file_p	image.c	/^static bool xbm_file_p (Lisp_Object);$/;"	p	file:
xbm_file_p	image.c	/^xbm_file_p (Lisp_Object data)$/;"	f	file:	signature:(Lisp_Object data)
XBM_FOREGROUND	image.c	/^  XBM_FOREGROUND,$/;"	e	enum:xbm_keyword_index	file:
xbm_format	image.c	/^static const struct image_keyword xbm_format[XBM_LAST] =$/;"	v	typeref:struct:image_keyword	file:
XBM_HEIGHT	image.c	/^  XBM_HEIGHT,$/;"	e	enum:xbm_keyword_index	file:
XBM_HEURISTIC_MASK	image.c	/^  XBM_HEURISTIC_MASK,$/;"	e	enum:xbm_keyword_index	file:
xbm_image_p	image.c	/^static bool xbm_image_p (Lisp_Object object);$/;"	p	file:	signature:(Lisp_Object object)
xbm_image_p	image.c	/^xbm_image_p (Lisp_Object object)$/;"	f	file:	signature:(Lisp_Object object)
xbm_keyword_index	image.c	/^enum xbm_keyword_index$/;"	g	file:
XBM_LAST	image.c	/^  XBM_LAST$/;"	e	enum:xbm_keyword_index	file:
xbm_load	image.c	/^static bool xbm_load (struct frame *f, struct image *img);$/;"	p	file:	signature:(struct frame *f, struct image *img)
xbm_load	image.c	/^xbm_load (struct frame *f, struct image *img)$/;"	f	file:	signature:(struct frame *f, struct image *img)
xbm_load_image	image.c	/^xbm_load_image (struct frame *f, struct image *img, char *contents, char *end)$/;"	f	file:	signature:(struct frame *f, struct image *img, char *contents, char *end)
XBM_MARGIN	image.c	/^  XBM_MARGIN,$/;"	e	enum:xbm_keyword_index	file:
XBM_MASK	image.c	/^  XBM_MASK,$/;"	e	enum:xbm_keyword_index	file:
xbm_read_bitmap_data	image.c	/^xbm_read_bitmap_data (struct frame *f, char *contents, char *end,$/;"	f	file:	signature:(struct frame *f, char *contents, char *end, int *width, int *height, char **data, bool inhibit_image_error)
XBM_RELIEF	image.c	/^  XBM_RELIEF,$/;"	e	enum:xbm_keyword_index	file:
xbm_scan	image.c	/^xbm_scan (char **s, char *end, char *sval, int *ival)$/;"	f	file:	signature:(char **s, char *end, char *sval, int *ival)
XBM_TK_IDENT	image.c	/^  XBM_TK_IDENT = 256,$/;"	e	enum:xbm_token	file:
XBM_TK_NUMBER	image.c	/^  XBM_TK_NUMBER,$/;"	e	enum:xbm_token	file:
XBM_TK_OVERFLOW	image.c	/^  XBM_TK_OVERFLOW$/;"	e	enum:xbm_token	file:
xbm_token	image.c	/^enum xbm_token$/;"	g	file:
XBM_TYPE	image.c	/^  XBM_TYPE,$/;"	e	enum:xbm_keyword_index	file:
xbm_type	image.c	/^static struct image_type xbm_type =$/;"	v	typeref:struct:image_type	file:
XBM_WIDTH	image.c	/^  XBM_WIDTH,$/;"	e	enum:xbm_keyword_index	file:
XBOOLFWD	data.c	/^XBOOLFWD (union Lisp_Fwd *a)$/;"	f	file:	signature:(union Lisp_Fwd *a)
XBOOL_VECTOR	lisp.h	/^XBOOL_VECTOR (Lisp_Object a)$/;"	f	signature:(Lisp_Object a)
XBUFFER	buffer.h	/^XBUFFER (Lisp_Object a)$/;"	f	signature:(Lisp_Object a)
XBUFFER_OBJFWD	lisp.h	/^XBUFFER_OBJFWD (union Lisp_Fwd *a)$/;"	f	signature:(union Lisp_Fwd *a)
XCAR	lisp.h	/^(XCAR) (Lisp_Object c)$/;"	f	signature:(Lisp_Object c)
XCAR	lisp.h	367;"	d
xcar_addr	lisp.h	/^xcar_addr (Lisp_Object c)$/;"	f	signature:(Lisp_Object c)
xcb_connection	xterm.h	/^  xcb_connection_t *xcb_connection;$/;"	m	struct:x_display_info	access:public
XCB_LIBS	Makefile	/^XCB_LIBS=-lX11-xcb -lxcb$/;"	m
XCDR	lisp.h	/^(XCDR) (Lisp_Object c)$/;"	f	signature:(Lisp_Object c)
XCDR	lisp.h	368;"	d
xcdr_addr	lisp.h	/^xcdr_addr (Lisp_Object c)$/;"	f	signature:(Lisp_Object c)
XChangeGC	w32term.c	/^XChangeGC (void *ignore, XGCValues *gc, unsigned long mask,$/;"	f	file:	signature:(void *ignore, XGCValues *gc, unsigned long mask, XGCValues *xgcv)
XChar2b	nsgui.h	/^typedef unichar XChar2b;$/;"	t
XChar2b	w32gui.h	55;"	d
XCHAR2B_BYTE1	nsgui.h	70;"	d
XCHAR2B_BYTE1	w32gui.h	61;"	d
XCHAR2B_BYTE1	xterm.h	1272;"	d
XCHAR2B_BYTE2	nsgui.h	73;"	d
XCHAR2B_BYTE2	w32gui.h	64;"	d
XCHAR2B_BYTE2	xterm.h	1275;"	d
XCharStruct	nsgui.h	/^} XCharStruct;$/;"	t	typeref:struct:_XCharStruct
XCHAR_TABLE	lisp.h	/^XCHAR_TABLE (Lisp_Object a)$/;"	f	signature:(Lisp_Object a)
XColor	dispextern.h	/^} XColor;$/;"	t	typeref:struct:__anon104
XColor	image.c	3176;"	d	file:
XColor	image.c	3185;"	d	file:
xcolor_to_argb32	image.c	/^xcolor_to_argb32 (XColor xc)$/;"	f	file:	signature:(XColor xc)
XCONDVAR	thread.h	/^XCONDVAR (Lisp_Object a)$/;"	f	signature:(Lisp_Object a)
XCONS	lisp.h	/^(XCONS) (Lisp_Object a)$/;"	f	signature:(Lisp_Object a)
XCONS	lisp.h	369;"	d
XCreateGC	w32term.c	/^XCreateGC (void *ignore, HWND wignore, unsigned long mask, XGCValues *xgcv)$/;"	f	signature:(void *ignore, HWND wignore, unsigned long mask, XGCValues *xgcv)
XCreateGC	w32term.h	/^XGCValues *XCreateGC (void *, HWND, unsigned long, XGCValues *);$/;"	p	signature:(void *, HWND, unsigned long, XGCValues *)
XDBE_CFLAGS	Makefile	/^XDBE_CFLAGS = $/;"	m
XDBE_LIBS	Makefile	/^XDBE_LIBS = -lXext$/;"	m
xdefaults	xrdb.c	/^static char const xdefaults[] = ".Xdefaults";$/;"	v	file:
xd_add_watch	dbusbind.c	/^xd_add_watch (DBusWatch *watch, void *data)$/;"	f	file:	signature:(DBusWatch *watch, void *data)
xd_append_arg	dbusbind.c	/^xd_append_arg (int dtype, Lisp_Object object, DBusMessageIter *iter)$/;"	f	file:	signature:(int dtype, Lisp_Object object, DBusMessageIter *iter)
XD_BASIC_DBUS_TYPE	dbusbind.c	128;"	d	file:
XD_BASIC_DBUS_TYPE	dbusbind.c	132;"	d	file:
XD_BASIC_DBUS_TYPE	dbusbind.c	147;"	d	file:
xd_close_bus	dbusbind.c	/^xd_close_bus (Lisp_Object bus)$/;"	f	file:	signature:(Lisp_Object bus)
XD_DBUS_TYPE_P	dbusbind.c	195;"	d	file:
XD_DBUS_VALIDATE_BUS_ADDRESS	dbusbind.c	243;"	d	file:
XD_DBUS_VALIDATE_BUS_NAME	dbusbind.c	293;"	d	file:
XD_DBUS_VALIDATE_BUS_NAME	dbusbind.c	296;"	d	file:
XD_DBUS_VALIDATE_INTERFACE	dbusbind.c	309;"	d	file:
XD_DBUS_VALIDATE_INTERFACE	dbusbind.c	312;"	d	file:
XD_DBUS_VALIDATE_MEMBER	dbusbind.c	317;"	d	file:
XD_DBUS_VALIDATE_MEMBER	dbusbind.c	320;"	d	file:
XD_DBUS_VALIDATE_OBJECT	dbusbind.c	277;"	d	file:
XD_DBUS_VALIDATE_PATH	dbusbind.c	301;"	d	file:
XD_DBUS_VALIDATE_PATH	dbusbind.c	304;"	d	file:
XD_DEBUG_MESSAGE	dbusbind.c	114;"	d	file:
XD_DEBUG_MESSAGE	dbusbind.c	96;"	d	file:
XD_DEBUG_VALID_LISP_OBJECT_P	dbusbind.c	104;"	d	file:
XD_DEBUG_VALID_LISP_OBJECT_P	dbusbind.c	123;"	d	file:
XD_ERROR	dbusbind.c	83;"	d	file:
xd_extract_signed	dbusbind.c	/^xd_extract_signed (Lisp_Object x, intmax_t lo, intmax_t hi)$/;"	f	file:	signature:(Lisp_Object x, intmax_t lo, intmax_t hi)
xd_extract_unsigned	dbusbind.c	/^xd_extract_unsigned (Lisp_Object x, uintmax_t hi)$/;"	f	file:	signature:(Lisp_Object x, uintmax_t hi)
xd_find_watch_fd	dbusbind.c	/^xd_find_watch_fd (DBusWatch *watch)$/;"	f	file:	signature:(DBusWatch *watch)
xd_get_connection_address	dbusbind.c	/^xd_get_connection_address (Lisp_Object bus)$/;"	f	file:	signature:(Lisp_Object bus)
xd_get_connection_references	dbusbind.c	/^xd_get_connection_references (DBusConnection *connection)$/;"	f	file:	signature:(DBusConnection *connection)
xd_in_read_queued_messages	dbusbind.c	/^static bool xd_in_read_queued_messages = 0;$/;"	v	file:
xd_lisp_dbus_to_dbus	dbusbind.c	/^xd_lisp_dbus_to_dbus (Lisp_Object bus)$/;"	f	file:	signature:(Lisp_Object bus)
XD_MESSAGE_TYPE_TO_STRING	dbusbind.c	223;"	d	file:
XD_NEXT_VALUE	dbusbind.c	218;"	d	file:
XD_OBJECT_TO_DBUS_TYPE	dbusbind.c	202;"	d	file:
XD_OBJECT_TO_STRING	dbusbind.c	/^XD_OBJECT_TO_STRING (Lisp_Object object)$/;"	f	file:	signature:(Lisp_Object object)
xd_read_message	dbusbind.c	/^xd_read_message (Lisp_Object bus)$/;"	f	file:	signature:(Lisp_Object bus)
xd_read_message_1	dbusbind.c	/^xd_read_message_1 (DBusConnection *connection, Lisp_Object bus)$/;"	f	file:	signature:(DBusConnection *connection, Lisp_Object bus)
xd_read_queued_messages	dbusbind.c	/^static void xd_read_queued_messages (int fd, void *data);$/;"	p	file:	signature:(int fd, void *data)
xd_read_queued_messages	dbusbind.c	/^xd_read_queued_messages (int fd, void *data)$/;"	f	file:	signature:(int fd, void *data)
xd_registered_buses	dbusbind.c	/^static Lisp_Object xd_registered_buses;$/;"	v	file:
xd_remove_watch	dbusbind.c	/^xd_remove_watch (DBusWatch *watch, void *data)$/;"	f	file:	signature:(DBusWatch *watch, void *data)
xd_retrieve_arg	dbusbind.c	/^xd_retrieve_arg (int dtype, DBusMessageIter *iter)$/;"	f	file:	signature:(int dtype, DBusMessageIter *iter)
XD_SIGNAL1	dbusbind.c	58;"	d	file:
XD_SIGNAL2	dbusbind.c	66;"	d	file:
XD_SIGNAL3	dbusbind.c	74;"	d	file:
xd_signature	dbusbind.c	/^xd_signature (char *signature, int dtype, int parent_type, Lisp_Object object)$/;"	f	file:	signature:(char *signature, int dtype, int parent_type, Lisp_Object object)
xd_signature_cat	dbusbind.c	/^xd_signature_cat (char *signature, char const *x)$/;"	f	file:	signature:(char *signature, char const *x)
xd_symbol_to_dbus_type	dbusbind.c	/^xd_symbol_to_dbus_type (Lisp_Object object)$/;"	f	file:	signature:(Lisp_Object object)
xd_toggle_watch	dbusbind.c	/^xd_toggle_watch (DBusWatch *watch, void *data)$/;"	f	file:	signature:(DBusWatch *watch, void *data)
XEMBED_ACTIVATE_ACCELERATOR	xterm.c	/^    XEMBED_ACTIVATE_ACCELERATOR   = 14$/;"	e	enum:xembed_message	file:
XEMBED_EMBEDDED_NOTIFY	xterm.c	/^    XEMBED_EMBEDDED_NOTIFY        = 0,$/;"	e	enum:xembed_message	file:
XEMBED_FOCUS_IN	xterm.c	/^    XEMBED_FOCUS_IN               = 4,$/;"	e	enum:xembed_message	file:
XEMBED_FOCUS_NEXT	xterm.c	/^    XEMBED_FOCUS_NEXT             = 6,$/;"	e	enum:xembed_message	file:
XEMBED_FOCUS_OUT	xterm.c	/^    XEMBED_FOCUS_OUT              = 5,$/;"	e	enum:xembed_message	file:
XEMBED_FOCUS_PREV	xterm.c	/^    XEMBED_FOCUS_PREV             = 7,$/;"	e	enum:xembed_message	file:
xembed_info	xterm.c	/^enum xembed_info$/;"	g	file:
XEMBED_MAPPED	xterm.c	/^    XEMBED_MAPPED = 1 << 0$/;"	e	enum:xembed_info	file:
xembed_message	xterm.c	/^enum xembed_message$/;"	g	file:
XEMBED_MODALITY_OFF	xterm.c	/^    XEMBED_MODALITY_OFF           = 11,$/;"	e	enum:xembed_message	file:
XEMBED_MODALITY_ON	xterm.c	/^    XEMBED_MODALITY_ON            = 10,$/;"	e	enum:xembed_message	file:
XEMBED_REGISTER_ACCELERATOR	xterm.c	/^    XEMBED_REGISTER_ACCELERATOR   = 12,$/;"	e	enum:xembed_message	file:
XEMBED_REQUEST_FOCUS	xterm.c	/^    XEMBED_REQUEST_FOCUS          = 3,$/;"	e	enum:xembed_message	file:
xembed_request_focus	xterm.c	/^xembed_request_focus (struct frame *f)$/;"	f	signature:(struct frame *f)
xembed_request_focus	xterm.h	/^extern void xembed_request_focus (struct frame *);$/;"	p	signature:(struct frame *)
xembed_send_message	xterm.c	/^static void xembed_send_message (struct frame *f, Time,$/;"	p	file:	signature:(struct frame *f, Time, enum xembed_message, long detail, long data1, long data2)
xembed_send_message	xterm.c	/^xembed_send_message (struct frame *f, Time t, enum xembed_message msg,$/;"	f	file:	signature:(struct frame *f, Time t, enum xembed_message msg, long int detail, long int data1, long int data2)
xembed_set_info	xterm.c	/^xembed_set_info (struct frame *f, enum xembed_info flags)$/;"	f	file:	signature:(struct frame *f, enum xembed_info flags)
XEMBED_UNREGISTER_ACCELERATOR	xterm.c	/^    XEMBED_UNREGISTER_ACCELERATOR = 13,$/;"	e	enum:xembed_message	file:
XEMBED_VERSION	xterm.c	11293;"	d	file:
XEMBED_WINDOW_ACTIVATE	xterm.c	/^    XEMBED_WINDOW_ACTIVATE        = 1,$/;"	e	enum:xembed_message	file:
XEMBED_WINDOW_DEACTIVATE	xterm.c	/^    XEMBED_WINDOW_DEACTIVATE      = 2,$/;"	e	enum:xembed_message	file:
XFASTINT	lisp.h	/^(XFASTINT) (Lisp_Object a)$/;"	f	signature:(Lisp_Object a)
XFASTINT	lisp.h	/^XFASTINT (Lisp_Object a)$/;"	f	signature:(Lisp_Object a)
XFASTINT	lisp.h	376;"	d
XFillRectangle	xterm.c	4002;"	d	file:
XFillRectangle	xterm.c	4117;"	d	file:
XFINALIZER	lisp.h	/^XFINALIZER (Lisp_Object a)$/;"	f	signature:(Lisp_Object a)
XFIXES_CFLAGS	Makefile	/^XFIXES_CFLAGS = $/;"	m
XFIXES_LIBS	Makefile	/^XFIXES_LIBS = -lXfixes$/;"	m
xfixes_toggle_visible_pointer	xterm.c	/^xfixes_toggle_visible_pointer (struct frame *f, bool invisible)$/;"	f	file:	signature:(struct frame *f, bool invisible)
XFLOAT	lisp.h	/^XFLOAT (Lisp_Object a)$/;"	f	signature:(Lisp_Object a)
XFLOATINT	lisp.h	/^XFLOATINT (Lisp_Object n)$/;"	f	signature:(Lisp_Object n)
XFLOAT_DATA	lisp.h	/^XFLOAT_DATA (Lisp_Object f)$/;"	f	signature:(Lisp_Object f)
XFLOAT_INIT	alloc.c	/^XFLOAT_INIT (Lisp_Object f, double n)$/;"	f	file:	signature:(Lisp_Object f, double n)
XFlush	xterm.c	269;"	d	file:
xfont	xfont.c	/^  XFontStruct *xfont;$/;"	m	struct:xfont_info	file:	access:public
xfont_chars_supported	xfont.c	/^xfont_chars_supported (Lisp_Object chars, XFontStruct *xfont,$/;"	f	file:	signature:(Lisp_Object chars, XFontStruct *xfont, struct charset *encoding, struct charset *repertory)
xfont_check	xfont.c	/^xfont_check (struct frame *f, struct font *font)$/;"	f	file:	signature:(struct frame *f, struct font *font)
xfont_close	xfont.c	/^xfont_close (struct font *font)$/;"	f	file:	signature:(struct font *font)
xfont_decode_coding_xlfd	xfont.c	/^xfont_decode_coding_xlfd (char *xlfd, int len, char *output)$/;"	f	file:	signature:(char *xlfd, int len, char *output)
xfont_draw	xfont.c	/^xfont_draw (struct glyph_string *s, int from, int to, int x, int y,$/;"	f	file:	signature:(struct glyph_string *s, int from, int to, int x, int y, bool with_background)
xfont_driver	xfont.c	/^struct font_driver const xfont_driver =$/;"	v
xfont_encode_char	xfont.c	/^xfont_encode_char (struct font *font, int c)$/;"	f	file:	signature:(struct font *font, int c)
xfont_encode_coding_xlfd	xfont.c	/^xfont_encode_coding_xlfd (char *xlfd)$/;"	f	file:	signature:(char *xlfd)
XFONT_ENTITY	font.h	/^XFONT_ENTITY (Lisp_Object p)$/;"	f	signature:(Lisp_Object p)
xfont_get_cache	font.h	/^extern Lisp_Object xfont_get_cache (struct frame *);$/;"	p	signature:(struct frame *)
xfont_get_cache	xfont.c	/^xfont_get_cache (struct frame *f)$/;"	f	signature:(struct frame *f)
xfont_get_pcm	xfont.c	/^static XCharStruct *xfont_get_pcm (XFontStruct *, XChar2b *);$/;"	p	file:	signature:(XFontStruct *, XChar2b *)
xfont_get_pcm	xfont.c	/^xfont_get_pcm (XFontStruct *xfont, XChar2b *char2b)$/;"	f	file:	signature:(XFontStruct *xfont, XChar2b *char2b)
xfont_has_char	xfont.c	/^xfont_has_char (Lisp_Object font, int c)$/;"	f	file:	signature:(Lisp_Object font, int c)
xfont_info	xfont.c	/^struct xfont_info$/;"	s	file:
xfont_info::display	xfont.c	/^  Display *display;$/;"	m	struct:xfont_info	file:	access:public
xfont_info::font	xfont.c	/^  struct font font;$/;"	m	struct:xfont_info	typeref:struct:xfont_info::font	file:	access:public
xfont_info::xfont	xfont.c	/^  XFontStruct *xfont;$/;"	m	struct:xfont_info	file:	access:public
xfont_info::x_display_id	xfont.c	/^  unsigned x_display_id;$/;"	m	struct:xfont_info	file:	access:public
xfont_list	xfont.c	/^xfont_list (struct frame *f, Lisp_Object spec)$/;"	f	file:	signature:(struct frame *f, Lisp_Object spec)
xfont_list_family	xfont.c	/^xfont_list_family (struct frame *f)$/;"	f	file:	signature:(struct frame *f)
xfont_list_pattern	xfont.c	/^xfont_list_pattern (Display *display, const char *pattern,$/;"	f	file:	signature:(Display *display, const char *pattern, Lisp_Object registry, Lisp_Object script)
xfont_match	xfont.c	/^xfont_match (struct frame *f, Lisp_Object spec)$/;"	f	file:	signature:(struct frame *f, Lisp_Object spec)
XFONT_OBJECT	font.h	/^XFONT_OBJECT (Lisp_Object p)$/;"	f	signature:(Lisp_Object p)
xfont_open	xfont.c	/^xfont_open (struct frame *f, Lisp_Object entity, int pixel_size)$/;"	f	file:	signature:(struct frame *f, Lisp_Object entity, int pixel_size)
xfont_prepare_face	xfont.c	/^xfont_prepare_face (struct frame *f, struct face *face)$/;"	f	file:	signature:(struct frame *f, struct face *face)
xfont_scratch_props	xfont.c	/^static Lisp_Object xfont_scratch_props;$/;"	v	file:
xfont_scripts_cache	xfont.c	/^static Lisp_Object xfont_scripts_cache;$/;"	v	file:
XFONT_SPEC	font.h	/^XFONT_SPEC (Lisp_Object p)$/;"	f	signature:(Lisp_Object p)
xfont_supported_scripts	xfont.c	/^xfont_supported_scripts (Display *display, char *fontname, Lisp_Object props,$/;"	f	file:	signature:(Display *display, char *fontname, Lisp_Object props, struct charset *encoding)
xfont_text_extents	xfont.c	/^xfont_text_extents (struct font *font, unsigned int *code,$/;"	f	file:	signature:(struct font *font, unsigned int *code, int nglyphs, struct font_metrics *metrics)
XFRAME	frame.h	713;"	d
xfree	alloc.c	/^xfree (void *block)$/;"	f	signature:(void *block)
xfree	lisp.h	/^extern void xfree (void *);$/;"	p	signature:(void *)
xftface_info	xftfont.c	/^struct xftface_info$/;"	s	file:
xftface_info::xft_bg	xftfont.c	/^  XftColor xft_bg;		\/* color for face->background *\/$/;"	m	struct:xftface_info	file:	access:public
xftface_info::xft_fg	xftfont.c	/^  XftColor xft_fg;		\/* color for face->foreground *\/$/;"	m	struct:xftface_info	file:	access:public
xftfont	xftfont.c	/^  XftFont *xftfont;$/;"	m	struct:xftfont_info	file:	access:public
xftfont_add_rendering_parameters	xftfont.c	/^xftfont_add_rendering_parameters (FcPattern *pat, Lisp_Object entity)$/;"	f	file:	signature:(FcPattern *pat, Lisp_Object entity)
xftfont_cached_font_ok	xftfont.c	/^xftfont_cached_font_ok (struct frame *f, Lisp_Object font_object,$/;"	f	file:	signature:(struct frame *f, Lisp_Object font_object, Lisp_Object entity)
xftfont_close	xftfont.c	/^xftfont_close (struct font *font)$/;"	f	file:	signature:(struct font *font)
xftfont_done_face	xftfont.c	/^xftfont_done_face (struct frame *f, struct face *face)$/;"	f	file:	signature:(struct frame *f, struct face *face)
xftfont_draw	xftfont.c	/^xftfont_draw (struct glyph_string *s, int from, int to, int x, int y,$/;"	f	file:	signature:(struct glyph_string *s, int from, int to, int x, int y, bool with_background)
xftfont_driver	xftfont.c	/^struct font_driver const xftfont_driver =$/;"	v
xftfont_drop_xrender_surfaces	xftfont.c	/^xftfont_drop_xrender_surfaces (struct frame *f)$/;"	f	file:	signature:(struct frame *f)
xftfont_encode_char	xftfont.c	/^xftfont_encode_char (struct font *font, int c)$/;"	f	file:	signature:(struct font *font, int c)
xftfont_end_for_frame	xftfont.c	/^xftfont_end_for_frame (struct frame *f)$/;"	f	file:	signature:(struct frame *f)
xftfont_fix_match	xftfont.c	/^xftfont_fix_match (FcPattern *pat, FcPattern *match)$/;"	f	file:	signature:(FcPattern *pat, FcPattern *match)
xftfont_get_colors	xftfont.c	/^xftfont_get_colors (struct frame *f, struct face *face, GC gc,$/;"	f	file:	signature:(struct frame *f, struct face *face, GC gc, struct xftface_info *xftface_info, XftColor *fg, XftColor *bg)
xftfont_get_xft_draw	xftfont.c	/^xftfont_get_xft_draw (struct frame *f)$/;"	f	file:	signature:(struct frame *f)
xftfont_has_char	xftfont.c	/^xftfont_has_char (Lisp_Object font, int c)$/;"	f	file:	signature:(Lisp_Object font, int c)
xftfont_info	xftfont.c	/^struct xftfont_info$/;"	s	file:
xftfont_info::display	xftfont.c	/^  Display *display;$/;"	m	struct:xftfont_info	file:	access:public
xftfont_info::font	xftfont.c	/^  struct font font;$/;"	m	struct:xftfont_info	typeref:struct:xftfont_info::font	file:	access:public
xftfont_info::ft_size	xftfont.c	/^  FT_Size ft_size;$/;"	m	struct:xftfont_info	file:	access:public
xftfont_info::index	xftfont.c	/^  int index;$/;"	m	struct:xftfont_info	file:	access:public
xftfont_info::matrix	xftfont.c	/^  FT_Matrix matrix;$/;"	m	struct:xftfont_info	file:	access:public
xftfont_info::maybe_otf	xftfont.c	/^  bool maybe_otf;	  \/* Flag to tell if this may be OTF or not.  *\/$/;"	m	struct:xftfont_info	file:	access:public
xftfont_info::otf	xftfont.c	/^  OTF *otf;$/;"	m	struct:xftfont_info	file:	access:public
xftfont_info::xftfont	xftfont.c	/^  XftFont *xftfont;$/;"	m	struct:xftfont_info	file:	access:public
xftfont_info::x_display_id	xftfont.c	/^  unsigned x_display_id;$/;"	m	struct:xftfont_info	file:	access:public
xftfont_list	xftfont.c	/^xftfont_list (struct frame *f, Lisp_Object spec)$/;"	f	file:	signature:(struct frame *f, Lisp_Object spec)
xftfont_match	xftfont.c	/^xftfont_match (struct frame *f, Lisp_Object spec)$/;"	f	file:	signature:(struct frame *f, Lisp_Object spec)
xftfont_open	xftfont.c	/^xftfont_open (struct frame *f, Lisp_Object entity, int pixel_size)$/;"	f	file:	signature:(struct frame *f, Lisp_Object entity, int pixel_size)
xftfont_prepare_face	xftfont.c	/^xftfont_prepare_face (struct frame *f, struct face *face)$/;"	f	file:	signature:(struct frame *f, struct face *face)
xftfont_shape	xftfont.c	/^xftfont_shape (Lisp_Object lgstring)$/;"	f	file:	signature:(Lisp_Object lgstring)
xftfont_text_extents	xftfont.c	/^xftfont_text_extents (struct font *font, unsigned int *code,$/;"	f	file:	signature:(struct font *font, unsigned int *code, int nglyphs, struct font_metrics *metrics)
xft_bg	xftfont.c	/^  XftColor xft_bg;		\/* color for face->background *\/$/;"	m	struct:xftface_info	file:	access:public
xft_fg	xftfont.c	/^  XftColor xft_fg;		\/* color for face->foreground *\/$/;"	m	struct:xftface_info	file:	access:public
xft_font_ascent_descent_override	globals.h	1091;"	d
XFT_LIBS	Makefile	/^XFT_LIBS=-lXrender -lXft$/;"	m
xft_settings_event	xsettings.c	/^xft_settings_event (struct x_display_info *dpyinfo, const XEvent *event)$/;"	f	signature:(struct x_display_info *dpyinfo, const XEvent *event)
xft_settings_event	xsettings.h	/^extern void xft_settings_event (struct x_display_info *, const XEvent *);$/;"	p	signature:(struct x_display_info *, const XEvent *)
XFWDTYPE	lisp.h	/^XFWDTYPE (union Lisp_Fwd *a)$/;"	f	signature:(union Lisp_Fwd *a)
XGCValues	nsgui.h	/^} XGCValues;$/;"	t	typeref:struct:_XGCValues
XGCValues	w32gui.h	/^} XGCValues;$/;"	t	typeref:struct:_XGCValues
XGetPixel	image.c	/^XGetPixel (XImagePtr ximage, int x, int y)$/;"	f	file:	signature:(XImagePtr ximage, int x, int y)
XGSELECT_H	xgselect.h	21;"	d
XGSELOBJ	Makefile	/^XGSELOBJ=xgselect.o$/;"	m
XG_BIN_CHILD	gtkutil.c	135;"	d	file:
xg_change_toolbar_position	gtkutil.c	/^xg_change_toolbar_position (struct frame *f, Lisp_Object pos)$/;"	f	signature:(struct frame *f, Lisp_Object pos)
xg_change_toolbar_position	gtkutil.h	/^extern void xg_change_toolbar_position (struct frame *f, Lisp_Object pos);$/;"	p	signature:(struct frame *f, Lisp_Object pos)
xg_check_special_colors	gtkutil.c	/^xg_check_special_colors (struct frame *f,$/;"	f	signature:(struct frame *f, const char *color_name, XColor *color)
xg_check_special_colors	gtkutil.h	/^extern bool xg_check_special_colors (struct frame *f,$/;"	p	signature:(struct frame *f, const char *color_name, XColor *color)
xg_crazy_callback_abort	xmenu.c	/^static bool xg_crazy_callback_abort;$/;"	v	file:
xg_create_default_cursor	gtkutil.c	/^xg_create_default_cursor (Display *dpy)$/;"	f	signature:(Display *dpy)
xg_create_default_cursor	gtkutil.h	/^extern GdkCursor * xg_create_default_cursor (Display *dpy);$/;"	p	signature:(Display *dpy)
xg_create_frame_widgets	gtkutil.c	/^xg_create_frame_widgets (struct frame *f)$/;"	f	signature:(struct frame *f)
xg_create_frame_widgets	gtkutil.h	/^extern bool xg_create_frame_widgets (struct frame *f);$/;"	p	signature:(struct frame *f)
xg_create_horizontal_scroll_bar	gtkutil.c	/^xg_create_horizontal_scroll_bar (struct frame *f,$/;"	f	signature:(struct frame *f, struct scroll_bar *bar, GCallback scroll_callback, GCallback end_callback, const char *scroll_bar_name)
xg_create_horizontal_scroll_bar	gtkutil.h	/^extern void xg_create_horizontal_scroll_bar (struct frame *f,$/;"	p	signature:(struct frame *f, struct scroll_bar *bar, GCallback scroll_callback, GCallback end_callback, const char *scroll_bar_name)
xg_create_one_menuitem	gtkutil.c	/^xg_create_one_menuitem (widget_value *item,$/;"	f	file:	signature:(widget_value *item, struct frame *f, GCallback select_cb, GCallback highlight_cb, xg_menu_cb_data *cl_data, GSList **group)
xg_create_scroll_bar	gtkutil.c	/^xg_create_scroll_bar (struct frame *f,$/;"	f	signature:(struct frame *f, struct scroll_bar *bar, GCallback scroll_callback, GCallback end_callback, const char *scroll_bar_name)
xg_create_scroll_bar	gtkutil.h	/^extern void xg_create_scroll_bar (struct frame *f,$/;"	p	signature:(struct frame *f, struct scroll_bar *bar, GCallback scroll_callback, GCallback end_callback, const char *scroll_bar_name)
xg_create_tool_bar	gtkutil.c	/^xg_create_tool_bar (struct frame *f)$/;"	f	file:	signature:(struct frame *f)
xg_create_widget	gtkutil.c	/^xg_create_widget (const char *type, const char *name, struct frame *f,$/;"	f	signature:(const char *type, const char *name, struct frame *f, widget_value *val, GCallback select_cb, GCallback deactivate_cb, GCallback highlight_cb)
xg_create_widget	gtkutil.h	/^extern GtkWidget *xg_create_widget (const char *type,$/;"	p	signature:(const char *type, const char *name, struct frame *f, struct _widget_value *val, GCallback select_cb, GCallback deactivate_cb, GCallback highlight_cb)
xg_cursor	xterm.h	/^  GdkCursor *xg_cursor;$/;"	m	struct:x_display_info	access:public
xg_default_icon_file	xterm.c	/^static Lisp_Object xg_default_icon_file;$/;"	v	file:
xg_destroy_widgets	gtkutil.c	/^xg_destroy_widgets (GList *list)$/;"	f	file:	signature:(GList *list)
xg_dialog_data	gtkutil.c	/^struct xg_dialog_data$/;"	s	file:
xg_dialog_data::loop	gtkutil.c	/^  GMainLoop *loop;$/;"	m	struct:xg_dialog_data	file:	access:public
xg_dialog_data::response	gtkutil.c	/^  int response;$/;"	m	struct:xg_dialog_data	file:	access:public
xg_dialog_data::timerid	gtkutil.c	/^  guint timerid;$/;"	m	struct:xg_dialog_data	file:	access:public
xg_dialog_data::w	gtkutil.c	/^  GtkWidget *w;$/;"	m	struct:xg_dialog_data	file:	access:public
xg_dialog_response_cb	gtkutil.c	/^xg_dialog_response_cb (GtkDialog *w,$/;"	f	file:	signature:(GtkDialog *w, gint response, gpointer user_data)
xg_dialog_run	gtkutil.c	/^xg_dialog_run (struct frame *f, GtkWidget *w)$/;"	f	file:	signature:(struct frame *f, GtkWidget *w)
xg_display_close	gtkutil.c	/^xg_display_close (Display *dpy)$/;"	f	signature:(Display *dpy)
xg_display_close	gtkutil.h	/^extern void xg_display_close (Display *dpy);$/;"	p	signature:(Display *dpy)
xg_display_open	gtkutil.c	/^xg_display_open (char *display_name, Display **dpy)$/;"	f	signature:(char *display_name, Display **dpy)
xg_display_open	gtkutil.h	/^extern void xg_display_open (char *display_name, Display **dpy);$/;"	p	signature:(char *display_name, Display **dpy)
xg_end_scroll_callback	xterm.c	/^xg_end_scroll_callback (GtkWidget *widget,$/;"	f	file:	signature:(GtkWidget *widget, GdkEventButton *event, gpointer user_data)
xg_event_is_for_menubar	gtkutil.c	/^xg_event_is_for_menubar (struct frame *f, const XEvent *event)$/;"	f	signature:(struct frame *f, const XEvent *event)
xg_event_is_for_menubar	gtkutil.h	/^extern bool xg_event_is_for_menubar (struct frame *, const XEvent *);$/;"	p	signature:(struct frame *, const XEvent *)
xg_event_is_for_scrollbar	gtkutil.c	/^xg_event_is_for_scrollbar (struct frame *f, const XEvent *event)$/;"	f	signature:(struct frame *f, const XEvent *event)
xg_event_is_for_scrollbar	gtkutil.h	/^extern bool xg_event_is_for_scrollbar (struct frame *, const XEvent *);$/;"	p	signature:(struct frame *, const XEvent *)
xg_finish_scroll_bar_creation	gtkutil.c	/^xg_finish_scroll_bar_creation (struct frame *f,$/;"	f	file:	signature:(struct frame *f, GtkWidget *wscroll, struct scroll_bar *bar, GCallback scroll_callback, GCallback end_callback, const char *scroll_bar_name)
XG_FRAME_DATA	gtkutil.h	40;"	d
xg_frame_resized	gtkutil.c	/^xg_frame_resized (struct frame *f, int pixelwidth, int pixelheight)$/;"	f	signature:(struct frame *f, int pixelwidth, int pixelheight)
xg_frame_resized	gtkutil.h	/^extern void xg_frame_resized (struct frame *f,$/;"	p	signature:(struct frame *f, int pixelwidth, int pixelheight)
xg_frame_restack	gtkutil.c	/^xg_frame_restack (struct frame *f1, struct frame *f2, bool above_flag)$/;"	f	signature:(struct frame *f1, struct frame *f2, bool above_flag)
xg_frame_restack	gtkutil.h	/^extern void xg_frame_restack (struct frame *f1, struct frame *f2, bool above);$/;"	p	signature:(struct frame *f1, struct frame *f2, bool above)
xg_frame_set_char_size	gtkutil.c	/^xg_frame_set_char_size (struct frame *f, int width, int height)$/;"	f	signature:(struct frame *f, int width, int height)
xg_frame_set_char_size	gtkutil.h	/^extern void xg_frame_set_char_size (struct frame *f, int width, int height);$/;"	p	signature:(struct frame *f, int width, int height)
xg_frame_tb_info	gtkutil.c	/^struct xg_frame_tb_info$/;"	s	file:
xg_frame_tb_info::dir	gtkutil.c	/^  GtkTextDirection dir;$/;"	m	struct:xg_frame_tb_info	file:	access:public
xg_frame_tb_info::hmargin	gtkutil.c	/^  int hmargin, vmargin;$/;"	m	struct:xg_frame_tb_info	file:	access:public
xg_frame_tb_info::last_tool_bar	gtkutil.c	/^  Lisp_Object last_tool_bar;$/;"	m	struct:xg_frame_tb_info	file:	access:public
xg_frame_tb_info::n_last_items	gtkutil.c	/^  int n_last_items;$/;"	m	struct:xg_frame_tb_info	file:	access:public
xg_frame_tb_info::style	gtkutil.c	/^  Lisp_Object style;$/;"	m	struct:xg_frame_tb_info	file:	access:public
xg_frame_tb_info::vmargin	gtkutil.c	/^  int hmargin, vmargin;$/;"	m	struct:xg_frame_tb_info	file:	access:public
xg_free_frame_widgets	gtkutil.c	/^xg_free_frame_widgets (struct frame *f)$/;"	f	signature:(struct frame *f)
xg_free_frame_widgets	gtkutil.h	/^extern void xg_free_frame_widgets (struct frame *f);$/;"	p	signature:(struct frame *f)
xg_get_default_scrollbar_height	gtkutil.c	/^xg_get_default_scrollbar_height (void)$/;"	f	signature:(void)
xg_get_default_scrollbar_height	gtkutil.h	/^extern int xg_get_default_scrollbar_height (void);$/;"	p	signature:(void)
xg_get_default_scrollbar_width	gtkutil.c	/^xg_get_default_scrollbar_width (void)$/;"	f	signature:(void)
xg_get_default_scrollbar_width	gtkutil.h	/^extern int xg_get_default_scrollbar_width (void);$/;"	p	signature:(void)
xg_get_file_func	gtkutil.c	/^typedef char * (*xg_get_file_func) (GtkWidget *);$/;"	t	file:
xg_get_file_name	gtkutil.c	/^xg_get_file_name (struct frame *f,$/;"	f	signature:(struct frame *f, char *prompt, char *default_filename, bool mustmatch_p, bool only_dir_p)
xg_get_file_name	gtkutil.h	/^extern char *xg_get_file_name (struct frame *f,$/;"	p	signature:(struct frame *f, char *prompt, char *default_filename, bool mustmatch_p, bool only_dir_p)
xg_get_file_name_from_chooser	gtkutil.c	/^xg_get_file_name_from_chooser (GtkWidget *w)$/;"	f	file:	signature:(GtkWidget *w)
xg_get_file_name_from_selector	gtkutil.c	/^xg_get_file_name_from_selector (GtkWidget *w)$/;"	f	file:	signature:(GtkWidget *w)
xg_get_file_with_chooser	gtkutil.c	/^xg_get_file_with_chooser (struct frame *f,$/;"	f	file:	signature:(struct frame *f, char *prompt, char *default_filename, bool mustmatch_p, bool only_dir_p, xg_get_file_func *func)
xg_get_file_with_selection	gtkutil.c	/^xg_get_file_with_selection (struct frame *f,$/;"	f	file:	signature:(struct frame *f, char *prompt, char *default_filename, bool mustmatch_p, bool only_dir_p, xg_get_file_func *func)
xg_get_font	gtkutil.c	/^xg_get_font (struct frame *f, const char *default_name)$/;"	f	signature:(struct frame *f, const char *default_name)
xg_get_font	gtkutil.h	/^extern Lisp_Object xg_get_font (struct frame *f, const char *);$/;"	p	signature:(struct frame *f, const char *)
xg_get_gdk_scale	gtkutil.c	/^xg_get_gdk_scale (void)$/;"	f	file:	signature:(void)
xg_get_image_for_pixmap	gtkutil.c	/^xg_get_image_for_pixmap (struct frame *f,$/;"	f	file:	signature:(struct frame *f, struct image *img, GtkWidget *widget, GtkImage *old_widget)
xg_get_menu_item_label	gtkutil.c	/^xg_get_menu_item_label (GtkMenuItem *witem)$/;"	f	file:	signature:(GtkMenuItem *witem)
xg_get_page_setup	gtkutil.c	/^xg_get_page_setup (void)$/;"	f	signature:(void)
xg_get_page_setup	gtkutil.h	/^extern Lisp_Object xg_get_page_setup (void);$/;"	p	signature:(void)
xg_get_pixbuf_from_pix_and_mask	gtkutil.c	/^xg_get_pixbuf_from_pix_and_mask (struct frame *f,$/;"	f	file:	signature:(struct frame *f, Pixmap pix, Pixmap mask)
xg_get_scroll_id_for_window	gtkutil.c	/^xg_get_scroll_id_for_window (Display *dpy, Window wid)$/;"	f	signature:(Display *dpy, Window wid)
xg_get_scroll_id_for_window	gtkutil.h	/^extern ptrdiff_t xg_get_scroll_id_for_window (Display *dpy, Window wid);$/;"	p	signature:(Display *dpy, Window wid)
xg_get_tool_bar_widgets	gtkutil.c	/^xg_get_tool_bar_widgets (GtkWidget *vb, GtkWidget **wimage)$/;"	f	file:	signature:(GtkWidget *vb, GtkWidget **wimage)
xg_get_widget_from_map	gtkutil.c	/^static GtkWidget * xg_get_widget_from_map (ptrdiff_t idx);$/;"	p	file:	signature:(ptrdiff_t idx)
xg_get_widget_from_map	gtkutil.c	/^xg_get_widget_from_map (ptrdiff_t idx)$/;"	f	file:	signature:(ptrdiff_t idx)
xg_gtk_scroll_destroy	gtkutil.c	/^xg_gtk_scroll_destroy (GtkWidget *widget, gpointer data)$/;"	f	file:	signature:(GtkWidget *widget, gpointer data)
xg_hide_tooltip	gtkutil.c	/^xg_hide_tooltip (struct frame *f)$/;"	f	signature:(struct frame *f)
xg_hide_tooltip	gtkutil.h	/^extern bool xg_hide_tooltip (struct frame *f);$/;"	p	signature:(struct frame *f)
xg_ignore_gtk_scrollbar	gtkutil.c	/^bool xg_ignore_gtk_scrollbar;$/;"	v
xg_initialize	gtkutil.c	/^xg_initialize (void)$/;"	f	signature:(void)
xg_initialize	gtkutil.h	/^extern void xg_initialize (void);$/;"	p	signature:(void)
XG_ITEM_DATA	gtkutil.h	43;"	d
xg_item_label_same_p	gtkutil.c	/^xg_item_label_same_p (GtkMenuItem *witem, const char *label)$/;"	f	file:	signature:(GtkMenuItem *witem, const char *label)
xg_list_insert	gtkutil.c	/^xg_list_insert (xg_list_node *list, xg_list_node *node)$/;"	f	file:	signature:(xg_list_node *list, xg_list_node *node)
xg_list_node	gtkutil.h	/^} xg_list_node;$/;"	t	typeref:struct:xg_list_node_
xg_list_node_	gtkutil.h	/^typedef struct xg_list_node_$/;"	s
xg_list_node_::next	gtkutil.h	/^  struct xg_list_node_ *next;$/;"	m	struct:xg_list_node_	typeref:struct:xg_list_node_::xg_list_node_	access:public
xg_list_node_::prev	gtkutil.h	/^  struct xg_list_node_ *prev;$/;"	m	struct:xg_list_node_	typeref:struct:xg_list_node_::xg_list_node_	access:public
xg_list_remove	gtkutil.c	/^xg_list_remove (xg_list_node *list, xg_list_node *node)$/;"	f	file:	signature:(xg_list_node *list, xg_list_node *node)
xg_make_tool_item	gtkutil.c	/^xg_make_tool_item (struct frame *f,$/;"	f	file:	signature:(struct frame *f, GtkWidget *wimage, GtkWidget **wbutton, const char *label, int i, bool horiz, bool text_image)
xg_mark_data	gtkutil.c	/^xg_mark_data (void)$/;"	f	signature:(void)
xg_mark_data	gtkutil.h	/^extern void xg_mark_data (void);$/;"	p	signature:(void)
xg_maybe_add_timer	gtkutil.c	/^xg_maybe_add_timer (gpointer data)$/;"	f	file:	signature:(gpointer data)
xg_menu_cb_data	gtkutil.h	/^} xg_menu_cb_data;$/;"	t	typeref:struct:xg_menu_cb_data_
xg_menu_cb_data_	gtkutil.h	/^typedef struct xg_menu_cb_data_$/;"	s
xg_menu_cb_data_::f	gtkutil.h	/^  struct frame  *f;$/;"	m	struct:xg_menu_cb_data_	typeref:struct:xg_menu_cb_data_::frame	access:public
xg_menu_cb_data_::highlight_cb	gtkutil.h	/^  GCallback     highlight_cb;$/;"	m	struct:xg_menu_cb_data_	access:public
xg_menu_cb_data_::menu_bar_items_used	gtkutil.h	/^  int           menu_bar_items_used;$/;"	m	struct:xg_menu_cb_data_	access:public
xg_menu_cb_data_::menu_bar_vector	gtkutil.h	/^  Lisp_Object   menu_bar_vector;$/;"	m	struct:xg_menu_cb_data_	access:public
xg_menu_cb_data_::ptrs	gtkutil.h	/^  xg_list_node  ptrs;$/;"	m	struct:xg_menu_cb_data_	access:public
xg_menu_cb_data_::ref_count	gtkutil.h	/^  int           ref_count;$/;"	m	struct:xg_menu_cb_data_	access:public
xg_menu_cb_list	gtkutil.c	/^static xg_list_node xg_menu_cb_list;$/;"	v	file:
xg_menu_item_cb_data	gtkutil.h	/^} xg_menu_item_cb_data;$/;"	t	typeref:struct:xg_menu_item_cb_data_
xg_menu_item_cb_data_	gtkutil.h	/^typedef struct xg_menu_item_cb_data_$/;"	s
xg_menu_item_cb_data_::call_data	gtkutil.h	/^  gpointer	call_data;$/;"	m	struct:xg_menu_item_cb_data_	access:public
xg_menu_item_cb_data_::cl_data	gtkutil.h	/^  xg_menu_cb_data *cl_data;$/;"	m	struct:xg_menu_item_cb_data_	access:public
xg_menu_item_cb_data_::help	gtkutil.h	/^  Lisp_Object   help;$/;"	m	struct:xg_menu_item_cb_data_	access:public
xg_menu_item_cb_data_::ptrs	gtkutil.h	/^  xg_list_node  ptrs;$/;"	m	struct:xg_menu_item_cb_data_	access:public
xg_menu_item_cb_data_::select_id	gtkutil.h	/^  gulong        select_id;$/;"	m	struct:xg_menu_item_cb_data_	access:public
xg_menu_item_cb_list	gtkutil.c	/^static xg_list_node xg_menu_item_cb_list;$/;"	v	file:
xg_modify_menubar_widgets	gtkutil.c	/^xg_modify_menubar_widgets (GtkWidget *menubar, struct frame *f,$/;"	f	signature:(GtkWidget *menubar, struct frame *f, widget_value *val, bool deep_p, GCallback select_cb, GCallback deactivate_cb, GCallback highlight_cb)
xg_modify_menubar_widgets	gtkutil.h	/^extern void xg_modify_menubar_widgets (GtkWidget *menubar,$/;"	p	signature:(GtkWidget *menubar, struct frame *f, struct _widget_value *val, bool deep_p, GCallback select_cb, GCallback deactivate_cb, GCallback highlight_cb)
xg_pack_tool_bar	gtkutil.c	/^xg_pack_tool_bar (struct frame *f, Lisp_Object pos)$/;"	f	file:	signature:(struct frame *f, Lisp_Object pos)
xg_page_setup_dialog	gtkutil.c	/^xg_page_setup_dialog (void)$/;"	f	signature:(void)
xg_page_setup_dialog	gtkutil.h	/^extern void xg_page_setup_dialog (void);$/;"	p	signature:(void)
xg_prepare_tooltip	gtkutil.c	/^xg_prepare_tooltip (struct frame *f,$/;"	f	signature:(struct frame *f, Lisp_Object string, int *width, int *height)
xg_prepare_tooltip	gtkutil.h	/^extern bool xg_prepare_tooltip (struct frame *f,$/;"	p	signature:(struct frame *f, Lisp_Object string, int *width, int *height)
xg_print_frames_dialog	gtkutil.c	/^xg_print_frames_dialog (Lisp_Object frames)$/;"	f	signature:(Lisp_Object frames)
xg_print_frames_dialog	gtkutil.h	/^extern void xg_print_frames_dialog (Lisp_Object);$/;"	p	signature:(Lisp_Object)
xg_remove_scroll_bar	gtkutil.c	/^xg_remove_scroll_bar (struct frame *f, ptrdiff_t scrollbar_id)$/;"	f	signature:(struct frame *f, ptrdiff_t scrollbar_id)
xg_remove_scroll_bar	gtkutil.h	/^extern void xg_remove_scroll_bar (struct frame *f, ptrdiff_t scrollbar_id);$/;"	p	signature:(struct frame *f, ptrdiff_t scrollbar_id)
xg_remove_widget_from_map	gtkutil.c	/^xg_remove_widget_from_map (ptrdiff_t idx)$/;"	f	file:	signature:(ptrdiff_t idx)
XG_SB_MAX	gtkutil.h	33;"	d
XG_SB_MIN	gtkutil.h	32;"	d
XG_SB_RANGE	gtkutil.h	34;"	d
xg_scroll_callback	xterm.c	/^xg_scroll_callback (GtkRange     *range,$/;"	f	file:	signature:(GtkRange *range, GtkScrollType scroll, gdouble value, gpointer user_data)
xg_select	xgselect.c	/^xg_select (int fds_lim, fd_set *rfds, fd_set *wfds, fd_set *efds,$/;"	f	signature:(int fds_lim, fd_set *rfds, fd_set *wfds, fd_set *efds, struct timespec *timeout, sigset_t *sigmask)
xg_select	xgselect.h	/^extern int xg_select (int max_fds,$/;"	p	signature:(int max_fds, fd_set *rfds, fd_set *wfds, fd_set *efds, struct timespec *timeout, sigset_t *sigmask)
xg_set_background_color	gtkutil.c	/^xg_set_background_color (struct frame *f, unsigned long bg)$/;"	f	signature:(struct frame *f, unsigned long bg)
xg_set_background_color	gtkutil.h	/^extern void xg_set_background_color (struct frame *f, unsigned long bg);$/;"	p	signature:(struct frame *f, unsigned long bg)
xg_set_cursor	gtkutil.c	/^xg_set_cursor (GtkWidget *w, GdkCursor *cursor)$/;"	f	file:	signature:(GtkWidget *w, GdkCursor *cursor)
xg_set_frame_icon	gtkutil.c	/^xg_set_frame_icon (struct frame *f, Pixmap icon_pixmap, Pixmap icon_mask)$/;"	f	signature:(struct frame *f, Pixmap icon_pixmap, Pixmap icon_mask)
xg_set_frame_icon	gtkutil.h	/^extern void xg_set_frame_icon (struct frame *f,$/;"	p	signature:(struct frame *f, Pixmap icon_pixmap, Pixmap icon_mask)
xg_set_geometry	gtkutil.c	/^xg_set_geometry (struct frame *f)$/;"	f	file:	signature:(struct frame *f)
xg_set_icon	xfns.c	/^xg_set_icon (struct frame *f, Lisp_Object file)$/;"	f	signature:(struct frame *f, Lisp_Object file)
xg_set_icon	xterm.h	/^extern bool xg_set_icon (struct frame *, Lisp_Object);$/;"	p	signature:(struct frame *, Lisp_Object)
xg_set_icon_from_xpm_data	xfns.c	/^xg_set_icon_from_xpm_data (struct frame *f, const char **data)$/;"	f	signature:(struct frame *f, const char **data)
xg_set_icon_from_xpm_data	xterm.h	/^extern bool xg_set_icon_from_xpm_data (struct frame *, const char **);$/;"	p	signature:(struct frame *, const char **)
xg_set_no_accept_focus	gtkutil.c	/^xg_set_no_accept_focus (struct frame *f, Lisp_Object no_accept_focus)$/;"	f	signature:(struct frame *f, Lisp_Object no_accept_focus)
xg_set_no_accept_focus	gtkutil.h	/^extern void xg_set_no_accept_focus (struct frame *f, Lisp_Object no_accept_focus);$/;"	p	signature:(struct frame *f, Lisp_Object no_accept_focus)
xg_set_no_focus_on_map	gtkutil.c	/^xg_set_no_focus_on_map (struct frame *f, Lisp_Object no_focus_on_map)$/;"	f	signature:(struct frame *f, Lisp_Object no_focus_on_map)
xg_set_no_focus_on_map	gtkutil.h	/^extern void xg_set_no_focus_on_map (struct frame *f, Lisp_Object no_focus_on_map);$/;"	p	signature:(struct frame *f, Lisp_Object no_focus_on_map)
xg_set_override_redirect	gtkutil.c	/^xg_set_override_redirect (struct frame *f, Lisp_Object override_redirect)$/;"	f	signature:(struct frame *f, Lisp_Object override_redirect)
xg_set_override_redirect	gtkutil.h	/^extern void xg_set_override_redirect (struct frame *f, Lisp_Object override_redirect);$/;"	p	signature:(struct frame *f, Lisp_Object override_redirect)
xg_set_screen	gtkutil.c	/^xg_set_screen (GtkWidget *w, struct frame *f)$/;"	f	file:	signature:(GtkWidget *w, struct frame *f)
xg_set_skip_taskbar	gtkutil.c	/^xg_set_skip_taskbar (struct frame *f, Lisp_Object skip_taskbar)$/;"	f	signature:(struct frame *f, Lisp_Object skip_taskbar)
xg_set_skip_taskbar	gtkutil.h	/^extern void xg_set_skip_taskbar (struct frame *f, Lisp_Object skip_taskbar);$/;"	p	signature:(struct frame *f, Lisp_Object skip_taskbar)
xg_set_toolkit_horizontal_scroll_bar_thumb	gtkutil.c	/^xg_set_toolkit_horizontal_scroll_bar_thumb (struct scroll_bar *bar,$/;"	f	signature:(struct scroll_bar *bar, int portion, int position, int whole)
xg_set_toolkit_horizontal_scroll_bar_thumb	gtkutil.h	/^extern void xg_set_toolkit_horizontal_scroll_bar_thumb (struct scroll_bar *bar,$/;"	p	signature:(struct scroll_bar *bar, int portion, int position, int whole)
xg_set_toolkit_scroll_bar_thumb	gtkutil.c	/^xg_set_toolkit_scroll_bar_thumb (struct scroll_bar *bar,$/;"	f	signature:(struct scroll_bar *bar, int portion, int position, int whole)
xg_set_toolkit_scroll_bar_thumb	gtkutil.h	/^extern void xg_set_toolkit_scroll_bar_thumb (struct scroll_bar *bar,$/;"	p	signature:(struct scroll_bar *bar, int portion, int position, int whole)
xg_set_undecorated	gtkutil.c	/^xg_set_undecorated (struct frame *f, Lisp_Object undecorated)$/;"	f	signature:(struct frame *f, Lisp_Object undecorated)
xg_set_undecorated	gtkutil.h	/^extern void xg_set_undecorated (struct frame *f, Lisp_Object undecorated);$/;"	p	signature:(struct frame *f, Lisp_Object undecorated)
xg_set_widget_bg	gtkutil.c	/^xg_set_widget_bg (struct frame *f, GtkWidget *w, unsigned long pixel)$/;"	f	file:	signature:(struct frame *f, GtkWidget *w, unsigned long pixel)
xg_show_tooltip	gtkutil.c	/^xg_show_tooltip (struct frame *f, int root_x, int root_y)$/;"	f	signature:(struct frame *f, int root_x, int root_y)
xg_show_tooltip	gtkutil.h	/^extern void xg_show_tooltip (struct frame *f, int root_x, int root_y);$/;"	p	signature:(struct frame *f, int root_x, int root_y)
xg_store_widget_in_map	gtkutil.c	/^xg_store_widget_in_map (GtkWidget *w)$/;"	f	file:	signature:(GtkWidget *w)
XG_STYLE_TO_SYMBOL	gtkutil.c	2173;"	d	file:
XG_TEXT_CANCEL	gtkutil.c	107;"	d	file:
XG_TEXT_CANCEL	gtkutil.c	111;"	d	file:
XG_TEXT_OK	gtkutil.c	108;"	d	file:
XG_TEXT_OK	gtkutil.c	112;"	d	file:
XG_TEXT_OPEN	gtkutil.c	109;"	d	file:
XG_TEXT_OPEN	gtkutil.c	113;"	d	file:
xg_toggle_notify_cb	gtkutil.c	/^xg_toggle_notify_cb (GObject *gobject, GParamSpec *arg1, gpointer user_data)$/;"	f	file:	signature:(GObject *gobject, GParamSpec *arg1, gpointer user_data)
xg_toggle_visibility_cb	gtkutil.c	/^xg_toggle_visibility_cb (GtkWidget *widget, gpointer data)$/;"	f	file:	signature:(GtkWidget *widget, gpointer data)
xg_tool_bar_button_cb	gtkutil.c	/^xg_tool_bar_button_cb (GtkWidget *widget,$/;"	f	file:	signature:(GtkWidget *widget, GdkEventButton *event, gpointer user_data)
xg_tool_bar_callback	gtkutil.c	/^xg_tool_bar_callback (GtkWidget *w, gpointer client_data)$/;"	f	file:	signature:(GtkWidget *w, gpointer client_data)
xg_tool_bar_help_callback	gtkutil.c	/^xg_tool_bar_help_callback (GtkWidget *w,$/;"	f	file:	signature:(GtkWidget *w, GdkEventCrossing *event, gpointer client_data)
XG_TOOL_BAR_ICON_NAME	gtkutil.c	4280;"	d	file:
XG_TOOL_BAR_IMAGE_DATA	gtkutil.c	4267;"	d	file:
xg_tool_bar_item_expose_callback	gtkutil.c	/^xg_tool_bar_item_expose_callback (GtkWidget *w,$/;"	f	file:	signature:(GtkWidget *w, GdkEventExpose *event, gpointer client_data)
XG_TOOL_BAR_LAST_MODIFIER	gtkutil.c	4271;"	d	file:
XG_TOOL_BAR_STOCK_NAME	gtkutil.c	4276;"	d	file:
xg_tool_item_stale_p	gtkutil.c	/^xg_tool_item_stale_p (GtkWidget *wbutton, const char *stock_name,$/;"	f	file:	signature:(GtkWidget *wbutton, const char *stock_name, const char *icon_name, const struct image *img, const char *label, bool horiz)
xg_update_frame_menubar	gtkutil.c	/^xg_update_frame_menubar (struct frame *f)$/;"	f	signature:(struct frame *f)
xg_update_frame_menubar	gtkutil.h	/^extern void xg_update_frame_menubar (struct frame *f);$/;"	p	signature:(struct frame *f)
xg_update_horizontal_scrollbar_pos	gtkutil.c	/^xg_update_horizontal_scrollbar_pos (struct frame *f,$/;"	f	signature:(struct frame *f, ptrdiff_t scrollbar_id, int top, int left, int width, int height)
xg_update_horizontal_scrollbar_pos	gtkutil.h	/^extern void xg_update_horizontal_scrollbar_pos (struct frame *f,$/;"	p	signature:(struct frame *f, ptrdiff_t scrollbar_id, int top, int left, int width, int height)
xg_update_menubar	gtkutil.c	/^xg_update_menubar (GtkWidget *menubar,$/;"	f	file:	signature:(GtkWidget *menubar, struct frame *f, GList **list, GList *iter, int pos, widget_value *val, GCallback select_cb, GCallback deactivate_cb, GCallback highlight_cb, xg_menu_cb_data *cl_data)
xg_update_menu_item	gtkutil.c	/^xg_update_menu_item (widget_value *val,$/;"	f	file:	signature:(widget_value *val, GtkWidget *w, GCallback select_cb, GCallback highlight_cb, xg_menu_cb_data *cl_data)
xg_update_radio_item	gtkutil.c	/^xg_update_radio_item (widget_value *val, GtkWidget *w)$/;"	f	file:	signature:(widget_value *val, GtkWidget *w)
xg_update_scrollbar_pos	gtkutil.c	/^xg_update_scrollbar_pos (struct frame *f,$/;"	f	signature:(struct frame *f, ptrdiff_t scrollbar_id, int top, int left, int width, int height)
xg_update_scrollbar_pos	gtkutil.h	/^extern void xg_update_scrollbar_pos (struct frame *f,$/;"	p	signature:(struct frame *f, ptrdiff_t scrollbar_id, int top, int left, int width, int height)
xg_update_submenu	gtkutil.c	/^xg_update_submenu (GtkWidget *submenu,$/;"	f	file:	signature:(GtkWidget *submenu, struct frame *f, widget_value *val, GCallback select_cb, GCallback deactivate_cb, GCallback highlight_cb, xg_menu_cb_data *cl_data)
xg_update_toggle_item	gtkutil.c	/^xg_update_toggle_item (widget_value *val, GtkWidget *w)$/;"	f	file:	signature:(widget_value *val, GtkWidget *w)
xg_update_tool_bar_sizes	gtkutil.c	/^static bool xg_update_tool_bar_sizes (struct frame *f);$/;"	p	file:	signature:(struct frame *f)
xg_update_tool_bar_sizes	gtkutil.c	/^xg_update_tool_bar_sizes (struct frame *f)$/;"	f	file:	signature:(struct frame *f)
xg_uses_old_file_dialog	gtkutil.c	/^xg_uses_old_file_dialog (void)$/;"	f	signature:(void)
xg_uses_old_file_dialog	gtkutil.h	/^extern bool xg_uses_old_file_dialog (void);$/;"	p	signature:(void)
XG_WEIGHT_TO_SYMBOL	gtkutil.c	2163;"	d	file:
xg_win_to_widget	gtkutil.c	/^xg_win_to_widget (Display *dpy, Window wdesc)$/;"	f	signature:(Display *dpy, Window wdesc)
xg_win_to_widget	gtkutil.h	/^extern GtkWidget * xg_win_to_widget (Display *dpy, Window wdesc);$/;"	p	signature:(Display *dpy, Window wdesc)
XG_XWIDGET	xwidget.h	107;"	d
XG_XWIDGET_VIEW	xwidget.h	108;"	d
XHASH	lisp.h	/^(XHASH) (Lisp_Object a)$/;"	f	signature:(Lisp_Object a)
XHASH	lisp.h	370;"	d
XHASH_TABLE	lisp.h	/^XHASH_TABLE (Lisp_Object a)$/;"	f	signature:(Lisp_Object a)
xic	xterm.h	/^  XIC xic;$/;"	m	struct:x_output	access:public
xic_create_fontsetname	xfns.c	/^xic_create_fontsetname (const char *base_fontname, bool motif)$/;"	f	signature:(const char *base_fontname, bool motif)
xic_create_fontsetname	xterm.h	/^extern char *xic_create_fontsetname (const char *, bool);$/;"	p	signature:(const char *, bool)
xic_create_xfontset	xfns.c	/^static XFontSet xic_create_xfontset (struct frame *);$/;"	p	file:	signature:(struct frame *)
xic_create_xfontset	xfns.c	/^xic_create_xfontset (struct frame *f)$/;"	f	file:	signature:(struct frame *f)
xic_default_fontset	xfns.c	/^static const char xic_default_fontset[] = "-*-*-*-r-normal--14-*-*-*-*-*-*-*";$/;"	v	file:
xic_free_xfontset	xfns.c	/^xic_free_xfontset (struct frame *f)$/;"	f	signature:(struct frame *f)
xic_free_xfontset	xterm.h	/^extern void xic_free_xfontset (struct frame *);$/;"	p	signature:(struct frame *)
xic_set_preeditarea	xfns.c	/^xic_set_preeditarea (struct window *w, int x, int y)$/;"	f	signature:(struct window *w, int x, int y)
xic_set_preeditarea	xterm.h	/^extern void xic_set_preeditarea (struct window *, int, int);$/;"	p	signature:(struct window *, int, int)
xic_set_statusarea	xfns.c	/^xic_set_statusarea (struct frame *f)$/;"	f	signature:(struct frame *f)
xic_set_statusarea	xterm.h	/^extern void xic_set_statusarea (struct frame *);$/;"	p	signature:(struct frame *)
xic_set_xfontset	xfns.c	/^xic_set_xfontset (struct frame *f, const char *base_fontname)$/;"	f	signature:(struct frame *f, const char *base_fontname)
xic_set_xfontset	xterm.h	/^extern void xic_set_xfontset (struct frame *, const char *);$/;"	p	signature:(struct frame *, const char *)
xic_style	xterm.h	/^  XIMStyle xic_style;$/;"	m	struct:x_output	access:public
xic_xfs	xterm.h	/^  XFontSet xic_xfs;$/;"	m	struct:x_output	access:public
XIL	lisp.h	/^(XIL) (EMACS_INT i)$/;"	f	signature:(EMACS_INT i)
XIL	lisp.h	350;"	d
xim	xterm.h	/^  XIM xim;$/;"	m	struct:x_display_info	access:public
XImage	image.c	3177;"	d	file:
XImage	image.c	3186;"	d	file:
XImage	w32gui.h	/^} XImage;$/;"	t	typeref:struct:_XImage
XImageFree	image.c	3461;"	d	file:
XImageFree	image.c	3466;"	d	file:
XImagePtr	dispextern.h	/^typedef Pixmap XImagePtr;$/;"	t
XImagePtr	dispextern.h	/^typedef XImage * XImagePtr;$/;"	t
XImagePtr	dispextern.h	/^typedef XImage *XImagePtr;$/;"	t
XImagePtr_or_DC	dispextern.h	/^typedef HDC XImagePtr_or_DC;$/;"	t
XImagePtr_or_DC	dispextern.h	/^typedef XImagePtr XImagePtr_or_DC;$/;"	t
ximg	dispextern.h	/^  XImagePtr ximg, mask_img;$/;"	m	struct:image	access:public
xim_callback_data	xterm.h	/^  struct xim_inst_t *xim_callback_data;$/;"	m	struct:x_display_info	typeref:struct:x_display_info::xim_inst_t	access:public
xim_close_dpy	xterm.c	/^xim_close_dpy (struct x_display_info *dpyinfo)$/;"	f	file:	signature:(struct x_display_info *dpyinfo)
xim_destroy_callback	xterm.c	/^xim_destroy_callback (XIM xim, XPointer client_data, XPointer call_data)$/;"	f	file:	signature:(XIM xim, XPointer client_data, XPointer call_data)
xim_initialize	xterm.c	/^xim_initialize (struct x_display_info *dpyinfo, char *resource_name)$/;"	f	file:	signature:(struct x_display_info *dpyinfo, char *resource_name)
xim_instantiate_callback	xterm.c	/^xim_instantiate_callback (Display *display, XPointer client_data, XPointer call_data)$/;"	f	file:	signature:(Display *display, XPointer client_data, XPointer call_data)
xim_inst_t	xterm.h	/^struct xim_inst_t$/;"	s
xim_inst_t::dpyinfo	xterm.h	/^  struct x_display_info *dpyinfo;$/;"	m	struct:xim_inst_t	typeref:struct:xim_inst_t::x_display_info	access:public
xim_inst_t::resource_name	xterm.h	/^  char *resource_name;$/;"	m	struct:xim_inst_t	access:public
xim_open_dpy	xterm.c	/^xim_open_dpy (struct x_display_info *dpyinfo, char *resource_name)$/;"	f	file:	signature:(struct x_display_info *dpyinfo, char *resource_name)
xim_styles	xterm.h	/^  XIMStyles *xim_styles;$/;"	m	struct:x_display_info	access:public
XINERAMA_CFLAGS	Makefile	/^XINERAMA_CFLAGS = $/;"	m
XINERAMA_LIBS	Makefile	/^XINERAMA_LIBS = -lXinerama$/;"	m
XINT	lisp.h	/^(XINT) (Lisp_Object a)$/;"	f	signature:(Lisp_Object a)
XINT	lisp.h	/^XINT (Lisp_Object a)$/;"	f	signature:(Lisp_Object a)
XINT	lisp.h	377;"	d
XINTFWD	data.c	/^XINTFWD (union Lisp_Fwd *a)$/;"	f	file:	signature:(union Lisp_Fwd *a)
XINTPTR	lisp.h	/^XINTPTR (Lisp_Object a)$/;"	f	signature:(Lisp_Object a)
XKBOARD_OBJFWD	data.c	/^XKBOARD_OBJFWD (union Lisp_Fwd *a)$/;"	f	file:	signature:(union Lisp_Fwd *a)
XLFD_ADSTYLE	xfaces.c	/^  XLFD_ADSTYLE,$/;"	e	enum:xlfd_field	file:
XLFD_ADSTYLE_INDEX	font.c	/^  XLFD_ADSTYLE_INDEX,$/;"	e	enum:xlfd_field_index	file:
XLFD_ADSTYLE_MASK	font.c	/^  XLFD_ADSTYLE_MASK = 0x0020,$/;"	e	enum:xlfd_field_mask	file:
XLFD_AVGWIDTH	xfaces.c	/^  XLFD_AVGWIDTH,$/;"	e	enum:xlfd_field	file:
XLFD_AVGWIDTH_INDEX	font.c	/^  XLFD_AVGWIDTH_INDEX,$/;"	e	enum:xlfd_field_index	file:
XLFD_AVGWIDTH_MASK	font.c	/^  XLFD_AVGWIDTH_MASK = 0x0800,$/;"	e	enum:xlfd_field_mask	file:
XLFD_ENCODING	xfaces.c	/^  XLFD_ENCODING,$/;"	e	enum:xlfd_field	file:
XLFD_ENCODING_INDEX	font.c	/^  XLFD_ENCODING_INDEX,$/;"	e	enum:xlfd_field_index	file:
XLFD_ENCODING_MASK	font.c	/^  XLFD_ENCODING_MASK = 0x2000$/;"	e	enum:xlfd_field_mask	file:
XLFD_FAMILY	xfaces.c	/^  XLFD_FAMILY,$/;"	e	enum:xlfd_field	file:
XLFD_FAMILY_INDEX	font.c	/^  XLFD_FAMILY_INDEX,$/;"	e	enum:xlfd_field_index	file:
XLFD_FAMILY_MASK	font.c	/^  XLFD_FAMILY_MASK = 0x0002,$/;"	e	enum:xlfd_field_mask	file:
xlfd_field	xfaces.c	/^enum xlfd_field$/;"	g	file:
xlfd_field_index	font.c	/^enum xlfd_field_index$/;"	g	file:
xlfd_field_mask	font.c	/^enum xlfd_field_mask$/;"	g	file:
XLFD_FOUNDRY	xfaces.c	/^  XLFD_FOUNDRY,$/;"	e	enum:xlfd_field	file:
XLFD_FOUNDRY_INDEX	font.c	/^  XLFD_FOUNDRY_INDEX,$/;"	e	enum:xlfd_field_index	file:
XLFD_FOUNDRY_MASK	font.c	/^  XLFD_FOUNDRY_MASK = 0x0001,$/;"	e	enum:xlfd_field_mask	file:
XLFD_LARGENUM_MASK	font.c	846;"	d	file:
XLFD_LAST	xfaces.c	/^  XLFD_LAST$/;"	e	enum:xlfd_field	file:
XLFD_LAST_INDEX	font.c	/^  XLFD_LAST_INDEX$/;"	e	enum:xlfd_field_index	file:
XLFD_NULL_MASK	font.c	845;"	d	file:
XLFD_PIXEL_INDEX	font.c	/^  XLFD_PIXEL_INDEX,$/;"	e	enum:xlfd_field_index	file:
XLFD_PIXEL_MASK	font.c	/^  XLFD_PIXEL_MASK = 0x0040,$/;"	e	enum:xlfd_field_mask	file:
XLFD_PIXEL_SIZE	xfaces.c	/^  XLFD_PIXEL_SIZE,$/;"	e	enum:xlfd_field	file:
XLFD_POINT_INDEX	font.c	/^  XLFD_POINT_INDEX,$/;"	e	enum:xlfd_field_index	file:
XLFD_POINT_MASK	font.c	/^  XLFD_POINT_MASK = 0x0080,$/;"	e	enum:xlfd_field_mask	file:
XLFD_POINT_SIZE	xfaces.c	/^  XLFD_POINT_SIZE,$/;"	e	enum:xlfd_field	file:
XLFD_REGENC_MASK	font.c	848;"	d	file:
XLFD_REGISTRY	xfaces.c	/^  XLFD_REGISTRY,$/;"	e	enum:xlfd_field	file:
XLFD_REGISTRY_INDEX	font.c	/^  XLFD_REGISTRY_INDEX,$/;"	e	enum:xlfd_field_index	file:
XLFD_REGISTRY_MASK	font.c	/^  XLFD_REGISTRY_MASK = 0x1000,$/;"	e	enum:xlfd_field_mask	file:
XLFD_RESX	xfaces.c	/^  XLFD_RESX,$/;"	e	enum:xlfd_field	file:
XLFD_RESX_INDEX	font.c	/^  XLFD_RESX_INDEX,$/;"	e	enum:xlfd_field_index	file:
XLFD_RESX_MASK	font.c	/^  XLFD_RESX_MASK = 0x0100,$/;"	e	enum:xlfd_field_mask	file:
XLFD_RESY	xfaces.c	/^  XLFD_RESY,$/;"	e	enum:xlfd_field	file:
XLFD_RESY_INDEX	font.c	/^  XLFD_RESY_INDEX,$/;"	e	enum:xlfd_field_index	file:
XLFD_RESY_MASK	font.c	/^  XLFD_RESY_MASK = 0x0200,$/;"	e	enum:xlfd_field_mask	file:
XLFD_SLANT	xfaces.c	/^  XLFD_SLANT,$/;"	e	enum:xlfd_field	file:
xlfd_slant	xfaces.c	/^enum xlfd_slant$/;"	g	file:
XLFD_SLANT_INDEX	font.c	/^  XLFD_SLANT_INDEX,$/;"	e	enum:xlfd_field_index	file:
XLFD_SLANT_ITALIC	xfaces.c	/^  XLFD_SLANT_ITALIC,$/;"	e	enum:xlfd_slant	file:
XLFD_SLANT_MASK	font.c	/^  XLFD_SLANT_MASK = 0x0008,$/;"	e	enum:xlfd_field_mask	file:
XLFD_SLANT_OBLIQUE	xfaces.c	/^  XLFD_SLANT_OBLIQUE,$/;"	e	enum:xlfd_slant	file:
XLFD_SLANT_OTHER	xfaces.c	/^  XLFD_SLANT_OTHER$/;"	e	enum:xlfd_slant	file:
XLFD_SLANT_REVERSE_ITALIC	xfaces.c	/^  XLFD_SLANT_REVERSE_ITALIC,$/;"	e	enum:xlfd_slant	file:
XLFD_SLANT_REVERSE_OBLIQUE	xfaces.c	/^  XLFD_SLANT_REVERSE_OBLIQUE,$/;"	e	enum:xlfd_slant	file:
XLFD_SLANT_ROMAN	xfaces.c	/^  XLFD_SLANT_ROMAN,$/;"	e	enum:xlfd_slant	file:
XLFD_SLANT_UNKNOWN	xfaces.c	/^  XLFD_SLANT_UNKNOWN,$/;"	e	enum:xlfd_slant	file:
XLFD_SPACING	xfaces.c	/^  XLFD_SPACING,$/;"	e	enum:xlfd_field	file:
XLFD_SPACING_INDEX	font.c	/^  XLFD_SPACING_INDEX,$/;"	e	enum:xlfd_field_index	file:
XLFD_SPACING_MASK	font.c	/^  XLFD_SPACING_MASK = 0x0400,$/;"	e	enum:xlfd_field_mask	file:
XLFD_SWIDTH	xfaces.c	/^  XLFD_SWIDTH,$/;"	e	enum:xlfd_field	file:
xlfd_swidth	xfaces.c	/^enum xlfd_swidth$/;"	g	file:
XLFD_SWIDTH_CONDENSED	xfaces.c	/^  XLFD_SWIDTH_CONDENSED,	\/* 30: Condensed, Narrow, Compressed, ... *\/$/;"	e	enum:xlfd_swidth	file:
XLFD_SWIDTH_EXPANDED	xfaces.c	/^  XLFD_SWIDTH_EXPANDED,		\/* 70: Expanded... *\/$/;"	e	enum:xlfd_swidth	file:
XLFD_SWIDTH_EXTRA_CONDENSED	xfaces.c	/^  XLFD_SWIDTH_EXTRA_CONDENSED,	\/* 20 *\/$/;"	e	enum:xlfd_swidth	file:
XLFD_SWIDTH_EXTRA_EXPANDED	xfaces.c	/^  XLFD_SWIDTH_EXTRA_EXPANDED,	\/* 80: ExtraExpanded, Wide...  *\/$/;"	e	enum:xlfd_swidth	file:
XLFD_SWIDTH_INDEX	font.c	/^  XLFD_SWIDTH_INDEX,$/;"	e	enum:xlfd_field_index	file:
XLFD_SWIDTH_MASK	font.c	/^  XLFD_SWIDTH_MASK = 0x0010,$/;"	e	enum:xlfd_field_mask	file:
XLFD_SWIDTH_MEDIUM	xfaces.c	/^  XLFD_SWIDTH_MEDIUM,		\/* 50: Medium, Normal, Regular, ... *\/$/;"	e	enum:xlfd_swidth	file:
XLFD_SWIDTH_SEMI_CONDENSED	xfaces.c	/^  XLFD_SWIDTH_SEMI_CONDENSED,	\/* 40: semicondensed *\/$/;"	e	enum:xlfd_swidth	file:
XLFD_SWIDTH_SEMI_EXPANDED	xfaces.c	/^  XLFD_SWIDTH_SEMI_EXPANDED,	\/* 60: SemiExpanded, DemiExpanded, ... *\/$/;"	e	enum:xlfd_swidth	file:
XLFD_SWIDTH_ULTRA_CONDENSED	xfaces.c	/^  XLFD_SWIDTH_ULTRA_CONDENSED,	\/* 10 *\/$/;"	e	enum:xlfd_swidth	file:
XLFD_SWIDTH_ULTRA_EXPANDED	xfaces.c	/^  XLFD_SWIDTH_ULTRA_EXPANDED	\/* 90: UltraExpanded... *\/$/;"	e	enum:xlfd_swidth	file:
XLFD_SWIDTH_UNKNOWN	xfaces.c	/^  XLFD_SWIDTH_UNKNOWN,$/;"	e	enum:xlfd_swidth	file:
XLFD_SYMBOL_MASK	font.c	843;"	d	file:
XLFD_WEIGHT	xfaces.c	/^  XLFD_WEIGHT,$/;"	e	enum:xlfd_field	file:
xlfd_weight	xfaces.c	/^enum xlfd_weight$/;"	g	file:
XLFD_WEIGHT_BOLD	xfaces.c	/^  XLFD_WEIGHT_BOLD,		\/* 70: Bold, ... *\/$/;"	e	enum:xlfd_weight	file:
XLFD_WEIGHT_EXTRA_BOLD	xfaces.c	/^  XLFD_WEIGHT_EXTRA_BOLD,	\/* 80: ExtraBold, Heavy, ...  *\/$/;"	e	enum:xlfd_weight	file:
XLFD_WEIGHT_EXTRA_LIGHT	xfaces.c	/^  XLFD_WEIGHT_EXTRA_LIGHT,	\/* 20 *\/$/;"	e	enum:xlfd_weight	file:
XLFD_WEIGHT_INDEX	font.c	/^  XLFD_WEIGHT_INDEX,$/;"	e	enum:xlfd_field_index	file:
XLFD_WEIGHT_LIGHT	xfaces.c	/^  XLFD_WEIGHT_LIGHT,		\/* 30 *\/$/;"	e	enum:xlfd_weight	file:
XLFD_WEIGHT_MASK	font.c	/^  XLFD_WEIGHT_MASK = 0x0004,$/;"	e	enum:xlfd_field_mask	file:
XLFD_WEIGHT_MEDIUM	xfaces.c	/^  XLFD_WEIGHT_MEDIUM,		\/* 50: Medium, Normal, Regular, ...  *\/$/;"	e	enum:xlfd_weight	file:
XLFD_WEIGHT_SEMI_BOLD	xfaces.c	/^  XLFD_WEIGHT_SEMI_BOLD,	\/* 60: SemiBold, DemiBold, ...  *\/$/;"	e	enum:xlfd_weight	file:
XLFD_WEIGHT_SEMI_LIGHT	xfaces.c	/^  XLFD_WEIGHT_SEMI_LIGHT,	\/* 40: SemiLight, Book, ...  *\/$/;"	e	enum:xlfd_weight	file:
XLFD_WEIGHT_ULTRA_BOLD	xfaces.c	/^  XLFD_WEIGHT_ULTRA_BOLD	\/* 90: UltraBold, Black, ...  *\/$/;"	e	enum:xlfd_weight	file:
XLFD_WEIGHT_ULTRA_LIGHT	xfaces.c	/^  XLFD_WEIGHT_ULTRA_LIGHT,	\/* 10 *\/$/;"	e	enum:xlfd_weight	file:
XLFD_WEIGHT_UNKNOWN	xfaces.c	/^  XLFD_WEIGHT_UNKNOWN,$/;"	e	enum:xlfd_weight	file:
XLI	lisp.h	/^(XLI) (Lisp_Object o)$/;"	f	signature:(Lisp_Object o)
XLI	lisp.h	349;"	d
xlispstrdup	alloc.c	/^xlispstrdup (Lisp_Object string)$/;"	f	signature:(Lisp_Object string)
XLI_BUILTIN_LISPSYM	lisp.h	723;"	d
xmalloc	alloc.c	/^xmalloc (size_t size)$/;"	f	signature:(size_t size)
xmalloc	regex.c	/^xmalloc (size_t size)$/;"	f	file:	signature:(size_t size)
XMALLOC_BASE_ALIGNMENT	alloc.c	646;"	d	file:
xmalloc_get_size	alloc.c	/^xmalloc_get_size (unsigned char *ptr)$/;"	f	file:	signature:(unsigned char *ptr)
XMALLOC_HEADER_ALIGNMENT	alloc.c	648;"	d	file:
xmalloc_overrun_check_header	alloc.c	/^static char const xmalloc_overrun_check_header[XMALLOC_OVERRUN_CHECK_SIZE] =$/;"	v	file:
XMALLOC_OVERRUN_CHECK_OVERHEAD	alloc.c	627;"	d	file:
XMALLOC_OVERRUN_CHECK_OVERHEAD	alloc.c	643;"	d	file:
XMALLOC_OVERRUN_CHECK_SIZE	alloc.c	642;"	d	file:
xmalloc_overrun_check_trailer	alloc.c	/^static char const xmalloc_overrun_check_trailer[XMALLOC_OVERRUN_CHECK_SIZE] =$/;"	v	file:
XMALLOC_OVERRUN_SIZE_SIZE	alloc.c	654;"	d	file:
xmalloc_put_size	alloc.c	/^xmalloc_put_size (unsigned char *ptr, size_t size)$/;"	f	file:	signature:(unsigned char *ptr, size_t size)
XMARKER	lisp.h	/^XMARKER (Lisp_Object a)$/;"	f	signature:(Lisp_Object a)
XMENU_OBJ	Makefile	/^XMENU_OBJ=xmenu.o$/;"	m
XMISC	lisp.h	/^XMISC (Lisp_Object a)$/;"	f	signature:(Lisp_Object a)
XMISCANY	lisp.h	/^XMISCANY (Lisp_Object a)$/;"	f	signature:(Lisp_Object a)
XMISCTYPE	lisp.h	/^XMISCTYPE (Lisp_Object a)$/;"	f	signature:(Lisp_Object a)
xmlCheckVersion	xml.c	54;"	d	file:
xmlCheckVersion	xml.c	61;"	d	file:
xmlCleanupParser	xml.c	55;"	d	file:
xmlCleanupParser	xml.c	62;"	d	file:
xmlDocGetRootElement	xml.c	56;"	d	file:
xmlDocGetRootElement	xml.c	63;"	d	file:
xmlFreeDoc	xml.c	57;"	d	file:
xmlFreeDoc	xml.c	64;"	d	file:
xmlReadMemory	xml.c	58;"	d	file:
xmlReadMemory	xml.c	65;"	d	file:
xml_cleanup_parser	lisp.h	/^extern void xml_cleanup_parser (void);$/;"	p	signature:(void)
xml_cleanup_parser	xml.c	/^xml_cleanup_parser (void)$/;"	f	signature:(void)
XMODULE_FUNCTION	lisp.h	/^XMODULE_FUNCTION (Lisp_Object o)$/;"	f	signature:(Lisp_Object o)
XMUTEX	thread.h	/^XMUTEX (Lisp_Object a)$/;"	f	signature:(Lisp_Object a)
XM_SB_MAX	xterm.c	5499;"	d	file:
xm_scroll_callback	xterm.c	/^xm_scroll_callback (Widget widget, XtPointer client_data, XtPointer call_data)$/;"	f	file:	signature:(Widget widget, XtPointer client_data, XtPointer call_data)
XNegative	nsgui.h	182;"	d
XNegative	w32gui.h	100;"	d
xnmalloc	alloc.c	/^xnmalloc (ptrdiff_t nitems, ptrdiff_t item_size)$/;"	f	signature:(ptrdiff_t nitems, ptrdiff_t item_size)
xnrealloc	alloc.c	/^xnrealloc (void *pa, ptrdiff_t nitems, ptrdiff_t item_size)$/;"	f	signature:(void *pa, ptrdiff_t nitems, ptrdiff_t item_size)
XNS_SCROLL_BAR	nsterm.h	1040;"	d
XNS_SCROLL_BAR	nsterm.h	1042;"	d
XOBJ	Makefile	/^XOBJ=xterm.o xfns.o xselect.o xrdb.o xsmfns.o xsettings.o$/;"	m
XOBJFWD	data.c	/^XOBJFWD (union Lisp_Fwd *a)$/;"	f	file:	signature:(union Lisp_Fwd *a)
XOVERLAY	lisp.h	/^XOVERLAY (Lisp_Object a)$/;"	f	signature:(Lisp_Object a)
xpalloc	alloc.c	/^xpalloc (void *pa, ptrdiff_t *nitems, ptrdiff_t nitems_incr_min,$/;"	f	signature:(void *pa, ptrdiff_t *nitems, ptrdiff_t nitems_incr_min, ptrdiff_t nitems_max, ptrdiff_t item_size)
xpalloc	lisp.h	/^extern void *xpalloc (void *, ptrdiff_t *, ptrdiff_t, ptrdiff_t, ptrdiff_t);$/;"	p	signature:(void *, ptrdiff_t *, ptrdiff_t, ptrdiff_t, ptrdiff_t)
XParseGeometry	frame.c	/^XParseGeometry (char *string,$/;"	f	file:	signature:(char *string, int *x, int *y, unsigned int *width, unsigned int *height)
XpmCreateImageFromBuffer	image.c	3462;"	d	file:
XpmCreateImageFromBuffer	image.c	3467;"	d	file:
XpmFreeAttributes	image.c	3463;"	d	file:
XpmFreeAttributes	image.c	3468;"	d	file:
XpmReadFileToImage	image.c	3464;"	d	file:
XpmReadFileToImage	image.c	3469;"	d	file:
XPM_ALGORITHM	image.c	/^  XPM_ALGORITHM,$/;"	e	enum:xpm_keyword_index	file:
xpm_alloc_color	image.c	/^xpm_alloc_color (Display *dpy, Colormap cmap, char *color_name, XColor *color,$/;"	f	file:	signature:(Display *dpy, Colormap cmap, char *color_name, XColor *color, void *closure)
XPM_ASCENT	image.c	/^  XPM_ASCENT,$/;"	e	enum:xpm_keyword_index	file:
XPM_BACKGROUND	image.c	/^  XPM_BACKGROUND,$/;"	e	enum:xpm_keyword_index	file:
xpm_cached_color	image.c	/^struct xpm_cached_color$/;"	s	file:
xpm_cached_color::color	image.c	/^  XColor color;$/;"	m	struct:xpm_cached_color	file:	access:public
xpm_cached_color::name	image.c	/^  char name[FLEXIBLE_ARRAY_MEMBER];$/;"	m	struct:xpm_cached_color	file:	access:public
xpm_cached_color::next	image.c	/^  struct xpm_cached_color *next;$/;"	m	struct:xpm_cached_color	typeref:struct:xpm_cached_color::xpm_cached_color	file:	access:public
xpm_cache_color	image.c	/^static struct xpm_cached_color *xpm_cache_color (struct frame *, char *,$/;"	p	file:	signature:(struct frame *, char *, XColor *, int)
xpm_cache_color	image.c	/^xpm_cache_color (struct frame *f, char *color_name, XColor *color, int bucket)$/;"	f	file:	signature:(struct frame *f, char *color_name, XColor *color, int bucket)
xpm_color_bucket	image.c	/^xpm_color_bucket (char *color_name)$/;"	f	file:	signature:(char *color_name)
xpm_color_cache	image.c	/^static struct xpm_cached_color **xpm_color_cache;$/;"	v	typeref:struct:xpm_cached_color	file:
XPM_COLOR_CACHE_BUCKETS	image.c	3291;"	d	file:
xpm_color_key	image.c	/^enum xpm_color_key {$/;"	g	file:
XPM_COLOR_KEY_C	image.c	/^  XPM_COLOR_KEY_C$/;"	e	enum:xpm_color_key	file:
XPM_COLOR_KEY_G	image.c	/^  XPM_COLOR_KEY_G,$/;"	e	enum:xpm_color_key	file:
XPM_COLOR_KEY_G4	image.c	/^  XPM_COLOR_KEY_G4,$/;"	e	enum:xpm_color_key	file:
XPM_COLOR_KEY_M	image.c	/^  XPM_COLOR_KEY_M,$/;"	e	enum:xpm_color_key	file:
XPM_COLOR_KEY_S	image.c	/^  XPM_COLOR_KEY_S,$/;"	e	enum:xpm_color_key	file:
xpm_color_key_strings	image.c	/^static const char xpm_color_key_strings[][4] = {"s", "m", "g4", "g", "c"};$/;"	v	file:
XPM_COLOR_SYMBOLS	image.c	/^  XPM_COLOR_SYMBOLS,$/;"	e	enum:xpm_keyword_index	file:
XPM_DATA	image.c	/^  XPM_DATA,$/;"	e	enum:xpm_keyword_index	file:
XPM_FILE	image.c	/^  XPM_FILE,$/;"	e	enum:xpm_keyword_index	file:
xpm_format	image.c	/^static const struct image_keyword xpm_format[XPM_LAST] =$/;"	v	typeref:struct:image_keyword	file:
xpm_free_colors	image.c	/^xpm_free_colors (Display *dpy, Colormap cmap, Pixel *pixels, int npixels, void *closure)$/;"	f	file:	signature:(Display *dpy, Colormap cmap, Pixel *pixels, int npixels, void *closure)
xpm_free_color_cache	image.c	/^xpm_free_color_cache (void)$/;"	f	file:	signature:(void)
xpm_get_color_table_h	image.c	/^static Lisp_Object xpm_get_color_table_h (Lisp_Object, const char *, int);$/;"	p	file:	signature:(Lisp_Object, const char *, int)
xpm_get_color_table_h	image.c	/^xpm_get_color_table_h (Lisp_Object color_table,$/;"	f	file:	signature:(Lisp_Object color_table, const char *chars_start, int chars_len)
xpm_get_color_table_v	image.c	/^static Lisp_Object xpm_get_color_table_v (Lisp_Object, const char *, int);$/;"	p	file:	signature:(Lisp_Object, const char *, int)
xpm_get_color_table_v	image.c	/^xpm_get_color_table_v (Lisp_Object color_table,$/;"	f	file:	signature:(Lisp_Object color_table, const char *chars_start, int chars_len)
XPM_HEURISTIC_MASK	image.c	/^  XPM_HEURISTIC_MASK,$/;"	e	enum:xpm_keyword_index	file:
xpm_image_p	image.c	/^static bool xpm_image_p (Lisp_Object object);$/;"	p	file:	signature:(Lisp_Object object)
xpm_image_p	image.c	/^xpm_image_p (Lisp_Object object)$/;"	f	file:	signature:(Lisp_Object object)
xpm_init_color_cache	image.c	/^xpm_init_color_cache (struct frame *f, XpmAttributes *attrs)$/;"	f	file:	signature:(struct frame *f, XpmAttributes *attrs)
xpm_keyword_index	image.c	/^enum xpm_keyword_index$/;"	g	file:
XPM_LAST	image.c	/^  XPM_LAST$/;"	e	enum:xpm_keyword_index	file:
xpm_load	image.c	/^static bool xpm_load (struct frame *f, struct image *img);$/;"	p	file:	signature:(struct frame *f, struct image *img)
xpm_load	image.c	/^xpm_load (struct frame *f, struct image *img)$/;"	f	file:	signature:(struct frame *f, struct image *img)
xpm_load	image.c	/^xpm_load (struct frame *f,$/;"	f	file:	signature:(struct frame *f, struct image *img)
xpm_load_image	image.c	/^xpm_load_image (struct frame *f,$/;"	f	file:	signature:(struct frame *f, struct image *img, const char *contents, const char *end)
xpm_lookup_color	image.c	/^xpm_lookup_color (struct frame *f, char *color_name, XColor *color)$/;"	f	file:	signature:(struct frame *f, char *color_name, XColor *color)
xpm_make_color_table_h	image.c	/^xpm_make_color_table_h (void (**put_func) (Lisp_Object, const char *, int,$/;"	f	file:	signature:(void (**put_func) (Lisp_Object, const char *, int, Lisp_Object), Lisp_Object (**get_func) (Lisp_Object, const char *, int))
xpm_make_color_table_v	image.c	/^xpm_make_color_table_v (void (**put_func) (Lisp_Object, const char *, int,$/;"	f	file:	signature:(void (**put_func) (Lisp_Object, const char *, int, Lisp_Object), Lisp_Object (**get_func) (Lisp_Object, const char *, int))
XPM_MARGIN	image.c	/^  XPM_MARGIN,$/;"	e	enum:xpm_keyword_index	file:
XPM_MASK	image.c	/^  XPM_MASK,$/;"	e	enum:xpm_keyword_index	file:
xpm_put_color_table_h	image.c	/^static void xpm_put_color_table_h (Lisp_Object, const char *,$/;"	p	file:	signature:(Lisp_Object, const char *, int, Lisp_Object)
xpm_put_color_table_h	image.c	/^xpm_put_color_table_h (Lisp_Object color_table,$/;"	f	file:	signature:(Lisp_Object color_table, const char *chars_start, int chars_len, Lisp_Object color)
xpm_put_color_table_v	image.c	/^static void xpm_put_color_table_v (Lisp_Object, const char *,$/;"	p	file:	signature:(Lisp_Object, const char *, int, Lisp_Object)
xpm_put_color_table_v	image.c	/^xpm_put_color_table_v (Lisp_Object color_table,$/;"	f	file:	signature:(Lisp_Object color_table, const char *chars_start, int chars_len, Lisp_Object color)
XPM_RELIEF	image.c	/^  XPM_RELIEF,$/;"	e	enum:xpm_keyword_index	file:
xpm_scan	image.c	/^xpm_scan (const char **s, const char *end, const char **beg, ptrdiff_t *len)$/;"	f	file:	signature:(const char **s, const char *end, const char **beg, ptrdiff_t *len)
xpm_str_to_color_key	image.c	/^xpm_str_to_color_key (const char *s)$/;"	f	file:	signature:(const char *s)
XPM_TK_EOF	image.c	/^  XPM_TK_EOF$/;"	e	enum:xpm_token	file:
XPM_TK_IDENT	image.c	/^  XPM_TK_IDENT = 256,$/;"	e	enum:xpm_token	file:
XPM_TK_STRING	image.c	/^  XPM_TK_STRING,$/;"	e	enum:xpm_token	file:
xpm_token	image.c	/^enum xpm_token$/;"	g	file:
XPM_TYPE	image.c	/^  XPM_TYPE,$/;"	e	enum:xpm_keyword_index	file:
xpm_type	image.c	/^static struct image_type xpm_type =$/;"	v	typeref:struct:image_type	file:
xpm_valid_color_symbols_p	image.c	/^xpm_valid_color_symbols_p (Lisp_Object color_symbols)$/;"	f	file:	signature:(Lisp_Object color_symbols)
XPNTR	alloc.c	/^XPNTR (Lisp_Object a)$/;"	f	file:	signature:(Lisp_Object a)
XPNTR	alloc.c	533;"	d	file:
XPNTR_OR_SYMBOL_OFFSET	alloc.c	/^XPNTR_OR_SYMBOL_OFFSET (Lisp_Object a)$/;"	f	file:	signature:(Lisp_Object a)
XPNTR_OR_SYMBOL_OFFSET	alloc.c	532;"	d	file:
XPROCESS	process.h	/^XPROCESS (Lisp_Object a)$/;"	f	signature:(Lisp_Object a)
xputenv	alloc.c	/^xputenv (char const *string)$/;"	f	signature:(char const *string)
xputenv	lisp.h	/^extern void xputenv (const char *);$/;"	p	signature:(const char *)
XPutPixel	image.c	/^XPutPixel (XImagePtr ximage, int x, int y, unsigned long pixel)$/;"	f	file:	signature:(XImagePtr ximage, int x, int y, unsigned long pixel)
XPutPixel	image.c	/^XPutPixel (XImagePtr ximg, int x, int y, COLORREF color)$/;"	f	file:	signature:(XImagePtr ximg, int x, int y, COLORREF color)
XRANDR_CFLAGS	Makefile	/^XRANDR_CFLAGS = $/;"	m
XRANDR_LIBS	Makefile	/^XRANDR_LIBS = -lXrandr$/;"	m
xrandr_major_version	xterm.h	/^  int xrandr_major_version;$/;"	m	struct:x_display_info	access:public
xrandr_minor_version	xterm.h	/^  int xrandr_minor_version;$/;"	m	struct:x_display_info	access:public
xrdb	nsterm.h	/^  XrmDatabase xrdb;$/;"	m	struct:ns_display_info	access:public
xrdb	w32term.h	/^  XrmDatabase xrdb;$/;"	m	struct:w32_display_info	access:public
xrdb	xterm.h	/^  XrmDatabase xrdb;$/;"	m	struct:x_display_info	access:public
xrdb_get_resource	frame.c	/^xrdb_get_resource (XrmDatabase rdb, Lisp_Object attribute, Lisp_Object class, Lisp_Object component, Lisp_Object subclass)$/;"	f	file:	signature:(XrmDatabase rdb, Lisp_Object attribute, Lisp_Object class, Lisp_Object component, Lisp_Object subclass)
xrealloc	alloc.c	/^xrealloc (void *block, size_t size)$/;"	f	signature:(void *block, size_t size)
xrealloc	regex.c	/^xrealloc (void *block, size_t size)$/;"	f	file:	signature:(void *block, size_t size)
XRectangle	nsgui.h	/^} XRectangle;$/;"	t	typeref:struct:__anon46
XRectangle	w32gui.h	/^} XRectangle;$/;"	t	typeref:struct:__anon86
XRegisterIMInstantiateCallback_arg6	config.h	1751;"	d
XrmDatabase	nsgui.h	/^typedef Lisp_Object XrmDatabase;$/;"	t
XrmDatabase	w32gui.h	/^typedef char * XrmDatabase;$/;"	t
XrmStringType	xrdb.c	398;"	d	file:
xrm_string	w32fns.c	/^  (Lisp_Object display, Lisp_Object xrm_string, Lisp_Object must_succeed)$/;"	v
xrm_string	xfns.c	/^  (Lisp_Object display, Lisp_Object xrm_string, Lisp_Object must_succeed)$/;"	v
XSAVE_FUNCPOINTER	lisp.h	/^XSAVE_FUNCPOINTER (Lisp_Object obj, int n)$/;"	f	signature:(Lisp_Object obj, int n)
XSAVE_INTEGER	lisp.h	/^XSAVE_INTEGER (Lisp_Object obj, int n)$/;"	f	signature:(Lisp_Object obj, int n)
XSAVE_OBJECT	lisp.h	/^XSAVE_OBJECT (Lisp_Object obj, int n)$/;"	f	signature:(Lisp_Object obj, int n)
XSAVE_POINTER	lisp.h	/^XSAVE_POINTER (Lisp_Object obj, int n)$/;"	f	signature:(Lisp_Object obj, int n)
XSAVE_VALUE	lisp.h	/^XSAVE_VALUE (Lisp_Object a)$/;"	f	signature:(Lisp_Object a)
XScreenNumberOfScreen	xfns.c	/^XScreenNumberOfScreen (scr)$/;"	f
XSCROLL_BAR	w32term.h	476;"	d
XSCROLL_BAR	xterm.h	934;"	d
XSETBOOL_VECTOR	lisp.h	1072;"	d
XSETBUFFER	lisp.h	1070;"	d
XSETCAR	lisp.h	/^XSETCAR (Lisp_Object c, Lisp_Object n)$/;"	f	signature:(Lisp_Object c, Lisp_Object n)
XSETCDR	lisp.h	/^XSETCDR (Lisp_Object c, Lisp_Object n)$/;"	f	signature:(Lisp_Object c, Lisp_Object n)
XSETCHAR_TABLE	lisp.h	1071;"	d
XSETCOMPILED	lisp.h	1069;"	d
XSETCONDVAR	lisp.h	1076;"	d
XSETCONS	lisp.h	1034;"	d
XSETFASTINT	lisp.h	1033;"	d
XSETFLOAT	lisp.h	1038;"	d
XSETFONT	font.h	531;"	d
XSETFRAME	frame.h	715;"	d
XSETINT	lisp.h	1032;"	d
XSETMISC	lisp.h	1039;"	d
XSETMUTEX	lisp.h	1075;"	d
XSETPROCESS	lisp.h	1065;"	d
XSETPSEUDOVECTOR	lisp.h	1052;"	d
XSETPVECTYPE	lisp.h	1043;"	d
XSETPVECTYPESIZE	lisp.h	1045;"	d
XSETSTRING	lisp.h	1036;"	d
XSETSUBR	lisp.h	1068;"	d
XSETSUB_CHAR_TABLE	lisp.h	1073;"	d
XSETSYMBOL	lisp.h	1037;"	d
XSETTERMINAL	lisp.h	1067;"	d
XSETTHREAD	lisp.h	1074;"	d
xsettings	xsettings.c	/^struct xsettings$/;"	s	file:
xsettings::aa	xsettings.c	/^  FcBool aa, hinting;$/;"	m	struct:xsettings	file:	access:public
xsettings::dpi	xsettings.c	/^  double dpi;$/;"	m	struct:xsettings	file:	access:public
xsettings::font	xsettings.c	/^  char *font;$/;"	m	struct:xsettings	file:	access:public
xsettings::hinting	xsettings.c	/^  FcBool aa, hinting;$/;"	m	struct:xsettings	file:	access:public
xsettings::hintstyle	xsettings.c	/^  int rgba, lcdfilter, hintstyle;$/;"	m	struct:xsettings	file:	access:public
xsettings::lcdfilter	xsettings.c	/^  int rgba, lcdfilter, hintstyle;$/;"	m	struct:xsettings	file:	access:public
xsettings::rgba	xsettings.c	/^  int rgba, lcdfilter, hintstyle;$/;"	m	struct:xsettings	file:	access:public
xsettings::seen	xsettings.c	/^  unsigned seen;$/;"	m	struct:xsettings	file:	access:public
xsettings::tb_style	xsettings.c	/^  char *tb_style;$/;"	m	struct:xsettings	file:	access:public
XSETTINGS_FONT_NAME	xsettings.c	160;"	d	file:
xsettings_get_system_font	xsettings.c	/^xsettings_get_system_font (void)$/;"	f	signature:(void)
xsettings_get_system_font	xsettings.h	/^extern const char *xsettings_get_system_font (void);$/;"	p	signature:(void)
xsettings_get_system_normal_font	xsettings.c	/^xsettings_get_system_normal_font (void)$/;"	f	signature:(void)
xsettings_get_system_normal_font	xsettings.h	/^extern const char *xsettings_get_system_normal_font (void);$/;"	p	signature:(void)
XSETTINGS_H	xsettings.h	21;"	d
xsettings_initialize	xsettings.c	/^xsettings_initialize (struct x_display_info *dpyinfo)$/;"	f	signature:(struct x_display_info *dpyinfo)
xsettings_initialize	xsettings.h	/^extern void xsettings_initialize (struct x_display_info *);$/;"	p	signature:(struct x_display_info *)
XSETTINGS_TOOL_BAR_STYLE	xsettings.c	162;"	d	file:
xsettings_window	xterm.h	/^  Window xsettings_window;$/;"	m	struct:x_display_info	access:public
XSETTYPED_PSEUDOVECTOR	lisp.h	1058;"	d
XSETVECTOR	lisp.h	1035;"	d
XSETWINDOW	lisp.h	1066;"	d
XSETWINDOW_CONFIGURATION	lisp.h	1063;"	d
XSetWMNormalHints	emacsgtkfixed.c	/^XSetWMNormalHints (Display *d, Window w, XSizeHints *hints)$/;"	f	signature:(Display *d, Window w, XSizeHints *hints)
XSetWMSizeHints	emacsgtkfixed.c	/^XSetWMSizeHints (Display *d,$/;"	f	signature:(Display *d, Window w, XSizeHints *hints, Atom prop)
XSETXWIDGET	xwidget.c	46;"	d	file:
XSETXWIDGET_VIEW	xwidget.c	47;"	d	file:
XSET_HASH_TABLE	lisp.h	2037;"	d
XSET_MODULE_FUNCTION	emacs-module.c	416;"	d	file:
xsignal	lisp.h	/^xsignal (Lisp_Object error_symbol, Lisp_Object data)$/;"	f	signature:(Lisp_Object error_symbol, Lisp_Object data)
xsignal0	eval.c	/^xsignal0 (Lisp_Object error_symbol)$/;"	f	signature:(Lisp_Object error_symbol)
xsignal0	lisp.h	/^extern _Noreturn void xsignal0 (Lisp_Object);$/;"	p	signature:(Lisp_Object)
xsignal1	eval.c	/^xsignal1 (Lisp_Object error_symbol, Lisp_Object arg)$/;"	f	signature:(Lisp_Object error_symbol, Lisp_Object arg)
xsignal1	lisp.h	/^extern _Noreturn void xsignal1 (Lisp_Object, Lisp_Object);$/;"	p	signature:(Lisp_Object, Lisp_Object)
xsignal2	eval.c	/^xsignal2 (Lisp_Object error_symbol, Lisp_Object arg1, Lisp_Object arg2)$/;"	f	signature:(Lisp_Object error_symbol, Lisp_Object arg1, Lisp_Object arg2)
xsignal2	lisp.h	/^extern _Noreturn void xsignal2 (Lisp_Object, Lisp_Object, Lisp_Object);$/;"	p	signature:(Lisp_Object, Lisp_Object, Lisp_Object)
xsignal3	eval.c	/^xsignal3 (Lisp_Object error_symbol, Lisp_Object arg1, Lisp_Object arg2, Lisp_Object arg3)$/;"	f	signature:(Lisp_Object error_symbol, Lisp_Object arg1, Lisp_Object arg2, Lisp_Object arg3)
xsignal3	lisp.h	/^extern _Noreturn void xsignal3 (Lisp_Object, Lisp_Object, Lisp_Object,$/;"	p	signature:(Lisp_Object, Lisp_Object, Lisp_Object, Lisp_Object)
xstrcasecmp	dispextern.h	/^xstrcasecmp (char const *a, char const *b)$/;"	f	signature:(char const *a, char const *b)
xstrdup	alloc.c	/^xstrdup (const char *s)$/;"	f	signature:(const char *s)
XSTRING	lisp.h	/^XSTRING (Lisp_Object a)$/;"	f	signature:(Lisp_Object a)
XSUBR	lisp.h	/^XSUBR (Lisp_Object a)$/;"	f	signature:(Lisp_Object a)
XSUB_CHAR_TABLE	lisp.h	/^XSUB_CHAR_TABLE (Lisp_Object a)$/;"	f	signature:(Lisp_Object a)
XSYMBOL	lisp.h	/^(XSYMBOL) (Lisp_Object a)$/;"	f	signature:(Lisp_Object a)
XSYMBOL	lisp.h	378;"	d
XSync	xterm.h	54;"	d
XSync	xterm.h	55;"	d
XTbuffer_flipping_unblocked_hook	xterm.c	/^XTbuffer_flipping_unblocked_hook (struct frame *f)$/;"	f	file:	signature:(struct frame *f)
XtCBarCursor	widget.h	51;"	d
XtCBellVolume	widget.h	55;"	d
XtCCursorColor	widget.h	49;"	d
XtCEmacsFrame	widget.h	67;"	d
XtCFont	widget.h	39;"	d
XtCForeground	widget.h	45;"	d
XtCGeometry	widget.h	73;"	d
XtCInitialGeometry	widget.h	86;"	d
XtCInterline	widget.h	33;"	d
XtCInternalBorderWidth	widget.h	31;"	d
XtCMinibuffer	widget.h	27;"	d
XTcondemn_scroll_bars	xterm.c	/^XTcondemn_scroll_bars (struct frame *frame)$/;"	f	file:	signature:(struct frame *frame)
XtCUnsplittable	widget.h	29;"	d
XtCVisualBell	widget.h	54;"	d
XTERMINAL	termhooks.h	/^XTERMINAL (Lisp_Object a)$/;"	f	signature:(Lisp_Object a)
XTERM_H	xterm.h	21;"	d
XTflash	xterm.c	/^XTflash (struct frame *f)$/;"	f	file:	signature:(struct frame *f)
XTframe_raise_lower	xterm.c	/^XTframe_raise_lower (struct frame *f, bool raise_flag)$/;"	f	file:	signature:(struct frame *f, bool raise_flag)
XTframe_rehighlight	xterm.c	/^XTframe_rehighlight (struct frame *frame)$/;"	f	file:	signature:(struct frame *frame)
XTframe_up_to_date	xterm.c	/^XTframe_up_to_date (struct frame *f)$/;"	f	file:	signature:(struct frame *f)
XTfullscreen_hook	xterm.c	/^XTfullscreen_hook (struct frame *f)$/;"	f	file:	signature:(struct frame *f)
XTHREAD	thread.h	/^XTHREAD (Lisp_Object a)$/;"	f	signature:(Lisp_Object a)
XTjudge_scroll_bars	xterm.c	/^XTjudge_scroll_bars (struct frame *f)$/;"	f	file:	signature:(struct frame *f)
XTmouse_position	xterm.c	/^XTmouse_position (struct frame **fp, int insist, Lisp_Object *bar_window,$/;"	f	file:	signature:(struct frame **fp, int insist, Lisp_Object *bar_window, enum scroll_bar_part *part, Lisp_Object *x, Lisp_Object *y, Time *timestamp)
XtNallowResize	widget.h	79;"	d
XtNbarCursor	widget.h	50;"	d
XtNbellVolume	widget.h	56;"	d
XtNcursorColor	widget.h	48;"	d
XtNemacsFrame	widget.h	66;"	d
XtNfont	widget.h	36;"	d
XtNforeground	widget.h	42;"	d
XtNgcPointer	widget.h	64;"	d
XtNgeometry	widget.h	70;"	d
XtNinitialGeometry	widget.h	85;"	d
XtNinitialState	xterm.c	131;"	d	file:
XtNinterline	widget.h	32;"	d
XtNinternalBorderWidth	widget.h	30;"	d
XtNminibuffer	widget.h	26;"	d
XtNmodeLinePointer	widget.h	63;"	d
XtNpickTop	xterm.c	121;"	d	file:
XtNpointerBackground	widget.h	58;"	d
XtNpointerColor	widget.h	59;"	d
XtNresizeToPreferred	widget.h	82;"	d
XtNshowGrip	widget.h	76;"	d
XtNspacePointer	widget.h	62;"	d
XtNtextPointer	widget.h	61;"	d
XtNunsplittable	widget.h	28;"	d
XtNvisualBell	widget.h	53;"	d
XTread_socket	xterm.c	/^XTread_socket (struct terminal *terminal, struct input_event *hold_quit)$/;"	f	file:	signature:(struct terminal *terminal, struct input_event *hold_quit)
XTread_socket_fake_io_error	xterm.c	/^static struct x_display_info *XTread_socket_fake_io_error;$/;"	v	typeref:struct:x_display_info	file:
XTredeem_scroll_bar	xterm.c	/^XTredeem_scroll_bar (struct window *w)$/;"	f	file:	signature:(struct window *w)
XTring_bell	xterm.c	/^XTring_bell (struct frame *f)$/;"	f	file:	signature:(struct frame *f)
XTset_horizontal_scroll_bar	xterm.c	/^XTset_horizontal_scroll_bar (struct window *w, int portion, int whole, int position)$/;"	f	file:	signature:(struct window *w, int portion, int whole, int position)
XTset_vertical_scroll_bar	xterm.c	/^XTset_vertical_scroll_bar (struct window *w, int portion, int whole, int position)$/;"	f	file:	signature:(struct window *w, int portion, int whole, int position)
XTtoggle_invisible_pointer	xterm.c	/^XTtoggle_invisible_pointer (struct frame *f, bool invisible)$/;"	f	file:	signature:(struct frame *f, bool invisible)
XTYPE	lisp.h	/^(XTYPE) (Lisp_Object a)$/;"	f	signature:(Lisp_Object a)
XTYPE	lisp.h	379;"	d
xtzalloc	editfns.c	/^xtzalloc (char const *name)$/;"	f	file:	signature:(char const *name)
xtzfree	editfns.c	/^xtzfree (timezone_t tz)$/;"	f	file:	signature:(timezone_t tz)
xt_action_hook	xterm.c	/^xt_action_hook (Widget widget, XtPointer client_data, String action_name,$/;"	f	file:	signature:(Widget widget, XtPointer client_data, String action_name, XEvent *event, String *params, Cardinal *num_params)
Xt_app_con	xterm.c	/^XtAppContext Xt_app_con;$/;"	v
Xt_default_resources	xterm.c	/^static String Xt_default_resources[] = {0};$/;"	v	file:
xt_horizontal_action_hook	xterm.c	/^xt_horizontal_action_hook (Widget widget, XtPointer client_data, String action_name,$/;"	f	file:	signature:(Widget widget, XtPointer client_data, String action_name, XEvent *event, String *params, Cardinal *num_params)
xt_or_gtk_widget	xterm.h	/^typedef GtkWidget *xt_or_gtk_widget;$/;"	t
xt_or_gtk_widget	xterm.h	/^typedef Widget xt_or_gtk_widget;$/;"	t
XUINT	lisp.h	/^XUINT (Lisp_Object a)$/;"	f	signature:(Lisp_Object a)
XUNTAG	lisp.h	/^(XUNTAG) (Lisp_Object a, int type)$/;"	f	signature:(Lisp_Object a, int type)
XUNTAG	lisp.h	380;"	d
XUSER_PTR	lisp.h	/^XUSER_PTR (Lisp_Object a)$/;"	f	signature:(Lisp_Object a)
XValue	nsgui.h	177;"	d
XValue	w32gui.h	95;"	d
XVECREF_YVECREF_EQUAL	editfns.c	3109;"	d	file:
XVECTOR	lisp.h	/^XVECTOR (Lisp_Object a)$/;"	f	signature:(Lisp_Object a)
xwidget	dispextern.h	/^      } xwidget;$/;"	m	union:it::iterator_stack_entry::__anon117	typeref:struct:it::iterator_stack_entry::__anon117::__anon120	access:public
xwidget	dispextern.h	/^    struct xwidget *xwidget;$/;"	m	union:glyph::__anon110	typeref:struct:glyph::__anon110::xwidget	access:public
xwidget	dispextern.h	/^  struct xwidget *xwidget;$/;"	m	struct:glyph_string	typeref:struct:glyph_string::xwidget	access:public
xwidget	dispextern.h	/^  struct xwidget *xwidget;$/;"	m	struct:it	typeref:struct:it::xwidget	access:public
xwidget	xwidget.c	/^  (Lisp_Object xwidget, Lisp_Object factor)$/;"	v
xwidget	xwidget.c	/^  (Lisp_Object xwidget, Lisp_Object flag)$/;"	v
xwidget	xwidget.c	/^  (Lisp_Object xwidget, Lisp_Object new_width, Lisp_Object new_height)$/;"	v
xwidget	xwidget.c	/^  (Lisp_Object xwidget, Lisp_Object plist)$/;"	v
xwidget	xwidget.c	/^  (Lisp_Object xwidget, Lisp_Object script, Lisp_Object fun)$/;"	v
xwidget	xwidget.c	/^  (Lisp_Object xwidget, Lisp_Object uri)$/;"	v
xwidget	xwidget.c	/^  (Lisp_Object xwidget, Lisp_Object window)$/;"	v
xwidget	xwidget.h	/^struct xwidget$/;"	s
xwidget::buffer	xwidget.h	/^  Lisp_Object buffer;$/;"	m	struct:xwidget	access:public
xwidget::header	xwidget.h	/^  struct vectorlike_header header;$/;"	m	struct:xwidget	typeref:struct:xwidget::vectorlike_header	access:public
xwidget::height	xwidget.h	/^  int height;$/;"	m	struct:xwidget	access:public
xwidget::kill_without_query	xwidget.h	/^  bool_bf kill_without_query : 1;$/;"	m	struct:xwidget	access:public
xwidget::plist	xwidget.h	/^  Lisp_Object plist;$/;"	m	struct:xwidget	access:public
xwidget::title	xwidget.h	/^  Lisp_Object title;$/;"	m	struct:xwidget	access:public
xwidget::type	xwidget.h	/^  Lisp_Object type;$/;"	m	struct:xwidget	access:public
xwidget::widgetwindow_osr	xwidget.h	/^  GtkWidget *widgetwindow_osr;$/;"	m	struct:xwidget	access:public
xwidget::widget_osr	xwidget.h	/^  GtkWidget *widget_osr;$/;"	m	struct:xwidget	access:public
xwidget::width	xwidget.h	/^  int width;$/;"	m	struct:xwidget	access:public
XWIDGETP	xwidget.h	92;"	d
XWIDGETS_OBJ	Makefile	/^XWIDGETS_OBJ = $/;"	m
xwidget_end_redisplay	xwidget.c	/^xwidget_end_redisplay (struct window *w, struct glyph_matrix *matrix)$/;"	f	signature:(struct window *w, struct glyph_matrix *matrix)
xwidget_end_redisplay	xwidget.h	/^INLINE void xwidget_end_redisplay (struct window *w, struct glyph_matrix *m) {}$/;"	f	signature:(struct window *w, struct glyph_matrix *m)
xwidget_end_redisplay	xwidget.h	/^void xwidget_end_redisplay (struct window *, struct glyph_matrix *);$/;"	p	signature:(struct window *, struct glyph_matrix *)
XWIDGET_EVENT	termhooks.h	/^   , XWIDGET_EVENT$/;"	e	enum:event_kind
XWIDGET_GLYPH	dispextern.h	/^  XWIDGET_GLYPH$/;"	e	enum:glyph_type
xwidget_hidden	xwidget.c	/^xwidget_hidden (struct xwidget_view *xv)$/;"	f	file:	signature:(struct xwidget_view *xv)
xwidget_hide_view	xwidget.c	/^xwidget_hide_view (struct xwidget_view *xv)$/;"	f	file:	signature:(struct xwidget_view *xv)
XWIDGET_H_INCLUDED	xwidget.h	21;"	d
xwidget_init_view	xwidget.c	/^xwidget_init_view (struct xwidget *xww,$/;"	f	file:	signature:(struct xwidget *xww, struct glyph_string *s, int x, int y)
xwidget_osr_draw_cb	xwidget.c	/^xwidget_osr_draw_cb (GtkWidget *widget, cairo_t *cr, gpointer data)$/;"	f	file:	signature:(GtkWidget *widget, cairo_t *cr, gpointer data)
xwidget_osr_event_forward	xwidget.c	/^xwidget_osr_event_forward (GtkWidget *widget, GdkEvent *event,$/;"	f	file:	signature:(GtkWidget *widget, GdkEvent *event, gpointer user_data)
xwidget_osr_event_set_embedder	xwidget.c	/^xwidget_osr_event_set_embedder (GtkWidget *widget, GdkEvent *event,$/;"	f	file:	signature:(GtkWidget *widget, GdkEvent *event, gpointer data)
xwidget_show_view	xwidget.c	/^xwidget_show_view (struct xwidget_view *xv)$/;"	f	file:	signature:(struct xwidget_view *xv)
xwidget_spec_value	xwidget.c	/^xwidget_spec_value (Lisp_Object spec, Lisp_Object key)$/;"	f	file:	signature:(Lisp_Object spec, Lisp_Object key)
xwidget_start_redisplay	xwidget.c	/^xwidget_start_redisplay (void)$/;"	f	file:	signature:(void)
xwidget_touch	xwidget.c	/^xwidget_touch (struct xwidget_view *xv)$/;"	f	file:	signature:(struct xwidget_view *xv)
xwidget_touched	xwidget.c	/^xwidget_touched (struct xwidget_view *xv)$/;"	f	file:	signature:(struct xwidget_view *xv)
xwidget_view	xwidget.h	/^struct xwidget_view$/;"	s
xwidget_view::clip_bottom	xwidget.h	/^  int clip_bottom;$/;"	m	struct:xwidget_view	access:public
xwidget_view::clip_left	xwidget.h	/^  int clip_left;$/;"	m	struct:xwidget_view	access:public
xwidget_view::clip_right	xwidget.h	/^  int clip_right;$/;"	m	struct:xwidget_view	access:public
xwidget_view::clip_top	xwidget.h	/^  int clip_top;$/;"	m	struct:xwidget_view	access:public
xwidget_view::emacswindow	xwidget.h	/^  GtkWidget *emacswindow;$/;"	m	struct:xwidget_view	access:public
xwidget_view::handler_id	xwidget.h	/^  long handler_id;$/;"	m	struct:xwidget_view	access:public
xwidget_view::header	xwidget.h	/^  struct vectorlike_header header;$/;"	m	struct:xwidget_view	typeref:struct:xwidget_view::vectorlike_header	access:public
xwidget_view::hidden	xwidget.h	/^  bool hidden;$/;"	m	struct:xwidget_view	access:public
xwidget_view::model	xwidget.h	/^  Lisp_Object model;$/;"	m	struct:xwidget_view	access:public
xwidget_view::redisplayed	xwidget.h	/^  bool redisplayed;$/;"	m	struct:xwidget_view	access:public
xwidget_view::w	xwidget.h	/^  Lisp_Object w;$/;"	m	struct:xwidget_view	access:public
xwidget_view::widget	xwidget.h	/^  GtkWidget *widget;$/;"	m	struct:xwidget_view	access:public
xwidget_view::widgetwindow	xwidget.h	/^  GtkWidget *widgetwindow;$/;"	m	struct:xwidget_view	access:public
xwidget_view::x	xwidget.h	/^  int x;$/;"	m	struct:xwidget_view	access:public
xwidget_view::y	xwidget.h	/^  int y;$/;"	m	struct:xwidget_view	access:public
xwidget_view_delete_all_in_window	xwidget.c	/^xwidget_view_delete_all_in_window (struct window *w)$/;"	f	signature:(struct window *w)
xwidget_view_delete_all_in_window	xwidget.h	/^INLINE void xwidget_view_delete_all_in_window (struct window *w) {}$/;"	f	signature:(struct window *w)
xwidget_view_delete_all_in_window	xwidget.h	/^void xwidget_view_delete_all_in_window (struct window *);$/;"	p	signature:(struct window *)
xwidget_view_lookup	xwidget.c	/^static struct xwidget_view *xwidget_view_lookup (struct xwidget *,$/;"	p	file:	signature:(struct xwidget *, struct window *)
xwidget_view_lookup	xwidget.c	/^xwidget_view_lookup (struct xwidget *xw, struct window *w)$/;"	f	file:	signature:(struct xwidget *xw, struct window *w)
XWIDGET_VIEW_P	xwidget.h	100;"	d
XWINDOW	window.h	/^XWINDOW (Lisp_Object a)$/;"	f	signature:(Lisp_Object a)
xw_popup_dialog	xmenu.c	/^xw_popup_dialog (struct frame *f, Lisp_Object header, Lisp_Object contents)$/;"	f	signature:(struct frame *f, Lisp_Object header, Lisp_Object contents)
xw_popup_dialog	xterm.h	/^extern Lisp_Object xw_popup_dialog (struct frame *, Lisp_Object, Lisp_Object);$/;"	p	signature:(struct frame *, Lisp_Object, Lisp_Object)
XXWIDGET	xwidget.h	93;"	d
XXWIDGET_VIEW	xwidget.h	101;"	d
xzalloc	alloc.c	/^xzalloc (size_t size)$/;"	f	signature:(size_t size)
x_activate_menubar	frame.h	/^extern void x_activate_menubar (struct frame *);$/;"	p	signature:(struct frame *)
x_activate_menubar	w32menu.c	/^x_activate_menubar (struct frame *f)$/;"	f	signature:(struct frame *f)
x_activate_menubar	xmenu.c	/^x_activate_menubar (struct frame *f)$/;"	f	signature:(struct frame *f)
x_activate_timeout_atimer	xterm.c	/^x_activate_timeout_atimer (void)$/;"	f	signature:(void)
x_activate_timeout_atimer	xterm.h	/^extern void x_activate_timeout_atimer (void);$/;"	p	signature:(void)
x_after_update_window_line	w32term.c	/^x_after_update_window_line (struct window *w, struct glyph_row *desired_row)$/;"	f	file:	signature:(struct window *w, struct glyph_row *desired_row)
x_after_update_window_line	xterm.c	/^x_after_update_window_line (struct window *w, struct glyph_row *desired_row)$/;"	f	file:	signature:(struct window *w, struct glyph_row *desired_row)
x_allocate_bitmap_record	image.c	/^x_allocate_bitmap_record (struct frame *f)$/;"	f	file:	signature:(struct frame *f)
x_alloc_image_color	image.c	/^x_alloc_image_color (struct frame *f, struct image *img, Lisp_Object color_name,$/;"	f	file:	signature:(struct frame *f, struct image *img, Lisp_Object color_name, unsigned long dflt)
x_alloc_lighter_color	xterm.c	/^static bool x_alloc_lighter_color (struct frame *, Display *, Colormap,$/;"	p	file:	signature:(struct frame *, Display *, Colormap, unsigned long *, double, int)
x_alloc_lighter_color	xterm.c	/^x_alloc_lighter_color (struct frame *f, Display *display, Colormap cmap,$/;"	f	file:	signature:(struct frame *f, Display *display, Colormap cmap, unsigned long *pixel, double factor, int delta)
x_alloc_lighter_color_for_widget	xterm.c	/^x_alloc_lighter_color_for_widget (Widget widget, Display *display, Colormap cmap,$/;"	f	signature:(Widget widget, Display *display, Colormap cmap, unsigned long *pixel, double factor, int delta)
x_alloc_lighter_color_for_widget	xterm.h	/^extern bool x_alloc_lighter_color_for_widget (Widget, Display *, Colormap,$/;"	p	signature:(Widget, Display *, Colormap, unsigned long *, double, int)
x_alloc_nearest_color	xterm.c	/^x_alloc_nearest_color (struct frame *f, Colormap cmap, XColor *color)$/;"	f	signature:(struct frame *f, Colormap cmap, XColor *color)
x_alloc_nearest_color	xterm.h	/^extern bool x_alloc_nearest_color (struct frame *, Colormap, XColor *);$/;"	p	signature:(struct frame *, Colormap, XColor *)
x_alloc_nearest_color_1	xterm.c	/^static bool x_alloc_nearest_color_1 (Display *, Colormap, XColor *);$/;"	p	file:	signature:(Display *, Colormap, XColor *)
x_alloc_nearest_color_1	xterm.c	/^x_alloc_nearest_color_1 (Display *dpy, Colormap cmap, XColor *color)$/;"	f	file:	signature:(Display *dpy, Colormap cmap, XColor *color)
x_any_window_to_frame	w32term.c	89;"	d	file:
x_any_window_to_frame	xterm.c	/^x_any_window_to_frame (struct x_display_info *dpyinfo, int wdesc)$/;"	f	file:	signature:(struct x_display_info *dpyinfo, int wdesc)
x_any_window_to_frame	xterm.c	4532;"	d	file:
x_atom_to_symbol	xselect.c	/^x_atom_to_symbol (struct x_display_info *dpyinfo, Atom atom)$/;"	f	file:	signature:(struct x_display_info *dpyinfo, Atom atom)
x_begin_cr_clip	xterm.c	/^x_begin_cr_clip (struct frame *f, GC gc)$/;"	f	signature:(struct frame *f, GC gc)
x_begin_cr_clip	xterm.h	/^extern cairo_t *x_begin_cr_clip (struct frame *, GC);$/;"	p	signature:(struct frame *, GC)
x_bitmap_height	image.c	/^x_bitmap_height (struct frame *f, ptrdiff_t id)$/;"	f	file:	signature:(struct frame *f, ptrdiff_t id)
x_bitmap_icon	frame.h	/^extern bool x_bitmap_icon (struct frame *, Lisp_Object);$/;"	p	signature:(struct frame *, Lisp_Object)
x_bitmap_icon	w32term.c	/^x_bitmap_icon (struct frame *f, Lisp_Object icon)$/;"	f	signature:(struct frame *f, Lisp_Object icon)
x_bitmap_icon	xterm.c	/^x_bitmap_icon (struct frame *f, Lisp_Object file)$/;"	f	signature:(struct frame *f, Lisp_Object file)
x_bitmap_mask	image.c	/^x_bitmap_mask (struct frame *f, ptrdiff_t id)$/;"	f	signature:(struct frame *f, ptrdiff_t id)
x_bitmap_mask	lisp.h	/^extern int x_bitmap_mask (struct frame *, ptrdiff_t);$/;"	p	signature:(struct frame *, ptrdiff_t)
x_bitmap_pixmap	dispextern.h	/^extern ptrdiff_t x_bitmap_pixmap (struct frame *, ptrdiff_t);$/;"	p	signature:(struct frame *, ptrdiff_t)
x_bitmap_pixmap	image.c	/^x_bitmap_pixmap (struct frame *f, ptrdiff_t id)$/;"	f	signature:(struct frame *f, ptrdiff_t id)
x_bitmap_record	xterm.h	/^struct x_bitmap_record$/;"	s
x_bitmap_record::depth	xterm.h	/^  int height, width, depth;$/;"	m	struct:x_bitmap_record	access:public
x_bitmap_record::file	xterm.h	/^  char *file;$/;"	m	struct:x_bitmap_record	access:public
x_bitmap_record::have_mask	xterm.h	/^  bool have_mask;$/;"	m	struct:x_bitmap_record	access:public
x_bitmap_record::height	xterm.h	/^  int height, width, depth;$/;"	m	struct:x_bitmap_record	access:public
x_bitmap_record::img	xterm.h	/^  void *img;$/;"	m	struct:x_bitmap_record	access:public
x_bitmap_record::mask	xterm.h	/^  Pixmap mask;$/;"	m	struct:x_bitmap_record	access:public
x_bitmap_record::pixmap	xterm.h	/^  Pixmap pixmap;$/;"	m	struct:x_bitmap_record	access:public
x_bitmap_record::refcount	xterm.h	/^  int refcount;$/;"	m	struct:x_bitmap_record	access:public
x_bitmap_record::width	xterm.h	/^  int height, width, depth;$/;"	m	struct:x_bitmap_record	access:public
x_bitmap_width	image.c	/^x_bitmap_width (struct frame *f, ptrdiff_t id)$/;"	f	file:	signature:(struct frame *f, ptrdiff_t id)
x_build_heuristic_mask	image.c	/^static void x_build_heuristic_mask (struct frame *, struct image *,$/;"	p	file:	signature:(struct frame *, struct image *, Lisp_Object)
x_build_heuristic_mask	image.c	/^x_build_heuristic_mask (struct frame *f, struct image *img, Lisp_Object how)$/;"	f	file:	signature:(struct frame *f, struct image *img, Lisp_Object how)
x_calc_absolute_position	w32term.c	/^x_calc_absolute_position (struct frame *f)$/;"	f	file:	signature:(struct frame *f)
x_calc_absolute_position	xterm.c	/^x_calc_absolute_position (struct frame *f)$/;"	f	file:	signature:(struct frame *f)
x_catch_errors	xterm.c	/^x_catch_errors (Display *dpy)$/;"	f	signature:(Display *dpy)
x_catch_errors	xterm.h	/^extern void x_catch_errors (Display *);$/;"	p	signature:(Display *)
x_catch_errors_unwind	xselect.c	/^x_catch_errors_unwind (void)$/;"	f	file:	signature:(void)
x_catch_errors_with_handler	xterm.c	/^x_catch_errors_with_handler (Display *dpy, x_special_error_handler handler,$/;"	f	signature:(Display *dpy, x_special_error_handler handler, void *handler_data)
x_catch_errors_with_handler	xterm.h	/^extern void x_catch_errors_with_handler (Display *, x_special_error_handler,$/;"	p	signature:(Display *, x_special_error_handler, void *)
x_change_tool_bar_height	dispextern.h	/^void x_change_tool_bar_height (struct frame *f, int);$/;"	p	signature:(struct frame *f, int)
x_change_tool_bar_height	w32fns.c	/^x_change_tool_bar_height (struct frame *f, int height)$/;"	f	signature:(struct frame *f, int height)
x_change_tool_bar_height	xfns.c	/^x_change_tool_bar_height (struct frame *f, int height)$/;"	f	signature:(struct frame *f, int height)
x_check_errors	xterm.c	/^x_check_errors (Display *dpy, const char *format)$/;"	f	signature:(Display *dpy, const char *format)
x_check_expected_move	xterm.c	/^static void x_check_expected_move (struct frame *, int, int);$/;"	p	file:	signature:(struct frame *, int, int)
x_check_expected_move	xterm.c	/^x_check_expected_move (struct frame *f, int expected_left, int expected_top)$/;"	f	file:	signature:(struct frame *f, int expected_left, int expected_top)
x_check_font	w32term.c	/^static void x_check_font (struct frame *, struct font *);$/;"	p	file:	signature:(struct frame *, struct font *)
x_check_font	w32term.c	/^x_check_font (struct frame *f, struct font *font)$/;"	f	file:	signature:(struct frame *f, struct font *font)
x_check_font	xterm.c	/^static void x_check_font (struct frame *, struct font *);$/;"	p	file:	signature:(struct frame *, struct font *)
x_check_font	xterm.c	/^x_check_font (struct frame *f, struct font *font)$/;"	f	file:	signature:(struct frame *f, struct font *font)
x_check_fullscreen	xterm.c	/^static void x_check_fullscreen (struct frame *);$/;"	p	file:	signature:(struct frame *)
x_check_fullscreen	xterm.c	/^x_check_fullscreen (struct frame *f)$/;"	f	file:	signature:(struct frame *f)
x_check_image_size	image.c	/^x_check_image_size (XImagePtr ximg, int width, int height)$/;"	f	file:	signature:(XImagePtr ximg, int width, int height)
x_check_property_data	xselect.c	/^x_check_property_data (Lisp_Object data)$/;"	f	signature:(Lisp_Object data)
x_check_property_data	xterm.h	/^extern int x_check_property_data (Lisp_Object);$/;"	p	signature:(Lisp_Object)
x_clear_area	xterm.c	/^x_clear_area (struct frame *f, int x, int y, int width, int height)$/;"	f	signature:(struct frame *f, int x, int y, int width, int height)
x_clear_area	xterm.h	/^extern void x_clear_area (struct frame *f, int, int, int, int);$/;"	p	signature:(struct frame *f, int, int, int, int)
x_clear_area1	xterm.c	/^x_clear_area1 (Display *dpy, Window window,$/;"	f	file:	signature:(Display *dpy, Window window, int x, int y, int width, int height, int exposures)
x_clear_cursor	dispextern.h	/^extern void x_clear_cursor (struct window *);$/;"	p	signature:(struct window *)
x_clear_cursor	xdisp.c	/^x_clear_cursor (struct window *w)$/;"	f	signature:(struct window *w)
x_clear_end_of_line	dispextern.h	/^extern void x_clear_end_of_line (struct window *, struct glyph_row *,$/;"	p	signature:(struct window *, struct glyph_row *, enum glyph_row_area, int)
x_clear_end_of_line	xdisp.c	/^x_clear_end_of_line (struct window *w, struct glyph_row *updated_row,$/;"	f	signature:(struct window *w, struct glyph_row *updated_row, enum glyph_row_area updated_area, int to_x)
x_clear_errors	xterm.c	/^x_clear_errors (Display *dpy)$/;"	f	signature:(Display *dpy)
x_clear_errors	xterm.h	/^extern void x_clear_errors (Display *);$/;"	p	signature:(Display *)
x_clear_frame	w32term.c	/^static void x_clear_frame (struct frame *);$/;"	p	file:	signature:(struct frame *)
x_clear_frame	w32term.c	/^x_clear_frame (struct frame *f)$/;"	f	file:	signature:(struct frame *f)
x_clear_frame	xterm.c	/^x_clear_frame (struct frame *f)$/;"	f	file:	signature:(struct frame *f)
x_clear_frame_area	xterm.c	/^x_clear_frame_area (struct frame *f, int x, int y, int width, int height)$/;"	f	file:	signature:(struct frame *f, int x, int y, int width, int height)
x_clear_frame_selections	xselect.c	/^x_clear_frame_selections (struct frame *f)$/;"	f	signature:(struct frame *f)
x_clear_frame_selections	xterm.h	/^extern void x_clear_frame_selections (struct frame *);$/;"	p	signature:(struct frame *)
x_clear_glyph_string_rect	w32term.c	/^static void x_clear_glyph_string_rect (struct glyph_string *, int,$/;"	p	file:	signature:(struct glyph_string *, int, int, int, int)
x_clear_glyph_string_rect	w32term.c	/^x_clear_glyph_string_rect (struct glyph_string *s,$/;"	f	file:	signature:(struct glyph_string *s, int x, int y, int w, int h)
x_clear_glyph_string_rect	xterm.c	/^static void x_clear_glyph_string_rect (struct glyph_string *, int,$/;"	p	file:	signature:(struct glyph_string *, int, int, int, int)
x_clear_glyph_string_rect	xterm.c	/^x_clear_glyph_string_rect (struct glyph_string *s, int x, int y, int w, int h)$/;"	f	file:	signature:(struct glyph_string *s, int x, int y, int w, int h)
x_clear_image	image.c	/^x_clear_image (struct frame *f, struct image *img)$/;"	f	file:	signature:(struct frame *f, struct image *img)
x_clear_image_1	image.c	/^x_clear_image_1 (struct frame *f, struct image *img, int flags)$/;"	f	file:	signature:(struct frame *f, struct image *img, int flags)
x_clear_under_internal_border	w32fns.c	/^x_clear_under_internal_border (struct frame *f)$/;"	f	signature:(struct frame *f)
x_clear_under_internal_border	w32term.h	/^extern void x_clear_under_internal_border (struct frame *f);$/;"	p	signature:(struct frame *f)
x_clear_under_internal_border	xterm.c	/^x_clear_under_internal_border (struct frame *f)$/;"	f	signature:(struct frame *f)
x_clear_under_internal_border	xterm.h	/^extern void x_clear_under_internal_border (struct frame *f);$/;"	p	signature:(struct frame *f)
x_clear_window	xterm.c	/^x_clear_window (struct frame *f)$/;"	f	file:	signature:(struct frame *f)
x_clear_window_mouse_face	dispextern.h	/^extern void x_clear_window_mouse_face (struct window *);$/;"	p	signature:(struct window *)
x_clear_window_mouse_face	xdisp.c	/^x_clear_window_mouse_face (struct window *w)$/;"	f	signature:(struct window *w)
x_clipboard_manager_error_1	xselect.c	/^x_clipboard_manager_error_1 (Lisp_Object err)$/;"	f	file:	signature:(Lisp_Object err)
x_clipboard_manager_error_2	xselect.c	/^x_clipboard_manager_error_2 (Lisp_Object err)$/;"	f	file:	signature:(Lisp_Object err)
x_clipboard_manager_save	xselect.c	/^x_clipboard_manager_save (Lisp_Object frame)$/;"	f	file:	signature:(Lisp_Object frame)
x_clipboard_manager_save_all	xselect.c	/^x_clipboard_manager_save_all (void)$/;"	f	signature:(void)
x_clipboard_manager_save_all	xterm.h	/^extern void x_clipboard_manager_save_all (void);$/;"	p	signature:(void)
x_clipboard_manager_save_frame	xselect.c	/^x_clipboard_manager_save_frame (Lisp_Object frame)$/;"	f	signature:(Lisp_Object frame)
x_clipboard_manager_save_frame	xterm.h	/^extern void x_clipboard_manager_save_frame (Lisp_Object);$/;"	p	signature:(Lisp_Object)
x_clip_to_row	xterm.c	/^static void x_clip_to_row (struct window *, struct glyph_row *,$/;"	p	file:	signature:(struct window *, struct glyph_row *, enum glyph_row_area, GC)
x_clip_to_row	xterm.c	/^x_clip_to_row (struct window *w, struct glyph_row *row,$/;"	f	file:	signature:(struct window *w, struct glyph_row *row, enum glyph_row_area area, GC gc)
x_color_cells	xterm.c	/^x_color_cells (Display *dpy, int *ncells)$/;"	f	file:	signature:(Display *dpy, int *ncells)
x_compatible	w32term.h	/^  struct x_output x_compatible;$/;"	m	struct:w32_output	typeref:struct:w32_output::x_output	access:public
x_compute_glyph_string_overhangs	xterm.c	/^static void x_compute_glyph_string_overhangs (struct glyph_string *);$/;"	p	file:	signature:(struct glyph_string *)
x_compute_glyph_string_overhangs	xterm.c	/^x_compute_glyph_string_overhangs (struct glyph_string *s)$/;"	f	file:	signature:(struct glyph_string *s)
x_connection_closed	xterm.c	/^x_connection_closed (Display *dpy, const char *error_message, bool ioerror)$/;"	f	file:	signature:(Display *dpy, const char *error_message, bool ioerror)
x_consider_frame_title	xdisp.c	/^x_consider_frame_title (Lisp_Object frame)$/;"	f	file:	signature:(Lisp_Object frame)
x_convert_selection	xselect.c	/^static bool x_convert_selection (Lisp_Object, Lisp_Object, Atom, bool,$/;"	p	file:	signature:(Lisp_Object, Lisp_Object, Atom, bool, struct x_display_info *)
x_convert_selection	xselect.c	/^x_convert_selection (Lisp_Object selection_symbol,$/;"	f	file:	signature:(Lisp_Object selection_symbol, Lisp_Object target_symbol, Atom property, bool for_multiple, struct x_display_info *dpyinfo)
x_copy_color	xterm.c	/^x_copy_color (struct frame *f, unsigned long pixel)$/;"	f	signature:(struct frame *f, unsigned long pixel)
x_copy_color	xterm.h	/^extern unsigned long x_copy_color (struct frame *, unsigned long);$/;"	p	signature:(struct frame *, unsigned long)
x_create_bitmap_from_data	dispextern.h	/^extern ptrdiff_t x_create_bitmap_from_data (struct frame *, char *,$/;"	p	signature:(struct frame *, char *, unsigned int, unsigned int)
x_create_bitmap_from_data	image.c	/^x_create_bitmap_from_data (struct frame *f, char *bits, unsigned int width, unsigned int height)$/;"	f	signature:(struct frame *f, char *bits, unsigned int width, unsigned int height)
x_create_bitmap_from_file	dispextern.h	/^extern ptrdiff_t x_create_bitmap_from_file (struct frame *, Lisp_Object);$/;"	p	signature:(struct frame *, Lisp_Object)
x_create_bitmap_from_file	image.c	/^x_create_bitmap_from_file (struct frame *f, Lisp_Object file)$/;"	f	signature:(struct frame *f, Lisp_Object file)
x_create_bitmap_from_xpm_data	dispextern.h	/^extern ptrdiff_t x_create_bitmap_from_xpm_data (struct frame *, const char **);$/;"	p	signature:(struct frame *, const char **)
x_create_bitmap_from_xpm_data	image.c	/^x_create_bitmap_from_xpm_data (struct frame *f, const char **bits)$/;"	f	signature:(struct frame *f, const char **bits)
x_create_bitmap_mask	dispextern.h	/^extern void x_create_bitmap_mask (struct frame *, ptrdiff_t);$/;"	p	signature:(struct frame *, ptrdiff_t)
x_create_bitmap_mask	image.c	/^x_create_bitmap_mask (struct frame *f, ptrdiff_t id)$/;"	f	signature:(struct frame *f, ptrdiff_t id)
x_create_gc	xfaces.c	/^x_create_gc (struct frame *f, unsigned long mask, XGCValues *xgcv)$/;"	f	file:	signature:(struct frame *f, unsigned long mask, XGCValues *xgcv)
x_create_gc	xfaces.c	/^x_create_gc (struct frame *f,$/;"	f	file:	signature:(struct frame *f, unsigned long mask, XGCValues *xgcv)
x_create_horizontal_toolkit_scroll_bar	xterm.c	/^x_create_horizontal_toolkit_scroll_bar (struct frame *f, struct scroll_bar *bar)$/;"	f	file:	signature:(struct frame *f, struct scroll_bar *bar)
x_create_terminal	xterm.c	/^static struct terminal *x_create_terminal (struct x_display_info *);$/;"	p	file:	signature:(struct x_display_info *)
x_create_terminal	xterm.c	/^x_create_terminal (struct x_display_info *dpyinfo)$/;"	f	file:	signature:(struct x_display_info *dpyinfo)
x_create_tip_frame	w32fns.c	/^x_create_tip_frame (struct w32_display_info *dpyinfo, Lisp_Object parms)$/;"	f	file:	signature:(struct w32_display_info *dpyinfo, Lisp_Object parms)
x_create_tip_frame	xfns.c	/^x_create_tip_frame (struct x_display_info *dpyinfo, Lisp_Object parms)$/;"	f	file:	signature:(struct x_display_info *dpyinfo, Lisp_Object parms)
x_create_toolkit_scroll_bar	xterm.c	/^x_create_toolkit_scroll_bar (struct frame *f, struct scroll_bar *bar)$/;"	f	file:	signature:(struct frame *f, struct scroll_bar *bar)
x_create_x_image_and_pixmap	image.c	/^static bool x_create_x_image_and_pixmap (struct frame *, int, int, int,$/;"	p	file:	signature:(struct frame *, int, int, int, XImagePtr *, Pixmap *)
x_create_x_image_and_pixmap	image.c	/^x_create_x_image_and_pixmap (struct frame *f, int width, int height, int depth,$/;"	f	file:	signature:(struct frame *f, int width, int height, int depth, XImagePtr *ximg, Pixmap *pixmap)
x_cr_accumulate_data	xterm.c	/^x_cr_accumulate_data (void *closure, const unsigned char *data,$/;"	f	file:	signature:(void *closure, const unsigned char *data, unsigned int length)
x_cr_define_fringe_bitmap	xterm.c	/^x_cr_define_fringe_bitmap (int which, unsigned short *bits, int h, int wd)$/;"	f	file:	signature:(int which, unsigned short *bits, int h, int wd)
x_cr_destroy	xterm.c	/^x_cr_destroy (Lisp_Object arg)$/;"	f	file:	signature:(Lisp_Object arg)
x_cr_destroy_fringe_bitmap	xterm.c	/^x_cr_destroy_fringe_bitmap (int which)$/;"	f	file:	signature:(int which)
x_cr_destroy_surface	xterm.c	/^x_cr_destroy_surface (struct frame *f)$/;"	f	file:	signature:(struct frame *f)
x_cr_draw_frame	xterm.c	/^x_cr_draw_frame (cairo_t *cr, struct frame *f)$/;"	f	signature:(cairo_t *cr, struct frame *f)
x_cr_draw_frame	xterm.h	/^extern void x_cr_draw_frame (cairo_t *, struct frame *);$/;"	p	signature:(cairo_t *, struct frame *)
x_cr_draw_image	xterm.c	/^x_cr_draw_image (struct frame *f, GC gc, cairo_pattern_t *image,$/;"	f	file:	signature:(struct frame *f, GC gc, cairo_pattern_t *image, int src_x, int src_y, int width, int height, int dest_x, int dest_y, bool overlay_p)
x_cr_export_frames	xterm.c	/^x_cr_export_frames (Lisp_Object frames, cairo_surface_type_t surface_type)$/;"	f	signature:(Lisp_Object frames, cairo_surface_type_t surface_type)
x_cr_export_frames	xterm.h	/^extern Lisp_Object x_cr_export_frames (Lisp_Object, cairo_surface_type_t);$/;"	p	signature:(Lisp_Object, cairo_surface_type_t)
x_cr_init_fringe	dispextern.h	/^void x_cr_init_fringe (struct redisplay_interface *);$/;"	p	signature:(struct redisplay_interface *)
x_customization_string	xrdb.c	/^static char *x_customization_string;$/;"	v	file:
x_decline_selection_request	xselect.c	/^static void x_decline_selection_request (struct selection_input_event *);$/;"	p	file:	signature:(struct selection_input_event *)
x_decline_selection_request	xselect.c	/^x_decline_selection_request (struct selection_input_event *event)$/;"	f	file:	signature:(struct selection_input_event *event)
x_decode_color	w32fns.c	/^x_decode_color (struct frame *f, Lisp_Object arg, int def)$/;"	f	file:	signature:(struct frame *f, Lisp_Object arg, int def)
x_decode_color	xfns.c	/^x_decode_color (struct frame *f, Lisp_Object color_name, int mono_color)$/;"	f	file:	signature:(struct frame *f, Lisp_Object color_name, int mono_color)
x_default_font_parameter	w32fns.c	/^x_default_font_parameter (struct frame *f, Lisp_Object parms)$/;"	f	file:	signature:(struct frame *f, Lisp_Object parms)
x_default_font_parameter	xfns.c	/^x_default_font_parameter (struct frame *f, Lisp_Object parms)$/;"	f	file:	signature:(struct frame *f, Lisp_Object parms)
x_default_parameter	dispextern.h	/^extern Lisp_Object x_default_parameter (struct frame *, Lisp_Object,$/;"	p	signature:(struct frame *, Lisp_Object, Lisp_Object, Lisp_Object, const char *, const char *, enum resource_types)
x_default_parameter	frame.c	/^x_default_parameter (struct frame *f, Lisp_Object alist, Lisp_Object prop,$/;"	f	signature:(struct frame *f, Lisp_Object alist, Lisp_Object prop, Lisp_Object deflt, const char *xprop, const char *xclass, enum resource_types type)
x_default_scroll_bar_color_parameter	xfns.c	/^x_default_scroll_bar_color_parameter (struct frame *f,$/;"	f	file:	signature:(struct frame *f, Lisp_Object alist, Lisp_Object prop, const char *xprop, const char *xclass, bool foreground_p)
x_defined_color	image.c	102;"	d	file:
x_defined_color	image.c	90;"	d	file:
x_defined_color	xfns.c	/^x_defined_color (struct frame *f, const char *color_name,$/;"	f	signature:(struct frame *f, const char *color_name, XColor *color, bool alloc_p)
x_defined_color	xterm.h	/^extern bool x_defined_color (struct frame *, const char *, XColor *, bool);$/;"	p	signature:(struct frame *, const char *, XColor *, bool)
x_define_frame_cursor	xterm.c	/^x_define_frame_cursor (struct frame *f, Cursor cursor)$/;"	f	file:	signature:(struct frame *f, Cursor cursor)
x_delete_display	w32term.c	/^x_delete_display (struct w32_display_info *dpyinfo)$/;"	f	signature:(struct w32_display_info *dpyinfo)
x_delete_display	w32term.h	/^extern void x_delete_display (struct w32_display_info *dpyinfo);$/;"	p	signature:(struct w32_display_info *dpyinfo)
x_delete_display	xterm.c	/^x_delete_display (struct x_display_info *dpyinfo)$/;"	f	file:	signature:(struct x_display_info *dpyinfo)
x_delete_glyphs	w32term.c	/^x_delete_glyphs (struct frame *f, register int n)$/;"	f	file:	signature:(struct frame *f, register int n)
x_delete_glyphs	xterm.c	/^static _Noreturn void x_delete_glyphs (struct frame *, int);$/;"	p	file:	signature:(struct frame *, int)
x_delete_glyphs	xterm.c	/^x_delete_glyphs (struct frame *f, register int n)$/;"	f	file:	signature:(struct frame *f, register int n)
x_delete_terminal	w32term.c	/^static void x_delete_terminal (struct terminal *term);$/;"	p	file:	signature:(struct terminal *term)
x_delete_terminal	w32term.c	/^x_delete_terminal (struct terminal *terminal)$/;"	f	file:	signature:(struct terminal *terminal)
x_delete_terminal	xterm.c	/^x_delete_terminal (struct terminal *terminal)$/;"	f	signature:(struct terminal *terminal)
x_delete_terminal	xterm.h	/^extern void x_delete_terminal (struct terminal *terminal);$/;"	p	signature:(struct terminal *terminal)
x_destroy_all_bitmaps	dispextern.h	/^extern void x_destroy_all_bitmaps (Display_Info *);$/;"	p	signature:(Display_Info *)
x_destroy_all_bitmaps	image.c	/^x_destroy_all_bitmaps (Display_Info *dpyinfo)$/;"	f	signature:(Display_Info *dpyinfo)
x_destroy_bitmap	dispextern.h	/^extern void x_destroy_bitmap (struct frame *, ptrdiff_t);$/;"	p	signature:(struct frame *, ptrdiff_t)
x_destroy_bitmap	image.c	/^x_destroy_bitmap (struct frame *f, ptrdiff_t id)$/;"	f	signature:(struct frame *f, ptrdiff_t id)
x_destroy_window	nsterm.h	/^extern void x_destroy_window (struct frame *f);$/;"	p	signature:(struct frame *f)
x_destroy_window	w32term.c	/^x_destroy_window (struct frame *f)$/;"	f	file:	signature:(struct frame *f)
x_destroy_window	xterm.c	/^x_destroy_window (struct frame *f)$/;"	f	file:	signature:(struct frame *f)
x_destroy_x_image	image.c	/^static void x_destroy_x_image (XImagePtr ximg);$/;"	p	file:	signature:(XImagePtr ximg)
x_destroy_x_image	image.c	/^x_destroy_x_image (XImagePtr ximg)$/;"	f	file:	signature:(XImagePtr ximg)
x_detect_edges	image.c	/^x_detect_edges (struct frame *f, struct image *img, int *matrix, int color_adjust)$/;"	f	file:	signature:(struct frame *f, struct image *img, int *matrix, int color_adjust)
x_detect_focus_change	xterm.c	/^x_detect_focus_change (struct x_display_info *dpyinfo, struct frame *frame,$/;"	f	file:	signature:(struct x_display_info *dpyinfo, struct frame *frame, const XEvent *event, struct input_event *bufp)
x_dialog_show	xmenu.c	/^x_dialog_show (struct frame *f, Lisp_Object title,$/;"	f	file:	signature:(struct frame *f, Lisp_Object title, Lisp_Object header, const char **error_name)
x_disable_image	image.c	/^static void x_disable_image (struct frame *, struct image *);$/;"	p	file:	signature:(struct frame *, struct image *)
x_disable_image	image.c	/^x_disable_image (struct frame *f, struct image *img)$/;"	f	file:	signature:(struct frame *f, struct image *img)
x_dispatch_event	xterm.c	/^static int x_dispatch_event (XEvent *, Display *);$/;"	p	file:	signature:(XEvent *, Display *)
x_dispatch_event	xterm.c	/^x_dispatch_event (XEvent *event, Display *display)$/;"	f	signature:(XEvent *event, Display *display)
x_dispatch_event	xterm.h	/^extern int x_dispatch_event (XEvent *, Display *);$/;"	p	signature:(XEvent *, Display *)
x_display_id	xfont.c	/^  unsigned x_display_id;$/;"	m	struct:xfont_info	file:	access:public
x_display_id	xftfont.c	/^  unsigned x_display_id;$/;"	m	struct:xftfont_info	file:	access:public
x_display_id	xterm.c	/^static unsigned x_display_id;$/;"	v	file:
x_display_info	xterm.h	/^struct x_display_info$/;"	s
x_display_info::alt_mod_mask	xterm.h	/^  int alt_mod_mask, super_mod_mask, hyper_mod_mask;$/;"	m	struct:x_display_info	access:public
x_display_info::bitmaps	xterm.h	/^  struct x_bitmap_record *bitmaps;$/;"	m	struct:x_display_info	typeref:struct:x_display_info::x_bitmap_record	access:public
x_display_info::bitmaps_last	xterm.h	/^  ptrdiff_t bitmaps_last;$/;"	m	struct:x_display_info	access:public
x_display_info::bitmaps_size	xterm.h	/^  ptrdiff_t bitmaps_size;$/;"	m	struct:x_display_info	access:public
x_display_info::blue_bits	xterm.h	/^  int red_bits, blue_bits, green_bits;$/;"	m	struct:x_display_info	access:public
x_display_info::blue_offset	xterm.h	/^  int red_offset, blue_offset, green_offset;$/;"	m	struct:x_display_info	access:public
x_display_info::client_leader_window	xterm.h	/^  Window client_leader_window;$/;"	m	struct:x_display_info	access:public
x_display_info::cmap	xterm.h	/^  Colormap cmap;$/;"	m	struct:x_display_info	access:public
x_display_info::color_cells	xterm.h	/^  XColor *color_cells;$/;"	m	struct:x_display_info	access:public
x_display_info::color_names	xterm.h	/^  struct color_name_cache_entry *color_names;$/;"	m	struct:x_display_info	typeref:struct:x_display_info::color_name_cache_entry	access:public
x_display_info::connection	xterm.h	/^  int connection;$/;"	m	struct:x_display_info	access:public
x_display_info::display	xterm.h	/^  Display *display;$/;"	m	struct:x_display_info	access:public
x_display_info::ext_codes	xterm.h	/^  XExtCodes *ext_codes;$/;"	m	struct:x_display_info	access:public
x_display_info::grabbed	xterm.h	/^  int grabbed;$/;"	m	struct:x_display_info	access:public
x_display_info::gray	xterm.h	/^  Pixmap gray;$/;"	m	struct:x_display_info	access:public
x_display_info::green_bits	xterm.h	/^  int red_bits, blue_bits, green_bits;$/;"	m	struct:x_display_info	access:public
x_display_info::green_offset	xterm.h	/^  int red_offset, blue_offset, green_offset;$/;"	m	struct:x_display_info	access:public
x_display_info::horizontal_scroll_bar_cursor	xterm.h	/^  Cursor horizontal_scroll_bar_cursor;$/;"	m	struct:x_display_info	access:public
x_display_info::hyper_mod_mask	xterm.h	/^  int alt_mod_mask, super_mod_mask, hyper_mod_mask;$/;"	m	struct:x_display_info	access:public
x_display_info::icon_bitmap_id	xterm.h	/^  ptrdiff_t icon_bitmap_id;$/;"	m	struct:x_display_info	access:public
x_display_info::invisible_cursor	xterm.h	/^  Cursor invisible_cursor;$/;"	m	struct:x_display_info	access:public
x_display_info::last_mouse_frame	xterm.h	/^  struct frame *last_mouse_frame;$/;"	m	struct:x_display_info	typeref:struct:x_display_info::frame	access:public
x_display_info::last_mouse_glyph	xterm.h	/^  XRectangle last_mouse_glyph;$/;"	m	struct:x_display_info	access:public
x_display_info::last_mouse_glyph_frame	xterm.h	/^  struct frame *last_mouse_glyph_frame;$/;"	m	struct:x_display_info	typeref:struct:x_display_info::frame	access:public
x_display_info::last_mouse_motion_frame	xterm.h	/^  struct frame *last_mouse_motion_frame;$/;"	m	struct:x_display_info	typeref:struct:x_display_info::frame	access:public
x_display_info::last_mouse_motion_x	xterm.h	/^  int last_mouse_motion_x;$/;"	m	struct:x_display_info	access:public
x_display_info::last_mouse_motion_y	xterm.h	/^  int last_mouse_motion_y;$/;"	m	struct:x_display_info	access:public
x_display_info::last_mouse_movement_time	xterm.h	/^  Time last_mouse_movement_time;$/;"	m	struct:x_display_info	access:public
x_display_info::last_mouse_scroll_bar	xterm.h	/^  struct scroll_bar *last_mouse_scroll_bar;$/;"	m	struct:x_display_info	typeref:struct:x_display_info::scroll_bar	access:public
x_display_info::last_user_time	xterm.h	/^  Time last_user_time;$/;"	m	struct:x_display_info	access:public
x_display_info::meta_mod_mask	xterm.h	/^  int meta_mod_mask, shift_lock_mask;$/;"	m	struct:x_display_info	access:public
x_display_info::mouse_highlight	xterm.h	/^  Mouse_HLInfo mouse_highlight;$/;"	m	struct:x_display_info	access:public
x_display_info::name_list_element	xterm.h	/^  Lisp_Object name_list_element;$/;"	m	struct:x_display_info	access:public
x_display_info::ncolor_cells	xterm.h	/^  int ncolor_cells;$/;"	m	struct:x_display_info	access:public
x_display_info::net_supported_atoms	xterm.h	/^  Atom *net_supported_atoms;$/;"	m	struct:x_display_info	access:public
x_display_info::net_supported_window	xterm.h	/^  Window net_supported_window;$/;"	m	struct:x_display_info	access:public
x_display_info::next	xterm.h	/^  struct x_display_info *next;$/;"	m	struct:x_display_info	typeref:struct:x_display_info::x_display_info	access:public
x_display_info::nr_net_supported_atoms	xterm.h	/^  int nr_net_supported_atoms;$/;"	m	struct:x_display_info	access:public
x_display_info::n_fonts	xterm.h	/^  int n_fonts;$/;"	m	struct:x_display_info	access:public
x_display_info::n_planes	xterm.h	/^  int n_planes;$/;"	m	struct:x_display_info	access:public
x_display_info::red_bits	xterm.h	/^  int red_bits, blue_bits, green_bits;$/;"	m	struct:x_display_info	access:public
x_display_info::red_offset	xterm.h	/^  int red_offset, blue_offset, green_offset;$/;"	m	struct:x_display_info	access:public
x_display_info::reference_count	xterm.h	/^  int reference_count;$/;"	m	struct:x_display_info	access:public
x_display_info::resx	xterm.h	/^  double resx, resy;$/;"	m	struct:x_display_info	access:public
x_display_info::resy	xterm.h	/^  double resx, resy;$/;"	m	struct:x_display_info	access:public
x_display_info::root_window	xterm.h	/^  Window root_window;$/;"	m	struct:x_display_info	access:public
x_display_info::scratch_cursor_gc	xterm.h	/^  GC scratch_cursor_gc;$/;"	m	struct:x_display_info	access:public
x_display_info::screen	xterm.h	/^  Screen *screen;$/;"	m	struct:x_display_info	access:public
x_display_info::shift_lock_mask	xterm.h	/^  int meta_mod_mask, shift_lock_mask;$/;"	m	struct:x_display_info	access:public
x_display_info::smallest_char_width	xterm.h	/^  int smallest_char_width;$/;"	m	struct:x_display_info	access:public
x_display_info::smallest_font_height	xterm.h	/^  int smallest_font_height;$/;"	m	struct:x_display_info	access:public
x_display_info::super_mod_mask	xterm.h	/^  int alt_mod_mask, super_mod_mask, hyper_mod_mask;$/;"	m	struct:x_display_info	access:public
x_display_info::supports_xdbe	xterm.h	/^  bool supports_xdbe;$/;"	m	struct:x_display_info	access:public
x_display_info::terminal	xterm.h	/^  struct terminal *terminal;$/;"	m	struct:x_display_info	typeref:struct:x_display_info::terminal	access:public
x_display_info::toggle_visible_pointer	xterm.h	/^  void (*toggle_visible_pointer) (struct frame *, bool);$/;"	m	struct:x_display_info	access:public
x_display_info::vertical_scroll_bar_cursor	xterm.h	/^  Cursor vertical_scroll_bar_cursor;$/;"	m	struct:x_display_info	access:public
x_display_info::visual	xterm.h	/^  Visual *visual;$/;"	m	struct:x_display_info	access:public
x_display_info::wm_type	xterm.h	/^    } wm_type;$/;"	m	struct:x_display_info	typeref:enum:x_display_info::__anon87	access:public
x_display_info::Xatom_ATOM	xterm.h	/^  Xatom_ATOM, Xatom_ATOM_PAIR, Xatom_CLIPBOARD_MANAGER;$/;"	m	struct:x_display_info	access:public
x_display_info::Xatom_ATOM_PAIR	xterm.h	/^  Xatom_ATOM, Xatom_ATOM_PAIR, Xatom_CLIPBOARD_MANAGER;$/;"	m	struct:x_display_info	access:public
x_display_info::Xatom_AVERAGE_WIDTH	xterm.h	/^  Atom Xatom_PIXEL_SIZE, Xatom_AVERAGE_WIDTH,$/;"	m	struct:x_display_info	access:public
x_display_info::Xatom_CLIPBOARD	xterm.h	/^  Atom Xatom_CLIPBOARD, Xatom_TIMESTAMP, Xatom_TEXT, Xatom_DELETE,$/;"	m	struct:x_display_info	access:public
x_display_info::Xatom_CLIPBOARD_MANAGER	xterm.h	/^  Xatom_ATOM, Xatom_ATOM_PAIR, Xatom_CLIPBOARD_MANAGER;$/;"	m	struct:x_display_info	access:public
x_display_info::Xatom_COMPOUND_TEXT	xterm.h	/^  Xatom_COMPOUND_TEXT, Xatom_UTF8_STRING,$/;"	m	struct:x_display_info	access:public
x_display_info::Xatom_DELETE	xterm.h	/^  Atom Xatom_CLIPBOARD, Xatom_TIMESTAMP, Xatom_TEXT, Xatom_DELETE,$/;"	m	struct:x_display_info	access:public
x_display_info::Xatom_DONE	xterm.h	/^  Atom Xatom_DONE, Xatom_PAGE;$/;"	m	struct:x_display_info	access:public
x_display_info::Xatom_editres	xterm.h	/^  Atom Xatom_editres;$/;"	m	struct:x_display_info	access:public
x_display_info::Xatom_EMACS_TMP	xterm.h	/^  Xatom_MULTIPLE, Xatom_INCR, Xatom_EMACS_TMP, Xatom_TARGETS, Xatom_NULL,$/;"	m	struct:x_display_info	access:public
x_display_info::Xatom_Horizontal_Scrollbar	xterm.h	/^  Atom Xatom_Scrollbar, Xatom_Horizontal_Scrollbar;$/;"	m	struct:x_display_info	access:public
x_display_info::Xatom_INCR	xterm.h	/^  Xatom_MULTIPLE, Xatom_INCR, Xatom_EMACS_TMP, Xatom_TARGETS, Xatom_NULL,$/;"	m	struct:x_display_info	access:public
x_display_info::Xatom_MULE_BASELINE_OFFSET	xterm.h	/^  Xatom_MULE_BASELINE_OFFSET, Xatom_MULE_RELATIVE_COMPOSE,$/;"	m	struct:x_display_info	access:public
x_display_info::Xatom_MULE_DEFAULT_ASCENT	xterm.h	/^  Xatom_MULE_DEFAULT_ASCENT;$/;"	m	struct:x_display_info	access:public
x_display_info::Xatom_MULE_RELATIVE_COMPOSE	xterm.h	/^  Xatom_MULE_BASELINE_OFFSET, Xatom_MULE_RELATIVE_COMPOSE,$/;"	m	struct:x_display_info	access:public
x_display_info::Xatom_MULTIPLE	xterm.h	/^  Xatom_MULTIPLE, Xatom_INCR, Xatom_EMACS_TMP, Xatom_TARGETS, Xatom_NULL,$/;"	m	struct:x_display_info	access:public
x_display_info::Xatom_net_active_window	xterm.h	/^  Atom Xatom_net_active_window;$/;"	m	struct:x_display_info	access:public
x_display_info::Xatom_net_current_desktop	xterm.h	/^    Xatom_net_frame_extents, Xatom_net_current_desktop, Xatom_net_workarea;$/;"	m	struct:x_display_info	access:public
x_display_info::Xatom_net_frame_extents	xterm.h	/^    Xatom_net_frame_extents, Xatom_net_current_desktop, Xatom_net_workarea;$/;"	m	struct:x_display_info	access:public
x_display_info::Xatom_net_supported	xterm.h	/^  Atom Xatom_net_supported, Xatom_net_supporting_wm_check;$/;"	m	struct:x_display_info	access:public
x_display_info::Xatom_net_supporting_wm_check	xterm.h	/^  Atom Xatom_net_supported, Xatom_net_supporting_wm_check;$/;"	m	struct:x_display_info	access:public
x_display_info::Xatom_net_window_type	xterm.h	/^  Atom Xatom_net_window_type, Xatom_net_window_type_tooltip;$/;"	m	struct:x_display_info	access:public
x_display_info::Xatom_net_window_type_tooltip	xterm.h	/^  Atom Xatom_net_window_type, Xatom_net_window_type_tooltip;$/;"	m	struct:x_display_info	access:public
x_display_info::Xatom_net_wm_icon_name	xterm.h	/^  Atom Xatom_net_wm_name, Xatom_net_wm_icon_name;$/;"	m	struct:x_display_info	access:public
x_display_info::Xatom_net_wm_name	xterm.h	/^  Atom Xatom_net_wm_name, Xatom_net_wm_icon_name;$/;"	m	struct:x_display_info	access:public
x_display_info::Xatom_net_wm_state	xterm.h	/^  Atom Xatom_net_wm_state, Xatom_net_wm_state_fullscreen,$/;"	m	struct:x_display_info	access:public
x_display_info::Xatom_net_wm_state_above	xterm.h	/^    Xatom_net_wm_state_sticky, Xatom_net_wm_state_above, Xatom_net_wm_state_below,$/;"	m	struct:x_display_info	access:public
x_display_info::Xatom_net_wm_state_below	xterm.h	/^    Xatom_net_wm_state_sticky, Xatom_net_wm_state_above, Xatom_net_wm_state_below,$/;"	m	struct:x_display_info	access:public
x_display_info::Xatom_net_wm_state_fullscreen	xterm.h	/^  Atom Xatom_net_wm_state, Xatom_net_wm_state_fullscreen,$/;"	m	struct:x_display_info	access:public
x_display_info::Xatom_net_wm_state_hidden	xterm.h	/^    Xatom_net_wm_state_hidden, Xatom_net_wm_state_skip_taskbar,$/;"	m	struct:x_display_info	access:public
x_display_info::Xatom_net_wm_state_maximized_horz	xterm.h	/^    Xatom_net_wm_state_maximized_horz, Xatom_net_wm_state_maximized_vert,$/;"	m	struct:x_display_info	access:public
x_display_info::Xatom_net_wm_state_maximized_vert	xterm.h	/^    Xatom_net_wm_state_maximized_horz, Xatom_net_wm_state_maximized_vert,$/;"	m	struct:x_display_info	access:public
x_display_info::Xatom_net_wm_state_skip_taskbar	xterm.h	/^    Xatom_net_wm_state_hidden, Xatom_net_wm_state_skip_taskbar,$/;"	m	struct:x_display_info	access:public
x_display_info::Xatom_net_wm_state_sticky	xterm.h	/^    Xatom_net_wm_state_sticky, Xatom_net_wm_state_above, Xatom_net_wm_state_below,$/;"	m	struct:x_display_info	access:public
x_display_info::Xatom_net_wm_window_opacity	xterm.h	/^  Atom Xatom_net_wm_window_opacity;$/;"	m	struct:x_display_info	access:public
x_display_info::Xatom_net_workarea	xterm.h	/^    Xatom_net_frame_extents, Xatom_net_current_desktop, Xatom_net_workarea;$/;"	m	struct:x_display_info	access:public
x_display_info::Xatom_NULL	xterm.h	/^  Xatom_MULTIPLE, Xatom_INCR, Xatom_EMACS_TMP, Xatom_TARGETS, Xatom_NULL,$/;"	m	struct:x_display_info	access:public
x_display_info::Xatom_PAGE	xterm.h	/^  Atom Xatom_DONE, Xatom_PAGE;$/;"	m	struct:x_display_info	access:public
x_display_info::Xatom_PIXEL_SIZE	xterm.h	/^  Atom Xatom_PIXEL_SIZE, Xatom_AVERAGE_WIDTH,$/;"	m	struct:x_display_info	access:public
x_display_info::Xatom_Scrollbar	xterm.h	/^  Atom Xatom_Scrollbar, Xatom_Horizontal_Scrollbar;$/;"	m	struct:x_display_info	access:public
x_display_info::Xatom_SM_CLIENT_ID	xterm.h	/^  Atom Xatom_SM_CLIENT_ID;$/;"	m	struct:x_display_info	access:public
x_display_info::Xatom_TARGETS	xterm.h	/^  Xatom_MULTIPLE, Xatom_INCR, Xatom_EMACS_TMP, Xatom_TARGETS, Xatom_NULL,$/;"	m	struct:x_display_info	access:public
x_display_info::Xatom_TEXT	xterm.h	/^  Atom Xatom_CLIPBOARD, Xatom_TIMESTAMP, Xatom_TEXT, Xatom_DELETE,$/;"	m	struct:x_display_info	access:public
x_display_info::Xatom_TIMESTAMP	xterm.h	/^  Atom Xatom_CLIPBOARD, Xatom_TIMESTAMP, Xatom_TEXT, Xatom_DELETE,$/;"	m	struct:x_display_info	access:public
x_display_info::Xatom_UTF8_STRING	xterm.h	/^  Xatom_COMPOUND_TEXT, Xatom_UTF8_STRING,$/;"	m	struct:x_display_info	access:public
x_display_info::Xatom_wm_change_state	xterm.h	/^  Atom Xatom_wm_change_state;$/;"	m	struct:x_display_info	access:public
x_display_info::Xatom_wm_client_leader	xterm.h	/^  Atom Xatom_wm_client_leader;    \/* Id of client leader window.  *\/$/;"	m	struct:x_display_info	access:public
x_display_info::Xatom_wm_configure_denied	xterm.h	/^  Atom Xatom_wm_configure_denied; \/* When our config request is denied *\/$/;"	m	struct:x_display_info	access:public
x_display_info::Xatom_wm_delete_window	xterm.h	/^  Atom Xatom_wm_delete_window;$/;"	m	struct:x_display_info	access:public
x_display_info::Xatom_wm_protocols	xterm.h	/^  Atom Xatom_wm_protocols;$/;"	m	struct:x_display_info	access:public
x_display_info::Xatom_wm_save_yourself	xterm.h	/^  Atom Xatom_wm_save_yourself;$/;"	m	struct:x_display_info	access:public
x_display_info::Xatom_wm_take_focus	xterm.h	/^  Atom Xatom_wm_take_focus;$/;"	m	struct:x_display_info	access:public
x_display_info::Xatom_wm_window_moved	xterm.h	/^  Atom Xatom_wm_window_moved;     \/* When the WM moves us.  *\/$/;"	m	struct:x_display_info	access:public
x_display_info::Xatom_XEMBED	xterm.h	/^  Atom Xatom_XEMBED, Xatom_XEMBED_INFO;$/;"	m	struct:x_display_info	access:public
x_display_info::Xatom_XEMBED_INFO	xterm.h	/^  Atom Xatom_XEMBED, Xatom_XEMBED_INFO;$/;"	m	struct:x_display_info	access:public
x_display_info::Xatom_xsettings_mgr	xterm.h	/^  Atom Xatom_xsettings_sel, Xatom_xsettings_prop, Xatom_xsettings_mgr;$/;"	m	struct:x_display_info	access:public
x_display_info::Xatom_xsettings_prop	xterm.h	/^  Atom Xatom_xsettings_sel, Xatom_xsettings_prop, Xatom_xsettings_mgr;$/;"	m	struct:x_display_info	access:public
x_display_info::Xatom_xsettings_sel	xterm.h	/^  Atom Xatom_xsettings_sel, Xatom_xsettings_prop, Xatom_xsettings_mgr;$/;"	m	struct:x_display_info	access:public
x_display_info::xcb_connection	xterm.h	/^  xcb_connection_t *xcb_connection;$/;"	m	struct:x_display_info	access:public
x_display_info::xg_cursor	xterm.h	/^  GdkCursor *xg_cursor;$/;"	m	struct:x_display_info	access:public
x_display_info::xim	xterm.h	/^  XIM xim;$/;"	m	struct:x_display_info	access:public
x_display_info::xim_callback_data	xterm.h	/^  struct xim_inst_t *xim_callback_data;$/;"	m	struct:x_display_info	typeref:struct:x_display_info::xim_inst_t	access:public
x_display_info::xim_styles	xterm.h	/^  XIMStyles *xim_styles;$/;"	m	struct:x_display_info	access:public
x_display_info::xrandr_major_version	xterm.h	/^  int xrandr_major_version;$/;"	m	struct:x_display_info	access:public
x_display_info::xrandr_minor_version	xterm.h	/^  int xrandr_minor_version;$/;"	m	struct:x_display_info	access:public
x_display_info::xrdb	xterm.h	/^  XrmDatabase xrdb;$/;"	m	struct:x_display_info	access:public
x_display_info::xsettings_window	xterm.h	/^  Window xsettings_window;$/;"	m	struct:x_display_info	access:public
x_display_info::x_dnd_atoms	xterm.h	/^  Atom *x_dnd_atoms;$/;"	m	struct:x_display_info	access:public
x_display_info::x_dnd_atoms_length	xterm.h	/^  ptrdiff_t x_dnd_atoms_length;$/;"	m	struct:x_display_info	access:public
x_display_info::x_dnd_atoms_size	xterm.h	/^  ptrdiff_t x_dnd_atoms_size;$/;"	m	struct:x_display_info	access:public
x_display_info::x_focus_event_frame	xterm.h	/^  struct frame *x_focus_event_frame;$/;"	m	struct:x_display_info	typeref:struct:x_display_info::frame	access:public
x_display_info::x_focus_frame	xterm.h	/^  struct frame *x_focus_frame;$/;"	m	struct:x_display_info	typeref:struct:x_display_info::frame	access:public
x_display_info::x_highlight_frame	xterm.h	/^  struct frame *x_highlight_frame;$/;"	m	struct:x_display_info	typeref:struct:x_display_info::frame	access:public
x_display_info::x_id	xterm.h	/^  unsigned x_id;$/;"	m	struct:x_display_info	access:public
x_display_info::x_id_name	xterm.h	/^  char *x_id_name;$/;"	m	struct:x_display_info	access:public
x_display_info::x_pending_autoraise_frame	xterm.h	/^  struct frame *x_pending_autoraise_frame;$/;"	m	struct:x_display_info	typeref:struct:x_display_info::frame	access:public
x_display_info::X_WMTYPE_A	xterm.h	/^      X_WMTYPE_A,$/;"	e	enum:x_display_info::__anon87
x_display_info::X_WMTYPE_B	xterm.h	/^      X_WMTYPE_B$/;"	e	enum:x_display_info::__anon87
x_display_info::X_WMTYPE_UNKNOWN	xterm.h	/^      X_WMTYPE_UNKNOWN,$/;"	e	enum:x_display_info::__anon87
x_display_info_for_display	xterm.c	/^x_display_info_for_display (Display *dpy)$/;"	f	signature:(Display *dpy)
x_display_info_for_display	xterm.h	/^extern struct x_display_info *x_display_info_for_display (Display *);$/;"	p	signature:(Display *)
x_display_info_for_name	w32fns.c	/^x_display_info_for_name (Lisp_Object name)$/;"	f	signature:(Lisp_Object name)
x_display_info_for_name	w32term.h	/^struct w32_display_info *x_display_info_for_name (Lisp_Object);$/;"	p	signature:(Lisp_Object)
x_display_info_for_name	xfns.c	/^static struct x_display_info *x_display_info_for_name (Lisp_Object);$/;"	p	file:
x_display_info_for_name	xfns.c	/^x_display_info_for_name (Lisp_Object name)$/;"	f	file:	signature:(Lisp_Object name)
x_display_list	w32term.c	/^struct w32_display_info *x_display_list;$/;"	v	typeref:struct:w32_display_info
x_display_list	xterm.c	/^struct x_display_info *x_display_list;$/;"	v	typeref:struct:x_display_info
x_display_ok	xterm.c	/^x_display_ok (const char *display)$/;"	f	signature:(const char *display)
x_display_ok	xterm.h	/^extern bool x_display_ok (const char *);$/;"	p	signature:(const char *)
x_display_pixel_height	nsterm.h	/^extern int x_display_pixel_height (struct ns_display_info *);$/;"	p	signature:(struct ns_display_info *)
x_display_pixel_height	w32term.c	/^x_display_pixel_height (struct w32_display_info *dpyinfo)$/;"	f	signature:(struct w32_display_info *dpyinfo)
x_display_pixel_height	w32term.h	/^extern int x_display_pixel_height (struct w32_display_info *);$/;"	p	signature:(struct w32_display_info *)
x_display_pixel_height	xterm.h	/^x_display_pixel_height (struct x_display_info *dpyinfo)$/;"	f	signature:(struct x_display_info *dpyinfo)
x_display_pixel_width	nsterm.h	/^extern int x_display_pixel_width (struct ns_display_info *);$/;"	p	signature:(struct ns_display_info *)
x_display_pixel_width	w32term.c	/^x_display_pixel_width (struct w32_display_info *dpyinfo)$/;"	f	signature:(struct w32_display_info *dpyinfo)
x_display_pixel_width	w32term.h	/^extern int x_display_pixel_width (struct w32_display_info *);$/;"	p	signature:(struct w32_display_info *)
x_display_pixel_width	xterm.h	/^x_display_pixel_width (struct x_display_info *dpyinfo)$/;"	f	signature:(struct x_display_info *dpyinfo)
x_display_set_last_user_time	xterm.h	/^x_display_set_last_user_time (struct x_display_info *dpyinfo, Time t)$/;"	f	signature:(struct x_display_info *dpyinfo, Time t)
x_dnd_atoms	xterm.h	/^  Atom *x_dnd_atoms;$/;"	m	struct:x_display_info	access:public
x_dnd_atoms_length	xterm.h	/^  ptrdiff_t x_dnd_atoms_length;$/;"	m	struct:x_display_info	access:public
x_dnd_atoms_size	xterm.h	/^  ptrdiff_t x_dnd_atoms_size;$/;"	m	struct:x_display_info	access:public
x_draw_bar_cursor	w32term.c	/^static void x_draw_bar_cursor (struct window *, struct glyph_row *, int,$/;"	p	file:	signature:(struct window *, struct glyph_row *, int, enum text_cursor_kinds)
x_draw_bar_cursor	w32term.c	/^x_draw_bar_cursor (struct window *w, struct glyph_row *row,$/;"	f	file:	signature:(struct window *w, struct glyph_row *row, int width, enum text_cursor_kinds kind)
x_draw_bar_cursor	xterm.c	/^x_draw_bar_cursor (struct window *w, struct glyph_row *row, int width, enum text_cursor_kinds kind)$/;"	f	file:	signature:(struct window *w, struct glyph_row *row, int width, enum text_cursor_kinds kind)
x_draw_bottom_divider	xdisp.c	/^static void x_draw_bottom_divider (struct window *w);$/;"	p	file:	signature:(struct window *w)
x_draw_bottom_divider	xdisp.c	/^x_draw_bottom_divider (struct window *w)$/;"	f	file:	signature:(struct window *w)
x_draw_box_rect	xterm.c	/^static void x_draw_box_rect (struct glyph_string *, int, int, int, int,$/;"	p	file:	signature:(struct glyph_string *, int, int, int, int, int, bool, bool, XRectangle *)
x_draw_box_rect	xterm.c	/^x_draw_box_rect (struct glyph_string *s,$/;"	f	file:	signature:(struct glyph_string *s, int left_x, int top_y, int right_x, int bottom_y, int width, bool left_p, bool right_p, XRectangle *clip_rect)
x_draw_composite_glyph_string_foreground	w32term.c	/^static void x_draw_composite_glyph_string_foreground (struct glyph_string *);$/;"	p	file:	signature:(struct glyph_string *)
x_draw_composite_glyph_string_foreground	w32term.c	/^x_draw_composite_glyph_string_foreground (struct glyph_string *s)$/;"	f	file:	signature:(struct glyph_string *s)
x_draw_composite_glyph_string_foreground	xterm.c	/^static void x_draw_composite_glyph_string_foreground (struct glyph_string *);$/;"	p	file:	signature:(struct glyph_string *)
x_draw_composite_glyph_string_foreground	xterm.c	/^x_draw_composite_glyph_string_foreground (struct glyph_string *s)$/;"	f	file:	signature:(struct glyph_string *s)
x_draw_fringe_bitmap	xterm.c	/^x_draw_fringe_bitmap (struct window *w, struct glyph_row *row, struct draw_fringe_bitmap_params *p)$/;"	f	file:	signature:(struct window *w, struct glyph_row *row, struct draw_fringe_bitmap_params *p)
x_draw_glyphless_glyph_string_foreground	w32term.c	/^x_draw_glyphless_glyph_string_foreground (struct glyph_string *s)$/;"	f	file:	signature:(struct glyph_string *s)
x_draw_glyphless_glyph_string_foreground	xterm.c	/^x_draw_glyphless_glyph_string_foreground (struct glyph_string *s)$/;"	f	file:	signature:(struct glyph_string *s)
x_draw_glyph_string	w32term.c	/^static void x_draw_glyph_string  (struct glyph_string *);$/;"	p	file:	signature:(struct glyph_string *)
x_draw_glyph_string	w32term.c	/^x_draw_glyph_string (struct glyph_string *s)$/;"	f	file:	signature:(struct glyph_string *s)
x_draw_glyph_string	xterm.c	/^static void x_draw_glyph_string  (struct glyph_string *);$/;"	p	file:	signature:(struct glyph_string *)
x_draw_glyph_string	xterm.c	/^x_draw_glyph_string (struct glyph_string *s)$/;"	f	file:	signature:(struct glyph_string *s)
x_draw_glyph_string_background	w32term.c	/^static void x_draw_glyph_string_background (struct glyph_string *,$/;"	p	file:	signature:(struct glyph_string *, bool)
x_draw_glyph_string_background	w32term.c	/^x_draw_glyph_string_background (struct glyph_string *s, bool force_p)$/;"	f	file:	signature:(struct glyph_string *s, bool force_p)
x_draw_glyph_string_background	xterm.c	/^x_draw_glyph_string_background (struct glyph_string *s, bool force_p)$/;"	f	file:	signature:(struct glyph_string *s, bool force_p)
x_draw_glyph_string_bg_rect	w32term.c	/^x_draw_glyph_string_bg_rect (struct glyph_string *s, int x, int y, int w, int h)$/;"	f	file:	signature:(struct glyph_string *s, int x, int y, int w, int h)
x_draw_glyph_string_bg_rect	xterm.c	/^x_draw_glyph_string_bg_rect (struct glyph_string *s, int x, int y, int w, int h)$/;"	f	file:	signature:(struct glyph_string *s, int x, int y, int w, int h)
x_draw_glyph_string_box	w32term.c	/^static void x_draw_glyph_string_box (struct glyph_string *);$/;"	p	file:	signature:(struct glyph_string *)
x_draw_glyph_string_box	w32term.c	/^x_draw_glyph_string_box (struct glyph_string *s)$/;"	f	file:	signature:(struct glyph_string *s)
x_draw_glyph_string_box	xterm.c	/^static void x_draw_glyph_string_box (struct glyph_string *);$/;"	p	file:	signature:(struct glyph_string *)
x_draw_glyph_string_box	xterm.c	/^x_draw_glyph_string_box (struct glyph_string *s)$/;"	f	file:	signature:(struct glyph_string *s)
x_draw_glyph_string_foreground	w32term.c	/^static void x_draw_glyph_string_foreground (struct glyph_string *);$/;"	p	file:	signature:(struct glyph_string *)
x_draw_glyph_string_foreground	w32term.c	/^x_draw_glyph_string_foreground (struct glyph_string *s)$/;"	f	file:	signature:(struct glyph_string *s)
x_draw_glyph_string_foreground	xterm.c	/^static void x_draw_glyph_string_foreground (struct glyph_string *);$/;"	p	file:	signature:(struct glyph_string *)
x_draw_glyph_string_foreground	xterm.c	/^x_draw_glyph_string_foreground (struct glyph_string *s)$/;"	f	file:	signature:(struct glyph_string *s)
x_draw_hollow_cursor	w32term.c	/^static void x_draw_hollow_cursor (struct window *, struct glyph_row *);$/;"	p	file:	signature:(struct window *, struct glyph_row *)
x_draw_hollow_cursor	w32term.c	/^x_draw_hollow_cursor (struct window *w, struct glyph_row *row)$/;"	f	file:	signature:(struct window *w, struct glyph_row *row)
x_draw_hollow_cursor	xterm.c	/^x_draw_hollow_cursor (struct window *w, struct glyph_row *row)$/;"	f	file:	signature:(struct window *w, struct glyph_row *row)
x_draw_horizontal_wave	xterm.c	/^x_draw_horizontal_wave (struct frame *f, GC gc, int x, int y,$/;"	f	file:	signature:(struct frame *f, GC gc, int x, int y, int width, int height, int wave_length)
x_draw_image_foreground	w32term.c	/^static void x_draw_image_foreground (struct glyph_string *);$/;"	p	file:	signature:(struct glyph_string *)
x_draw_image_foreground	w32term.c	/^x_draw_image_foreground (struct glyph_string *s)$/;"	f	file:	signature:(struct glyph_string *s)
x_draw_image_foreground	xterm.c	/^static void x_draw_image_foreground (struct glyph_string *);$/;"	p	file:	signature:(struct glyph_string *)
x_draw_image_foreground	xterm.c	/^x_draw_image_foreground (struct glyph_string *s)$/;"	f	file:	signature:(struct glyph_string *s)
x_draw_image_foreground_1	xterm.c	/^static void x_draw_image_foreground_1 (struct glyph_string *, Pixmap);$/;"	p	file:	signature:(struct glyph_string *, Pixmap)
x_draw_image_foreground_1	xterm.c	/^x_draw_image_foreground_1 (struct glyph_string *s, Pixmap pixmap)$/;"	f	file:	signature:(struct glyph_string *s, Pixmap pixmap)
x_draw_image_glyph_string	w32term.c	/^static void x_draw_image_glyph_string (struct glyph_string *);$/;"	p	file:	signature:(struct glyph_string *)
x_draw_image_glyph_string	w32term.c	/^x_draw_image_glyph_string (struct glyph_string *s)$/;"	f	file:	signature:(struct glyph_string *s)
x_draw_image_glyph_string	xterm.c	/^static void x_draw_image_glyph_string (struct glyph_string *);$/;"	p	file:	signature:(struct glyph_string *)
x_draw_image_glyph_string	xterm.c	/^x_draw_image_glyph_string (struct glyph_string *s)$/;"	f	file:	signature:(struct glyph_string *s)
x_draw_image_relief	w32term.c	/^static void x_draw_image_relief (struct glyph_string *);$/;"	p	file:	signature:(struct glyph_string *)
x_draw_image_relief	w32term.c	/^x_draw_image_relief (struct glyph_string *s)$/;"	f	file:	signature:(struct glyph_string *s)
x_draw_image_relief	xterm.c	/^static void x_draw_image_relief (struct glyph_string *);$/;"	p	file:	signature:(struct glyph_string *)
x_draw_image_relief	xterm.c	/^x_draw_image_relief (struct glyph_string *s)$/;"	f	file:	signature:(struct glyph_string *s)
x_draw_rectangle	xterm.c	/^x_draw_rectangle (struct frame *f, GC gc, int x, int y, int width, int height)$/;"	f	file:	signature:(struct frame *f, GC gc, int x, int y, int width, int height)
x_draw_relief_rect	xterm.c	/^static void x_draw_relief_rect (struct frame *, int, int, int, int,$/;"	p	file:	signature:(struct frame *, int, int, int, int, int, bool, bool, bool, bool, bool, XRectangle *)
x_draw_relief_rect	xterm.c	/^x_draw_relief_rect (struct frame *f,$/;"	f	file:	signature:(struct frame *f, int left_x, int top_y, int right_x, int bottom_y, int width, bool raised_p, bool top_p, bool bot_p, bool left_p, bool right_p, XRectangle *clip_rect)
x_draw_right_divider	dispextern.h	/^extern void x_draw_right_divider (struct window *w);$/;"	p	signature:(struct window *w)
x_draw_right_divider	xdisp.c	/^x_draw_right_divider (struct window *w)$/;"	f	signature:(struct window *w)
x_draw_stretch_glyph_string	w32term.c	/^x_draw_stretch_glyph_string (struct glyph_string *s)$/;"	f	file:	signature:(struct glyph_string *s)
x_draw_stretch_glyph_string	xterm.c	/^x_draw_stretch_glyph_string (struct glyph_string *s)$/;"	f	file:	signature:(struct glyph_string *s)
x_draw_underwave	xterm.c	/^x_draw_underwave (struct glyph_string *s)$/;"	f	file:	signature:(struct glyph_string *s)
x_draw_vertical_border	dispextern.h	/^extern void x_draw_vertical_border (struct window *w);$/;"	p	signature:(struct window *w)
x_draw_vertical_border	xdisp.c	/^x_draw_vertical_border (struct window *w)$/;"	f	signature:(struct window *w)
x_draw_vertical_window_border	xterm.c	/^x_draw_vertical_window_border (struct window *w, int x, int y0, int y1)$/;"	f	file:	signature:(struct window *w, int x, int y0, int y1)
x_draw_window_cursor	xterm.c	/^x_draw_window_cursor (struct window *w, struct glyph_row *glyph_row, int x,$/;"	f	file:	signature:(struct window *w, struct glyph_row *glyph_row, int x, int y, enum text_cursor_kinds cursor_type, int cursor_width, bool on_p, bool active_p)
x_draw_window_divider	xterm.c	/^x_draw_window_divider (struct window *w, int x0, int x1, int y0, int y1)$/;"	f	file:	signature:(struct window *w, int x0, int x1, int y0, int y1)
x_draw_xwidget_glyph_string	xwidget.c	/^x_draw_xwidget_glyph_string (struct glyph_string *s)$/;"	f	signature:(struct glyph_string *s)
x_draw_xwidget_glyph_string	xwidget.h	/^INLINE void x_draw_xwidget_glyph_string (struct glyph_string *s) { eassume (0); }$/;"	f	signature:(struct glyph_string *s)
x_draw_xwidget_glyph_string	xwidget.h	/^void x_draw_xwidget_glyph_string (struct glyph_string *);$/;"	p	signature:(struct glyph_string *)
x_edge_detection	image.c	/^static void x_edge_detection (struct frame *, struct image *, Lisp_Object,$/;"	p	file:	signature:(struct frame *, struct image *, Lisp_Object, Lisp_Object)
x_edge_detection	image.c	/^x_edge_detection (struct frame *f, struct image *img, Lisp_Object matrix,$/;"	f	file:	signature:(struct frame *f, struct image *img, Lisp_Object matrix, Lisp_Object color_adjust)
x_emacs_to_x_modifiers	xterm.c	/^x_emacs_to_x_modifiers (struct x_display_info *dpyinfo, EMACS_INT state)$/;"	f	file:	signature:(struct x_display_info *dpyinfo, EMACS_INT state)
x_emboss	image.c	/^static void x_emboss (struct frame *, struct image *);$/;"	p	file:	signature:(struct frame *, struct image *)
x_emboss	image.c	/^x_emboss (struct frame *f, struct image *img)$/;"	f	file:	signature:(struct frame *f, struct image *img)
x_encode_text	xfns.c	/^x_encode_text (Lisp_Object string, Lisp_Object coding_system,$/;"	f	file:	signature:(Lisp_Object string, Lisp_Object coding_system, ptrdiff_t *text_bytes, bool *stringp, bool *freep)
x_end_cr_clip	xterm.c	/^x_end_cr_clip (struct frame *f)$/;"	f	signature:(struct frame *f)
x_end_cr_clip	xterm.h	/^extern void x_end_cr_clip (struct frame *);$/;"	p	signature:(struct frame *)
x_erase_corners_for_relief	xterm.c	/^x_erase_corners_for_relief (struct frame *f, GC gc, int x, int y,$/;"	f	file:	signature:(struct frame *f, GC gc, int x, int y, int width, int height, double radius, double margin, int corners)
x_error_catcher	xterm.c	/^x_error_catcher (Display *display, XErrorEvent *event)$/;"	f	file:	signature:(Display *display, XErrorEvent *event)
x_error_handler	xterm.c	/^x_error_handler (Display *display, XErrorEvent *event)$/;"	f	file:	signature:(Display *display, XErrorEvent *event)
x_error_message	xterm.c	/^static struct x_error_message_stack *x_error_message;$/;"	v	typeref:struct:x_error_message_stack	file:
X_ERROR_MESSAGE_SIZE	xterm.c	9519;"	d	file:
x_error_message_stack	xterm.c	/^struct x_error_message_stack {$/;"	s	file:
x_error_message_stack::dpy	xterm.c	/^  Display *dpy;$/;"	m	struct:x_error_message_stack	file:	access:public
x_error_message_stack::handler	xterm.c	/^  x_special_error_handler handler;$/;"	m	struct:x_error_message_stack	file:	access:public
x_error_message_stack::handler_data	xterm.c	/^  void *handler_data;$/;"	m	struct:x_error_message_stack	file:	access:public
x_error_message_stack::prev	xterm.c	/^  struct x_error_message_stack *prev;$/;"	m	struct:x_error_message_stack	typeref:struct:x_error_message_stack::x_error_message_stack	file:	access:public
x_error_message_stack::string	xterm.c	/^  char string[X_ERROR_MESSAGE_SIZE];$/;"	m	struct:x_error_message_stack	file:	access:public
x_error_quitter	xterm.c	/^static void x_error_quitter (Display *, XErrorEvent *);$/;"	p	file:	signature:(Display *, XErrorEvent *)
x_error_quitter	xterm.c	/^x_error_quitter (Display *display, XErrorEvent *event)$/;"	f	file:	signature:(Display *display, XErrorEvent *event)
X_EVENT_DROP	xterm.c	/^  X_EVENT_DROP$/;"	e	enum:__anon65	file:
X_EVENT_GOTO_OUT	xterm.c	/^  X_EVENT_GOTO_OUT,$/;"	e	enum:__anon65	file:
X_EVENT_NORMAL	xterm.c	/^  X_EVENT_NORMAL,$/;"	e	enum:__anon65	file:
x_ewmh_activate_frame	xterm.c	/^x_ewmh_activate_frame (struct frame *f)$/;"	f	signature:(struct frame *f)
x_ewmh_activate_frame	xterm.h	/^extern void x_ewmh_activate_frame (struct frame *);$/;"	p	signature:(struct frame *)
x_explicitly_set_name	w32fns.c	/^void x_explicitly_set_name (struct frame *, Lisp_Object, Lisp_Object);$/;"	p	file:	signature:(struct frame *, Lisp_Object, Lisp_Object)
x_explicitly_set_name	w32fns.c	/^x_explicitly_set_name (struct frame *f, Lisp_Object arg, Lisp_Object oldval)$/;"	f	signature:(struct frame *f, Lisp_Object arg, Lisp_Object oldval)
x_explicitly_set_name	xfns.c	/^x_explicitly_set_name (struct frame *f, Lisp_Object arg, Lisp_Object oldval)$/;"	f	file:	signature:(struct frame *f, Lisp_Object arg, Lisp_Object oldval)
x_extension_initialize	xterm.c	/^x_extension_initialize (struct x_display_info *dpyinfo)$/;"	f	file:	signature:(struct x_display_info *dpyinfo)
x_figure_window_size	frame.c	/^x_figure_window_size (struct frame *f, Lisp_Object parms, bool toolbar_p, int *x_width, int *x_height)$/;"	f	signature:(struct frame *f, Lisp_Object parms, bool toolbar_p, int *x_width, int *x_height)
x_figure_window_size	frame.h	/^extern long x_figure_window_size (struct frame *, Lisp_Object, bool, int *, int *);$/;"	p	signature:(struct frame *, Lisp_Object, bool, int *, int *)
x_fill_property_data	xselect.c	/^x_fill_property_data (Display *dpy, Lisp_Object data, void *ret, int format)$/;"	f	signature:(Display *dpy, Lisp_Object data, void *ret, int format)
x_fill_property_data	xterm.h	/^extern void x_fill_property_data (Display *,$/;"	p	signature:(Display *, Lisp_Object, void *, int)
x_fill_rectangle	xterm.c	/^x_fill_rectangle (struct frame *f, GC gc, int x, int y, int width, int height)$/;"	f	file:	signature:(struct frame *f, GC gc, int x, int y, int width, int height)
x_fill_trapezoid_for_relief	xterm.c	/^x_fill_trapezoid_for_relief (struct frame *f, GC gc, int x, int y,$/;"	f	file:	signature:(struct frame *f, GC gc, int x, int y, int width, int height, int top_p)
x_filter_event	xterm.c	/^x_filter_event (struct x_display_info *dpyinfo, XEvent *event)$/;"	f	file:	signature:(struct x_display_info *dpyinfo, XEvent *event)
x_find_image_fd	image.c	/^x_find_image_fd (Lisp_Object file, int *pfd)$/;"	f	file:	signature:(Lisp_Object file, int *pfd)
x_find_image_file	dispextern.h	/^extern Lisp_Object x_find_image_file (Lisp_Object);$/;"	p	signature:(Lisp_Object)
x_find_image_file	image.c	/^x_find_image_file (Lisp_Object file)$/;"	f	signature:(Lisp_Object file)
x_find_modifier_meanings	xterm.c	/^x_find_modifier_meanings (struct x_display_info *dpyinfo)$/;"	f	file:	signature:(struct x_display_info *dpyinfo)
x_find_topmost_parent	xterm.c	/^x_find_topmost_parent (struct frame *f)$/;"	f	file:	signature:(struct frame *f)
x_fix_overlapping_area	dispextern.h	/^extern void x_fix_overlapping_area (struct window *, struct glyph_row *,$/;"	p	signature:(struct window *, struct glyph_row *, enum glyph_row_area, int)
x_fix_overlapping_area	xdisp.c	/^x_fix_overlapping_area (struct window *w, struct glyph_row *row,$/;"	f	signature:(struct window *w, struct glyph_row *row, enum glyph_row_area area, int overlaps)
x_flip_and_flush	xterm.c	/^x_flip_and_flush (struct frame *f)$/;"	f	file:	signature:(struct frame *f)
x_flush	xterm.c	/^x_flush (struct frame *f)$/;"	f	file:	signature:(struct frame *f)
x_focus_changed	w32term.c	/^static void x_focus_changed (int, int, struct w32_display_info *,$/;"	p	file:	signature:(int, int, struct w32_display_info *, struct frame *, struct input_event *)
x_focus_changed	w32term.c	/^x_focus_changed (int type, int state, struct w32_display_info *dpyinfo,$/;"	f	file:	signature:(int type, int state, struct w32_display_info *dpyinfo, struct frame *frame, struct input_event *bufp)
x_focus_changed	xterm.c	/^x_focus_changed (int type, int state, struct x_display_info *dpyinfo, struct frame *frame, struct input_event *bufp)$/;"	f	file:	signature:(int type, int state, struct x_display_info *dpyinfo, struct frame *frame, struct input_event *bufp)
x_focus_event_frame	xterm.h	/^  struct frame *x_focus_event_frame;$/;"	m	struct:x_display_info	typeref:struct:x_display_info::frame	access:public
x_focus_frame	frame.h	/^extern void x_focus_frame (struct frame *, bool);$/;"	p	signature:(struct frame *, bool)
x_focus_frame	nsterm.h	/^  struct frame *x_focus_frame;$/;"	m	struct:ns_display_info	typeref:struct:ns_display_info::frame	access:public
x_focus_frame	w32term.c	/^x_focus_frame (struct frame *f, bool noactivate)$/;"	f	signature:(struct frame *f, bool noactivate)
x_focus_frame	xfns.c	/^x_focus_frame (struct frame *f, bool noactivate)$/;"	f	signature:(struct frame *f, bool noactivate)
x_focus_frame	xterm.h	/^  struct frame *x_focus_frame;$/;"	m	struct:x_display_info	typeref:struct:x_display_info::frame	access:public
x_frame_get_and_record_arg	dispextern.h	/^extern Lisp_Object x_frame_get_and_record_arg (struct frame *, Lisp_Object,$/;"	p	signature:(struct frame *, Lisp_Object, Lisp_Object, const char *, const char *, enum resource_types)
x_frame_get_and_record_arg	frame.c	/^x_frame_get_and_record_arg (struct frame *f, Lisp_Object alist,$/;"	f	signature:(struct frame *f, Lisp_Object alist, Lisp_Object param, const char *attribute, const char *class, enum resource_types type)
x_frame_get_arg	frame.c	/^x_frame_get_arg (struct frame *f, Lisp_Object alist, Lisp_Object param,$/;"	f	file:	signature:(struct frame *f, Lisp_Object alist, Lisp_Object param, const char *attribute, const char *class, enum resource_types type)
x_frame_list_z_order	xfns.c	/^x_frame_list_z_order (Display* dpy, Window window)$/;"	f	file:	signature:(Display* dpy, Window window)
x_frame_normalize_before_maximize	globals.h	1071;"	d
x_frame_of_widget	xterm.c	/^x_frame_of_widget (Widget widget)$/;"	f	file:	signature:(Widget widget)
x_frame_parm_handlers	xfns.c	/^frame_parm_handler x_frame_parm_handlers[] =$/;"	v
x_frame_rehighlight	w32term.c	/^static void x_frame_rehighlight (struct w32_display_info *);$/;"	p	file:	signature:(struct w32_display_info *)
x_frame_rehighlight	w32term.c	/^x_frame_rehighlight (struct w32_display_info *dpyinfo)$/;"	f	file:	signature:(struct w32_display_info *dpyinfo)
x_frame_rehighlight	xterm.c	/^static void x_frame_rehighlight (struct x_display_info *);$/;"	p	file:	signature:(struct x_display_info *)
x_frame_rehighlight	xterm.c	/^x_frame_rehighlight (struct x_display_info *dpyinfo)$/;"	f	file:	signature:(struct x_display_info *dpyinfo)
x_frame_restack	xfns.c	/^x_frame_restack (struct frame *f1, struct frame *f2, bool above_flag)$/;"	f	file:	signature:(struct frame *f1, struct frame *f2, bool above_flag)
x_free_colors	dispextern.h	/^void x_free_colors (struct frame *, unsigned long *, int);$/;"	p	signature:(struct frame *, unsigned long *, int)
x_free_colors	xfaces.c	/^x_free_colors (struct frame *f, unsigned long *pixels, int npixels)$/;"	f	signature:(struct frame *f, unsigned long *pixels, int npixels)
x_free_cr_resources	xterm.c	/^static void x_free_cr_resources (struct frame *);$/;"	p	file:	signature:(struct frame *)
x_free_cr_resources	xterm.c	/^x_free_cr_resources (struct frame *f)$/;"	f	file:	signature:(struct frame *f)
x_free_dpy_colors	xfaces.c	/^x_free_dpy_colors (Display *dpy, Screen *screen, Colormap cmap,$/;"	f	signature:(Display *dpy, Screen *screen, Colormap cmap, unsigned long *pixels, int npixels)
x_free_dpy_colors	xterm.h	/^extern void x_free_dpy_colors (Display *, Screen *, Colormap,$/;"	p	signature:(Display *, Screen *, Colormap, unsigned long *, int)
x_free_frame_resources	frame.h	/^extern void x_free_frame_resources (struct frame *);$/;"	p	signature:(struct frame *)
x_free_frame_resources	w32term.c	/^x_free_frame_resources (struct frame *f)$/;"	f	signature:(struct frame *f)
x_free_frame_resources	xterm.c	/^x_free_frame_resources (struct frame *f)$/;"	f	signature:(struct frame *f)
x_free_gc	xfaces.c	/^x_free_gc (struct frame *f, GC gc)$/;"	f	file:	signature:(struct frame *f, GC gc)
x_free_gcs	xfns.c	/^x_free_gcs (struct frame *f)$/;"	f	signature:(struct frame *f)
x_free_gcs	xterm.h	/^extern void x_free_gcs (struct frame *);$/;"	p	signature:(struct frame *)
x_from_xcolors	image.c	/^x_from_xcolors (struct frame *f, struct image *img, XColor *colors)$/;"	f	file:	signature:(struct frame *f, struct image *img, XColor *colors)
x_fully_uncatch_errors	xterm.c	/^x_fully_uncatch_errors (void)$/;"	f	signature:(void)
x_gc_ext_data	xterm.h	/^struct x_gc_ext_data$/;"	s
x_gc_ext_data::clip_rects	xterm.h	/^  XRectangle clip_rects[MAX_CLIP_RECTS];$/;"	m	struct:x_gc_ext_data	access:public
x_gc_ext_data::n_clip_rects	xterm.h	/^  int n_clip_rects;$/;"	m	struct:x_gc_ext_data	access:public
x_gc_get_ext_data	xterm.c	/^x_gc_get_ext_data (struct frame *f, GC gc, int create_if_not_found_p)$/;"	f	file:	signature:(struct frame *f, GC gc, int create_if_not_found_p)
x_get_arg	dispextern.h	/^extern Lisp_Object x_get_arg (Display_Info *, Lisp_Object,$/;"	p	signature:(Display_Info *, Lisp_Object, Lisp_Object, const char *, const char *class, enum resource_types)
x_get_arg	frame.c	/^x_get_arg (Display_Info *dpyinfo, Lisp_Object alist, Lisp_Object param,$/;"	f	signature:(Display_Info *dpyinfo, Lisp_Object alist, Lisp_Object param, const char *attribute, const char *class, enum resource_types type)
x_get_customization_string	xrdb.c	/^x_get_customization_string (XrmDatabase db, const char *name,$/;"	f	file:	signature:(XrmDatabase db, const char *name, const char *class)
x_get_focus_frame	frame.h	/^extern Lisp_Object x_get_focus_frame (struct frame *);$/;"	p	signature:(struct frame *)
x_get_focus_frame	w32fns.c	/^x_get_focus_frame (struct frame *frame)$/;"	f	signature:(struct frame *frame)
x_get_focus_frame	xfns.c	/^x_get_focus_frame (struct frame *frame)$/;"	f	signature:(struct frame *frame)
x_get_foreign_selection	xselect.c	/^x_get_foreign_selection (Lisp_Object selection_symbol, Lisp_Object target_type,$/;"	f	file:	signature:(Lisp_Object selection_symbol, Lisp_Object target_type, Lisp_Object time_stamp, Lisp_Object frame)
x_get_glyph_overhangs	dispextern.h	/^extern void x_get_glyph_overhangs (struct glyph *, struct frame *,$/;"	p	signature:(struct glyph *, struct frame *, int *, int *)
x_get_glyph_overhangs	xdisp.c	/^x_get_glyph_overhangs (struct glyph *glyph, struct frame *f, int *left, int *right)$/;"	f	signature:(struct glyph *glyph, struct frame *f, int *left, int *right)
x_get_keysym_name	lisp.h	/^extern char *x_get_keysym_name (int);$/;"	p	signature:(int)
x_get_keysym_name	w32term.c	/^x_get_keysym_name (int keysym)$/;"	f	signature:(int keysym)
x_get_keysym_name	xterm.c	/^x_get_keysym_name (int keysym)$/;"	f	signature:(int keysym)
x_get_local_selection	xselect.c	/^x_get_local_selection (Lisp_Object selection_symbol, Lisp_Object target_type,$/;"	f	file:	signature:(Lisp_Object selection_symbol, Lisp_Object target_type, bool local_request, struct x_display_info *dpyinfo)
x_get_monitor_attributes	xfns.c	/^x_get_monitor_attributes (struct x_display_info *dpyinfo)$/;"	f	file:	signature:(struct x_display_info *dpyinfo)
x_get_monitor_attributes_fallback	xfns.c	/^x_get_monitor_attributes_fallback (struct x_display_info *dpyinfo)$/;"	f	file:	signature:(struct x_display_info *dpyinfo)
x_get_monitor_attributes_xinerama	xfns.c	/^x_get_monitor_attributes_xinerama (struct x_display_info *dpyinfo)$/;"	f	file:	signature:(struct x_display_info *dpyinfo)
x_get_monitor_attributes_xrandr	xfns.c	/^x_get_monitor_attributes_xrandr (struct x_display_info *dpyinfo)$/;"	f	file:	signature:(struct x_display_info *dpyinfo)
x_get_monitor_for_frame	xfns.c	/^x_get_monitor_for_frame (struct frame *f,$/;"	f	file:	signature:(struct frame *f, struct MonitorInfo *monitors, int n_monitors)
x_get_net_workarea	xfns.c	/^x_get_net_workarea (struct x_display_info *dpyinfo, XRectangle *rect)$/;"	f	file:	signature:(struct x_display_info *dpyinfo, XRectangle *rect)
x_get_resource	xrdb.c	/^x_get_resource (XrmDatabase rdb, const char *name, const char *class,$/;"	f	file:	signature:(XrmDatabase rdb, const char *name, const char *class, XrmRepresentation expected_type, XrmValue *ret_value)
x_get_resource_string	frame.c	/^x_get_resource_string (const char *attribute, const char *class)$/;"	f	signature:(const char *attribute, const char *class)
x_get_resource_string	frame.h	/^extern char *x_get_resource_string (const char *, const char *);$/;"	p	signature:(const char *, const char *)
x_get_string_resource	dispextern.h	/^extern char *x_get_string_resource (XrmDatabase, const char *,$/;"	p	signature:(XrmDatabase, const char *, const char *)
x_get_string_resource	w32reg.c	/^x_get_string_resource (XrmDatabase rdb, const char *name, const char *class)$/;"	f	signature:(XrmDatabase rdb, const char *name, const char *class)
x_get_string_resource	xrdb.c	/^x_get_string_resource (XrmDatabase rdb, const char *name, const char *class)$/;"	f	signature:(XrmDatabase rdb, const char *name, const char *class)
x_get_window_property	xselect.c	/^x_get_window_property (Display *display, Window window, Atom property,$/;"	f	file:	signature:(Display *display, Window window, Atom property, unsigned char **data_ret, ptrdiff_t *bytes_ret, Atom *actual_type_ret, int *actual_format_ret, unsigned long *actual_size_ret)
x_get_window_property_as_lisp_data	xselect.c	/^static Lisp_Object x_get_window_property_as_lisp_data (struct x_display_info *,$/;"	p	file:	signature:(struct x_display_info *, Window, Atom, Lisp_Object, Atom)
x_get_window_property_as_lisp_data	xselect.c	/^x_get_window_property_as_lisp_data (struct x_display_info *dpyinfo,$/;"	f	file:	signature:(struct x_display_info *dpyinfo, Window window, Atom property, Lisp_Object target_type, Atom selection_atom)
x_gtk_file_dialog_help_text	globals.h	1073;"	d
x_gtk_show_hidden_files	globals.h	1075;"	d
x_gtk_use_old_file_dialog	globals.h	1077;"	d
x_gtk_use_system_tooltips	globals.h	1079;"	d
x_gtk_use_window_move	globals.h	1081;"	d
x_had_errors_p	xterm.c	/^x_had_errors_p (Display *dpy)$/;"	f	signature:(Display *dpy)
x_had_errors_p	xterm.h	/^extern bool x_had_errors_p (Display *);$/;"	p	signature:(Display *)
x_handle_dnd_message	xselect.c	/^x_handle_dnd_message (struct frame *f, const XClientMessageEvent *event,$/;"	f	signature:(struct frame *f, const XClientMessageEvent *event, struct x_display_info *dpyinfo, struct input_event *bufp)
x_handle_dnd_message	xterm.h	/^extern bool x_handle_dnd_message (struct frame *,$/;"	p	signature:(struct frame *, const XClientMessageEvent *, struct x_display_info *, struct input_event *)
x_handle_net_wm_state	xterm.c	/^static bool x_handle_net_wm_state (struct frame *, const XPropertyEvent *);$/;"	p	file:	signature:(struct frame *, const XPropertyEvent *)
x_handle_net_wm_state	xterm.c	/^x_handle_net_wm_state (struct frame *f, const XPropertyEvent *event)$/;"	f	file:	signature:(struct frame *f, const XPropertyEvent *event)
x_handle_property_notify	xselect.c	/^x_handle_property_notify (const XPropertyEvent *event)$/;"	f	signature:(const XPropertyEvent *event)
x_handle_property_notify	xterm.h	/^extern void x_handle_property_notify (const XPropertyEvent *);$/;"	p	signature:(const XPropertyEvent *)
x_handle_selection_clear	xselect.c	/^x_handle_selection_clear (struct selection_input_event *event)$/;"	f	file:	signature:(struct selection_input_event *event)
x_handle_selection_event	xselect.c	/^x_handle_selection_event (struct selection_input_event *event)$/;"	f	signature:(struct selection_input_event *event)
x_handle_selection_event	xterm.h	/^extern void x_handle_selection_event (struct selection_input_event *);$/;"	p	signature:(struct selection_input_event *)
x_handle_selection_notify	xselect.c	/^x_handle_selection_notify (const XSelectionEvent *event)$/;"	f	signature:(const XSelectionEvent *event)
x_handle_selection_notify	xterm.h	/^extern void x_handle_selection_notify (const XSelectionEvent *);$/;"	p	signature:(const XSelectionEvent *)
x_handle_selection_request	xselect.c	/^x_handle_selection_request (struct selection_input_event *event)$/;"	f	file:	signature:(struct selection_input_event *event)
x_hide_hourglass	xterm.c	/^x_hide_hourglass (struct frame *f)$/;"	f	file:	signature:(struct frame *f)
x_hide_tip	w32fns.c	/^x_hide_tip (bool delete)$/;"	f	file:	signature:(bool delete)
x_hide_tip	xfns.c	/^x_hide_tip (bool delete)$/;"	f	file:	signature:(bool delete)
x_highlight_frame	nsterm.h	/^  struct frame *x_highlight_frame;$/;"	m	struct:ns_display_info	typeref:struct:ns_display_info::frame	access:public
x_highlight_frame	w32term.h	/^  struct frame *x_highlight_frame;$/;"	m	struct:w32_display_info	typeref:struct:w32_display_info::frame	access:public
x_highlight_frame	xterm.h	/^  struct frame *x_highlight_frame;$/;"	m	struct:x_display_info	typeref:struct:x_display_info::frame	access:public
x_horizontal_scroll_bar_report_motion	w32term.c	/^static void x_horizontal_scroll_bar_report_motion (struct frame **, Lisp_Object *,$/;"	p	file:	signature:(struct frame **, Lisp_Object *, enum scroll_bar_part *, Lisp_Object *, Lisp_Object *, Time *)
x_horizontal_scroll_bar_report_motion	w32term.c	/^x_horizontal_scroll_bar_report_motion (struct frame **fp, Lisp_Object *bar_window,$/;"	f	file:	signature:(struct frame **fp, Lisp_Object *bar_window, enum scroll_bar_part *part, Lisp_Object *x, Lisp_Object *y, Time *time)
x_horizontal_scroll_bar_report_motion	xterm.c	/^static void x_horizontal_scroll_bar_report_motion (struct frame **, Lisp_Object *,$/;"	p	file:	signature:(struct frame **, Lisp_Object *, enum scroll_bar_part *, Lisp_Object *, Lisp_Object *, Time *)
x_horizontal_scroll_bar_report_motion	xterm.c	/^x_horizontal_scroll_bar_report_motion (struct frame **fp, Lisp_Object *bar_window,$/;"	f	file:	signature:(struct frame **fp, Lisp_Object *bar_window, enum scroll_bar_part *part, Lisp_Object *x, Lisp_Object *y, Time *timestamp)
x_horizontal_scroll_bar_to_input_event	xterm.c	/^x_horizontal_scroll_bar_to_input_event (const XEvent *event,$/;"	f	file:	signature:(const XEvent *event, struct input_event *ievent)
x_icon	w32fns.c	/^x_icon (struct frame *f, Lisp_Object parms)$/;"	f	file:	signature:(struct frame *f, Lisp_Object parms)
x_icon	xfns.c	/^x_icon (struct frame *f, Lisp_Object parms)$/;"	f	file:	signature:(struct frame *f, Lisp_Object parms)
x_iconify_frame	frame.h	/^extern void x_iconify_frame (struct frame *f);$/;"	p	signature:(struct frame *f)
x_iconify_frame	w32term.c	/^x_iconify_frame (struct frame *f)$/;"	f	signature:(struct frame *f)
x_iconify_frame	xterm.c	/^x_iconify_frame (struct frame *f)$/;"	f	signature:(struct frame *f)
x_icon_verify	xfns.c	/^x_icon_verify (struct frame *f, Lisp_Object parms)$/;"	f	file:	signature:(struct frame *f, Lisp_Object parms)
x_id	xterm.h	/^  unsigned x_id;$/;"	m	struct:x_display_info	access:public
x_id_name	xterm.h	/^  char *x_id_name;$/;"	m	struct:x_display_info	access:public
x_implicitly_set_name	dispextern.h	/^void x_implicitly_set_name (struct frame *, Lisp_Object, Lisp_Object);$/;"	p	signature:(struct frame *, Lisp_Object, Lisp_Object)
x_implicitly_set_name	w32fns.c	/^x_implicitly_set_name (struct frame *f, Lisp_Object arg, Lisp_Object oldval)$/;"	f	signature:(struct frame *f, Lisp_Object arg, Lisp_Object oldval)
x_implicitly_set_name	xfns.c	/^x_implicitly_set_name (struct frame *f, Lisp_Object arg, Lisp_Object oldval)$/;"	f	signature:(struct frame *f, Lisp_Object arg, Lisp_Object oldval)
x_initialize	xterm.c	/^static void x_initialize (void);$/;"	p	file:	signature:(void)
x_initialize	xterm.c	/^x_initialize (void)$/;"	f	file:	signature:(void)
x_initialized	xterm.c	/^static int x_initialized;$/;"	v	file:
x_insert_glyphs	dispextern.h	/^extern void x_insert_glyphs (struct window *, struct glyph_row *,$/;"	p	signature:(struct window *, struct glyph_row *, struct glyph *, enum glyph_row_area, int)
x_insert_glyphs	xdisp.c	/^x_insert_glyphs (struct window *w, struct glyph_row *updated_row,$/;"	f	signature:(struct window *w, struct glyph_row *updated_row, struct glyph *start, enum glyph_row_area updated_area, int len)
x_ins_del_lines	w32term.c	/^x_ins_del_lines (struct frame *f, int vpos, int n)$/;"	f	file:	signature:(struct frame *f, int vpos, int n)
x_ins_del_lines	xterm.c	/^x_ins_del_lines (struct frame *f, int vpos, int n)$/;"	f	file:	signature:(struct frame *f, int vpos, int n)
x_intersect_rectangles	dispextern.h	/^extern bool x_intersect_rectangles (XRectangle *, XRectangle *, XRectangle *);$/;"	p	signature:(XRectangle *, XRectangle *, XRectangle *)
x_intersect_rectangles	xdisp.c	/^x_intersect_rectangles (XRectangle *r1, XRectangle *r2, XRectangle *result)$/;"	f	signature:(XRectangle *r1, XRectangle *r2, XRectangle *result)
x_io_error_quitter	xterm.c	/^static int x_io_error_quitter (Display *);$/;"	p	file:	signature:(Display *)
x_io_error_quitter	xterm.c	/^x_io_error_quitter (Display *display)$/;"	f	file:	signature:(Display *display)
x_kill_gs_process	dispextern.h	/^void x_kill_gs_process (Pixmap, struct frame *);$/;"	p	signature:(Pixmap, struct frame *)
x_kill_gs_process	image.c	/^x_kill_gs_process (Pixmap pixmap, struct frame *f)$/;"	f	signature:(Pixmap pixmap, struct frame *f)
x_laplace	image.c	/^static void x_laplace (struct frame *, struct image *);$/;"	p	file:	signature:(struct frame *, struct image *)
x_laplace	image.c	/^x_laplace (struct frame *f, struct image *img)$/;"	f	file:	signature:(struct frame *f, struct image *img)
x_last_font_name	gtkutil.c	/^static char *x_last_font_name;$/;"	v	file:
x_limit	xdisp.c	/^  (Lisp_Object window, Lisp_Object from, Lisp_Object to, Lisp_Object x_limit,$/;"	v
x_load_resources	xrdb.c	/^x_load_resources (Display *display, const char *xrm_string,$/;"	f	signature:(Display *display, const char *xrm_string, const char *myname, const char *myclass)
x_load_resources	xterm.h	/^XrmDatabase x_load_resources (Display *, const char *, const char *,$/;"	p	signature:(Display *, const char *, const char *, const char *)
X_LONG_MAX	xterm.h	729;"	d
X_LONG_MIN	xterm.h	730;"	d
X_LONG_SIZE	xselect.c	80;"	d	file:
x_lower_frame	w32term.c	/^void x_lower_frame (struct frame *);$/;"	p	file:	signature:(struct frame *)
x_lower_frame	w32term.c	/^x_lower_frame (struct frame *f)$/;"	f	signature:(struct frame *f)
x_lower_frame	xterm.c	/^static void x_lower_frame (struct frame *);$/;"	p	file:	signature:(struct frame *)
x_lower_frame	xterm.c	/^x_lower_frame (struct frame *f)$/;"	f	file:	signature:(struct frame *f)
x_make_frame_invisible	frame.h	/^extern void x_make_frame_invisible (struct frame *f);$/;"	p	signature:(struct frame *f)
x_make_frame_invisible	w32term.c	/^x_make_frame_invisible (struct frame *f)$/;"	f	signature:(struct frame *f)
x_make_frame_invisible	xterm.c	/^x_make_frame_invisible (struct frame *f)$/;"	f	signature:(struct frame *f)
x_make_frame_visible	frame.h	/^extern void x_make_frame_visible (struct frame *f);$/;"	p	signature:(struct frame *f)
x_make_frame_visible	w32term.c	/^x_make_frame_visible (struct frame *f)$/;"	f	signature:(struct frame *f)
x_make_frame_visible	xterm.c	/^x_make_frame_visible (struct frame *f)$/;"	f	signature:(struct frame *f)
x_make_gc	w32fns.c	/^x_make_gc (struct frame *f)$/;"	f	file:	signature:(struct frame *f)
x_make_gc	xfns.c	/^x_make_gc (struct frame *f)$/;"	f	file:	signature:(struct frame *f)
x_make_monitor_attribute_list	xfns.c	/^x_make_monitor_attribute_list (struct MonitorInfo *monitors,$/;"	f	file:	signature:(struct MonitorInfo *monitors, int n_monitors, int primary_monitor, struct x_display_info *dpyinfo, const char *source)
x_make_truecolor_pixel	xterm.h	/^x_make_truecolor_pixel (struct x_display_info *dpyinfo, int r, int g, int b)$/;"	f	signature:(struct x_display_info *dpyinfo, int r, int g, int b)
x_mark_frame_dirty	xfns.c	/^x_mark_frame_dirty (struct frame *f)$/;"	f	signature:(struct frame *f)
x_mark_frame_dirty	xterm.h	/^extern void x_mark_frame_dirty (struct frame *f);$/;"	p	signature:(struct frame *f)
x_menubar_window_to_frame	xterm.c	/^x_menubar_window_to_frame (struct x_display_info *dpyinfo,$/;"	f	file:	signature:(struct x_display_info *dpyinfo, const XEvent *event)
x_menu_set_in_use	xmenu.c	/^x_menu_set_in_use (bool in_use)$/;"	f	signature:(bool in_use)
x_menu_set_in_use	xterm.h	/^extern void x_menu_set_in_use (bool);$/;"	p	signature:(bool)
x_menu_show	menu.h	/^extern Lisp_Object x_menu_show (struct frame *, int, int, int,$/;"	p	signature:(struct frame *, int, int, int, Lisp_Object, const char **)
x_menu_show	xmenu.c	/^x_menu_show (struct frame *f, int x, int y, int menuflags,$/;"	f	signature:(struct frame *f, int x, int y, int menuflags, Lisp_Object title, const char **error_name)
x_menu_wait_for_event	xmenu.c	/^x_menu_wait_for_event (void *data)$/;"	f	signature:(void *data)
x_menu_wait_for_event	xterm.h	/^extern void x_menu_wait_for_event (void *data);$/;"	p	signature:(void *data)
x_mouse_click_focus_ignore_position	globals.h	1083;"	d
x_mouse_grabbed	dispextern.h	/^extern bool x_mouse_grabbed (Display_Info *);$/;"	p	signature:(Display_Info *)
x_mouse_grabbed	frame.c	/^bool x_mouse_grabbed (Display_Info *dpyinfo)$/;"	f	signature:(Display_Info *dpyinfo)
x_mouse_leave	xterm.c	/^x_mouse_leave (struct x_display_info *dpyinfo)$/;"	f	signature:(struct x_display_info *dpyinfo)
x_mouse_leave	xterm.h	/^extern void x_mouse_leave (struct x_display_info *);$/;"	p	signature:(struct x_display_info *)
x_mutable_colormap	xterm.h	/^x_mutable_colormap (Visual *visual)$/;"	f	signature:(Visual *visual)
x_net_wm_state	xterm.c	/^x_net_wm_state (struct frame *f, Window window)$/;"	f	file:	signature:(struct frame *f, Window window)
x_new_focus_frame	w32term.c	/^static void x_new_focus_frame (struct w32_display_info *,$/;"	p	file:	signature:(struct w32_display_info *, struct frame *)
x_new_focus_frame	w32term.c	/^x_new_focus_frame (struct w32_display_info *dpyinfo, struct frame *frame)$/;"	f	file:	signature:(struct w32_display_info *dpyinfo, struct frame *frame)
x_new_focus_frame	xterm.c	/^x_new_focus_frame (struct x_display_info *dpyinfo, struct frame *frame)$/;"	f	file:	signature:(struct x_display_info *dpyinfo, struct frame *frame)
x_new_font	frame.h	/^extern Lisp_Object x_new_font (struct frame *, Lisp_Object, int);$/;"	p	signature:(struct frame *, Lisp_Object, int)
x_new_font	w32term.c	/^x_new_font (struct frame *f, Lisp_Object font_object, int fontset)$/;"	f	signature:(struct frame *f, Lisp_Object font_object, int fontset)
x_new_font	xterm.c	/^x_new_font (struct frame *f, Lisp_Object font_object, int fontset)$/;"	f	signature:(struct frame *f, Lisp_Object font_object, int fontset)
x_noop_count	xterm.c	/^static int x_noop_count;$/;"	v	file:
x_output	nsterm.h	/^struct x_output$/;"	s
x_output	w32term.h	/^struct x_output$/;"	s
x_output	xterm.h	/^struct x_output$/;"	s
x_output::asked_for_visible	xterm.h	/^  bool_bf asked_for_visible : 1;$/;"	m	struct:x_output	access:public
x_output::baseline_offset	xterm.h	/^  int baseline_offset;$/;"	m	struct:x_output	access:public
x_output::black_relief	xterm.h	/^  black_relief, white_relief;$/;"	m	struct:x_output	typeref:struct:x_output::relief	access:public
x_output::border_pixel	xterm.h	/^  unsigned long border_pixel;$/;"	m	struct:x_output	access:public
x_output::border_tile	xterm.h	/^  Pixmap border_tile;$/;"	m	struct:x_output	access:public
x_output::bottom_edge_cursor	xterm.h	/^  Cursor bottom_edge_cursor;$/;"	m	struct:x_output	access:public
x_output::bottom_left_corner_cursor	xterm.h	/^  Cursor bottom_left_corner_cursor;$/;"	m	struct:x_output	access:public
x_output::bottom_right_corner_cursor	xterm.h	/^  Cursor bottom_right_corner_cursor;$/;"	m	struct:x_output	access:public
x_output::column_widget	xterm.h	/^  Widget column_widget;$/;"	m	struct:x_output	access:public
x_output::cr_context	xterm.h	/^  cairo_t *cr_context;$/;"	m	struct:x_output	access:public
x_output::cr_surface	xterm.h	/^  cairo_surface_t *cr_surface;$/;"	m	struct:x_output	access:public
x_output::current_cursor	xterm.h	/^  Cursor current_cursor;$/;"	m	struct:x_output	access:public
x_output::cursor_foreground_pixel	xterm.h	/^  unsigned long cursor_foreground_pixel;$/;"	m	struct:x_output	access:public
x_output::cursor_gc	xterm.h	/^  GC cursor_gc;				\/* cursor drawing *\/$/;"	m	struct:x_output	access:public
x_output::cursor_pixel	xterm.h	/^  unsigned long cursor_pixel;$/;"	m	struct:x_output	access:public
x_output::display_info	xterm.h	/^  struct x_display_info *display_info;$/;"	m	struct:x_output	typeref:struct:x_output::x_display_info	access:public
x_output::draw_desc	xterm.h	/^  Drawable draw_desc;$/;"	m	struct:x_output	access:public
x_output::edit_widget	xterm.h	/^  GtkWidget *edit_widget;$/;"	m	struct:x_output	access:public
x_output::edit_widget	xterm.h	/^  Widget edit_widget;$/;"	m	struct:x_output	access:public
x_output::explicit_parent	xterm.h	/^  bool_bf explicit_parent : 1;$/;"	m	struct:x_output	access:public
x_output::focus_state	w32term.h	/^  int focus_state;$/;"	m	struct:x_output	access:public
x_output::focus_state	xterm.h	/^  int focus_state;$/;"	m	struct:x_output	access:public
x_output::font	xterm.h	/^  struct font *font;$/;"	m	struct:x_output	typeref:struct:x_output::font	access:public
x_output::fontset	xterm.h	/^  int fontset;$/;"	m	struct:x_output	access:public
x_output::hand_cursor	xterm.h	/^  Cursor hand_cursor;$/;"	m	struct:x_output	access:public
x_output::has_been_visible	xterm.h	/^  bool_bf has_been_visible : 1;$/;"	m	struct:x_output	access:public
x_output::hbox_widget	xterm.h	/^  GtkWidget *hbox_widget;$/;"	m	struct:x_output	access:public
x_output::hint_flags	xterm.h	/^  long hint_flags;$/;"	m	struct:x_output	access:public
x_output::horizontal_drag_cursor	xterm.h	/^  Cursor horizontal_drag_cursor;$/;"	m	struct:x_output	access:public
x_output::hourglass_cursor	xterm.h	/^  Cursor hourglass_cursor;$/;"	m	struct:x_output	access:public
x_output::hourglass_p	xterm.h	/^  bool_bf hourglass_p : 1;$/;"	m	struct:x_output	access:public
x_output::hourglass_window	xterm.h	/^  Window hourglass_window;$/;"	m	struct:x_output	access:public
x_output::icon_bitmap	xterm.h	/^  ptrdiff_t icon_bitmap;$/;"	m	struct:x_output	access:public
x_output::icon_desc	xterm.h	/^  Window icon_desc;$/;"	m	struct:x_output	access:public
x_output::id	xterm.h	/^  int id;$/;"	m	struct:x_output	access:public
x_output::left_edge_cursor	xterm.h	/^  Cursor left_edge_cursor;$/;"	m	struct:x_output	access:public
x_output::menubar_height	xterm.h	/^  int menubar_height;$/;"	m	struct:x_output	access:public
x_output::menubar_widget	xterm.h	/^  GtkWidget *menubar_widget;$/;"	m	struct:x_output	access:public
x_output::menubar_widget	xterm.h	/^  Widget menubar_widget;$/;"	m	struct:x_output	access:public
x_output::modeline_cursor	xterm.h	/^  Cursor modeline_cursor;$/;"	m	struct:x_output	access:public
x_output::mouse_pixel	xterm.h	/^  unsigned long mouse_pixel;$/;"	m	struct:x_output	access:public
x_output::move_offset_left	xterm.h	/^  int move_offset_left;$/;"	m	struct:x_output	access:public
x_output::move_offset_top	xterm.h	/^  int move_offset_top;$/;"	m	struct:x_output	access:public
x_output::need_buffer_flip	xterm.h	/^  bool need_buffer_flip;$/;"	m	struct:x_output	access:public
x_output::nontext_cursor	xterm.h	/^  Cursor nontext_cursor;$/;"	m	struct:x_output	access:public
x_output::normal_gc	xterm.h	/^  GC normal_gc;				\/* Normal video *\/$/;"	m	struct:x_output	access:public
x_output::parent_desc	xterm.h	/^  Window parent_desc;$/;"	m	struct:x_output	access:public
x_output::relief	xterm.h	/^  struct relief$/;"	s	struct:x_output	access:public
x_output::relief::gc	xterm.h	/^    GC gc;$/;"	m	struct:x_output::relief	access:public
x_output::relief::pixel	xterm.h	/^    unsigned long pixel;$/;"	m	struct:x_output::relief	access:public
x_output::relief_background	xterm.h	/^  unsigned long relief_background;$/;"	m	struct:x_output	access:public
x_output::reverse_gc	xterm.h	/^  GC reverse_gc;			\/* Reverse video *\/$/;"	m	struct:x_output	access:public
x_output::right_edge_cursor	xterm.h	/^  Cursor right_edge_cursor;$/;"	m	struct:x_output	access:public
x_output::saved_menu_event	xterm.h	/^  XEvent *saved_menu_event;$/;"	m	struct:x_output	access:public
x_output::scroll_bar_background_pixel	xterm.h	/^  unsigned long scroll_bar_background_pixel;$/;"	m	struct:x_output	access:public
x_output::scroll_bar_bottom_shadow_pixel	xterm.h	/^  unsigned long scroll_bar_bottom_shadow_pixel;$/;"	m	struct:x_output	access:public
x_output::scroll_bar_foreground_pixel	xterm.h	/^  unsigned long scroll_bar_foreground_pixel;$/;"	m	struct:x_output	access:public
x_output::scroll_bar_top_shadow_pixel	xterm.h	/^  unsigned long scroll_bar_top_shadow_pixel;$/;"	m	struct:x_output	access:public
x_output::size_hints	xterm.h	/^  GdkGeometry size_hints;$/;"	m	struct:x_output	access:public
x_output::text_cursor	xterm.h	/^  Cursor text_cursor;$/;"	m	struct:x_output	access:public
x_output::toolbar_bottom_height	xterm.h	/^  int toolbar_top_height, toolbar_bottom_height;$/;"	m	struct:x_output	access:public
x_output::toolbar_in_hbox	xterm.h	/^  bool_bf toolbar_in_hbox : 1;$/;"	m	struct:x_output	access:public
x_output::toolbar_is_packed	xterm.h	/^  bool_bf toolbar_is_packed : 1;$/;"	m	struct:x_output	access:public
x_output::toolbar_left_width	xterm.h	/^  int toolbar_left_width, toolbar_right_width;$/;"	m	struct:x_output	access:public
x_output::toolbar_right_width	xterm.h	/^  int toolbar_left_width, toolbar_right_width;$/;"	m	struct:x_output	access:public
x_output::toolbar_top_height	xterm.h	/^  int toolbar_top_height, toolbar_bottom_height;$/;"	m	struct:x_output	access:public
x_output::toolbar_widget	xterm.h	/^  GtkWidget *toolbar_widget;$/;"	m	struct:x_output	access:public
x_output::top_edge_cursor	xterm.h	/^  Cursor top_edge_cursor;$/;"	m	struct:x_output	access:public
x_output::top_left_corner_cursor	xterm.h	/^  Cursor top_left_corner_cursor;$/;"	m	struct:x_output	access:public
x_output::top_right_corner_cursor	xterm.h	/^  Cursor top_right_corner_cursor;$/;"	m	struct:x_output	access:public
x_output::ttip_lbl	xterm.h	/^  GtkWidget *ttip_lbl;$/;"	m	struct:x_output	access:public
x_output::ttip_widget	xterm.h	/^  GtkTooltip *ttip_widget;$/;"	m	struct:x_output	access:public
x_output::ttip_window	xterm.h	/^  GtkWindow *ttip_window;$/;"	m	struct:x_output	access:public
x_output::unused	nsterm.h	/^  int unused;$/;"	m	struct:x_output	access:public
x_output::vbox_widget	xterm.h	/^  GtkWidget *vbox_widget;$/;"	m	struct:x_output	access:public
x_output::vertical_drag_cursor	xterm.h	/^  Cursor vertical_drag_cursor;$/;"	m	struct:x_output	access:public
x_output::wait_for_wm	xterm.h	/^  bool_bf wait_for_wm : 1;$/;"	m	struct:x_output	access:public
x_output::white_relief	xterm.h	/^  black_relief, white_relief;$/;"	m	struct:x_output	typeref:struct:x_output::relief	access:public
x_output::widget	xterm.h	/^  GtkWidget *widget;$/;"	m	struct:x_output	access:public
x_output::widget	xterm.h	/^  Widget widget;$/;"	m	struct:x_output	access:public
x_output::window_desc	xterm.h	/^  Window window_desc;$/;"	m	struct:x_output	access:public
x_output::wm_hints	xterm.h	/^  XWMHints wm_hints;$/;"	m	struct:x_output	access:public
x_output::xic	xterm.h	/^  XIC xic;$/;"	m	struct:x_output	access:public
x_output::xic_style	xterm.h	/^  XIMStyle xic_style;$/;"	m	struct:x_output	access:public
x_output::xic_xfs	xterm.h	/^  XFontSet xic_xfs;$/;"	m	struct:x_output	access:public
x_own_selection	xselect.c	/^x_own_selection (Lisp_Object selection_name, Lisp_Object selection_value,$/;"	f	file:	signature:(Lisp_Object selection_name, Lisp_Object selection_value, Lisp_Object frame)
x_parse_color	xterm.c	/^Status x_parse_color (struct frame *f, const char *color_name,$/;"	f	signature:(struct frame *f, const char *color_name, XColor *color)
x_parse_color	xterm.h	/^Status x_parse_color (struct frame *f, const char *color_name,$/;"	p	signature:(struct frame *f, const char *color_name, XColor *color)
x_pending_autoraise_frame	xterm.h	/^  struct frame *x_pending_autoraise_frame;$/;"	m	struct:x_display_info	typeref:struct:x_display_info::frame	access:public
x_probe_xfixes_extension	xterm.c	/^x_probe_xfixes_extension (Display *dpy)$/;"	f	file:	signature:(Display *dpy)
x_process_timeouts	xterm.c	/^x_process_timeouts (struct atimer *timer)$/;"	f	file:	signature:(struct atimer *timer)
x_produce_glyphs	dispextern.h	/^extern void x_produce_glyphs (struct it *);$/;"	p	signature:(struct it *)
x_produce_glyphs	xdisp.c	/^x_produce_glyphs (struct it *it)$/;"	f	signature:(struct it *it)
x_property_data_to_lisp	xselect.c	/^x_property_data_to_lisp (struct frame *f, const unsigned char *data,$/;"	f	signature:(struct frame *f, const unsigned char *data, Atom type, int format, unsigned long size)
x_property_data_to_lisp	xterm.h	/^extern Lisp_Object x_property_data_to_lisp (struct frame *,$/;"	p	signature:(struct frame *, const unsigned char *, Atom, int, unsigned long)
x_put_x_image	image.c	/^x_put_x_image (struct frame *f, XImagePtr ximg, Pixmap pixmap, int width, int height)$/;"	f	file:	signature:(struct frame *f, XImagePtr ximg, Pixmap pixmap, int width, int height)
x_query_color	w32term.c	/^x_query_color (struct frame *f, XColor *color)$/;"	f	signature:(struct frame *f, XColor *color)
x_query_color	w32term.h	/^extern void x_query_color (struct frame *, XColor *);$/;"	p	signature:(struct frame *, XColor *)
x_query_color	xterm.c	/^x_query_color (struct frame *f, XColor *color)$/;"	f	signature:(struct frame *f, XColor *color)
x_query_color	xterm.h	/^extern void x_query_color (struct frame *f, XColor *);$/;"	p	signature:(struct frame *f, XColor *)
x_query_colors	frame.h	/^extern void x_query_colors (struct frame *f, XColor *, int);$/;"	p	signature:(struct frame *f, XColor *, int)
x_query_colors	w32term.c	/^x_query_colors (struct frame *f, XColor *colors, int ncolors)$/;"	f	signature:(struct frame *f, XColor *colors, int ncolors)
x_query_colors	xterm.c	/^x_query_colors (struct frame *f, XColor *colors, int ncolors)$/;"	f	signature:(struct frame *f, XColor *colors, int ncolors)
x_query_frame_background_color	image.c	/^x_query_frame_background_color (struct frame *f, XColor *bgcolor)$/;"	f	file:	signature:(struct frame *f, XColor *bgcolor)
x_queue_event	xselect.c	/^x_queue_event (struct selection_input_event *event)$/;"	f	file:	signature:(struct selection_input_event *event)
x_queue_selection_requests	xselect.c	/^static int x_queue_selection_requests;$/;"	v	file:
x_raise_frame	w32term.c	/^void x_raise_frame (struct frame *);$/;"	p	file:	signature:(struct frame *)
x_raise_frame	w32term.c	/^x_raise_frame (struct frame *f)$/;"	f	signature:(struct frame *f)
x_raise_frame	xterm.c	/^static void x_raise_frame (struct frame *);$/;"	p	file:	signature:(struct frame *)
x_raise_frame	xterm.c	/^x_raise_frame (struct frame *f)$/;"	f	signature:(struct frame *f)
x_real_positions	frame.h	/^extern void x_real_positions (struct frame *, int *, int *);$/;"	p	signature:(struct frame *, int *, int *)
x_real_positions	w32fns.c	/^x_real_positions (struct frame *f, int *xptr, int *yptr)$/;"	f	signature:(struct frame *f, int *xptr, int *yptr)
x_real_positions	xfns.c	/^x_real_positions (struct frame *f, int *xptr, int *yptr)$/;"	f	signature:(struct frame *f, int *xptr, int *yptr)
x_real_pos_and_offsets	xfns.c	/^x_real_pos_and_offsets (struct frame *f,$/;"	f	signature:(struct frame *f, int *left_offset_x, int *right_offset_x, int *top_offset_y, int *bottom_offset_y, int *x_pixels_diff, int *y_pixels_diff, int *xptr, int *yptr, int *outer_border)
x_real_pos_and_offsets	xterm.h	/^extern void x_real_pos_and_offsets (struct frame *f,$/;"	p	signature:(struct frame *f, int *left_offset_x, int *right_offset_x, int *top_offset_y, int *bottom_offset_y, int *x_pixels_diff, int *y_pixels_diff, int *xptr, int *yptr, int *outer_border)
x_redisplay_interface	xterm.c	/^static struct redisplay_interface x_redisplay_interface =$/;"	v	typeref:struct:redisplay_interface	file:
x_redo_mouse_highlight	dispextern.h	/^extern void x_redo_mouse_highlight (Display_Info *);$/;"	p	signature:(Display_Info *)
x_redo_mouse_highlight	frame.c	/^x_redo_mouse_highlight (Display_Info *dpyinfo)$/;"	f	signature:(Display_Info *dpyinfo)
x_reference_bitmap	dispextern.h	/^extern void x_reference_bitmap (struct frame *, ptrdiff_t);$/;"	p	signature:(struct frame *, ptrdiff_t)
x_reference_bitmap	image.c	/^x_reference_bitmap (struct frame *f, ptrdiff_t id)$/;"	f	signature:(struct frame *f, ptrdiff_t id)
x_relative_mouse_position	xfns.c	/^x_relative_mouse_position (struct frame *f, int *x, int *y)$/;"	f	signature:(struct frame *f, int *x, int *y)
x_relative_mouse_position	xterm.h	/^extern void x_relative_mouse_position (struct frame *, int *, int *);$/;"	p	signature:(struct frame *, int *, int *)
x_reply_selection_request	xselect.c	/^x_reply_selection_request (struct selection_input_event *event,$/;"	f	file:	signature:(struct selection_input_event *event, struct x_display_info *dpyinfo)
x_reply_selection_request_cnt	xselect.c	/^static int x_reply_selection_request_cnt;$/;"	v	file:
x_report_frame_params	frame.c	/^static void x_report_frame_params (struct frame *, Lisp_Object *);$/;"	p	file:	signature:(struct frame *, Lisp_Object *)
x_report_frame_params	frame.c	/^x_report_frame_params (struct frame *f, Lisp_Object *alistptr)$/;"	f	signature:(struct frame *f, Lisp_Object *alistptr)
x_request_serial	xfns.c	/^  unsigned long x_request_serial[mouse_cursor_max];$/;"	m	struct:mouse_cursor_data	file:	access:public
x_reset_clip_rectangles	xterm.c	/^x_reset_clip_rectangles (struct frame *f, GC gc)$/;"	f	file:	signature:(struct frame *f, GC gc)
x_rm_string	xrdb.c	/^static XrmRepresentation x_rm_string;	\/* Quark representation *\/$/;"	v	file:
x_scroll_bar_clear	w32term.c	/^void x_scroll_bar_clear (struct frame *);$/;"	p	file:	signature:(struct frame *)
x_scroll_bar_clear	w32term.c	/^x_scroll_bar_clear (struct frame *f)$/;"	f	signature:(struct frame *f)
x_scroll_bar_clear	xterm.c	/^static void x_scroll_bar_clear (struct frame *);$/;"	p	file:	signature:(struct frame *)
x_scroll_bar_clear	xterm.c	/^x_scroll_bar_clear (struct frame *f)$/;"	f	file:	signature:(struct frame *f)
x_scroll_bar_create	w32term.c	/^x_scroll_bar_create (struct window *w, int left, int top, int width, int height, bool horizontal)$/;"	f	file:	signature:(struct window *w, int left, int top, int width, int height, bool horizontal)
x_scroll_bar_create	xterm.c	/^x_scroll_bar_create (struct window *w, int top, int left,$/;"	f	file:	signature:(struct window *w, int top, int left, int width, int height, bool horizontal)
x_scroll_bar_expose	xterm.c	/^x_scroll_bar_expose (struct scroll_bar *bar, const XEvent *event)$/;"	f	file:	signature:(struct scroll_bar *bar, const XEvent *event)
x_scroll_bar_handle_click	xterm.c	/^x_scroll_bar_handle_click (struct scroll_bar *bar,$/;"	f	file:	signature:(struct scroll_bar *bar, const XEvent *event, struct input_event *emacs_event)
x_scroll_bar_note_movement	xterm.c	/^x_scroll_bar_note_movement (struct scroll_bar *bar,$/;"	f	file:	signature:(struct scroll_bar *bar, const XMotionEvent *event)
x_scroll_bar_remove	w32term.c	/^x_scroll_bar_remove (struct scroll_bar *bar)$/;"	f	file:	signature:(struct scroll_bar *bar)
x_scroll_bar_remove	xterm.c	/^x_scroll_bar_remove (struct scroll_bar *bar)$/;"	f	file:	signature:(struct scroll_bar *bar)
x_scroll_bar_report_motion	w32term.c	/^static void x_scroll_bar_report_motion (struct frame **, Lisp_Object *,$/;"	p	file:	signature:(struct frame **, Lisp_Object *, enum scroll_bar_part *, Lisp_Object *, Lisp_Object *, Time *)
x_scroll_bar_report_motion	w32term.c	/^x_scroll_bar_report_motion (struct frame **fp, Lisp_Object *bar_window,$/;"	f	file:	signature:(struct frame **fp, Lisp_Object *bar_window, enum scroll_bar_part *part, Lisp_Object *x, Lisp_Object *y, Time *time)
x_scroll_bar_report_motion	xterm.c	/^static void x_scroll_bar_report_motion (struct frame **, Lisp_Object *,$/;"	p	file:	signature:(struct frame **, Lisp_Object *, enum scroll_bar_part *, Lisp_Object *, Lisp_Object *, Time *)
x_scroll_bar_report_motion	xterm.c	/^x_scroll_bar_report_motion (struct frame **fp, Lisp_Object *bar_window,$/;"	f	file:	signature:(struct frame **fp, Lisp_Object *bar_window, enum scroll_bar_part *part, Lisp_Object *x, Lisp_Object *y, Time *timestamp)
x_scroll_bar_set_handle	xterm.c	/^x_scroll_bar_set_handle (struct scroll_bar *bar, int start, int end,$/;"	f	file:	signature:(struct scroll_bar *bar, int start, int end, bool rebuild)
x_scroll_bar_to_input_event	xterm.c	/^x_scroll_bar_to_input_event (const XEvent *event,$/;"	f	file:	signature:(const XEvent *event, struct input_event *ievent)
x_scroll_run	w32term.c	/^x_scroll_run (struct window *w, struct run *run)$/;"	f	file:	signature:(struct window *w, struct run *run)
x_scroll_run	xterm.c	/^x_scroll_run (struct window *w, struct run *run)$/;"	f	file:	signature:(struct window *w, struct run *run)
x_selection_current_request	xselect.c	/^static struct selection_input_event *x_selection_current_request;$/;"	v	typeref:struct:selection_input_event	file:
x_selection_request_lisp_error	xselect.c	/^x_selection_request_lisp_error (void)$/;"	f	file:	signature:(void)
x_selection_timeout	globals.h	893;"	d
x_send_client_event	xselect.c	/^x_send_client_event (Lisp_Object display, Lisp_Object dest, Lisp_Object from,$/;"	f	signature:(Lisp_Object display, Lisp_Object dest, Lisp_Object from, Atom message_type, Lisp_Object format, Lisp_Object values)
x_send_client_event	xterm.h	/^extern void x_send_client_event (Lisp_Object display,$/;"	p	signature:(Lisp_Object display, Lisp_Object dest, Lisp_Object from, Atom message_type, Lisp_Object format, Lisp_Object values)
x_send_scroll_bar_event	xterm.c	/^static void x_send_scroll_bar_event (Lisp_Object, enum scroll_bar_part,$/;"	p	file:	signature:(Lisp_Object, enum scroll_bar_part, int, int, bool)
x_send_scroll_bar_event	xterm.c	/^x_send_scroll_bar_event (Lisp_Object window, enum scroll_bar_part part,$/;"	f	file:	signature:(Lisp_Object window, enum scroll_bar_part part, int portion, int whole, bool horizontal)
x_session_check_input	xsmfns.c	/^x_session_check_input (int fd, void *data)$/;"	f	file:	signature:(int fd, void *data)
x_session_close	xsmfns.c	/^x_session_close (void)$/;"	f	signature:(void)
x_session_close	xterm.h	/^extern void x_session_close (void);$/;"	p	signature:(void)
x_session_have_connection	xsmfns.c	/^x_session_have_connection (void)$/;"	f	signature:(void)
x_session_have_connection	xterm.h	/^extern bool x_session_have_connection (void);$/;"	p	signature:(void)
x_session_initialize	xsmfns.c	/^x_session_initialize (struct x_display_info *dpyinfo)$/;"	f	signature:(struct x_display_info *dpyinfo)
x_session_initialize	xterm.h	/^extern void x_session_initialize (struct x_display_info *dpyinfo);$/;"	p	signature:(struct x_display_info *dpyinfo)
x_setup_pointer_blanking	xterm.c	/^x_setup_pointer_blanking (struct x_display_info *dpyinfo)$/;"	f	file:	signature:(struct x_display_info *dpyinfo)
x_setup_relief_color	xterm.c	/^static void x_setup_relief_color (struct frame *, struct relief *,$/;"	p	file:	signature:(struct frame *, struct relief *, double, int, unsigned long)
x_setup_relief_color	xterm.c	/^x_setup_relief_color (struct frame *f, struct relief *relief, double factor,$/;"	f	file:	signature:(struct frame *f, struct relief *relief, double factor, int delta, unsigned long default_pixel)
x_setup_relief_colors	w32term.c	/^static void x_setup_relief_colors (struct glyph_string *);$/;"	p	file:	signature:(struct glyph_string *)
x_setup_relief_colors	w32term.c	/^x_setup_relief_colors (struct glyph_string *s)$/;"	f	file:	signature:(struct glyph_string *s)
x_setup_relief_colors	xterm.c	/^static void x_setup_relief_colors (struct glyph_string *);$/;"	p	file:	signature:(struct glyph_string *)
x_setup_relief_colors	xterm.c	/^x_setup_relief_colors (struct glyph_string *s)$/;"	f	file:	signature:(struct glyph_string *s)
x_set_alpha	frame.c	/^x_set_alpha (struct frame *f, Lisp_Object arg, Lisp_Object oldval)$/;"	f	signature:(struct frame *f, Lisp_Object arg, Lisp_Object oldval)
x_set_alpha	frame.h	/^extern void x_set_alpha (struct frame *, Lisp_Object, Lisp_Object);$/;"	p	signature:(struct frame *, Lisp_Object, Lisp_Object)
x_set_autolower	frame.c	/^x_set_autolower (struct frame *f, Lisp_Object arg, Lisp_Object oldval)$/;"	f	signature:(struct frame *f, Lisp_Object arg, Lisp_Object oldval)
x_set_autolower	frame.h	/^extern void x_set_autolower (struct frame *, Lisp_Object, Lisp_Object);$/;"	p	signature:(struct frame *, Lisp_Object, Lisp_Object)
x_set_autoraise	frame.c	/^x_set_autoraise (struct frame *f, Lisp_Object arg, Lisp_Object oldval)$/;"	f	signature:(struct frame *f, Lisp_Object arg, Lisp_Object oldval)
x_set_autoraise	frame.h	/^extern void x_set_autoraise (struct frame *, Lisp_Object, Lisp_Object);$/;"	p	signature:(struct frame *, Lisp_Object, Lisp_Object)
x_set_background_color	w32fns.c	/^void x_set_background_color (struct frame *, Lisp_Object, Lisp_Object);$/;"	p	file:	signature:(struct frame *, Lisp_Object, Lisp_Object)
x_set_background_color	w32fns.c	/^x_set_background_color (struct frame *f, Lisp_Object arg, Lisp_Object oldval)$/;"	f	signature:(struct frame *f, Lisp_Object arg, Lisp_Object oldval)
x_set_background_color	xfns.c	/^x_set_background_color (struct frame *f, Lisp_Object arg, Lisp_Object oldval)$/;"	f	file:	signature:(struct frame *f, Lisp_Object arg, Lisp_Object oldval)
x_set_bitmap_icon	frame.h	/^x_set_bitmap_icon (struct frame *f)$/;"	f	signature:(struct frame *f)
x_set_border_color	w32fns.c	/^void x_set_border_color (struct frame *, Lisp_Object, Lisp_Object);$/;"	p	file:	signature:(struct frame *, Lisp_Object, Lisp_Object)
x_set_border_color	w32fns.c	/^x_set_border_color (struct frame *f, Lisp_Object arg, Lisp_Object oldval)$/;"	f	signature:(struct frame *f, Lisp_Object arg, Lisp_Object oldval)
x_set_border_color	xfns.c	/^x_set_border_color (struct frame *f, Lisp_Object arg, Lisp_Object oldval)$/;"	f	file:	signature:(struct frame *f, Lisp_Object arg, Lisp_Object oldval)
x_set_border_pixel	w32fns.c	/^x_set_border_pixel (struct frame *f, int pix)$/;"	f	file:	signature:(struct frame *f, int pix)
x_set_border_pixel	xfns.c	/^x_set_border_pixel (struct frame *f, int pix)$/;"	f	file:	signature:(struct frame *f, int pix)
x_set_border_width	frame.c	/^x_set_border_width (struct frame *f, Lisp_Object arg, Lisp_Object oldval)$/;"	f	signature:(struct frame *f, Lisp_Object arg, Lisp_Object oldval)
x_set_border_width	frame.h	/^extern void x_set_border_width (struct frame *, Lisp_Object, Lisp_Object);$/;"	p	signature:(struct frame *, Lisp_Object, Lisp_Object)
x_set_bottom_divider_width	frame.c	/^x_set_bottom_divider_width (struct frame *f, Lisp_Object arg, Lisp_Object oldval)$/;"	f	signature:(struct frame *f, Lisp_Object arg, Lisp_Object oldval)
x_set_bottom_divider_width	frame.h	/^extern void x_set_bottom_divider_width (struct frame *, Lisp_Object,$/;"	p	signature:(struct frame *, Lisp_Object, Lisp_Object)
x_set_clip_rectangles	xterm.c	/^x_set_clip_rectangles (struct frame *f, GC gc, XRectangle *rectangles, int n)$/;"	f	file:	signature:(struct frame *f, GC gc, XRectangle *rectangles, int n)
x_set_cr_source_with_gc_background	xterm.c	/^x_set_cr_source_with_gc_background (struct frame *f, GC gc)$/;"	f	signature:(struct frame *f, GC gc)
x_set_cr_source_with_gc_background	xterm.h	/^extern void x_set_cr_source_with_gc_background (struct frame *, GC);$/;"	p	signature:(struct frame *, GC)
x_set_cr_source_with_gc_foreground	xterm.c	/^x_set_cr_source_with_gc_foreground (struct frame *f, GC gc)$/;"	f	signature:(struct frame *f, GC gc)
x_set_cr_source_with_gc_foreground	xterm.h	/^extern void x_set_cr_source_with_gc_foreground (struct frame *, GC);$/;"	p	signature:(struct frame *, GC)
x_set_cursor_color	w32fns.c	/^void x_set_cursor_color (struct frame *, Lisp_Object, Lisp_Object);$/;"	p	file:	signature:(struct frame *, Lisp_Object, Lisp_Object)
x_set_cursor_color	w32fns.c	/^x_set_cursor_color (struct frame *f, Lisp_Object arg, Lisp_Object oldval)$/;"	f	signature:(struct frame *f, Lisp_Object arg, Lisp_Object oldval)
x_set_cursor_color	xfns.c	/^x_set_cursor_color (struct frame *f, Lisp_Object arg, Lisp_Object oldval)$/;"	f	file:	signature:(struct frame *f, Lisp_Object arg, Lisp_Object oldval)
x_set_cursor_gc	w32term.c	/^static void x_set_cursor_gc (struct glyph_string *);$/;"	p	file:	signature:(struct glyph_string *)
x_set_cursor_gc	w32term.c	/^x_set_cursor_gc (struct glyph_string *s)$/;"	f	file:	signature:(struct glyph_string *s)
x_set_cursor_gc	xterm.c	/^static void x_set_cursor_gc (struct glyph_string *);$/;"	p	file:	signature:(struct glyph_string *)
x_set_cursor_gc	xterm.c	/^x_set_cursor_gc (struct glyph_string *s)$/;"	f	file:	signature:(struct glyph_string *s)
x_set_cursor_type	w32fns.c	/^void x_set_cursor_type (struct frame *, Lisp_Object, Lisp_Object);$/;"	p	file:	signature:(struct frame *, Lisp_Object, Lisp_Object)
x_set_cursor_type	w32fns.c	/^x_set_cursor_type (struct frame *f, Lisp_Object arg, Lisp_Object oldval)$/;"	f	signature:(struct frame *f, Lisp_Object arg, Lisp_Object oldval)
x_set_cursor_type	xfns.c	/^x_set_cursor_type (struct frame *f, Lisp_Object arg, Lisp_Object oldval)$/;"	f	file:	signature:(struct frame *f, Lisp_Object arg, Lisp_Object oldval)
x_set_font	frame.c	/^x_set_font (struct frame *f, Lisp_Object arg, Lisp_Object oldval)$/;"	f	signature:(struct frame *f, Lisp_Object arg, Lisp_Object oldval)
x_set_font	frame.h	/^extern void x_set_font (struct frame *, Lisp_Object, Lisp_Object);$/;"	p	signature:(struct frame *, Lisp_Object, Lisp_Object)
x_set_font_backend	frame.c	/^x_set_font_backend (struct frame *f, Lisp_Object new_value, Lisp_Object old_value)$/;"	f	signature:(struct frame *f, Lisp_Object new_value, Lisp_Object old_value)
x_set_font_backend	frame.h	/^extern void x_set_font_backend (struct frame *, Lisp_Object, Lisp_Object);$/;"	p	signature:(struct frame *, Lisp_Object, Lisp_Object)
x_set_foreground_color	w32fns.c	/^void x_set_foreground_color (struct frame *, Lisp_Object, Lisp_Object);$/;"	p	file:	signature:(struct frame *, Lisp_Object, Lisp_Object)
x_set_foreground_color	w32fns.c	/^x_set_foreground_color (struct frame *f, Lisp_Object arg, Lisp_Object oldval)$/;"	f	signature:(struct frame *f, Lisp_Object arg, Lisp_Object oldval)
x_set_foreground_color	xfns.c	/^x_set_foreground_color (struct frame *f, Lisp_Object arg, Lisp_Object oldval)$/;"	f	file:	signature:(struct frame *f, Lisp_Object arg, Lisp_Object oldval)
x_set_frame_alpha	frame.h	/^extern void x_set_frame_alpha (struct frame *f);$/;"	p	signature:(struct frame *f)
x_set_frame_alpha	w32term.c	/^x_set_frame_alpha (struct frame *f)$/;"	f	signature:(struct frame *f)
x_set_frame_alpha	xterm.c	/^x_set_frame_alpha (struct frame *f)$/;"	f	signature:(struct frame *f)
x_set_frame_parameters	frame.c	/^x_set_frame_parameters (struct frame *f, Lisp_Object alist)$/;"	f	signature:(struct frame *f, Lisp_Object alist)
x_set_frame_parameters	frame.h	/^extern void x_set_frame_parameters (struct frame *, Lisp_Object);$/;"	p	signature:(struct frame *, Lisp_Object)
x_set_fullscreen	frame.c	/^x_set_fullscreen (struct frame *f, Lisp_Object new_value, Lisp_Object old_value)$/;"	f	signature:(struct frame *f, Lisp_Object new_value, Lisp_Object old_value)
x_set_fullscreen	frame.h	/^extern void x_set_fullscreen (struct frame *, Lisp_Object, Lisp_Object);$/;"	p	signature:(struct frame *, Lisp_Object, Lisp_Object)
x_set_glyph_string_clipping	w32term.c	/^static void x_set_glyph_string_clipping (struct glyph_string *);$/;"	p	file:	signature:(struct glyph_string *)
x_set_glyph_string_clipping	w32term.c	/^x_set_glyph_string_clipping (struct glyph_string *s)$/;"	f	file:	signature:(struct glyph_string *s)
x_set_glyph_string_clipping	xterm.c	/^static void x_set_glyph_string_clipping (struct glyph_string *);$/;"	p	file:	signature:(struct glyph_string *)
x_set_glyph_string_clipping	xterm.c	/^x_set_glyph_string_clipping (struct glyph_string *s)$/;"	f	file:	signature:(struct glyph_string *s)
x_set_glyph_string_clipping_exactly	w32term.c	/^x_set_glyph_string_clipping_exactly (struct glyph_string *src,$/;"	f	file:	signature:(struct glyph_string *src, struct glyph_string *dst)
x_set_glyph_string_clipping_exactly	xterm.c	/^x_set_glyph_string_clipping_exactly (struct glyph_string *src, struct glyph_string *dst)$/;"	f	file:	signature:(struct glyph_string *src, struct glyph_string *dst)
x_set_glyph_string_gc	w32term.c	/^static void x_set_glyph_string_gc (struct glyph_string *);$/;"	p	file:	signature:(struct glyph_string *)
x_set_glyph_string_gc	w32term.c	/^x_set_glyph_string_gc (struct glyph_string *s)$/;"	f	file:	signature:(struct glyph_string *s)
x_set_glyph_string_gc	xterm.c	/^static void x_set_glyph_string_gc (struct glyph_string *);$/;"	p	file:	signature:(struct glyph_string *)
x_set_glyph_string_gc	xterm.c	/^x_set_glyph_string_gc (struct glyph_string *s)$/;"	f	file:	signature:(struct glyph_string *s)
x_set_horizontal_scroll_bars	frame.c	/^x_set_horizontal_scroll_bars (struct frame *f, Lisp_Object arg, Lisp_Object oldval)$/;"	f	signature:(struct frame *f, Lisp_Object arg, Lisp_Object oldval)
x_set_horizontal_scroll_bars	frame.h	/^extern void x_set_horizontal_scroll_bars (struct frame *, Lisp_Object, Lisp_Object);$/;"	p	signature:(struct frame *, Lisp_Object, Lisp_Object)
x_set_icon_name	w32fns.c	/^void x_set_icon_name (struct frame *, Lisp_Object, Lisp_Object);$/;"	p	file:	signature:(struct frame *, Lisp_Object, Lisp_Object)
x_set_icon_name	w32fns.c	/^x_set_icon_name (struct frame *f, Lisp_Object arg, Lisp_Object oldval)$/;"	f	signature:(struct frame *f, Lisp_Object arg, Lisp_Object oldval)
x_set_icon_name	xfns.c	/^x_set_icon_name (struct frame *f, Lisp_Object arg, Lisp_Object oldval)$/;"	f	file:	signature:(struct frame *f, Lisp_Object arg, Lisp_Object oldval)
x_set_icon_type	w32fns.c	/^void x_set_icon_type (struct frame *, Lisp_Object, Lisp_Object);$/;"	p	file:	signature:(struct frame *, Lisp_Object, Lisp_Object)
x_set_icon_type	w32fns.c	/^x_set_icon_type (struct frame *f, Lisp_Object arg, Lisp_Object oldval)$/;"	f	signature:(struct frame *f, Lisp_Object arg, Lisp_Object oldval)
x_set_icon_type	xfns.c	/^x_set_icon_type (struct frame *f, Lisp_Object arg, Lisp_Object oldval)$/;"	f	file:	signature:(struct frame *f, Lisp_Object arg, Lisp_Object oldval)
x_set_inhibit_double_buffering	xfns.c	/^x_set_inhibit_double_buffering (struct frame *f,$/;"	f	file:	signature:(struct frame *f, Lisp_Object new_value, Lisp_Object old_value)
x_set_internal_border_width	w32fns.c	/^x_set_internal_border_width (struct frame *f, Lisp_Object arg, Lisp_Object oldval)$/;"	f	signature:(struct frame *f, Lisp_Object arg, Lisp_Object oldval)
x_set_internal_border_width	w32term.h	/^extern void x_set_internal_border_width (struct frame *f,$/;"	p	signature:(struct frame *f, Lisp_Object value, Lisp_Object oldval)
x_set_internal_border_width	xfns.c	/^x_set_internal_border_width (struct frame *f, Lisp_Object arg, Lisp_Object oldval)$/;"	f	file:	signature:(struct frame *f, Lisp_Object arg, Lisp_Object oldval)
x_set_left_fringe	frame.c	/^x_set_left_fringe (struct frame *f, Lisp_Object new_value, Lisp_Object old_value)$/;"	f	signature:(struct frame *f, Lisp_Object new_value, Lisp_Object old_value)
x_set_left_fringe	frame.h	/^extern void x_set_left_fringe (struct frame *, Lisp_Object, Lisp_Object);$/;"	p	signature:(struct frame *, Lisp_Object, Lisp_Object)
x_set_line_spacing	frame.c	/^x_set_line_spacing (struct frame *f, Lisp_Object new_value, Lisp_Object old_value)$/;"	f	signature:(struct frame *f, Lisp_Object new_value, Lisp_Object old_value)
x_set_line_spacing	frame.h	/^extern void x_set_line_spacing (struct frame *, Lisp_Object, Lisp_Object);$/;"	p	signature:(struct frame *, Lisp_Object, Lisp_Object)
x_set_menu_bar_lines	w32fns.c	/^x_set_menu_bar_lines (struct frame *f, Lisp_Object value, Lisp_Object oldval)$/;"	f	signature:(struct frame *f, Lisp_Object value, Lisp_Object oldval)
x_set_menu_bar_lines	w32term.h	/^extern void x_set_menu_bar_lines (struct frame *, Lisp_Object, Lisp_Object);$/;"	p	signature:(struct frame *, Lisp_Object, Lisp_Object)
x_set_menu_bar_lines	xfns.c	/^x_set_menu_bar_lines (struct frame *f, Lisp_Object value, Lisp_Object oldval)$/;"	f	file:	signature:(struct frame *f, Lisp_Object value, Lisp_Object oldval)
x_set_mode_line_face_gc	w32term.c	/^static void x_set_mode_line_face_gc (struct glyph_string *);$/;"	p	file:	signature:(struct glyph_string *)
x_set_mode_line_face_gc	w32term.c	/^x_set_mode_line_face_gc (struct glyph_string *s)$/;"	f	file:	signature:(struct glyph_string *s)
x_set_mode_line_face_gc	xterm.c	/^static void x_set_mode_line_face_gc (struct glyph_string *);$/;"	p	file:	signature:(struct glyph_string *)
x_set_mode_line_face_gc	xterm.c	/^x_set_mode_line_face_gc (struct glyph_string *s)$/;"	f	file:	signature:(struct glyph_string *s)
x_set_mouse_color	w32fns.c	/^void x_set_mouse_color (struct frame *, Lisp_Object, Lisp_Object);$/;"	p	file:	signature:(struct frame *, Lisp_Object, Lisp_Object)
x_set_mouse_color	w32fns.c	/^x_set_mouse_color (struct frame *f, Lisp_Object arg, Lisp_Object oldval)$/;"	f	signature:(struct frame *f, Lisp_Object arg, Lisp_Object oldval)
x_set_mouse_color	xfns.c	/^x_set_mouse_color (struct frame *f, Lisp_Object arg, Lisp_Object oldval)$/;"	f	file:	signature:(struct frame *f, Lisp_Object arg, Lisp_Object oldval)
x_set_mouse_color_handler	xfns.c	/^x_set_mouse_color_handler (Display *dpy, XErrorEvent *event,$/;"	f	file:	signature:(Display *dpy, XErrorEvent *event, char *error_string, void *data)
x_set_mouse_face_gc	w32term.c	/^static void x_set_mouse_face_gc (struct glyph_string *);$/;"	p	file:	signature:(struct glyph_string *)
x_set_mouse_face_gc	w32term.c	/^x_set_mouse_face_gc (struct glyph_string *s)$/;"	f	file:	signature:(struct glyph_string *s)
x_set_mouse_face_gc	xterm.c	/^static void x_set_mouse_face_gc (struct glyph_string *);$/;"	p	file:	signature:(struct glyph_string *)
x_set_mouse_face_gc	xterm.c	/^x_set_mouse_face_gc (struct glyph_string *s)$/;"	f	file:	signature:(struct glyph_string *s)
x_set_name	w32fns.c	/^x_set_name (struct frame *f, Lisp_Object name, bool explicit)$/;"	f	file:	signature:(struct frame *f, Lisp_Object name, bool explicit)
x_set_name	xfns.c	/^x_set_name (struct frame *f, Lisp_Object name, bool explicit)$/;"	f	file:	signature:(struct frame *f, Lisp_Object name, bool explicit)
x_set_name_internal	xfns.c	/^x_set_name_internal (struct frame *f, Lisp_Object name)$/;"	f	file:	signature:(struct frame *f, Lisp_Object name)
x_set_no_accept_focus	nsterm.h	/^extern void x_set_no_accept_focus (struct frame *f, Lisp_Object new_value,$/;"	p	signature:(struct frame *f, Lisp_Object new_value, Lisp_Object old_value)
x_set_no_accept_focus	w32fns.c	/^x_set_no_accept_focus (struct frame *f, Lisp_Object new_value, Lisp_Object old_value)$/;"	f	file:	signature:(struct frame *f, Lisp_Object new_value, Lisp_Object old_value)
x_set_no_accept_focus	xfns.c	/^x_set_no_accept_focus (struct frame *f, Lisp_Object new_value, Lisp_Object old_value)$/;"	f	file:	signature:(struct frame *f, Lisp_Object new_value, Lisp_Object old_value)
x_set_no_focus_on_map	nsterm.h	/^extern void x_set_no_focus_on_map (struct frame *f, Lisp_Object new_value,$/;"	p	signature:(struct frame *f, Lisp_Object new_value, Lisp_Object old_value)
x_set_no_focus_on_map	w32fns.c	/^x_set_no_focus_on_map (struct frame *f, Lisp_Object new_value, Lisp_Object old_value)$/;"	f	file:	signature:(struct frame *f, Lisp_Object new_value, Lisp_Object old_value)
x_set_no_focus_on_map	xfns.c	/^x_set_no_focus_on_map (struct frame *f, Lisp_Object new_value, Lisp_Object old_value)$/;"	f	file:	signature:(struct frame *f, Lisp_Object new_value, Lisp_Object old_value)
x_set_no_special_glyphs	frame.c	/^x_set_no_special_glyphs (struct frame *f, Lisp_Object new_value, Lisp_Object old_value)$/;"	f	signature:(struct frame *f, Lisp_Object new_value, Lisp_Object old_value)
x_set_no_special_glyphs	frame.h	/^extern void x_set_no_special_glyphs (struct frame *, Lisp_Object, Lisp_Object);$/;"	p	signature:(struct frame *, Lisp_Object, Lisp_Object)
x_set_offset	frame.h	/^extern void x_set_offset (struct frame *, int, int, int);$/;"	p	signature:(struct frame *, int, int, int)
x_set_offset	w32term.c	/^x_set_offset (struct frame *f, register int xoff, register int yoff,$/;"	f	signature:(struct frame *f, register int xoff, register int yoff, int change_gravity)
x_set_offset	xterm.c	/^x_set_offset (struct frame *f, register int xoff, register int yoff, int change_gravity)$/;"	f	signature:(struct frame *f, register int xoff, register int yoff, int change_gravity)
x_set_override_redirect	xfns.c	/^x_set_override_redirect (struct frame *f, Lisp_Object new_value, Lisp_Object old_value)$/;"	f	file:	signature:(struct frame *f, Lisp_Object new_value, Lisp_Object old_value)
x_set_parent_frame	nsterm.h	/^extern void x_set_parent_frame (struct frame *f, Lisp_Object new_value,$/;"	p	signature:(struct frame *f, Lisp_Object new_value, Lisp_Object old_value)
x_set_parent_frame	w32fns.c	/^x_set_parent_frame (struct frame *f, Lisp_Object new_value, Lisp_Object old_value)$/;"	f	file:	signature:(struct frame *f, Lisp_Object new_value, Lisp_Object old_value)
x_set_parent_frame	xfns.c	/^x_set_parent_frame (struct frame *f, Lisp_Object new_value, Lisp_Object old_value)$/;"	f	file:	signature:(struct frame *f, Lisp_Object new_value, Lisp_Object old_value)
x_set_right_divider_width	frame.c	/^x_set_right_divider_width (struct frame *f, Lisp_Object arg, Lisp_Object oldval)$/;"	f	signature:(struct frame *f, Lisp_Object arg, Lisp_Object oldval)
x_set_right_divider_width	frame.h	/^extern void x_set_right_divider_width (struct frame *, Lisp_Object,$/;"	p	signature:(struct frame *, Lisp_Object, Lisp_Object)
x_set_right_fringe	frame.c	/^x_set_right_fringe (struct frame *f, Lisp_Object new_value, Lisp_Object old_value)$/;"	f	signature:(struct frame *f, Lisp_Object new_value, Lisp_Object old_value)
x_set_right_fringe	frame.h	/^extern void x_set_right_fringe (struct frame *, Lisp_Object, Lisp_Object);$/;"	p	signature:(struct frame *, Lisp_Object, Lisp_Object)
x_set_screen_gamma	frame.c	/^x_set_screen_gamma (struct frame *f, Lisp_Object new_value, Lisp_Object old_value)$/;"	f	signature:(struct frame *f, Lisp_Object new_value, Lisp_Object old_value)
x_set_screen_gamma	frame.h	/^extern void x_set_screen_gamma (struct frame *, Lisp_Object, Lisp_Object);$/;"	p	signature:(struct frame *, Lisp_Object, Lisp_Object)
x_set_scroll_bar_background	xfns.c	/^x_set_scroll_bar_background (struct frame *f, Lisp_Object value, Lisp_Object oldval)$/;"	f	file:	signature:(struct frame *f, Lisp_Object value, Lisp_Object oldval)
x_set_scroll_bar_default_height	frame.h	/^extern void x_set_scroll_bar_default_height (struct frame *);$/;"	p	signature:(struct frame *)
x_set_scroll_bar_default_height	w32fns.c	/^x_set_scroll_bar_default_height (struct frame *f)$/;"	f	signature:(struct frame *f)
x_set_scroll_bar_default_height	xfns.c	/^x_set_scroll_bar_default_height (struct frame *f)$/;"	f	signature:(struct frame *f)
x_set_scroll_bar_default_width	frame.h	/^extern void x_set_scroll_bar_default_width (struct frame *);$/;"	p	signature:(struct frame *)
x_set_scroll_bar_default_width	w32fns.c	/^x_set_scroll_bar_default_width (struct frame *f)$/;"	f	signature:(struct frame *f)
x_set_scroll_bar_default_width	xfns.c	/^x_set_scroll_bar_default_width (struct frame *f)$/;"	f	signature:(struct frame *f)
x_set_scroll_bar_foreground	xfns.c	/^x_set_scroll_bar_foreground (struct frame *f, Lisp_Object value, Lisp_Object oldval)$/;"	f	file:	signature:(struct frame *f, Lisp_Object value, Lisp_Object oldval)
x_set_scroll_bar_height	frame.c	/^x_set_scroll_bar_height (struct frame *f, Lisp_Object arg, Lisp_Object oldval)$/;"	f	signature:(struct frame *f, Lisp_Object arg, Lisp_Object oldval)
x_set_scroll_bar_height	frame.h	/^extern void x_set_scroll_bar_height (struct frame *, Lisp_Object, Lisp_Object);$/;"	p	signature:(struct frame *, Lisp_Object, Lisp_Object)
x_set_scroll_bar_width	frame.c	/^x_set_scroll_bar_width (struct frame *f, Lisp_Object arg, Lisp_Object oldval)$/;"	f	signature:(struct frame *f, Lisp_Object arg, Lisp_Object oldval)
x_set_scroll_bar_width	frame.h	/^extern void x_set_scroll_bar_width (struct frame *, Lisp_Object, Lisp_Object);$/;"	p	signature:(struct frame *, Lisp_Object, Lisp_Object)
x_set_skip_taskbar	w32fns.c	/^x_set_skip_taskbar (struct frame *f, Lisp_Object new_value, Lisp_Object old_value)$/;"	f	file:	signature:(struct frame *f, Lisp_Object new_value, Lisp_Object old_value)
x_set_skip_taskbar	xterm.c	/^x_set_skip_taskbar (struct frame *f, Lisp_Object new_value, Lisp_Object old_value)$/;"	f	signature:(struct frame *f, Lisp_Object new_value, Lisp_Object old_value)
x_set_skip_taskbar	xterm.h	/^extern void x_set_skip_taskbar (struct frame *, Lisp_Object, Lisp_Object);$/;"	p	signature:(struct frame *, Lisp_Object, Lisp_Object)
x_set_sticky	xterm.c	/^x_set_sticky (struct frame *f, Lisp_Object new_value, Lisp_Object old_value)$/;"	f	signature:(struct frame *f, Lisp_Object new_value, Lisp_Object old_value)
x_set_sticky	xterm.h	/^extern void x_set_sticky (struct frame *, Lisp_Object, Lisp_Object);$/;"	p	signature:(struct frame *, Lisp_Object, Lisp_Object)
x_set_title	w32fns.c	/^void x_set_title (struct frame *, Lisp_Object, Lisp_Object);$/;"	p	file:	signature:(struct frame *, Lisp_Object, Lisp_Object)
x_set_title	w32fns.c	/^x_set_title (struct frame *f, Lisp_Object name, Lisp_Object old_name)$/;"	f	signature:(struct frame *f, Lisp_Object name, Lisp_Object old_name)
x_set_title	xfns.c	/^x_set_title (struct frame *f, Lisp_Object name, Lisp_Object old_name)$/;"	f	file:	signature:(struct frame *f, Lisp_Object name, Lisp_Object old_name)
x_set_toolkit_horizontal_scroll_bar_thumb	xterm.c	/^x_set_toolkit_horizontal_scroll_bar_thumb (struct scroll_bar *bar, int portion, int position, int whole)$/;"	f	file:	signature:(struct scroll_bar *bar, int portion, int position, int whole)
x_set_toolkit_horizontal_scroll_bar_thumb	xterm.c	/^x_set_toolkit_horizontal_scroll_bar_thumb (struct scroll_bar *bar, int portion, int position,$/;"	f	file:	signature:(struct scroll_bar *bar, int portion, int position, int whole)
x_set_toolkit_scroll_bar_thumb	xterm.c	/^x_set_toolkit_scroll_bar_thumb (struct scroll_bar *bar, int portion, int position, int whole)$/;"	f	file:	signature:(struct scroll_bar *bar, int portion, int position, int whole)
x_set_toolkit_scroll_bar_thumb	xterm.c	/^x_set_toolkit_scroll_bar_thumb (struct scroll_bar *bar, int portion, int position,$/;"	f	file:	signature:(struct scroll_bar *bar, int portion, int position, int whole)
x_set_tool_bar_lines	w32fns.c	/^x_set_tool_bar_lines (struct frame *f, Lisp_Object value, Lisp_Object oldval)$/;"	f	signature:(struct frame *f, Lisp_Object value, Lisp_Object oldval)
x_set_tool_bar_lines	w32term.h	/^extern void x_set_tool_bar_lines (struct frame *f,$/;"	p	signature:(struct frame *f, Lisp_Object value, Lisp_Object oldval)
x_set_tool_bar_lines	xfns.c	/^x_set_tool_bar_lines (struct frame *f, Lisp_Object value, Lisp_Object oldval)$/;"	f	file:	signature:(struct frame *f, Lisp_Object value, Lisp_Object oldval)
x_set_tool_bar_position	xfns.c	/^x_set_tool_bar_position (struct frame *f,$/;"	f	file:	signature:(struct frame *f, Lisp_Object new_value, Lisp_Object old_value)
x_set_undecorated	nsterm.h	/^extern void x_set_undecorated (struct frame *f, Lisp_Object new_value,$/;"	p	signature:(struct frame *f, Lisp_Object new_value, Lisp_Object old_value)
x_set_undecorated	w32fns.c	/^x_set_undecorated (struct frame *f, Lisp_Object new_value, Lisp_Object old_value)$/;"	f	file:	signature:(struct frame *f, Lisp_Object new_value, Lisp_Object old_value)
x_set_undecorated	xfns.c	/^x_set_undecorated (struct frame *f, Lisp_Object new_value, Lisp_Object old_value)$/;"	f	file:	signature:(struct frame *f, Lisp_Object new_value, Lisp_Object old_value)
x_set_unsplittable	frame.c	/^x_set_unsplittable (struct frame *f, Lisp_Object arg, Lisp_Object oldval)$/;"	f	signature:(struct frame *f, Lisp_Object arg, Lisp_Object oldval)
x_set_unsplittable	frame.h	/^extern void x_set_unsplittable (struct frame *, Lisp_Object, Lisp_Object);$/;"	p	signature:(struct frame *, Lisp_Object, Lisp_Object)
x_set_vertical_scroll_bars	frame.c	/^x_set_vertical_scroll_bars (struct frame *f, Lisp_Object arg, Lisp_Object oldval)$/;"	f	signature:(struct frame *f, Lisp_Object arg, Lisp_Object oldval)
x_set_vertical_scroll_bars	frame.h	/^extern void x_set_vertical_scroll_bars (struct frame *, Lisp_Object, Lisp_Object);$/;"	p	signature:(struct frame *, Lisp_Object, Lisp_Object)
x_set_visibility	frame.c	/^x_set_visibility (struct frame *f, Lisp_Object value, Lisp_Object oldval)$/;"	f	signature:(struct frame *f, Lisp_Object value, Lisp_Object oldval)
x_set_visibility	frame.h	/^extern void x_set_visibility (struct frame *, Lisp_Object, Lisp_Object);$/;"	p	signature:(struct frame *, Lisp_Object, Lisp_Object)
x_set_wait_for_wm	xfns.c	/^x_set_wait_for_wm (struct frame *f, Lisp_Object new_value, Lisp_Object old_value)$/;"	f	file:	signature:(struct frame *f, Lisp_Object new_value, Lisp_Object old_value)
x_set_window_size	frame.h	/^extern void x_set_window_size (struct frame *f, bool change_gravity,$/;"	p	signature:(struct frame *f, bool change_gravity, int width, int height, bool pixelwise)
x_set_window_size	w32term.c	/^x_set_window_size (struct frame *f, bool change_gravity,$/;"	f	signature:(struct frame *f, bool change_gravity, int width, int height, bool pixelwise)
x_set_window_size	xterm.c	/^x_set_window_size (struct frame *f, bool change_gravity,$/;"	f	signature:(struct frame *f, bool change_gravity, int width, int height, bool pixelwise)
x_set_window_size_1	xterm.c	/^x_set_window_size_1 (struct frame *f, bool change_gravity,$/;"	f	file:	signature:(struct frame *f, bool change_gravity, int width, int height)
x_set_z_group	nsterm.h	/^extern void x_set_z_group (struct frame *f, Lisp_Object new_value,$/;"	p	signature:(struct frame *f, Lisp_Object new_value, Lisp_Object old_value)
x_set_z_group	w32fns.c	/^x_set_z_group (struct frame *f, Lisp_Object new_value, Lisp_Object old_value)$/;"	f	file:	signature:(struct frame *f, Lisp_Object new_value, Lisp_Object old_value)
x_set_z_group	xterm.c	/^x_set_z_group (struct frame *f, Lisp_Object new_value, Lisp_Object old_value)$/;"	f	signature:(struct frame *f, Lisp_Object new_value, Lisp_Object old_value)
x_set_z_group	xterm.h	/^extern void x_set_z_group (struct frame *, Lisp_Object, Lisp_Object);$/;"	p	signature:(struct frame *, Lisp_Object, Lisp_Object)
x_shift_glyphs_for_insert	xterm.c	/^x_shift_glyphs_for_insert (struct frame *f, int x, int y, int width, int height, int shift_by)$/;"	f	file:	signature:(struct frame *f, int x, int y, int width, int height, int shift_by)
x_show_hourglass	xterm.c	/^x_show_hourglass (struct frame *f)$/;"	f	file:	signature:(struct frame *f)
X_SHRT_MAX	xterm.h	727;"	d
X_SHRT_MIN	xterm.h	728;"	d
x_special_error_handler	xterm.h	/^typedef void (*x_special_error_handler)(Display *, XErrorEvent *, char *,$/;"	t
x_start_queuing_selection_requests	xselect.c	/^x_start_queuing_selection_requests (void)$/;"	f	file:	signature:(void)
x_stop_queuing_selection_requests	xselect.c	/^x_stop_queuing_selection_requests (void)$/;"	f	file:	signature:(void)
x_stretch_cursor_p	globals.h	1085;"	d
x_supports_face_attributes_p	xfaces.c	/^x_supports_face_attributes_p (struct frame *f,$/;"	f	file:	signature:(struct frame *f, Lisp_Object attrs[LFACE_VECTOR_SIZE], struct face *def_face)
x_sync	frame.h	/^extern void x_sync (struct frame *);$/;"	p	signature:(struct frame *)
x_sync	xfns.c	/^x_sync (struct frame *f)$/;"	f	signature:(struct frame *f)
x_sync_with_move	xterm.c	/^static void x_sync_with_move (struct frame *, int, int, bool);$/;"	p	file:	signature:(struct frame *, int, int, bool)
x_sync_with_move	xterm.c	/^x_sync_with_move (struct frame *f, int left, int top, bool fuzzy)$/;"	f	file:	signature:(struct frame *f, int left, int top, bool fuzzy)
x_term_init	xterm.c	/^x_term_init (Lisp_Object display_name, char *xrm_option, char *resource_name)$/;"	f	signature:(Lisp_Object display_name, char *xrm_option, char *resource_name)
x_term_init	xterm.h	/^extern struct x_display_info *x_term_init (Lisp_Object, char *, char *);$/;"	p	signature:(Lisp_Object, char *, char *)
x_text_icon	xterm.c	/^x_text_icon (struct frame *f, const char *icon_name)$/;"	f	signature:(struct frame *f, const char *icon_name)
x_text_icon	xterm.h	/^extern bool x_text_icon (struct frame *, const char *);$/;"	p	signature:(struct frame *, const char *)
x_timeout_atimer_activated_flag	xterm.c	/^static bool x_timeout_atimer_activated_flag;$/;"	v	file:
x_toggle_visible_pointer	xterm.c	/^x_toggle_visible_pointer (struct frame *f, bool invisible)$/;"	f	file:	signature:(struct frame *f, bool invisible)
x_top_window_to_frame	w32term.c	90;"	d	file:
x_top_window_to_frame	xterm.c	/^x_top_window_to_frame (struct x_display_info *dpyinfo, int wdesc)$/;"	f	signature:(struct x_display_info *dpyinfo, int wdesc)
x_top_window_to_frame	xterm.c	4533;"	d	file:
x_top_window_to_frame	xterm.h	/^extern struct frame *x_top_window_to_frame (struct x_display_info *, int);$/;"	p	signature:(struct x_display_info *, int)
x_to_w32_charset	w32font.c	/^x_to_w32_charset (char * lpcs)$/;"	f	file:	signature:(char * lpcs)
x_to_w32_color	w32fns.c	/^x_to_w32_color (const char * colorname)$/;"	f	file:	signature:(const char * colorname)
x_to_xcolors	image.c	/^x_to_xcolors (struct frame *f, struct image *img, bool rgb_p)$/;"	f	file:	signature:(struct frame *f, struct image *img, bool rgb_p)
x_trace_wire	xterm.c	/^x_trace_wire (void)$/;"	f	signature:(void)
X_ULONG_MAX	xterm.h	731;"	d
x_uncatch_errors	xterm.c	/^x_uncatch_errors (void)$/;"	f	signature:(void)
x_uncatch_errors	xterm.h	/^extern void x_uncatch_errors (void);$/;"	p	signature:(void)
x_uncatch_errors_after_check	xterm.c	/^x_uncatch_errors_after_check (void)$/;"	f	signature:(void)
x_uncatch_errors_after_check	xterm.h	/^extern void x_uncatch_errors_after_check (void);$/;"	p	signature:(void)
x_underline_at_descent_line	globals.h	1087;"	d
x_update_begin	w32term.c	/^x_update_begin (struct frame *f)$/;"	f	file:	signature:(struct frame *f)
x_update_begin	xterm.c	/^x_update_begin (struct frame *f)$/;"	f	file:	signature:(struct frame *f)
x_update_cursor	dispextern.h	/^extern void x_update_cursor (struct frame *, bool);$/;"	p	signature:(struct frame *, bool)
x_update_cursor	xdisp.c	/^x_update_cursor (struct frame *f, bool on_p)$/;"	f	signature:(struct frame *f, bool on_p)
x_update_end	w32term.c	/^static void x_update_end (struct frame *);$/;"	p	file:	signature:(struct frame *)
x_update_end	w32term.c	/^x_update_end (struct frame *f)$/;"	f	file:	signature:(struct frame *f)
x_update_end	xterm.c	/^x_update_end (struct frame *f)$/;"	f	file:	signature:(struct frame *f)
x_update_menu_appearance	xfaces.c	/^x_update_menu_appearance (struct frame *f)$/;"	f	file:	signature:(struct frame *f)
x_update_window_begin	w32term.c	/^x_update_window_begin (struct window *w)$/;"	f	file:	signature:(struct window *w)
x_update_window_begin	xterm.c	/^x_update_window_begin (struct window *w)$/;"	f	file:	signature:(struct window *w)
x_update_window_end	w32term.c	/^x_update_window_end (struct window *w, bool cursor_on_p,$/;"	f	file:	signature:(struct window *w, bool cursor_on_p, bool mouse_face_overwritten_p)
x_update_window_end	xterm.c	/^x_update_window_end (struct window *w, bool cursor_on_p,$/;"	f	file:	signature:(struct window *w, bool cursor_on_p, bool mouse_face_overwritten_p)
x_use_underline_position_properties	globals.h	1089;"	d
x_wait_for_event	xterm.c	/^x_wait_for_event (struct frame *f, int eventtype)$/;"	f	signature:(struct frame *f, int eventtype)
x_wait_for_event	xterm.h	/^extern void x_wait_for_event (struct frame *, int);$/;"	p	signature:(struct frame *, int)
x_window	xfns.c	/^x_window (struct frame *f)$/;"	f	file:	signature:(struct frame *f)
x_window	xfns.c	/^x_window (struct frame *f, long window_prompting)$/;"	f	file:	signature:(struct frame *f, long window_prompting)
x_window	xterm.h	/^  Window x_window;$/;"	m	struct:scroll_bar	access:public
x_window_property_intern	xfns.c	/^x_window_property_intern (struct frame *f,$/;"	f	file:	signature:(struct frame *f, Window target_window, Atom prop_atom, Atom target_type, Lisp_Object delete_p, Lisp_Object vector_ret_p, bool *found)
x_window_to_frame	w32fns.c	/^x_window_to_frame (struct w32_display_info *dpyinfo, HWND wdesc)$/;"	f	signature:(struct w32_display_info *dpyinfo, HWND wdesc)
x_window_to_frame	w32term.h	/^extern struct frame *x_window_to_frame (struct w32_display_info *, HWND);$/;"	p	signature:(struct w32_display_info *, HWND)
x_window_to_frame	xterm.c	/^x_window_to_frame (struct x_display_info *dpyinfo, int wdesc)$/;"	f	file:	signature:(struct x_display_info *dpyinfo, int wdesc)
x_window_to_menu_bar	xterm.c	/^x_window_to_menu_bar (Window window)$/;"	f	file:	signature:(Window window)
x_window_to_scroll_bar	w32term.c	/^static struct scroll_bar *x_window_to_scroll_bar (Window, int);$/;"	p	file:	signature:(Window, int)
x_window_to_scroll_bar	w32term.c	/^x_window_to_scroll_bar (Window window_id, int type)$/;"	f	file:	signature:(Window window_id, int type)
x_window_to_scroll_bar	xterm.c	/^static struct scroll_bar *x_window_to_scroll_bar (Display *, Window, int);$/;"	p	file:	signature:(Display *, Window, int)
x_window_to_scroll_bar	xterm.c	/^x_window_to_scroll_bar (Display *display, Window window_id, int type)$/;"	f	file:	signature:(Display *display, Window window_id, int type)
x_wire_count	xterm.c	/^static unsigned int x_wire_count;$/;"	v	file:
X_WMTYPE_A	xterm.h	/^      X_WMTYPE_A,$/;"	e	enum:x_display_info::__anon87
X_WMTYPE_B	xterm.h	/^      X_WMTYPE_B$/;"	e	enum:x_display_info::__anon87
X_WMTYPE_UNKNOWN	xterm.h	/^      X_WMTYPE_UNKNOWN,$/;"	e	enum:x_display_info::__anon87
x_wm_set_icon_pixmap	w32term.c	/^void x_wm_set_icon_pixmap (struct frame *, int);$/;"	p	file:	signature:(struct frame *, int)
x_wm_set_icon_pixmap	xterm.c	/^static void x_wm_set_icon_pixmap (struct frame *, ptrdiff_t);$/;"	p	file:	signature:(struct frame *, ptrdiff_t)
x_wm_set_icon_pixmap	xterm.c	/^x_wm_set_icon_pixmap (struct frame *f, ptrdiff_t pixmap_id)$/;"	f	file:	signature:(struct frame *f, ptrdiff_t pixmap_id)
x_wm_set_icon_position	frame.h	/^extern void x_wm_set_icon_position (struct frame *, int, int);$/;"	p	signature:(struct frame *, int, int)
x_wm_set_icon_position	xterm.c	/^x_wm_set_icon_position (struct frame *f, int icon_x, int icon_y)$/;"	f	signature:(struct frame *f, int icon_x, int icon_y)
x_wm_set_size_hint	frame.h	/^extern void x_wm_set_size_hint (struct frame *f, long flags, bool user_position);$/;"	p	signature:(struct frame *f, long flags, bool user_position)
x_wm_set_size_hint	gtkutil.c	/^x_wm_set_size_hint (struct frame *f, long int flags, bool user_position)$/;"	f	signature:(struct frame *f, long int flags, bool user_position)
x_wm_set_size_hint	w32term.c	/^x_wm_set_size_hint (struct frame *f, long flags, bool user_position)$/;"	f	signature:(struct frame *f, long flags, bool user_position)
x_wm_set_size_hint	xterm.c	/^x_wm_set_size_hint (struct frame *f, long flags, bool user_position)$/;"	f	signature:(struct frame *f, long flags, bool user_position)
x_wm_set_window_state	w32term.c	/^void x_wm_set_window_state (struct frame *, int);$/;"	p	file:	signature:(struct frame *, int)
x_wm_set_window_state	xterm.c	/^static void x_wm_set_window_state (struct frame *, int);$/;"	p	file:	signature:(struct frame *, int)
x_wm_set_window_state	xterm.c	/^x_wm_set_window_state (struct frame *f, int state)$/;"	f	file:	signature:(struct frame *f, int state)
x_wm_supports	xterm.c	/^x_wm_supports (struct frame *f, Atom want_atom)$/;"	f	signature:(struct frame *f, Atom want_atom)
x_wm_supports	xterm.h	/^extern bool x_wm_supports (struct frame *, Atom);$/;"	p	signature:(struct frame *, Atom)
x_write_glyphs	dispextern.h	/^extern void x_write_glyphs (struct window *, struct glyph_row *,$/;"	p	signature:(struct window *, struct glyph_row *, struct glyph *, enum glyph_row_area, int)
x_write_glyphs	xdisp.c	/^x_write_glyphs (struct window *w, struct glyph_row *updated_row,$/;"	f	signature:(struct window *w, struct glyph_row *updated_row, struct glyph *start, enum glyph_row_area updated_area, int len)
x_x_to_emacs_modifiers	xterm.c	/^x_x_to_emacs_modifiers (struct x_display_info *dpyinfo, int state)$/;"	f	signature:(struct x_display_info *dpyinfo, int state)
x_x_to_emacs_modifiers	xterm.h	/^extern int x_x_to_emacs_modifiers (struct x_display_info *, int);$/;"	p	signature:(struct x_display_info *, int)
x_y_to_hpos_vpos	xdisp.c	/^x_y_to_hpos_vpos (struct window *w, int x, int y, int *hpos, int *vpos,$/;"	f	file:	signature:(struct window *w, int x, int y, int *hpos, int *vpos, int *dx, int *dy, int *area)
y	dispextern.h	/^  int x, y;$/;"	m	struct:draw_fringe_bitmap_params	access:public
y	dispextern.h	/^  int x, y;$/;"	m	struct:glyph_row	access:public
y	dispextern.h	/^  int y, ybase;$/;"	m	struct:glyph_string	access:public
y	dispextern.h	/^  Lisp_Object y;$/;"	m	struct:it_slice	access:public
y	dispextern.h	/^  unsigned y : 16;$/;"	m	struct:glyph_slice	access:public
y	keyboard.c	/^  (Lisp_Object x, Lisp_Object y, Lisp_Object frame_or_window, Lisp_Object whole)$/;"	v
y	menu.c	/^  (Lisp_Object x, Lisp_Object y, Lisp_Object frame)$/;"	v
y	nsgui.h	/^      int x, y;$/;"	m	struct:__anon46	access:public
y	nsgui.h	/^typedef struct _NSPoint { CGFloat x, y; } NSPoint;$/;"	m	struct:_NSPoint	access:public
y	term.c	/^  int x, y;$/;"	m	struct:tty_menu_state	file:	access:public
y	termhooks.h	/^  Lisp_Object x, y;$/;"	m	struct:input_event	access:public
y	w32gui.h	/^    int x, y;$/;"	m	struct:__anon86	access:public
y	window.c	/^  (Lisp_Object x, Lisp_Object y, Lisp_Object frame)$/;"	v
y	window.c	/^  int x, y;$/;"	m	struct:check_window_data	file:	access:public
y	window.h	/^  int x, y;$/;"	m	struct:cursor_pos	access:public
y	xmenu.c	/^  int y;$/;"	m	struct:next_popup_x_y	file:	access:public
y	xwidget.h	/^  int y;$/;"	m	struct:xwidget_view	access:public
ybase	dispextern.h	/^  int y, ybase;$/;"	m	struct:glyph_string	access:public
YG_SB_MAX	gtkutil.h	36;"	d
YG_SB_MIN	gtkutil.h	35;"	d
YG_SB_RANGE	gtkutil.h	37;"	d
yield_callback	thread.c	/^yield_callback (void *ignore)$/;"	f	file:	signature:(void *ignore)
YNegative	nsgui.h	183;"	d
YNegative	w32gui.h	101;"	d
YValue	nsgui.h	178;"	d
YValue	w32gui.h	96;"	d
y_limit	xdisp.c	/^   Lisp_Object y_limit, Lisp_Object mode_and_header_line)$/;"	v
z	buffer.h	/^    ptrdiff_t z;		\/* Char pos of end of buffer.  *\/$/;"	m	struct:buffer_text	access:public
Z	buffer.h	59;"	d
zero_index_char	charset.c	/^  int zero_index_char;$/;"	m	struct:__anon78	file:	access:public
zero_vector	alloc.c	/^Lisp_Object zero_vector;$/;"	v
ZERO_WIDTH_JOINER	character.h	/^  ZERO_WIDTH_JOINER = 0x200D,$/;"	e	enum:__anon54
ZERO_WIDTH_NON_JOINER	character.h	/^  ZERO_WIDTH_NON_JOINER = 0x200C,$/;"	e	enum:__anon54
zlib_initialized	decompress.c	/^static bool zlib_initialized;$/;"	v	file:
zooming	nsterm.h	/^  int zooming;$/;"	m	struct:ns_output	access:public
zv	buffer.h	/^  ptrdiff_t zv;$/;"	m	struct:buffer	access:public
ZV	buffer.h	55;"	d
zv	dispextern.h	/^  ptrdiff_t begv, zv;$/;"	m	struct:glyph_matrix	access:public
ZV_ADDR	buffer.h	80;"	d
zv_byte	buffer.h	/^  ptrdiff_t zv_byte;$/;"	m	struct:buffer	access:public
ZV_BYTE	buffer.h	56;"	d
zv_marker_	buffer.h	/^  Lisp_Object zv_marker_;$/;"	m	struct:buffer	access:public
Z_ADDR	buffer.h	83;"	d
z_byte	buffer.h	/^    ptrdiff_t z_byte;		\/* Byte pos of end of buffer.  *\/$/;"	m	struct:buffer_text	access:public
Z_BYTE	buffer.h	60;"	d
z_group	frame.h	/^  ENUM_BF (z_group) z_group : 2;$/;"	m	struct:frame	access:public
z_group	frame.h	/^enum z_group$/;"	g
z_group_above	frame.h	/^  z_group_above,$/;"	e	enum:z_group
z_group_above_suspended	frame.h	/^  z_group_above_suspended,$/;"	e	enum:z_group
z_group_below	frame.h	/^  z_group_below,$/;"	e	enum:z_group
z_group_none	frame.h	/^  z_group_none,$/;"	e	enum:z_group
_aligned_blocks	gmalloc.c	/^struct alignlist *_aligned_blocks = NULL;$/;"	v	typeref:struct:alignlist
_aligned_blocks_mutex	gmalloc.c	/^pthread_mutex_t _aligned_blocks_mutex = PTHREAD_MUTEX_INITIALIZER;$/;"	v
_ALL_SOURCE	config.h	1631;"	d
_beginthread	systhread.c	/^uintptr_t _beginthread (void (__cdecl *)(void *), unsigned, void *);$/;"	p	file:	signature:(void (__cdecl *)(void *), unsigned, void *)
_bytes_free	gmalloc.c	/^size_t _bytes_free;$/;"	v
_bytes_used	gmalloc.c	/^size_t _bytes_used;$/;"	v
_child_process	w32.h	/^typedef struct _child_process$/;"	s
_child_process::char_avail	w32.h	/^  HANDLE              char_avail;$/;"	m	struct:_child_process	access:public
_child_process::char_consumed	w32.h	/^  HANDLE              char_consumed;$/;"	m	struct:_child_process	access:public
_child_process::chr	w32.h	/^  char                chr;$/;"	m	struct:_child_process	access:public
_child_process::errcode	w32.h	/^  volatile int        errcode;$/;"	m	struct:_child_process	access:public
_child_process::fd	w32.h	/^  int                 fd;$/;"	m	struct:_child_process	access:public
_child_process::hwnd	w32.h	/^  HWND                hwnd;$/;"	m	struct:_child_process	access:public
_child_process::ovl_read	w32.h	/^  OVERLAPPED          ovl_read;$/;"	m	struct:_child_process	access:public
_child_process::ovl_write	w32.h	/^  OVERLAPPED          ovl_write;$/;"	m	struct:_child_process	access:public
_child_process::pid	w32.h	/^  int                 pid;$/;"	m	struct:_child_process	access:public
_child_process::procinfo	w32.h	/^  PROCESS_INFORMATION procinfo;$/;"	m	struct:_child_process	access:public
_child_process::status	w32.h	/^  volatile int        status;$/;"	m	struct:_child_process	access:public
_child_process::thrd	w32.h	/^  HANDLE              thrd;$/;"	m	struct:_child_process	access:public
_chunks_free	gmalloc.c	/^size_t _chunks_free;$/;"	v
_chunks_used	gmalloc.c	/^size_t _chunks_used;$/;"	v
_DARWIN_C_SOURCE	config.h	1635;"	d
_DARWIN_USE_64_BIT_INODE	config.h	1760;"	d
_DebPrint	conf_post.h	/^extern void _DebPrint (const char *fmt, ...);$/;"	p	signature:(const char *fmt, ...)
_DebPrint	w32fns.c	/^_DebPrint (const char *fmt, ...)$/;"	f	signature:(const char *fmt, ...)
_DONT_USE_CTYPE_INLINE_	config.h	152;"	d
_EmacsFixed	emacsgtkfixed.h	/^struct _EmacsFixed$/;"	s
_EmacsFixed::container	emacsgtkfixed.h	/^  GtkFixed container;$/;"	m	struct:_EmacsFixed	access:public
_EmacsFixed::priv	emacsgtkfixed.h	/^  EmacsFixedPrivate *priv;$/;"	m	struct:_EmacsFixed	access:public
_EmacsFixedClass	emacsgtkfixed.h	/^struct _EmacsFixedClass$/;"	s
_EmacsFixedClass::parent_class	emacsgtkfixed.h	/^  GtkFixedClass parent_class;$/;"	m	struct:_EmacsFixedClass	access:public
_EmacsFixedPrivate	emacsgtkfixed.c	/^struct _EmacsFixedPrivate$/;"	s	file:
_EmacsFixedPrivate::f	emacsgtkfixed.c	/^  struct frame *f;$/;"	m	struct:_EmacsFixedPrivate	typeref:struct:_EmacsFixedPrivate::frame	file:	access:public
_EmacsFrameClassRec	widgetprv.h	/^typedef struct _EmacsFrameClassRec {	\/* full class record declaration *\/$/;"	s
_EmacsFrameClassRec::core_class	widgetprv.h	/^    CoreClassPart		core_class;$/;"	m	struct:_EmacsFrameClassRec	access:public
_EmacsFrameClassRec::emacs_frame_class	widgetprv.h	/^    EmacsFrameClassPart	emacs_frame_class;$/;"	m	struct:_EmacsFrameClassRec	access:public
_EmacsFrameP_h	widgetprv.h	22;"	d
_EmacsFrameRec	widgetprv.h	/^typedef struct _EmacsFrameRec {	\/* full instance record *\/$/;"	s
_EmacsFrameRec::core	widgetprv.h	/^    CorePart		core;$/;"	m	struct:_EmacsFrameRec	access:public
_EmacsFrameRec::emacs_frame	widgetprv.h	/^    EmacsFramePart	emacs_frame;$/;"	m	struct:_EmacsFrameRec	access:public
_EmacsFrame_h	widget.h	22;"	d
_FILE_OFFSET_BITS	sysdep.c	3321;"	d	file:
_FILE_OFFSET_BITS	sysdep.c	3329;"	d	file:
_FORTIFY_SOURCE	config.h	155;"	d
_FORTIFY_SOURCE	config.h	238;"	d
_fraghead	gmalloc.c	/^static struct list _fraghead[BLOCKLOG];$/;"	v	typeref:struct:list	file:
_fraghead	gmalloc.c	/^struct list _fraghead[BLOCKLOG];$/;"	v	typeref:struct:list
_free	gmalloc.c	/^extern void _free (void *);$/;"	p	file:	signature:(void *)
_free	gmalloc.c	/^_free (void *ptr)$/;"	f	signature:(void *ptr)
_free_internal	gmalloc.c	/^extern void _free_internal (void *);$/;"	p	file:	signature:(void *)
_free_internal	gmalloc.c	/^_free_internal (void *ptr)$/;"	f	signature:(void *ptr)
_free_internal_nolock	gmalloc.c	/^extern void _free_internal_nolock (void *);$/;"	p	file:	signature:(void *)
_free_internal_nolock	gmalloc.c	/^_free_internal_nolock (void *ptr)$/;"	f	signature:(void *ptr)
_free_osfhnd	w32.c	/^extern int __cdecl _free_osfhnd (int fd);$/;"	p	file:	signature:(int fd)
_GL_ATTRIBUTE_CONST	config.h	1998;"	d
_GL_ATTRIBUTE_CONST	config.h	2000;"	d
_GL_ATTRIBUTE_PURE	config.h	1991;"	d
_GL_ATTRIBUTE_PURE	config.h	1993;"	d
_GL_EXTERN_INLINE	config.h	1877;"	d
_GL_EXTERN_INLINE	config.h	1887;"	d
_GL_EXTERN_INLINE	config.h	1891;"	d
_GL_EXTERN_INLINE_IN_USE	config.h	1878;"	d
_GL_EXTERN_INLINE_IN_USE	config.h	1888;"	d
_GL_EXTERN_INLINE_STDHEADER_BUG	config.h	1867;"	d
_GL_INLINE	config.h	1876;"	d
_GL_INLINE	config.h	1883;"	d
_GL_INLINE	config.h	1885;"	d
_GL_INLINE	config.h	1890;"	d
_GL_INLINE_HEADER_BEGIN	config.h	1907;"	d
_GL_INLINE_HEADER_BEGIN	config.h	1915;"	d
_GL_INLINE_HEADER_CONST_PRAGMA	config.h	1902;"	d
_GL_INLINE_HEADER_CONST_PRAGMA	config.h	1904;"	d
_GL_INLINE_HEADER_END	config.h	1912;"	d
_GL_INLINE_HEADER_END	config.h	1916;"	d
_GL_UNUSED	config.h	1971;"	d
_GL_UNUSED	config.h	1973;"	d
_GL_UNUSED_LABEL	config.h	1984;"	d
_GL_UNUSED_LABEL	config.h	1986;"	d
_GL_VERIFY_H	nsgui.h	48;"	d
_GNU_SOURCE	config.h	1639;"	d
_heapbase	gmalloc.c	/^char *_heapbase;$/;"	v
_heapindex	gmalloc.c	/^size_t _heapindex;$/;"	v
_heapinfo	gmalloc.c	/^malloc_info *_heapinfo;$/;"	v
_heaplimit	gmalloc.c	/^size_t _heaplimit;$/;"	v
_HEAP_INFORMATION_CLASS	w32heap.c	/^typedef enum _HEAP_INFORMATION_CLASS {$/;"	g	file:
_malloc	gmalloc.c	/^extern void *_malloc (size_t);$/;"	p	file:
_malloc	gmalloc.c	/^_malloc (size_t size)$/;"	f	signature:(size_t size)
_malloc_internal	gmalloc.c	/^extern void *_malloc_internal (size_t);$/;"	p	file:
_malloc_internal	gmalloc.c	/^_malloc_internal (size_t size)$/;"	f	signature:(size_t size)
_malloc_internal_nolock	gmalloc.c	/^extern void *_malloc_internal_nolock (size_t);$/;"	p	file:
_malloc_internal_nolock	gmalloc.c	/^_malloc_internal_nolock (size_t size)$/;"	f	signature:(size_t size)
_malloc_mutex	gmalloc.c	/^pthread_mutex_t _malloc_mutex = PTHREAD_MUTEX_INITIALIZER;$/;"	v
_malloc_thread_enabled_p	gmalloc.c	/^int _malloc_thread_enabled_p;$/;"	v
_memccpy	w32select.c	86;"	d	file:
_MEMORY_STATUS_EX	w32.c	/^typedef struct _MEMORY_STATUS_EX {$/;"	s	file:
_MEMORY_STATUS_EX::dwLength	w32.c	/^  DWORD dwLength;$/;"	m	struct:_MEMORY_STATUS_EX	file:	access:public
_MEMORY_STATUS_EX::dwMemoryLoad	w32.c	/^  DWORD dwMemoryLoad;$/;"	m	struct:_MEMORY_STATUS_EX	file:	access:public
_MEMORY_STATUS_EX::ullAvailExtendedVirtual	w32.c	/^  DWORDLONG ullAvailExtendedVirtual;$/;"	m	struct:_MEMORY_STATUS_EX	file:	access:public
_MEMORY_STATUS_EX::ullAvailPageFile	w32.c	/^  DWORDLONG ullAvailPageFile;$/;"	m	struct:_MEMORY_STATUS_EX	file:	access:public
_MEMORY_STATUS_EX::ullAvailPhys	w32.c	/^  DWORDLONG ullAvailPhys;$/;"	m	struct:_MEMORY_STATUS_EX	file:	access:public
_MEMORY_STATUS_EX::ullAvailVirtual	w32.c	/^  DWORDLONG ullAvailVirtual;$/;"	m	struct:_MEMORY_STATUS_EX	file:	access:public
_MEMORY_STATUS_EX::ullTotalPageFile	w32.c	/^  DWORDLONG ullTotalPageFile;$/;"	m	struct:_MEMORY_STATUS_EX	file:	access:public
_MEMORY_STATUS_EX::ullTotalPhys	w32.c	/^  DWORDLONG ullTotalPhys;$/;"	m	struct:_MEMORY_STATUS_EX	file:	access:public
_MEMORY_STATUS_EX::ullTotalVirtual	w32.c	/^  DWORDLONG ullTotalVirtual;$/;"	m	struct:_MEMORY_STATUS_EX	file:	access:public
_my_begbss	firstfile.c	/^static char _my_begbss[1];$/;"	v	file:
_my_endbss	lastfile.c	/^static char _my_endbss[1];$/;"	v	file:
_NLSCMPERROR	w32proc.c	3561;"	d	file:
_Noreturn	config.h	1785;"	d
_Noreturn	config.h	1787;"	d
_Noreturn	config.h	1789;"	d
_NSPoint	nsgui.h	/^typedef struct _NSPoint { CGFloat x, y; } NSPoint;$/;"	s
_NSPoint::x	nsgui.h	/^typedef struct _NSPoint { CGFloat x, y; } NSPoint;$/;"	m	struct:_NSPoint	access:public
_NSPoint::y	nsgui.h	/^typedef struct _NSPoint { CGFloat x, y; } NSPoint;$/;"	m	struct:_NSPoint	access:public
_NSRect	nsgui.h	/^typedef struct _NSRect  { NSPoint origin; NSSize size; } NSRect;$/;"	s
_NSRect::origin	nsgui.h	/^typedef struct _NSRect  { NSPoint origin; NSSize size; } NSRect;$/;"	m	struct:_NSRect	access:public
_NSRect::size	nsgui.h	/^typedef struct _NSRect  { NSPoint origin; NSSize size; } NSRect;$/;"	m	struct:_NSRect	access:public
_NSSize	nsgui.h	/^typedef struct _NSSize  { CGFloat width, height; } NSSize;$/;"	s
_NSSize::height	nsgui.h	/^typedef struct _NSSize  { CGFloat width, height; } NSSize;$/;"	m	struct:_NSSize	access:public
_NSSize::width	nsgui.h	/^typedef struct _NSSize  { CGFloat width, height; } NSSize;$/;"	m	struct:_NSSize	access:public
_open	w32fns.c	10965;"	d	file:
_POSIX_PTHREAD_SEMANTICS	config.h	1643;"	d
_PROCESS_MEMORY_COUNTERS_EX	w32.c	/^typedef struct _PROCESS_MEMORY_COUNTERS_EX {$/;"	s	file:
_PROCESS_MEMORY_COUNTERS_EX::cb	w32.c	/^  DWORD  cb;$/;"	m	struct:_PROCESS_MEMORY_COUNTERS_EX	file:	access:public
_PROCESS_MEMORY_COUNTERS_EX::PageFaultCount	w32.c	/^  DWORD  PageFaultCount;$/;"	m	struct:_PROCESS_MEMORY_COUNTERS_EX	file:	access:public
_PROCESS_MEMORY_COUNTERS_EX::PagefileUsage	w32.c	/^  SIZE_T PagefileUsage;$/;"	m	struct:_PROCESS_MEMORY_COUNTERS_EX	file:	access:public
_PROCESS_MEMORY_COUNTERS_EX::PeakPagefileUsage	w32.c	/^  SIZE_T PeakPagefileUsage;$/;"	m	struct:_PROCESS_MEMORY_COUNTERS_EX	file:	access:public
_PROCESS_MEMORY_COUNTERS_EX::PeakWorkingSetSize	w32.c	/^  SIZE_T PeakWorkingSetSize;$/;"	m	struct:_PROCESS_MEMORY_COUNTERS_EX	file:	access:public
_PROCESS_MEMORY_COUNTERS_EX::PrivateUsage	w32.c	/^  SIZE_T PrivateUsage;$/;"	m	struct:_PROCESS_MEMORY_COUNTERS_EX	file:	access:public
_PROCESS_MEMORY_COUNTERS_EX::QuotaNonPagedPoolUsage	w32.c	/^  SIZE_T QuotaNonPagedPoolUsage;$/;"	m	struct:_PROCESS_MEMORY_COUNTERS_EX	file:	access:public
_PROCESS_MEMORY_COUNTERS_EX::QuotaPagedPoolUsage	w32.c	/^  SIZE_T QuotaPagedPoolUsage;$/;"	m	struct:_PROCESS_MEMORY_COUNTERS_EX	file:	access:public
_PROCESS_MEMORY_COUNTERS_EX::QuotaPeakNonPagedPoolUsage	w32.c	/^  SIZE_T QuotaPeakNonPagedPoolUsage;$/;"	m	struct:_PROCESS_MEMORY_COUNTERS_EX	file:	access:public
_PROCESS_MEMORY_COUNTERS_EX::QuotaPeakPagedPoolUsage	w32.c	/^  SIZE_T QuotaPeakPagedPoolUsage;$/;"	m	struct:_PROCESS_MEMORY_COUNTERS_EX	file:	access:public
_PROCESS_MEMORY_COUNTERS_EX::WorkingSetSize	w32.c	/^  SIZE_T WorkingSetSize;$/;"	m	struct:_PROCESS_MEMORY_COUNTERS_EX	file:	access:public
_P_NOWAIT	callproc.c	38;"	d	file:
_P_NOWAIT	w32proc.c	924;"	d	file:
_P_WAIT	sysdep.c	110;"	d	file:
_realloc	gmalloc.c	/^extern void *_realloc (void *, size_t);$/;"	p	file:	signature:(void *, size_t)
_realloc	gmalloc.c	/^_realloc (void *ptr, size_t size)$/;"	f	signature:(void *ptr, size_t size)
_realloc_internal	gmalloc.c	/^extern void *_realloc_internal (void *, size_t);$/;"	p	file:	signature:(void *, size_t)
_realloc_internal	gmalloc.c	/^_realloc_internal (void *ptr, size_t size)$/;"	f	signature:(void *ptr, size_t size)
_realloc_internal_nolock	gmalloc.c	/^extern void *_realloc_internal_nolock (void *, size_t);$/;"	p	file:	signature:(void *, size_t)
_realloc_internal_nolock	gmalloc.c	/^_realloc_internal_nolock (void *ptr, size_t size)$/;"	f	signature:(void *ptr, size_t size)
_REGEX_H	regex.h	21;"	d
_REMACS_LIB_H	remacs-lib.h	5;"	d
_REPARSE_DATA_BUFFER	w32.c	/^typedef struct _REPARSE_DATA_BUFFER {$/;"	s	file:
_REPARSE_DATA_BUFFER::DUMMYUNIONNAME	w32.c	/^    } DUMMYUNIONNAME;$/;"	m	struct:_REPARSE_DATA_BUFFER	typeref:union:_REPARSE_DATA_BUFFER::__anon66	file:	access:public
_REPARSE_DATA_BUFFER::ReparseDataLength	w32.c	/^    USHORT ReparseDataLength;$/;"	m	struct:_REPARSE_DATA_BUFFER	file:	access:public
_REPARSE_DATA_BUFFER::ReparseTag	w32.c	/^    ULONG  ReparseTag;$/;"	m	struct:_REPARSE_DATA_BUFFER	file:	access:public
_REPARSE_DATA_BUFFER::Reserved	w32.c	/^    USHORT Reserved;$/;"	m	struct:_REPARSE_DATA_BUFFER	file:	access:public
_REPARSE_DATA_BUFFER::__anon66::GenericReparseBuffer	w32.c	/^        } GenericReparseBuffer;$/;"	m	union:_REPARSE_DATA_BUFFER::__anon66	typeref:struct:_REPARSE_DATA_BUFFER::__anon66::__anon69	file:	access:public
_REPARSE_DATA_BUFFER::__anon66::MountPointReparseBuffer	w32.c	/^        } MountPointReparseBuffer;$/;"	m	union:_REPARSE_DATA_BUFFER::__anon66	typeref:struct:_REPARSE_DATA_BUFFER::__anon66::__anon68	file:	access:public
_REPARSE_DATA_BUFFER::__anon66::SymbolicLinkReparseBuffer	w32.c	/^        } SymbolicLinkReparseBuffer;$/;"	m	union:_REPARSE_DATA_BUFFER::__anon66	typeref:struct:_REPARSE_DATA_BUFFER::__anon66::__anon67	file:	access:public
_REPARSE_DATA_BUFFER::__anon66::__anon67::Flags	w32.c	/^            ULONG Flags;$/;"	m	struct:_REPARSE_DATA_BUFFER::__anon66::__anon67	file:	access:public
_REPARSE_DATA_BUFFER::__anon66::__anon67::PathBuffer	w32.c	/^            WCHAR PathBuffer[1];$/;"	m	struct:_REPARSE_DATA_BUFFER::__anon66::__anon67	file:	access:public
_REPARSE_DATA_BUFFER::__anon66::__anon67::PrintNameLength	w32.c	/^            USHORT PrintNameLength;$/;"	m	struct:_REPARSE_DATA_BUFFER::__anon66::__anon67	file:	access:public
_REPARSE_DATA_BUFFER::__anon66::__anon67::PrintNameOffset	w32.c	/^            USHORT PrintNameOffset;$/;"	m	struct:_REPARSE_DATA_BUFFER::__anon66::__anon67	file:	access:public
_REPARSE_DATA_BUFFER::__anon66::__anon67::SubstituteNameLength	w32.c	/^            USHORT SubstituteNameLength;$/;"	m	struct:_REPARSE_DATA_BUFFER::__anon66::__anon67	file:	access:public
_REPARSE_DATA_BUFFER::__anon66::__anon67::SubstituteNameOffset	w32.c	/^            USHORT SubstituteNameOffset;$/;"	m	struct:_REPARSE_DATA_BUFFER::__anon66::__anon67	file:	access:public
_REPARSE_DATA_BUFFER::__anon66::__anon68::PathBuffer	w32.c	/^            WCHAR PathBuffer[1];$/;"	m	struct:_REPARSE_DATA_BUFFER::__anon66::__anon68	file:	access:public
_REPARSE_DATA_BUFFER::__anon66::__anon68::PrintNameLength	w32.c	/^            USHORT PrintNameLength;$/;"	m	struct:_REPARSE_DATA_BUFFER::__anon66::__anon68	file:	access:public
_REPARSE_DATA_BUFFER::__anon66::__anon68::PrintNameOffset	w32.c	/^            USHORT PrintNameOffset;$/;"	m	struct:_REPARSE_DATA_BUFFER::__anon66::__anon68	file:	access:public
_REPARSE_DATA_BUFFER::__anon66::__anon68::SubstituteNameLength	w32.c	/^            USHORT SubstituteNameLength;$/;"	m	struct:_REPARSE_DATA_BUFFER::__anon66::__anon68	file:	access:public
_REPARSE_DATA_BUFFER::__anon66::__anon68::SubstituteNameOffset	w32.c	/^            USHORT SubstituteNameOffset;$/;"	m	struct:_REPARSE_DATA_BUFFER::__anon66::__anon68	file:	access:public
_REPARSE_DATA_BUFFER::__anon66::__anon69::DataBuffer	w32.c	/^            UCHAR  DataBuffer[1];$/;"	m	struct:_REPARSE_DATA_BUFFER::__anon66::__anon69	file:	access:public
_resetstkoflw_proc	w32fns.c	/^typedef int (__cdecl *_resetstkoflw_proc) (void);$/;"	t	file:
_Restrict	config.h	1957;"	d
_Restrict_	regex.h	566;"	d
_Restrict_	regex.h	568;"	d
_Restrict_	regex.h	570;"	d
_Restrict_arr_	regex.h	581;"	d
_Restrict_arr_	regex.h	583;"	d
_RE_SYNTAX_POSIX_COMMON	regex.h	239;"	d
_RTL_HEAP_PARAMETERS	w32heap.c	/^typedef struct _RTL_HEAP_PARAMETERS {$/;"	s	file:
_RTL_HEAP_PARAMETERS::CommitRoutine	w32heap.c	/^  PRTL_HEAP_COMMIT_ROUTINE CommitRoutine;$/;"	m	struct:_RTL_HEAP_PARAMETERS	file:	access:public
_RTL_HEAP_PARAMETERS::DeCommitFreeBlockThreshold	w32heap.c	/^  SIZE_T DeCommitFreeBlockThreshold;$/;"	m	struct:_RTL_HEAP_PARAMETERS	file:	access:public
_RTL_HEAP_PARAMETERS::DeCommitTotalFreeThreshold	w32heap.c	/^  SIZE_T DeCommitTotalFreeThreshold;$/;"	m	struct:_RTL_HEAP_PARAMETERS	file:	access:public
_RTL_HEAP_PARAMETERS::InitialCommit	w32heap.c	/^  SIZE_T InitialCommit;$/;"	m	struct:_RTL_HEAP_PARAMETERS	file:	access:public
_RTL_HEAP_PARAMETERS::InitialReserve	w32heap.c	/^  SIZE_T InitialReserve;$/;"	m	struct:_RTL_HEAP_PARAMETERS	file:	access:public
_RTL_HEAP_PARAMETERS::Length	w32heap.c	/^  ULONG Length;$/;"	m	struct:_RTL_HEAP_PARAMETERS	file:	access:public
_RTL_HEAP_PARAMETERS::MaximumAllocationSize	w32heap.c	/^  SIZE_T MaximumAllocationSize;$/;"	m	struct:_RTL_HEAP_PARAMETERS	file:	access:public
_RTL_HEAP_PARAMETERS::Reserved	w32heap.c	/^  SIZE_T Reserved[ 2 ];$/;"	m	struct:_RTL_HEAP_PARAMETERS	file:	access:public
_RTL_HEAP_PARAMETERS::SegmentCommit	w32heap.c	/^  SIZE_T SegmentCommit;$/;"	m	struct:_RTL_HEAP_PARAMETERS	file:	access:public
_RTL_HEAP_PARAMETERS::SegmentReserve	w32heap.c	/^  SIZE_T SegmentReserve;$/;"	m	struct:_RTL_HEAP_PARAMETERS	file:	access:public
_RTL_HEAP_PARAMETERS::VirtualMemoryThreshold	w32heap.c	/^  SIZE_T VirtualMemoryThreshold;$/;"	m	struct:_RTL_HEAP_PARAMETERS	file:	access:public
_set_osfhnd	w32.c	/^extern int __cdecl _set_osfhnd (int fd, long h);$/;"	p	file:	signature:(int fd, long h)
_sobuf	sysdep.c	/^char _sobuf[BUFSIZ];$/;"	v
_sobuf	sysdep.c	/^unsigned char _sobuf[BUFSIZ+8];$/;"	v
_spawnlp	sysdep.c	/^int _cdecl _spawnlp (int, const char *, const char *, ...);$/;"	p	file:	signature:(int, const char *, const char *, ...)
_start	unexw32.c	/^void _start (void);$/;"	p	file:	signature:(void)
_start	unexw32.c	/^_start (void)$/;"	f	signature:(void)
_start	unexw32.c	77;"	d	file:
_strlwr	w32font.c	1423;"	d	file:
_sys_read_ahead	w32.c	/^_sys_read_ahead (int fd)$/;"	f	signature:(int fd)
_sys_read_ahead	w32.h	/^extern int _sys_read_ahead (int fd);$/;"	p	signature:(int fd)
_sys_wait_accept	w32.c	/^_sys_wait_accept (int fd)$/;"	f	signature:(int fd)
_sys_wait_accept	w32.h	/^extern int _sys_wait_accept (int fd);$/;"	p	signature:(int fd)
_sys_wait_connect	w32.c	/^_sys_wait_connect (int fd)$/;"	f	signature:(int fd)
_sys_wait_connect	w32.h	/^extern int _sys_wait_connect (int fd);$/;"	p	signature:(int fd)
_TANDEM_SOURCE	config.h	1675;"	d
_UCHAR_T	lisp.h	2632;"	d
_UNUSED_PARAMETER_	config.h	1977;"	d
_USE_STD_STAT	config.h	1811;"	d
_WIN32_WINNT	conf_post.h	157;"	d
_WIN32_WINNT	w32fns.c	24;"	d	file:
_WIN32_WINNT	w32fns.c	25;"	d	file:
_WIN32_WINNT	w32uniscribe.c	28;"	d	file:
_WIN32_WINNT	w32uniscribe.c	29;"	d	file:
_wsa_errlist	w32.c	/^} _wsa_errlist[] = {$/;"	v	typeref:struct:__anon70
_XCharStruct	nsgui.h	/^typedef struct _XCharStruct$/;"	s
_XCharStruct::ascent	nsgui.h	/^  int ascent;$/;"	m	struct:_XCharStruct	access:public
_XCharStruct::descent	nsgui.h	/^  int descent;$/;"	m	struct:_XCharStruct	access:public
_XCharStruct::lbearing	nsgui.h	/^  int lbearing;$/;"	m	struct:_XCharStruct	access:public
_XCharStruct::rbearing	nsgui.h	/^  int rbearing;$/;"	m	struct:_XCharStruct	access:public
_XCharStruct::width	nsgui.h	/^  int width;$/;"	m	struct:_XCharStruct	access:public
_XGCValues	nsgui.h	/^typedef struct _XGCValues$/;"	s
_XGCValues	w32gui.h	/^typedef struct _XGCValues$/;"	s
_XGCValues::background	nsgui.h	/^  unsigned long background;$/;"	m	struct:_XGCValues	access:public
_XGCValues::background	w32gui.h	/^  COLORREF background;$/;"	m	struct:_XGCValues	access:public
_XGCValues::font	nsgui.h	/^  struct ns_font *font;$/;"	m	struct:_XGCValues	typeref:struct:_XGCValues::ns_font	access:public
_XGCValues::font	nsgui.h	/^  void *font;$/;"	m	struct:_XGCValues	access:public
_XGCValues::font	w32gui.h	/^  struct font *font;$/;"	m	struct:_XGCValues	typeref:struct:_XGCValues::font	access:public
_XGCValues::foreground	nsgui.h	/^  unsigned long foreground;$/;"	m	struct:_XGCValues	access:public
_XGCValues::foreground	w32gui.h	/^  COLORREF foreground;$/;"	m	struct:_XGCValues	access:public
_XImage	w32gui.h	/^typedef struct _XImage$/;"	s
_XImage::data	w32gui.h	/^  unsigned char * data;$/;"	m	struct:_XImage	access:public
_XImage::info	w32gui.h	/^  BITMAPINFO info;$/;"	m	struct:_XImage	access:public
__after_morecore_hook	gmalloc.c	/^void (*__MALLOC_HOOK_VOLATILE __after_morecore_hook) (void);$/;"	v
__alignof__	alloc.c	1394;"	d	file:
__anon103::condition	thread.h	/^  sys_cond_t condition;$/;"	m	struct:__anon103	access:public
__anon103::count	thread.h	/^  unsigned int count;$/;"	m	struct:__anon103	access:public
__anon103::owner	thread.h	/^  struct thread_state *owner;$/;"	m	struct:__anon103	typeref:struct:__anon103::thread_state	access:public
__anon104::blue	dispextern.h	/^  unsigned short red, green, blue;$/;"	m	struct:__anon104	access:public
__anon104::flags	dispextern.h	/^  char flags;$/;"	m	struct:__anon104	access:public
__anon104::green	dispextern.h	/^  unsigned short red, green, blue;$/;"	m	struct:__anon104	access:public
__anon104::pad	dispextern.h	/^  char pad;$/;"	m	struct:__anon104	access:public
__anon104::pixel	dispextern.h	/^  unsigned long pixel;$/;"	m	struct:__anon104	access:public
__anon104::red	dispextern.h	/^  unsigned short red, green, blue;$/;"	m	struct:__anon104	access:public
__anon105::ch	dispextern.h	/^  int ch;$/;"	m	struct:__anon105	access:public
__anon105::face_id	dispextern.h	/^  int face_id;$/;"	m	struct:__anon105	access:public
__anon121::mouse_face_beg_col	dispextern.h	/^  int mouse_face_beg_row, mouse_face_beg_col, mouse_face_beg_x;$/;"	m	struct:__anon121	access:public
__anon121::mouse_face_beg_row	dispextern.h	/^  int mouse_face_beg_row, mouse_face_beg_col, mouse_face_beg_x;$/;"	m	struct:__anon121	access:public
__anon121::mouse_face_beg_x	dispextern.h	/^  int mouse_face_beg_row, mouse_face_beg_col, mouse_face_beg_x;$/;"	m	struct:__anon121	access:public
__anon121::mouse_face_defer	dispextern.h	/^  bool_bf mouse_face_defer : 1;$/;"	m	struct:__anon121	access:public
__anon121::mouse_face_end_col	dispextern.h	/^  int mouse_face_end_row, mouse_face_end_col, mouse_face_end_x;$/;"	m	struct:__anon121	access:public
__anon121::mouse_face_end_row	dispextern.h	/^  int mouse_face_end_row, mouse_face_end_col, mouse_face_end_x;$/;"	m	struct:__anon121	access:public
__anon121::mouse_face_end_x	dispextern.h	/^  int mouse_face_end_row, mouse_face_end_col, mouse_face_end_x;$/;"	m	struct:__anon121	access:public
__anon121::mouse_face_face_id	dispextern.h	/^  int mouse_face_face_id;$/;"	m	struct:__anon121	access:public
__anon121::mouse_face_hidden	dispextern.h	/^  bool_bf mouse_face_hidden : 1;$/;"	m	struct:__anon121	access:public
__anon121::mouse_face_mouse_frame	dispextern.h	/^  struct frame *mouse_face_mouse_frame;$/;"	m	struct:__anon121	typeref:struct:__anon121::frame	access:public
__anon121::mouse_face_mouse_x	dispextern.h	/^  int mouse_face_mouse_x, mouse_face_mouse_y;$/;"	m	struct:__anon121	access:public
__anon121::mouse_face_mouse_y	dispextern.h	/^  int mouse_face_mouse_x, mouse_face_mouse_y;$/;"	m	struct:__anon121	access:public
__anon121::mouse_face_overlay	dispextern.h	/^  Lisp_Object mouse_face_overlay;$/;"	m	struct:__anon121	access:public
__anon121::mouse_face_past_end	dispextern.h	/^  bool_bf mouse_face_past_end : 1;$/;"	m	struct:__anon121	access:public
__anon121::mouse_face_window	dispextern.h	/^  Lisp_Object mouse_face_window;$/;"	m	struct:__anon121	access:public
__anon123::cbAuxOffset	unexelf.c	/^	long cbAuxOffset;$/;"	m	struct:__anon123	file:	access:public
__anon123::cbDnOffset	unexelf.c	/^	long cbDnOffset;$/;"	m	struct:__anon123	file:	access:public
__anon123::cbExtOffset	unexelf.c	/^	long cbExtOffset;$/;"	m	struct:__anon123	file:	access:public
__anon123::cbFdOffset	unexelf.c	/^	long cbFdOffset;$/;"	m	struct:__anon123	file:	access:public
__anon123::cbLine	unexelf.c	/^	long cbLine;$/;"	m	struct:__anon123	file:	access:public
__anon123::cbLineOffset	unexelf.c	/^	long cbLineOffset;$/;"	m	struct:__anon123	file:	access:public
__anon123::cbOptOffset	unexelf.c	/^	long cbOptOffset;$/;"	m	struct:__anon123	file:	access:public
__anon123::cbPdOffset	unexelf.c	/^	long cbPdOffset;$/;"	m	struct:__anon123	file:	access:public
__anon123::cbRfdOffset	unexelf.c	/^	long cbRfdOffset;$/;"	m	struct:__anon123	file:	access:public
__anon123::cbSsExtOffset	unexelf.c	/^	long cbSsExtOffset;$/;"	m	struct:__anon123	file:	access:public
__anon123::cbSsOffset	unexelf.c	/^	long cbSsOffset;$/;"	m	struct:__anon123	file:	access:public
__anon123::cbSymOffset	unexelf.c	/^	long cbSymOffset;$/;"	m	struct:__anon123	file:	access:public
__anon123::crfd	unexelf.c	/^	int crfd;$/;"	m	struct:__anon123	file:	access:public
__anon123::iauxMax	unexelf.c	/^	int iauxMax;$/;"	m	struct:__anon123	file:	access:public
__anon123::idnMax	unexelf.c	/^	int idnMax;$/;"	m	struct:__anon123	file:	access:public
__anon123::iextMax	unexelf.c	/^	int iextMax;$/;"	m	struct:__anon123	file:	access:public
__anon123::ifdMax	unexelf.c	/^	int ifdMax;$/;"	m	struct:__anon123	file:	access:public
__anon123::ilineMax	unexelf.c	/^	int ilineMax;$/;"	m	struct:__anon123	file:	access:public
__anon123::ioptMax	unexelf.c	/^	int ioptMax;$/;"	m	struct:__anon123	file:	access:public
__anon123::ipdMax	unexelf.c	/^	int ipdMax;$/;"	m	struct:__anon123	file:	access:public
__anon123::issExtMax	unexelf.c	/^	int issExtMax;$/;"	m	struct:__anon123	file:	access:public
__anon123::issMax	unexelf.c	/^	int issMax;$/;"	m	struct:__anon123	file:	access:public
__anon123::isymMax	unexelf.c	/^	int isymMax;$/;"	m	struct:__anon123	file:	access:public
__anon123::magic	unexelf.c	/^	short magic;$/;"	m	struct:__anon123	file:	access:public
__anon123::vstamp	unexelf.c	/^	short vstamp;$/;"	m	struct:__anon123	file:	access:public
__anon124::max_size	gtkutil.c	/^  ptrdiff_t max_size;$/;"	m	struct:__anon124	file:	access:public
__anon124::used	gtkutil.c	/^  ptrdiff_t used;$/;"	m	struct:__anon124	file:	access:public
__anon124::widgets	gtkutil.c	/^  GtkWidget **widgets;$/;"	m	struct:__anon124	file:	access:public
__anon125::fc_charset	ftfont.c	/^  FcCharSet *fc_charset;$/;"	m	struct:__anon125	file:	access:public
__anon125::lang	ftfont.c	/^  const char *lang;$/;"	m	struct:__anon125	file:	access:public
__anon125::name	ftfont.c	/^  const char *name;$/;"	m	struct:__anon125	file:	access:public
__anon125::uniquifier	ftfont.c	/^  int uniquifier[6];$/;"	m	struct:__anon125	file:	access:public
__anon126::g	ftfont.c	/^  MFLTGlyph g;$/;"	m	struct:__anon126	file:	access:public
__anon126::libotf_positioning_type	ftfont.c	/^  unsigned int libotf_positioning_type;$/;"	m	struct:__anon126	file:	access:public
__anon12::c	alloc.c	/^  char c;$/;"	m	union:__anon12	file:	access:public
__anon12::j	alloc.c	/^  sys_jmp_buf j;$/;"	m	union:__anon12	file:	access:public
__anon12::o	alloc.c	/^  max_align_t o;$/;"	m	union:__anon12	file:	access:public
__anon139::address	w32heap.c	/^  unsigned char *address;$/;"	m	struct:__anon139	file:	access:public
__anon139::occupied	w32heap.c	/^  DWORD occupied;$/;"	m	struct:__anon139	file:	access:public
__anon139::size	w32heap.c	/^  size_t size;$/;"	m	struct:__anon139	file:	access:public
__anon13::CHARTAB_SIZE_BITS	alloc.c	/^  enum CHARTAB_SIZE_BITS CHARTAB_SIZE_BITS;$/;"	m	union:__anon13	typeref:enum:__anon13::CHARTAB_SIZE_BITS	file:	access:public
__anon13::char_bits	alloc.c	/^  enum char_bits char_bits;$/;"	m	union:__anon13	typeref:enum:__anon13::char_bits	file:	access:public
__anon13::char_table_specials	alloc.c	/^  enum char_table_specials char_table_specials;$/;"	m	union:__anon13	typeref:enum:__anon13::char_table_specials	file:	access:public
__anon13::DEFAULT_HASH_SIZE	alloc.c	/^  enum DEFAULT_HASH_SIZE DEFAULT_HASH_SIZE;$/;"	m	union:__anon13	typeref:enum:__anon13::DEFAULT_HASH_SIZE	file:	access:public
__anon13::Lisp_Bits	alloc.c	/^  enum Lisp_Bits Lisp_Bits;$/;"	m	union:__anon13	typeref:enum:__anon13::Lisp_Bits	file:	access:public
__anon13::Lisp_Compiled	alloc.c	/^  enum Lisp_Compiled Lisp_Compiled;$/;"	m	union:__anon13	typeref:enum:__anon13::Lisp_Compiled	file:	access:public
__anon13::maxargs	alloc.c	/^  enum maxargs maxargs;$/;"	m	union:__anon13	typeref:enum:__anon13::maxargs	file:	access:public
__anon13::MAX_ALLOCA	alloc.c	/^  enum MAX_ALLOCA MAX_ALLOCA;$/;"	m	union:__anon13	typeref:enum:__anon13::MAX_ALLOCA	file:	access:public
__anon13::More_Lisp_Bits	alloc.c	/^  enum More_Lisp_Bits More_Lisp_Bits;$/;"	m	union:__anon13	typeref:enum:__anon13::More_Lisp_Bits	file:	access:public
__anon13::pvec_type	alloc.c	/^  enum pvec_type pvec_type;$/;"	m	union:__anon13	typeref:enum:__anon13::pvec_type	file:	access:public
__anon145::avail	regex.c	/^  size_t avail;	\/* Offset of next open position.  *\/$/;"	m	struct:__anon145	file:	access:public
__anon145::frame	regex.c	/^  size_t frame;	\/* Offset of the cur constructed frame.  *\/$/;"	m	struct:__anon145	file:	access:public
__anon145::size	regex.c	/^  size_t size;$/;"	m	struct:__anon145	file:	access:public
__anon145::stack	regex.c	/^  fail_stack_elt_t *stack;$/;"	m	struct:__anon145	file:	access:public
__anon146::begalt_offset	regex.c	/^  pattern_offset_t begalt_offset;$/;"	m	struct:__anon146	file:	access:public
__anon146::fixup_alt_jump	regex.c	/^  pattern_offset_t fixup_alt_jump;$/;"	m	struct:__anon146	file:	access:public
__anon146::laststart_offset	regex.c	/^  pattern_offset_t laststart_offset;$/;"	m	struct:__anon146	file:	access:public
__anon146::regnum	regex.c	/^  regnum_t regnum;$/;"	m	struct:__anon146	file:	access:public
__anon147::avail	regex.c	/^  size_t avail;			\/* Offset of next open position.  *\/$/;"	m	struct:__anon147	file:	access:public
__anon147::size	regex.c	/^  size_t size;$/;"	m	struct:__anon147	file:	access:public
__anon147::stack	regex.c	/^  compile_stack_elt_t *stack;$/;"	m	struct:__anon147	file:	access:public
__anon157::key	font.c	/^  int key;$/;"	m	struct:__anon157	file:	access:public
__anon157::validator	font.c	/^  Lisp_Object (*validator) (Lisp_Object prop, Lisp_Object val);$/;"	m	struct:__anon157	file:	access:public
__anon2::file_header	unexcw.c	/^  FILHDR file_header;$/;"	m	struct:__anon2	file:	access:public
__anon2::file_optional_header	unexcw.c	/^  PEAOUTHDR file_optional_header;$/;"	m	struct:__anon2	file:	access:public
__anon2::section_header	unexcw.c	/^  SCNHDR section_header[32];$/;"	m	struct:__anon2	file:	access:public
__anon39::decorations	xfns.c	/^    unsigned long decorations;$/;"	m	struct:__anon39	file:	access:public
__anon39::flags	xfns.c	/^    unsigned long flags;$/;"	m	struct:__anon39	file:	access:public
__anon39::functions	xfns.c	/^    unsigned long functions;$/;"	m	struct:__anon39	file:	access:public
__anon39::input_mode	xfns.c	/^    long input_mode;$/;"	m	struct:__anon39	file:	access:public
__anon39::status	xfns.c	/^    unsigned long status;$/;"	m	struct:__anon39	file:	access:public
__anon43::DebugInfo	systhread.h	/^  struct _CRITICAL_SECTION_DEBUG *DebugInfo;$/;"	m	struct:__anon43	typeref:struct:__anon43::_CRITICAL_SECTION_DEBUG	access:public
__anon43::LockCount	systhread.h	/^  long LockCount;$/;"	m	struct:__anon43	access:public
__anon43::LockSemaphore	systhread.h	/^  void *LockSemaphore;$/;"	m	struct:__anon43	access:public
__anon43::OwningThread	systhread.h	/^  void *OwningThread;$/;"	m	struct:__anon43	access:public
__anon43::RecursionCount	systhread.h	/^  long RecursionCount;$/;"	m	struct:__anon43	access:public
__anon43::SpinCount	systhread.h	/^  unsigned long SpinCount;$/;"	m	struct:__anon43	access:public
__anon45::events	systhread.h	/^  void *events[CONDV_MAX];$/;"	m	struct:__anon45	access:public
__anon45::initialized	systhread.h	/^  bool initialized;$/;"	m	struct:__anon45	access:public
__anon45::wait_count	systhread.h	/^  unsigned wait_count;$/;"	m	struct:__anon45	access:public
__anon45::wait_count_lock	systhread.h	/^  w32thread_critsect wait_count_lock;$/;"	m	struct:__anon45	access:public
__anon46::height	nsgui.h	/^      unsigned width, height;$/;"	m	struct:__anon46	access:public
__anon46::width	nsgui.h	/^      unsigned width, height;$/;"	m	struct:__anon46	access:public
__anon46::x	nsgui.h	/^      int x, y;$/;"	m	struct:__anon46	access:public
__anon46::y	nsgui.h	/^      int x, y;$/;"	m	struct:__anon46	access:public
__anon52::at	filelock.c	/^  char *at, *dot, *colon;$/;"	m	struct:__anon52	file:	access:public
__anon52::colon	filelock.c	/^  char *at, *dot, *colon;$/;"	m	struct:__anon52	file:	access:public
__anon52::dot	filelock.c	/^  char *at, *dot, *colon;$/;"	m	struct:__anon52	file:	access:public
__anon52::user	filelock.c	/^  char user[MAX_LFINFO + 1 + sizeof " (pid )" - sizeof "."];$/;"	m	struct:__anon52	file:	access:public
__anon57::rm_eo	regex.h	/^  regoff_t rm_eo;  \/* Byte offset from string's start to substring's end.  *\/$/;"	m	struct:__anon57	access:public
__anon57::rm_so	regex.h	/^  regoff_t rm_so;  \/* Byte offset from string's start to substring's start.  *\/$/;"	m	struct:__anon57	access:public
__anon60::busy	gmalloc.c	/^      } busy;$/;"	m	union:__anon60	typeref:struct:__anon60::__anon61	file:	access:public
__anon60::free	gmalloc.c	/^      } free;$/;"	m	union:__anon60	typeref:struct:__anon60::__anon64	file:	access:public
__anon60::__anon61::info	gmalloc.c	/^	  } info;$/;"	m	struct:__anon60::__anon61	typeref:union:__anon60::__anon61::__anon62	file:	access:public
__anon60::__anon61::type	gmalloc.c	/^	int type;$/;"	m	struct:__anon60::__anon61	file:	access:public
__anon60::__anon61::__anon62::frag	gmalloc.c	/^	      } frag;$/;"	m	union:__anon60::__anon61::__anon62	typeref:struct:__anon60::__anon61::__anon62::__anon63	file:	access:public
__anon60::__anon61::__anon62::size	gmalloc.c	/^	    ptrdiff_t size;$/;"	m	union:__anon60::__anon61::__anon62	file:	access:public
__anon60::__anon61::__anon62::__anon63::first	gmalloc.c	/^		size_t first; \/* First free fragment of the block.  *\/$/;"	m	struct:__anon60::__anon61::__anon62::__anon63	file:	access:public
__anon60::__anon61::__anon62::__anon63::nfree	gmalloc.c	/^		size_t nfree; \/* Free frags in a fragmented block.  *\/$/;"	m	struct:__anon60::__anon61::__anon62::__anon63	file:	access:public
__anon60::__anon64::next	gmalloc.c	/^	size_t next;	\/* Index of next free cluster.  *\/$/;"	m	struct:__anon60::__anon64	file:	access:public
__anon60::__anon64::prev	gmalloc.c	/^	size_t prev;	\/* Index of previous free cluster.  *\/$/;"	m	struct:__anon60::__anon64	file:	access:public
__anon60::__anon64::size	gmalloc.c	/^	size_t size;	\/* Size (in blocks) of a free cluster.  *\/$/;"	m	struct:__anon60::__anon64	file:	access:public
__anon6::n	alloc.c	/^  } n;$/;"	m	union:__anon6	typeref:struct:__anon6::__anon7	file:	access:public
__anon6::string	alloc.c	/^  struct Lisp_String *string;$/;"	m	union:__anon6	typeref:struct:__anon6::Lisp_String	file:	access:public
__anon6::__anon7::nbytes	alloc.c	/^    ptrdiff_t nbytes;$/;"	m	struct:__anon6::__anon7	file:	access:public
__anon6::__anon7::string	alloc.c	/^    struct Lisp_String *string;$/;"	m	struct:__anon6::__anon7	typeref:struct:__anon6::__anon7::Lisp_String	file:	access:public
__anon70::errnum	w32.c	/^  int errnum;$/;"	m	struct:__anon70	file:	access:public
__anon70::msg	w32.c	/^  const char * msg;$/;"	m	struct:__anon70	file:	access:public
__anon73::cbSize	w32fns.c	/^  DWORD cbSize;$/;"	m	struct:__anon73	file:	access:public
__anon73::rcTitleBar	w32fns.c	/^  RECT  rcTitleBar;$/;"	m	struct:__anon73	file:	access:public
__anon73::rgstate	w32fns.c	/^  DWORD rgstate[C_CHILDREN_TITLEBAR+1];$/;"	m	struct:__anon73	file:	access:public
__anon74::alt_hooked	w32fns.c	/^  char alt_hooked[256];  \/* hook Alt+[this key]? *\/$/;"	m	struct:__anon74	file:	access:public
__anon74::console	w32fns.c	/^  HWND console;   \/* console window handle *\/$/;"	m	struct:__anon74	file:	access:public
__anon74::hook	w32fns.c	/^  HHOOK hook;     \/* hook handle *\/$/;"	m	struct:__anon74	file:	access:public
__anon74::hook_count	w32fns.c	/^  int hook_count; \/* counter, if several windows are created *\/$/;"	m	struct:__anon74	file:	access:public
__anon74::lwindown	w32fns.c	/^  int lwindown;      \/* Left Windows key currently pressed (and hooked) *\/$/;"	m	struct:__anon74	file:	access:public
__anon74::lwin_hooked	w32fns.c	/^  char lwin_hooked[256]; \/* hook left Win+[this key]? *\/$/;"	m	struct:__anon74	file:	access:public
__anon74::rwindown	w32fns.c	/^  int rwindown;      \/* Right Windows key currently pressed (and hooked) *\/$/;"	m	struct:__anon74	file:	access:public
__anon74::rwin_hooked	w32fns.c	/^  char rwin_hooked[256]; \/* hook right Win+[this key]? *\/$/;"	m	struct:__anon74	file:	access:public
__anon74::send_win_up	w32fns.c	/^  int send_win_up;   \/* Pass through the keyup for this Windows key press? *\/$/;"	m	struct:__anon74	file:	access:public
__anon74::suppress_lone	w32fns.c	/^  int suppress_lone; \/* Suppress simulated Windows keydown-keyup for this press? *\/$/;"	m	struct:__anon74	file:	access:public
__anon74::winsdown	w32fns.c	/^  int winsdown;      \/* Number of handled keys currently pressed *\/$/;"	m	struct:__anon74	file:	access:public
__anon74::winseen	w32fns.c	/^  int winseen;       \/* Windows keys seen during this press? *\/$/;"	m	struct:__anon74	file:	access:public
__anon76::filesize	unexmacosx.c	/^  vm_size_t filesize;$/;"	m	struct:__anon76	file:	access:public
__anon76::range	unexmacosx.c	/^  vm_range_t range;$/;"	m	struct:__anon76	file:	access:public
__anon78::current	charset.c	/^  struct charset *current;$/;"	m	struct:__anon78	typeref:struct:__anon78::charset	file:	access:public
__anon78::for_encoder	charset.c	/^  short for_encoder;$/;"	m	struct:__anon78	file:	access:public
__anon78::max_char	charset.c	/^  int min_char, max_char;$/;"	m	struct:__anon78	file:	access:public
__anon78::min_char	charset.c	/^  int min_char, max_char;$/;"	m	struct:__anon78	file:	access:public
__anon78::table	charset.c	/^  } table;$/;"	m	struct:__anon78	typeref:union:__anon78::__anon79	file:	access:public
__anon78::zero_index_char	charset.c	/^  int zero_index_char;$/;"	m	struct:__anon78	file:	access:public
__anon78::__anon79::decoder	charset.c	/^    int decoder[0x10000];$/;"	m	union:__anon78::__anon79	file:	access:public
__anon78::__anon79::encoder	charset.c	/^    unsigned short encoder[0x20000];$/;"	m	union:__anon78::__anon79	file:	access:public
__anon81::orig_val	ccl.c	/^  int orig_val;$/;"	m	struct:__anon81	file:	access:public
__anon81::rest_length	ccl.c	/^  int rest_length;$/;"	m	struct:__anon81	file:	access:public
__anon84::bytes	image.c	/^  unsigned char *bytes;$/;"	m	struct:__anon84	file:	access:public
__anon84::index	image.c	/^  ptrdiff_t index;$/;"	m	struct:__anon84	file:	access:public
__anon84::len	image.c	/^  ptrdiff_t len;$/;"	m	struct:__anon84	file:	access:public
__anon85::bytes	image.c	/^  unsigned char *bytes;$/;"	m	struct:__anon85	file:	access:public
__anon85::index	image.c	/^  ptrdiff_t index;$/;"	m	struct:__anon85	file:	access:public
__anon85::len	image.c	/^  ptrdiff_t len;$/;"	m	struct:__anon85	file:	access:public
__anon86::height	w32gui.h	/^    unsigned width, height;$/;"	m	struct:__anon86	access:public
__anon86::width	w32gui.h	/^    unsigned width, height;$/;"	m	struct:__anon86	access:public
__anon86::x	w32gui.h	/^    int x, y;$/;"	m	struct:__anon86	access:public
__anon86::y	w32gui.h	/^    int x, y;$/;"	m	struct:__anon86	access:public
__anon89::bits	w32.h	/^  unsigned int bits[FD_SETSIZE \/ 32];$/;"	m	struct:__anon89	access:public
__anon91::cp	w32.h	/^  child_process *  cp;$/;"	m	struct:__anon91	access:public
__anon91::flags	w32.h	/^  unsigned         flags;$/;"	m	struct:__anon91	access:public
__anon91::hnd	w32.h	/^  HANDLE           hnd;$/;"	m	struct:__anon91	access:public
__anon98::bar_cursor	widgetprv.h	/^  Boolean	bar_cursor;		\/* 1 if bar, 0 if block *\/$/;"	m	struct:__anon98	access:public
__anon98::bell_volume	widgetprv.h	/^  int		bell_volume;		\/* how loud is beep *\/$/;"	m	struct:__anon98	access:public
__anon98::cursor_color	widgetprv.h	/^  Pixel		cursor_color;		\/* text cursor color *\/$/;"	m	struct:__anon98	access:public
__anon98::foreground_pixel	widgetprv.h	/^  Pixel		foreground_pixel;	\/* foreground *\/$/;"	m	struct:__anon98	access:public
__anon98::frame	widgetprv.h	/^  struct frame *frame;		\/* the *emacs* frame object *\/$/;"	m	struct:__anon98	typeref:struct:__anon98::frame	access:public
__anon98::geometry	widgetprv.h	/^  char *	geometry;		\/* geometry spec of this frame *\/$/;"	m	struct:__anon98	access:public
__anon98::iconic	widgetprv.h	/^  Boolean	iconic;			\/* whether this frame is iconic *\/$/;"	m	struct:__anon98	access:public
__anon98::interline	widgetprv.h	/^  int		interline;		\/* skips between lines *\/$/;"	m	struct:__anon98	access:public
__anon98::internal_border_width	widgetprv.h	/^  int		internal_border_width;	\/* internal borders *\/$/;"	m	struct:__anon98	access:public
__anon98::minibuffer	widgetprv.h	/^  int		minibuffer;	\/* 0: normal frames with minibuffers.$/;"	m	struct:__anon98	access:public
__anon98::unsplittable	widgetprv.h	/^  Boolean	unsplittable;	\/* frame can only have one window *\/$/;"	m	struct:__anon98	access:public
__anon98::visual_bell	widgetprv.h	/^  Boolean	visual_bell;		\/* flash instead of beep *\/$/;"	m	struct:__anon98	access:public
__anon99::dummy	widgetprv.h	/^    int dummy;$/;"	m	struct:__anon99	access:public
__builtin_assume_aligned	conf_post.h	95;"	d
__builtin_unwind_init	alloc.c	5016;"	d	file:
__builtin_unwind_init	alloc.c	5018;"	d	file:
__builtin_unwind_init	alloc.c	5021;"	d	file:
__executable_start	dispnew.c	/^__executable_start (void)$/;"	f	signature:(void)
__executable_start	lisp.h	/^_Noreturn void __executable_start (void);$/;"	p	signature:(void)
__EXTENSIONS__	config.h	1685;"	d
__GNUC_STDC_INLINE__	config.h	1926;"	d
__has_attribute	conf_post.h	64;"	d
__has_attribute_alloc_size	conf_post.h	65;"	d
__has_attribute_cleanup	conf_post.h	66;"	d
__has_attribute_externally_visible	conf_post.h	67;"	d
__has_attribute_no_address_safety_analysis	conf_post.h	68;"	d
__has_attribute_no_sanitize_address	conf_post.h	69;"	d
__has_builtin	conf_post.h	76;"	d
__has_builtin___builtin_assume_aligned	conf_post.h	77;"	d
__has_feature	conf_post.h	83;"	d
__malloc_extra_blocks	gmalloc.c	/^size_t __malloc_extra_blocks;$/;"	v	file:
__MALLOC_HOOK_VOLATILE	alloc.c	171;"	d	file:
__MALLOC_HOOK_VOLATILE	gmalloc.c	50;"	d	file:
__MALLOC_HOOK_VOLATILE	vm-limit.c	54;"	d	file:
__malloc_initialize	gmalloc.c	/^extern int __malloc_initialize (void);$/;"	p	file:	signature:(void)
__malloc_initialize	gmalloc.c	/^__malloc_initialize (void)$/;"	f	signature:(void)
__malloc_initialized	gmalloc.c	/^int __malloc_initialized;$/;"	v
__malloc_initialize_hook	gmalloc.c	/^void (*__MALLOC_HOOK_VOLATILE __malloc_initialize_hook) (void);$/;"	v
__MINGW_MAJOR_VERSION	image.c	9049;"	d	file:
__MINGW_MAJOR_VERSION	image.c	9050;"	d	file:
__MINGW_MAJOR_VERSION	image.c	9060;"	d	file:
__MINGW_MAJOR_VERSION	image.c	9061;"	d	file:
__morecore	gmalloc.c	/^void *(*__morecore) (ptrdiff_t) = gdefault_morecore;$/;"	v
__morecore	gmalloc.c	/^void *(*__morecore) (ptrdiff_t);$/;"	v
__NSGUI_H__	nsgui.h	20;"	d
__restrict__	config.h	1958;"	d
__sbrk	gmalloc.c	/^extern void *__sbrk (ptrdiff_t increment);$/;"	p	file:	signature:(ptrdiff_t increment)
__sbrk	gmalloc.c	1487;"	d	file:
__STDC_WANT_IEC_60559_ATTRIBS_EXT__	config.h	1647;"	d
__STDC_WANT_IEC_60559_BFP_EXT__	config.h	1651;"	d
__STDC_WANT_IEC_60559_DFP_EXT__	config.h	1655;"	d
__STDC_WANT_IEC_60559_FUNCS_EXT__	config.h	1659;"	d
__STDC_WANT_IEC_60559_TYPES_EXT__	config.h	1663;"	d
__STDC_WANT_LIB_EXT2__	config.h	1667;"	d
__STDC_WANT_MATH_SPEC_FUNCS__	config.h	1671;"	d
__TIMEVAL__	systime.h	39;"	d
__TIMEVAL__	xfaces.c	249;"	d	file:
__USE_MINGW_ANSI_STDIO	config.h	1403;"	d
__WIN32__	image.c	6379;"	d	file:
